Gadgets information
============================================================
0x00000000004b2018 : adc ah, 0xf9 ; dec dword ptr [rdi - 0x2e] ; stc ; call qword ptr [rdi]
0x000000000042da9a : adc ah, byte ptr [rax] ; or byte ptr [rax], al ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000043e8af : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e919 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004a89ed : adc al, 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000004d22b8 : adc al, 0 ; add byte ptr [rax], al ; and byte ptr [rbx + 0x1b900000], 0xfd ; jmp qword ptr [rcx]
0x00000000004ce2b8 : adc al, 0 ; add byte ptr [rax], al ; and byte ptr [rbx], 0 ; and bl, ah ; clc ; call qword ptr [rdi]
0x00000000004cfd20 : adc al, 0 ; add byte ptr [rax], al ; call 0x784cfdb1
0x00000000004ce5d0 : adc al, 0 ; add byte ptr [rax], al ; cwde ; add byte ptr [rax], al ; mov dh, bh ; clc ; call qword ptr [rbx]
0x00000000004cbe00 : adc al, 0 ; add byte ptr [rax], al ; enter 0x3e, 0 ; adc rsi, rsi ; call rsp
0x00000000004cfb10 : adc al, 0 ; add byte ptr [rax], al ; fdivr dword ptr [rbx] ; add al, cl ; fdivp st(2) ; jmp qword ptr [rax]
0x00000000004cd0b0 : adc al, 0 ; add byte ptr [rax], al ; js 0x4cd112 ; add byte ptr [rax], al ; or byte ptr [rcx], cl ; clc ; call qword ptr [rcx]
0x00000000004cdfb0 : adc al, 0 ; add byte ptr [rax], al ; js 0x4ce021 ; add byte ptr [rax], al ; cmp bh, bl ; std ; jmp qword ptr [rdi]
0x00000000004d1b18 : adc al, 0 ; add byte ptr [rax], al ; loopne 0x4d1ac4 ; add byte ptr [rax], al ; push rax ; cld ; jmp qword ptr [rdx]
0x00000000004cbcc8 : adc al, 0 ; add byte ptr [rax], al ; nop ; cmp eax, 0x9e000000 ; cmc ; jmp qword ptr [rbx]
0x00000000004cfac8 : adc al, 0 ; add byte ptr [rax], al ; nop ; jnp 0x4cfada ; add byte ptr [rax], dh ; fdivr st(2) ; jmp rdx
0x00000000004cbd88 : adc al, 0 ; add byte ptr [rax], al ; push rax ; add byte ptr ds:[rax], al ; add byte ptr [rsi], 0xf6 ; jmp qword ptr [rbx]
0x00000000004cd078 : adc al, 0 ; add byte ptr [rax], al ; push rcx ; add byte ptr [rax], al ; mov al, 8 ; clc ; call qword ptr [rdx]
0x000000000048824a : adc al, 0 ; add byte ptr [rax], al ; syscall
0x00000000004287c8 : adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042ecf5 : adc al, 0x13 ; jmp rdx
0x0000000000426fb5 : adc al, 0x16 ; sub eax, edx ; ret
0x000000000042c3c5 : adc al, 0x16 ; test r8d, r8d ; je 0x42c3d7 ; xchg eax, edx ; sub eax, edx ; ret
0x00000000004a870a : adc al, 0x24 ; mov edi, 1 ; call rax
0x00000000004a8dbd : adc al, 0x24 ; mov esi, 1 ; mov edi, 1 ; call rax
0x000000000044a8a1 : adc al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x44a8c5 ; add rsp, 0x28 ; ret
0x000000000044b800 : adc al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x44b823 ; add rsp, 0x28 ; ret
0x00000000004982d7 : adc al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x4982f0 ; add rsp, 0x38 ; ret
0x00000000004983ba : adc al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x4983e0 ; add rsp, 0x38 ; ret
0x000000000040fbd1 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000040fcbd : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x0000000000436c5c : adc al, 0x2a ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000445c80 : adc al, 0x48 ; lea eax, [rdi + 0x14] ; ret
0x000000000041791b : adc al, 0x48 ; mov eax, dword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004a899b : adc al, 0x49 ; cmp dword ptr [rcx + 0x38], 0 ; je 0x4a89cc ; add rsp, 0x18 ; ret
0x000000000047bdd8 : adc al, 0x90 ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000043fd40 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000043e46e : adc al, 0x91 ; sub eax, edx ; ret
0x000000000042ecf1 : adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000040e580 : adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x0000000000498148 : adc al, 0xa ; and al, 0 ; mov qword ptr [rax], rdx ; add rsp, 8 ; ret
0x0000000000425bb7 : adc al, 0xa ; jmp r10
0x0000000000427123 : adc al, 0xa ; sub eax, edx ; ret
0x00000000004481ff : adc al, 0xe ; cmp rdi, rdx ; jb 0x448212 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000042b59a : adc al, 0xe ; sub eax, edx ; ret
0x000000000042d26a : adc al, 0xe ; sub eax, edx ; vzeroupper ; ret
0x000000000040526f : adc al, 0xf ; retf 0xfa83
0x000000000042fa6b : adc al, 0xf ; sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000413c2b : adc al, 0xf6 ; ret 0x7420
0x00000000004a8a8d : adc al, 0xf7 ; ret
0x00000000004afcc9 : adc al, 0xf8 ; inc dword ptr [rax + 0x10fff816] ; or eax, edi ; call rax
0x00000000004afce9 : adc al, 0xf8 ; inc dword ptr [rax + 0x16] ; clc ; call rax
0x00000000004d1549 : adc al, 0xfc ; call qword ptr [rdx]
0x000000000046a1d8 : adc al, 0xff ; add byte ptr es:[rbp + 0xb], dh ; jmp 0x46a20f
0x00000000004257d6 : adc al, 1 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000424122 : adc al, 1 ; cmp dl, r8b ; jne 0x42411b ; sub rax, 0x10 ; ret
0x000000000041e48d : adc al, 9 ; add byte ptr [rax - 0x17], dl ; ret
0x0000000000495931 : adc al, 9 ; ret 0x8d74
0x000000000046bc1f : adc al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; test dword ptr [rax], esi ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0x8c20
0x000000000043ea57 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043eac1 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a178 : adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004b0754 : adc al, byte ptr [rbp - 0x7b6d0008] ; clc ; call qword ptr [rdx]
0x00000000004b0744 : adc al, byte ptr [rdi - 0x796d0008] ; clc ; call qword ptr [rdx]
0x00000000004a6691 : adc al, byte ptr [rdx] ; add bl, dh ; movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000401300 : adc al, byte ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000040234a : adc al, byte ptr [rdx] ; add byte ptr [rax], al ; call qword ptr [rbx + 0x10]
0x00000000004b074c : adc al, byte ptr [rsi - 0x7a6d0008] ; clc ; call qword ptr [rdx]
0x000000000049f7ff : adc al, byte ptr cs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000048a624 : adc al, ch ; imul byte ptr [rcx + 1] ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000412847 : adc al, ch ; ret
0x0000000000419bd8 : adc al, ch ; ret 0xfe68
0x00000000004a3c18 : adc al, ch ; ret 0xfe89
0x000000000041a9cf : adc bh, al ; add eax, 0x2bf4b6 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004afce5 : adc bh, al ; inc dword ptr [rax + 0x14] ; clc ; inc dword ptr [rax + 0x16] ; clc ; call rax
0x0000000000425b1a : adc bh, byte ptr [rbx + 0xf480001] ; ret 0x66c3
0x0000000000442145 : adc bl, ch ; call 0xffffffffc414aa9a
0x0000000000442065 : adc bl, ch ; call 0xffffffffc43ca9ba
0x0000000000496052 : adc bl, ch ; jno 0x4960a8 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004b1a20 : adc bl, cl ; stc ; push qword ptr [rax + rcx*8] ; stc ; push rax ; retf 0xfff9
0x0000000000445c56 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000004455c6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000004455b6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000445647 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000445627 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000445587 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000445728 : adc bl, dh ; movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000004455c5 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000004455b5 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000445626 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000445586 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000048951a : adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x000000000041a4b5 : adc byte ptr [r11 + 0x5d], r11b ; ret
0x0000000000411a55 : adc byte ptr [r11 + r9*4 - 0x59], r9b ; cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x00000000004a5725 : adc byte ptr [r13 - 0x267bf040], al ; add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000042c69f : adc byte ptr [r14 + 0xf], r12b ; xlatb ; rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x0000000000496abe : adc byte ptr [r15], cl ; sahf ; ret 0x3948
0x000000000045da09 : adc byte ptr [r15], cl ; sahf ; ret 0x894c
0x00000000004972d3 : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3949
0x0000000000448332 : adc byte ptr [r15], r9b ; adc dword ptr [rdi + rdx - 0x10], edx ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x000000000045cc25 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3948
0x000000000045d406 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3949
0x000000000048bfff : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000412722 : adc byte ptr [r8 + 1], r9b ; ret
0x0000000000470345 : adc byte ptr [r8 - 0x73], r9b ; jg 0x470366 ; mov r12, rax ; call 0x47c56b
0x0000000000470359 : adc byte ptr [r8 - 0x75], cl ; push rbx ; sbb byte ptr [rax + 1], cl ; ret 0x14c
0x0000000000419a9f : adc byte ptr [r8 - 0x77], r9b ; ret 0xf8b
0x000000000045da02 : adc byte ptr [r8 - 0x7b], cl ; ror byte ptr [rcx - 0x73], 0x43 ; adc byte ptr [rdi], cl ; sahf ; ret 0x894c
0x000000000048661f : adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000041274d : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x0000000000419684 : adc byte ptr [r9], r13b ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000042c4a6 : adc byte ptr [rax + 0x29], cl ; retf 0x860f
0x00000000004453da : adc byte ptr [rax + 0x29], cl ; retf 0x8d4c
0x0000000000496ab8 : adc byte ptr [rax + 0x39], cl ; enter -0x72b8, 0x41 ; adc byte ptr [rdi], cl ; sahf ; ret 0x3948
0x00000000004972cd : adc byte ptr [rax + 0x39], cl ; ret
0x000000000041fd23 : adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000041c05c : adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000041c3d8 : adc byte ptr [rax + 0x39], cl ; ret 0xb277
0x0000000000424d16 : adc byte ptr [rax + 0x39], cl ; ret 0xf475
0x0000000000496ab7 : adc byte ptr [rax + 0x39], r9b ; enter -0x72b8, 0x41 ; adc byte ptr [rdi], cl ; sahf ; ret 0x3948
0x00000000004a3a4f : adc byte ptr [rax + 0x3b], cl ; sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x000000000048c000 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x000000000041e01c : adc byte ptr [rax + 0xb8002b], bl ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x000000000041432e : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000412723 : adc byte ptr [rax + 1], cl ; ret
0x0000000000411b27 : adc byte ptr [rax + 1], cl ; ret 0x2b48
0x00000000004a59ea : adc byte ptr [rax + 1], cl ; retf 0x42f6
0x000000000044c247 : adc byte ptr [rax + 9], cl ; retf 0x8948
0x00000000004afcc8 : adc byte ptr [rax + rdi*8], 0xff ; adc byte ptr [rsi], 0xf8 ; call qword ptr [rax]
0x00000000004afec8 : adc byte ptr [rax + rdi*8], bh ; call qword ptr [rax]
0x000000000040217e : adc byte ptr [rax - 0x39], cl ; ret 0
0x00000000004895bf : adc byte ptr [rax - 0x73], cl ; add dword ptr [rax - 0x77], r9d ; add eax, 0x250f25 ; ret
0x0000000000470346 : adc byte ptr [rax - 0x73], cl ; jg 0x470365 ; mov r12, rax ; call 0x47c56a
0x000000000047fd55 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000047fd54 : adc byte ptr [rax - 0x73], r9b ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000416b13 : adc byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rax + 0x39] ; retf
0x0000000000418007 : adc byte ptr [rax - 0x75], cl ; add rsp, 0x20 ; pop rbx ; jmp rax
0x00000000004a458f : adc byte ptr [rax - 0x75], cl ; cmp cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x000000000047e58b : adc byte ptr [rax - 0x75], cl ; je 0x47e5c0 ; sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov r9, r14 ; call rbx
0x000000000047035a : adc byte ptr [rax - 0x75], cl ; push rbx ; sbb byte ptr [rax + 1], cl ; ret 0x14c
0x000000000047aa24 : adc byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000040a859 : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call 0x407368
0x000000000041dcbd : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call rcx
0x000000000044daa5 : adc byte ptr [rax - 0x77], cl ; and sil, al ; sub byte ptr [rcx], al ; ret
0x000000000045a328 : adc byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000047aa67 : adc byte ptr [rax - 0x77], cl ; jo 0x47aa85 ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000004897d7 : adc byte ptr [rax - 0x77], cl ; or byte ptr [r8 - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000047aa27 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000047aa2b : adc byte ptr [rax - 0x77], cl ; ret
0x000000000048de94 : adc byte ptr [rax - 0x77], cl ; ret 0x2f75
0x00000000004234cf : adc byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000041f091 : adc byte ptr [rax - 0x77], cl ; ret 0x8d4c
0x000000000048deae : adc byte ptr [rax - 0x77], cl ; ret 0xec74
0x00000000004911e9 : adc byte ptr [rax - 0x77], cl ; ret 0xf748
0x0000000000419aa0 : adc byte ptr [rax - 0x77], cl ; ret 0xf8b
0x000000000047ae90 : adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x000000000041827f : adc byte ptr [rax - 0x78], al ; jl 0x4182a1 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000497aeb : adc byte ptr [rax - 0x7b], cl ; dec dword ptr [rax + 0x48e57506] ; mov eax, esi ; ret
0x000000000044ba37 : adc byte ptr [rax - 0x7b], cl ; in eax, dx ; jne 0x44ba5a ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044c5a2 : adc byte ptr [rax - 0x7b], cl ; in eax, dx ; jne 0x44c5d2 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044ba85 : adc byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + 0x35] ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044ba5d : adc byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + 0x3d] ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044c68d : adc byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + 0x5e] ; mov rdi, qword ptr [r13] ; call r12
0x000000000044c6bd : adc byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + 0x5f] ; mov rdi, qword ptr [r13] ; call r12
0x000000000045da03 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rcx - 0x73], 0x43 ; adc byte ptr [rdi], cl ; sahf ; ret 0x894c
0x0000000000442327 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000442363 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000402350 : adc byte ptr [rax - 0x7d], cl ; ret
0x000000000041ab53 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000457008 : adc byte ptr [rax - 0x7d], cl ; ret 0x4902
0x000000000044be49 : adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x00000000004130b0 : adc byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004d0da3 : adc byte ptr [rax], ah ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov es, word ptr [rax] ; add ah, dh ; lahf ; sti ; call rdx
0x00000000004badb5 : adc byte ptr [rax], al ; add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x0000000000489da9 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jrcxz 0x489e01 ; mov esi, ebx ; syscall
0x000000000043e502 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x000000000042b5fa : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8349
0x0000000000440018 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x000000000044030c : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ec61 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004c8c48 : adc byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rip + 0x74a00000], cl ; hlt ; call qword ptr [rax]
0x00000000004c8c5c : adc byte ptr [rax], al ; add byte ptr [rax], al ; and al, 0xd ; add byte ptr [rax], al ; pushfq ; je 0x4c8c66 ; call qword ptr [rdx]
0x00000000004cbf70 : adc byte ptr [rax], al ; add byte ptr [rax], al ; cmp byte ptr [rax], al ; add al, ch ; fdivrp st(6) ; call qword ptr [rax]
0x00000000004ce2d0 : adc byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; movsxd rax, dword ptr [rax] ; add byte ptr [rax], ch ; jrcxz 0x4ce2de ; call qword ptr [rcx]
0x00000000004cd6d0 : adc byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; push rdi ; add byte ptr [rax], al ; mov bh, ah ; std ; jmp qword ptr [rdx]
0x00000000004876a8 : adc byte ptr [rax], al ; add byte ptr [rax], al ; div rcx ; mov rsi, rax ; call 0x42392c
0x00000000004d1d00 : adc byte ptr [rax], al ; add byte ptr [rax], al ; enter 0x9d, 0 ; test al, 0xd3 ; cld ; call qword ptr [rax]
0x00000000004cc32c : adc byte ptr [rax], al ; add byte ptr [rax], al ; hlt ; add byte ptr [r8], al ; pushfq ; retf
0x00000000004c96ac : adc byte ptr [rax], al ; add byte ptr [rax], al ; je 0x4c96d4 ; add byte ptr [rax], al ; pushfq ; mov dl, 0xf4 ; call qword ptr [rax]
0x00000000004ce2e4 : adc byte ptr [rax], al ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; movsxd rax, dword ptr [rax] ; add byte ptr [rbx], dh ; clc ; call qword ptr [rcx]
0x00000000004ca6ec : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov ah, 0x27 ; add byte ptr [rax], al ; in al, dx ; std ; hlt ; call qword ptr [rsi]
0x00000000004cbfc0 : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rax], al ; add byte ptr [rax], ch ; and dh, bh ; call qword ptr [rax]
0x000000000044ad73 : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x48 ; syscall
0x00000000004d12c4 : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rbx - 0x483c0000], ss ; sti ; call qword ptr [rdx]
0x00000000004cd4c8 : adc byte ptr [rax], al ; add byte ptr [rax], al ; nop ; push rbp ; add byte ptr [rax], al ; ja 0x4cd50d ; jmp qword ptr [rbx]
0x00000000004ca444 : adc byte ptr [rax], al ; add byte ptr [rax], al ; or al, 0x25 ; add byte ptr [rax], al ; and al, 0xf6 ; hlt ; call qword ptr [rdi]
0x00000000004d0d90 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; mov es, word ptr [rax] ; add al, bl ; lahf ; sti ; jmp qword ptr [rcx]
0x00000000004494dc : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004cc2a0 : adc byte ptr [rax], al ; add byte ptr [rax], al ; push -0x37ffffbd ; ret 0xfff7
0x00000000004cc28c : adc byte ptr [rax], al ; add byte ptr [rax], al ; push rsp ; add byte ptr [r8], al ; lodsb al, byte ptr [rsi] ; ret 0xfff7
0x00000000004ce2f8 : adc byte ptr [rax], al ; add byte ptr [rax], al ; shl byte ptr [rbx], 0 ; jrcxz 0x4ce306 ; call qword ptr [rcx]
0x00000000004cd264 : adc byte ptr [rax], al ; add byte ptr [rax], al ; sub al, 0x53 ; add byte ptr [rax], al ; push rsp ; sbb al, 0xf8 ; jmp qword ptr [rdx]
0x000000000044b761 : adc byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000004d2ae0 : adc byte ptr [rax], al ; add byte ptr [rax], al ; test al, 0xab ; add byte ptr [rax], al ; cmp byte ptr [rdx - 3], ch ; call qword ptr [rbx]
0x00000000004cc368 : adc byte ptr [rax], al ; add byte ptr [rax], al ; xor byte ptr [rax + rax], al ; ror bl, 0xf7 ; call qword ptr [rax]
0x00000000004d2e68 : adc byte ptr [rax], al ; add byte ptr [rax], al ; xor byte ptr [rdi + 0x7f200000], ch ; std ; call qword ptr [rdx]
0x0000000000428c48 : adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000046b3d6 : adc byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg dword ptr [rdx + rbx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004c8fb1 : adc byte ptr [rax], al ; add byte ptr [rsi + rax*4 - 0xc], cl ; call qword ptr [rdi]
0x000000000043c518 : adc byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x000000000044785e : adc byte ptr [rax], bh ; enter 0x275, 0x39 ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000042ec79 : adc byte ptr [rax], cl ; add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; lea r9, [r11 + r9] ; jmp r9
0x00000000004c8b87 : adc byte ptr [rax], dh ; add byte ptr [rax], al ; add byte ptr [rax + 0xc], dl ; add byte ptr [rax], al ; jb 0x4c8b93 ; jmp qword ptr [rax]
0x00000000004a99b8 : adc byte ptr [rbp + 0x13], dh ; xor eax, eax ; ret
0x00000000004a6818 : adc byte ptr [rbp + 0x1d], dh ; xor eax, eax ; ret
0x000000000045d9b9 : adc byte ptr [rbp + 0x39], cl ; retf
0x0000000000491965 : adc byte ptr [rbp + rcx*4 + 0x48], al ; dec dword ptr [rax + 1] ; retf 0xc148
0x00000000004a5726 : adc byte ptr [rbp - 0x267bf040], al ; add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000044c5d5 : adc byte ptr [rbp - 0x7b], cl ; in eax, dx ; jne 0x44c62b ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044c601 : adc byte ptr [rbp - 0x7b], cl ; in eax, dx ; jne 0x44c68b ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000401dd4 : adc byte ptr [rbx + 0x148b455], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0x8948
0x0000000000431624 : adc byte ptr [rbx + 0x2a], ch ; add byte ptr [rax + 0x39], cl ; retf 0x8949
0x000000000040245d : adc byte ptr [rbx + 0x480c247c], cl ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000414f64 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000411993 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000041a4b6 : adc byte ptr [rbx + 0x5d], bl ; ret
0x00000000004d07cf : adc byte ptr [rbx + 0x80e5802], al ; ret
0x0000000000411a56 : adc byte ptr [rbx + rcx*4 - 0x59], cl ; cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000044dab3 : adc byte ptr [rbx - 0x16], dh ; ret
0x000000000044dab2 : adc byte ptr [rbx - 0x16], sil ; ret
0x0000000000419682 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000047af5e : adc byte ptr [rbx - 0x3b7cb7fa], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000047fa2d : adc byte ptr [rbx - 0x47e7db84], cl ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000004908ac : adc byte ptr [rbx - 0x7af067fc], cl ; retf 1
0x0000000000408320 : adc byte ptr [rbx - 0x7bf0fd06], al ; retf 0xe
0x00000000004c0d68 : adc byte ptr [rbx - 4], bl ; jmp qword ptr [rbx]
0x00000000004afe44 : adc byte ptr [rbx], bh ; clc ; call qword ptr [rax]
0x00000000004afcb4 : adc byte ptr [rbx], cl ; clc ; push rax ; or al, 0xf8 ; call rax
0x000000000041274e : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x0000000000413250 : adc byte ptr [rcx + 0x39], al ; retf 0xea77
0x0000000000447e4b : adc byte ptr [rcx + rbp - 0x40], al ; cmp eax, ecx ; jle 0x447e93 ; movsxd rax, ecx ; ret
0x0000000000414ead : adc byte ptr [rcx + rcx*4 - 0x10], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004211f3 : adc byte ptr [rcx + rcx*4 - 0x12], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x000000000047c063 : adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000042361c : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040f2b4 : adc byte ptr [rcx + rcx*4 - 2], cl ; mov rdi, r13 ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000044c2b2 : adc byte ptr [rcx - 0x75], cl ; add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x000000000044bc20 : adc byte ptr [rcx - 0x75], cl ; add byte ptr [r11 + 0x94801e1], r8b ; retf 0x8949
0x000000000044c3aa : adc byte ptr [rcx - 0x75], cl ; push rax ; or byte ptr [rbx + 0x94801e2], al ; ret 0x8949
0x000000000041ac4f : adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000000004a641f : adc byte ptr [rcx - 0x77], cl ; ret
0x00000000004a624e : adc byte ptr [rcx - 0x77], cl ; retf 0xc148
0x000000000044bcd1 : adc byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; retf 0x4901
0x00000000004d304c : adc byte ptr [rcx - 0x79d00000], dh ; std ; jmp qword ptr [rax]
0x000000000041a407 : adc byte ptr [rcx - 0x7d], al ; ret
0x0000000000495ea4 : adc byte ptr [rcx - 0x7d], cl ; in eax, dx ; or byte ptr [rax + 0x39], cl ; retf
0x000000000045d9a1 : adc byte ptr [rcx - 0x7d], cl ; ret
0x000000000042b62d : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000049d4e7 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000048c95a : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000449e39 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047e6b5 : adc byte ptr [rcx], bh ; bnd je 0x47e6c8 ; test edx, edx ; jne 0x47e6ba ; ret
0x00000000004a0b90 : adc byte ptr [rcx], bh ; retf 0x557f
0x0000000000419685 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x00000000004afcd0 : adc byte ptr [rcx], cl ; clc ; call rax
0x000000000045a3a5 : adc byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000413097 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000043429c : adc byte ptr [rdi + 0x63490007], bh ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004af9f0 : adc byte ptr [rdi + rsi*8 - 0x8726f01], cl ; call qword ptr [rax]
0x00000000004afc2c : adc byte ptr [rdi], 0xf8 ; call qword ptr [rax]
0x0000000000448333 : adc byte ptr [rdi], cl ; adc dword ptr [rdi + rdx - 0x10], edx ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x000000000040525f : adc byte ptr [rdi], cl ; retf 0xd289
0x0000000000496abf : adc byte ptr [rdi], cl ; sahf ; ret 0x3948
0x000000000045da0a : adc byte ptr [rdi], cl ; sahf ; ret 0x894c
0x000000000048d95a : adc byte ptr [rdi], cl ; test ah, ah ; or byte ptr [rax], al ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x0000000000445e93 : adc byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000042ba11 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042bb01 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042b921 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004a095b : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049f45f : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x00000000004a065f : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049fd5f : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004a005f : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049f757 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042c369 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000042bec1 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000042b651 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000042c0a1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042b831 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000042c281 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042c191 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042bad3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042bbc3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b9e3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049fa04 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a0604 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a0904 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a0004 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049fd04 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000049f6fc : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b741 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x000000000049e78d : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049e5ad : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049ef85 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049dea5 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049eda5 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b8f3 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b713 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b803 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b623 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x000000000045cc26 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x000000000045d407 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x000000000044b209 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x00000000004c59cd : adc byte ptr [rdi], dl ; pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000497181 : adc byte ptr [rdi], r9b ; sahf ; ret 0x3948
0x00000000004964bd : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x00000000004c9acb : adc byte ptr [rdx + 0xe], al ; or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rbx + 0xa] ; ret
0x000000000042f1e9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004b0ac4 : adc byte ptr [rdx - 7], cl ; jmp qword ptr [rax]
0x00000000004998cd : adc byte ptr [rdx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004afec4 : adc byte ptr [rdx], bh ; clc ; call qword ptr [rax]
0x000000000042e12b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004afc30 : adc byte ptr [rdx], cl ; clc ; call rax
0x00000000004afc28 : adc byte ptr [rip + 0x1780fff8], 0xf8 ; call qword ptr [rax]
0x00000000004c8c4c : adc byte ptr [rip + 0x74a00000], cl ; hlt ; call qword ptr [rax]
0x0000000000447e2f : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x000000000042dfda : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x000000000042d5d5 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042d9d5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42d9a9
0x000000000042da53 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42da27
0x000000000042dee5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42deb9
0x000000000042df63 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42df37
0x000000000042d9d0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42d9ae
0x000000000042da4e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42da2c
0x000000000042dee0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42debe
0x000000000042df5e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42df3c
0x000000000042d5d0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000425d05 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000043a22b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000042c6a0 : adc byte ptr [rsi + 0xf], ah ; xlatb ; rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x00000000004481ab : adc byte ptr [rsi + rdx - 0x10], cl ; movups xmmword ptr [rdi], xmm0 ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000044c5bc : adc byte ptr [rsi - 3], cl ; push rbx ; ret
0x000000000049ba2d : adc byte ptr [rsi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004afccc : adc byte ptr [rsi], 0xf8 ; call qword ptr [rax]
0x00000000004a3cf9 : adc byte ptr [rsp + rcx + 0x48], dh ; lea edi, [rip + 0x2344bd] ; call 0xc
0x00000000004978ef : adc byte ptr [rsp - 4], al ; ret
0x0000000000497935 : adc byte ptr [rsp - 8], al ; ret
0x000000000049fa07 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004256fa : adc ch, byte ptr [rbp] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004c5c59 : adc ch, byte ptr [rip + 0x8acc8c6] ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004981b8 : adc ch, ch ; add al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000416b16 : adc cl, byte ptr [rax + 0x39] ; retf
0x000000000045eeef : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rbx + rcx*4 + 0x6c] ; ret 0x4c40
0x00000000004b073c : adc cl, byte ptr [rax - 0x786d0008] ; clc ; call qword ptr [rdx]
0x000000000044e06a : adc cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000004555b5 : adc cl, byte ptr [rax - 0x7d] ; stc ; add al, 0x74 ; and eax, 0x833fe283 ; retf 0x4180
0x0000000000442055 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x0000000000486b2d : adc cl, byte ptr [rbx + rcx*4 + 0x3b] ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000045eef2 : adc cl, byte ptr [rbx + rcx*4 + 0x6c] ; ret 0x4c40
0x00000000004a181a : adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000045dcc5 : adc cl, byte ptr [rcx - 0x7d] ; ret
0x00000000004a0ba9 : adc dh, byte ptr [rbx - 0xc] ; movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x000000000044539a : adc dh, byte ptr [rdi + 0x63490006] ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000041d70e : adc dh, dh ; ret 0xf0f
0x00000000004afce4 : adc dil, al ; inc dword ptr [rax + 0x14] ; clc ; inc dword ptr [rax + 0x16] ; clc ; call rax
0x0000000000479cab : adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x000000000040fbcd : adc dword ptr [rax + rcx*2 + 0x33], esp ; adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000040fc93 : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000045c5cd : adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x000000000041273f : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000004a646f : adc dword ptr [rax - 0x77], ecx ; retf
0x000000000040646f : adc dword ptr [rax - 0x7d], ecx ; ret
0x000000000047b5f4 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4110
0x000000000047af7e : adc dword ptr [rax - 1], edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044030b : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x000000000049130c : adc dword ptr [rax], eax ; add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x000000000043ebf7 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044020f : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000428ac8 : adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000045cc35 : adc dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; call qword ptr [rbx]
0x000000000042ec18 : adc dword ptr [rax], ecx ; add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; lea r9, [r11 + r9] ; jmp r9
0x000000000042d216 : adc dword ptr [rbp + 0x31000002], -0x40 ; vzeroupper ; ret
0x00000000004b11c4 : adc dword ptr [rbp - 0x6a6b0007], 0x9594fff9 ; stc ; call rdx
0x00000000004b11a0 : adc dword ptr [rbp - 0x6a7e0007], 0x9581fff9 ; stc ; call rdx
0x00000000004b1374 : adc dword ptr [rbp - 0x6a7e0007], 0x95fafff9 ; stc ; jmp rsi
0x0000000000448458 : adc dword ptr [rbx], eax ; ret
0x00000000004483d1 : adc dword ptr [rbx], esp ; ret
0x0000000000439b50 : adc dword ptr [rcx + 6], esi ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x0000000000439b57 : adc dword ptr [rcx + 7], edi ; ret
0x00000000004483c7 : adc dword ptr [rcx - 0x20], edi ; movups xmmword ptr [rcx - 0x30], xmm8 ; movups xmmword ptr [r11], xmm4 ; ret
0x00000000004483cc : adc dword ptr [rcx - 0x30], eax ; movups xmmword ptr [r11], xmm4 ; ret
0x00000000004a50d6 : adc dword ptr [rcx - 0x7d], ecx ; ret
0x00000000004397f2 : adc dword ptr [rcx - 1], ebx ; ret
0x00000000004397b6 : adc dword ptr [rcx - 1], edi ; ret
0x00000000004397eb : adc dword ptr [rcx - 2], edx ; vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x00000000004399e9 : adc dword ptr [rcx - 2], esi ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00000000004397af : adc dword ptr [rcx - 2], esi ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00000000004790ae : adc dword ptr [rcx], eax ; clc ; mov rdx, r8 ; jmp 0x479084
0x0000000000419af6 : adc dword ptr [rcx], esi ; rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x000000000044844f : adc dword ptr [rdi + 0x20], esi ; movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000448453 : adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000004c40fa : adc dword ptr [rdi + 0x5fa022da], 0xd849416 ; ret 0xbe57
0x00000000004481b3 : adc dword ptr [rdi + rdx - 0x10], ecx ; ret
0x0000000000448335 : adc dword ptr [rdi + rdx - 0x10], edx ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x000000000044833a : adc dword ptr [rdi + rdx - 0x20], ebx ; ret
0x0000000000448312 : adc dword ptr [rdi + rdx - 0x30], esi ; movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x0000000000448317 : adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x0000000000439cb2 : adc dword ptr [rdi - 7], esi ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000439cb9 : adc dword ptr [rdi - 8], edi ; ret
0x00000000004481b0 : adc dword ptr [rdi], eax ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000452bb2 : adc dword ptr [rdi], ecx ; retf 0xd285
0x0000000000447490 : adc dword ptr [rdi], ecx ; test byte ptr [rbx], bl ; add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000447fac : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000048413e : adc dword ptr [rip + 0x20000003], 0x75 ; retf 0x5f6
0x00000000004480d8 : adc dword ptr [rsi + 2], edx ; vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x00000000004480df : adc dword ptr [rsi + 3], edx ; ret
0x0000000000448175 : adc dword ptr [rsi + 6], edx ; vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x000000000044817c : adc dword ptr [rsi + 7], edx ; ret
0x0000000000447f7e : adc dword ptr [rsi - 1], edx ; ret
0x0000000000447f77 : adc dword ptr [rsi - 2], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x00000000004a6696 : adc dword ptr [rsp - 0x28], eax ; ret
0x000000000043ebf6 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000419a1a : adc eax, 0x1002c04 ; ret
0x00000000004257d4 : adc eax, 0x11407 ; cmovne rax, rdx ; ret
0x00000000004259f5 : adc eax, 0x166b6 ; and ch, 2 ; cmovne rax, rdx ; ret
0x00000000004afc29 : adc eax, 0x1780fff8 ; clc ; call qword ptr [rax]
0x0000000000424b20 : adc eax, 0x1d62b ; cmovne rax, rdx ; ret
0x00000000004259b0 : adc eax, 0x1df4b ; cmovne rax, rdx ; ret
0x00000000004ac61b : adc eax, 0x20478b48 ; test rax, rax ; je 0x4ac636 ; call rax
0x0000000000425745 : adc eax, 0x209c6 ; cmovne rax, rdx ; ret
0x0000000000424ab9 : adc eax, 0x21332 ; cmovne rax, rdx ; ret
0x00000000004a0cc5 : adc eax, 0x2395ee ; add word ptr [rdx + rax*2], 1 ; ret
0x0000000000498147 : adc eax, 0x240a14 ; mov qword ptr [rax], rdx ; add rsp, 8 ; ret
0x0000000000485e2f : adc eax, 0x2523ec ; xor eax, eax ; add rsp, 8 ; ret
0x00000000004984c5 : adc eax, 0x26c6 ; and ch, 2 ; cmovne rax, rdx ; ret
0x0000000000424af0 : adc eax, 0x272b ; cmovne rax, rdx ; ret
0x000000000045c5a9 : adc eax, 0x27c50a ; je 0x45c5c0 ; ret
0x000000000044ee87 : adc eax, 0x287c2c ; pop rbx ; ret
0x000000000045eefd : adc eax, 0x2948fffa ; ret
0x000000000041a3a4 : adc eax, 0x2bd487 ; ret
0x0000000000419a13 : adc eax, 0x2c0420 ; add dword ptr [rip + 0x2c0415], 1 ; ret
0x00000000004981b7 : adc eax, 0x2ed10 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000004c4304 : adc eax, 0x2f3ffae1 ; retf 0xb51a
0x000000000047e68b : adc eax, 0x30 ; cmovne rax, rdx ; ret
0x00000000004a999a : adc eax, 0x30ff8040 ; jne 0x4a99d3 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x00000000004aa7fa : adc eax, 0x30ff8040 ; jne 0x4aa833 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x0000000000485ef2 : adc eax, 0x4000003 ; ret
0x0000000000485e42 : adc eax, 0x4000003 ; xor eax, eax ; ret
0x0000000000478f56 : adc eax, 0x46e4d ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000445a17 : adc eax, 0x490006b1 ; movsxd rcx, dword ptr [rbx + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000424bfa : adc eax, 0x50d1 ; cmovne rax, rdx ; ret
0x000000000044a54e : adc eax, 0x66b69 ; movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x000000000043e781 : adc eax, 0x83480000 ; ret 0xe910
0x000000000049f459 : adc eax, 0x83490000 ; jmp 0x49f479
0x000000000046b0a5 : adc eax, 0x83fffffd ; ret
0x0000000000482ff1 : adc eax, 0x89000003 ; ret 0xe8c0
0x0000000000429e98 : adc eax, 0x894d0000 ; retf
0x00000000004244df : adc eax, 0x8b3cc ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000046b8e6 : adc eax, 0x8b480000 ; test dword ptr [rax], esi ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0x8c20
0x00000000004035b1 : adc eax, 0xaac12 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000004033e4 : adc eax, 0xaad87 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000403260 : adc eax, 0xaaedf ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000418283 : adc eax, 0xc2834800 ; add dword ptr [rax + 0x39], ecx ; retf 0xee75
0x000000000047eb5a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000425a74 : adc eax, 0xe697 ; cmovne rax, rdx ; ret
0x0000000000425934 : adc eax, 0xe7b7 ; cmovne rax, rdx ; ret
0x000000000048b353 : adc eax, 0xf000000 ; add eax, 0x940fc085 ; ret 0x3d
0x0000000000449004 : adc eax, 0xf880272 ; ret
0x000000000047dd85 : adc eax, 0xfffcb426 ; cmove rax, rdx ; ret
0x0000000000448fff : adc eax, dword ptr [rax + 0x157701fa] ; jb 0x449013 ; mov byte ptr [rdi], cl ; ret
0x000000000047036f : adc eax, dword ptr [rax - 0x78] ; sub byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000471463 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x000000000044006e : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049dcc9 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000428948 : adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000424abb : adc eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000049f6ff : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004959a9 : adc eax, eax ; ret
0x0000000000497776 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x00000000004c3fa5 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x0000000000413f57 : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047fd5c : adc ebx, esi ; ret
0x000000000047a360 : adc ecx, dword ptr [rax - 0x39] ; ror al, 0x92 ; insd dword ptr [rdi], dx ; add byte ptr [rax - 0x39], cl ; ret 0x8c20
0x000000000041849a : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x000000000040fd91 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004592f4 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x000000000046a896 : adc ecx, dword ptr [rcx + rax - 0x1e] ; call qword ptr [r10 + rax*8]
0x00000000004184b1 : adc edi, dword ptr [rax + 1] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004893be : adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000048945b : adc edi, dword ptr [rcx] ; ret 0xc74
0x00000000004959a1 : adc edx, ebx ; mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x00000000004c54be : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004a99ba : adc esi, dword ptr [rcx] ; rol bl, 0x66 ; nop ; mov rax, qword ptr [rsi + 8] ; ret
0x0000000000417863 : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000004a982c : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000413c29 : adc esi, dword ptr [rsp + rdx - 0xa] ; ret 0x7420
0x00000000004a309e : adc esi, esi ; add eax, 0x2378f2 ; jne 0x4a30d8 ; ret
0x00000000004cbe09 : adc esi, esi ; call rsp
0x000000000049f8e2 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000439b4f : adc qword ptr [rcx + 6], rsi ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x0000000000439b56 : adc qword ptr [rcx + 7], rdi ; ret
0x00000000004397f1 : adc qword ptr [rcx - 1], rbx ; ret
0x00000000004397b5 : adc qword ptr [rcx - 1], rdi ; ret
0x00000000004397ea : adc qword ptr [rcx - 2], rdx ; vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x00000000004399e8 : adc qword ptr [rcx - 2], rsi ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00000000004397ae : adc qword ptr [rcx - 2], rsi ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x0000000000439cb1 : adc qword ptr [rdi - 7], rsi ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000439cb8 : adc qword ptr [rdi - 8], rdi ; ret
0x0000000000447fab : adc qword ptr [rdi], rdx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x00000000004480d7 : adc qword ptr [rsi + 2], rdx ; vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x00000000004480de : adc qword ptr [rsi + 3], rdx ; ret
0x0000000000448174 : adc qword ptr [rsi + 6], rdx ; vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x000000000044817b : adc qword ptr [rsi + 7], rdx ; ret
0x0000000000447f7d : adc qword ptr [rsi - 1], rdx ; ret
0x0000000000447f76 : adc qword ptr [rsi - 2], rdx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x00000000004959a0 : adc r10, r11 ; mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x000000000048a623 : adc r8b, bpl ; imul byte ptr [rcx + 1] ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000049de30 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497775 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000004cbe08 : adc rsi, rsi ; call rsp
0x00000000004cbf8b : add ah, ah ; fdivrp st(6) ; jmp qword ptr [rsi]
0x00000000004d12cb : add ah, al ; mov bh, 0xfb ; call qword ptr [rdx]
0x00000000004c9a3b : add ah, al ; ret
0x00000000004cc2bb : add ah, al ; ret 0xfff7
0x00000000004cc35b : add ah, al ; retf
0x000000000044942e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000004c8683 : add ah, bh ; fdivr st(3), st(0) ; call rsp
0x000000000044950b : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000449479 : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004c9663 : add ah, bh ; lodsb al, byte ptr [rsi] ; hlt ; jmp rdx
0x00000000004c9a37 : add ah, bh ; sbb al, byte ptr [rax] ; add ah, al ; ret
0x00000000004b0a24 : add ah, bl ; clc ; jmp qword ptr [rax + 0x40fff8dd]
0x00000000004c54e7 : add ah, byte ptr [rbp + rdi - 0x55] ; retf 0xa2fe
0x00000000004480da : add ah, byte ptr [rdx - 0xf] ; jl 0x44812f ; adc dword ptr [rsi + 3], edx ; ret
0x00000000004cf61a : add ah, byte ptr [rsi + rcx + 8] ; ret
0x0000000000443843 : add ah, byte ptr [rsi - 0x75] ; add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000004ca6f3 : add ah, ch ; std ; hlt ; call qword ptr [rsi]
0x00000000004d12f3 : add ah, cl ; mov bh, 0xfb ; call qword ptr [rdx]
0x00000000004cd893 : add ah, cl ; push rcx ; clc ; jmp qword ptr [rdx]
0x00000000004d22f3 : add ah, cl ; sbb edi, ebp ; jmp rsp
0x00000000004cc32f : add ah, dh ; add byte ptr [r8], al ; pushfq ; retf
0x00000000004d0dab : add ah, dh ; lahf ; sti ; call rdx
0x0000000000400a79 : add ah, dh ; nop dword ptr [rax + rax] ; ret
0x00000000004c800f : add ah, dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x6d], ah ; jmp qword ptr [rsi]
0x0000000000454c33 : add al, 0 ; add bh, dh ; ret 0
0x0000000000454c27 : add al, 0 ; add bh, dh ; ret 0xf800
0x000000000045892f : add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x00000000004122c0 : add al, 0 ; add byte ptr [rax + 1], cl ; ret
0x00000000004a7a3d : add al, 0 ; add byte ptr [rax - 0x7bf0df06], al ; retf 4
0x000000000042bf87 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000478fc6 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x0000000000440f2f : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042bfb5 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000044a6df : add al, 0 ; add byte ptr [rax], al ; jmp 0x44a575
0x00000000004a9950 : add al, 0 ; add byte ptr [rax], al ; jne 0x4a9977 ; ret
0x000000000047ebe3 : add al, 0 ; add byte ptr [rax], al ; ret
0x000000000044a8cf : add al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000454c1f : add al, 0 ; add byte ptr [rbp + 0x6d880fd2], al ; add al, 0 ; add bh, dh ; ret 0xf800
0x0000000000429848 : add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000047c6c0 : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040b331 : add al, 0 ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000040bf34 : add al, 0 ; add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x000000000040b1f0 : add al, 0 ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x00000000004602ef : add al, 0 ; add byte ptr [rcx - 0x7d], al ; in al, dx ; add dword ptr [rax - 0x93b43], eax ; jmp qword ptr [rax]
0x0000000000425725 : add al, 0 ; add byte ptr [rsi - 9], dh ; ret 0
0x0000000000400c67 : add al, 0 ; leave ; ret
0x00000000004787a4 : add al, 0 ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x0000000000478eeb : add al, 0 ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x0000000000478f59 : add al, 0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000470696 : add al, 0 ; movzx eax, al ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000004786ea : add al, 0 ; movzx eax, al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x0000000000497aea : add al, 0x10 ; test rdi, rdi ; mov byte ptr [rsi], al ; jne 0x497ae4 ; mov rax, rsi ; ret
0x000000000047fd5b : add al, 0x11 ; ret
0x00000000004494c4 : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000426fb1 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000426f4a : add al, 0x17 ; sub eax, ecx ; ret
0x00000000004a2610 : add al, 0x24 ; add rax, qword ptr [rdx + 8] ; call rax
0x00000000004a6597 : add al, 0x24 ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x00000000004a629b : add al, 0x24 ; add rsp, 0x38 ; ret
0x00000000004a54e6 : add al, 0x24 ; mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x00000000004a5494 : add al, 0x24 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000045c60a : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000045c6e9 : add al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x45c702 ; add rsp, 0x18 ; ret
0x000000000049758b : add al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x4975d7 ; leave ; ret
0x000000000040fc97 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000004cab40 : add al, 0x2c ; add byte ptr [rax], al ; pop rsp ; sbb al, 0xf5 ; call qword ptr [rax]
0x0000000000419a15 : add al, 0x2c ; add byte ptr [rbx + 0x2c041505], al ; add byte ptr [rcx], al ; ret
0x0000000000419a1b : add al, 0x2c ; add byte ptr [rcx], al ; ret
0x000000000047d4ee : add al, 0x31 ; ret
0x000000000047d3ea : add al, 0x37 ; ret
0x0000000000497b6e : add al, 0x38 ; mov rdi, rdx ; mov byte ptr [rsi], al ; jne 0x497b5c ; mov rax, rsi ; ret
0x0000000000418d1f : add al, 0x3a ; ret
0x00000000004c35c6 : add al, 0x3d ; retf
0x00000000004c377b : add al, 0x44 ; mov r10d, 0xcac982a4 ; call 0xffffffffaf0ed601
0x00000000004cc640 : add al, 0x47 ; add byte ptr [rax], al ; fcom st(0), st(4) ; idiv edi ; retf
0x0000000000403a57 : add al, 0x48 ; add esi, dword ptr [rbp - 0x68] ; call 0x4004b7
0x0000000000489c96 : add al, 0x48 ; cmp ecx, dword ptr [rdi + rsi] ; jae 0x489c4a ; xor eax, eax ; ret
0x0000000000445aeb : add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x0000000000444ff9 : add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x000000000044500b : add al, 0x48 ; lea eax, [rdx + 5] ; ret
0x000000000047af5b : add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004a8aa0 : add al, 0x48 ; mov dword ptr [rax], edx ; ret
0x00000000004366fa : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x000000000047a65c : add al, 0x48 ; mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000443839 : add al, 0x48 ; mov eax, edi ; ret
0x00000000004366f3 : add al, 0x48 ; mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000047d7c4 : add al, 0x48 ; xor eax, eax ; ret
0x0000000000488a26 : add al, 0x4c ; cmp ecx, eax ; jne 0x4889d4 ; mov eax, dword ptr [rdx + 4] ; ret
0x0000000000488a25 : add al, 0x4c ; cmp ecx, eax ; jne 0x4889d5 ; mov eax, dword ptr [rdx + 4] ; ret
0x000000000047e2c8 : add al, 0x4c ; lea ecx, [rsp + 0x20] ; call rbx
0x0000000000457f6a : add al, 0x4d ; cmp ebp, ebx ; jb 0x457fe0 ; mov rdx, rax ; jmp 0x457f37
0x0000000000445007 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x0000000000443847 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000004592f2 : add al, 0x72 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000448ffd : add al, 0x73 ; adc eax, dword ptr [rax + 0x157701fa] ; jb 0x449015 ; mov byte ptr [rdi], cl ; ret
0x00000000004555b9 : add al, 0x74 ; and eax, 0x833fe283 ; retf 0x4180
0x0000000000487a9a : add al, 0x75 ; retf
0x00000000004a0c54 : add al, 0x80 ; sub eax, dword ptr [r8 + r9*4] ; je 0x4a0c41 ; ret
0x00000000004787a8 : add al, 0x81 ; add rax, rcx ; jmp rax
0x000000000043e46b : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000043fd43 : add al, 0x81 ; sub eax, edx ; ret
0x0000000000403267 : add al, 0x82 ; add rax, rdx ; jmp rax
0x0000000000449a08 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0x4499f8 ; ret
0x000000000043c077 : add al, 0x82 ; sub eax, ecx ; ret
0x0000000000449e36 : add al, 0x83 ; adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044ef59 : add al, 0x83 ; add rax, rbx ; jmp rax
0x00000000004a793a : add al, 0x84 ; add rax, r12 ; jmp rax
0x0000000000468669 : add al, 0x84 ; ror byte ptr [rdi], 0x84 ; ret 0x17
0x000000000047e6b9 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x00000000004a823b : add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000047863c : add al, 0x86 ; add rax, rsi ; jmp rax
0x00000000004a68e9 : add al, 0x87 ; add rax, r15 ; jmp rax
0x0000000000478dd8 : add al, 0x87 ; add rax, rdi ; jmp rax
0x0000000000444ff6 : add al, 0x88 ; add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x0000000000443836 : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x00000000004a66c3 : add al, 0x88 ; add rax, r8 ; jmp rax
0x00000000004a0c58 : add al, 0x88 ; je 0x4a0c3d ; ret
0x00000000004599d6 : add al, 0x89 ; retf
0x00000000004a3989 : add al, 0x89 ; retf 0xeac0
0x00000000004615ca : add al, 0x89 ; xor al, 1 ; jmp 0x45f828
0x0000000000449a0b : add al, 0x8a ; je 0x4499f5 ; ret
0x000000000047e6b3 : add al, 0x8b ; adc byte ptr [rcx], bh ; bnd je 0x47e6ca ; test edx, edx ; jne 0x47e6bc ; ret
0x0000000000449493 : add al, 0x96 ; add rax, rsi ; jmp rax
0x00000000004a7e73 : add al, 0x99 ; add rax, r9 ; jmp rax
0x000000000044a555 : add al, 0x9a ; add rax, rdx ; jmp rax
0x000000000044ee98 : add al, 0xa ; add eax, dword ptr [rax] ; xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x44ee90
0x000000000048643f : add al, 0xa1 ; add rax, rcx ; jmp rax
0x0000000000470949 : add al, 0xa2 ; add rax, rdx ; jmp rax
0x0000000000486d67 : add al, 0xa7 ; add rax, rdi ; jmp rax
0x00000000004183a7 : add al, 0xa8 ; add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x00000000004493d9 : add al, 0xbe ; add rax, rsi ; jmp rax
0x000000000046d740 : add al, 0xc6 ; jmp rax
0x00000000004628da : add al, 0xc6 ; mov esi, 1 ; jmp rax
0x0000000000462f3a : add al, 0xc6 ; xor esi, esi ; jmp rax
0x0000000000462890 : add al, 0xc7 ; jmp rax
0x000000000046d77b : add al, 0xc8 ; mov ecx, 1 ; jmp rax
0x0000000000464a99 : add al, 0xd1 ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000004976cd : add al, 0xde ; lea r9, [rdx] ; jmp 0x497729
0x00000000004a3aad : add al, 0xde ; lea r9, [rdx] ; jmp 0x4a3b09
0x000000000045abe1 : add al, 0xe8 ; test rax, rax ; je 0x45abf1 ; call rax
0x00000000004568c0 : add al, 0xe9 ; cmp eax, 0x89fffff3 ; retf 0xe283
0x000000000046739d : add al, 0xe9 ; retf 0xfffb
0x00000000004582fc : add al, 0xf ; mov dh, 0x40 ; add ecx, dword ptr [rax + 0x39] ; retf
0x0000000000498038 : add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042b596 : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000042d266 : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; vzeroupper ; ret
0x0000000000405cba : add al, 0xf ; retf
0x0000000000447eeb : add al, 0xf ; sub rax, rsi ; ret
0x0000000000436a63 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000044abcb : add al, 0xf3 ; ret
0x00000000004a8a99 : add al, 0xf7 ; cmp byte ptr [rcx + rsi], 8 ; jne 0x4a8ab0 ; mov qword ptr [rax], rdx ; ret
0x000000000046234e : add al, 0xf8 ; jmp rax
0x00000000004c7e9d : add al, 0xfe ; call qword ptr [rax + 0x18]
0x00000000004102b7 : add al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000471940 : add al, 2 ; add dword ptr [rcx - 0x7d], ecx ; ret
0x000000000042e837 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044145d : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000004418be : add al, 7 ; cmp sil, byte ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x000000000046d73c : add al, 7 ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000441678 : add al, 7 ; ret
0x000000000042f744 : add al, 8 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000042711f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000004ca6df : add al, ah ; std ; hlt ; call qword ptr [rsi]
0x00000000004d1b1b : add al, ah ; wait ; add byte ptr [rax], al ; push rax ; cld ; jmp qword ptr [rdx]
0x00000000004d128f : add al, al ; mov bh, 0xfb ; call qword ptr [rax]
0x00000000004ce2fb : add al, al ; movsxd rax, dword ptr [rax] ; add byte ptr [rax - 0x1d], al ; clc ; call qword ptr [rcx]
0x00000000004cc36f : add al, al ; retf
0x00000000004bac67 : add al, al ; sldt word ptr [rax] ; ret
0x00000000004cab3b : add al, bh ; add byte ptr [rax], al ; add byte ptr [rsp + rbp], al ; add byte ptr [rax], al ; pop rsp ; sbb al, 0xf5 ; call qword ptr [rax]
0x00000000004afd5d : add al, bh ; call qword ptr [rax]
0x00000000004494c9 : add al, bh ; jg 0x44949a ; mov eax, 0x80 ; pop rbx ; ret
0x0000000000449525 : add al, bh ; jg 0x449527 ; int1 ; mov eax, eax ; ret
0x00000000004d1547 : add al, bl ; adc al, 0xfc ; call qword ptr [rdx]
0x00000000004cfb13 : add al, bl ; jnp 0x4cfb1f ; add al, cl ; fdivp st(2) ; jmp qword ptr [rax]
0x00000000004d0d97 : add al, bl ; lahf ; sti ; jmp qword ptr [rcx]
0x0000000000445abc : add al, bl ; nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x000000000047eb7a : add al, bl ; nop dword ptr [rax] ; add rax, 1 ; ret
0x0000000000445498 : add al, bl ; nop word ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000040ea52 : add al, byte ptr [eax] ; add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x00000000004a07e2 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000442051 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x000000000045635a : add al, byte ptr [rax] ; add al, ch ; scasb al, byte ptr [rdi] ; retf 0xfffa
0x000000000040234b : add al, byte ptr [rax] ; add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000004650b7 : add al, byte ptr [rax] ; add bl, bl ; sub bl, cl ; in eax, 0xdf ; loopne 0x465054 ; ret
0x0000000000456ffa : add al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; retf 0x8341
0x0000000000456c2d : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004852a0 : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0xed75
0x000000000041f23d : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; retf 0x820f
0x00000000004611d3 : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000042c492 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000004a3a3e : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret 0x3a83
0x000000000045c69d : add al, byte ptr [rax] ; add byte ptr [rax + rcx*2 - 0x77], ah ; adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x0000000000402335 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x000000000046a534 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0x8c20
0x00000000004246d3 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000048661a : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x0000000000482755 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000479b9d : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000448a14 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004859a1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x00000000004229da : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004563cb : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042c167 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043fb01 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042c195 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000040ea53 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x000000000045c592 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0x200
0x00000000004977c8 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x0000000000497a91 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x0000000000487f16 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000455711 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x45556c
0x000000000044b9d9 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x000000000040eedc : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x000000000047e974 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000004a10cc : add al, byte ptr [rax] ; add byte ptr [rbp + rcx*4 + 4], cl ; retf 0x8b41
0x00000000004a35ca : add al, byte ptr [rax] ; add byte ptr [rbp + rcx*4 + 4], cl ; retf 0xba
0x000000000041d207 : add al, byte ptr [rax] ; add byte ptr [rbp + rcx*4 + 5], cl ; ret
0x00000000004299c8 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000447494 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000411d26 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fd08], al ; ret
0x00000000004a1344 : add al, byte ptr [rax] ; add byte ptr [rcx + 0xc8b48d8], cl ; ret 0xb60f
0x00000000004c81f1 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x71], dh ; call qword ptr [rbx]
0x000000000041238d : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000046e514 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x000000000044bbe0 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; retf
0x00000000004a8c64 : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0xc3 ; nop dword ptr [rax] ; ret
0x0000000000464e4f : add al, byte ptr [rax] ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x000000000041c0a6 : add al, byte ptr [rax] ; add dh, dh ; ret
0x00000000004209eb : add al, byte ptr [rax] ; add rsp, 0x80 ; ret
0x00000000004256d3 : add al, byte ptr [rax] ; cmove rax, rdx ; ret
0x0000000000424abc : add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000047dd63 : add al, byte ptr [rax] ; cmp ecx, 0xc00 ; je 0x47dd7b ; ret
0x0000000000425a55 : add al, byte ptr [rax] ; lea rax, [rip + 0x22732] ; cmovne rax, rdx ; ret
0x0000000000425915 : add al, byte ptr [rax] ; lea rax, [rip + 0x22862] ; cmovne rax, rdx ; ret
0x00000000004257b5 : add al, byte ptr [rax] ; lea rax, [rip + 0x229d2] ; cmovne rax, rdx ; ret
0x0000000000425abc : add al, byte ptr [rax] ; lea rax, [rip + 0x22a7b] ; cmovne rax, rdx ; ret
0x000000000042597c : add al, byte ptr [rax] ; lea rax, [rip + 0x22bab] ; cmovne rax, rdx ; ret
0x000000000042581c : add al, byte ptr [rax] ; lea rax, [rip + 0x22d1b] ; cmovne rax, rdx ; ret
0x0000000000425a9b : add al, byte ptr [rax] ; lea rax, [rip + 0x22ecc] ; cmovne rax, rdx ; ret
0x000000000042595b : add al, byte ptr [rax] ; lea rax, [rip + 0x22ffc] ; cmovne rax, rdx ; ret
0x00000000004257fb : add al, byte ptr [rax] ; lea rax, [rip + 0x2316c] ; cmovne rax, rdx ; ret
0x0000000000424b3c : add al, byte ptr [rax] ; lea rax, [rip + 0x231db] ; cmovne rax, rdx ; ret
0x0000000000425887 : add al, byte ptr [rax] ; lea rax, [rip + 0x23660] ; cmovne rax, rdx ; ret
0x000000000042586a : add al, byte ptr [rax] ; lea rax, [rip + 0x237dd] ; cmovne rax, rdx ; ret
0x00000000004258bb : add al, byte ptr [rax] ; lea rax, [rip + 0x2390c] ; cmovne rax, rdx ; ret
0x00000000004a6692 : add al, byte ptr [rax] ; movss dword ptr [rsp - 0x28], xmm0 ; ret
0x000000000049865f : add al, byte ptr [rax] ; movsxd r9, dword ptr [r10 + r9*4] ; lea r10, [r10 + r9] ; jmp r10
0x00000000004981ba : add al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000004a66bc : add al, byte ptr [rax] ; movzx ecx, cl ; movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x00000000004011d5 : add al, byte ptr [rax] ; nop ; leave ; ret
0x000000000049197d : add al, byte ptr [rbp + 0x39] ; retf 0x6677
0x000000000044c2b5 : add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x00000000004b0764 : add al, byte ptr [rbx - 0x7d8d0008] ; clc ; jmp rdx
0x00000000004cd008 : add al, byte ptr [rcx + 0x100e6203] ; rol dword ptr [rdx + 0xe], 8 ; retf 0x2000
0x000000000044d86e : add al, byte ptr [rcx + 0x39] ; ret
0x000000000041114b : add al, byte ptr [rcx] ; add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x000000000047eb56 : add al, byte ptr [rdx + rdx*8 - 0x2e77ea8c] ; and cl, 0xf ; je 0x47eb8c ; ret
0x00000000004c8a25 : add al, byte ptr [rdx] ; ret 0xb00e
0x00000000004978be : add al, byte ptr [rdx] ; sar bh, 0xff ; mov eax, 1 ; ret
0x0000000000425aa1 : add al, byte ptr cs:[rax] ; cmovne rax, rdx ; ret
0x00000000004650b6 : add al, byte ptr es:[rax] ; add bl, bl ; sub bl, cl ; in eax, 0xdf ; loopne 0x465055 ; ret
0x000000000042588d : add al, byte ptr ss:[rax] ; cmovne rax, rdx ; ret
0x00000000004041f8 : add al, ch ; add bh, byte ptr [rsi - 0x76b30041] ; imul eax ; retf 0x1d1
0x0000000000401197 : add al, ch ; add dword ptr [rip + 0xb80001], 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000047f056 : add al, ch ; clc ; ja 0x47f02a ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004a3d02 : add al, ch ; clc ; ret 0xffb5
0x00000000004cbf77 : add al, ch ; fdivrp st(6) ; call qword ptr [rax]
0x0000000000400cd4 : add al, ch ; idiv ah ; add byte ptr [rax], al ; nop ; pop rbp ; ret
0x00000000004cfd23 : add al, ch ; jge 0x4cfd2f ; add byte ptr [rax - 0x17], bh ; cli ; jmp qword ptr [rax]
0x00000000004142cf : add al, ch ; jmp 0x4142d2
0x000000000047631d : add al, ch ; lodsd eax, dword ptr [rsi] ; ret 0xfffa
0x0000000000420d65 : add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; retf 2
0x000000000046b41e : add al, ch ; or al, 0xe6 ; std ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000040116f : add al, ch ; push rcx ; or eax, 0x5d900000 ; ret
0x00000000004514e4 : add al, ch ; push rsi ; ret
0x0000000000411157 : add al, ch ; ret
0x000000000040f998 : add al, ch ; ret 0x3aa
0x0000000000400d7f : add al, ch ; retf
0x0000000000400b20 : add al, ch ; retf 0xaa4
0x00000000004ab130 : add al, ch ; retf 0xb54e
0x000000000045a930 : add al, ch ; retf 0xba56
0x000000000046ccd0 : add al, ch ; retf 0xe0
0x0000000000495380 : add al, ch ; retf 0xf6b0
0x000000000045635c : add al, ch ; scasb al, byte ptr [rdi] ; retf 0xfffa
0x00000000004a354b : add al, ch ; scasd eax, dword ptr [rdi] ; retf 0xffb5
0x0000000000420da9 : add al, ch ; xchg eax, ecx ; retf 2
0x00000000004cbe03 : add al, cl ; add byte ptr ds:[rax], al ; adc rsi, rsi ; call rsp
0x00000000004cfb17 : add al, cl ; fdivp st(2) ; jmp qword ptr [rax]
0x00000000004cc9a7 : add al, cl ; in eax, 0xf7 ; call qword ptr [rbx]
0x00000000004d12b7 : add al, cl ; mov bh, 0xfb ; call qword ptr [rax]
0x00000000004d1d03 : add al, cl ; popfq ; add byte ptr [rax], al ; test al, 0xd3 ; cld ; call qword ptr [rax]
0x00000000004cc2a7 : add al, cl ; ret 0xfff7
0x00000000004ca63f : add al, dh ; cld ; hlt ; call qword ptr [rdx]
0x00000000004c866f : add al, dh ; fdivr st(3), st(0) ; call qword ptr [rdx]
0x00000000004cfb2b : add al, dh ; jnp 0x4cfb37 ; add al, dl ; loope 0x4cfb35 ; jmp qword ptr [rbx]
0x00000000004cd34f : add al, dh ; sub al, bh ; call qword ptr [rax]
0x00000000004cfb2f : add al, dl ; loope 0x4cfb31 ; jmp qword ptr [rbx]
0x00000000004d12df : add al, dl ; mov bh, 0xfb ; call qword ptr [rax]
0x00000000004cd80b : add al, dl ; pop rax ; add byte ptr [rax], al ; mov al, 0x4d ; clc ; call qword ptr [rax]
0x0000000000400b1f : add al, r13b ; retf 0xaa4
0x00000000004d0ce6 : add bh, ah ; ret
0x00000000004978bc : add bh, al ; add al, byte ptr [rdx] ; sar bh, 0xff ; mov eax, 1 ; ret
0x00000000004502df : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000420aff : add bh, al ; add eax, 0x2b9386 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004afda1 : add bh, al ; call rax
0x0000000000460527 : add bh, al ; test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x00000000004607a0 : add bh, al ; test eax, edi ; idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x000000000040fd8f : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040234d : add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000004a120f : add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x0000000000497809 : add bh, byte ptr [rax + 1] ; ret
0x0000000000497a26 : add bh, byte ptr [rax + 2] ; ret
0x000000000044a8eb : add bh, byte ptr [rax - 1] ; ret
0x0000000000447862 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000004041fa : add bh, byte ptr [rsi - 0x76b30041] ; imul eax ; retf 0x1d1
0x00000000004c7ab1 : add bh, dh ; call rax
0x000000000040211a : add bh, dh ; ret 0
0x0000000000454c29 : add bh, dh ; ret 0xf800
0x00000000004103cf : add bh, dh ; ret 0xffef
0x000000000047e971 : add bl, al ; mov eax, 2 ; ret
0x0000000000419986 : add bl, al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004a3a5a : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000004650b9 : add bl, bl ; sub bl, cl ; in eax, 0xdf ; loopne 0x465052 ; ret
0x00000000004a58bb : add bl, ch ; add eax, 0x1489066 ; ret 0xb70f
0x00000000004a14d9 : add bl, ch ; ret
0x0000000000410668 : add bl, ch ; ret 0x1f0f
0x00000000004a367d : add bl, ch ; ror dword ptr [rax - 0x75], 7 ; cmp rax, rsi ; je 0x4a369c ; ret
0x000000000042cbaf : add bl, dh ; bsf eax, eax ; add rax, rdi ; vzeroupper ; ret
0x000000000044556f : add bl, dh ; movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000004a6693 : add bl, dh ; movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000400a7f : add bl, dh ; ret
0x000000000041c39e : add bl, sil ; ret
0x00000000004ca447 : add byte ptr [0xfffffffff6240000], cl ; hlt ; call qword ptr [rdi]
0x000000000044bc23 : add byte ptr [r11 + 0x94801e1], r8b ; retf 0x8949
0x0000000000456e23 : add byte ptr [r15], r9b ; mov dh, 0x78 ; add cl, byte ptr [rax + 0x39] ; retf
0x0000000000456e0e : add byte ptr [r15], r9b ; mov dh, 0x78 ; add dword ptr [rax + 0x39], ecx ; retf
0x0000000000456e38 : add byte ptr [r15], r9b ; mov dh, 0x78 ; add ecx, dword ptr [rax + 0x39] ; retf
0x0000000000495ac5 : add byte ptr [r8 + 0x39], r9b ; retf
0x000000000048b8b0 : add byte ptr [r8 + 9], r9b ; ret 0x840f
0x000000000047c966 : add byte ptr [r8 - 0x77], r9b ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000456dd5 : add byte ptr [r8 - 0x77], r9b ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x000000000041956a : add byte ptr [r8 - 0x77], r9b ; imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x000000000040f48a : add byte ptr [r8 - 0x7d], r9b ; ret
0x00000000004cc291 : add byte ptr [r8], al ; lodsb al, byte ptr [rsi] ; ret 0xfff7
0x00000000004cc331 : add byte ptr [r8], al ; pushfq ; retf
0x00000000004cc641 : add byte ptr [r8], r8b ; fcom st(0), st(4) ; idiv edi ; retf
0x000000000047fabb : add byte ptr [r9 + rbp - 0x48], sil ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x000000000044db13 : add byte ptr [rax + 0x15], bh ; syscall
0x00000000004247cf : add byte ptr [rax + 0x16], bh ; ret
0x00000000004ced37 : add byte ptr [rax + 0x16], ch ; cli ; call rbx
0x00000000004cbce3 : add byte ptr [rax + 0x1800003d], ch ; sahf ; cmc ; jmp qword ptr [rbx]
0x000000000044a83f : add byte ptr [rax + 0x18], bh ; syscall
0x000000000044a83e : add byte ptr [rax + 0x18], dil ; syscall
0x000000000044b95f : add byte ptr [rax + 0x1c], bh ; syscall
0x00000000004ce2bb : add byte ptr [rax + 0x20000063], al ; jrcxz 0x4ce2c3 ; call qword ptr [rdi]
0x00000000004a3e4f : add byte ptr [rax + 0x26], bh ; syscall
0x00000000004cbfc3 : add byte ptr [rax + 0x28000040], cl ; and dh, bh ; call qword ptr [rax]
0x00000000004ce2d3 : add byte ptr [rax + 0x28000063], bl ; jrcxz 0x4ce2db ; call qword ptr [rcx]
0x000000000044df79 : add byte ptr [rax + 0x29], cl ; fmul dword ptr [rbx - 0x7ad33ebc] ; ror byte ptr [rdi], 0x84 ; retf 0
0x0000000000413340 : add byte ptr [rax + 0x29], cl ; ret
0x00000000004543b1 : add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000454f17 : add byte ptr [rax + 0x29], cl ; ret 0x8348
0x0000000000467878 : add byte ptr [rax + 0x29], cl ; ret 0x8349
0x0000000000484c2a : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x0000000000423404 : add byte ptr [rax + 0x29], cl ; retf
0x0000000000456ffc : add byte ptr [rax + 0x29], cl ; retf 0x8341
0x0000000000466c29 : add byte ptr [rax + 0x29], cl ; retf 0x8948
0x0000000000488bd0 : add byte ptr [rax + 0x29], cl ; retf 0x8d48
0x00000000004cfacb : add byte ptr [rax + 0x3000007b], dl ; fdivr st(2) ; jmp rdx
0x00000000004d2ae3 : add byte ptr [rax + 0x380000ab], ch ; push -3 ; call qword ptr [rbx]
0x000000000040fd6f : add byte ptr [rax + 0x39], cl ; ret
0x00000000004a6893 : add byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000041b3af : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000004144af : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000004a6928 : add byte ptr [rax + 0x39], cl ; ret 0x9272
0x00000000004852a2 : add byte ptr [rax + 0x39], cl ; ret 0xed75
0x000000000041e270 : add byte ptr [rax + 0x39], cl ; ret 0xf275
0x00000000004825fe : add byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000495ac6 : add byte ptr [rax + 0x39], cl ; retf
0x000000000042f0d6 : add byte ptr [rax + 0x39], cl ; retf 0x280f
0x00000000004359cf : add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000041f23f : add byte ptr [rax + 0x39], cl ; retf 0x820f
0x0000000000411a5d : add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000448008 : add byte ptr [rax + 0x39], cl ; retf 0x870f
0x000000000042ebf6 : add byte ptr [rax + 0x39], cl ; retf 0x8949
0x0000000000449313 : add byte ptr [rax + 0x39], cl ; retf 0xd975
0x0000000000449150 : add byte ptr [rax + 0x39], cl ; retf 0xe175
0x00000000004a12a8 : add byte ptr [rax + 0x39], cl ; retf 0xe275
0x00000000004cbccb : add byte ptr [rax + 0x3d], dl ; sahf ; cmc ; jmp qword ptr [rbx]
0x00000000004d2577 : add byte ptr [rax + 0x3e], bh ; std ; call qword ptr [rdx]
0x00000000004cbd8b : add byte ptr [rax + 0x3e], dl ; add byte ptr [rax], al ; add byte ptr [rsi], 0xf6 ; jmp qword ptr [rbx]
0x000000000044ad76 : add byte ptr [rax + 0x48], bh ; syscall
0x00000000004d17a7 : add byte ptr [rax + 0x4a], bh ; cld ; jmp qword ptr [rcx]
0x00000000004cd07b : add byte ptr [rax + 0x51], al ; add byte ptr [rax], al ; mov al, 8 ; clc ; call qword ptr [rdx]
0x00000000004cd0b3 : add byte ptr [rax + 0x51], bh ; add byte ptr [rax], al ; or byte ptr [rcx], cl ; clc ; call qword ptr [rcx]
0x00000000004cdfb3 : add byte ptr [rax + 0x60], bh ; add byte ptr [rax], al ; cmp bh, bl ; std ; jmp qword ptr [rdi]
0x000000000040e57d : add byte ptr [rax + 0x63], cl ; adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x00000000004787a5 : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rcx ; jmp rax
0x0000000000403264 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x0000000000478dd5 : add byte ptr [rax + 0x63], cl ; add al, 0x87 ; add rax, rdi ; jmp rax
0x000000000044a552 : add byte ptr [rax + 0x63], cl ; add al, 0x9a ; add rax, rdx ; jmp rax
0x00000000004493d6 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rax, rsi ; jmp rax
0x000000000045b137 : add byte ptr [rax + 0x63], cl ; ret
0x000000000048cc01 : add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x00000000004a8363 : add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x000000000048cccf : add byte ptr [rax + 0x63], cl ; ret 0xc749
0x000000000046a225 : add byte ptr [rax + 0x63], cl ; retf 0x8948
0x000000000047bbff : add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x00000000004792a3 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x000000000045f651 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x00000000004ce4ab : add byte ptr [rax + 0x65], dh ; add byte ptr [rax], al ; xor dl, ah ; std ; call rdx
0x000000000047f87f : add byte ptr [rax + 0x66], bh ; syscall
0x00000000004d1b37 : add byte ptr [rax + 0x66], ch ; cld ; jmp rdx
0x00000000004d1b1f : add byte ptr [rax + 0x66], dl ; cld ; jmp qword ptr [rdx]
0x00000000004cc7d3 : add byte ptr [rax + 0x68000048], bl ; loopne 0x4cc7da ; jmp qword ptr [rcx]
0x000000000047f89f : add byte ptr [rax + 0x68], bh ; syscall
0x000000000047f88f : add byte ptr [rax + 0x6b], bh ; syscall
0x000000000047f8af : add byte ptr [rax + 0x6c], bh ; syscall
0x00000000004cdaef : add byte ptr [rax + 0x6e], dh ; clc ; call qword ptr [rdi]
0x00000000004cdaeb : add byte ptr [rax + 0x7000005b], dh ; outsb dx, byte ptr [rsi] ; clc ; call qword ptr [rdi]
0x00000000004c8b8f : add byte ptr [rax + 0x72], al ; hlt ; jmp qword ptr [rax]
0x00000000004a50d3 : add byte ptr [rax + 0x74], ah ; adc dword ptr [rcx - 0x7d], ecx ; ret
0x000000000044204f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000004cd4cb : add byte ptr [rax + 0x77000055], dl ; xor bl, dh ; jmp qword ptr [rbx]
0x0000000000445a8f : add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000004d1cdb : add byte ptr [rax + 0x9d], ah ; mov ah, 0xfc ; call qword ptr [rax]
0x000000000044b92f : add byte ptr [rax + 0xa], bh ; syscall
0x000000000046394f : add byte ptr [rax + 0xb8003f], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000044b8ff : add byte ptr [rax + 0xb], bh ; syscall
0x00000000004c8b8b : add byte ptr [rax + 0xc], dl ; add byte ptr [rax], al ; jb 0x4c8b8f ; jmp qword ptr [rax]
0x00000000004858c9 : add byte ptr [rax + 0xca], bh ; syscall
0x00000000004a8a3f : add byte ptr [rax + 0xd837bc], al ; add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x000000000044a5b4 : add byte ptr [rax + 0xe5], bh ; syscall
0x000000000040eedf : add byte ptr [rax + 0xe], bh ; syscall
0x00000000004259f9 : add byte ptr [rax + 0xf4802e5], al ; ret 0xc3f3
0x00000000004494a7 : add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x000000000041682f : add byte ptr [rax + 0xf], al ; mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047f338 : add byte ptr [rax + 0xf], cl ; call 0x30c58093
0x000000000047d355 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x00000000004516af : add byte ptr [rax + 0xf], cl ; mov esi, 0x83480147 ; ret
0x000000000041e024 : add byte ptr [rax + 0xf], cl ; ret
0x0000000000485436 : add byte ptr [rax + 0xf], cl ; ret 0x3e80
0x0000000000424b44 : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004141da : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000041f0d3 : add byte ptr [rax + 0xf], cl ; ret 0x894c
0x0000000000485485 : add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x000000000044941a : add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x0000000000424abd : add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000004257bd : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000455a48 : add byte ptr [rax + 0xf], cl ; ret 0xff85
0x000000000047eb6f : add byte ptr [rax + 0xfe580f5], cl ; je 0x47eb9c ; add rax, 2 ; ret
0x0000000000479956 : add byte ptr [rax + 1], bh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000449f58 : add byte ptr [rax + 1], bh ; jmp 0x449f2a
0x00000000004977cc : add byte ptr [rax + 1], bh ; ret
0x000000000044ac8f : add byte ptr [rax + 1], bh ; syscall
0x000000000042c494 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000042c9c1 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; vzeroupper ; ret
0x00000000004122c2 : add byte ptr [rax + 1], cl ; ret
0x00000000004969d8 : add byte ptr [rax + 1], cl ; ret 0x149
0x00000000004a3a40 : add byte ptr [rax + 1], cl ; ret 0x3a83
0x0000000000435a8d : add byte ptr [rax + 1], cl ; retf 0x8148
0x000000000044e690 : add byte ptr [rax + 1], cl ; retf 0x8548
0x0000000000404190 : add byte ptr [rax + 1], cl ; retf 0x8948
0x00000000004524d5 : add byte ptr [rax + 1], cl ; retf 0x8b48
0x0000000000497a95 : add byte ptr [rax + 2], bh ; ret
0x000000000044af3f : add byte ptr [rax + 3], bh ; syscall
0x000000000044acbf : add byte ptr [rax + 8], bh ; syscall
0x000000000044acbe : add byte ptr [rax + 8], dil ; syscall
0x000000000048b8b1 : add byte ptr [rax + 9], cl ; ret 0x840f
0x00000000004804a0 : add byte ptr [rax + 9], cl ; ret 0x850f
0x00000000004caeb7 : add byte ptr [rax + rax + 0x2f800000], bl ; add byte ptr [rax], al ; nop ; cmc ; jmp rsi
0x00000000004cdae7 : add byte ptr [rax + rax + 0x5bb00000], ah ; add byte ptr [rax], al ; jo 0x4cdb6c ; clc ; call qword ptr [rdi]
0x00000000004c8707 : add byte ptr [rax + rax + 0x7d00000], al ; add byte ptr [rax], al ; and bl, ah ; call rax
0x00000000004b9c0b : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x00000000004cbf87 : add byte ptr [rax + rax*2], cl ; add ah, ah ; fdivrp st(6) ; jmp qword ptr [rsi]
0x0000000000451f03 : add byte ptr [rax + rax*8 - 0x76b3178b], al ; ret 0x294c
0x000000000047c6bf : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000425724 : add byte ptr [rax + rax], al ; add byte ptr [rsi - 9], dh ; ret 0
0x00000000004cec5b : add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; and al, 0x6d ; add byte ptr [rax], al ; loop 0x4cec6c ; jmp qword ptr [rax]
0x00000000004ce7c3 : add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; mov word ptr [rax], gs ; add byte ptr [rsi + rbp - 7], dh ; call qword ptr [rsi]
0x00000000004d0e6f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; cmp byte ptr [rdi - 0x5d180000], cl ; sti ; jmp qword ptr [rsi]
0x00000000004c81eb : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; mov ah, 2 ; add byte ptr [rax], al ; jno 0x4c8191 ; call qword ptr [rbx]
0x00000000004c80cb : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; xchg eax, esp ; add dword ptr [rax], eax ; add byte ptr [rsi - 0x67], bl ; call qword ptr [rcx]
0x00000000004d168f : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; pop rax ; xchg eax, edi ; add byte ptr [rax], al ; or byte ptr [rcx - 4], al ; call rdi
0x00000000004d179f : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; push 0x78000098 ; cld ; jmp qword ptr [rcx]
0x00000000004c8ac7 : add byte ptr [rax + rax], cl ; add byte ptr [rax - 0x7ffffff5], dl ; outsd dx, dword ptr [rsi] ; hlt ; call rsp
0x000000000047478e : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; jmp 0x4709ff
0x000000000047fc81 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000041ef7b : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x000000000047c6a5 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047dd67 : add byte ptr [rax + rax], cl ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000004d256f : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; cmp byte ptr [rsi + 0x3e780000], ah ; std ; call qword ptr [rdx]
0x00000000004d22b7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; and byte ptr [rbx + 0x1b900000], 0xfd ; jmp qword ptr [rcx]
0x00000000004ce2b7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; and byte ptr [rbx], 0 ; and bl, ah ; clc ; call qword ptr [rdi]
0x00000000004cfd1f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; call 0x784cfdb2
0x00000000004ce5cf : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cwde ; add byte ptr [rax], al ; mov dh, bh ; clc ; call qword ptr [rbx]
0x00000000004cbdff : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; enter 0x3e, 0 ; adc rsi, rsi ; call rsp
0x00000000004cfb0f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; fdivr dword ptr [rbx] ; add al, cl ; fdivp st(2) ; jmp qword ptr [rax]
0x00000000004cd0af : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; js 0x4cd113 ; add byte ptr [rax], al ; or byte ptr [rcx], cl ; clc ; call qword ptr [rcx]
0x00000000004cdfaf : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; js 0x4ce022 ; add byte ptr [rax], al ; cmp bh, bl ; std ; jmp qword ptr [rdi]
0x00000000004d1b17 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; loopne 0x4d1ac5 ; add byte ptr [rax], al ; push rax ; cld ; jmp qword ptr [rdx]
0x00000000004cbcc7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; nop ; cmp eax, 0x9e000000 ; cmc ; jmp qword ptr [rbx]
0x00000000004cfac7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; nop ; jnp 0x4cfadb ; add byte ptr [rax], dh ; fdivr st(2) ; jmp rdx
0x00000000004cbd87 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rax ; add byte ptr ds:[rax], al ; add byte ptr [rsi], 0xf6 ; jmp qword ptr [rbx]
0x00000000004cd077 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rcx ; add byte ptr [rax], al ; mov al, 8 ; clc ; call qword ptr [rdx]
0x00000000004ce7c7 : add byte ptr [rax + rbp*2 + 0x2e740000], cl ; stc ; call qword ptr [rsi]
0x00000000004ac876 : add byte ptr [rax + rbp*8 + 0x48], dh ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000045c5ad : add byte ptr [rax + rcx - 0xd], dh ; ret
0x000000000045c69f : add byte ptr [rax + rcx*2 - 0x77], ah ; adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x00000000004b09c8 : add byte ptr [rax + rdi*8 - 0x751ef01], ch ; jmp qword ptr [rax]
0x00000000004b08f0 : add byte ptr [rax + rdi*8 - 1], ah ; and byte ptr [rbp - 8], ah ; jmp qword ptr [rax + 0x20fff866]
0x00000000004afbf4 : add byte ptr [rax + rdi*8], cl ; jmp rax
0x00000000004afdd4 : add byte ptr [rax + rdi*8], dh ; jmp rax
0x00000000004badb7 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x00000000004c8faf : add byte ptr [rax + rdx], dh ; add byte ptr [rsi + rax*4 - 0xc], cl ; call qword ptr [rdi]
0x0000000000478e17 : add byte ptr [rax - 0x14dff3b5], al ; retf 0x9066
0x0000000000485cf4 : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0xeac1
0x00000000004cfd27 : add byte ptr [rax - 0x17], bh ; cli ; jmp qword ptr [rax]
0x000000000041e48f : add byte ptr [rax - 0x17], dl ; ret
0x00000000004ce2ff : add byte ptr [rax - 0x1d], al ; clc ; call qword ptr [rcx]
0x00000000004ca6db : add byte ptr [rax - 0x1fffffd9], ah ; std ; hlt ; call qword ptr [rsi]
0x00000000004d12db : add byte ptr [rax - 0x2fffff6d], ah ; mov bh, 0xfb ; call qword ptr [rax]
0x000000000047bae8 : add byte ptr [rax - 0x39], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000419a7a : add byte ptr [rax - 0x39], cl ; add eax, 0x2c03b2 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000450ea1 : add byte ptr [rax - 0x39], cl ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000418753 : add byte ptr [rax - 0x39], cl ; or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004178cf : add byte ptr [rax - 0x39], cl ; push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000040fd68 : add byte ptr [rax - 0x39], cl ; rcl al, 0x92 ; insd dword ptr [rdi], dx ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000402337 : add byte ptr [rax - 0x39], cl ; ret
0x000000000047099f : add byte ptr [rax - 0x39], cl ; ret 0x8590
0x00000000004110e3 : add byte ptr [rax - 0x39], cl ; ret 0x8c20
0x0000000000466c1b : add byte ptr [rax - 0x39], cl ; ret 0x92c8
0x000000000045eedf : add byte ptr [rax - 0x39], cl ; ret 0xffa0
0x000000000040ef07 : add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x00000000004246d5 : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x0000000000469ba5 : add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x00000000004930df : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000047ebcf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000047ebaf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000047ec0f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x000000000047ebbf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000047ebff : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000045c79f : add byte ptr [rax - 0x39], cl ; ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x00000000004cdfef : add byte ptr [rax - 0x3de40000], dh ; clc ; jmp rax
0x000000000045a2f9 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000045a2d0 : add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x0000000000459c30 : add byte ptr [rax - 0x3f], cl ; ret 0x8511
0x000000000048ca15 : add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000048d960 : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000049130e : add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x0000000000462fdf : add byte ptr [rax - 0x4f743], al ; jmp qword ptr [rax]
0x00000000004d17a3 : add byte ptr [rax - 0x68], ch ; add byte ptr [rax], al ; js 0x4d17fc ; cld ; jmp qword ptr [rcx]
0x00000000004d1693 : add byte ptr [rax - 0x69], bl ; add byte ptr [rax], al ; or byte ptr [rcx - 4], al ; call rdi
0x00000000004c8013 : add byte ptr [rax - 0x6d], ah ; jmp qword ptr [rsi]
0x00000000004d22bb : add byte ptr [rax - 0x6fffff5d], al ; sbb edi, ebp ; jmp qword ptr [rcx]
0x00000000004caebb : add byte ptr [rax - 0x6fffffd1], al ; cmc ; jmp rsi
0x00000000004257d1 : add byte ptr [rax - 0x73], cl ; adc eax, 0x11407 ; cmovne rax, rdx ; ret
0x0000000000424b1d : add byte ptr [rax - 0x73], cl ; adc eax, 0x1d62b ; cmovne rax, rdx ; ret
0x00000000004259ad : add byte ptr [rax - 0x73], cl ; adc eax, 0x1df4b ; cmovne rax, rdx ; ret
0x0000000000425742 : add byte ptr [rax - 0x73], cl ; adc eax, 0x209c6 ; cmovne rax, rdx ; ret
0x0000000000424ab6 : add byte ptr [rax - 0x73], cl ; adc eax, 0x21332 ; cmovne rax, rdx ; ret
0x0000000000424aed : add byte ptr [rax - 0x73], cl ; adc eax, 0x272b ; cmovne rax, rdx ; ret
0x000000000047e688 : add byte ptr [rax - 0x73], cl ; adc eax, 0x30 ; cmovne rax, rdx ; ret
0x0000000000424bf7 : add byte ptr [rax - 0x73], cl ; adc eax, 0x50d1 ; cmovne rax, rdx ; ret
0x0000000000425a71 : add byte ptr [rax - 0x73], cl ; adc eax, 0xe697 ; cmovne rax, rdx ; ret
0x0000000000425931 : add byte ptr [rax - 0x73], cl ; adc eax, 0xe7b7 ; cmovne rax, rdx ; ret
0x000000000047dd82 : add byte ptr [rax - 0x73], cl ; adc eax, 0xfffcb426 ; cmove rax, rdx ; ret
0x000000000047e2c4 : add byte ptr [rax - 0x73], cl ; add al, 0x4c ; lea ecx, [rsp + 0x20] ; call rbx
0x000000000044145a : add byte ptr [rax - 0x73], cl ; add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x0000000000456bca : add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000458d4d : add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], r9d ; ret
0x0000000000425b16 : add byte ptr [rax - 0x73], cl ; add eax, 0x1bb12 ; cmove rax, rdx ; ret
0x0000000000424bb6 : add byte ptr [rax - 0x73], cl ; add eax, 0x1d0a2 ; cmove rax, rdx ; ret
0x0000000000425a56 : add byte ptr [rax - 0x73], cl ; add eax, 0x22732 ; cmovne rax, rdx ; ret
0x0000000000425916 : add byte ptr [rax - 0x73], cl ; add eax, 0x22862 ; cmovne rax, rdx ; ret
0x00000000004257b6 : add byte ptr [rax - 0x73], cl ; add eax, 0x229d2 ; cmovne rax, rdx ; ret
0x0000000000425abd : add byte ptr [rax - 0x73], cl ; add eax, 0x22a7b ; cmovne rax, rdx ; ret
0x000000000042597d : add byte ptr [rax - 0x73], cl ; add eax, 0x22bab ; cmovne rax, rdx ; ret
0x000000000042581d : add byte ptr [rax - 0x73], cl ; add eax, 0x22d1b ; cmovne rax, rdx ; ret
0x0000000000425a9c : add byte ptr [rax - 0x73], cl ; add eax, 0x22ecc ; cmovne rax, rdx ; ret
0x000000000042595c : add byte ptr [rax - 0x73], cl ; add eax, 0x22ffc ; cmovne rax, rdx ; ret
0x00000000004257fc : add byte ptr [rax - 0x73], cl ; add eax, 0x2316c ; cmovne rax, rdx ; ret
0x0000000000424b3d : add byte ptr [rax - 0x73], cl ; add eax, 0x231db ; cmovne rax, rdx ; ret
0x0000000000425888 : add byte ptr [rax - 0x73], cl ; add eax, 0x23660 ; cmovne rax, rdx ; ret
0x000000000042586b : add byte ptr [rax - 0x73], cl ; add eax, 0x237dd ; cmovne rax, rdx ; ret
0x00000000004258bc : add byte ptr [rax - 0x73], cl ; add eax, 0x2390c ; cmovne rax, rdx ; ret
0x000000000044ee4f : add byte ptr [rax - 0x73], cl ; add eax, 0x2894a9 ; ret
0x0000000000425ae6 : add byte ptr [rax - 0x73], cl ; add eax, 0x6c52 ; cmove rax, rdx ; ret
0x00000000004256f6 : add byte ptr [rax - 0x73], cl ; add eax, 0x6d12 ; cmove rax, rdx ; ret
0x000000000049847d : add byte ptr [rax - 0x73], cl ; add eax, 0x85db ; cmovne rax, rdx ; ret
0x000000000047c906 : add byte ptr [rax - 0x73], cl ; add eax, 0x9f2 ; cmove rax, rdx ; ret
0x000000000047dd16 : add byte ptr [rax - 0x73], cl ; add eax, 0xc62 ; cmove rax, rdx ; ret
0x000000000047c8d6 : add byte ptr [rax - 0x73], cl ; add eax, 0xee2 ; cmove rax, rdx ; ret
0x0000000000458d6b : add byte ptr [rax - 0x73], cl ; add r9b, byte ptr [rax + 0x39] ; ret
0x0000000000458d89 : add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [rax + 0x39] ; ret
0x000000000048bdb6 : add byte ptr [rax - 0x73], cl ; dec dword ptr [r8 - 0x7d] ; clc ; std ; jbe 0x48bdd4 ; ret
0x00000000004822a6 : add byte ptr [rax - 0x73], cl ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000495c47 : add byte ptr [rax - 0x73], cl ; pop rsp ; retf 0x4df0
0x0000000000483e22 : add byte ptr [rax - 0x73], cl ; push 0x48b4901 ; and al, 0x83 ; ret
0x000000000041d70a : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000041fd1f : add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000041c058 : add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000046d21b : add byte ptr [rax - 0x73], cl ; xor eax, 0x267bfd ; jmp rax
0x000000000048661c : add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000041ab4f : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004a1817 : add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x00000000004a6594 : add byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x00000000004a6298 : add byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x00000000004628d7 : add byte ptr [rax - 0x75], cl ; add al, 0xc6 ; mov esi, 1 ; jmp rax
0x0000000000462f37 : add byte ptr [rax - 0x75], cl ; add al, 0xc6 ; xor esi, esi ; jmp rax
0x000000000046288d : add byte ptr [rax - 0x75], cl ; add al, 0xc7 ; jmp rax
0x000000000046d778 : add byte ptr [rax - 0x75], cl ; add al, 0xc8 ; mov ecx, 1 ; jmp rax
0x00000000004976ca : add byte ptr [rax - 0x75], cl ; add al, 0xde ; lea r9, [rdx] ; jmp 0x49772c
0x00000000004a3aaa : add byte ptr [rax - 0x75], cl ; add al, 0xde ; lea r9, [rdx] ; jmp 0x4a3b0c
0x000000000045abde : add byte ptr [rax - 0x75], cl ; add al, 0xe8 ; test rax, rax ; je 0x45abf4 ; call rax
0x000000000046234b : add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x000000000044377f : add byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000045944f : add byte ptr [rax - 0x75], cl ; add eax, 0x280b41 ; ret
0x0000000000450f4f : add byte ptr [rax - 0x75], cl ; add eax, 0x289b11 ; ret
0x000000000041997f : add byte ptr [rax - 0x75], cl ; add eax, 0x2bd799 ; ret
0x000000000040f22b : add byte ptr [rax - 0x75], cl ; and al, 8 ; call rax
0x0000000000412656 : add byte ptr [rax - 0x75], cl ; and byte ptr [r11 + rcx*4 + 0x75], r9b ; sbb byte ptr [rax - 0x77], cl ; retf
0x000000000045039f : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004803fc : add byte ptr [rax - 0x75], cl ; enter -0x72b8, 0xc ; xor byte ptr [rax + 1], cl ; retf
0x00000000004aa4b3 : add byte ptr [rax - 0x75], cl ; jae 0x4aa4cc ; mov rdx, qword ptr [r15] ; mov rdi, r13 ; call r14
0x0000000000423baf : add byte ptr [rax - 0x75], cl ; je 0x423be1 ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000423bae : add byte ptr [rax - 0x75], cl ; je 0x423be2 ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000045d03b : add byte ptr [rax - 0x75], cl ; jl 0x45d06c ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000040fcc2 : add byte ptr [rax - 0x75], cl ; js 0x40fcec ; call rdx
0x00000000004012c3 : add byte ptr [rax - 0x75], cl ; loopne 0x401260 ; push rbp ; cld ; mov dword ptr [rax], edx ; nop ; leave ; ret
0x00000000004ad087 : add byte ptr [rax - 0x75], cl ; mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x000000000047beef : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000048304f : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; ret
0x00000000004a2560 : add byte ptr [rax - 0x75], cl ; pop rbp ; mov eax, 0x89fd8945 ; ret 0xe283
0x0000000000403133 : add byte ptr [rax - 0x75], cl ; pop rsp ; retf
0x0000000000418a71 : add byte ptr [rax - 0x75], cl ; push 0x74c98548 ; and cl, byte ptr [rax + 0x39] ; retf
0x0000000000417353 : add byte ptr [rax - 0x75], cl ; push 0x74c98548 ; sub byte ptr [rax + 0x39], cl ; retf
0x0000000000418696 : add byte ptr [rax - 0x75], cl ; push 0x75c08548 ; ret
0x00000000004021fd : add byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x0000000000414111 : add byte ptr [rax - 0x75], cl ; push rbx ; or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000043061f : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000495d42 : add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x48f8
0x000000000046ac93 : add byte ptr [rax - 0x75], cl ; test dword ptr [rax], esi ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0x8c20
0x000000000044bf77 : add byte ptr [rax - 0x75], cl ; xor byte ptr [rax - 0x75], cl ; jge 0x44bf33 ; mov r12d, r14d ; call r15
0x00000000004135ef : add byte ptr [rax - 0x76b80000], al ; ret
0x000000000047ae8d : add byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x000000000045c5a6 : add byte ptr [rax - 0x77], cl ; adc eax, 0x27c50a ; je 0x45c5c3 ; ret
0x0000000000497d26 : add byte ptr [rax - 0x77], cl ; add eax, 0x24247a ; ret
0x0000000000497d0b : add byte ptr [rax - 0x77], cl ; add eax, 0x242495 ; add rsp, 8 ; ret
0x000000000048967f : add byte ptr [rax - 0x77], cl ; add eax, 0x250e69 ; add rsp, 8 ; ret
0x000000000041aa1a : add byte ptr [rax - 0x77], cl ; add eax, 0x2bce3e ; ret
0x000000000041a515 : add byte ptr [rax - 0x77], cl ; add eax, 0x2bd2d3 ; ret
0x000000000041a4ed : add byte ptr [rax - 0x77], cl ; add eax, 0x2bd2f3 ; ret
0x000000000041a4cd : add byte ptr [rax - 0x77], cl ; add eax, 0x2bd30b ; ret
0x0000000000400660 : add byte ptr [rax - 0x77], cl ; call 0x4938d7ba
0x0000000000413c72 : add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000004159d3 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004a3d45 : add byte ptr [rax - 0x77], cl ; fdiv dword ptr [rbp + 0x11] ; add rsp, 0x40 ; pop rbx ; ret
0x00000000004a3e2c : add byte ptr [rax - 0x77], cl ; fdiv dword ptr [rbp + 0x12] ; add rsp, 0x50 ; pop rbx ; ret
0x000000000048360f : add byte ptr [rax - 0x77], cl ; ffreep st(6) ; and al, 0x5f ; add al, ch ; retf
0x00000000004137f7 : add byte ptr [rax - 0x77], cl ; fiadd word ptr [rcx + rcx*4 - 0x11] ; mov eax, r9d ; syscall
0x0000000000456dd6 : add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x00000000004567c0 : add byte ptr [rax - 0x77], cl ; fldl2t ; retf 0xfffd
0x0000000000461314 : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret
0x00000000004a6d3e : add byte ptr [rax - 0x77], cl ; fucomip st(1) ; ret
0x000000000041956b : add byte ptr [rax - 0x77], cl ; imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000402ae1 : add byte ptr [rax - 0x77], cl ; jbe 0x402afb ; syscall
0x000000000044dabf : add byte ptr [rax - 0x77], cl ; jo 0x44dae9 ; ret
0x0000000000489dab : add byte ptr [rax - 0x77], cl ; jrcxz 0x489dff ; mov esi, ebx ; syscall
0x000000000048b34d : add byte ptr [rax - 0x77], cl ; mov byte ptr [r8 + 0x15], r15b ; syscall
0x0000000000413dc3 : add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x000000000042482f : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rax ; call rcx
0x0000000000404b5f : add byte ptr [rax - 0x77], cl ; ret
0x0000000000472810 : add byte ptr [rax - 0x77], cl ; ret 0x148
0x000000000044a74b : add byte ptr [rax - 0x77], cl ; ret 0x16e9
0x000000000041ef27 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000412396 : add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000004143fa : add byte ptr [rax - 0x77], cl ; ret 0x294d
0x00000000004aa10c : add byte ptr [rax - 0x77], cl ; ret 0x3948
0x000000000044a7f7 : add byte ptr [rax - 0x77], cl ; ret 0x6ae9
0x00000000004040de : add byte ptr [rax - 0x77], cl ; ret 0x7ce9
0x0000000000461708 : add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000041c1dc : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000403e5f : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000411598 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000401302 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000004a985f : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000457e38 : add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x0000000000404473 : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000046bd67 : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000041069d : add byte ptr [rax - 0x77], cl ; ret 0xf748
0x0000000000415b58 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000044a762 : add byte ptr [rax - 0x77], cl ; ret 0xffe9
0x000000000044a267 : add byte ptr [rax - 0x77], cl ; retf
0x000000000043e504 : add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x000000000042b5fc : add byte ptr [rax - 0x77], cl ; retf 0x8349
0x000000000045fe6b : add byte ptr [rax - 0x77], cl ; retf 0x8948
0x0000000000411dc7 : add byte ptr [rax - 0x77], cl ; retf 0x894c
0x00000000004573d7 : add byte ptr [rax - 0x77], cl ; retf 0x8966
0x000000000042b53a : add byte ptr [rax - 0x77], cl ; retf 0x9066
0x0000000000457b89 : add byte ptr [rax - 0x77], cl ; retf 0xb60f
0x000000000043e386 : add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000043fefc : add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x0000000000448270 : add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000048bf31 : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000004a847f : add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x00000000004859a3 : add byte ptr [rax - 0x77], cl ; xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x00000000004114cf : add byte ptr [rax - 0x77], cl ; xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000045eb18 : add byte ptr [rax - 0x77], cl ; xor eax, eax ; jmp 0x45eae8
0x00000000004cd6d3 : add byte ptr [rax - 0x77ffffa9], bl ; out 0xfd, eax ; jmp qword ptr [rdx]
0x00000000004a6376 : add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x000000000047d7bf : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000047b94b : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000483ca7 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax - 0x73], cl ; add dword ptr [r15], r9d ; xchg eax, ebp ; ret 0xc283
0x000000000041150a : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000491548 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0xfffe
0x0000000000464e69 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; retf 6
0x00000000004070d8 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 0xa], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000044e913 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbx + rbp + 0x48], 0x8b ; push rax ; or dh, dh ; ret 0x8902
0x0000000000400422 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + rax - 1], 0xd0 ; add rsp, 8 ; ret
0x0000000000400b16 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + rcx - 0x41], 0x68 ; jg 0x400b78 ; add al, ch ; retf 0xaa4
0x0000000000479b96 : add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x84 ; popfq ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x00000000004a7a3f : add byte ptr [rax - 0x7bf0df06], al ; retf 4
0x00000000004aa5be : add byte ptr [rax - 0x7d], cl ; and al, 0x10 ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000488567 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc2d1d177
0x0000000000488566 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc2d1d178
0x0000000000420edc : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000041e317 : add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041df74 : add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x0000000000489c4d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000424a7d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000402d99 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000477f74 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x0000000000478144 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0x850f
0x00000000004123da : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; retf
0x0000000000463443 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000413bbf : add byte ptr [rax - 0x7d], cl ; cmp eax, 0x2c33e0 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000404b57 : add byte ptr [rax - 0x7d], cl ; cmp eax, 0x2d2400 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004a60a1 : add byte ptr [rax - 0x7d], cl ; in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000417daf : add byte ptr [rax - 0x7d], cl ; jg 0x417df5 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x0000000000458bda : add byte ptr [rax - 0x7d], cl ; jl 0x458c0d ; add byte ptr [rdx + rdi*2 - 0xa], sil ; ret
0x0000000000420362 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000047b906 : add byte ptr [rax - 0x7d], cl ; js 0x47b944 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000040726f : add byte ptr [rax - 0x7d], cl ; ret
0x000000000044795f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000048d43f : add byte ptr [rax - 0x7d], cl ; ret 0x4001
0x000000000044de67 : add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x0000000000478de7 : add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x00000000004104ef : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000457a94 : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000004a128f : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000487f1a : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000045f634 : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000042b629 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041f9b7 : add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x00000000004a983f : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x0000000000478fc8 : add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x0000000000425480 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043e5e3 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b657 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004881d7 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000041affa : add byte ptr [rax - 0x7d], cl ; retf
0x0000000000423509 : add byte ptr [rax - 0x7d], cl ; retf 0x4801
0x000000000040ea55 : add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x000000000041e110 : add byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000040eab5 : add byte ptr [rax - 0x7d], cl ; retf 0xeb08
0x000000000042705f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000047d8ff : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000004a4e42 : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x3901
0x0000000000420d5e : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; retf 2
0x00000000004514dd : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; push rsi ; ret
0x0000000000422d38 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf
0x0000000000420da2 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; xchg eax, ecx ; retf 2
0x000000000045c594 : add byte ptr [rax - 0x7f], cl ; ret 0x200
0x000000000043428b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004c8acb : add byte ptr [rax - 0x7ffffff5], dl ; outsd dx, dword ptr [rsi] ; hlt ; call rsp
0x00000000004cff9b : add byte ptr [rax - 0x80], ah ; add byte ptr [rax], al ; mov al, 0xf8 ; cli ; jmp qword ptr [rcx]
0x00000000004a996f : add byte ptr [rax - 0x80], al ; inc dword ptr [rsi*2 + 0x8b80f] ; add byte ptr [rax], al ; ret
0x000000000045e24d : add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412dfa : add byte ptr [rax - 1], bh ; ret
0x00000000004b0b54 : add byte ptr [rax - 7], dl ; jmp qword ptr [rax]
0x00000000004b0198 : add byte ptr [rax - 8], ch ; call qword ptr [rax + 0x20fff867]
0x00000000004876ab : add byte ptr [rax - 9], cl ; int1 ; mov rsi, rax ; call 0x423929
0x0000000000420d62 : add byte ptr [rax], 0 ; add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; retf 2
0x00000000004514e1 : add byte ptr [rax], 0 ; add al, ch ; push rsi ; ret
0x0000000000422d3c : add byte ptr [rax], 0 ; add al, ch ; retf
0x0000000000420da6 : add byte ptr [rax], 0 ; add al, ch ; xchg eax, ecx ; retf 2
0x0000000000416cfa : add byte ptr [rax], 0 ; add bl, dh ; ret
0x000000000044914d : add byte ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0xe175
0x0000000000435a8a : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; retf 0x8148
0x0000000000415b55 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000042c6bb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x00000000004a3e4b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, 0x26 ; syscall
0x000000000044ac8b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, 1 ; syscall
0x00000000004aadcb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x4aadec ; ret
0x0000000000436a6b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000045944b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x280b41] ; ret
0x00000000004368ab : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000044945b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x0000000000436bbb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000436b4b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000419793 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000000000042d2eb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044abbb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; syscall
0x000000000041c2f3 : add byte ptr [rax], 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004494ce : add byte ptr [rax], 0 ; add byte ptr [rbx - 0x3d], bl ; mov eax, 8 ; pop rbx ; ret
0x00000000004679a9 : add byte ptr [rax], 0 ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000405333 : add byte ptr [rax], 0 ; add byte ptr [rcx], dh ; imul al ; ret 0xbfac
0x000000000040ffa1 : add byte ptr [rax], 0 ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000434197 : add byte ptr [rax], 0 ; add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x0000000000435b13 : add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000042d851 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044a76d : add byte ptr [rax], 0 ; jmp 0x44a574
0x00000000004cff9d : add byte ptr [rax], 0 ; mov al, 0xf8 ; cli ; jmp qword ptr [rcx]
0x00000000004c55ee : add byte ptr [rax], 0x63 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x00000000004c8c6f : add byte ptr [rax], ah ; add byte ptr [rax], al ; cmp byte ptr [rip + 0x74a80000], cl ; hlt ; jmp qword ptr [rax]
0x00000000004d2e6f : add byte ptr [rax], ah ; jg 0x4d2e74 ; call qword ptr [rdx]
0x00000000004c870f : add byte ptr [rax], ah ; jrcxz 0x4c870a ; call rax
0x00000000004ce2bf : add byte ptr [rax], ah ; jrcxz 0x4ce2bf ; call qword ptr [rdi]
0x00000000004d1a5b : add byte ptr [rax], ah ; wait ; add byte ptr [rax], al ; shl byte ptr [rdx - 4], 1 ; jmp qword ptr [rdx]
0x00000000004b1a1e : add byte ptr [rax], al ; adc bl, cl ; stc ; push qword ptr [rax + rcx*8] ; stc ; push rax ; retf 0xfff9
0x00000000004cc32a : add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; hlt ; add byte ptr [r8], al ; pushfq ; retf
0x00000000004cc29e : add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; push -0x37ffffbd ; ret 0xfff7
0x00000000004cc28a : add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; push rsp ; add byte ptr [r8], al ; lodsb al, byte ptr [rsi] ; ret 0xfff7
0x00000000004d304a : add byte ptr [rax], al ; adc byte ptr [rcx - 0x79d00000], dh ; std ; jmp qword ptr [rax]
0x00000000004c8c4a : add byte ptr [rax], al ; adc byte ptr [rip + 0x74a00000], cl ; hlt ; call qword ptr [rax]
0x00000000004cbe06 : add byte ptr [rax], al ; adc rsi, rsi ; call rsp
0x00000000004c9a35 : add byte ptr [rax], al ; add ah, bh ; sbb al, byte ptr [rax] ; add ah, al ; ret
0x00000000004cc32d : add byte ptr [rax], al ; add ah, dh ; add byte ptr [r8], al ; pushfq ; retf
0x00000000004c800d : add byte ptr [rax], al ; add ah, dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x6d], ah ; jmp qword ptr [rsi]
0x00000000004cab3e : add byte ptr [rax], al ; add al, 0x2c ; add byte ptr [rax], al ; pop rsp ; sbb al, 0xf5 ; call qword ptr [rax]
0x00000000004cc63e : add byte ptr [rax], al ; add al, 0x47 ; add byte ptr [rax], al ; fcom st(0), st(4) ; idiv edi ; retf
0x00000000004d1b19 : add byte ptr [rax], al ; add al, ah ; wait ; add byte ptr [rax], al ; push rax ; cld ; jmp qword ptr [rdx]
0x00000000004ce2f9 : add byte ptr [rax], al ; add al, al ; movsxd rax, dword ptr [rax] ; add byte ptr [rax - 0x1d], al ; clc ; call qword ptr [rcx]
0x00000000004cfb11 : add byte ptr [rax], al ; add al, bl ; jnp 0x4cfb21 ; add al, cl ; fdivp st(2) ; jmp qword ptr [rax]
0x00000000004041f6 : add byte ptr [rax], al ; add al, ch ; add bh, byte ptr [rsi - 0x76b30041] ; imul eax ; retf 0x1d1
0x0000000000400cd2 : add byte ptr [rax], al ; add al, ch ; idiv ah ; add byte ptr [rax], al ; nop ; pop rbp ; ret
0x00000000004cfd21 : add byte ptr [rax], al ; add al, ch ; jge 0x4cfd31 ; add byte ptr [rax - 0x17], bh ; cli ; jmp qword ptr [rax]
0x000000000047631b : add byte ptr [rax], al ; add al, ch ; lodsd eax, dword ptr [rsi] ; ret 0xfffa
0x0000000000420d63 : add byte ptr [rax], al ; add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; retf 2
0x00000000004514e2 : add byte ptr [rax], al ; add al, ch ; push rsi ; ret
0x00000000004a5c45 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000040f996 : add byte ptr [rax], al ; add al, ch ; ret 0x3aa
0x0000000000400d7d : add byte ptr [rax], al ; add al, ch ; retf
0x000000000046ccce : add byte ptr [rax], al ; add al, ch ; retf 0xe0
0x000000000049537e : add byte ptr [rax], al ; add al, ch ; retf 0xf6b0
0x0000000000420da7 : add byte ptr [rax], al ; add al, ch ; xchg eax, ecx ; retf 2
0x00000000004cbe01 : add byte ptr [rax], al ; add al, cl ; add byte ptr ds:[rax], al ; adc rsi, rsi ; call rsp
0x00000000004d1d01 : add byte ptr [rax], al ; add al, cl ; popfq ; add byte ptr [rax], al ; test al, 0xd3 ; cld ; call qword ptr [rax]
0x00000000004cfb29 : add byte ptr [rax], al ; add al, dh ; jnp 0x4cfb39 ; add al, dl ; loope 0x4cfb37 ; jmp qword ptr [rbx]
0x00000000004cd809 : add byte ptr [rax], al ; add al, dl ; pop rax ; add byte ptr [rax], al ; mov al, 0x4d ; clc ; call qword ptr [rax]
0x00000000004502dd : add byte ptr [rax], al ; add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000046056e : add byte ptr [rax], al ; add bh, al ; test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x000000000040fd8d : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004a120d : add byte ptr [rax], al ; add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x000000000047e96f : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x00000000004a3a58 : add byte ptr [rax], al ; add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000004a14d7 : add byte ptr [rax], al ; add bl, ch ; ret
0x0000000000410666 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x0000000000416cfb : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004ca445 : add byte ptr [rax], al ; add byte ptr [0xfffffffff6240000], cl ; hlt ; call qword ptr [rdi]
0x000000000047fab9 : add byte ptr [rax], al ; add byte ptr [r9 + rbp - 0x48], sil ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000004cbce1 : add byte ptr [rax], al ; add byte ptr [rax + 0x1800003d], ch ; sahf ; cmc ; jmp qword ptr [rbx]
0x00000000004ce2b9 : add byte ptr [rax], al ; add byte ptr [rax + 0x20000063], al ; jrcxz 0x4ce2c5 ; call qword ptr [rdi]
0x00000000004a3e4d : add byte ptr [rax], al ; add byte ptr [rax + 0x26], bh ; syscall
0x00000000004cbfc1 : add byte ptr [rax], al ; add byte ptr [rax + 0x28000040], cl ; and dh, bh ; call qword ptr [rax]
0x00000000004ce2d1 : add byte ptr [rax], al ; add byte ptr [rax + 0x28000063], bl ; jrcxz 0x4ce2dd ; call qword ptr [rcx]
0x000000000046a588 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000467876 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8349
0x0000000000484c28 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x0000000000466c27 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf 0x8948
0x0000000000488bce : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf 0x8d48
0x00000000004cfac9 : add byte ptr [rax], al ; add byte ptr [rax + 0x3000007b], dl ; fdivr st(2) ; jmp rdx
0x00000000004d2ae1 : add byte ptr [rax], al ; add byte ptr [rax + 0x380000ab], ch ; push -3 ; call qword ptr [rbx]
0x000000000042054f : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004a6891 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000041b3ad : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000004144ad : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000004a6926 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x9272
0x000000000042f0d4 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x00000000004384c1 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x0000000000411a5b : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000044914e : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0xe175
0x00000000004cbcc9 : add byte ptr [rax], al ; add byte ptr [rax + 0x3d], dl ; sahf ; cmc ; jmp qword ptr [rbx]
0x00000000004cbd89 : add byte ptr [rax], al ; add byte ptr [rax + 0x3e], dl ; add byte ptr [rax], al ; add byte ptr [rsi], 0xf6 ; jmp qword ptr [rbx]
0x000000000044ad74 : add byte ptr [rax], al ; add byte ptr [rax + 0x48], bh ; syscall
0x00000000004cd079 : add byte ptr [rax], al ; add byte ptr [rax + 0x51], al ; add byte ptr [rax], al ; mov al, 8 ; clc ; call qword ptr [rdx]
0x00000000004cd0b1 : add byte ptr [rax], al ; add byte ptr [rax + 0x51], bh ; add byte ptr [rax], al ; or byte ptr [rcx], cl ; clc ; call qword ptr [rcx]
0x00000000004cdfb1 : add byte ptr [rax], al ; add byte ptr [rax + 0x60], bh ; add byte ptr [rax], al ; cmp bh, bl ; std ; jmp qword ptr [rdi]
0x0000000000478dd3 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; add al, 0x87 ; add rax, rdi ; jmp rax
0x000000000046cca4 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000048cbff : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x000000000048cccd : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0xc749
0x000000000047bbfd : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x00000000004ce4a9 : add byte ptr [rax], al ; add byte ptr [rax + 0x65], dh ; add byte ptr [rax], al ; xor dl, ah ; std ; call rdx
0x00000000004cc7d1 : add byte ptr [rax], al ; add byte ptr [rax + 0x68000048], bl ; loopne 0x4cc7dc ; jmp qword ptr [rcx]
0x000000000047f89d : add byte ptr [rax], al ; add byte ptr [rax + 0x68], bh ; syscall
0x000000000047f88d : add byte ptr [rax], al ; add byte ptr [rax + 0x6b], bh ; syscall
0x000000000047f8ad : add byte ptr [rax], al ; add byte ptr [rax + 0x6c], bh ; syscall
0x00000000004cdae9 : add byte ptr [rax], al ; add byte ptr [rax + 0x7000005b], dh ; outsb dx, byte ptr [rsi] ; clc ; call qword ptr [rdi]
0x00000000004cd4c9 : add byte ptr [rax], al ; add byte ptr [rax + 0x77000055], dl ; xor bl, dh ; jmp qword ptr [rbx]
0x0000000000445a8d : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000004d1cd9 : add byte ptr [rax], al ; add byte ptr [rax + 0x9d], ah ; mov ah, 0xfc ; call qword ptr [rax]
0x000000000044b8fd : add byte ptr [rax], al ; add byte ptr [rax + 0xb], bh ; syscall
0x00000000004c8b89 : add byte ptr [rax], al ; add byte ptr [rax + 0xc], dl ; add byte ptr [rax], al ; jb 0x4c8b91 ; jmp qword ptr [rax]
0x00000000004858c7 : add byte ptr [rax], al ; add byte ptr [rax + 0xca], bh ; syscall
0x000000000044a5b2 : add byte ptr [rax], al ; add byte ptr [rax + 0xe5], bh ; syscall
0x000000000040eedd : add byte ptr [rax], al ; add byte ptr [rax + 0xe], bh ; syscall
0x00000000004494a5 : add byte ptr [rax], al ; add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x000000000041682d : add byte ptr [rax], al ; add byte ptr [rax + 0xf], al ; mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004516ad : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; mov esi, 0x83480147 ; ret
0x000000000041e022 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000454a32 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000041f0d1 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x894c
0x0000000000449418 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x000000000047e68d : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000455a46 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xff85
0x00000000004977ca : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x000000000044ac8d : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; syscall
0x0000000000496309 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x00000000004969d6 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x149
0x0000000000435a8b : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0x8148
0x00000000004524d3 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0x8b48
0x0000000000497a93 : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x00000000004b9c09 : add byte ptr [rax], al ; add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x00000000004cbf85 : add byte ptr [rax], al ; add byte ptr [rax + rax*2], cl ; add ah, ah ; fdivrp st(6) ; jmp qword ptr [rsi]
0x00000000004ce7c5 : add byte ptr [rax], al ; add byte ptr [rax + rbp*2 + 0x2e740000], cl ; stc ; call qword ptr [rsi]
0x00000000004c8fad : add byte ptr [rax], al ; add byte ptr [rax + rdx], dh ; add byte ptr [rsi + rax*4 - 0xc], cl ; call qword ptr [rdi]
0x0000000000478e15 : add byte ptr [rax], al ; add byte ptr [rax - 0x14dff3b5], al ; retf 0x9066
0x00000000004ca6d9 : add byte ptr [rax], al ; add byte ptr [rax - 0x1fffffd9], ah ; std ; hlt ; call qword ptr [rsi]
0x00000000004d12d9 : add byte ptr [rax], al ; add byte ptr [rax - 0x2fffff6d], ah ; mov bh, 0xfb ; call qword ptr [rax]
0x000000000047bae6 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000418751 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004178cd : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000044b721 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000047099d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0x8590
0x00000000004110e1 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0x8c20
0x000000000045eedd : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffa0
0x000000000044ab8d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x00000000004930dd : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000047ebcd : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000047ebad : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000047ec0d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x000000000047ebbd : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000047ebfd : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000045c79d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x00000000004cdfed : add byte ptr [rax], al ; add byte ptr [rax - 0x3de40000], dh ; clc ; jmp rax
0x000000000045a2f7 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000045a2ce : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x0000000000459c2e : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x8511
0x000000000048ca13 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x00000000004d17a1 : add byte ptr [rax], al ; add byte ptr [rax - 0x68], ch ; add byte ptr [rax], al ; js 0x4d17fe ; cld ; jmp qword ptr [rcx]
0x00000000004d1691 : add byte ptr [rax], al ; add byte ptr [rax - 0x69], bl ; add byte ptr [rax], al ; or byte ptr [rcx - 4], al ; call rdi
0x00000000004c8011 : add byte ptr [rax], al ; add byte ptr [rax - 0x6d], ah ; jmp qword ptr [rsi]
0x00000000004d22b9 : add byte ptr [rax], al ; add byte ptr [rax - 0x6fffff5d], al ; sbb edi, ebp ; jmp qword ptr [rcx]
0x00000000004caeb9 : add byte ptr [rax], al ; add byte ptr [rax - 0x6fffffd1], al ; cmc ; jmp rsi
0x0000000000458d4b : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], r9d ; ret
0x000000000044ee4d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add eax, 0x2894a9 ; ret
0x0000000000458d69 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r9b, byte ptr [rax + 0x39] ; ret
0x0000000000458d87 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [rax + 0x39] ; ret
0x000000000046d219 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor eax, 0x267bfd ; jmp rax
0x000000000041ab4d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000044377d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000045944d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add eax, 0x280b41 ; ret
0x0000000000450f5d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add eax, 0x289b11 ; ret
0x000000000041997d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add eax, 0x2bd799 ; ret
0x000000000040fcc0 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; js 0x40fcee ; call rdx
0x000000000047beed : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000403131 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rsp ; retf
0x000000000043061d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000041a513 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add eax, 0x2bd2d3 ; ret
0x000000000041a4eb : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add eax, 0x2bd2f3 ; ret
0x000000000041a4cb : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add eax, 0x2bd30b ; ret
0x00000000004199ad : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000048360d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ffreep st(6) ; and al, 0x5f ; add al, ch ; retf
0x00000000004137f5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fiadd word ptr [rcx + rcx*4 - 0x11] ; mov eax, r9d ; syscall
0x00000000004567be : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fldl2t ; retf 0xfffd
0x0000000000461312 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret
0x00000000004a6d3c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(1) ; ret
0x0000000000402adf : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jbe 0x402afd ; syscall
0x000000000044dabd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jo 0x44daeb ; ret
0x0000000000413dc1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x000000000042482d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rax ; call rcx
0x0000000000411511 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000412394 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000461b64 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000041cbad : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004a985d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000046c005 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000041069b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x0000000000415b56 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000044cec2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x000000000045fe69 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000042b538 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x0000000000457b87 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xb60f
0x000000000043e384 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000043fefa : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x00000000004a847d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x00000000004114cd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000045eb16 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xor eax, eax ; jmp 0x45eaea
0x00000000004cd6d1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77ffffa9], bl ; out 0xfd, eax ; jmp qword ptr [rdx]
0x00000000004a6374 : add byte ptr [rax], al ; add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x000000000047d7bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000041e315 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041df72 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x0000000000489c4b : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000424a7b : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000458bd8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; jl 0x458c0f ; add byte ptr [rdx + rdi*2 - 0xa], sil ; ret
0x000000000047b904 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; js 0x47b946 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000040726d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044795d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000048d43d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4001
0x00000000004104ed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004a128d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000487f18 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000042c343 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a983d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000047cc7e : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043fca1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042c36d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042705d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00000000004a4e40 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x3901
0x0000000000435a84 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004c8ac9 : add byte ptr [rax], al ; add byte ptr [rax - 0x7ffffff5], dl ; outsd dx, dword ptr [rsi] ; hlt ; call rsp
0x00000000004cff99 : add byte ptr [rax], al ; add byte ptr [rax - 0x80], ah ; add byte ptr [rax], al ; mov al, 0xf8 ; cli ; jmp qword ptr [rcx]
0x000000000045e24b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412df8 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000004876a9 : add byte ptr [rax], al ; add byte ptr [rax - 9], cl ; int1 ; mov rsi, rax ; call 0x42392b
0x00000000004d1a59 : add byte ptr [rax], al ; add byte ptr [rax], ah ; wait ; add byte ptr [rax], al ; shl byte ptr [rdx - 4], 1 ; jmp qword ptr [rdx]
0x00000000004c9a32 : add byte ptr [rax], al ; add byte ptr [rax], al ; add ah, bh ; sbb al, byte ptr [rax] ; add ah, al ; ret
0x0000000000415deb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf
0x000000000040fd8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004a120b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x000000000041996b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004144ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000047bbfb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x000000000047f89b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x68], bh ; syscall
0x000000000047f88b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x6b], bh ; syscall
0x000000000047f8ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x6c], bh ; syscall
0x0000000000445a8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x000000000044b8fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xb], bh ; syscall
0x00000000004516ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; mov esi, 0x83480147 ; ret
0x00000000004a995b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x000000000047099b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0x8590
0x000000000045eedb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffa0
0x000000000044ab8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000047ebcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000047ebab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000047ec0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x000000000047ebbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000047ebfb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000045c79b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x000000000044ee4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add eax, 0x2894a9 ; ret
0x000000000041ab4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000450f5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add eax, 0x289b11 ; ret
0x000000000041997b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add eax, 0x2bd799 ; ret
0x000000000047beeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x00000000004199ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000044dabb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jo 0x44daed ; ret
0x000000000042482b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rax ; call rcx
0x000000000041cbab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004a985b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000004a847b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x00000000004a6372 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x000000000040726b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044795b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000048d43b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4001
0x00000000004104eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004a983b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000042705b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000041992b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000004b1a15 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; retf
0x00000000004b1a17 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; retf
0x00000000004b1a19 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; retf
0x000000000041a309 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004a86b5 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041a30a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000418596 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004bba92 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004bbf82 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x00000000004bb142 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004bbad2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x00000000004bbfc2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x00000000004bb13a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x00000000004b1a1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; retf
0x00000000004454ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000043634b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x000000000041a30b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004aaffb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x75c08507], cl ; or dh, bl ; ret
0x00000000004c0d5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], ah ; push -4 ; lcall [rax + 0x57] ; cld ; call qword ptr [rax]
0x0000000000447b9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000047dc4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x000000000042516b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*8 - 0x7cb7dd8c], al ; ret 0x4801
0x00000000004273ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000425cbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000495edb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; call 0x490bf104
0x000000000045b3cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], cl ; retf 0x4a8d
0x0000000000413f2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x0000000000444f9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx + 0x48028801], cl ; lea eax, [rdx] ; ret
0x00000000004437eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x000000000041b0ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x00000000004a0c69 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x27 ; syscall
0x000000000044d799 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x63 ; syscall
0x000000000047f119 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0xc9 ; syscall
0x000000000041142b : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; retf
0x00000000004239db : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x4804
0x000000000044b89b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x000000000047eb8c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000450fb5 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000048bddf : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000047c70c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004494a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x00000000004c0d5c : add byte ptr [rax], al ; add byte ptr [rax], al ; and ebp, dword ptr [rdx - 4] ; lcall [rax + 0x57] ; cld ; call qword ptr [rax]
0x000000000042c6bc : add byte ptr [rax], al ; add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x000000000042c6cc : add byte ptr [rax], al ; add byte ptr [rax], al ; bsf eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x000000000042c6dc : add byte ptr [rax], al ; add byte ptr [rax], al ; bsf eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x000000000042c8fc : add byte ptr [rax], al ; add byte ptr [rax], al ; bsf eax, eax ; lea rax, [rax + rdi - 0x10] ; ret
0x000000000047631a : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x4225d6
0x0000000000400b95 : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x44ce16
0x000000000040fd8c : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000041b01c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000004a120c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rbx
0x00000000004bdabc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004bcc6c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004c9a33 : add byte ptr [rax], al ; add byte ptr [rax], al ; cld ; sbb al, byte ptr [rax] ; add ah, al ; ret
0x0000000000449417 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x0000000000489c4a : add byte ptr [rax], al ; add byte ptr [rax], al ; cmp rax, -1 ; cmove rax, rdx ; ret
0x00000000004bb17c : add byte ptr [rax], al ; add byte ptr [rax], al ; enter 2, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004a89b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; je 0x4a89a6 ; add rsp, 0x18 ; ret
0x00000000004a8a44 : add byte ptr [rax], al ; add byte ptr [rax], al ; je 0x4a8a2c ; ret
0x00000000004a8a85 : add byte ptr [rax], al ; add byte ptr [rax], al ; je 0x4a8a9a ; mov qword ptr [rdi + rsi*8], rdx ; ret
0x0000000000473ae0 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x4705a1
0x00000000004a14d6 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x4a14a4
0x000000000046199d : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000004460bc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x00000000004460cc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x00000000004460dc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x00000000004460ec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x00000000004460fc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x000000000044603c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 1] ; ret
0x000000000044604c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x000000000044605c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x000000000044606c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x000000000044607c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x000000000044608c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x000000000044609c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x00000000004460ac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x000000000044602c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x000000000044ee4c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rip + 0x2894a9] ; ret
0x000000000046d218 : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, [rip + 0x267bfd] ; jmp rax
0x0000000000444f9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x00000000004437ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000413c6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x0000000000445a8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x000000000044546c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000041a4ad : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 0x24], ebp ; mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x000000000044547c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004a3e4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x26 ; syscall
0x000000000047f89c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x000000000047f88c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x000000000047f8ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x000000000044b8fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x000000000041992c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000004977c9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000044ac8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; syscall
0x0000000000497a92 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x0000000000444fdc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x00000000004aadcc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x4aadeb ; ret
0x00000000004aaffc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x4ab01b ; ret
0x00000000004454ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000044a30c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edi, edx ; mov eax, esi ; syscall
0x000000000043634c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000436a6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000044dabc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rax + 0x20], rsi ; ret
0x00000000004869fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 0x100], r11 ; call r10
0x000000000048739c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 0xe0], r11 ; call r10
0x00000000004a8adc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000041991c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, -1 ; ret
0x000000000045c79c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, 0xf ; syscall
0x000000000047ebac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, 1 ; ret
0x000000000047ebbc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, 2 ; ret
0x000000000047ebcc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, 3 ; ret
0x000000000047ebdc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, 4 ; ret
0x000000000047ebec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, 5 ; ret
0x000000000047ebfc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, 6 ; ret
0x000000000047ec0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, 7 ; ret
0x000000000048bdec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000048675c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000047beec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000041999c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x00000000004a8a5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x90] ; ret
0x00000000004a8aec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa0] ; ret
0x00000000004a8b4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa8] ; ret
0x00000000004a8b3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb0] ; ret
0x00000000004a8afc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb8] ; ret
0x000000000045944c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x280b41] ; ret
0x0000000000450f5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x289b11] ; ret
0x000000000041997c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2bd799] ; ret
0x00000000004a682c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rsi + 0xa8] ; ret
0x000000000047dc4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, r8 ; vzeroupper ; ret
0x00000000004199ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000043061c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004368ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000042482c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rax ; call rcx
0x000000000048b26c : add byte ptr [rax], al ; add byte ptr [rax], al ; movsx eax, dl ; sub eax, ecx ; ret
0x000000000042d55c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000413f2c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000044945c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x0000000000426f5c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00000000004364dc : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000436bbc : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000043645c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000436b4c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000401cd2 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; leave ; ret
0x00000000004a0c6a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0x27 ; syscall
0x000000000044d79a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0x63 ; syscall
0x000000000047f11a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0xc9 ; syscall
0x000000000044d9d7 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x000000000048a032 : add byte ptr [rax], al ; add byte ptr [rax], al ; or dword ptr [rip + 0x24e1ab], 1 ; pop rbx ; ret
0x000000000040119e : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000047d191 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041a30c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041295c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000418598 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004bca8c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004bd224 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004bba94 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004bbf84 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x00000000004bb144 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004bcac4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x00000000004bd264 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x00000000004bbad4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x00000000004bbfc4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x00000000004c2885 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x3b9a
0x00000000004bb13c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x00000000004bba8c : add byte ptr [rax], al ; add byte ptr [rax], al ; shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x000000000040041f : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x400433 ; call rax
0x000000000047d7bc : add byte ptr [rax], al ; add byte ptr [rax], al ; test rsi, rsi ; jne 0x47d7d5 ; xor rax, rax ; ret
0x000000000042cb9c : add byte ptr [rax], al ; add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x00000000004188ac : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044abbc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; syscall
0x0000000000415adc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; test rdx, rdx ; jne 0x415afc ; ret
0x000000000047d7ac : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x0000000000445e6c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004cbf71 : add byte ptr [rax], al ; add byte ptr [rax], bh ; add byte ptr [rax], al ; call 0x114cb665
0x0000000000400b91 : add byte ptr [rax], al ; add byte ptr [rax], bh ; call 0x44ce1a
0x00000000004d2571 : add byte ptr [rax], al ; add byte ptr [rax], bh ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; js 0x4d25c2 ; std ; call qword ptr [rdx]
0x00000000004c8c71 : add byte ptr [rax], al ; add byte ptr [rax], bh ; or eax, 0x74a80000 ; hlt ; jmp qword ptr [rax]
0x000000000048b1ac : add byte ptr [rax], al ; add byte ptr [rax], bh ; retf 0x850f
0x00000000004ccf61 : add byte ptr [rax], al ; add byte ptr [rax], ch ; push rax ; add byte ptr [rax], al ; mov byte ptr [rdi], al ; clc ; call qword ptr [rcx]
0x00000000004d1541 : add byte ptr [rax], al ; add byte ptr [rax], cl ; xchg eax, esi ; add byte ptr [rax], al ; fcom dword ptr [rsp + rdi*8] ; call qword ptr [rdx]
0x00000000004cc369 : add byte ptr [rax], al ; add byte ptr [rax], dh ; add byte ptr [rax], r8b ; ror bl, 0xf7 ; call qword ptr [rax]
0x00000000004d2e69 : add byte ptr [rax], al ; add byte ptr [rax], dh ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; and byte ptr [rdi - 3], bh ; call qword ptr [rdx]
0x00000000004cc329 : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax], al ; add ah, dh ; add byte ptr [r8], al ; pushfq ; retf
0x00000000004cc2b1 : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rbx + rax*2], bh ; add ah, al ; ret 0xfff7
0x00000000004d3049 : add byte ptr [rax], al ; add byte ptr [rax], dl ; mov cl, 0 ; add byte ptr [rax], dh ; xchg ch, bh ; jmp qword ptr [rax]
0x00000000004c8c49 : add byte ptr [rax], al ; add byte ptr [rax], dl ; or eax, 0x74a00000 ; hlt ; call qword ptr [rax]
0x00000000004b1a1d : add byte ptr [rax], al ; add byte ptr [rax], dl ; retf
0x000000000044a8a4 : add byte ptr [rax], al ; add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; ret
0x00000000004983bd : add byte ptr [rax], al ; add byte ptr [rbp + 0x12], dh ; add rsp, 0x38 ; ret
0x00000000004a9951 : add byte ptr [rax], al ; add byte ptr [rbp + 0x1a], dh ; ret
0x000000000047fc0b : add byte ptr [rax], al ; add byte ptr [rbp + 0x1b], dh ; add rsp, 0x38 ; ret
0x0000000000449aec : add byte ptr [rax], al ; add byte ptr [rbp + 0x23], dh ; add rsp, 0x20 ; pop rbx ; ret
0x000000000048c172 : add byte ptr [rax], al ; add byte ptr [rbp + 0x27], dh ; add rsp, 0x68 ; ret
0x000000000048c0b2 : add byte ptr [rax], al ; add byte ptr [rbp + 0x2c], dh ; add rsp, 0x38 ; ret
0x0000000000459375 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x000000000048c2d3 : add byte ptr [rax], al ; add byte ptr [rbp + 0x36], dh ; add rsp, 0x78 ; ret
0x000000000049574f : add byte ptr [rax], al ; add byte ptr [rbp + 0x39], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000049758e : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], dh ; leave ; ret
0x000000000044b9ed : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x0000000000482b7e : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000044aad4 : add byte ptr [rax], al ; add byte ptr [rbp + 0x42], dh ; add rsp, 0x58 ; ret
0x000000000047fad9 : add byte ptr [rax], al ; add byte ptr [rbp + 0x45], dh ; add rsp, 0x58 ; ret
0x000000000045c934 : add byte ptr [rax], al ; add byte ptr [rbp + 0x4a], dh ; add rsp, 0x148 ; ret
0x0000000000417705 : add byte ptr [rax], al ; add byte ptr [rbp + 0x4a], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000044ae64 : add byte ptr [rax], al ; add byte ptr [rbp + 0x4a], dh ; add rsp, 0x68 ; ret
0x00000000004958dd : add byte ptr [rax], al ; add byte ptr [rbp + 0x5a], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004957ff : add byte ptr [rax], al ; add byte ptr [rbp + 0x6e], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004d07ca : add byte ptr [rax], al ; add byte ptr [rbp + 0xe], ch ; adc byte ptr [rbx + 0x80e5802], al ; ret
0x000000000044b803 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; ret
0x00000000004a3c38 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; add rsp, 0x38 ; ret
0x000000000045c6ec : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x00000000004982da : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x000000000041b28d : add byte ptr [rax], al ; add byte ptr [rbp + 6], dh ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000410a7e : add byte ptr [rax], al ; add byte ptr [rbp + 8], dh ; add rsp, 0xd8 ; ret
0x000000000047fb5c : add byte ptr [rax], al ; add byte ptr [rbp + 8], dh ; movzx eax, al ; add rsp, 0x58 ; ret
0x00000000004a8a86 : add byte ptr [rax], al ; add byte ptr [rbp + rax + 0x48], dh ; mov dword ptr [rdi + rsi*8], edx ; ret
0x000000000040186f : add byte ptr [rax], al ; add byte ptr [rbp + rax - 0x18], dh ; mov bh, 0xc0 ; add al, 0 ; leave ; ret
0x000000000040155c : add byte ptr [rax], al ; add byte ptr [rbp + rax - 0x18], dh ; retf 0x4c3
0x00000000004202e9 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x46], cl ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000047c05c : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x000000000047c156 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x000000000044d6f8 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x000000000042f0cd : add byte ptr [rax], al ; add byte ptr [rbp - 0x73], cl ; mov dword ptr [rdi], esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x00000000004704e3 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0xc748
0x000000000042c2f8 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004cec5d : add byte ptr [rax], al ; add byte ptr [rbp*2 - 0x1db40000], ah ; stc ; jmp qword ptr [rax]
0x00000000004d22ed : add byte ptr [rax], al ; add byte ptr [rbx + 0x1bcc0000], dh ; std ; jmp rsp
0x000000000048a033 : add byte ptr [rax], al ; add byte ptr [rbx + 0x24e1ab0d], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x00000000004595a9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x00000000004454ad : add byte ptr [rax], al ; add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x0000000000444fdd : add byte ptr [rax], al ; add byte ptr [rbx + 0x48028901], cl ; lea eax, [rdx + 3] ; ret
0x000000000043634d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x000000000041c2f4 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000415502 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004184b4 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000411089 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000045b8dd : add byte ptr [rax], al ; add byte ptr [rbx + 0x63], cl ; xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x00000000004aadcd : add byte ptr [rax], al ; add byte ptr [rbx + 0x75c08507], cl ; or dh, bl ; ret
0x00000000004cc2b5 : add byte ptr [rax], al ; add byte ptr [rbx + rax*2], bh ; add ah, al ; ret 0xfff7
0x00000000004cda55 : add byte ptr [rax], al ; add byte ptr [rbx + rbx*2], bl ; add byte ptr [rax], al ; and al, 0x65 ; clc ; call rcx
0x00000000004a8a45 : add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x00000000004cd265 : add byte ptr [rax], al ; add byte ptr [rbx + rdx*2], ch ; add byte ptr [rax], al ; push rsp ; sbb al, 0xf8 ; jmp qword ptr [rdx]
0x00000000004d12ed : add byte ptr [rax], al ; add byte ptr [rbx + rdx*4 - 0x48340000], dh ; sti ; call qword ptr [rdx]
0x00000000004d12c5 : add byte ptr [rax], al ; add byte ptr [rbx + rdx*4 - 0x483c0000], cl ; sti ; call qword ptr [rdx]
0x00000000004ce2e5 : add byte ptr [rax], al ; add byte ptr [rbx - 0x1ccc0000], ch ; clc ; call qword ptr [rcx]
0x0000000000410efa : add byte ptr [rax], al ; add byte ptr [rbx - 0x3d], bl ; call 0x44d937
0x00000000004494d6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x00000000004494e4 : add byte ptr [rax], al ; add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x00000000004494dd : add byte ptr [rax], al ; add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x00000000004494f2 : add byte ptr [rax], al ; add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x00000000004494eb : add byte ptr [rax], al ; add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x00000000004494cf : add byte ptr [rax], al ; add byte ptr [rbx - 0x3d], bl ; mov eax, 8 ; pop rbx ; ret
0x000000000047bea7 : add byte ptr [rax], al ; add byte ptr [rbx - 0x3d], bl ; nop dword ptr [rax] ; ret
0x000000000046e99d : add byte ptr [rax], al ; add byte ptr [rbx - 0x4f743], al ; jmp qword ptr [rax]
0x00000000004679aa : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000004c0d5d : add byte ptr [rax], al ; add byte ptr [rbx], ah ; push -4 ; lcall [rax + 0x57] ; cld ; call qword ptr [rax]
0x0000000000461e1b : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; retf 0x8944
0x0000000000412684 : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x000000000041a4ae : add byte ptr [rax], al ; add byte ptr [rcx + 0x4789246f], cl ; adc byte ptr [rbx + 0x5d], bl ; ret
0x000000000047b9ea : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x0000000000462487 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000046e268 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x00000000004c8c5d : add byte ptr [rax], al ; add byte ptr [rcx + 0x749c0000], ah ; hlt ; call qword ptr [rdx]
0x000000000046af76 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x46 ; or al, 0x83 ; ret
0x0000000000482fea : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x87 ; adc eax, 0x89000003 ; ret 0xe8c0
0x000000000046f202 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; ret 0x3941
0x0000000000447b9d : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000040f413 : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0x149
0x00000000004c80cd : add byte ptr [rax], al ; add byte ptr [rcx + rax - 0x66a20000], dl ; call qword ptr [rcx]
0x00000000004cd88d : add byte ptr [rax], al ; add byte ptr [rcx + rbx*2], dl ; add ah, cl ; push rcx ; clc ; jmp qword ptr [rdx]
0x00000000004ad92d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x000000000041bbec : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047db8d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x00000000004ad08d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x000000000042516d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*8 - 0x7cb7dd8c], al ; ret 0x4801
0x000000000045c860 : add byte ptr [rax], al ; add byte ptr [rcx - 0x46], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000044c638 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44c647 ; call r12
0x000000000044c668 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44c677 ; call r12
0x000000000045a019 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; push rsi ; cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000460d81 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000405afe : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x0000000000484022 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000041e145 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000004273ad : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000425cbd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000048d209 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0x7501
0x0000000000415b4f : add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; xchg eax, edi ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000042cd70 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x000000000042cd96 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x00000000004aafbd : add byte ptr [rax], al ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000405334 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; imul al ; ret 0xbfac
0x0000000000496ed4 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; imul al ; ret 0xf695
0x000000000044b8b3 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x000000000040ffa2 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000042c67a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x0000000000495edd : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; call 0x490bf102
0x0000000000415add : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x415afb ; ret
0x0000000000434198 : add byte ptr [rax], al ; add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x00000000004a87b3 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call r14
0x00000000004a87db : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call rax
0x00000000004a952a : add byte ptr [rax], al ; add byte ptr [rdi + 2], dh ; sbb eax, eax ; ret
0x00000000004cc63d : add byte ptr [rax], al ; add byte ptr [rdi + rax*2], al ; add byte ptr [rax], al ; fcom st(0), st(4) ; idiv edi ; retf
0x00000000004c867d : add byte ptr [rax], al ; add byte ptr [rdi + rax], al ; add ah, bh ; fdivr st(3), st(0) ; call rsp
0x000000000045b3cd : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], cl ; retf 0x4a8d
0x0000000000464de3 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; or al, 0x89 ; ret 0xc689
0x00000000004c965d : add byte ptr [rax], al ; add byte ptr [rdi + rdx], ah ; add byte ptr [rax], al ; cld ; lodsb al, byte ptr [rsi] ; hlt ; jmp rdx
0x00000000004ca6ed : add byte ptr [rax], al ; add byte ptr [rdi - 0x2140000], dh ; hlt ; call qword ptr [rsi]
0x000000000040eeb4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x8944c689 ; ret 0xeab8
0x000000000048b354 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x940fc085 ; ret 0x3d
0x0000000000435b14 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000004493a5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x0000000000436b4d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000436bbd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000455d19 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4e ; add dword ptr [rcx - 0x77], eax ; retf
0x000000000044945d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x0000000000426f5d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000413f2d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042d55d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042c8fd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000042c6dd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000042c6cd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000042c6bd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x000000000046e262 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov ss, word ptr [rax + rax + 0x63490000] ; ret 0x8948
0x000000000045a319 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc083
0x0000000000467041 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; retf 0x45e9
0x000000000040ee99 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sub dword ptr [rsp + 0xf0], eax ; syscall
0x0000000000480b40 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x0000000000444f9d : add byte ptr [rax], al ; add byte ptr [rdx + 0x48028801], cl ; lea eax, [rdx] ; ret
0x00000000004437ed : add byte ptr [rax], al ; add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x00000000004a89b5 : add byte ptr [rax], al ; add byte ptr [rdx + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004c81ed : add byte ptr [rax], al ; add byte ptr [rdx + rax - 0x708f0000], dh ; call qword ptr [rbx]
0x000000000044ee81 : add byte ptr [rax], al ; add byte ptr [rdx + rcx - 0x77], dh ; adc eax, 0x287c2c ; pop rbx ; ret
0x00000000004a0b70 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x000000000042d852 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041b0ad : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x000000000042c5e2 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000004d0da5 : add byte ptr [rax], al ; add byte ptr [rsi + rcx*4], ch ; add ah, dh ; lahf ; sti ; call rdx
0x00000000004a0c6b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x27 ; syscall
0x000000000044d79b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x63 ; syscall
0x000000000047f11b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0xc9 ; syscall
0x00000000004437fd : add byte ptr [rax], al ; add byte ptr [rsi - 0x75], ah ; add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000004cbd8e : add byte ptr [rax], al ; add byte ptr [rsi], 0xf6 ; jmp qword ptr [rbx]
0x00000000004183a3 : add byte ptr [rax], al ; add byte ptr [rsp + rax - 0x58], dh ; add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x00000000004cab3d : add byte ptr [rax], al ; add byte ptr [rsp + rbp], al ; add byte ptr [rax], al ; pop rsp ; sbb al, 0xf5 ; call qword ptr [rax]
0x00000000004ccb95 : add byte ptr [rax], al ; add byte ptr [rsp + rcx*2], bl ; add byte ptr [rdi + rbp*8 - 9], al ; call rsi
0x00000000004821a5 : add byte ptr [rax], al ; add cl, ch ; jmp 0x4821b3
0x00000000004771ad : add byte ptr [rax], al ; add cl, ch ; nop ; retf
0x00000000004150f5 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000401085 : add byte ptr [rax], al ; add cl, ch ; ret 0
0x0000000000476a2e : add byte ptr [rax], al ; add cl, ch ; ret 0xff9f
0x00000000004607a8 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x0000000000456646 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x000000000041142d : add byte ptr [rax], al ; add cl, ch ; retf
0x00000000004a63be : add byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x00000000004800e3 : add byte ptr [rax], al ; add cl, cl ; ret
0x000000000046ba86 : add byte ptr [rax], al ; add dh, al ; test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x00000000004602b0 : add byte ptr [rax], al ; add dh, al ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x00000000004bdab5 : add byte ptr [rax], al ; add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000452a9c : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000004239dd : add byte ptr [rax], al ; add dh, dh ; ret 0x4804
0x000000000044b89d : add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x00000000004472f1 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000004cbf9f : add byte ptr [rax], al ; add edi, esi ; call qword ptr [rax]
0x000000000047eb8e : add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000042c493 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x000000000042c9c0 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; vzeroupper ; ret
0x0000000000412a22 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004a89f0 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000451035 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000497c1c : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000000004a64b3 : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000041742b : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000044a57f : add byte ptr [rax], al ; add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044a9c9 : add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x000000000047de31 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044ad5c : add byte ptr [rax], al ; add rsp, 0x78 ; ret
0x000000000040282c : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x00000000004595a3 : add byte ptr [rax], al ; add rsp, 0xb8 ; pop rbx ; pop r12 ; ret
0x0000000000464a65 : add byte ptr [rax], al ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000041141b : add byte ptr [rax], al ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000498507 : add byte ptr [rax], al ; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000004149e1 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044c52e : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000048bde1 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000424b86 : add byte ptr [rax], al ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004c965e : add byte ptr [rax], al ; and al, 0x17 ; add byte ptr [rax], al ; cld ; lodsb al, byte ptr [rsi] ; hlt ; jmp rdx
0x00000000004cda5a : add byte ptr [rax], al ; and al, 0x65 ; clc ; call rcx
0x00000000004cec5e : add byte ptr [rax], al ; and al, 0x6d ; add byte ptr [rax], al ; loop 0x4cec69 ; jmp qword ptr [rax]
0x00000000004c8c5e : add byte ptr [rax], al ; and al, 0xd ; add byte ptr [rax], al ; pushfq ; je 0x4c8c64 ; call qword ptr [rdx]
0x00000000004ca44a : add byte ptr [rax], al ; and al, 0xf6 ; hlt ; call qword ptr [rdi]
0x00000000004c870e : add byte ptr [rax], al ; and bl, ah ; call rax
0x00000000004ce2be : add byte ptr [rax], al ; and bl, ah ; clc ; call qword ptr [rdi]
0x00000000004d22ba : add byte ptr [rax], al ; and byte ptr [rbx + 0x1b900000], 0xfd ; jmp qword ptr [rcx]
0x00000000004d1a5a : add byte ptr [rax], al ; and byte ptr [rbx + 0x62d00000], bl ; cld ; jmp qword ptr [rdx]
0x00000000004ce2ba : add byte ptr [rax], al ; and byte ptr [rbx], 0 ; and bl, ah ; clc ; call qword ptr [rdi]
0x00000000004d2e6e : add byte ptr [rax], al ; and byte ptr [rdi - 3], bh ; call qword ptr [rdx]
0x00000000004494a6 : add byte ptr [rax], al ; and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x00000000004984c8 : add byte ptr [rax], al ; and ch, 2 ; cmovne rax, rdx ; ret
0x00000000004c0d5e : add byte ptr [rax], al ; and ebp, dword ptr [rdx - 4] ; lcall [rax + 0x57] ; cld ; call qword ptr [rax]
0x000000000042eb63 : add byte ptr [rax], al ; and ecx, 0xff ; sub eax, ecx ; ret
0x000000000042e296 : add byte ptr [rax], al ; and ecx, 0xffff ; sub eax, ecx ; ret
0x000000000042c6be : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x000000000042c6ce : add byte ptr [rax], al ; bsf eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x000000000042c6de : add byte ptr [rax], al ; bsf eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x000000000042c8fe : add byte ptr [rax], al ; bsf eax, eax ; lea rax, [rax + rdi - 0x10] ; ret
0x0000000000441ce0 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000047e764 : add byte ptr [rax], al ; bsf rax, rdx ; shr rax, 2 ; ret
0x000000000047d354 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x000000000047d3e2 : add byte ptr [rax], al ; bsr rsi, rsi ; lea rax, [rdi + rsi] ; ret
0x00000000004cbf76 : add byte ptr [rax], al ; call 0x114cb660
0x00000000004cbf75 : add byte ptr [rax], al ; call 0x114cb661
0x00000000004d0e76 : add byte ptr [rax], al ; call 0x274d0a24
0x000000000041ea97 : add byte ptr [rax], al ; call 0x4004fb
0x0000000000486be4 : add byte ptr [rax], al ; call 0x402e14
0x00000000004a2f8f : add byte ptr [rax], al ; call 0x402e1a
0x00000000004142ce : add byte ptr [rax], al ; call 0x413bc8
0x000000000047631c : add byte ptr [rax], al ; call 0x4225d4
0x0000000000400b97 : add byte ptr [rax], al ; call 0x44ce14
0x0000000000420d64 : add byte ptr [rax], al ; call 0x44d814
0x0000000000420da8 : add byte ptr [rax], al ; call 0x44d844
0x000000000040f111 : add byte ptr [rax], al ; call 0x45c999
0x00000000004cfd22 : add byte ptr [rax], al ; call 0x784cfdaf
0x000000000040234c : add byte ptr [rax], al ; call qword ptr [rbx + 0x10]
0x000000000040fd8e : add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000004a87b9 : add byte ptr [rax], al ; call r14
0x000000000040fc9b : add byte ptr [rax], al ; call rax
0x00000000004a120e : add byte ptr [rax], al ; call rbx
0x00000000004bdabe : add byte ptr [rax], al ; call rdi
0x000000000040fbd5 : add byte ptr [rax], al ; call rdx
0x00000000004bcc6e : add byte ptr [rax], al ; call rsp
0x00000000004494c8 : add byte ptr [rax], al ; clc ; jg 0x44949b ; mov eax, 0x80 ; pop rbx ; ret
0x0000000000449524 : add byte ptr [rax], al ; clc ; jg 0x449528 ; int1 ; mov eax, eax ; ret
0x00000000004c8682 : add byte ptr [rax], al ; cld ; fdivr st(3), st(0) ; call rsp
0x00000000004c9662 : add byte ptr [rax], al ; cld ; lodsb al, byte ptr [rsi] ; hlt ; jmp rdx
0x00000000004c9a36 : add byte ptr [rax], al ; cld ; sbb al, byte ptr [rax] ; add ah, al ; ret
0x0000000000449451 : add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x0000000000449419 : add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x00000000004256fc : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000424af3 : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000004cdfb6 : add byte ptr [rax], al ; cmp bh, bl ; std ; jmp qword ptr [rdi]
0x00000000004c8826 : add byte ptr [rax], al ; cmp bl, ch ; jmp qword ptr [rax]
0x00000000004cbf72 : add byte ptr [rax], al ; cmp byte ptr [rax], al ; add al, ch ; fdivrp st(6) ; call qword ptr [rax]
0x00000000004d0e72 : add byte ptr [rax], al ; cmp byte ptr [rdi - 0x5d180000], cl ; sti ; jmp qword ptr [rsi]
0x00000000004d2ae6 : add byte ptr [rax], al ; cmp byte ptr [rdx - 3], ch ; call qword ptr [rbx]
0x00000000004c8c72 : add byte ptr [rax], al ; cmp byte ptr [rip + 0x74a80000], cl ; hlt ; jmp qword ptr [rax]
0x00000000004d2572 : add byte ptr [rax], al ; cmp byte ptr [rsi + 0x3e780000], ah ; std ; call qword ptr [rdx]
0x00000000004477a8 : add byte ptr [rax], al ; cmp eax, ecx ; jne 0x447871 ; xor eax, eax ; ret
0x000000000044d81e : add byte ptr [rax], al ; cmp eax, edx ; jne 0x44d838 ; nop ; mov eax, 0xca ; syscall
0x000000000047b905 : add byte ptr [rax], al ; cmp qword ptr [rax + 0x30], 0 ; je 0x47b91a ; ret
0x0000000000489c4c : add byte ptr [rax], al ; cmp rax, -1 ; cmove rax, rdx ; ret
0x0000000000420967 : add byte ptr [rax], al ; cmp rdx, r8 ; jne 0x420938 ; ret
0x000000000044914f : add byte ptr [rax], al ; cmp rdx, rcx ; jne 0x449141 ; vzeroupper ; ret
0x0000000000449312 : add byte ptr [rax], al ; cmp rdx, rcx ; jne 0x4492fc ; vzeroupper ; ret
0x00000000004ce5d2 : add byte ptr [rax], al ; cwde ; add byte ptr [rax], al ; mov dh, bh ; clc ; call qword ptr [rbx]
0x00000000004ce2d2 : add byte ptr [rax], al ; cwde ; movsxd rax, dword ptr [rax] ; add byte ptr [rax], ch ; jrcxz 0x4ce2dc ; call qword ptr [rcx]
0x00000000004cd6d2 : add byte ptr [rax], al ; cwde ; push rdi ; add byte ptr [rax], al ; mov bh, ah ; std ; jmp qword ptr [rdx]
0x00000000004876aa : add byte ptr [rax], al ; div rcx ; mov rsi, rax ; call 0x42392a
0x00000000004b9c1a : add byte ptr [rax], al ; enter 0, 0 ; retf
0x00000000004bdc6e : add byte ptr [rax], al ; enter 0, 0 ; retf 0
0x00000000004badc6 : add byte ptr [rax], al ; enter 0x10, 0 ; retf
0x00000000004cbe02 : add byte ptr [rax], al ; enter 0x3e, 0 ; adc rsi, rsi ; call rsp
0x00000000004d1d02 : add byte ptr [rax], al ; enter 0x9d, 0 ; test al, 0xd3 ; cld ; call qword ptr [rax]
0x00000000004ba5c6 : add byte ptr [rax], al ; enter 0xa, 0 ; retf
0x00000000004ba9c6 : add byte ptr [rax], al ; enter 0xd, 0 ; retf
0x00000000004bde6e : add byte ptr [rax], al ; enter 1, 0 ; retf 1
0x00000000004bb17e : add byte ptr [rax], al ; enter 2, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004be06e : add byte ptr [rax], al ; enter 2, 0 ; retf 2
0x00000000004be26e : add byte ptr [rax], al ; enter 3, 0 ; retf 3
0x00000000004be46e : add byte ptr [rax], al ; enter 4, 0 ; retf 4
0x00000000004be66e : add byte ptr [rax], al ; enter 5, 0 ; retf 5
0x00000000004be86e : add byte ptr [rax], al ; enter 6, 0 ; retf 6
0x00000000004bea6e : add byte ptr [rax], al ; enter 7, 0 ; retf 7
0x00000000004bec6e : add byte ptr [rax], al ; enter 8, 0 ; retf 8
0x00000000004bee6e : add byte ptr [rax], al ; enter 9, 0 ; retf 9
0x00000000004ccfc6 : add byte ptr [rax], al ; fadd dword ptr [rdi] ; clc ; jmp qword ptr [rcx]
0x00000000004d1546 : add byte ptr [rax], al ; fcom dword ptr [rsp + rdi*8] ; call qword ptr [rdx]
0x00000000004cc642 : add byte ptr [rax], al ; fcom st(0), st(4) ; idiv edi ; retf
0x00000000004cfb12 : add byte ptr [rax], al ; fdivr dword ptr [rbx] ; add al, cl ; fdivp st(2) ; jmp qword ptr [rax]
0x00000000004cc32e : add byte ptr [rax], al ; hlt ; add byte ptr [r8], al ; pushfq ; retf
0x00000000004d0daa : add byte ptr [rax], al ; hlt ; lahf ; sti ; call rdx
0x0000000000400a78 : add byte ptr [rax], al ; hlt ; nop dword ptr [rax + rax] ; ret
0x00000000004d221e : add byte ptr [rax], al ; in al, 0xa2 ; add byte ptr [rax], al ; sbb r15b, bpl ; jmp qword ptr [rdx]
0x00000000004ca6f2 : add byte ptr [rax], al ; in al, dx ; std ; hlt ; call qword ptr [rsi]
0x00000000004d0da6 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov es, word ptr [rax] ; add ah, dh ; lahf ; sti ; call rdx
0x00000000004a952b : add byte ptr [rax], al ; ja 0x4a9538 ; sbb eax, eax ; ret
0x00000000004cd4ce : add byte ptr [rax], al ; ja 0x4cd507 ; jmp qword ptr [rbx]
0x00000000004c8b8e : add byte ptr [rax], al ; jb 0x4c8b8c ; jmp qword ptr [rax]
0x0000000000413bc6 : add byte ptr [rax], al ; je 0x413bd1 ; ret
0x0000000000425760 : add byte ptr [rax], al ; je 0x42572f ; ret
0x000000000044ee82 : add byte ptr [rax], al ; je 0x44ee9b ; mov dword ptr [rip + 0x287c2c], edx ; pop rbx ; ret
0x000000000047dd69 : add byte ptr [rax], al ; je 0x47dd75 ; ret
0x00000000004a89b6 : add byte ptr [rax], al ; je 0x4a89a4 ; add rsp, 0x18 ; ret
0x00000000004a8a46 : add byte ptr [rax], al ; je 0x4a8a2a ; ret
0x00000000004a8a87 : add byte ptr [rax], al ; je 0x4a8a98 ; mov qword ptr [rdi + rsi*8], rdx ; ret
0x00000000004c8fae : add byte ptr [rax], al ; je 0x4c8fcb ; add byte ptr [rax], al ; xchg spl, r14b ; call qword ptr [rdi]
0x00000000004c96ae : add byte ptr [rax], al ; je 0x4c96d2 ; add byte ptr [rax], al ; pushfq ; mov dl, 0xf4 ; call qword ptr [rax]
0x00000000004ce7ca : add byte ptr [rax], al ; je 0x4ce801 ; stc ; call qword ptr [rsi]
0x0000000000410667 : add byte ptr [rax], al ; jmp 0x410630
0x0000000000449f5c : add byte ptr [rax], al ; jmp 0x449f26
0x000000000044a6e1 : add byte ptr [rax], al ; jmp 0x44a573
0x0000000000455713 : add byte ptr [rax], al ; jmp 0x45556a
0x000000000045ea7f : add byte ptr [rax], al ; jmp 0x45ea48
0x0000000000473ae2 : add byte ptr [rax], al ; jmp 0x47059f
0x0000000000474410 : add byte ptr [rax], al ; jmp 0x4706b5
0x0000000000474791 : add byte ptr [rax], al ; jmp 0x4709fc
0x00000000004a14d8 : add byte ptr [rax], al ; jmp 0x4a14a2
0x000000000044b9db : add byte ptr [rax], al ; jmp rax
0x0000000000410a7f : add byte ptr [rax], al ; jne 0x410a96 ; add rsp, 0xd8 ; ret
0x0000000000410b30 : add byte ptr [rax], al ; jne 0x410b47 ; add rsp, 0xd8 ; ret
0x0000000000410c01 : add byte ptr [rax], al ; jne 0x410c18 ; add rsp, 0xd8 ; ret
0x000000000041198c : add byte ptr [rax], al ; jne 0x411a12 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000417706 : add byte ptr [rax], al ; jne 0x41775e ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000041b28e : add byte ptr [rax], al ; jne 0x41b2a1 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000042d352 : add byte ptr [rax], al ; jne 0x42d268 ; ret
0x0000000000449aed : add byte ptr [rax], al ; jne 0x449b1d ; add rsp, 0x20 ; pop rbx ; ret
0x000000000044a8a5 : add byte ptr [rax], al ; jne 0x44a8c1 ; add rsp, 0x28 ; ret
0x000000000044a9c3 : add byte ptr [rax], al ; jne 0x44aa85 ; add rsp, 0x68 ; ret
0x000000000044aad5 : add byte ptr [rax], al ; jne 0x44ab23 ; add rsp, 0x58 ; ret
0x000000000044ad56 : add byte ptr [rax], al ; jne 0x44ae15 ; add rsp, 0x78 ; ret
0x000000000044ae65 : add byte ptr [rax], al ; jne 0x44aebb ; add rsp, 0x68 ; ret
0x000000000044b804 : add byte ptr [rax], al ; jne 0x44b81f ; add rsp, 0x28 ; ret
0x000000000044ccc3 : add byte ptr [rax], al ; jne 0x44cd30 ; add rsp, 0xd0 ; pop rbx ; ret
0x000000000045c6ed : add byte ptr [rax], al ; jne 0x45c6fe ; add rsp, 0x18 ; ret
0x000000000045c935 : add byte ptr [rax], al ; jne 0x45c98e ; add rsp, 0x148 ; ret
0x000000000046a350 : add byte ptr [rax], al ; jne 0x46a367 ; add rsp, 0xd8 ; ret
0x000000000047a720 : add byte ptr [rax], al ; jne 0x47a737 ; add rsp, 0xd8 ; ret
0x000000000047f9c8 : add byte ptr [rax], al ; jne 0x47fa95 ; add rsp, 0x78 ; ret
0x000000000047fada : add byte ptr [rax], al ; jne 0x47fb2b ; add rsp, 0x58 ; ret
0x000000000047fb5d : add byte ptr [rax], al ; jne 0x47fb74 ; movzx eax, al ; add rsp, 0x58 ; ret
0x000000000047fc0c : add byte ptr [rax], al ; jne 0x47fc33 ; add rsp, 0x38 ; ret
0x00000000004896b5 : add byte ptr [rax], al ; jne 0x4896d3 ; mov rax, qword ptr [rip + 0x250e30] ; ret
0x000000000048bfb8 : add byte ptr [rax], al ; jne 0x48bfcb ; add rsp, 0x20 ; pop rbx ; ret
0x000000000048c0b3 : add byte ptr [rax], al ; jne 0x48c0eb ; add rsp, 0x38 ; ret
0x000000000048c173 : add byte ptr [rax], al ; jne 0x48c1a6 ; add rsp, 0x68 ; ret
0x000000000048c2d4 : add byte ptr [rax], al ; jne 0x48c316 ; add rsp, 0x78 ; ret
0x000000000048c5a3 : add byte ptr [rax], al ; jne 0x48c5d6 ; add rsp, 0x68 ; ret
0x000000000048c9d4 : add byte ptr [rax], al ; jne 0x48c9ed ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000495750 : add byte ptr [rax], al ; jne 0x495797 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000495800 : add byte ptr [rax], al ; jne 0x49587c ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004958de : add byte ptr [rax], al ; jne 0x495946 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000049758f : add byte ptr [rax], al ; jne 0x4975d3 ; leave ; ret
0x00000000004982db : add byte ptr [rax], al ; jne 0x4982ec ; add rsp, 0x38 ; ret
0x00000000004983be : add byte ptr [rax], al ; jne 0x4983dc ; add rsp, 0x38 ; ret
0x00000000004a3159 : add byte ptr [rax], al ; jne 0x4a3164 ; pop rbx ; ret
0x00000000004a3c39 : add byte ptr [rax], al ; jne 0x4a3c54 ; add rsp, 0x38 ; ret
0x00000000004a9952 : add byte ptr [rax], al ; jne 0x4a9975 ; ret
0x00000000004c81f2 : add byte ptr [rax], al ; jno 0x4c818a ; call qword ptr [rbx]
0x00000000004cdaee : add byte ptr [rax], al ; jo 0x4cdb65 ; clc ; call qword ptr [rdi]
0x00000000004ce4aa : add byte ptr [rax], al ; jo 0x4ce51c ; add byte ptr [rax], al ; xor dl, ah ; std ; call rdx
0x00000000004ce2fe : add byte ptr [rax], al ; jrcxz 0x4ce300 ; call qword ptr [rcx]
0x00000000004cd0b2 : add byte ptr [rax], al ; js 0x4cd110 ; add byte ptr [rax], al ; or byte ptr [rcx], cl ; clc ; call qword ptr [rcx]
0x00000000004cdfb2 : add byte ptr [rax], al ; js 0x4ce01f ; add byte ptr [rax], al ; cmp bh, bl ; std ; jmp qword ptr [rdi]
0x00000000004cfd26 : add byte ptr [rax], al ; js 0x4cfd18 ; cli ; jmp qword ptr [rax]
0x00000000004d17a6 : add byte ptr [rax], al ; js 0x4d17f9 ; cld ; jmp qword ptr [rcx]
0x00000000004d2576 : add byte ptr [rax], al ; js 0x4d25bd ; std ; call qword ptr [rdx]
0x000000000047c05d : add byte ptr [rax], al ; lea r9, [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000047c157 : add byte ptr [rax], al ; lea r9, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x00000000004460be : add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x00000000004460ce : add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x00000000004460de : add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x00000000004460ee : add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x00000000004460fe : add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x000000000044601d : add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x000000000044603e : add byte ptr [rax], al ; lea rax, [rdi + 1] ; ret
0x000000000044604e : add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x000000000044605e : add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x000000000044606e : add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x000000000044607e : add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x000000000044608e : add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x0000000000445fca : add byte ptr [rax], al ; lea rax, [rdi + 7] ; ret
0x000000000044609e : add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x00000000004460ae : add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x000000000044602e : add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x0000000000425b15 : add byte ptr [rax], al ; lea rax, [rip + 0x1bb12] ; cmove rax, rdx ; ret
0x0000000000424bb5 : add byte ptr [rax], al ; lea rax, [rip + 0x1d0a2] ; cmove rax, rdx ; ret
0x000000000044ee4e : add byte ptr [rax], al ; lea rax, [rip + 0x2894a9] ; ret
0x0000000000425ae5 : add byte ptr [rax], al ; lea rax, [rip + 0x6c52] ; cmove rax, rdx ; ret
0x00000000004256f5 : add byte ptr [rax], al ; lea rax, [rip + 0x6d12] ; cmove rax, rdx ; ret
0x000000000049847c : add byte ptr [rax], al ; lea rax, [rip + 0x85db] ; cmovne rax, rdx ; ret
0x000000000047c905 : add byte ptr [rax], al ; lea rax, [rip + 0x9f2] ; cmove rax, rdx ; ret
0x000000000047dd15 : add byte ptr [rax], al ; lea rax, [rip + 0xc62] ; cmove rax, rdx ; ret
0x000000000047c8d5 : add byte ptr [rax], al ; lea rax, [rip + 0xee2] ; cmove rax, rdx ; ret
0x000000000041963e : add byte ptr [rax], al ; lea rdx, [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000004257d0 : add byte ptr [rax], al ; lea rdx, [rip + 0x11407] ; cmovne rax, rdx ; ret
0x0000000000425741 : add byte ptr [rax], al ; lea rdx, [rip + 0x209c6] ; cmovne rax, rdx ; ret
0x0000000000424aec : add byte ptr [rax], al ; lea rdx, [rip + 0x272b] ; cmovne rax, rdx ; ret
0x000000000047e687 : add byte ptr [rax], al ; lea rdx, [rip + 0x30] ; cmovne rax, rdx ; ret
0x0000000000424bf6 : add byte ptr [rax], al ; lea rdx, [rip + 0x50d1] ; cmovne rax, rdx ; ret
0x0000000000425a70 : add byte ptr [rax], al ; lea rdx, [rip + 0xe697] ; cmovne rax, rdx ; ret
0x0000000000425930 : add byte ptr [rax], al ; lea rdx, [rip + 0xe7b7] ; cmovne rax, rdx ; ret
0x000000000046d21a : add byte ptr [rax], al ; lea rsi, [rip + 0x267bfd] ; jmp rax
0x00000000004800e4 : add byte ptr [rax], al ; leave ; ret
0x00000000004ce2e6 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; movsxd rax, dword ptr [rax] ; add byte ptr [rbx], dh ; clc ; call qword ptr [rcx]
0x00000000004cc292 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0xfff7
0x00000000004cec62 : add byte ptr [rax], al ; loop 0x4cec65 ; jmp qword ptr [rax]
0x00000000004ca6de : add byte ptr [rax], al ; loopne 0x4ca6e4 ; hlt ; call qword ptr [rsi]
0x00000000004d1b1a : add byte ptr [rax], al ; loopne 0x4d1ac2 ; add byte ptr [rax], al ; push rax ; cld ; jmp qword ptr [rdx]
0x00000000004ca6ee : add byte ptr [rax], al ; mov ah, 0x27 ; add byte ptr [rax], al ; in al, dx ; std ; hlt ; call qword ptr [rsi]
0x00000000004cdfee : add byte ptr [rax], al ; mov ah, 0x60 ; add byte ptr [rax], al ; sbb al, 0xc2 ; clc ; jmp rax
0x00000000004d1cdf : add byte ptr [rax], al ; mov ah, 0xfc ; call qword ptr [rax]
0x00000000004c81ee : add byte ptr [rax], al ; mov ah, 2 ; add byte ptr [rax], al ; jno 0x4c818e ; call qword ptr [rbx]
0x00000000004cd80e : add byte ptr [rax], al ; mov al, 0x4d ; clc ; call qword ptr [rax]
0x00000000004cdaea : add byte ptr [rax], al ; mov al, 0x5b ; add byte ptr [rax], al ; jo 0x4cdb69 ; clc ; call qword ptr [rdi]
0x00000000004cff9e : add byte ptr [rax], al ; mov al, 0xf8 ; cli ; jmp qword ptr [rcx]
0x00000000004cd07e : add byte ptr [rax], al ; mov al, 8 ; clc ; call qword ptr [rdx]
0x0000000000444f9e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x00000000004437ee : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000444fae : add byte ptr [rax], al ; mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x00000000004437fe : add byte ptr [rax], al ; mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000004cd6d6 : add byte ptr [rax], al ; mov bh, ah ; std ; jmp qword ptr [rdx]
0x00000000004be46a : add byte ptr [rax], al ; mov byte ptr [rax + rax], 0 ; enter 4, 0 ; retf 4
0x00000000004cbfc2 : add byte ptr [rax], al ; mov byte ptr [rax], al ; add byte ptr [rax], ch ; and dh, bh ; call qword ptr [rax]
0x0000000000413c6e : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000004ccf66 : add byte ptr [rax], al ; mov byte ptr [rdi], al ; clc ; call qword ptr [rcx]
0x0000000000445a8e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x000000000044546e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000044548e : add byte ptr [rax], al ; mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000004ce5d6 : add byte ptr [rax], al ; mov dh, bh ; clc ; call qword ptr [rbx]
0x0000000000415900 : add byte ptr [rax], al ; mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047b9eb : add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000413f54 : add byte ptr [rax], al ; mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041a4af : add byte ptr [rax], al ; mov dword ptr [rdi + 0x24], ebp ; mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x000000000041a52c : add byte ptr [rax], al ; mov dword ptr [rip + 0x2bd2d8], eax ; ret
0x000000000041792e : add byte ptr [rax], al ; mov dword ptr [rsp + 0xc], esi ; mov qword ptr [rsp], rdi ; call 0x413bcc
0x0000000000445a9e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x000000000044547e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000400b92 : add byte ptr [rax], al ; mov eax, 0 ; call 0x44ce19
0x0000000000424a4e : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x000000000044b95e : add byte ptr [rax], al ; mov eax, 0x1c ; syscall
0x00000000004a3e4e : add byte ptr [rax], al ; mov eax, 0x26 ; syscall
0x000000000044ad75 : add byte ptr [rax], al ; mov eax, 0x48 ; syscall
0x000000000047f87e : add byte ptr [rax], al ; mov eax, 0x66 ; syscall
0x000000000047f89e : add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x000000000047f88e : add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x000000000047f8ae : add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x000000000044b92e : add byte ptr [rax], al ; mov eax, 0xa ; syscall
0x000000000044b8fe : add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x00000000004858c8 : add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x000000000040eede : add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x000000000044a5b3 : add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x000000000045e24c : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412df9 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000449f57 : add byte ptr [rax], al ; mov eax, 1 ; jmp 0x449f2b
0x00000000004977cb : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000044ac8e : add byte ptr [rax], al ; mov eax, 1 ; syscall
0x0000000000497a94 : add byte ptr [rax], al ; mov eax, 2 ; ret
0x0000000000444fde : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x000000000041964e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000004aadce : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x4aade9 ; ret
0x00000000004aaffe : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x4ab019 ; ret
0x000000000044af08 : add byte ptr [rax], al ; mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000040eea9 : add byte ptr [rax], al ; mov eax, ecx ; syscall
0x00000000004889af : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000041350b : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x0000000000467a01 : add byte ptr [rax], al ; mov eax, edx ; ret
0x00000000004bac62 : add byte ptr [rax], al ; mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x00000000004454ae : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000004a87b4 : add byte ptr [rax], al ; mov edi, 1 ; call r14
0x00000000004a87dc : add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000044adaf : add byte ptr [rax], al ; mov edi, dword ptr [rsp + 0xc] ; mov eax, 0x48 ; syscall
0x000000000044aeea : add byte ptr [rax], al ; mov edi, ebx ; mov edx, eax ; mov eax, 3 ; syscall
0x000000000044a30e : add byte ptr [rax], al ; mov edi, edx ; mov eax, esi ; syscall
0x00000000004b2ebf : add byte ptr [rax], al ; mov edi, edx ; push rax ; mov bh, dl ; push qword ptr [rax] ; mov bh, dl ; jmp rax
0x000000000044d84b : add byte ptr [rax], al ; mov edx, 1 ; mov eax, 0xca ; syscall
0x00000000004369fe : add byte ptr [rax], al ; mov edx, dword ptr [rsi + 1] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000043698e : add byte ptr [rax], al ; mov edx, dword ptr [rsi + 2] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000043691e : add byte ptr [rax], al ; mov edx, dword ptr [rsi + 3] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000043634e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000436a6e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000041351b : add byte ptr [rax], al ; mov edx, eax ; jmp 0x4134c1
0x000000000044aa20 : add byte ptr [rax], al ; mov edx, esi ; mov rsi, rdi ; mov edi, 0xffffff9c ; syscall
0x000000000044d906 : add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x00000000004858c3 : add byte ptr [rax], al ; mov esi, 0x81 ; mov eax, 0xca ; syscall
0x000000000044dabe : add byte ptr [rax], al ; mov qword ptr [rax + 0x20], rsi ; ret
0x000000000047bae7 : add byte ptr [rax], al ; mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000418752 : add byte ptr [rax], al ; mov qword ptr [rax + 8], 0 ; ret
0x0000000000498258 : add byte ptr [rax], al ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x00000000004869fe : add byte ptr [rax], al ; mov qword ptr [rbp - 0x100], r11 ; call r10
0x000000000048739e : add byte ptr [rax], al ; mov qword ptr [rbp - 0xe0], r11 ; call r10
0x000000000048b17a : add byte ptr [rax], al ; mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000498336 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000004a3cb2 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x00000000004a3d86 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x00000000004178ce : add byte ptr [rax], al ; mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x00000000004114ce : add byte ptr [rax], al ; mov qword ptr [rcx + 0x130], rdx ; ret
0x00000000004859a2 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x300], rax ; ret
0x0000000000485974 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x308], rax ; ret
0x00000000004a8ade : add byte ptr [rax], al ; mov qword ptr [rdi + 0x98], rsi ; ret
0x00000000004977e8 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000413dc2 : add byte ptr [rax], al ; mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x000000000041aa19 : add byte ptr [rax], al ; mov qword ptr [rip + 0x2bce3e], rax ; ret
0x000000000041a514 : add byte ptr [rax], al ; mov qword ptr [rip + 0x2bd2d3], rax ; ret
0x000000000041a4ec : add byte ptr [rax], al ; mov qword ptr [rip + 0x2bd2f3], rax ; ret
0x000000000041a4cc : add byte ptr [rax], al ; mov qword ptr [rip + 0x2bd30b], rax ; ret
0x0000000000402ae0 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x0000000000482b8e : add byte ptr [rax], al ; mov qword ptr [rsi], -1 ; xor eax, eax ; ret
0x000000000045eb17 : add byte ptr [rax], al ; mov qword ptr [rsi], rdi ; xor eax, eax ; jmp 0x45eae9
0x000000000045c861 : add byte ptr [rax], al ; mov r10d, 8 ; mov eax, ecx ; syscall
0x0000000000400803 : add byte ptr [rax], al ; mov r12, rax ; call 0x44939b
0x00000000004006cc : add byte ptr [rax], al ; mov r12, rax ; call 0x44985b
0x0000000000418bde : add byte ptr [rax], al ; mov rax, -1 ; ret
0x000000000045c79e : add byte ptr [rax], al ; mov rax, 0xf ; syscall
0x000000000047ebae : add byte ptr [rax], al ; mov rax, 1 ; ret
0x000000000047ebbe : add byte ptr [rax], al ; mov rax, 2 ; ret
0x000000000047ebce : add byte ptr [rax], al ; mov rax, 3 ; ret
0x000000000047ebde : add byte ptr [rax], al ; mov rax, 4 ; ret
0x000000000047ebee : add byte ptr [rax], al ; mov rax, 5 ; ret
0x000000000047ebfe : add byte ptr [rax], al ; mov rax, 6 ; ret
0x000000000047ec0e : add byte ptr [rax], al ; mov rax, 7 ; ret
0x0000000000486f43 : add byte ptr [rax], al ; mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000041294e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000418695 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x68] ; test rax, rax ; jne 0x41869c ; ret
0x000000000048bdee : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000048675e : add byte ptr [rax], al ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x0000000000444f2e : add byte ptr [rax], al ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x000000000044377e : add byte ptr [rax], al ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000047beee : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000041999e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x00000000004a8a5e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x90] ; ret
0x00000000004a8aee : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa0] ; ret
0x00000000004a8b4e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa8] ; ret
0x00000000004a8b3e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb0] ; ret
0x00000000004a8afe : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb8] ; ret
0x000000000041a53e : add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; nop ; mov dword ptr [rip + 0x2bf96a], eax ; ret
0x000000000045944e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x280b41] ; ret
0x0000000000450f5e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x289b11] ; ret
0x000000000041997e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2bd799] ; ret
0x00000000004a682e : add byte ptr [rax], al ; mov rax, qword ptr [rsi + 0xa8] ; ret
0x00000000004a6297 : add byte ptr [rax], al ; mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000041bbed : add byte ptr [rax], al ; mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047ef91 : add byte ptr [rax], al ; mov rax, r8 ; shr rax, 2 ; vzeroupper ; ret
0x000000000047db8e : add byte ptr [rax], al ; mov rax, r8 ; vzeroupper ; ret
0x0000000000488720 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000415054 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a8c58 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000004a3d44 : add byte ptr [rax], al ; mov rax, rbx ; jne 0x4a3d68 ; add rsp, 0x40 ; pop rbx ; ret
0x00000000004a3e2b : add byte ptr [rax], al ; mov rax, rbx ; jne 0x4a3e50 ; add rsp, 0x50 ; pop rbx ; ret
0x00000000004159d2 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004199ae : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000041ef7e : add byte ptr [rax], al ; mov rax, rsi ; ret
0x0000000000489daa : add byte ptr [rax], al ; mov rbx, rsp ; mov rsi, rbx ; syscall
0x00000000004454ee : add byte ptr [rax], al ; mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000044826f : add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044c639 : add byte ptr [rax], al ; mov rdi, qword ptr [r13] ; call r12
0x000000000040fcc1 : add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x00000000004ad92e : add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x000000000040b157 : add byte ptr [rax], al ; mov rdi, r15 ; call 0x4213db
0x00000000004ad08e : add byte ptr [rax], al ; mov rdi, r15 ; call rax
0x0000000000478c1f : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000004981d6 : add byte ptr [rax], al ; mov rdx, qword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x000000000043061e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004368ae : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000040f4d6 : add byte ptr [rax], al ; mov rdx, r12 ; call 0x40f17b
0x0000000000457e37 : add byte ptr [rax], al ; mov rdx, rax ; jmp 0x457df4
0x00000000004215c6 : add byte ptr [rax], al ; mov rsi, qword ptr [rsp + 0x68] ; call rax
0x00000000004a94ce : add byte ptr [rax], al ; mov rsi, r14 ; mov rdi, r12 ; call r15
0x00000000004005a6 : add byte ptr [rax], al ; mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005bb ; ret
0x000000000042482e : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rax ; call rcx
0x00000000004137f6 : add byte ptr [rax], al ; mov rsi, rbx ; mov edi, r13d ; mov eax, r9d ; syscall
0x000000000044a99f : add byte ptr [rax], al ; mov rsi, rdi ; mov edi, 0xffffff9c ; syscall
0x00000000004ce7c6 : add byte ptr [rax], al ; mov word ptr [rax], gs ; add byte ptr [rsi + rbp - 7], dh ; call qword ptr [rsi]
0x00000000004d12c6 : add byte ptr [rax], al ; mov word ptr [rbx - 0x483c0000], ss ; sti ; call qword ptr [rdx]
0x000000000040ee9a : add byte ptr [rax], al ; movaps xmmword ptr [rsp + 0xf0], xmm0 ; syscall
0x000000000048b26e : add byte ptr [rax], al ; movsx eax, dl ; sub eax, ecx ; ret
0x0000000000434199 : add byte ptr [rax], al ; movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x00000000004a68e5 : add byte ptr [rax], al ; movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x0000000000478dd4 : add byte ptr [rax], al ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000045bddd : add byte ptr [rax], al ; movsxd rdi, dword ptr [r11 + rsi*4] ; add rdi, r11 ; jmp rdi
0x000000000044a7c6 : add byte ptr [rax], al ; movsxd rdx, eax ; jmp 0x44a576
0x000000000045b8de : add byte ptr [rax], al ; movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x00000000004a7933 : add byte ptr [rax], al ; movzx eax, al ; movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x000000000041682e : add byte ptr [rax], al ; movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046de01 : add byte ptr [rax], al ; movzx eax, byte ptr [rdi + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x000000000044732e : add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 0x10] ; movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x000000000044738e : add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 0xa] ; movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x000000000044737e : add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 0xb] ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000044736e : add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 0xc] ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000044735e : add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 0xd] ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000044734e : add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 0xe] ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000044733e : add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 0xf] ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000042e3fe : add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 1] ; movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x000000000042e1b1 : add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 1] ; movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000042d2de : add byte ptr [rax], al ; movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000417a3e : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000413f2e : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000044945e : add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x0000000000426f5e : add byte ptr [rax], al ; movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00000000004364de : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000436bbe : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000043645e : add byte ptr [rax], al ; movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000436b4e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004caebe : add byte ptr [rax], al ; nop ; cmc ; jmp rsi
0x00000000004cbcca : add byte ptr [rax], al ; nop ; cmp eax, 0x9e000000 ; cmc ; jmp qword ptr [rbx]
0x00000000004cfaca : add byte ptr [rax], al ; nop ; jnp 0x4cfad8 ; add byte ptr [rax], dh ; fdivr st(2) ; jmp rdx
0x0000000000401275 : add byte ptr [rax], al ; nop ; leave ; ret
0x00000000004a0c6c : add byte ptr [rax], al ; nop ; mov eax, 0x27 ; syscall
0x000000000044d79c : add byte ptr [rax], al ; nop ; mov eax, 0x63 ; syscall
0x000000000047f11c : add byte ptr [rax], al ; nop ; mov eax, 0xc9 ; syscall
0x0000000000400c03 : add byte ptr [rax], al ; nop ; pop rbp ; ret
0x00000000004cd4ca : add byte ptr [rax], al ; nop ; push rbp ; add byte ptr [rax], al ; ja 0x4cd50b ; jmp qword ptr [rbx]
0x00000000004d22be : add byte ptr [rax], al ; nop ; sbb edi, ebp ; jmp qword ptr [rcx]
0x000000000044b959 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x1c ; syscall
0x000000000047f879 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x66 ; syscall
0x000000000044b929 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0xa ; syscall
0x000000000044d9d9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x000000000045b7bf : add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x0000000000402552 : add byte ptr [rax], al ; nop dword ptr [rax] ; xor edi, edi ; mov eax, edx ; syscall
0x00000000004ca446 : add byte ptr [rax], al ; or al, 0x25 ; add byte ptr [rax], al ; and al, 0xf6 ; hlt ; call qword ptr [rdi]
0x00000000004d1696 : add byte ptr [rax], al ; or byte ptr [rcx - 4], al ; call rdi
0x00000000004cd0b6 : add byte ptr [rax], al ; or byte ptr [rcx], cl ; clc ; call qword ptr [rcx]
0x0000000000485e3e : add byte ptr [rax], al ; or byte ptr [rdi + 0x315], 4 ; xor eax, eax ; ret
0x00000000004d1542 : add byte ptr [rax], al ; or byte ptr [rsi + 0x14d80000], dl ; cld ; call qword ptr [rdx]
0x000000000041413e : add byte ptr [rax], al ; or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000048a034 : add byte ptr [rax], al ; or dword ptr [rip + 0x24e1ab], 1 ; pop rbx ; ret
0x00000000004d0d92 : add byte ptr [rax], al ; pop rax ; mov es, word ptr [rax] ; add al, bl ; lahf ; sti ; jmp qword ptr [rcx]
0x00000000004d1692 : add byte ptr [rax], al ; pop rax ; xchg eax, edi ; add byte ptr [rax], al ; or byte ptr [rcx - 4], al ; call rdi
0x000000000044b9ee : add byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x0000000000482b7f : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000400ab6 : add byte ptr [rax], al ; pop rbp ; ret
0x00000000004679ab : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000004595aa : add byte ptr [rax], al ; pop rbx ; pop r12 ; ret
0x0000000000404f9b : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004136b7 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000415503 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004184b5 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041108a : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004020b6 : add byte ptr [rax], al ; pop rbx ; ret
0x00000000004c80d2 : add byte ptr [rax], al ; pop rsi ; cdq ; call qword ptr [rcx]
0x00000000004cab42 : add byte ptr [rax], al ; pop rsp ; sbb al, 0xf5 ; call qword ptr [rax]
0x00000000004cc9a2 : add byte ptr [rax], al ; push -0x37ffffb6 ; in eax, 0xf7 ; call qword ptr [rbx]
0x00000000004cc2a2 : add byte ptr [rax], al ; push -0x37ffffbd ; ret 0xfff7
0x00000000004d17a2 : add byte ptr [rax], al ; push 0x78000098 ; cld ; jmp qword ptr [rcx]
0x00000000004cbd8a : add byte ptr [rax], al ; push rax ; add byte ptr ds:[rax], al ; add byte ptr [rsi], 0xf6 ; jmp qword ptr [rbx]
0x00000000004d1b1e : add byte ptr [rax], al ; push rax ; cld ; jmp qword ptr [rdx]
0x00000000004c8b8a : add byte ptr [rax], al ; push rax ; or al, 0 ; add byte ptr [rax + 0x72], al ; hlt ; jmp qword ptr [rax]
0x00000000004cd07a : add byte ptr [rax], al ; push rcx ; add byte ptr [rax], al ; mov al, 8 ; clc ; call qword ptr [rdx]
0x00000000004cc28e : add byte ptr [rax], al ; push rsp ; add byte ptr [r8], al ; lodsb al, byte ptr [rsi] ; ret 0xfff7
0x00000000004c9a0a : add byte ptr [rax], al ; push rsp ; ret 0xfff4
0x00000000004cd26a : add byte ptr [rax], al ; push rsp ; sbb al, 0xf8 ; jmp qword ptr [rdx]
0x00000000004c8c62 : add byte ptr [rax], al ; pushfq ; je 0x4c8c60 ; call qword ptr [rdx]
0x00000000004c96b2 : add byte ptr [rax], al ; pushfq ; mov dl, 0xf4 ; call qword ptr [rax]
0x00000000004cc332 : add byte ptr [rax], al ; pushfq ; retf
0x0000000000400a7e : add byte ptr [rax], al ; ret
0x00000000004b3e46 : add byte ptr [rax], al ; ret 0
0x00000000004badbe : add byte ptr [rax], al ; ret 0x10
0x00000000004bca8e : add byte ptr [rax], al ; ret 0x1d4
0x00000000004bd226 : add byte ptr [rax], al ; ret 0x1d5
0x00000000004bba96 : add byte ptr [rax], al ; ret 0x24
0x00000000004bbf86 : add byte ptr [rax], al ; ret 0x33
0x00000000004ba5be : add byte ptr [rax], al ; ret 0xa
0x00000000004ba9be : add byte ptr [rax], al ; ret 0xd
0x00000000004bde62 : add byte ptr [rax], al ; ret 1
0x00000000004be062 : add byte ptr [rax], al ; ret 2
0x00000000004be262 : add byte ptr [rax], al ; ret 3
0x00000000004be462 : add byte ptr [rax], al ; ret 4
0x00000000004be662 : add byte ptr [rax], al ; ret 5
0x00000000004ba166 : add byte ptr [rax], al ; ret 6
0x00000000004bea62 : add byte ptr [rax], al ; ret 7
0x00000000004bec62 : add byte ptr [rax], al ; ret 8
0x00000000004bee62 : add byte ptr [rax], al ; ret 9
0x00000000004b3e6a : add byte ptr [rax], al ; retf
0x00000000004b3e66 : add byte ptr [rax], al ; retf 0
0x00000000004baf1e : add byte ptr [rax], al ; retf 0x11
0x00000000004bcac6 : add byte ptr [rax], al ; retf 0x1d4
0x00000000004bd266 : add byte ptr [rax], al ; retf 0x1d5
0x00000000004bbad6 : add byte ptr [rax], al ; retf 0x24
0x00000000004bbfc6 : add byte ptr [rax], al ; retf 0x33
0x00000000004c2887 : add byte ptr [rax], al ; retf 0x3b9a
0x00000000004ba71e : add byte ptr [rax], al ; retf 0xb
0x00000000004bab1e : add byte ptr [rax], al ; retf 0xe
0x00000000004bb13e : add byte ptr [rax], al ; retf 1
0x00000000004be072 : add byte ptr [rax], al ; retf 2
0x00000000004be272 : add byte ptr [rax], al ; retf 3
0x00000000004b9fc6 : add byte ptr [rax], al ; retf 4
0x00000000004be672 : add byte ptr [rax], al ; retf 5
0x00000000004be872 : add byte ptr [rax], al ; retf 6
0x00000000004bea72 : add byte ptr [rax], al ; retf 7
0x00000000004bec72 : add byte ptr [rax], al ; retf 8
0x00000000004bee72 : add byte ptr [rax], al ; retf 9
0x00000000004be45e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00000000004c870a : add byte ptr [rax], al ; rol byte ptr [rdi], 1 ; add byte ptr [rax], al ; and bl, ah ; call rax
0x00000000004cc3be : add byte ptr [rax], al ; ror ah, 0xf7 ; call qword ptr [rbx]
0x00000000004cc36e : add byte ptr [rax], al ; ror bl, 0xf7 ; call qword ptr [rax]
0x00000000004ba866 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x00000000004cbccf : add byte ptr [rax], al ; sahf ; cmc ; jmp qword ptr [rbx]
0x00000000004cda56 : add byte ptr [rax], al ; sbb al, 0x5b ; add byte ptr [rax], al ; and al, 0x65 ; clc ; call rcx
0x00000000004cdff2 : add byte ptr [rax], al ; sbb al, 0xc2 ; clc ; jmp rax
0x00000000004d2222 : add byte ptr [rax], al ; sbb r15b, bpl ; jmp qword ptr [rdx]
0x00000000004ce2fa : add byte ptr [rax], al ; shl byte ptr [rbx], 0 ; jrcxz 0x4ce304 ; call qword ptr [rcx]
0x00000000004d1a5e : add byte ptr [rax], al ; shl byte ptr [rdx - 4], 1 ; jmp qword ptr [rdx]
0x00000000004cfb2e : add byte ptr [rax], al ; shl cl, 1 ; cli ; jmp qword ptr [rbx]
0x00000000004bba8e : add byte ptr [rax], al ; shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x000000000041fffc : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004cd266 : add byte ptr [rax], al ; sub al, 0x53 ; add byte ptr [rax], al ; push rsp ; sbb al, 0xf8 ; jmp qword ptr [rdx]
0x00000000004ce2d6 : add byte ptr [rax], al ; sub bl, ah ; clc ; call qword ptr [rcx]
0x000000000042e29c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000418d26 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x0000000000447db1 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000041506d : add byte ptr [rax], al ; sub rbp, rax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a60a0 : add byte ptr [rax], al ; sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004858cd : add byte ptr [rax], al ; syscall
0x00000000004c8c76 : add byte ptr [rax], al ; test al, 0x74 ; hlt ; jmp qword ptr [rax]
0x00000000004d2ae2 : add byte ptr [rax], al ; test al, 0xab ; add byte ptr [rax], al ; cmp byte ptr [rdx - 3], ch ; call qword ptr [rbx]
0x00000000004d1d06 : add byte ptr [rax], al ; test al, 0xd3 ; cld ; call qword ptr [rax]
0x0000000000445eb2 : add byte ptr [rax], al ; test dl, 0x40 ; jne 0x445e7b ; lea rax, [rdi + 7] ; ret
0x0000000000445ee0 : add byte ptr [rax], al ; test dl, 4 ; jne 0x445e7b ; lea rax, [rdi + 3] ; ret
0x000000000044d6f9 : add byte ptr [rax], al ; test eax, eax ; cmove eax, edx ; ret
0x000000000045a18e : add byte ptr [rax], al ; test esi, esi ; je 0x45a1ac ; cmp esi, 3 ; je 0x45a1ac ; ret
0x0000000000400421 : add byte ptr [rax], al ; test rax, rax ; je 0x400431 ; call rax
0x000000000047d7be : add byte ptr [rax], al ; test rsi, rsi ; jne 0x47d7d3 ; xor rax, rax ; ret
0x000000000042cbae : add byte ptr [rax], al ; tzcnt eax, eax ; add rax, rdi ; vzeroupper ; ret
0x000000000042cb9e : add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x00000000004c80ce : add byte ptr [rax], al ; xchg eax, esp ; add dword ptr [rax], eax ; add byte ptr [rsi - 0x67], bl ; call qword ptr [rcx]
0x00000000004c941a : add byte ptr [rax], al ; xchg eax, esp ; movsb byte ptr [rdi], byte ptr [rsi] ; hlt ; jmp rdi
0x00000000004c8fb2 : add byte ptr [rax], al ; xchg spl, r14b ; call qword ptr [rdi]
0x00000000004ce2ea : add byte ptr [rax], al ; xor al, 0xe3 ; clc ; call qword ptr [rcx]
0x00000000004cface : add byte ptr [rax], al ; xor al, bl ; cli ; jmp rdx
0x00000000004cc36a : add byte ptr [rax], al ; xor byte ptr [rax + rax], al ; ror bl, 0xf7 ; call qword ptr [rax]
0x00000000004d2e6a : add byte ptr [rax], al ; xor byte ptr [rdi + 0x7f200000], ch ; std ; call qword ptr [rdx]
0x00000000004ce4ae : add byte ptr [rax], al ; xor dl, ah ; std ; call rdx
0x000000000045e437 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000480036 : add byte ptr [rax], al ; xor eax, eax ; leave ; ret
0x00000000004514ef : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040ffa3 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a8c65 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000410556 : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044abbe : add byte ptr [rax], al ; xor eax, eax ; syscall
0x0000000000415ade : add byte ptr [rax], al ; xor eax, eax ; test rdx, rdx ; jne 0x415afa ; ret
0x000000000042caea : add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x00000000004897fe : add byte ptr [rax], al ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046d736 : add byte ptr [rax], al ; xor ecx, ecx ; movzx eax, byte ptr [rdi + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x000000000044b8b4 : add byte ptr [rax], al ; xor edi, edi ; or r10d, 0x40 ; mov eax, ecx ; syscall
0x000000000044b69a : add byte ptr [rax], al ; xor edi, edi ; syscall
0x000000000048897e : add byte ptr [rax], al ; xor edx, edx ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000459376 : add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x0000000000445e6e : add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004d22eb : add byte ptr [rax], bh ; add byte ptr [rax], al ; add byte ptr [rbx + 0x1bcc0000], dh ; std ; jmp rsp
0x00000000004cbf73 : add byte ptr [rax], bh ; add byte ptr [rax], al ; call 0x114cb663
0x0000000000400b93 : add byte ptr [rax], bh ; call 0x44ce18
0x00000000004d2573 : add byte ptr [rax], bh ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; js 0x4d25c0 ; std ; call qword ptr [rdx]
0x00000000004c8c73 : add byte ptr [rax], bh ; or eax, 0x74a80000 ; hlt ; jmp qword ptr [rax]
0x000000000040119c : add byte ptr [rax], bh ; pop rbp ; ret
0x00000000004d2ae7 : add byte ptr [rax], bh ; push -3 ; call qword ptr [rbx]
0x000000000049332c : add byte ptr [rax], bh ; ret
0x000000000048b1ae : add byte ptr [rax], bh ; retf 0x850f
0x00000000004cbce7 : add byte ptr [rax], bl ; sahf ; cmc ; jmp qword ptr [rbx]
0x00000000004ce4a7 : add byte ptr [rax], ch ; add byte ptr [rax], al ; add byte ptr [rax + 0x65], dh ; add byte ptr [rax], al ; xor dl, ah ; std ; call rdx
0x00000000004d1a57 : add byte ptr [rax], ch ; add byte ptr [rax], al ; add byte ptr [rax], ah ; wait ; add byte ptr [rax], al ; shl byte ptr [rdx - 4], 1 ; jmp qword ptr [rdx]
0x00000000004cbfc7 : add byte ptr [rax], ch ; and dh, bh ; call qword ptr [rax]
0x00000000004ce2d7 : add byte ptr [rax], ch ; jrcxz 0x4ce2d7 ; call qword ptr [rcx]
0x00000000004ccf63 : add byte ptr [rax], ch ; push rax ; add byte ptr [rax], al ; mov byte ptr [rdi], al ; clc ; call qword ptr [rcx]
0x00000000004d3047 : add byte ptr [rax], cl ; add byte ptr [rax], al ; adc byte ptr [rcx - 0x79d00000], dh ; std ; jmp qword ptr [rax]
0x00000000004d153f : add byte ptr [rax], cl ; add byte ptr [rax], al ; or byte ptr [rsi + 0x14d80000], dl ; cld ; call qword ptr [rdx]
0x000000000042fb34 : add byte ptr [rax], cl ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004d1697 : add byte ptr [rax], cl ; cld ; call rdi
0x00000000004a722e : add byte ptr [rax], cl ; mov byte ptr [rip + 0x2330b9], 8 ; ret
0x00000000004cd0b7 : add byte ptr [rax], cl ; or eax, edi ; call qword ptr [rcx]
0x00000000004a7235 : add byte ptr [rax], cl ; ret
0x00000000004d1543 : add byte ptr [rax], cl ; xchg eax, esi ; add byte ptr [rax], al ; fcom dword ptr [rsp + rdi*8] ; call qword ptr [rdx]
0x00000000004cc36b : add byte ptr [rax], dh ; add byte ptr [rax], r8b ; ror bl, 0xf7 ; call qword ptr [rax]
0x00000000004cfacf : add byte ptr [rax], dh ; fdivr st(2) ; jmp rdx
0x00000000004ce4af : add byte ptr [rax], dh ; loop 0x4ce4b4 ; call rdx
0x00000000004d2e6b : add byte ptr [rax], dh ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; and byte ptr [rdi - 3], bh ; call qword ptr [rdx]
0x00000000004d304f : add byte ptr [rax], dh ; xchg ch, bh ; jmp qword ptr [rax]
0x000000000047f336 : add byte ptr [rax], dl ; add byte ptr [rax + 0xf], cl ; call 0x30c58095
0x00000000004cc32b : add byte ptr [rax], dl ; add byte ptr [rax], al ; add ah, dh ; add byte ptr [r8], al ; pushfq ; retf
0x00000000004ce2f7 : add byte ptr [rax], dl ; add byte ptr [rax], al ; add al, al ; movsxd rax, dword ptr [rax] ; add byte ptr [rax - 0x1d], al ; clc ; call qword ptr [rcx]
0x00000000004d1cff : add byte ptr [rax], dl ; add byte ptr [rax], al ; add al, cl ; popfq ; add byte ptr [rax], al ; test al, 0xd3 ; cld ; call qword ptr [rax]
0x00000000004cd807 : add byte ptr [rax], dl ; add byte ptr [rax], al ; add al, dl ; pop rax ; add byte ptr [rax], al ; mov al, 0x4d ; clc ; call qword ptr [rax]
0x00000000004cbfbf : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax + 0x28000040], cl ; and dh, bh ; call qword ptr [rax]
0x00000000004ce2cf : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax + 0x28000063], bl ; jrcxz 0x4ce2df ; call qword ptr [rcx]
0x00000000004d2adf : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax + 0x380000ab], ch ; push -3 ; call qword ptr [rbx]
0x00000000004cd4c7 : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax + 0x77000055], dl ; xor bl, dh ; jmp qword ptr [rbx]
0x00000000004d1cd7 : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax + 0x9d], ah ; mov ah, 0xfc ; call qword ptr [rax]
0x00000000004cbf83 : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax + rax*2], cl ; add ah, ah ; fdivrp st(6) ; jmp qword ptr [rsi]
0x00000000004ca6d7 : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x1fffffd9], ah ; std ; hlt ; call qword ptr [rsi]
0x00000000004d12d7 : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x2fffff6d], ah ; mov bh, 0xfb ; call qword ptr [rax]
0x00000000004cbf6f : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], bh ; add byte ptr [rax], al ; call 0x114cb667
0x00000000004cc367 : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], dh ; add byte ptr [rax], r8b ; ror bl, 0xf7 ; call qword ptr [rax]
0x00000000004d2e67 : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], dh ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; and byte ptr [rdi - 3], bh ; call qword ptr [rdx]
0x00000000004c8c47 : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], dl ; or eax, 0x74a00000 ; hlt ; call qword ptr [rax]
0x00000000004cc2b3 : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rbx + rax*2], bh ; add ah, al ; ret 0xfff7
0x00000000004cd263 : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rbx + rdx*2], ch ; add byte ptr [rax], al ; push rsp ; sbb al, 0xf8 ; jmp qword ptr [rdx]
0x00000000004d12eb : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rbx + rdx*4 - 0x48340000], dh ; sti ; call qword ptr [rdx]
0x00000000004d12c3 : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rbx + rdx*4 - 0x483c0000], cl ; sti ; call qword ptr [rdx]
0x00000000004ce2e3 : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rbx - 0x1ccc0000], ch ; clc ; call qword ptr [rcx]
0x00000000004c8c5b : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rcx + 0x749c0000], ah ; hlt ; call qword ptr [rdx]
0x00000000004ca6eb : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rdi - 0x2140000], dh ; hlt ; call qword ptr [rsi]
0x00000000004c8fab : add byte ptr [rax], dl ; add byte ptr [rax], al ; je 0x4c8fce ; add byte ptr [rax], al ; xchg spl, r14b ; call qword ptr [rdi]
0x00000000004cdfeb : add byte ptr [rax], dl ; add byte ptr [rax], al ; mov ah, 0x60 ; add byte ptr [rax], al ; sbb al, 0xc2 ; clc ; jmp rax
0x0000000000489e9d : add byte ptr [rax], dl ; add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000489da8 : add byte ptr [rax], dl ; add byte ptr [rax], al ; mov rbx, rsp ; mov rsi, rbx ; syscall
0x00000000004d304b : add byte ptr [rax], dl ; mov cl, 0 ; add byte ptr [rax], dh ; xchg ch, bh ; jmp qword ptr [rax]
0x00000000004c8c4b : add byte ptr [rax], dl ; or eax, 0x74a00000 ; hlt ; call qword ptr [rax]
0x00000000004b1a1f : add byte ptr [rax], dl ; retf
0x00000000004c8ac8 : add byte ptr [rax], r8b ; add byte ptr [rax - 0x7ffffff5], dl ; outsd dx, dword ptr [rsi] ; hlt ; call rsp
0x00000000004c965c : add byte ptr [rax], r8b ; add byte ptr [rdi + rdx], ah ; add byte ptr [rax], al ; cld ; lodsb al, byte ptr [rsi] ; hlt ; jmp rdx
0x000000000044c52d : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000424b85 : add byte ptr [rax], r8b ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004142cd : add byte ptr [rax], r8b ; call 0x413bc9
0x0000000000424a4d : add byte ptr [rax], r8b ; mov eax, 0x16 ; ret
0x000000000044b95d : add byte ptr [rax], r8b ; mov eax, 0x1c ; syscall
0x000000000047f87d : add byte ptr [rax], r8b ; mov eax, 0x66 ; syscall
0x000000000044b92d : add byte ptr [rax], r8b ; mov eax, 0xa ; syscall
0x0000000000419add : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x000000000041964d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000044549d : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000041351a : add byte ptr [rax], r8b ; mov edx, eax ; jmp 0x4134c2
0x0000000000482b8d : add byte ptr [rax], r8b ; mov qword ptr [rsi], -1 ; xor eax, eax ; ret
0x0000000000418bdd : add byte ptr [rax], r8b ; mov rax, -1 ; ret
0x0000000000486f95 : add byte ptr [rax], r8b ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x00000000004454dd : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000040f4d5 : add byte ptr [rax], r8b ; mov rdx, r12 ; call 0x40f17c
0x00000000004215c5 : add byte ptr [rax], r8b ; mov rsi, qword ptr [rsp + 0x68] ; call rax
0x00000000004a94cd : add byte ptr [rax], r8b ; mov rsi, r14 ; mov rdi, r12 ; call r15
0x000000000042d2dd : add byte ptr [rax], r8b ; movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000417a3d : add byte ptr [rax], r8b ; movzx eax, byte ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000485e3d : add byte ptr [rax], r8b ; or byte ptr [rdi + 0x315], 4 ; xor eax, eax ; ret
0x0000000000400ab5 : add byte ptr [rax], r8b ; pop rbp ; ret
0x0000000000497fad : add byte ptr [rax], r8b ; pop rbx ; ret
0x0000000000400a7d : add byte ptr [rax], r8b ; ret
0x00000000004cc3bd : add byte ptr [rax], r8b ; ror ah, 0xf7 ; call qword ptr [rbx]
0x00000000004cc36d : add byte ptr [rax], r8b ; ror bl, 0xf7 ; call qword ptr [rax]
0x0000000000418d25 : add byte ptr [rax], r8b ; sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x000000000044786d : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x00000000004897fd : add byte ptr [rax], r8b ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044a8a6 : add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; ret
0x00000000004983bf : add byte ptr [rbp + 0x12], dh ; add rsp, 0x38 ; ret
0x00000000004a9953 : add byte ptr [rbp + 0x1a], dh ; ret
0x000000000047fc0d : add byte ptr [rbp + 0x1b], dh ; add rsp, 0x38 ; ret
0x0000000000449aee : add byte ptr [rbp + 0x23], dh ; add rsp, 0x20 ; pop rbx ; ret
0x000000000048c174 : add byte ptr [rbp + 0x27], dh ; add rsp, 0x68 ; ret
0x000000000048c0b4 : add byte ptr [rbp + 0x2c], dh ; add rsp, 0x38 ; ret
0x00000000004143aa : add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x0000000000459377 : add byte ptr [rbp + 0x31], al ; leave ; call r15
0x000000000046e827 : add byte ptr [rbp + 0x31], al ; ror byte ptr [rdi], 0xb6 ; add al, 7 ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x000000000048c2d5 : add byte ptr [rbp + 0x36], dh ; add rsp, 0x78 ; ret
0x000000000047f80f : add byte ptr [rbp + 0x38], dh ; add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000495751 : add byte ptr [rbp + 0x39], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000497590 : add byte ptr [rbp + 0x3b], dh ; leave ; ret
0x000000000044b9ef : add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x0000000000482b80 : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000044aad6 : add byte ptr [rbp + 0x42], dh ; add rsp, 0x58 ; ret
0x000000000047fadb : add byte ptr [rbp + 0x45], dh ; add rsp, 0x58 ; ret
0x000000000045c936 : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x148 ; ret
0x0000000000417707 : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000044ae66 : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x68 ; ret
0x00000000004958df : add byte ptr [rbp + 0x5a], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000044ccc4 : add byte ptr [rbp + 0x5d], dh ; add rsp, 0xd0 ; pop rbx ; ret
0x00000000004139e7 : add byte ptr [rbp + 0x63], cl ; retf 0xc148
0x00000000004155fa : add byte ptr [rbp + 0x6b894cc9], al ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000454c21 : add byte ptr [rbp + 0x6d880fd2], al ; add al, 0 ; add bh, dh ; ret 0xf800
0x0000000000495801 : add byte ptr [rbp + 0x6e], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000041198d : add byte ptr [rbp + 0x76], dh ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000414328 : add byte ptr [rbp + 0x7b894cc9], al ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000044d649 : add byte ptr [rbp + 0xa], dh ; add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x00000000004a1544 : add byte ptr [rbp + 0xa], dh ; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000045119b : add byte ptr [rbp + 0xa], dh ; jmp 0x4511c9
0x000000000045e412 : add byte ptr [rbp + 0xa], dh ; jmp 0x45e440
0x0000000000404eb1 : add byte ptr [rbp + 0xb], dh ; jmp 0x404ee1
0x0000000000417561 : add byte ptr [rbp + 0xb], dh ; jmp 0x417591
0x000000000046a1db : add byte ptr [rbp + 0xb], dh ; jmp 0x46a20c
0x00000000004d07cc : add byte ptr [rbp + 0xe], ch ; adc byte ptr [rbx + 0x80e5802], al ; ret
0x0000000000470f54 : add byte ptr [rbp + 0xf], al ; mov dh, 0xe4 ; movsxd rax, dword ptr [rdx + r12*4] ; add rax, rdx ; jmp rax
0x00000000004961bf : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x00000000004960af : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000044b805 : add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; ret
0x00000000004a3c3a : add byte ptr [rbp + 0xf], dh ; add rsp, 0x38 ; ret
0x00000000004896b6 : add byte ptr [rbp + 0xf], dh ; mov rax, qword ptr [rip + 0x250e30] ; ret
0x00000000004a315a : add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x000000000045c6ee : add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x00000000004982dc : add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x000000000041b28f : add byte ptr [rbp + 6], dh ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000410a80 : add byte ptr [rbp + 8], dh ; add rsp, 0xd8 ; ret
0x000000000047fb5e : add byte ptr [rbp + 8], dh ; movzx eax, al ; add rsp, 0x58 ; ret
0x000000000048c9d5 : add byte ptr [rbp + 9], dh ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004ae29f : add byte ptr [rbp + 9], dl ; idiv bh ; push rbp ; or esi, esi ; jmp rsp
0x00000000004a8a88 : add byte ptr [rbp + rax + 0x48], dh ; mov dword ptr [rdi + rsi*8], edx ; ret
0x0000000000401871 : add byte ptr [rbp + rax - 0x18], dh ; mov bh, 0xc0 ; add al, 0 ; leave ; ret
0x000000000040155e : add byte ptr [rbp + rax - 0x18], dh ; retf 0x4c3
0x00000000004a89a0 : add byte ptr [rbp + rbx + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004ba9b7 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x000000000043418c : add byte ptr [rbp + rcx*4 + 0x1d], cl ; pop rsp ; ret 7
0x000000000046a582 : add byte ptr [rbp + rcx*4 + 0x2c], cl ; test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004202eb : add byte ptr [rbp + rcx*4 + 0x46], cl ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000047c05e : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x000000000047c158 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x000000000047c252 : add byte ptr [rbp + rcx*4 + 0x4d], cl ; ror byte ptr [rcx + rcx*4 - 1], 0x41 ; call rsp
0x00000000004a10ce : add byte ptr [rbp + rcx*4 + 4], cl ; retf 0x8b41
0x00000000004a35cc : add byte ptr [rbp + rcx*4 + 4], cl ; retf 0xba
0x000000000041d209 : add byte ptr [rbp + rcx*4 + 5], cl ; ret
0x00000000004a96d6 : add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x1e7
0x00000000004ad301 : add byte ptr [rbp + rcx*4 + 5], cl ; retf
0x00000000004a3542 : add byte ptr [rbp + rdi*4 + 0x48], dh ; lea edi, [rip + 0x234c74] ; call 0xc
0x00000000004ab9e4 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x000000000044d6fa : add byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000004bac63 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x000000000047f9a4 : add byte ptr [rbp - 0x47a28a40], al ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x000000000044abf5 : add byte ptr [rbp - 0x47e98a40], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000044aec5 : add byte ptr [rbp - 0x47e98a40], al ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000044a147 : add byte ptr [rbp - 0x57c03b0], cl ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x000000000048f0f6 : add byte ptr [rbp - 0x57f2fad], cl ; or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x8348
0x000000000042f0cf : add byte ptr [rbp - 0x73], cl ; mov dword ptr [rdi], esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x00000000004a2454 : add byte ptr [rbp - 0x75], al ; or byte ptr [rbx + 0x394401c2], al ; retf 0x830f
0x0000000000495d3f : add byte ptr [rbp - 0x75], cl ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x48f8
0x000000000046a729 : add byte ptr [rbp - 0x75], cl ; je 0x46a75a ; and byte ptr [rax + 1], cl ; ret
0x000000000041e0fe : add byte ptr [rbp - 0x75], cl ; or byte ptr [rbp - 0x75], cl ; push rax ; or byte ptr [rcx - 0xa], al ; ret 0xf04
0x0000000000404b5b : add byte ptr [rbp - 0x76b80000], ah ; ret
0x00000000004704e5 : add byte ptr [rbp - 0x77], al ; ret 0xc748
0x000000000042856d : add byte ptr [rbp - 0x77], cl ; retf
0x000000000045a18f : add byte ptr [rbp - 0x7cf38b0a], al ; inc byte ptr [rbx] ; je 0x45a1ab ; ret
0x000000000044ee65 : add byte ptr [rbp - 0xcf98b40], al ; ret
0x00000000004aad77 : add byte ptr [rbp - 0xcfb8b40], al ; ret
0x00000000004af9bc : add byte ptr [rbp - 9], bh ; jmp qword ptr [rax]
0x00000000004cec5f : add byte ptr [rbp*2 - 0x1db40000], ah ; stc ; jmp qword ptr [rax]
0x000000000043e469 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x00000000004d22ef : add byte ptr [rbx + 0x1bcc0000], dh ; std ; jmp rsp
0x00000000004acd73 : add byte ptr [rbx + 0x22aa9a3d], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004a0c8d : add byte ptr [rbx + 0x23960c0d], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000048a035 : add byte ptr [rbx + 0x24e1ab0d], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000489452 : add byte ptr [rbx + 0x250d0705], cl ; add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0xc74
0x00000000004893b5 : add byte ptr [rbx + 0x250da405], cl ; add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000044ee5f : add byte ptr [rbx + 0x28bbea05], cl ; add byte ptr [rbp - 0xcf98b40], al ; ret
0x0000000000424bcf : add byte ptr [rbx + 0x2b533a15], cl ; add bh, dh ; ret 0
0x000000000042153f : add byte ptr [rbx + 0x2b62ce3d], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004a0c55 : add byte ptr [rbx + 0x2b], 4 ; mov byte ptr [rsp + rbx*8 - 0xd], dh ; ret
0x0000000000419a17 : add byte ptr [rbx + 0x2c041505], al ; add byte ptr [rcx], al ; ret
0x000000000041b00f : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004454cf : add byte ptr [rbx + 0x3568b0e], cl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000004595ab : add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x00000000004111b3 : add byte ptr [rbx + 0x42894c03], cl ; or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x0000000000445acf : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x00000000004454af : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x0000000000444fdf : add byte ptr [rbx + 0x48028901], cl ; lea eax, [rdx + 3] ; ret
0x000000000044af09 : add byte ptr [rbx + 0x480c2444], cl ; add esp, 0x10 ; pop rbx ; ret
0x0000000000422c9f : add byte ptr [rbx + 0x48], bl ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004231df : add byte ptr [rbx + 0x4c], bl ; mov esi, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x000000000043634f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000422ccf : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000404f9c : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004136b8 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000415504 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004070c1 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000041108b : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000045b8df : add byte ptr [rbx + 0x63], cl ; xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x00000000004aadcf : add byte ptr [rbx + 0x75c08507], cl ; or dh, bl ; ret
0x000000000044bc24 : add byte ptr [rbx + 0x94801e1], al ; retf 0x8949
0x00000000004369ff : add byte ptr [rbx + 0xe8b0156], cl ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000043698f : add byte ptr [rbx + 0xe8b0256], cl ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000043691f : add byte ptr [rbx + 0xe8b0356], cl ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000047dd6a : add byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000004cc2b7 : add byte ptr [rbx + rax*2], bh ; add ah, al ; ret 0xfff7
0x0000000000420a98 : add byte ptr [rbx + rbp], dl ; add bl, dh ; ret
0x00000000004cda57 : add byte ptr [rbx + rbx*2], bl ; add byte ptr [rax], al ; and al, 0x65 ; clc ; call rcx
0x00000000004a8a47 : add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x0000000000497767 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00000000004a3b47 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000459299 : add byte ptr [rbx + rcx*4 - 0x5c], cl ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004cd267 : add byte ptr [rbx + rdx*2], ch ; add byte ptr [rax], al ; push rsp ; sbb al, 0xf8 ; jmp qword ptr [rdx]
0x00000000004d12ef : add byte ptr [rbx + rdx*4 - 0x48340000], dh ; sti ; call qword ptr [rdx]
0x00000000004d12c7 : add byte ptr [rbx + rdx*4 - 0x483c0000], cl ; sti ; call qword ptr [rdx]
0x00000000004ce2e7 : add byte ptr [rbx - 0x1ccc0000], ch ; clc ; call qword ptr [rcx]
0x0000000000410efc : add byte ptr [rbx - 0x3d], bl ; call 0x44d935
0x00000000004494d8 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x00000000004494e6 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x00000000004494df : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x00000000004494f4 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x00000000004494ed : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x00000000004494d1 : add byte ptr [rbx - 0x3d], bl ; mov eax, 8 ; pop rbx ; ret
0x000000000041978e : add byte ptr [rbx - 0x3d], bl ; nop dword ptr [rax] ; ret
0x000000000046e99f : add byte ptr [rbx - 0x4f743], al ; jmp qword ptr [rax]
0x000000000044974e : add byte ptr [rbx - 0x50f0fe40], al ; ret 0xf8e9
0x00000000004c55ef : add byte ptr [rbx - 0x5a], ah ; out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x00000000004b2ec0 : add byte ptr [rbx - 0x750f0006], cl ; cli ; push qword ptr [rax] ; mov bh, dl ; jmp rax
0x00000000004679ac : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000047455d : add byte ptr [rbx - 0x78f0d006], al ; and eax, 0x83000039 ; ret 0xbf08
0x0000000000447496 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000408205 : add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000040bcd1 : add byte ptr [rbx - 0x7bf0fc06], al ; retf 0xd
0x000000000040bf36 : add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x000000000040b0e4 : add byte ptr [rbx - 0x7bf0fc08], al ; retf 6
0x0000000000411d28 : add byte ptr [rbx - 0x7bf0fd08], al ; ret
0x0000000000408f7c : add byte ptr [rbx - 0x7bf0fe02], al ; ret 0x1b
0x0000000000408332 : add byte ptr [rbx - 0x7bf0fe06], al ; retf
0x000000000040839e : add byte ptr [rbx - 0x7bf0fe07], al ; retf 0x1b
0x000000000040b14f : add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x000000000040b1f2 : add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x0000000000413f37 : add byte ptr [rbx - 0x7c2e76ed], cl ; retf 0x8320
0x00000000004aa7ef : add byte ptr [rbx - 0x7fbf8f19], al ; jmp qword ptr [rax]
0x00000000004b0afc : add byte ptr [rbx - 7], cl ; call qword ptr [rax]
0x00000000004aff80 : add byte ptr [rbx - 8], ch ; call qword ptr [rax + 0x20fff86a]
0x00000000004c0d5f : add byte ptr [rbx], ah ; push -4 ; lcall [rax + 0x57] ; cld ; call qword ptr [rax]
0x00000000004859a7 : add byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x00000000004ce2eb : add byte ptr [rbx], dh ; clc ; call qword ptr [rcx]
0x000000000041e13f : add byte ptr [rcx + 0x1ba41ca], cl ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000461e1d : add byte ptr [rcx + 0x29], al ; retf 0x8944
0x0000000000468c65 : add byte ptr [rcx + 0x29], cl ; ret
0x000000000042b585 : add byte ptr [rcx + 0x29], cl ; retf
0x000000000041271f : add byte ptr [rcx + 0x2b], cl ; adc byte ptr [r8 + 1], r9b ; ret
0x0000000000412686 : add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x00000000004a52a2 : add byte ptr [rcx + 0x348b4cd8], cl ; ret 0xf41
0x0000000000412c6f : add byte ptr [rcx + 0x39], cl ; jmp 0xfffffffffef5b092
0x000000000047d92f : add byte ptr [rcx + 0x39], cl ; ret
0x0000000000413f55 : add byte ptr [rcx + 0x415d5b13], cl ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000041114d : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x000000000041a4b0 : add byte ptr [rcx + 0x4789246f], cl ; adc byte ptr [rbx + 0x5d], bl ; ret
0x000000000041792f : add byte ptr [rcx + 0x480c2474], cl ; mov dword ptr [rsp], edi ; call 0x413bcb
0x0000000000413f20 : add byte ptr [rcx + 0x5c], al ; pop r13 ; pop r14 ; ret
0x000000000047b9ec : add byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000042ecee : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004a68e6 : add byte ptr [rcx + 0x63], cl ; add al, 0x87 ; add rax, r15 ; jmp rax
0x000000000045bdde : add byte ptr [rcx + 0x63], cl ; cmp al, 0xb3 ; add rdi, r11 ; jmp rdi
0x000000000042d54c : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x0000000000445328 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000462489 : add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000046e26a : add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x00000000004c8c5f : add byte ptr [rcx + 0x749c0000], ah ; hlt ; call qword ptr [rdx]
0x00000000004a6264 : add byte ptr [rcx + 0x7fffe1], al ; add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x000000000047dd64 : add byte ptr [rcx + 0xc00f9], al ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000004a1346 : add byte ptr [rcx + 0xc8b48d8], cl ; ret 0xb60f
0x0000000000449427 : add byte ptr [rcx + 0xee8c1c8], cl ; and eax, 0x3fc00 ; pop rbx ; ret
0x000000000046af78 : add byte ptr [rcx + 0xf], al ; mov dh, 0x46 ; or al, 0x83 ; ret
0x0000000000482fec : add byte ptr [rcx + 0xf], al ; mov dh, 0x87 ; adc eax, 0x89000003 ; ret 0xe8c0
0x000000000046f204 : add byte ptr [rcx + 0xf], al ; ret 0x3941
0x00000000004637af : add byte ptr [rcx + 0xf], al ; ret 0xc839
0x0000000000468817 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000046d82a : add byte ptr [rcx + 1], al ; ret 0x8b48
0x0000000000447b9f : add byte ptr [rcx + 1], cl ; ret
0x000000000040f415 : add byte ptr [rcx + 1], cl ; ret 0x149
0x00000000004a7b35 : add byte ptr [rcx + 1], cl ; ret 0xef89
0x00000000004a89ea : add byte ptr [rcx + 3], cl ; adc al, 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000041a48d : add byte ptr [rcx + rax + 0x57], al ; sbb byte ptr [rax + 0x39], cl ; ret
0x0000000000489514 : add byte ptr [rcx + rax - 0x10], dh ; inc dword ptr [r9 + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004034d2 : add byte ptr [rcx + rax - 0x18], cl ; jmp rax
0x00000000004c80cf : add byte ptr [rcx + rax - 0x66a20000], dl ; call qword ptr [rcx]
0x000000000047fabc : add byte ptr [rcx + rbp - 0x48], dh ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000004cd88f : add byte ptr [rcx + rbx*2], dl ; add ah, cl ; push rcx ; clc ; jmp qword ptr [rdx]
0x0000000000417db4 : add byte ptr [rcx + rcx - 0xd], dh ; ret
0x00000000004abf5f : add byte ptr [rcx + rcx*4 + 0x2d], cl ; int1 ; retf 0x22
0x00000000004ac1ae : add byte ptr [rcx + rcx*4 + 0x2d], cl ; retf 0x22c8
0x00000000004ad92f : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000004a5337 : add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x000000000040f4d7 : add byte ptr [rcx + rcx*4 - 0x1e], cl ; call 0x40f17a
0x0000000000422d4b : add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rsi, rbx ; mov rdi, r13 ; call 0x41ef9c
0x000000000041bbee : add byte ptr [rcx + rcx*4 - 0x40], cl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047ef92 : add byte ptr [rcx + rcx*4 - 0x40], cl ; shr rax, 2 ; vzeroupper ; ret
0x000000000047db8f : add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x00000000004a94cf : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call r15
0x000000000040b158 : add byte ptr [rcx + rcx*4 - 1], cl ; call 0x4213da
0x00000000004ad08f : add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x000000000041e2cf : add byte ptr [rcx + rcx*4 - 9], cl ; mov dword ptr [rsp + 8], r10d ; call 0x41a57b
0x000000000042516f : add byte ptr [rcx + rcx*8 - 0x7cb7dd8c], al ; ret 0x4801
0x000000000041e48c : add byte ptr [rcx + rcx], dl ; add byte ptr [rax - 0x17], dl ; ret
0x0000000000420968 : add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x420937 ; ret
0x000000000044aa21 : add byte ptr [rcx - 0x176b70e], cl ; mov edi, 0xffffff9c ; syscall
0x0000000000456e8f : add byte ptr [rcx - 0x46], al ; add eax, 0xe9000000 ; ret
0x000000000045c862 : add byte ptr [rcx - 0x46], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000044aeeb : add byte ptr [rcx - 0x473d7621], cl ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000004ad2fb : add byte ptr [rcx - 0x47], al ; rol byte ptr [rbx], 0 ; add byte ptr [rbp + rcx*4 + 5], cl ; retf
0x00000000004c81f3 : add byte ptr [rcx - 0x71], dh ; call qword ptr [rbx]
0x0000000000479ca4 : add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 - 0x75], r9d ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x00000000004893bb : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0x840f
0x0000000000489458 : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0xc74
0x000000000040f487 : add byte ptr [rcx - 0x75], cl ; add byte ptr [r8 - 0x7d], r9b ; ret
0x000000000044c63a : add byte ptr [rcx - 0x75], cl ; jge 0x44c645 ; call r12
0x000000000044c66a : add byte ptr [rcx - 0x75], cl ; jge 0x44c675 ; call r12
0x00000000004ada3f : add byte ptr [rcx - 0x75], cl ; pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x0000000000461b5f : add byte ptr [rcx - 0x75], cl ; xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000041238f : add byte ptr [rcx - 0x75], cl ; xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000046d444 : add byte ptr [rcx - 0x75], cl ; xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000044d867 : add byte ptr [rcx - 0x77], al ; ret
0x000000000046dc2e : add byte ptr [rcx - 0x77], al ; ret 0x1674
0x000000000046c747 : add byte ptr [rcx - 0x77], al ; retf
0x0000000000459d43 : add byte ptr [rcx - 0x77], cl ; pop rsi ; cmp byte ptr [rcx - 0x77], cl ; push rsi ; sub byte ptr [rax - 0x3f], cl ; retf
0x000000000045a01b : add byte ptr [rcx - 0x77], cl ; push rsi ; cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000460467 : add byte ptr [rcx - 0x77], cl ; ret
0x0000000000405b00 : add byte ptr [rcx - 0x77], cl ; ret 0x149
0x00000000004ad0e2 : add byte ptr [rcx - 0x77], cl ; ret 0x8349
0x0000000000484024 : add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000044d76f : add byte ptr [rcx - 0x77], cl ; retf 0x19b8
0x00000000004a626a : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x000000000047104c : add byte ptr [rcx - 0x7afcb730], cl ; push -0x7c000006 ; ret 0x8908
0x00000000004a6379 : add byte ptr [rcx - 0x7b], cl ; ret 0x840f
0x000000000047b4ab : add byte ptr [rcx - 0x7cb7e8f4], cl ; ret 0x4804
0x00000000004602f1 : add byte ptr [rcx - 0x7d], al ; in al, dx ; add dword ptr [rax - 0x93b43], eax ; jmp qword ptr [rax]
0x000000000046b7f5 : add byte ptr [rcx - 0x7d], al ; in eax, dx ; add dword ptr [rax - 0x91743], eax ; jmp qword ptr [rax]
0x00000000004a657f : add byte ptr [rcx - 0x7d], al ; retf 0xb801
0x0000000000462c42 : add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x000000000045cc37 : add byte ptr [rcx - 0x7d], cl ; call qword ptr [rbx]
0x000000000042b61f : add byte ptr [rcx - 0x7d], cl ; jmp 0x42b63b
0x000000000049877b : add byte ptr [rcx - 0x7d], cl ; jmp 0x498797
0x000000000049f45b : add byte ptr [rcx - 0x7d], cl ; jmp 0x49f477
0x000000000049fa5b : add byte ptr [rcx - 0x7d], cl ; jmp 0x49fa77
0x000000000049fd5b : add byte ptr [rcx - 0x7d], cl ; jmp 0x49fd77
0x00000000004a005b : add byte ptr [rcx - 0x7d], cl ; jmp 0x4a0077
0x00000000004a035b : add byte ptr [rcx - 0x7d], cl ; jmp 0x4a0377
0x00000000004a065b : add byte ptr [rcx - 0x7d], cl ; jmp 0x4a0677
0x000000000041e147 : add byte ptr [rcx - 0x7d], cl ; ret
0x000000000041a6cf : add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x000000000045ceae : add byte ptr [rcx - 0x7d], cl ; ret 0x6601
0x00000000004273af : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000425cbf : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000044bbe2 : add byte ptr [rcx - 0x7d], cl ; retf
0x000000000048d20b : add byte ptr [rcx - 0xa], al ; ret 0x7501
0x0000000000415b51 : add byte ptr [rcx - 1], al ; xchg eax, edi ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000004b0b78 : add byte ptr [rcx - 7], dl ; jmp qword ptr [rax]
0x00000000004af9ec : add byte ptr [rcx - 9], bh ; call qword ptr [rax]
0x000000000042cd72 : add byte ptr [rcx - 9], cl ; ret 1
0x000000000042cd98 : add byte ptr [rcx - 9], cl ; ret 2
0x00000000004573d4 : add byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; retf 0x8966
0x000000000041a4e9 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add eax, 0x2bd2f3 ; ret
0x000000000041a4c9 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add eax, 0x2bd30b ; ret
0x00000000004a6d3a : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(1) ; ret
0x000000000041b28b : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 6], dh ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000449310 : add byte ptr [rcx], al ; add byte ptr [rax], al ; cmp rdx, rcx ; jne 0x4492fe ; vzeroupper ; ret
0x00000000004136b5 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000447daf : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x00000000004c4daf : add byte ptr [rcx], al ; add byte ptr [rdi - 0x4a9782f7], bl ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x000000000040fe8f : add byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047faba : add byte ptr [rcx], al ; je 0x47faf2 ; mov eax, 0x101 ; syscall
0x0000000000400b2b : add byte ptr [rcx], al ; pop rbp ; ret
0x000000000048a03b : add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000419a1d : add byte ptr [rcx], al ; ret
0x000000000040162b : add byte ptr [rcx], al ; ret 0x8b48
0x00000000004afe60 : add byte ptr [rcx], bh ; clc ; call rax
0x000000000044ee7c : add byte ptr [rcx], bh ; ret
0x000000000044d81f : add byte ptr [rcx], bh ; sal byte ptr [rbp + 8], 1 ; nop ; mov eax, 0xca ; syscall
0x000000000044fb2a : add byte ptr [rcx], ch ; stc ; shl ecx, 3 ; pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x0000000000412df6 : add byte ptr [rcx], cl ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000047c97b : add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004822dc : add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x0000000000405336 : add byte ptr [rcx], dh ; imul al ; ret 0xbfac
0x0000000000496ed6 : add byte ptr [rcx], dh ; imul al ; ret 0xf695
0x0000000000494a87 : add byte ptr [rcx], dh ; inc dword ptr [rcx - 0x48] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000044b8b5 : add byte ptr [rcx], dh ; inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x000000000046d737 : add byte ptr [rcx], dh ; leave ; movzx eax, byte ptr [rdi + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x000000000047d211 : add byte ptr [rcx], dh ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000004514f0 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000040ffa4 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004a8c66 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0xc3 ; nop dword ptr [rax] ; ret
0x000000000042c67c : add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x000000000047fc4a : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0x47fc81 ; ret
0x000000000048ea9f : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; call 0x490b7cc0
0x0000000000491af7 : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; call 0x490bad18
0x0000000000495edf : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; call 0x490bf100
0x0000000000494877 : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; fmul dword ptr [rdi] ; xchg eax, edx ; ret 0x2948
0x0000000000415adf : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x415af9 ; ret
0x000000000044ee9b : add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x00000000004cd4cf : add byte ptr [rdi + 0x30], dh ; jmp qword ptr [rbx]
0x00000000004ae143 : add byte ptr [rdi + 0x52], ah ; cmc ; dec dword ptr [rax + 0x52] ; cmc ; ljmp [rcx] ; push rdx ; cmc ; jmp qword ptr [rax]
0x0000000000425bb0 : add byte ptr [rdi + 0x63], cl ; or al, 0x8a ; lea r10, [r10 + r9] ; jmp r10
0x000000000043419a : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000042ec1a : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; lea r9, [r11 + r9] ; jmp r9
0x00000000004a87b5 : add byte ptr [rdi + 1], bh ; call r14
0x00000000004a87dd : add byte ptr [rdi + 1], bh ; call rax
0x00000000004a952c : add byte ptr [rdi + 2], dh ; sbb eax, eax ; ret
0x00000000004cc63f : add byte ptr [rdi + rax*2], al ; add byte ptr [rax], al ; fcom st(0), st(4) ; idiv edi ; retf
0x00000000004c867f : add byte ptr [rdi + rax], al ; add ah, bh ; fdivr st(3), st(0) ; call rsp
0x00000000004ccb9b : add byte ptr [rdi + rbp*8 - 9], al ; call rsi
0x000000000048c787 : add byte ptr [rdi + rcx + 0x44], cl ; retf 0x8d48
0x000000000045b3cf : add byte ptr [rdi + rcx - 0x42], cl ; retf 0x4a8d
0x0000000000464de5 : add byte ptr [rdi + rcx - 0x4a], al ; or al, 0x89 ; ret 0xc689
0x00000000004c965f : add byte ptr [rdi + rdx], ah ; add byte ptr [rax], al ; cld ; lodsb al, byte ptr [rsi] ; hlt ; jmp rdx
0x00000000004ca6ef : add byte ptr [rdi - 0x2140000], dh ; hlt ; call qword ptr [rsi]
0x00000000004c4db1 : add byte ptr [rdi - 0x4a9782f7], bl ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004b0690 : add byte ptr [rdi - 0x716f0008], cl ; clc ; jmp qword ptr [rax]
0x0000000000438622 : add byte ptr [rdi], 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000040eeb6 : add byte ptr [rdi], cl ; add eax, 0x8944c689 ; ret 0xeab8
0x000000000048b356 : add byte ptr [rdi], cl ; add eax, 0x940fc085 ; ret 0x3d
0x0000000000435b16 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000004493a7 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x0000000000436b4f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000436bbf : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000044737f : add byte ptr [rdi], cl ; mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000044736f : add byte ptr [rdi], cl ; mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000044733f : add byte ptr [rdi], cl ; mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000044735f : add byte ptr [rdi], cl ; mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000044734f : add byte ptr [rdi], cl ; mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000455d1b : add byte ptr [rdi], cl ; mov dh, 0x4e ; add dword ptr [rcx - 0x77], eax ; retf
0x0000000000456e24 : add byte ptr [rdi], cl ; mov dh, 0x78 ; add cl, byte ptr [rax + 0x39] ; retf
0x0000000000456e0f : add byte ptr [rdi], cl ; mov dh, 0x78 ; add dword ptr [rax + 0x39], ecx ; retf
0x0000000000456e39 : add byte ptr [rdi], cl ; mov dh, 0x78 ; add ecx, dword ptr [rax + 0x39] ; retf
0x00000000004a7934 : add byte ptr [rdi], cl ; mov dh, 0xc0 ; movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x0000000000470697 : add byte ptr [rdi], cl ; mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000004786eb : add byte ptr [rdi], cl ; mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000044945f : add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x00000000004a66bd : add byte ptr [rdi], cl ; mov dh, 0xc9 ; movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x0000000000426f5f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000040e863 : add byte ptr [rdi], cl ; mov dh, 0xfa ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x0000000000417a3f : add byte ptr [rdi], cl ; mov dh, 2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000413f2f : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042d2df : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042ce1f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000463f4b : add byte ptr [rdi], cl ; mov ds, word ptr [rax + rax + 0x63490000] ; ret 0x8944
0x000000000048b26f : add byte ptr [rdi], cl ; mov esi, 0xc3c829c2 ; mov eax, 1 ; ret
0x000000000042c6af : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000042c6df : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000042c6cf : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000042c6ef : add byte ptr [rdi], cl ; mov esp, 0xc22948c0 ; jbe 0x42c73c ; add rax, rdi ; ret
0x000000000042c6bf : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x000000000046e264 : add byte ptr [rdi], cl ; mov ss, word ptr [rax + rax + 0x63490000] ; ret 0x8948
0x0000000000485d03 : add byte ptr [rdi], cl ; ret 0x8d48
0x000000000045a31b : add byte ptr [rdi], cl ; ret 0xc083
0x0000000000467043 : add byte ptr [rdi], cl ; retf 0x45e9
0x000000000042b57f : add byte ptr [rdi], cl ; sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x000000000040ee9b : add byte ptr [rdi], cl ; sub dword ptr [rsp + 0xf0], eax ; syscall
0x000000000044ad57 : add byte ptr [rdi], cl ; test dword ptr [rbx + 0x48000000], ebp ; add esp, 0x78 ; ret
0x000000000047f9c9 : add byte ptr [rdi], cl ; test dword ptr [rcx + 0x48000000], edi ; add esp, 0x78 ; ret
0x0000000000412236 : add byte ptr [rdi], cl ; test dword ptr [rcx - 0x16000002], esi ; retf 0xfffe
0x000000000044a9c4 : add byte ptr [rdi], cl ; test dword ptr [rsi + 0x48000000], ebp ; add esp, 0x68 ; ret
0x0000000000497c17 : add byte ptr [rdi], cl ; test dword ptr [rsi + 0x48000000], esi ; add esp, 0x30 ; pop rbx ; ret
0x00000000004a4e3c : add byte ptr [rdi], cl ; test ebp, edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x3901
0x0000000000422ede : add byte ptr [rdi], cl ; test ebx, edi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000046b3d8 : add byte ptr [rdi], cl ; xchg dword ptr [rdx + rbx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042193e : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3d83
0x0000000000480b43 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x00000000004512e4 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x0000000000486be0 : add byte ptr [rdx + 0x21c], bh ; call 0x402e18
0x0000000000456357 : add byte ptr [rdx + 0x2d8], bh ; call 0x402e18
0x0000000000444f9f : add byte ptr [rdx + 0x48028801], cl ; lea eax, [rdx] ; ret
0x00000000004437ef : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x00000000004a89b7 : add byte ptr [rdx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000048643c : add byte ptr [rdx + 0x63], cl ; add al, 0xa1 ; add rax, rcx ; jmp rax
0x0000000000486d64 : add byte ptr [rdx + 0x63], cl ; add al, 0xa7 ; add rax, rdi ; jmp rax
0x000000000044d6f5 : add byte ptr [rdx + 0x64], bh ; test eax, eax ; cmove eax, edx ; ret
0x000000000044d84c : add byte ptr [rdx + 1], bh ; mov eax, 0xca ; syscall
0x00000000004c81ef : add byte ptr [rdx + rax - 0x708f0000], dh ; call qword ptr [rbx]
0x0000000000413bc7 : add byte ptr [rdx + rax - 0xd], dh ; ret
0x00000000004cdff3 : add byte ptr [rdx + rax*8], bl ; clc ; jmp rax
0x00000000004d2223 : add byte ptr [rdx + rbx - 3], cl ; jmp qword ptr [rdx]
0x00000000004ba5b7 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x000000000044ee83 : add byte ptr [rdx + rcx - 0x77], dh ; adc eax, 0x287c2c ; pop rbx ; ret
0x0000000000458be0 : add byte ptr [rdx + rdi*2 - 0xa], dh ; ret
0x0000000000458bdf : add byte ptr [rdx + rdi*2 - 0xa], sil ; ret
0x00000000004b0478 : add byte ptr [rdx - 0x6e6f0008], dl ; clc ; jmp qword ptr [rax]
0x00000000004b0ac0 : add byte ptr [rdx - 7], cl ; call qword ptr [rax]
0x00000000004cec63 : add byte ptr [rdx - 7], cl ; jmp qword ptr [rax]
0x00000000004b0b98 : add byte ptr [rdx - 7], dl ; jmp qword ptr [rax]
0x00000000004afda0 : add byte ptr [rdx], 0xf8 ; call rax
0x000000000048cfb9 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000044c937 : add byte ptr [rdx], cl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044eed5 : add byte ptr [rsi + 0x2e], ah ; nop dword ptr [rax + rax] ; ret
0x000000000044fc10 : add byte ptr [rsi + 0x3b], ah ; cmp eax, 0x2885d4 ; je 0x44fbd4 ; call 0x45c6bc
0x000000000044d907 : add byte ptr [rsi + 0x80], bh ; syscall
0x00000000004858c4 : add byte ptr [rsi + 0x81], bh ; mov eax, 0xca ; syscall
0x00000000004a87d8 : add byte ptr [rsi + 0xa], bh ; mov edi, 1 ; call rax
0x0000000000447e95 : add byte ptr [rsi + 0xf], ah ; cmp ah, byte ptr [rbx - 0x27] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x00000000004a0b72 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x000000000042d854 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000464e8a : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x0000000000464eb3 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x33e8
0x000000000041b677 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x4466
0x000000000041b0af : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x0000000000467c0a : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xdce8
0x0000000000464e51 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x0000000000467bac : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf
0x000000000042c5e4 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000041b676 : add byte ptr [rsi + 0xf], spl ; outsd dx, dword ptr [rsi] ; ret 0x4466
0x00000000004c8fb3 : add byte ptr [rsi + rax*4 - 0xc], cl ; call qword ptr [rdi]
0x0000000000425761 : add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x00000000004ce7cb : add byte ptr [rsi + rbp - 7], dh ; call qword ptr [rsi]
0x000000000044fc17 : add byte ptr [rsi + rbp*4 - 0x18], dh ; xchg eax, ecx ; retf 0
0x00000000004d0da7 : add byte ptr [rsi + rcx*4], ch ; add ah, dh ; lahf ; sti ; call rdx
0x00000000004579a0 : add byte ptr [rsi + rsi*2 - 0xa], dh ; ret
0x000000000045799f : add byte ptr [rsi + rsi*2 - 0xa], sil ; ret
0x00000000004ca44b : add byte ptr [rsi + rsi*8], ah ; hlt ; call qword ptr [rdi]
0x00000000004c80d3 : add byte ptr [rsi - 0x67], bl ; call qword ptr [rcx]
0x00000000004a0c6d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x27 ; syscall
0x000000000044d79d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x63 ; syscall
0x000000000047f11d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xc9 ; syscall
0x00000000004004ed : add byte ptr [rsi - 0x70], ah ; ret
0x00000000004437ff : add byte ptr [rsi - 0x75], ah ; add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000425727 : add byte ptr [rsi - 9], dh ; ret 0
0x00000000004cbd90 : add byte ptr [rsi], 0xf6 ; jmp qword ptr [rbx]
0x000000000044a901 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000004183a5 : add byte ptr [rsp + rax - 0x58], dh ; add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x00000000004cab3f : add byte ptr [rsp + rbp], al ; add byte ptr [rax], al ; pop rsp ; sbb al, 0xf5 ; call qword ptr [rax]
0x00000000004cab43 : add byte ptr [rsp + rbx - 0xb], bl ; call qword ptr [rax]
0x00000000004cd26b : add byte ptr [rsp + rbx - 8], dl ; jmp qword ptr [rdx]
0x00000000004a3d29 : add byte ptr [rsp + rcx + 0x48], dh ; lea edi, [rip + 0x23448d] ; call 0xc
0x00000000004020ee : add byte ptr [rsp + rcx - 0x7f], dh ; retf 0x440
0x00000000004ccb97 : add byte ptr [rsp + rcx*2], bl ; add byte ptr [rdi + rbp*8 - 9], al ; call rsi
0x000000000045465c : add byte ptr [rsp + rsi - 0xa], dh ; ret
0x00000000004cbe05 : add byte ptr ds:[rax], al ; adc rsi, rsi ; call rsp
0x00000000004cbd8d : add byte ptr ds:[rax], al ; add byte ptr [rsi], 0xf6 ; jmp qword ptr [rbx]
0x000000000046a224 : add byte ptr es:[rax + 0x63], cl ; retf 0x8948
0x00000000004792a2 : add byte ptr es:[rax + 0x63], cl ; ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x000000000046d777 : add byte ptr es:[rax - 0x75], cl ; add al, 0xc8 ; mov ecx, 1 ; jmp rax
0x000000000046de4a : add byte ptr es:[rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x00000000004984c7 : add byte ptr es:[rax], al ; and ch, 2 ; cmovne rax, rdx ; ret
0x000000000046a1da : add byte ptr es:[rbp + 0xb], dh ; jmp 0x46a20d
0x000000000044d6f7 : add byte ptr fs:[rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000004ce4ad : add byte ptr gs:[rax], al ; xor dl, ah ; std ; call rdx
0x00000000004ba9c3 : add ch, al ; or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x000000000047d73f : add ch, al ; std ; xlatb ; retf 0xc985
0x0000000000441a2f : add ch, al ; std ; xlatb ; rol dword ptr [rbp - 0x3a678a40], 0xfd ; xlatb ; ret 0xc085
0x00000000004c5ffc : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004c5ffd : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x00000000004d0d3d : add ch, byte ptr [rbp + rcx + 7] ; ret
0x000000000046af74 : add ch, byte ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x46 ; or al, 0x83 ; ret
0x000000000047bd6a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000042406a : add ch, byte ptr [rdi - 1] ; dec dword ptr [rbx + 0x90c2454] ; ret 0xbae9
0x000000000046afb3 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004c959f : add ch, byte ptr [rsi + rcx + 8] ; ret
0x00000000004a7627 : add ch, cl ; retf 0xfffc
0x0000000000449488 : add cl, al ; call 0xffffffff84071da0
0x00000000004c53ca : add cl, bl ; retf 0xea91
0x0000000000443817 : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x000000000046b792 : add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x0000000000456bce : add cl, byte ptr [rax + 0x39] ; ret
0x000000000046ace6 : add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x0000000000456e28 : add cl, byte ptr [rax + 0x39] ; retf
0x0000000000433d9a : add cl, byte ptr [rax + 0x39] ; retf 0x820f
0x0000000000449174 : add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x000000000041e31b : add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041df78 : add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x00000000004259fc : add cl, byte ptr [rax + 0xf] ; ret 0xc3f3
0x0000000000412824 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000412743 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000045276c : add cl, byte ptr [rax + 1] ; fimul word ptr [rax + 1] ; ret
0x0000000000457166 : add cl, byte ptr [rax - 0x73] ; add rcx, qword ptr [rax + 0x39] ; retf
0x000000000046a892 : add cl, byte ptr [rax - 0x73] ; or al, 0x13 ; add rdx, r12 ; call qword ptr [r10 + rax*8]
0x00000000004438a5 : add cl, byte ptr [rax - 0x75] ; add eax, 0x5428948 ; mov rax, rdi ; ret
0x00000000004437d5 : add cl, byte ptr [rax - 0x75] ; or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000443818 : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x0000000000443785 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000004a0ec5 : add cl, byte ptr [rax - 0x77] ; je 0x4a0ef6 ; or byte ptr [rax + 1], cl ; ret
0x00000000004889d4 : add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x0000000000419632 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x0000000000441fe0 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000442043 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x000000000049732d : add cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x00000000004a7623 : add cl, byte ptr [rax - 0x7d] ; rol byte ptr [rdx], 0xe9 ; retf 0xfffc
0x000000000047b2b0 : add cl, byte ptr [rax - 9] ; fiadd dword ptr [rbx - 0x7bf0fc1e] ; retf
0x000000000042f946 : add cl, byte ptr [rax] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004b0564 : add cl, byte ptr [rbp - 0x736d0008] ; clc ; jmp qword ptr [rdx]
0x0000000000436992 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000443853 : add cl, byte ptr [rbx + 0x42890341] ; add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x0000000000445035 : add cl, byte ptr [rbx + 0x42890541] ; add eax, 0x8428d48 ; ret
0x0000000000443895 : add cl, byte ptr [rbx + 0x42890841] ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000459ed8 : add cl, byte ptr [rcx + 0x39] ; retf
0x00000000004a8707 : add cl, byte ptr [rcx - 0x75] ; adc al, 0x24 ; mov edi, 1 ; call rax
0x0000000000456e0b : add cl, byte ptr [rcx - 0x77] ; add byte ptr [r15], r9b ; mov dh, 0x78 ; add dword ptr [rax + 0x39], ecx ; retf
0x000000000040f427 : add cl, byte ptr [rcx - 0x77] ; add dword ptr [rcx - 0x73], ecx ; or byte ptr [r8 + 0x39], cl ; ret
0x000000000045389a : add cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000405b79 : add cl, byte ptr [rdi] ; retf 0x8b48
0x00000000004081ff : add cl, byte ptr [rdi] ; test bh, bl ; sbb al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000040b846 : add cl, byte ptr [rdi] ; test bh, bl ; sbb byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000040bf30 : add cl, byte ptr [rdi] ; test ch, dl ; add al, 0 ; add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x0000000000447e9b : add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x0000000000443815 : add cl, byte ptr [rdx + 0x42880241] ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000444ff3 : add cl, byte ptr [rdx + 0x42880441] ; add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x0000000000443833 : add cl, byte ptr [rdx + 0x42880441] ; add al, 0x48 ; mov eax, edi ; ret
0x00000000004a36d8 : add cl, ch ; and cl, cl ; mov ch, 0xff ; nop ; add rsp, 8 ; ret
0x00000000004821a7 : add cl, ch ; jmp 0x4821b1
0x00000000004771af : add cl, ch ; nop ; retf
0x00000000004150f7 : add cl, ch ; ret
0x0000000000401087 : add cl, ch ; ret 0
0x0000000000476a30 : add cl, ch ; ret 0xff9f
0x00000000004607aa : add cl, ch ; ret 0xfffa
0x0000000000456648 : add cl, ch ; ret 0xfffd
0x000000000040b160 : add cl, ch ; retf
0x000000000043c51a : add cl, ch ; retf 0xfffe
0x0000000000400c68 : add cl, cl ; ret
0x00000000004c5283 : add cl, dh ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000004c5282 : add cl, sil ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x0000000000400b25 : add dh, al ; add eax, 0x2d87b3 ; add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x00000000004be66b : add dh, al ; add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x000000000046ba88 : add dh, al ; test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x00000000004602b2 : add dh, al ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x00000000004c7cad : add dh, bh ; call rcx
0x00000000004c40be : add dh, bh ; movsxd rax, dword ptr [rbp + 0x275dcc4c] ; retf 0xd1cb
0x00000000004bdab7 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000436b43 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000004005ae : add dh, bl ; ret
0x000000000042579e : add dh, byte ptr [rax + rcx - 9] ; ret 0
0x0000000000447967 : add dh, byte ptr [rbp + 0x16] ; movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x44796c ; ret
0x0000000000447a17 : add dh, byte ptr [rbp + 0x16] ; movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x447a1c ; ret
0x00000000004497bd : add dh, byte ptr [rbp - 0x2b] ; test al, al ; jne 0x4496fc ; jmp 0x4497a1
0x00000000004c9ad1 : add dh, byte ptr [rbx + 0xa] ; ret
0x0000000000447fef : add dh, byte ptr [rdx + 8] ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000041c0a8 : add dh, dh ; ret
0x0000000000452a9e : add dh, dh ; ret 0x4801
0x00000000004239df : add dh, dh ; ret 0x4804
0x00000000004868e8 : add dh, dh ; ret 0x7403
0x000000000044b89f : add dh, dh ; ret 0x7404
0x0000000000445ec7 : add dh, dh ; ret 0x7501
0x0000000000445ed4 : add dh, dh ; ret 0x7502
0x0000000000445ee1 : add dh, dh ; ret 0x7504
0x0000000000445e99 : add dh, dh ; ret 0x7510
0x0000000000445ea6 : add dh, dh ; ret 0x7520
0x00000000004259cc : add dh, dh ; ret 0x7540
0x0000000000423d03 : add dh, dh ; ret 0xf02
0x000000000045bd38 : add dh, dh ; ret 0xf04
0x000000000041bfd9 : add dh, dh ; ret 0xf08
0x0000000000468671 : add dh, dh ; ret 0xf40
0x0000000000468657 : add dh, dh ; ret 0xf50
0x0000000000483cad : add dword ptr [r15], r9d ; xchg eax, ebp ; ret 0xc283
0x0000000000479ca7 : add dword ptr [r8 - 0x75], r9d ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x0000000000478ac5 : add dword ptr [r8 - 0x7d], ecx ; ret 0x8502
0x00000000004516b3 : add dword ptr [r8 - 0x7d], r9d ; ret
0x000000000045bddb : add dword ptr [r8], eax ; add byte ptr [rcx + 0x63], cl ; cmp al, 0xb3 ; add rdi, r11 ; jmp rdi
0x0000000000449e37 : add dword ptr [rax + 0x10], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004cda53 : add dword ptr [rax + 0x1c000000], edx ; pop rbx ; add byte ptr [rax], al ; and al, 0x65 ; clc ; call rcx
0x0000000000444fa1 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x000000000046726a : add dword ptr [rax + 0x29], ecx ; fimul dword ptr [rax + 0x39] ; ret 0xe57f
0x000000000046722f : add dword ptr [rax + 0x29], ecx ; fimul dword ptr [rax + 0x39] ; retf 0xe87f
0x0000000000458318 : add dword ptr [rax + 0x39480742], ecx ; retf
0x0000000000457195 : add dword ptr [rax + 0x39480750], ecx ; retf
0x0000000000417fad : add dword ptr [rax + 0x39], ecx ; ret
0x0000000000489e79 : add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x0000000000489e8b : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x000000000045ceff : add dword ptr [rax + 0x39], ecx ; ret 0x8841
0x000000000046664a : add dword ptr [rax + 0x39], ecx ; ret 0x8c0f
0x000000000045e8f3 : add dword ptr [rax + 0x39], ecx ; ret 0xd774
0x000000000045e87d : add dword ptr [rax + 0x39], ecx ; ret 0xed75
0x0000000000456e13 : add dword ptr [rax + 0x39], ecx ; retf
0x00000000004a0c40 : add dword ptr [rax + 0x39], ecx ; retf 0x1c74
0x0000000000418288 : add dword ptr [rax + 0x39], ecx ; retf 0xee75
0x0000000000458d50 : add dword ptr [rax + 0x39], r9d ; ret
0x0000000000456ff3 : add dword ptr [rax + 0x63], ecx ; int 0xf
0x00000000004a9843 : add dword ptr [rax + 0x7900ff7a], eax ; sbb dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x00000000004723fc : add dword ptr [rax + 1], ecx ; ret
0x00000000004a7e2e : add dword ptr [rax + 1], ecx ; retf
0x0000000000484b29 : add dword ptr [rax + 1], ecx ; retf 0x8948
0x000000000048c247 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000040edea : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000004834a5 : add dword ptr [rax + 9], ecx ; ret 0x1475
0x000000000041f0de : add dword ptr [rax + 9], ecx ; ret 0x8949
0x0000000000483477 : add dword ptr [rax + 9], ecx ; ret 0xe75
0x000000000044bc27 : add dword ptr [rax + 9], ecx ; retf 0x8949
0x0000000000472154 : add dword ptr [rax + r9*4 + 0x2a], eax ; jne 0x4720fc ; mov rdx, rax ; jmp 0x472116
0x000000000047fb90 : add dword ptr [rax + rax], edx ; mov eax, ecx ; syscall
0x000000000042409d : add dword ptr [rax + rbp + 0x48], esi ; test eax, eax ; je 0x4240bc ; lea rax, [rdx - 0x10] ; ret
0x0000000000472155 : add dword ptr [rax + rcx*4 + 0x2a], eax ; jne 0x4720fb ; mov rdx, rax ; jmp 0x472115
0x0000000000424123 : add dword ptr [rax + rdi - 0x3e], eax ; jne 0x42411a ; sub rax, 0x10 ; ret
0x00000000004c4e7b : add dword ptr [rax + rdx*4 + 0x16], edi ; out dx, al ; out 0x78, al ; jnp 0x4c4ee7 ; retf
0x0000000000487f13 : add dword ptr [rax - 0x39], ecx ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000462cc3 : add dword ptr [rax - 0x4f743], eax ; jmp qword ptr [rax]
0x0000000000403f3f : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x00000000004240b4 : add dword ptr [rax - 0x73], ecx ; clc ; cmovne rax, rcx ; ret
0x0000000000479ca8 : add dword ptr [rax - 0x75], ecx ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x0000000000400bc6 : add dword ptr [rax - 0x75], ecx ; clc ; leave ; ret
0x00000000004437f1 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x000000000041a3a1 : add dword ptr [rax - 0x77], ecx ; adc eax, 0x2bd487 ; ret
0x000000000047036c : add dword ptr [rax - 0x77], ecx ; adc eax, dword ptr [rax - 0x78] ; sub byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000047c963 : add dword ptr [rax - 0x77], ecx ; add byte ptr [r8 - 0x77], r9b ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000443782 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000004895c3 : add dword ptr [rax - 0x77], ecx ; add eax, 0x250f25 ; ret
0x000000000041342f : add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000045fbb0 : add dword ptr [rax - 0x77], ecx ; push rsi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000040725c : add dword ptr [rax - 0x77], ecx ; ret
0x0000000000451c17 : add dword ptr [rax - 0x77], ecx ; ret 0x2b48
0x0000000000415376 : add dword ptr [rax - 0x77], ecx ; ret 0x3c75
0x000000000045eccc : add dword ptr [rax - 0x77], ecx ; retf 0x8948
0x00000000004a12a2 : add dword ptr [rax - 0x77], ecx ; rol byte ptr [rbx + 0x394800d3], 1 ; retf 0xe275
0x00000000004040f2 : add dword ptr [rax - 0x77], ecx ; xlatb ; mov qword ptr [rbp - 0x78], rdx ; call 0x420b1a
0x00000000004895c2 : add dword ptr [rax - 0x77], r9d ; add eax, 0x250f25 ; ret
0x00000000004101c6 : add dword ptr [rax - 0x7d], ecx ; ret
0x000000000045d369 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000478ac6 : add dword ptr [rax - 0x7d], ecx ; ret 0x8502
0x0000000000403f89 : add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x0000000000452206 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b01
0x0000000000479117 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b04
0x000000000040f6eb : add dword ptr [rax - 0x7d], ecx ; ret 0xf10
0x000000000046b7f9 : add dword ptr [rax - 0x91743], eax ; jmp qword ptr [rax]
0x00000000004602f5 : add dword ptr [rax - 0x93b43], eax ; jmp qword ptr [rax]
0x000000000044af35 : add dword ptr [rax - 1], edi ; jmp 0x44af06
0x0000000000406c90 : add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x00000000004183a2 : add dword ptr [rax], 0 ; add byte ptr [rsp + rax - 0x58], dh ; add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x00000000004a4a3d : add dword ptr [rax], eax ; add al, ch ; retf
0x00000000004114d4 : add dword ptr [rax], eax ; add bl, dh ; ret
0x0000000000449311 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf 0xd975
0x000000000047d353 : add dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x000000000042c9bf : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; vzeroupper ; ret
0x000000000041ac5a : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x0000000000469ba3 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x0000000000456bc8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x00000000004822a4 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; dec dword ptr [rax - 0x7d] ; ret
0x000000000041fd1d : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000047ae8b : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x000000000047fd9d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044a749 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x16e9
0x00000000004aa10a : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x3948
0x0000000000457e36 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x00000000004a8655 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000004573d5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf 0x8966
0x000000000044826e : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000047b949 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x00000000004123d8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; retf
0x00000000004a609f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000420360 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000469e78 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044d1cc : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000457a92 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000042c257 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041f9b5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x000000000042547e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004411cf : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042c285 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000040eab3 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0xeb08
0x00000000004502e1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004bdaba : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004bcc6a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004bca92 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004bca8a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004bd222 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004bcaca : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004bcac2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x00000000004bd262 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x0000000000464a63 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000479958 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004a87b7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r14
0x00000000004a870d : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x00000000004a9529 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ja 0x4a953a ; sbb eax, eax ; ret
0x0000000000410665 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x410632
0x0000000000449f5a : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x449f28
0x000000000045ea7d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x45ea4a
0x00000000004628dd : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x000000000041b28c : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x41b2a3 ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004800e2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; leave ; ret
0x000000000047b9e9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041a52a : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov dword ptr [rip + 0x2bd2d8], eax ; ret
0x0000000000400b90 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0 ; call 0x44ce1b
0x000000000044d84e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x000000000044a5b1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x00000000004889ad : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004a8dc0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x00000000004977e6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000041a512 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rip + 0x2bd2d3], rax ; ret
0x000000000041a4ea : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rip + 0x2bd2f3], rax ; ret
0x000000000041a4ca : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rip + 0x2bd30b], rax ; ret
0x0000000000478c1d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000046ddff : add dword ptr [rax], eax ; add byte ptr [rax], al ; movzx eax, byte ptr [rdi + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x000000000047c5a0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004184b3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a219e : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000048a041 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000046a0e0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000044abfb : add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000004143a8 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x00000000004a96d4 : add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x1e7
0x0000000000429b48 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004acd71 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x22aa9a3d], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004136b6 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004a85a6 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000044fb12 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040b14d : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x000000000045bddc : add dword ptr [rax], eax ; add byte ptr [rcx + 0x63], cl ; cmp al, 0xb3 ; add rdi, r11 ; jmp rdi
0x000000000040b156 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 1], cl ; call 0x4213dc
0x00000000004ada3d : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x0000000000462c40 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x00000000004a6d38 : add dword ptr [rax], eax ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(1) ; ret
0x00000000004822da : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x00000000004c80d1 : add dword ptr [rax], eax ; add byte ptr [rsi - 0x67], bl ; call qword ptr [rcx]
0x0000000000445ec5 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x0000000000445ed2 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x0000000000445edf : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000445e97 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000445ea4 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000445eb1 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000045bd36 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x00000000004259f8 : add dword ptr [rax], eax ; and ch, 2 ; cmovne rax, rdx ; ret
0x0000000000424bbc : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x0000000000424b23 : add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x00000000004c4db0 : add dword ptr [rax], eax ; lahf ; or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x0000000000424b1c : add dword ptr [rax], eax ; lea rdx, [rip + 0x1d62b] ; cmovne rax, rdx ; ret
0x00000000004259ac : add dword ptr [rax], eax ; lea rdx, [rip + 0x1df4b] ; cmovne rax, rdx ; ret
0x0000000000424ab5 : add dword ptr [rax], eax ; lea rdx, [rip + 0x21332] ; cmovne rax, rdx ; ret
0x000000000040119b : add dword ptr [rax], eax ; mov eax, 0 ; pop rbp ; ret
0x0000000000410d7c : add dword ptr [rax], eax ; mov eax, dword ptr [rbp - 0x3c] ; jmp 0x410cdd
0x000000000049d3b1 : add dword ptr [rax], eax ; mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000041114c : add dword ptr [rax], eax ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049ab46 : add dword ptr [rax], eax ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000049f042 : add dword ptr [rax], eax ; mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000048bf30 : add dword ptr [rax], eax ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000004a96dc : add dword ptr [rax], eax ; movzx ecx, cl ; movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x00000000004070c0 : add dword ptr [rax], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042fa9b : add dword ptr [rax], ecx ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000044e141 : add dword ptr [rax], esp ; jmp rdx
0x0000000000491976 : add dword ptr [rbp + 0x19], eax ; rol byte ptr [rcx - 0x7d], cl ; ret 0x4502
0x00000000004c53c4 : add dword ptr [rbp + 0x6c], ebx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x0000000000478d45 : add dword ptr [rbp + 0xf48ff78], ecx ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8502
0x0000000000478abf : add dword ptr [rbp + 0xf48ff7e], ecx ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8502
0x0000000000400b2c : add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x0000000000468130 : add dword ptr [rbp - 0x41f040be], ecx ; retf 0x53c
0x000000000044a0e9 : add dword ptr [rbp - 0x57c03b0], ecx ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x00000000004039b7 : add dword ptr [rbp - 0x77], ecx ; out dx, al ; call 0x4004b6
0x000000000044c3dd : add dword ptr [rbp - 0x77], ecx ; retf
0x0000000000460132 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x00000000004c57aa : add dword ptr [rbp - 9], 0x8d626770 ; rcl byte ptr [rdi], cl ; retf
0x0000000000436a02 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000491973 : add dword ptr [rbx + 0x194501fa], eax ; rol byte ptr [rcx - 0x7d], cl ; ret 0x4502
0x00000000004c438a : add dword ptr [rbx + 0x1e40293b], ebp ; cli ; test bh, dl ; retf 0xdf7f
0x000000000048a03c : add dword ptr [rbx - 0x3d], ebx ; nop ; mov eax, 1 ; pop rbx ; ret
0x000000000046dc65 : add dword ptr [rbx - 0x4f743], eax ; jmp qword ptr [rax]
0x00000000004a4929 : add dword ptr [rbx - 0x77], ecx ; push rsp ; ret 0x4808
0x000000000040e7de : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x000000000048040c : add dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x77] ; retf
0x000000000046a21f : add dword ptr [rcx + 0x26e9060d], ecx ; add byte ptr [rax + 0x63], cl ; retf 0x8948
0x0000000000443851 : add dword ptr [rcx + 0x3418b02], ecx ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000045ddc2 : add dword ptr [rcx + 0x39], ecx ; ret
0x0000000000443831 : add dword ptr [rcx + 0x4418a02], ecx ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000048e110 : add dword ptr [rcx + 0xf], eax ; mov esi, 0x8941240c ; retf
0x000000000044c133 : add dword ptr [rcx + 9], ecx ; ret
0x000000000044bbe6 : add dword ptr [rcx + rcx*4 + 0x5f], ecx ; or byte ptr [rcx - 0x77], cl ; retf
0x0000000000463b0e : add dword ptr [rcx + rcx*4 - 0x19], ecx ; call 0x47fd66
0x000000000040f42a : add dword ptr [rcx - 0x73], ecx ; or byte ptr [r8 + 0x39], cl ; ret
0x0000000000443821 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x00000000004788be : add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x0000000000455d1f : add dword ptr [rcx - 0x77], eax ; retf
0x000000000047141b : add dword ptr [rcx - 0x77], ecx ; or byte ptr [rdi + r9 - 0x4a], r8b ; sub byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000045b408 : add dword ptr [rcx - 0x78], eax ; dec dword ptr [rax - 0x7d] ; ret
0x000000000044df35 : add dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000468d31 : add dword ptr [rcx - 0x7d], ecx ; ret 0x2504
0x0000000000482beb : add dword ptr [rcx - 0x7d], ecx ; ret 0xf01
0x000000000044a99d : add dword ptr [rcx], eax ; add byte ptr [rax], al ; mov rsi, rdi ; mov edi, 0xffffff9c ; syscall
0x000000000047f9aa : add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000004206c0 : add dword ptr [rcx], eax ; add rsp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000448006 : add dword ptr [rcx], ebp ; add byte ptr [rax + 0x39], cl ; retf 0x870f
0x0000000000416003 : add dword ptr [rcx], ecx ; retf 0xd284
0x0000000000470759 : add dword ptr [rcx], edi ; ret 0x850f
0x0000000000466143 : add dword ptr [rcx], edi ; retf
0x00000000004c52d5 : add dword ptr [rcx], edx ; cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x0000000000449002 : add dword ptr [rdi + 0x15], esi ; jb 0x449010 ; mov byte ptr [rdi], cl ; ret
0x000000000047e31b : add dword ptr [rdi + 0x25], ebx ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000448283 : add dword ptr [rdi + 0x26], esi ; jb 0x448297 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000449170 : add dword ptr [rdi + 0x2c], esi ; jb 0x449181 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000449338 : add dword ptr [rdi + 0x3a], esi ; jb 0x449349 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000004485e3 : add dword ptr [rdi + 0x3b], esi ; jb 0x4485f7 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000448a33 : add dword ptr [rdi + 0x53], esi ; jb 0x448a47 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004382f7 : add dword ptr [rdi], 0x14634900 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004d0d05 : add dword ptr [rdi], 0x48 ; or eax, 0x1370303 ; ret
0x00000000004d0c9d : add dword ptr [rdi], 0x48 ; or eax, 0x34b0303 ; ret
0x00000000004d0cd1 : add dword ptr [rdi], 0x48 ; or eax, 0x35b0303 ; ret
0x00000000004d0cae : add dword ptr [rdi], 0xd ; add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004d0ce2 : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; cld ; ret
0x00000000004d0d16 : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004cd195 : add dword ptr [rdi], 3 ; ret 0xa01
0x000000000041827b : add dword ptr [rdi], ecx ; mov dh, 0x3c ; adc byte ptr [rax - 0x78], al ; jl 0x4182a5 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000458310 : add dword ptr [rdi], ecx ; mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x0000000000488ab7 : add dword ptr [rdi], ecx ; mov esi, 0xaf0f4907 ; retf 0x14c
0x000000000042eceb : add dword ptr [rdi], ecx ; or byte ptr [rax], al ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000041f8db : add dword ptr [rdi], ecx ; ret 0x8948
0x0000000000449751 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x0000000000455c81 : add dword ptr [rdi], ecx ; xchg byte ptr [rdi], dl ; or eax, 0xea810000 ; ret 0
0x0000000000483cae : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0xc283
0x0000000000447ffc : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000043988d : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004a0ccb : add dword ptr [rdx + rax*2], 1 ; ret
0x000000000048b1c6 : add dword ptr [rdx + rdx*8 - 0x41f0308b], eax ; sal edi, 0xd8 ; ret
0x00000000004c4faf : add dword ptr [rdx - 0x36a5831f], esp ; retf
0x00000000004cfe94 : add dword ptr [rdx], 0x4a ; ret
0x00000000004d2ea4 : add dword ptr [rdx], 0x55 ; ret
0x00000000004cba50 : add dword ptr [rdx], 0x5a ; ret
0x00000000004d2e60 : add dword ptr [rdx], 0x76 ; ret
0x00000000004c9642 : add dword ptr [rdx], eax ; retf
0x0000000000419a18 : add dword ptr [rip + 0x2c0415], 1 ; ret
0x0000000000401199 : add dword ptr [rip + 0xb80001], 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000402117 : add dword ptr [rsi + 0x2d], edi ; add bh, dh ; ret 0
0x00000000004c959b : add dword ptr [rsi + rcx + 0x30], ecx ; add ch, byte ptr [rsi + rcx + 8] ; ret
0x0000000000443802 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000004183a9 : add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x00000000004a0907 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a58bd : add eax, 0x1489066 ; ret 0xb70f
0x000000000045c6f0 : add eax, 0x18c48348 ; ret
0x0000000000425b19 : add eax, 0x1bb12 ; cmove rax, rdx ; ret
0x0000000000424bb9 : add eax, 0x1d0a2 ; cmove rax, rdx ; ret
0x000000000044a92a : add eax, 0x1f0fc3f3 ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x0000000000441f15 : add eax, 0x20 ; add rax, rdi ; sub rax, rdx ; vzeroupper ; ret
0x000000000042cb4a : add eax, 0x20 ; add rax, rdi ; vzeroupper ; ret
0x00000000004a668f : add eax, 0x212ec ; movss dword ptr [rsp - 0x28], xmm0 ; ret
0x00000000004256d0 : add eax, 0x221ab ; cmove rax, rdx ; ret
0x0000000000425a59 : add eax, 0x22732 ; cmovne rax, rdx ; ret
0x0000000000425919 : add eax, 0x22862 ; cmovne rax, rdx ; ret
0x00000000004257b9 : add eax, 0x229d2 ; cmovne rax, rdx ; ret
0x0000000000425ac0 : add eax, 0x22a7b ; cmovne rax, rdx ; ret
0x0000000000425980 : add eax, 0x22bab ; cmovne rax, rdx ; ret
0x0000000000425820 : add eax, 0x22d1b ; cmovne rax, rdx ; ret
0x0000000000425a9f : add eax, 0x22ecc ; cmovne rax, rdx ; ret
0x00000000004aae91 : add eax, 0x22f62e ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004aae83 : add eax, 0x22f640 ; test eax, eax ; je 0x4aae9a ; ret
0x00000000004aad81 : add eax, 0x22f73e ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004aad73 : add eax, 0x22f750 ; test eax, eax ; je 0x4aad8a ; ret
0x000000000042595f : add eax, 0x22ffc ; cmovne rax, rdx ; ret
0x00000000004257ff : add eax, 0x2316c ; cmovne rax, rdx ; ret
0x0000000000424b40 : add eax, 0x231db ; cmovne rax, rdx ; ret
0x000000000042588b : add eax, 0x23660 ; cmovne rax, rdx ; ret
0x00000000004a30a0 : add eax, 0x2378f2 ; jne 0x4a30d6 ; ret
0x000000000042586e : add eax, 0x237dd ; cmovne rax, rdx ; ret
0x00000000004258bf : add eax, 0x2390c ; cmovne rax, rdx ; ret
0x00000000004a0e71 : add eax, 0x239b8a ; ret
0x0000000000497d29 : add eax, 0x24247a ; ret
0x0000000000497d0e : add eax, 0x242495 ; add rsp, 8 ; ret
0x0000000000497d22 : add eax, 0x242499 ; mov qword ptr [rip + 0x24247a], rax ; ret
0x000000000048972c : add eax, 0x250db7 ; mov qword ptr [rsi], rax ; ret
0x00000000004896bb : add eax, 0x250e30 ; ret
0x0000000000489682 : add eax, 0x250e69 ; add rsp, 8 ; ret
0x00000000004895c6 : add eax, 0x250f25 ; ret
0x000000000046e3c7 : add eax, 0x266e54 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046e374 : add eax, 0x266ea7 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046de47 : add eax, 0x266ed4 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046e1e6 : add eax, 0x267035 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046e1a1 : add eax, 0x26707a ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046e15c : add eax, 0x2670bf ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046e10d : add eax, 0x26710e ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000462838 : add eax, 0x271de3 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000462be7 : add eax, 0x271f34 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000462b99 : add eax, 0x271f82 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000462aea : add eax, 0x272031 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000462a8e : add eax, 0x27208d ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004627ee : add eax, 0x27232d ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004627a0 : add eax, 0x27237b ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000462347 : add eax, 0x2724d4 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000459452 : add eax, 0x280b41 ; ret
0x000000000044ee52 : add eax, 0x2894a9 ; ret
0x0000000000450f52 : add eax, 0x289b11 ; ret
0x000000000044d74a : add eax, 0x28aa21 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044ee61 : add eax, 0x28bbea ; test eax, eax ; je 0x44ee7a ; ret
0x000000000044b792 : add eax, 0x28ca61 ; test rax, rax ; je 0x44b7a9 ; ret
0x000000000044ab21 : add eax, 0x28fe26 ; test eax, eax ; jne 0x44ab4b ; xor eax, eax ; syscall
0x00000000004543af : add eax, 0x29480000 ; ret 0x349
0x0000000000425a39 : add eax, 0x2b44d2 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004258f9 : add eax, 0x2b4612 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x0000000000425799 : add eax, 0x2b4772 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x0000000000420af7 : add eax, 0x2b6d64 ; ret
0x000000000040312e : add eax, 0x2b9 ; add byte ptr [rax - 0x75], cl ; pop rsp ; retf
0x0000000000420b01 : add eax, 0x2b9386 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000420a97 : add eax, 0x2b9400 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041aa1d : add eax, 0x2bce3e ; ret
0x000000000041a518 : add eax, 0x2bd2d3 ; ret
0x000000000041a52f : add eax, 0x2bd2d8 ; ret
0x000000000041a4f0 : add eax, 0x2bd2f3 ; ret
0x000000000041a4d0 : add eax, 0x2bd30b ; ret
0x000000000041a3c6 : add eax, 0x2bd47d ; ret
0x000000000041a3b6 : add eax, 0x2bd485 ; ret
0x000000000041a366 : add eax, 0x2bd48d ; ret
0x000000000041a356 : add eax, 0x2bd4a5 ; ret
0x0000000000419982 : add eax, 0x2bd799 ; ret
0x000000000041a9d1 : add eax, 0x2bf4b6 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041a545 : add eax, 0x2bf96a ; ret
0x0000000000419a7d : add eax, 0x2c03b2 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400b27 : add eax, 0x2d87b3 ; add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x0000000000456356 : add eax, 0x2d8ba00 ; add byte ptr [rax], al ; call 0x402e19
0x00000000004cedc4 : add eax, 0x3400e4e ; ret
0x0000000000456348 : add eax, 0x358d4800 ; leave ; ret
0x0000000000461585 : add eax, 0x358d4800 ; pop rsp ; fadd qword ptr [rip + 0x3d8d4800] ; retf
0x00000000004645b5 : add eax, 0x358d4800 ; sub al, 0xac ; add eax, 0x3d8d4800 ; retf
0x00000000004982de : add eax, 0x38c48348 ; ret
0x000000000041e26e : add eax, 0x39480000 ; ret 0xf275
0x000000000046b24c : add eax, 0x3d8d4800 ; ret
0x000000000046158c : add eax, 0x3d8d4800 ; retf
0x0000000000441f35 : add eax, 0x40 ; add rax, rdi ; sub rax, rdx ; vzeroupper ; ret
0x000000000042cb6a : add eax, 0x40 ; add rax, rdi ; vzeroupper ; ret
0x0000000000445038 : add eax, 0x48054289 ; lea eax, [rdx + 8] ; ret
0x0000000000443868 : add eax, 0x48054289 ; mov eax, edi ; ret
0x0000000000436683 : add eax, 0x480e8b48 ; mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000445b96 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; lea rax, [rdi + 0xc] ; ret
0x0000000000445536 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000401ebe : add eax, 0x4ba6ce8 ; add cl, cl ; ret
0x0000000000401c3b : add eax, 0x4bcefe8 ; add cl, cl ; ret
0x0000000000401a29 : add eax, 0x4bf01e8 ; add cl, cl ; ret
0x0000000000401873 : add eax, 0x4c0b7e8 ; add cl, cl ; ret
0x0000000000401560 : add eax, 0x4c3cae8 ; add cl, cl ; ret
0x00000000004014d9 : add eax, 0x4c451e8 ; add cl, cl ; ret
0x000000000040115d : add eax, 0x4c7cde8 ; add cl, cl ; ret
0x0000000000400cbd : add eax, 0x4cc6de8 ; add cl, cl ; ret
0x0000000000400c63 : add eax, 0x4ccc7e8 ; add cl, cl ; ret
0x00000000004450b9 : add eax, 0x5428948 ; lea rax, [rdx + 0xc] ; ret
0x00000000004438a9 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x00000000004be65d : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x000000000047b92a : add eax, 0x5c415d5b ; ret
0x00000000004be669 : add eax, 0x5c60000 ; add byte ptr [rax], al ; enter 5, 0 ; retf 5
0x00000000004be66d : add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x0000000000400c02 : add eax, 0x5d900000 ; ret
0x0000000000441f83 : add eax, 0x60 ; add rax, rdi ; sub rax, rdx ; vzeroupper ; ret
0x000000000042cb8a : add eax, 0x60 ; add rax, rdi ; vzeroupper ; ret
0x000000000042f5f4 : add eax, 0x63490008 ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004afda9 : add eax, 0x670fff8 ; clc ; dec dword ptr [rax + 0x32] ; clc ; call qword ptr [rax]
0x0000000000425ae9 : add eax, 0x6c52 ; cmove rax, rdx ; ret
0x00000000004256f9 : add eax, 0x6d12 ; cmove rax, rdx ; ret
0x0000000000464e89 : add eax, 0x6f0f6600 ; ret 0x290f
0x0000000000464eb2 : add eax, 0x6f0f6600 ; ret 0x33e8
0x0000000000467c09 : add eax, 0x6f0f6600 ; ret 0xdce8
0x000000000044d82b : add eax, 0x787d089 ; test eax, eax ; jne 0x44d830 ; pop rdx ; pop r10 ; ret
0x000000000042575d : add eax, 0x79ee ; je 0x425732 ; ret
0x000000000042be97 : add eax, 0x83480000 ; ret 0x4910
0x000000000043f7c1 : add eax, 0x83480000 ; ret 0xe910
0x000000000042bec5 : add eax, 0x83480000 ; ret 0xeb10
0x000000000041e10e : add eax, 0x83480000 ; retf 0x4901
0x00000000004920d8 : add eax, 0x83480003 ; ret
0x0000000000460ab5 : add eax, 0x83ffffef ; ret
0x000000000044503b : add eax, 0x8428d48 ; ret
0x0000000000498480 : add eax, 0x85db ; cmovne rax, rdx ; ret
0x000000000040eeb8 : add eax, 0x8944c689 ; ret 0xeab8
0x000000000045a8d3 : add eax, 0x89480000 ; ret 0x2948
0x00000000004ad0e0 : add eax, 0x89490000 ; ret 0x8349
0x00000000004296c8 : add eax, 0x894d0000 ; retf
0x0000000000468816 : add eax, 0x940f4100 ; ret
0x000000000048b358 : add eax, 0x940fc085 ; ret 0x3d
0x000000000047c909 : add eax, 0x9f2 ; cmove rax, rdx ; ret
0x0000000000400d63 : add eax, 0xad1ac ; add rax, rdx ; jmp rax
0x000000000042e58a : add eax, 0xc0310000 ; ret
0x00000000004450bd : add eax, 0xc428d48 ; ret
0x0000000000445b9d : add eax, 0xc478d48 ; ret
0x000000000047dd19 : add eax, 0xc62 ; cmove rax, rdx ; ret
0x0000000000456e92 : add eax, 0xe9000000 ; ret
0x000000000047c8d9 : add eax, 0xee2 ; cmove rax, rdx ; ret
0x00000000004a8a8a : add eax, 0xf7148948 ; ret
0x00000000004369f3 : add eax, 0xf7f0ff3 ; ret
0x000000000045ac21 : add eax, 0xfc67a9e8 ; dec dword ptr [rcx + rcx*4 + 0x25] ; ret 0x27de
0x00000000004aad9a : add eax, 0xffff50e9 ; push rbx ; ret
0x0000000000420af0 : add eax, 0xfffff58b ; mov qword ptr [rip + 0x2b6d64], rax ; ret
0x00000000004502c5 : add eax, 1 ; push rax ; call rbx
0x000000000047eb81 : add eax, 1 ; ret
0x000000000047eb78 : add eax, 2 ; ret
0x000000000047eb91 : add eax, 3 ; ret
0x000000000045c609 : add eax, dword ptr [0] ; ret
0x00000000004a89ec : add eax, dword ptr [rax + 0xd0] ; add rsp, 0x18 ; ret
0x0000000000458445 : add eax, dword ptr [rax] ; add al, ch ; ret
0x00000000004859a8 : add eax, dword ptr [rax] ; add bl, dh ; ret
0x00000000004a50d1 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x74], ah ; adc dword ptr [rcx - 0x7d], ecx ; ret
0x00000000004a572c : add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000044e68e : add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; retf 0x8548
0x000000000041d708 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000041c056 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x00000000004a6296 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x000000000045d039 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; jl 0x45d06e ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x00000000004a255e : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; pop rbp ; mov eax, 0x89fd8945 ; ret 0xe283
0x00000000004021fb : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000041c1da : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000420eda : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004210a0 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000042c077 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f961 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042c0a5 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000450ea4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044b9ec : add eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x000000000047ebd3 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000044aecb : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000004ad2ff : add eax, dword ptr [rax] ; add byte ptr [rbp + rcx*4 + 5], cl ; retf
0x00000000004a2452 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x75], al ; or byte ptr [rbx + 0x394401c2], al ; retf 0x830f
0x000000000042c028 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044974c : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe40], al ; ret 0xf8e9
0x00000000004a52a0 : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x348b4cd8], cl ; ret 0xf41
0x00000000004637ad : add eax, dword ptr [rax] ; add byte ptr [rcx + 0xf], al ; ret 0xc839
0x000000000044d865 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x00000000004a0659 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; jmp 0x4a0679
0x0000000000463f49 : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; mov ds, word ptr [rax + rax + 0x63490000] ; ret 0x8944
0x000000000044d905 : add eax, dword ptr [rax] ; add byte ptr [rsi + 0x80], bh ; syscall
0x00000000004868e6 : add eax, dword ptr [rax] ; add dh, dh ; ret 0x7403
0x000000000041bfd7 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf08
0x0000000000413504 : add eax, dword ptr [rax] ; add rsp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x0000000000416cf5 : add eax, dword ptr [rax] ; add rsp, 0x80 ; ret
0x0000000000487af5 : add eax, dword ptr [rax] ; mov eax, 0x15 ; syscall
0x0000000000486bdf : add eax, dword ptr [rax] ; mov edx, 0x21c ; call 0x402e19
0x000000000048b34c : add eax, dword ptr [rax] ; mov qword ptr [rbp - 0x78], rax ; mov eax, 0x15 ; syscall
0x000000000045a1cf : add eax, dword ptr [rax] ; mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x000000000048643b : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rcx + r12*4] ; add rax, rcx ; jmp rax
0x0000000000486d63 : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rdi + r12*4] ; add rax, rdi ; jmp rax
0x0000000000449430 : add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000044ee9a : add eax, dword ptr [rax] ; xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x44ee8e
0x00000000004875ac : add eax, dword ptr [rbp - 0xb8] ; call rax
0x0000000000491970 : add eax, dword ptr [rbx - 0x57cfe1e] ; add dword ptr [rbp + 0x19], eax ; rol byte ptr [rcx - 0x7d], cl ; ret 0x4502
0x00000000004d0cb1 : add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004008da : add eax, dword ptr [rcx + 0xf] ; xchg eax, esp ; rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x0000000000447a1e : add eax, dword ptr [rcx + rcx*8 + 0x31c3ed75] ; rol bl, 0x48 ; mov eax, edi ; ret
0x000000000047fd5a : add eax, dword ptr [rcx + rdx] ; ret
0x0000000000455d60 : add eax, dword ptr [rcx - 0x77] ; retf
0x00000000004c9d72 : add eax, dword ptr [rdi + 0xe] ; and byte ptr [rdx], al ; imul ecx, dword ptr [rsi], 0x18 ; ret
0x00000000004a2613 : add eax, dword ptr [rdx + 8] ; call rax
0x00000000004d0ce5 : add eax, dword ptr [rdx] ; cld ; ret
0x00000000004d0d19 : add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004cea4a : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x0000000000486626 : add eax, dword ptr [rsi] ; call rax
0x00000000004a52f0 : add eax, dword ptr [rsi] ; mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x00000000004a06ff : add eax, dword ptr cs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004790a8 : add eax, eax ; cmp eax, r9d ; jg 0x4790cb ; add eax, edi ; mov rdx, r8 ; jmp 0x47908a
0x00000000004a66c6 : add eax, eax ; jmp rax
0x00000000004034d4 : add eax, ebp ; jmp rax
0x0000000000481d48 : add eax, ebp ; ret 0xf9ed
0x00000000004a2d00 : add eax, ebp ; retf 0xfff3
0x0000000000486947 : add eax, ebx ; call rax
0x000000000044ef5c : add eax, ebx ; jmp rax
0x0000000000441ae8 : add eax, ecx ; add rax, rdi ; vzeroupper ; ret
0x00000000004787ab : add eax, ecx ; jmp rax
0x000000000042c499 : add eax, ecx ; ret
0x000000000047ec6d : add eax, ecx ; sub rax, rdx ; shr rax, 2 ; vzeroupper ; ret
0x0000000000441e4d : add eax, ecx ; sub rax, rdx ; vzeroupper ; ret
0x000000000042c9c6 : add eax, ecx ; vzeroupper ; ret
0x000000000042c496 : add eax, edi ; add rax, rcx ; ret
0x0000000000441e4a : add eax, edi ; add rax, rcx ; sub rax, rdx ; vzeroupper ; ret
0x000000000042c9c3 : add eax, edi ; add rax, rcx ; vzeroupper ; ret
0x00000000004afd9d : add eax, edi ; inc dword ptr [rax - 0x2f0007fe] ; add edi, eax ; jmp qword ptr [rax]
0x0000000000478ddb : add eax, edi ; jmp rax
0x00000000004790af : add eax, edi ; mov rdx, r8 ; jmp 0x479083
0x000000000042c6c4 : add eax, edi ; ret
0x00000000004a0bb0 : add eax, edi ; sub rax, r8 ; ret
0x000000000047ed25 : add eax, edi ; sub rax, rdx ; shr rax, 2 ; vzeroupper ; ret
0x0000000000441f05 : add eax, edi ; sub rax, rdx ; vzeroupper ; ret
0x0000000000447eaa : add eax, edi ; sub rax, rsi ; ret
0x000000000042cb3a : add eax, edi ; vzeroupper ; ret
0x0000000000400d69 : add eax, edx ; jmp rax
0x0000000000441df6 : add eax, edx ; sub rax, rdi ; ret
0x000000000047e87b : add eax, edx ; sub rax, rdi ; shr rax, 2 ; ret
0x0000000000489516 : add eax, esi ; inc dword ptr [r9 + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004493dc : add eax, esi ; jmp rax
0x00000000004196dd : add eax, esi ; mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x00000000004a793d : add eax, esp ; jmp rax
0x0000000000464ac8 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000419a7f : add ebp, dword ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004c3f17 : add ebp, ebp ; retf
0x0000000000486622 : add ebx, 0x18 ; add rax, qword ptr [r14] ; call rax
0x00000000004a5409 : add ebx, 8 ; mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x00000000004a5cea : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000004a3f20 : add ebx, dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x0000000000417df1 : add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004d0cd6 : add ebx, dword ptr [rbx + 3] ; ret
0x000000000044fb2f : add ebx, dword ptr [rbx - 0x2d] ; loopne 0x44fb98 ; pop r12 ; ret
0x000000000044daad : add ebx, eax ; nop ; cmp rcx, qword ptr [rax + 0x10] ; jae 0x44daaa ; ret
0x0000000000495a31 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000042d2ab : add ebx, eax ; nop dword ptr [rax] ; ret
0x0000000000436bb3 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000448fe7 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x448fdc ; ret
0x0000000000443855 : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x0000000000458d8d : add ecx, dword ptr [rax + 0x39] ; ret
0x0000000000456e3d : add ecx, dword ptr [rax + 0x39] ; retf
0x000000000040f38e : add ecx, dword ptr [rax + 1] ; fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000048cb38 : add ecx, dword ptr [rax - 0x73] ; lodsq rax, qword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000498026 : add ecx, dword ptr [rax - 0x75] ; sbb byte ptr [r9], sil ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000452bea : add ecx, dword ptr [rax - 0x77] ; and al, 0x50 ; call 0x44eec8
0x0000000000443859 : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x0000000000488a77 : add ecx, dword ptr [rax - 0x77] ; mov rax, rcx ; ret
0x00000000004517a3 : add ecx, dword ptr [rax - 0x77] ; or byte ptr [r15], 0x8e ; ret 1
0x00000000004359d4 : add ecx, dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x00000000004a73ff : add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000413387 : add ecx, dword ptr [rax - 9] ; ror byte ptr [rax - 0x7d], cl ; loop 0x413395 ; add rdx, rcx ; jmp 0x4133ab
0x000000000042f7f6 : add ecx, dword ptr [rax] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000040fd81 : add ecx, dword ptr [rbp + rcx*4 + 0x64] ; ret
0x000000000048b03a : add ecx, dword ptr [rbp - 0x77] ; dec byte ptr [rax - 0x7d] ; ret
0x0000000000496500 : add ecx, dword ptr [rbp - 0x77] ; ret 0x8d48
0x0000000000436922 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004d0ca2 : add ecx, dword ptr [rbx + 3] ; ret
0x0000000000445b04 : add ecx, dword ptr [rcx + 0x357890f] ; lea rax, [rdi + 6] ; ret
0x00000000004454d4 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x00000000004111b5 : add ecx, dword ptr [rcx + rcx*4 + 0x42] ; or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x0000000000443856 : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x0000000000456e20 : add ecx, dword ptr [rcx - 0x77] ; add byte ptr [r15], r9b ; mov dh, 0x78 ; add cl, byte ptr [rax + 0x39] ; retf
0x000000000044a0ef : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x000000000044a14d : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x00000000004c8a21 : add ecx, dword ptr [rsi + rcx - 0x50] ; add al, byte ptr [rdx] ; ret 0xb00e
0x00000000004678f9 : add ecx, eax ; mov eax, r9d ; ret
0x00000000004553c5 : add ecx, ebp ; retf 0xfff6
0x000000000042ebbb : add ecx, ebx ; jmp r9
0x000000000042d552 : add ecx, ebx ; jmp rcx
0x0000000000449404 : add ecx, esi ; jmp rcx
0x000000000044d902 : add edi, 0x308 ; mov esi, 0x80 ; syscall
0x00000000004a994e : add edi, dword ptr [rax + 4] ; jne 0x4a9979 ; ret
0x0000000000484270 : add edi, dword ptr [rsp + 8] ; call 0x4004b6
0x00000000004afda5 : add edi, eax ; jmp qword ptr [rax]
0x000000000045bde4 : add edi, ebx ; jmp rdi
0x000000000042ebb8 : add edi, edx ; add r9, r11 ; jmp r9
0x000000000040e86c : add edi, edx ; jmp rdi
0x00000000004cbfa1 : add edi, esi ; call qword ptr [rax]
0x00000000004c7aad : add edi, esi ; push rax ; add bh, dh ; call rax
0x0000000000413385 : add edx, 3 ; not rdx ; and rdx, 0xfffffffffffffffc ; add rdx, rcx ; jmp 0x4133ad
0x00000000004a2ac4 : add edx, eax ; jmp 0x4a2ad2
0x0000000000496762 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x0000000000413390 : add edx, ecx ; jmp 0x4133a2
0x000000000040e583 : add edx, edi ; jmp rdx
0x000000000046a898 : add edx, esp ; call qword ptr [r10 + rax*8]
0x000000000048b1c4 : add esi, 1 ; test dl, dl ; jne 0x48b1a6 ; movsx eax, cl ; neg eax ; ret
0x0000000000403a59 : add esi, dword ptr [rbp - 0x68] ; call 0x4004b5
0x000000000048413a : add esi, dword ptr [rbx + rdx*8 - 0xa] ; adc dword ptr [rip + 0x20000003], 0x75 ; retf 0x5f6
0x0000000000455d5a : add esi, dword ptr [rdi + 0xf] ; mov dh, 0x4e ; add eax, dword ptr [rcx - 0x77] ; retf
0x000000000045a196 : add esi, dword ptr [rdi + rax - 0xd] ; ret
0x000000000045b8e5 : add esi, eax ; jmp rsi
0x0000000000436ad3 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000448205 : add esi, ebx ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044a8dc : add esi, ebx ; ret
0x0000000000420000 : add esi, ebx ; stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004c7ca9 : add esi, edi ; call rax
0x00000000004c7ac9 : add esi, edi ; call rcx
0x000000000044950e : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x000000000042ebb5 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000004130ae : add esp, 0x10 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045a326 : add esp, 0x10 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000417921 : add esp, 0x10 ; pop rbx ; jmp rax
0x0000000000414f62 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000411991 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044af0f : add esp, 0x10 ; pop rbx ; ret
0x0000000000413095 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045a3a3 : add esp, 0x10 ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000447dad : add esp, 0x100 ; sub rax, rdx ; ret
0x000000000048c958 : add esp, 0x110 ; pop rbx ; ret
0x000000000040eefe : add esp, 0x118 ; ret
0x0000000000467860 : add esp, 0x14 ; jmp 0x465dd7
0x000000000045c93a : add esp, 0x148 ; ret
0x00000000004789b4 : add esp, 0x18 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047c504 : add esp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041b439 : add esp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000004206eb : add esp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000420d06 : add esp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x000000000044ec7a : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040136e : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000045c6f2 : add esp, 0x18 ; ret
0x0000000000420739 : add esp, 0x18 ; xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000004a8764 : add esp, 0x188 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004a85a3 : add esp, 0x198 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044fb0f : add esp, 0x1d0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000422b60 : add esp, 0x20 ; call 0x411339
0x0000000000422b60 : add esp, 0x20 ; call 0x41133a
0x000000000041842d : add esp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x000000000041800d : add esp, 0x20 ; pop rbx ; jmp rax
0x0000000000418466 : add esp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x000000000048c9d9 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000417d7f : add esp, 0x20 ; pop rbx ; ret
0x00000000004a8c54 : add esp, 0x278 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000004a8c61 : add esp, 0x278 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000449f32 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000495755 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000044a8aa : add esp, 0x28 ; ret
0x0000000000415e64 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000451038 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000497c1f : add esp, 0x30 ; pop rbx ; ret
0x00000000004a64b6 : add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000040edb4 : add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041742e : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000047fc11 : add esp, 0x38 ; ret
0x00000000004a3d4c : add esp, 0x40 ; pop rbx ; ret
0x000000000048beec : add esp, 0x48 ; jmp qword ptr [rax]
0x000000000044a582 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000048c6ec : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004a3e33 : add esp, 0x50 ; pop rbx ; ret
0x000000000048be7a : add esp, 0x58 ; jmp qword ptr [rax]
0x000000000044aada : add esp, 0x58 ; ret
0x000000000044a9cc : add esp, 0x68 ; ret
0x000000000047dfe8 : add esp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047de34 : add esp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044ad5f : add esp, 0x78 ; ret
0x0000000000413507 : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x00000000004679a7 : add esp, 0x80 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000047f6f3 : add esp, 0x80 ; pop rbx ; ret
0x0000000000416cf8 : add esp, 0x80 ; ret
0x000000000045e433 : add esp, 0x80 ; xor eax, eax ; add rsp, 8 ; ret
0x000000000040ff9f : add esp, 0x80 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044d64d : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x00000000004020b2 : add esp, 0x88 ; pop rbx ; ret
0x000000000040282f : add esp, 0x98 ; ret
0x00000000004796e7 : add esp, 0xa0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004154ff : add esp, 0xa8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047f813 : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x00000000004595a6 : add esp, 0xb8 ; pop rbx ; pop r12 ; ret
0x0000000000415675 : add esp, 0xb8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004a0e11 : add esp, 0xc8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044cb66 : add esp, 0xd0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410ef7 : add esp, 0xd0 ; pop rbx ; ret
0x0000000000411086 : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000410a84 : add esp, 0xd8 ; ret
0x0000000000464ac5 : add esp, 8 ; add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000412e34 : add esp, 8 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00000000004a219a : add esp, 8 ; mov eax, 1 ; pop rbx ; pop rbp ; ret
0x00000000004a5c83 : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000412d9f : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000411875 : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000489f4b : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000469f87 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041141e : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000479881 : add esp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004889a9 : add esp, 8 ; mov edx, 1 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000044bf0a : add esp, 8 ; mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004239cb : add esp, 8 ; mov rax, r8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044c520 : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000041168f : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000415a9e : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044b72c : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000047f657 : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004179d9 : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000004a3c89 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x00000000004149e4 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000402ec3 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040042b : add esp, 8 ; ret
0x0000000000415ab8 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000424b89 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004c560b : add esp, dword ptr [rbx + 0x74] ; or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf 0xbb9a
0x000000000045714a : add qword ptr [rax + 0x39], rcx ; retf
0x000000000049f310 : add qword ptr [rax], r8 ; mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000049f075 : add qword ptr [rax], r8 ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000049f041 : add qword ptr [rax], r8 ; mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000041fd1c : add qword ptr [rax], rax ; add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000046a21e : add qword ptr [rcx + 0x26e9060d], rcx ; add byte ptr [rax + 0x63], cl ; retf 0x8948
0x0000000000455d1e : add qword ptr [rcx - 0x77], r8 ; retf
0x000000000047141a : add qword ptr [rcx - 0x77], rcx ; or byte ptr [rdi + r9 - 0x4a], r8b ; sub byte ptr [rax - 0x7d], cl ; ret 0x4101
0x0000000000436bb2 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x000000000046785f : add r12, 0x14 ; jmp 0x465dd8
0x0000000000436b42 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000436ad2 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000049ed30 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042c0a4 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000455d5f : add r8, qword ptr [rcx - 0x77] ; retf
0x000000000042ebba : add r9, r11 ; jmp r9
0x00000000004c53c9 : add r9b, bl ; retf 0xea91
0x0000000000458d6e : add r9b, byte ptr [rax + 0x39] ; ret
0x0000000000458d8c : add r9d, dword ptr [rax + 0x39] ; ret
0x00000000004678f8 : add r9d, eax ; mov eax, r9d ; ret
0x00000000004a04e2 : add rax, -0x7cb80000 ; ret 0xe910
0x000000000042cb49 : add rax, 0x20 ; add rax, rdi ; vzeroupper ; ret
0x000000000042cb69 : add rax, 0x40 ; add rax, rdi ; vzeroupper ; ret
0x000000000042cb89 : add rax, 0x60 ; add rax, rdi ; vzeroupper ; ret
0x000000000047eb80 : add rax, 1 ; ret
0x000000000047eb77 : add rax, 2 ; ret
0x000000000047eb90 : add rax, 3 ; ret
0x000000000045c608 : add rax, qword ptr [0] ; ret
0x0000000000486625 : add rax, qword ptr [r14] ; call rax
0x00000000004a52ef : add rax, qword ptr [r14] ; mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x00000000004a89eb : add rax, qword ptr [r8 + 0xd0] ; add rsp, 0x18 ; ret
0x00000000004875ab : add rax, qword ptr [rbp - 0xb8] ; call rax
0x00000000004a2612 : add rax, qword ptr [rdx + 8] ; call rax
0x000000000045c607 : add rax, qword ptr fs:[0] ; ret
0x0000000000486946 : add rax, r11 ; call rax
0x00000000004a793c : add rax, r12 ; jmp rax
0x00000000004034d3 : add rax, r13 ; jmp rax
0x00000000004a823d : add rax, r14 ; jmp rax
0x00000000004a68eb : add rax, r15 ; jmp rax
0x00000000004a66c5 : add rax, r8 ; jmp rax
0x00000000004a7e75 : add rax, r9 ; jmp rax
0x000000000044efd3 : add rax, rbp ; jmp rax
0x000000000044ef5b : add rax, rbx ; jmp rax
0x0000000000441ae7 : add rax, rcx ; add rax, rdi ; vzeroupper ; ret
0x00000000004787aa : add rax, rcx ; jmp rax
0x000000000042c498 : add rax, rcx ; ret
0x0000000000441e4c : add rax, rcx ; sub rax, rdx ; vzeroupper ; ret
0x000000000042c9c5 : add rax, rcx ; vzeroupper ; ret
0x000000000042c495 : add rax, rdi ; add rax, rcx ; ret
0x0000000000441e49 : add rax, rdi ; add rax, rcx ; sub rax, rdx ; vzeroupper ; ret
0x000000000042c9c2 : add rax, rdi ; add rax, rcx ; vzeroupper ; ret
0x0000000000478dda : add rax, rdi ; jmp rax
0x000000000042c6c3 : add rax, rdi ; ret
0x00000000004a0baf : add rax, rdi ; sub rax, r8 ; ret
0x0000000000441f04 : add rax, rdi ; sub rax, rdx ; vzeroupper ; ret
0x0000000000447ea9 : add rax, rdi ; sub rax, rsi ; ret
0x000000000042cb39 : add rax, rdi ; vzeroupper ; ret
0x0000000000400d68 : add rax, rdx ; jmp rax
0x0000000000441df5 : add rax, rdx ; sub rax, rdi ; ret
0x000000000047e87a : add rax, rdx ; sub rax, rdi ; shr rax, 2 ; ret
0x00000000004493db : add rax, rsi ; jmp rax
0x00000000004196dc : add rax, rsi ; mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x0000000000486621 : add rbx, 0x18 ; add rax, qword ptr [r14] ; call rax
0x00000000004a5408 : add rbx, 8 ; mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000448fe6 : add rcx, 0x40 ; cmp rdx, rcx ; jne 0x448fdd ; ret
0x0000000000457169 : add rcx, qword ptr [rax + 0x39] ; retf
0x0000000000456e1f : add rcx, qword ptr [rcx - 0x77] ; add byte ptr [r15], r9b ; mov dh, 0x78 ; add cl, byte ptr [rax + 0x39] ; retf
0x000000000042d551 : add rcx, r11 ; jmp rcx
0x0000000000449403 : add rcx, rsi ; jmp rcx
0x000000000044d901 : add rdi, 0x308 ; mov esi, 0x80 ; syscall
0x000000000048426f : add rdi, qword ptr [rsp + 8] ; call 0x4004b7
0x000000000040e86b : add rdi, r10 ; jmp rdi
0x000000000045bde3 : add rdi, r11 ; jmp rdi
0x000000000042ebb7 : add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000046a897 : add rdx, r12 ; call qword ptr [r10 + rax*8]
0x0000000000496761 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x00000000004a2ac3 : add rdx, rax ; jmp 0x4a2ad3
0x000000000041338f : add rdx, rcx ; jmp 0x4133a3
0x000000000040e582 : add rdx, rdi ; jmp rdx
0x0000000000403a58 : add rsi, qword ptr [rbp - 0x68] ; call 0x4004b6
0x000000000045b8e4 : add rsi, r8 ; jmp rsi
0x00000000004c7ca8 : add rsi, rdi ; call rax
0x000000000042ebb4 : add rsi, rdx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000045a325 : add rsp, 0x10 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000417920 : add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000414f61 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000411990 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044af0e : add rsp, 0x10 ; pop rbx ; ret
0x0000000000413094 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000447dac : add rsp, 0x100 ; sub rax, rdx ; ret
0x000000000048c957 : add rsp, 0x110 ; pop rbx ; ret
0x000000000040eefd : add rsp, 0x118 ; ret
0x000000000045c939 : add rsp, 0x148 ; ret
0x000000000041b438 : add rsp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000004206ea : add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000420d05 : add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x000000000044ec79 : add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040136d : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000045c6f1 : add rsp, 0x18 ; ret
0x0000000000420738 : add rsp, 0x18 ; xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000044fb0e : add rsp, 0x1d0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000422b5f : add rsp, 0x20 ; call 0x41133a
0x0000000000422b5f : add rsp, 0x20 ; call 0x41133b
0x000000000041842c : add rsp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x000000000041800c : add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000418465 : add rsp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x000000000048c9d8 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000417d7e : add rsp, 0x20 ; pop rbx ; ret
0x00000000004a8c53 : add rsp, 0x278 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000004a8c60 : add rsp, 0x278 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000449f31 : add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000495754 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000044a8a9 : add rsp, 0x28 ; ret
0x0000000000415e63 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000451037 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000497c1e : add rsp, 0x30 ; pop rbx ; ret
0x00000000004a64b5 : add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000040edb3 : add rsp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041742d : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000047fc10 : add rsp, 0x38 ; ret
0x00000000004a3d4b : add rsp, 0x40 ; pop rbx ; ret
0x000000000048beeb : add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000044a581 : add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000048c6eb : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004a3e32 : add rsp, 0x50 ; pop rbx ; ret
0x000000000048be79 : add rsp, 0x58 ; jmp qword ptr [rax]
0x000000000044aad9 : add rsp, 0x58 ; ret
0x000000000044a9cb : add rsp, 0x68 ; ret
0x000000000047dfe7 : add rsp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047de33 : add rsp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044ad5e : add rsp, 0x78 ; ret
0x0000000000413506 : add rsp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x000000000047f6f2 : add rsp, 0x80 ; pop rbx ; ret
0x0000000000416cf7 : add rsp, 0x80 ; ret
0x000000000044d64c : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x00000000004020b1 : add rsp, 0x88 ; pop rbx ; ret
0x000000000040282e : add rsp, 0x98 ; ret
0x00000000004796e6 : add rsp, 0xa0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047f812 : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x00000000004595a5 : add rsp, 0xb8 ; pop rbx ; pop r12 ; ret
0x000000000044cb65 : add rsp, 0xd0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410ef6 : add rsp, 0xd0 ; pop rbx ; ret
0x0000000000411085 : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000410a83 : add rsp, 0xd8 ; ret
0x0000000000464ac4 : add rsp, 8 ; add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000412e33 : add rsp, 8 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00000000004a2199 : add rsp, 8 ; mov eax, 1 ; pop rbx ; pop rbp ; ret
0x00000000004a5c82 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000412d9e : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000411874 : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000489f4a : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000469f86 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041141d : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000479880 : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044c51f : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000044b72b : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000004179d8 : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000004a3c88 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x00000000004149e3 : add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000402ec2 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040042a : add rsp, 8 ; ret
0x0000000000415ab7 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000424b88 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004259f7 : add word ptr [rax], ax ; and ch, 2 ; cmovne rax, rdx ; ret
0x00000000004a0cca : add word ptr [rdx + rax*2], 1 ; ret
0x000000000048bddd : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004986f5 : and al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000048a03a : and al, 0 ; add dword ptr [rbx - 0x3d], ebx ; nop ; mov eax, 1 ; pop rbx ; ret
0x0000000000497d11 : and al, 0 ; add rsp, 8 ; ret
0x000000000049814a : and al, 0 ; mov qword ptr [rax], rdx ; add rsp, 8 ; ret
0x0000000000497d25 : and al, 0 ; mov qword ptr [rip + 0x24247a], rax ; ret
0x0000000000497d2c : and al, 0 ; ret
0x00000000004a8b28 : and al, 0x10 ; add rsp, 0x28 ; ret
0x00000000004aa6e0 : and al, 0x10 ; call r14
0x000000000044bb48 : and al, 0x10 ; call rax
0x000000000048c91b : and al, 0x10 ; call rdx
0x000000000047fa2c : and al, 0x10 ; mov edi, dword ptr [rsp + 0x18] ; mov eax, 0x101 ; syscall
0x000000000040245c : and al, 0x10 ; mov edi, dword ptr [rsp + 0xc] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000041dcbc : and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000040a858 : and al, 0x10 ; mov qword ptr [rsp + 8], rcx ; call 0x407369
0x000000000040a857 : and al, 0x10 ; mov qword ptr [rsp + 8], rcx ; call 0x40736a
0x0000000000418038 : and al, 0x10 ; mov rdi, qword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000047c062 : and al, 0x10 ; mov rdi, r12 ; call rbx
0x00000000004aa4c8 : and al, 0x10 ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000004c9660 : and al, 0x17 ; add byte ptr [rax], al ; cld ; lodsb al, byte ptr [rsi] ; hlt ; jmp rdx
0x000000000048426d : and al, 0x18 ; add rdi, qword ptr [rsp + 8] ; call 0x4004b9
0x0000000000402465 : and al, 0x18 ; call rax
0x000000000047fa30 : and al, 0x18 ; mov eax, 0x101 ; syscall
0x000000000044ad70 : and al, 0x18 ; mov esi, 0x10 ; mov eax, 0x48 ; syscall
0x0000000000450248 : and al, 0x18 ; mov r9, r13 ; call rbx
0x000000000047bf7d : and al, 0x18 ; mov rdi, r12 ; call rbx
0x000000000047e58f : and al, 0x18 ; mov rdi, rbp ; mov r9, r14 ; call rbx
0x000000000048c916 : and al, 0x18 ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x0000000000452927 : and al, 0x20 ; call r15
0x0000000000454b5e : and al, 0x20 ; call rax
0x000000000047e250 : and al, 0x20 ; call rbx
0x000000000044ae46 : and al, 0x20 ; je 0x44ae79 ; mov eax, 0x48 ; syscall
0x000000000044ae45 : and al, 0x20 ; je 0x44ae7a ; mov eax, 0x48 ; syscall
0x000000000041dcb7 : and al, 0x20 ; mov qword ptr [rsp + 0x10], r11 ; mov qword ptr [rsp + 8], rax ; call rcx
0x00000000004527f2 : and al, 0x20 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000045459a : and al, 0x20 ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000497d24 : and al, 0x24 ; add byte ptr [rax - 0x77], cl ; add eax, 0x24247a ; ret
0x00000000004c4144 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000462349 : and al, 0x27 ; add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x00000000004206e8 : and al, 0x28 ; add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000420d03 : and al, 0x28 ; add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x000000000047e07e : and al, 0x28 ; call r12
0x0000000000452922 : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x00000000004527ed : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000423bb3 : and al, 0x28 ; mov rdi, rbp ; call rax
0x0000000000452f01 : and al, 0x28 ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00000000004578de : and al, 0x28 ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000453203 : and al, 0x30 ; call r14
0x00000000004533db : and al, 0x30 ; call rbx
0x000000000047e43e : and al, 0x30 ; mov rdi, rbp ; call rbx
0x000000000047d2d3 : and al, 0x31 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000045465a : and al, 0x38 ; add byte ptr [rsp + rsi - 0xa], dh ; ret
0x00000000004536c5 : and al, 0x38 ; call r12
0x0000000000453cfd : and al, 0x38 ; call r14
0x0000000000456cc1 : and al, 0x38 ; call r15
0x0000000000452f0b : and al, 0x38 ; call rbx
0x000000000047dee8 : and al, 0x38 ; lea rcx, [rax + 1] ; call rbx
0x0000000000452c17 : and al, 0x38 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000048bee4 : and al, 0x38 ; mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000048be72 : and al, 0x38 ; mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x58 ; jmp qword ptr [rax]
0x00000000004531fe : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x00000000004533d6 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000468d6c : and al, 0x40 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000458bde : and al, 0x40 ; add byte ptr [rdx + rdi*2 - 0xa], dh ; ret
0x000000000045799e : and al, 0x40 ; add byte ptr [rsi + rsi*2 - 0xa], dh ; ret
0x000000000048bee9 : and al, 0x40 ; add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000048be77 : and al, 0x40 ; add rsp, 0x58 ; jmp qword ptr [rax]
0x000000000045513c : and al, 0x40 ; call r15
0x00000000004578e8 : and al, 0x40 ; call rbx
0x0000000000454b59 : and al, 0x40 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x00000000004536c0 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x0000000000453cf8 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000456cbc : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000452f06 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000452c12 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000004533d1 : and al, 0x40 ; mov rsi, qword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000004a2611 : and al, 0x48 ; add eax, dword ptr [rdx + 8] ; call rax
0x0000000000417948 : and al, 0x48 ; add esp, 0x10 ; pop rbx ; jmp rax
0x00000000004a6598 : and al, 0x48 ; add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x00000000004a629c : and al, 0x48 ; add esp, 0x38 ; ret
0x0000000000414624 : and al, 0x48 ; mov edi, ebx ; call rax
0x00000000004a95ce : and al, 0x48 ; mov edx, dword ptr [rbp] ; call r12
0x0000000000455137 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x00000000004578e3 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000454b54 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000047dee4 : and al, 0x4c ; lea ecx, [rsp + 0x38] ; lea rcx, [rax + 1] ; call rbx
0x00000000004a957f : and al, 0x4c ; lea esi, [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x00000000004a54e7 : and al, 0x4c ; mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x00000000004a5495 : and al, 0x4c ; mov esi, esp ; mov edi, ebp ; call rax
0x0000000000452bee : and al, 0x50 ; call 0x44eec4
0x0000000000452bed : and al, 0x50 ; call 0x44eec5
0x0000000000483615 : and al, 0x5f ; add al, ch ; retf
0x0000000000405c61 : and al, 0x60 ; jmp 0x4056dc
0x0000000000405c60 : and al, 0x60 ; jmp 0x4056dd
0x00000000004cda5c : and al, 0x65 ; clc ; call rcx
0x00000000004215cb : and al, 0x68 ; call rax
0x00000000004b00fc : and al, 0x6b ; clc ; push qword ptr [rdx + rbp*2 + 0x6a44fff8] ; clc ; call rsp
0x00000000004cec60 : and al, 0x6d ; add byte ptr [rax], al ; loop 0x4cec67 ; jmp qword ptr [rax]
0x0000000000405332 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; imul al ; ret 0xbfac
0x000000000046543e : and al, 0x83 ; ret
0x00000000004183ab : and al, 0x83 ; retf 0x4c01
0x0000000000458d49 : and al, 0x84 ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], r9d ; ret
0x0000000000458d67 : and al, 0x85 ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r9b, byte ptr [rax + 0x39] ; ret
0x0000000000458d85 : and al, 0x86 ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [rax + 0x39] ; ret
0x000000000045929d : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041a4b3 : and al, 0x89 ; adc byte ptr [r11 + 0x5d], r11b ; ret
0x0000000000405afc : and al, 0x8c ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x00000000004b05f4 : and al, 0x92 ; clc ; push qword ptr [rcx + rdx*4 - 0x6ebb0008] ; clc ; call rsp
0x000000000045311e : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004ad92b : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000004ad08b : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000453bab : and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000004535a0 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000459373 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x0000000000425350 : and al, 0xb1 ; std ; dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x00000000004a8dbe : and al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x00000000004a870b : and al, 0xbf ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x000000000044af0c : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000483d0b : and al, 0xc ; jmp 0x483cbf
0x0000000000483d0a : and al, 0xc ; jmp 0x483cc0
0x000000000044ae8f : and al, 0xc ; jne 0x44ae60 ; neg eax ; jmp 0x44ae60
0x000000000044ae8e : and al, 0xc ; jne 0x44ae61 ; neg eax ; jmp 0x44ae61
0x000000000044adb3 : and al, 0xc ; mov eax, 0x48 ; syscall
0x0000000000417932 : and al, 0xc ; mov qword ptr [rsp], rdi ; call 0x413bc8
0x0000000000402460 : and al, 0xc ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000417943 : and al, 0xc ; mov rdi, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004a95c9 : and al, 0xc ; mov rdi, qword ptr [rsp] ; mov rdx, qword ptr [rbp] ; call r12
0x000000000042efc8 : and al, 0xc ; or byte ptr [rax], al ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000484020 : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x00000000004c8c60 : and al, 0xd ; add byte ptr [rax], al ; pushfq ; je 0x4c8c62 ; call qword ptr [rdx]
0x0000000000417f0c : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0x8c20
0x00000000004a6698 : and al, 0xd8 ; ret
0x0000000000497980 : and al, 0xe8 ; ret
0x000000000048c907 : and al, 0xe8 ; std ; cld ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x0000000000419523 : and al, 0xe9 ; ret 0xfffd
0x000000000049797c : and al, 0xec ; fld xword ptr [rsp - 0x18] ; ret
0x00000000004ca44c : and al, 0xf6 ; hlt ; call qword ptr [rdi]
0x0000000000453fbe : and al, 0xf6 ; ret
0x0000000000497931 : and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000497937 : and al, 0xf8 ; ret
0x00000000004978eb : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000004978f1 : and al, 0xfc ; ret
0x00000000004a127b : and al, 0xff ; xor ebx, ebx ; lea rdx, [rax + 8] ; lea rcx, [rdx + rcx*8] ; jmp 0x4a129f
0x00000000004a127a : and al, 0xff ; xor ebx, ebx ; lea rdx, [rax + 8] ; lea rcx, [rdx + rcx*8] ; jmp 0x4a12a0
0x000000000042d659 : and al, 8 ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000044ab7c : and al, 8 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041803d : and al, 8 ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000418463 : and al, 8 ; add rsp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000484272 : and al, 8 ; call 0x4004b4
0x000000000040a85d : and al, 8 ; call 0x407364
0x000000000040a85c : and al, 8 ; call 0x407365
0x000000000041e2d6 : and al, 8 ; call 0x41a574
0x00000000004a3527 : and al, 8 ; call 4
0x000000000040f22f : and al, 8 ; call rax
0x000000000041dcc1 : and al, 8 ; call rcx
0x00000000004aa1cc : and al, 8 ; jmp 0x4aa1e6
0x000000000044ae73 : and al, 8 ; mov esi, 0x10 ; mov eax, 0x48 ; syscall
0x0000000000452be6 : and al, 8 ; mov rax, qword ptr [rbx] ; mov qword ptr [rsp + 0x50], rax ; call 0x44eecc
0x000000000044bb43 : and al, 8 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000004123c0 : and al, 8 ; mov rdi, r15 ; call rax
0x00000000004aff05 : and al, bh ; inc dword ptr [rax + 0x22] ; clc ; call qword ptr [rax - 0x1f0007dd]
0x00000000004abf0c : and al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000049889e : and al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004aad84 : and al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004ab6b3 : and al, byte ptr [rax] ; call 0xb
0x00000000004ab9e3 : and al, byte ptr [rax] ; jne 0x4ab9cd ; pop rbx ; ret
0x00000000004aad76 : and al, byte ptr [rax] ; test eax, eax ; je 0x4aad87 ; ret
0x00000000004aae86 : and al, byte ptr [rax] ; test eax, eax ; je 0x4aae97 ; ret
0x000000000044205a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x00000000004681e0 : and al, ch ; retf 0x2f8
0x000000000043146c : and bh, 7 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000046afb1 : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004aff09 : and bh, al ; call qword ptr [rax - 0x1f0007dd]
0x0000000000454b5f : and bh, bh ; rol byte ptr [rbx - 0x76befb08], 1 ; ret 0x415f
0x000000000040e57a : and bh, ch ; or dword ptr [rax], eax ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x00000000004c8710 : and bl, ah ; call rax
0x00000000004ce2c0 : and bl, ah ; clc ; call qword ptr [rdi]
0x0000000000478e1b : and bl, ch ; retf 0x9066
0x0000000000412659 : and byte ptr [r11 + rcx*4 + 0x75], r9b ; sbb byte ptr [rax - 0x77], cl ; retf
0x0000000000412689 : and byte ptr [r8 + 1], r9b ; ret
0x000000000045bfe3 : and byte ptr [r8 - 0x77], r9b ; sti ; test rax, rax ; je 0x45bff9 ; call rax
0x000000000041d18f : and byte ptr [r8 - 0x7d], r9b ; retf
0x0000000000417860 : and byte ptr [r9 + 0x48c03113], cl ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004125ee : and byte ptr [r9 - 0x77], r9b ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x000000000042c9d6 : and byte ptr [rax + 0x29], cl ; retf 0x860f
0x00000000004419fa : and byte ptr [rax + 0x3a], al ; xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x0000000000441f17 : and byte ptr [rax + 1], cl ; clc ; sub rax, rdx ; vzeroupper ; ret
0x000000000042cb4c : and byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x000000000041268a : and byte ptr [rax + 1], cl ; ret
0x0000000000402201 : and byte ptr [rax + 1], cl ; ret 0xb70f
0x0000000000467e6e : and byte ptr [rax + 9], cl ; ret 0xff83
0x0000000000441cc8 : and byte ptr [rax + 9], cl ; retf 0x8948
0x0000000000441ded : and byte ptr [rax + 9], cl ; retf 0xf48
0x000000000047d96e : and byte ptr [rax + 9], cl ; retf 0xf4c
0x00000000004b03a8 : and byte ptr [rax + rdi*8 - 1], bl ; nop ; pop rbx ; clc ; jmp qword ptr [rax]
0x000000000044cada : and byte ptr [rax - 0x39], cl ; ret
0x00000000004b09d0 : and byte ptr [rax - 0x4dcf0008], dh ; clc ; inc dword ptr [rax - 0x4c] ; clc ; jmp rax
0x00000000004527f3 : and byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x000000000045459b : and byte ptr [rax - 0x75], cl ; je 0x4545cf ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000457060 : and byte ptr [rax - 0x75], cl ; je 0x457095 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000004581d0 : and byte ptr [rax - 0x75], cl ; je 0x458205 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000481588 : and byte ptr [rax - 0x75], cl ; sub byte ptr [rax + 0x39], r9b ; ret 0x870f
0x000000000045bfe4 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x45bff8 ; call rax
0x0000000000451536 : and byte ptr [rax - 0x7d], cl ; ret
0x00000000004a8c06 : and byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004698a4 : and byte ptr [rax - 0x7d], cl ; ret 0xe920
0x000000000041d190 : and byte ptr [rax - 0x7d], cl ; retf
0x0000000000414142 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x00000000004b01cc : and byte ptr [rax - 8], ah ; jmp qword ptr [rax + 0x20fff85f]
0x00000000004b08fc : and byte ptr [rax - 8], ch ; jmp qword ptr [rax + 0x20fff869]
0x00000000004b0950 : and byte ptr [rax - 8], dh ; jmp qword ptr [rax + 0x20fff871]
0x0000000000461b7b : and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x00000000004a8bd9 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004494ea : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000498aee : and byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042da1d : and byte ptr [rax], cl ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000048a620 : and byte ptr [rbp + rcx*4 + 0x43], cl ; adc al, ch ; imul byte ptr [rcx + 1] ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004bfa2c : and byte ptr [rbp - 0x739f0005], cl ; sti ; call qword ptr [rax]
0x00000000004adbec : and byte ptr [rbp - 0x77], cl ; ret
0x00000000004adab7 : and byte ptr [rbp - 0x77], cl ; retf 0x8b49
0x00000000004b08f4 : and byte ptr [rbp - 8], ah ; jmp qword ptr [rax + 0x20fff866]
0x00000000004b0948 : and byte ptr [rbp - 8], ch ; jmp qword ptr [rax + 0x20fff86e]
0x00000000004d22bc : and byte ptr [rbx + 0x1b900000], 0xfd ; jmp qword ptr [rcx]
0x00000000004d0d37 : and byte ptr [rbx + 0x30d4304], al ; add ch, byte ptr [rbp + rcx + 7] ; ret
0x00000000004c5ee8 : and byte ptr [rbx + 0x3d], bh ; retf
0x000000000048c9db : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004d1a5c : and byte ptr [rbx + 0x62d00000], bl ; cld ; jmp qword ptr [rdx]
0x0000000000469b03 : and byte ptr [rbx + rcx*4 + 0x40], cl ; sub cl, ch ; ret 0xffe8
0x000000000041265a : and byte ptr [rbx + rcx*4 + 0x75], cl ; sbb byte ptr [rax - 0x77], cl ; retf
0x00000000004b0904 : and byte ptr [rbx - 8], ch ; jmp qword ptr [rax + 0x20fff86c]
0x00000000004b0958 : and byte ptr [rbx - 8], dh ; jmp qword ptr [rax + 0x20fff874]
0x00000000004ce2bc : and byte ptr [rbx], 0 ; and bl, ah ; clc ; call qword ptr [rdi]
0x000000000044d084 : and byte ptr [rbx], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000045f7a0 : and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000046acde : and byte ptr [rcx + 0x2b], cl ; push rsi ; sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x00000000004020e8 : and byte ptr [rcx + 0x2d7e5d0d], cl ; add byte ptr [rsp + rcx - 0x7f], dh ; retf 0x440
0x0000000000417861 : and byte ptr [rcx + 0x48c03113], cl ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041dcb8 : and byte ptr [rcx + rcx*4 + 0x5c], cl ; and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000497979 : and byte ptr [rcx - 0x2413dbbc], cl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x000000000041842f : and byte ptr [rcx - 0x2dcea42f], cl ; jmp rax
0x00000000004b0480 : and byte ptr [rcx - 0x6f4f0008], dl ; clc ; inc dword ptr [rax - 0x70] ; clc ; call rax
0x000000000048e585 : and byte ptr [rcx - 0x77], cl ; ret
0x00000000004125ef : and byte ptr [rcx - 0x77], cl ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x00000000004b01c4 : and byte ptr [rcx - 8], ah ; jmp qword ptr [rax + 0x20fff860]
0x00000000004b0914 : and byte ptr [rcx - 8], dh ; jmp qword ptr [rax + 0x20fff872]
0x00000000004afe90 : and byte ptr [rcx], dh ; clc ; jmp rax
0x0000000000489864 : and byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret
0x00000000004d2e70 : and byte ptr [rdi - 3], bh ; call qword ptr [rdx]
0x00000000004b0938 : and byte ptr [rdi - 8], ah ; jmp qword ptr [rax + 0x20fff868]
0x00000000004b01a0 : and byte ptr [rdi - 8], ah ; push qword ptr [rax + 0x40fff866] ; clc ; call rax
0x00000000004b01d4 : and byte ptr [rdi - 8], bl ; jmp qword ptr [rax + 0x20fff85e]
0x00000000004b0924 : and byte ptr [rdi - 8], dh ; jmp qword ptr [rax + 0x20fff878]
0x00000000004aff18 : and byte ptr [rdi], 0xf8 ; call rax
0x0000000000462a90 : and byte ptr [rdi], ah ; add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x0000000000448451 : and byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000004110ab : and byte ptr [rdi], cl ; test dword ptr [rsi - 0x77000000], esp ; ret 0xe281
0x0000000000445ea0 : and byte ptr [rdi], cl ; test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00000000004afe5c : and byte ptr [rdi], dh ; clc ; inc dword ptr [rax] ; cmp eax, edi ; call rax
0x0000000000447fb8 : and byte ptr [rdx + 0xa], dh ; vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00000000004c0da8 : and byte ptr [rdx - 4], bl ; jmp qword ptr [rbx]
0x00000000004b01bc : and byte ptr [rdx - 8], ah ; jmp qword ptr [rax + 0x20fff861]
0x00000000004b0940 : and byte ptr [rdx - 8], ch ; jmp qword ptr [rax + 0x20fff86b]
0x00000000004c9d75 : and byte ptr [rdx], al ; imul ecx, dword ptr [rsi], 0x18 ; ret
0x00000000004aff20 : and byte ptr [rdx], ch ; clc ; push qword ptr [rax + 0x2b] ; clc ; inc eax ; sub al, 0xf8 ; call qword ptr [rax]
0x00000000004afdf0 : and byte ptr [rdx], dh ; clc ; jmp rax
0x00000000004afda8 : and byte ptr [rip + 0x670fff8], al ; clc ; dec dword ptr [rax + 0x32] ; clc ; call qword ptr [rax]
0x000000000042d5ea : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000448fe0 : and byte ptr [rsi + 0xf], ah ; jg 0x449032 ; xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x000000000042d5e5 : and byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004cea4d : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000004b0698 : and byte ptr [rsi - 0x724f0008], cl ; clc ; inc dword ptr [rax - 0x73] ; clc ; call rax
0x00000000004b01dc : and byte ptr [rsi - 8], bl ; jmp qword ptr [rax + 0x10fff85d]
0x00000000004b090c : and byte ptr [rsi - 8], ch ; jmp qword ptr [rax + 0x20fff86f]
0x00000000004b0960 : and byte ptr [rsi - 8], dh ; jmp qword ptr [rax + 0x20fff877]
0x0000000000419a14 : and byte ptr [rsp + rbp], al ; add byte ptr [rbx + 0x2c041505], al ; add byte ptr [rcx], al ; ret
0x000000000047eb72 : and ch, 0xf ; je 0x47eb99 ; add rax, 2 ; ret
0x00000000004494a8 : and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x00000000004259fa : and ch, 2 ; cmovne rax, rdx ; ret
0x000000000047d6bb : and ch, al ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x00000000004b0034 : and ch, byte ptr [rax + rdi*8 - 1] ; mov dl, 0x6b ; clc ; inc dword ptr [rdx + 0x6b] ; clc ; call rdx
0x000000000047eb5d : and cl, 0xf ; je 0x47eb85 ; ret
0x0000000000418a7a : and cl, byte ptr [rax + 0x39] ; retf
0x000000000044e231 : and cl, byte ptr [rax + 0x63] ; add al, 0x82 ; add rax, rdx ; jmp rax
0x0000000000489664 : and cl, byte ptr [rax - 0x77] ; ret 0x1f0f
0x0000000000425173 : and cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000004b0734 : and cl, byte ptr [rcx - 0x775d0008] ; clc ; call qword ptr [rdx]
0x000000000042ce2d : and cl, byte ptr [rcx - 0x77] ; ret
0x000000000048c03a : and cl, byte ptr [rsi - 0x76b70001] ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000048e3aa : and cl, ch ; retf
0x00000000004a36da : and cl, cl ; mov ch, 0xff ; nop ; add rsp, 8 ; ret
0x0000000000449413 : and dh, 0xf0 ; mov edx, 0 ; cmove rax, rdx ; pop rbx ; ret
0x000000000044a31d : and dh, ah ; mov edi, edx ; mov eax, r8d ; syscall
0x000000000044daa9 : and dh, al ; sub byte ptr [rcx], al ; ret
0x00000000004cbfc9 : and dh, bh ; call qword ptr [rax]
0x00000000004afd54 : and dh, bh ; idiv edi ; jo 0x4afd64 ; idiv edi ; rol byte ptr [rax], 0xf8 ; call qword ptr [rax]
0x000000000046afb0 : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004aff08 : and dil, al ; call qword ptr [rax - 0x1f0007dd]
0x00000000004b0a34 : and dl, 0xf8 ; jmp qword ptr [rax]
0x00000000004b1a54 : and dl, cl ; stc ; inc dword ptr [rax] ; retf 0xfff9
0x000000000046ab28 : and dword ptr [r8], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000046ac91 : and dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; test dword ptr [rax], esi ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0x8c20
0x000000000046ab29 : and dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000049aeee : and dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000464955 : and dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000042d986 : and dword ptr [rax], ecx ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00000000004c5c62 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x0000000000418c37 : and dword ptr [rbx], 0xffffffef ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000418c8f : and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000419abe : and dword ptr [rdi], ecx ; mov dh, 0 ; ret
0x00000000004256d2 : and dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004c2d19 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004c5c61 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000045c60b : and eax, 0 ; ret
0x0000000000449aea : and eax, 0x28 ; jne 0x449b20 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000044a8a2 : and eax, 0x28 ; jne 0x44a8c4 ; add rsp, 0x28 ; ret
0x000000000044aad2 : and eax, 0x28 ; jne 0x44ab26 ; add rsp, 0x58 ; ret
0x000000000044ae62 : and eax, 0x28 ; jne 0x44aebe ; add rsp, 0x68 ; ret
0x000000000044b801 : and eax, 0x28 ; jne 0x44b822 ; add rsp, 0x28 ; ret
0x000000000045c6ea : and eax, 0x28 ; jne 0x45c701 ; add rsp, 0x18 ; ret
0x000000000047fad7 : and eax, 0x28 ; jne 0x47fb2e ; add rsp, 0x58 ; ret
0x000000000047fc09 : and eax, 0x28 ; jne 0x47fc36 ; add rsp, 0x38 ; ret
0x000000000048bfb5 : and eax, 0x28 ; jne 0x48bfce ; add rsp, 0x20 ; pop rbx ; ret
0x000000000048c0b0 : and eax, 0x28 ; jne 0x48c0ee ; add rsp, 0x38 ; ret
0x000000000048c170 : and eax, 0x28 ; jne 0x48c1a9 ; add rsp, 0x68 ; ret
0x000000000048c2d1 : and eax, 0x28 ; jne 0x48c319 ; add rsp, 0x78 ; ret
0x000000000048c5a0 : and eax, 0x28 ; jne 0x48c5d9 ; add rsp, 0x68 ; ret
0x000000000049758c : and eax, 0x28 ; jne 0x4975d6 ; leave ; ret
0x00000000004982d8 : and eax, 0x28 ; jne 0x4982ef ; add rsp, 0x38 ; ret
0x00000000004983bb : and eax, 0x28 ; jne 0x4983df ; add rsp, 0x38 ; ret
0x00000000004a3c36 : and eax, 0x28 ; jne 0x4a3c57 ; add rsp, 0x38 ; ret
0x00000000004004e9 : and eax, 0x2d6be2 ; nop ; ret
0x000000000040fc98 : and eax, 0x30 ; call rax
0x000000000040fbd2 : and eax, 0x30 ; call rdx
0x000000000040fcbe : and eax, 0x30 ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x0000000000435b63 : and eax, 0x3948002a ; retf 0x377
0x000000000044942d : and eax, 0x3fc00 ; pop rbx ; ret
0x000000000044950a : and eax, 0x3fffc00 ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000449478 : and eax, 0x3fffc00 ; pop rbx ; ret
0x0000000000485e32 : and eax, 0x48c03100 ; add esp, 8 ; ret
0x000000000047fc49 : and eax, 0x48c03100 ; cmp edi, edx ; ja 0x47fc82 ; ret
0x000000000042d54a : and eax, 0x63490008 ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000048972f : and eax, 0x6894800 ; ret
0x0000000000489451 : and eax, 0x7058b00 ; or eax, 0x8b410025 ; adc edi, dword ptr [rcx] ; ret 0xc74
0x000000000047f9a3 : and eax, 0x75c08500 ; pop rbp ; mov eax, 0x101 ; syscall
0x0000000000449523 : and eax, 0x7ff80000 ; div ecx ; mov eax, eax ; ret
0x00000000004494c7 : and eax, 0x7ff80000 ; ret
0x0000000000474563 : and eax, 0x83000039 ; ret 0xbf08
0x00000000004555bb : and eax, 0x833fe283 ; retf 0x4180
0x00000000004893b4 : and eax, 0xa4058b00 ; or eax, 0x8b410025 ; adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000044d8e7 : and eax, 0xc ; cmp eax, 4 ; je 0x44d8f8 ; ret
0x00000000004493fc : and eax, 0xf ; movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x00000000004ca449 : and eax, 0xf6240000 ; hlt ; call qword ptr [rdi]
0x00000000004896b4 : and eax, 0xf750000 ; mov rax, qword ptr [rip + 0x250e30] ; ret
0x00000000004a8acb : and eax, 1 ; mov dword ptr [rsi], eax ; mov rax, qword ptr [rdi + 0x98] ; ret
0x0000000000495a2c : and eax, 2 ; sub eax, 1 ; ret
0x00000000004a3de7 : and eax, dword ptr [r8] ; call 5
0x00000000004a3158 : and eax, dword ptr [rax] ; add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x000000000049ad45 : and eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004621fd : and eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], cl ; xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x0000000000498779 : and eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; jmp 0x498799
0x00000000004a0cc8 : and eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000004a3d01 : and eax, dword ptr [rax] ; call 4
0x00000000004a8a2a : and eax, dword ptr [rax] ; cmp byte ptr [rdx + rsi], 8 ; jne 0x4a8a57 ; mov rax, qword ptr [rax] ; ret
0x00000000004a30a3 : and eax, dword ptr [rax] ; jne 0x4a30d3 ; ret
0x00000000004a3522 : and eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rsi ; call 9
0x00000000004a0e74 : and eax, dword ptr [rax] ; ret
0x00000000004543ae : and eax, dword ptr [rip + 0x29480000] ; ret 0x349
0x00000000004a3157 : and eax, dword ptr ds:[rax] ; add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x0000000000486439 : and ebp, dword ptr [rcx + 0x634a0003] ; add al, 0xa1 ; add rax, rcx ; jmp rax
0x00000000004c0d9c : and ebp, dword ptr [rdx - 4] ; dec dword ptr [rax + 0x60fffc5a] ; pop rdx ; cld ; jmp qword ptr [rax]
0x00000000004c0d6c : and ebp, dword ptr [rdx - 4] ; jmp qword ptr [rbx]
0x00000000004c0d60 : and ebp, dword ptr [rdx - 4] ; lcall [rax + 0x57] ; cld ; call qword ptr [rax]
0x0000000000418c38 : and ebp, edi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000418c90 : and ebp, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044d882 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x44d895 ; ret
0x00000000004c4414 : and ebx, dword ptr [rbx] ; xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x00000000004bf961 : and ebx, edi ; jmp rcx
0x00000000004bf960 : and ebx, r15d ; jmp rcx
0x000000000042eb65 : and ecx, 0xff ; sub eax, ecx ; ret
0x000000000042e298 : and ecx, 0xffff ; sub eax, ecx ; ret
0x000000000044cfda : and ecx, dword ptr [rax - 0x77] ; ret 0xabe
0x000000000042d78a : and ecx, dword ptr [rax] ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x0000000000404eb5 : and ecx, dword ptr [rdi] ; mov cl, 0x35 ; ret
0x000000000047fd53 : and ecx, dword ptr [rsi + 0x10] ; lea rcx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000041fd1a : and ecx, ebp ; add qword ptr [rax], rax ; add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x00000000004aff0d : and edi, eax ; jmp rax
0x000000000044948e : and edx, 0xf ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x000000000041338c : and edx, 0xfffffffc ; add rdx, rcx ; jmp 0x4133a6
0x000000000042d789 : and esp, dword ptr [rbx] ; or byte ptr [rax], al ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00000000004627a2 : and esp, dword ptr [rdi] ; add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x0000000000485e31 : and esp, dword ptr [rip + 0x48c03100] ; add esp, 8 ; ret
0x000000000044d881 : and r11d, 0xffffffbb ; cmp r11d, 0xa ; je 0x44d896 ; ret
0x00000000004a3549 : and r8, qword ptr [rax] ; call 5
0x00000000004a3521 : and r8, qword ptr [rax] ; mov qword ptr [rsp + 8], rsi ; call 0xa
0x00000000004a3d00 : and r8d, dword ptr [rax] ; call 5
0x000000000041338b : and rdx, 0xfffffffffffffffc ; add rdx, rcx ; jmp 0x4133a7
0x000000000044daa8 : and sil, al ; sub byte ptr [rcx], al ; ret
0x000000000047e6b7 : bnd je 0x47e6c6 ; test edx, edx ; jne 0x47e6b8 ; ret
0x0000000000441ae4 : bsf eax, eax ; add rax, rcx ; add rax, rdi ; vzeroupper ; ret
0x000000000042c79a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x000000000042cc56 : bsf eax, eax ; add rax, rdi ; add rax, rcx ; vzeroupper ; ret
0x000000000042c6c0 : bsf eax, eax ; add rax, rdi ; ret
0x0000000000441f01 : bsf eax, eax ; add rax, rdi ; sub rax, rdx ; vzeroupper ; ret
0x000000000042cbb1 : bsf eax, eax ; add rax, rdi ; vzeroupper ; ret
0x000000000042c6d0 : bsf eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x000000000042c6e0 : bsf eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x000000000042c6b0 : bsf eax, eax ; lea rax, [rax + rdi - 0x10] ; ret
0x000000000042c60f : bsf eax, eax ; lea rax, [rdi + rax + 0x30] ; ret
0x0000000000441673 : bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x000000000042c6f0 : bsf eax, eax ; sub rdx, rax ; jbe 0x42c73b ; add rax, rdi ; ret
0x0000000000441c96 : bsf eax, edx ; ret
0x000000000047e767 : bsf eax, edx ; shr rax, 2 ; ret
0x0000000000441df2 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x0000000000441790 : bsf rax, rax ; lea rax, [rdi + rax] ; ret
0x0000000000441ce2 : bsf rax, rdx ; ret
0x000000000047e766 : bsf rax, rdx ; shr rax, 2 ; ret
0x0000000000441df1 : bsf rdx, rdx ; add rax, rdx ; sub rax, rdi ; ret
0x000000000047d357 : bsr eax, eax ; add rax, rdi ; ret
0x000000000047d731 : bsr eax, eax ; lea rax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x000000000047d5db : bsr eax, esi ; add rax, rdi ; ret
0x000000000047d4e9 : bsr esi, esi ; lea rax, [rcx + rsi] ; ret
0x000000000047d3e5 : bsr esi, esi ; lea rax, [rdi + rsi] ; ret
0x000000000047d356 : bsr rax, rax ; add rax, rdi ; ret
0x000000000047d5da : bsr rax, rsi ; add rax, rdi ; ret
0x000000000047d4e8 : bsr rsi, rsi ; lea rax, [rcx + rsi] ; ret
0x000000000047d3e4 : bsr rsi, rsi ; lea rax, [rdi + rsi] ; ret
0x00000000004c3407 : bswap ebp ; stosd dword ptr [rdi], eax ; mov esi, 0x6a25743d ; scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x000000000042d2ce : bswap ecx ; mov al, byte ptr [rdi + rdx - 1] ; mov cl, byte ptr [rsi + rdx - 1] ; sub eax, ecx ; ret
0x0000000000403a9c : bswap esi ; mov esi, esi ; add rsi, qword ptr [rbp - 0x68] ; call 0x4004ba
0x0000000000487f7b : call 0x110b02cb
0x00000000004cbf78 : call 0x114cb65e
0x000000000046b686 : call 0x2146b684
0x000000000046b7fc : call 0x2146b7fa
0x000000000046ba8b : call 0x2146ba89
0x000000000046bf50 : call 0x2146bf4e
0x000000000046c10e : call 0x2146c10c
0x000000000046c6df : call 0x2146c6dd
0x000000000046c918 : call 0x2146c916
0x00000000004d0e78 : call 0x274d0a22
0x000000000047f33c : call 0x30c5808f
0x000000000047f33b : call 0x30c58090
0x000000000045ef94 : call 0x400456
0x0000000000482da8 : call 0x4004a7
0x0000000000484274 : call 0x4004b2
0x0000000000449d5c : call 0x4004c6
0x000000000046a412 : call 0x4004c7
0x0000000000463625 : call 0x4004e6
0x00000000004a4282 : call 0x4004ea
0x000000000041ea99 : call 0x4004f9
0x0000000000486be6 : call 0x402e12
0x00000000004a2f91 : call 0x402e18
0x000000000040a85f : call 0x407362
0x000000000040f4db : call 0x40f176
0x00000000004ad2c1 : call 0x410d98
0x0000000000422b63 : call 0x411336
0x0000000000422b63 : call 0x411337
0x0000000000417938 : call 0x413bc2
0x00000000004142d0 : call 0x413bc6
0x000000000041e2d8 : call 0x41a572
0x0000000000422d55 : call 0x41ef92
0x00000000004040da : call 0x420b12
0x000000000040b15c : call 0x4213d6
0x000000000045ac22 : call 0x4213d8
0x00000000004abf6c : call 0x4213d9
0x000000000047631e : call 0x4225d2
0x00000000004876b2 : call 0x423922
0x0000000000400808 : call 0x449396
0x00000000004006d1 : call 0x449856
0x0000000000400b99 : call 0x44ce12
0x0000000000420d66 : call 0x44d812
0x0000000000420daa : call 0x44d842
0x0000000000410eff : call 0x44d932
0x000000000047e5f9 : call 0x44d938
0x0000000000452bf0 : call 0x44eec2
0x0000000000496d68 : call 0x453057
0x000000000044fc1a : call 0x45c6b2
0x000000000040f113 : call 0x45c997
0x0000000000401b96 : call 0x45cbde26
0x0000000000462e72 : call 0x45f112
0x000000000047034e : call 0x47c562
0x0000000000463b12 : call 0x47fd62
0x000000000044e56a : call 0x489d98
0x000000000045eaf6 : call 0x4908744a
0x000000000048eaa4 : call 0x490b7cbb
0x0000000000491afc : call 0x490bad13
0x0000000000495ee4 : call 0x490bf0fb
0x0000000000494fbd : call 0x492d46
0x0000000000400663 : call 0x4938d7b7
0x00000000004a50f2 : call 0x4a3ec7
0x00000000004c565a : call 0x4c168015
0x0000000000451f07 : call 0x4d07a85b
0x0000000000495bbc : call 0x4d0bedd3
0x000000000043613a : call 0x4fc27138
0x0000000000436139 : call 0x4fc27139
0x0000000000438c5a : call 0x4fc29c58
0x0000000000438c59 : call 0x4fc29c59
0x00000000004cfd24 : call 0x784cfdad
0x0000000000485911 : call 0x86ca5a5
0x000000000046e20d : call 0xa3f6549
0x000000000045532b : call 0xffffffff810fd651
0x00000000004555d6 : call 0xffffffff810fd8fc
0x000000000044948a : call 0xffffffff84071d9e
0x00000000004c55ba : call 0xffffffffab5a20b0
0x00000000004c3783 : call 0xffffffffaf0ed5f9
0x0000000000466649 : call 0xffffffffc27fae53
0x000000000041f090 : call 0xffffffffc2cb38a9
0x00000000004201d0 : call 0xffffffffc2cb49e9
0x0000000000420f8a : call 0xffffffffc2cb57a3
0x0000000000422a8d : call 0xffffffffc2cb72a6
0x0000000000422f92 : call 0xffffffffc2cb77ab
0x00000000004234ce : call 0xffffffffc2cb7ce7
0x000000000048856a : call 0xffffffffc2d1d174
0x000000000041ef10 : call 0xffffffffc37b371a
0x00000000004202d9 : call 0xffffffffc37b4ae3
0x000000000046c51e : call 0xffffffffc3cac526
0x00000000004744c8 : call 0xffffffffc3cb53d2
0x0000000000442147 : call 0xffffffffc414aa98
0x0000000000442067 : call 0xffffffffc43ca9b8
0x00000000004959b4 : call 0xffffffffca95e509
0x0000000000497644 : call 0xffffffffca960199
0x00000000004959c1 : call 0xffffffffce9de51b
0x0000000000497651 : call 0xffffffffce9e01ab
0x00000000004b2000 : call 0xffffffffd44b19d7
0x000000000044c525 : call 0xffffffffe1442288
0x000000000046739c : call 0xfffffffffc115ca8
0x00000000004a3d03 : call 2
0x00000000004ab6b5 : call 9
0x000000000046a89a : call qword ptr [r10 + rax*8]
0x00000000004a5340 : call qword ptr [r14]
0x0000000000402c00 : call qword ptr [r15 + rbx*8]
0x00000000004af9f3 : call qword ptr [rax + 0x10fff78d]
0x00000000004af9fb : call qword ptr [rax + 0x10fff790]
0x00000000004afa03 : call qword ptr [rax + 0x10fff793]
0x00000000004afa0b : call qword ptr [rax + 0x10fff796]
0x00000000004afa13 : call qword ptr [rax + 0x10fff799]
0x00000000004afa1b : call qword ptr [rax + 0x10fff79c]
0x00000000004afa23 : call qword ptr [rax + 0x10fff79f]
0x00000000004c7e9f : call qword ptr [rax + 0x18]
0x00000000004afbdf : call qword ptr [rax + 0x20fff7ed]
0x00000000004afe8b : call qword ptr [rax + 0x20fff83e]
0x00000000004afdeb : call qword ptr [rax + 0x20fff83f]
0x00000000004b03ab : call qword ptr [rax + 0x20fff85b]
0x00000000004b019b : call qword ptr [rax + 0x20fff867]
0x00000000004aff83 : call qword ptr [rax + 0x20fff86a]
0x00000000004b0693 : call qword ptr [rax + 0x20fff88e]
0x00000000004b047b : call qword ptr [rax + 0x20fff891]
0x000000000040f51e : call qword ptr [rax + 0x458b41]
0x00000000004b0a73 : call qword ptr [rax - 0x1f00070a]
0x00000000004aff5f : call qword ptr [rax - 0x1f0007d6]
0x00000000004aff0b : call qword ptr [rax - 0x1f0007dd]
0x00000000004afd93 : call qword ptr [rax - 0x1f000802]
0x00000000004afd3f : call qword ptr [rax - 0x1f000809]
0x00000000004afde7 : call qword ptr [rax - 0x6f0007c3]
0x00000000004afa27 : call qword ptr [rax]
0x000000000040234e : call qword ptr [rbx + 0x10]
0x000000000040fd90 : call qword ptr [rbx]
0x00000000004a54f0 : call qword ptr [rcx]
0x0000000000402c01 : call qword ptr [rdi + rbx*8]
0x00000000004afb6f : call qword ptr [rdi]
0x00000000004b0757 : call qword ptr [rdx + 0x12fff884]
0x00000000004b074f : call qword ptr [rdx + 0x12fff885]
0x00000000004b0747 : call qword ptr [rdx + 0x12fff886]
0x00000000004b073f : call qword ptr [rdx + 0x12fff887]
0x00000000004b0567 : call qword ptr [rdx + 0x22fff88c]
0x000000000046a89b : call qword ptr [rdx + rax*8]
0x00000000004b004f : call qword ptr [rdx]
0x00000000004afb3f : call qword ptr [rsi + 0x16fff7e9]
0x00000000004afb47 : call qword ptr [rsi + 0x16fff7ea]
0x00000000004afb4f : call qword ptr [rsi + 0x16fff7eb]
0x00000000004afb6b : call qword ptr [rsi + 0x17fff7ef]
0x00000000004affcb : call qword ptr [rsi + 0x26fff869]
0x00000000004b04c3 : call qword ptr [rsi + 0x26fff890]
0x00000000004afb3b : call qword ptr [rsi - 0x69000818]
0x0000000000499412 : call qword ptr [rsi]
0x0000000000486a07 : call r10
0x000000000040094c : call r11
0x000000000044ba40 : call r12
0x0000000000450550 : call r14
0x000000000044bf82 : call r15
0x0000000000400428 : call rax
0x000000000040094d : call rbx
0x000000000041dcc3 : call rcx
0x000000000044bf83 : call rdi
0x000000000040fbd7 : call rdx
0x0000000000450551 : call rsi
0x000000000044ba41 : call rsp
0x000000000042a177 : cdq ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000412683 : cdq ; add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x00000000004a7e74 : cdq ; add rax, r9 ; jmp rax
0x0000000000497d23 : cdq ; and al, 0x24 ; add byte ptr [rax - 0x77], cl ; add eax, 0x24247a ; ret
0x000000000044d083 : cdq ; and byte ptr [rbx], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004c80d5 : cdq ; call qword ptr [rcx]
0x0000000000432113 : cdq ; fadd qword ptr [rdi] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004c54c0 : cdq ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004c54bb : cdq ; mov edi, 0x99b51319 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000042f353 : cdq ; or byte ptr [rax], cl ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000462e73 : cdq ; ret 0xffff
0x000000000040839b : cdq ; sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe07], al ; retf 0x1b
0x0000000000419983 : cdq ; xlatb ; sub eax, dword ptr [rax] ; ret
0x000000000049130b : clc ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x0000000000487a99 : clc ; add al, 0x75 ; retf
0x0000000000482284 : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004cab3c : clc ; add byte ptr [rax], al ; add byte ptr [rsp + rbp], al ; add byte ptr [rax], al ; pop rsp ; sbb al, 0xf5 ; call qword ptr [rax]
0x000000000046b791 : clc ; add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x000000000041e31a : clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041df77 : clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x00000000004889d3 : clc ; add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x00000000004240b3 : clc ; add dword ptr [rax - 0x73], ecx ; clc ; cmovne rax, rcx ; ret
0x000000000040e7dd : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000004a3f1f : clc ; add ebx, dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x00000000004517a2 : clc ; add ecx, dword ptr [rax - 0x77] ; or byte ptr [r15], 0x8e ; ret 1
0x00000000004c7ac8 : clc ; add esi, edi ; call rcx
0x000000000042c497 : clc ; add rax, rcx ; ret
0x0000000000441e4b : clc ; add rax, rcx ; sub rax, rdx ; vzeroupper ; ret
0x000000000042c9c4 : clc ; add rax, rcx ; vzeroupper ; ret
0x00000000004afe8a : clc ; call qword ptr [rax + 0x20fff83e]
0x00000000004afdea : clc ; call qword ptr [rax + 0x20fff83f]
0x00000000004b03aa : clc ; call qword ptr [rax + 0x20fff85b]
0x00000000004b019a : clc ; call qword ptr [rax + 0x20fff867]
0x00000000004aff82 : clc ; call qword ptr [rax + 0x20fff86a]
0x00000000004b0692 : clc ; call qword ptr [rax + 0x20fff88e]
0x00000000004b047a : clc ; call qword ptr [rax + 0x20fff891]
0x00000000004b0a72 : clc ; call qword ptr [rax - 0x1f00070a]
0x00000000004aff5e : clc ; call qword ptr [rax - 0x1f0007d6]
0x00000000004aff0a : clc ; call qword ptr [rax - 0x1f0007dd]
0x00000000004afde6 : clc ; call qword ptr [rax - 0x6f0007c3]
0x00000000004afc2e : clc ; call qword ptr [rax]
0x00000000004ce5da : clc ; call qword ptr [rbx]
0x00000000004ccf6a : clc ; call qword ptr [rcx]
0x00000000004cdaf2 : clc ; call qword ptr [rdi]
0x00000000004b0756 : clc ; call qword ptr [rdx + 0x12fff884]
0x00000000004b074e : clc ; call qword ptr [rdx + 0x12fff885]
0x00000000004b0746 : clc ; call qword ptr [rdx + 0x12fff886]
0x00000000004b073e : clc ; call qword ptr [rdx + 0x12fff887]
0x00000000004b0566 : clc ; call qword ptr [rdx + 0x22fff88c]
0x00000000004b004e : clc ; call qword ptr [rdx]
0x00000000004affca : clc ; call qword ptr [rsi + 0x26fff869]
0x00000000004b04c2 : clc ; call qword ptr [rsi + 0x26fff890]
0x00000000004affea : clc ; call qword ptr [rsi]
0x00000000004afc16 : clc ; call rax
0x00000000004cda5e : clc ; call rcx
0x00000000004b003e : clc ; call rdx
0x00000000004affda : clc ; call rsi
0x00000000004b0106 : clc ; call rsp
0x00000000004cffa1 : clc ; cli ; jmp qword ptr [rcx]
0x00000000004240b8 : clc ; cmovne rax, rcx ; ret
0x000000000042eb09 : clc ; cmp rcx, rax ; jne 0x42eb3b ; xor eax, eax ; ret
0x000000000042eb08 : clc ; cmp rcx, rax ; jne 0x42eb3c ; xor eax, eax ; ret
0x000000000042e0fd : clc ; cmp rcx, rax ; jne 0x42eb3f ; xor eax, eax ; ret
0x00000000004afdae : clc ; dec dword ptr [rax + 0x32] ; clc ; call qword ptr [rax]
0x0000000000489c50 : clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000424a80 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000047c940 : clc ; dec dword ptr [rax + 1] ; ret
0x0000000000402d9c : clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000477f77 : clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x0000000000478147 : clc ; dec dword ptr [rax - 0x77] ; ret 0x850f
0x0000000000479a59 : clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x00000000004123dd : clc ; dec dword ptr [rax - 0x77] ; retf
0x0000000000463446 : clc ; dec dword ptr [rcx - 0x77] ; ret
0x00000000004613ee : clc ; dec dword ptr [rdi] ; test dword ptr [rsi - 0x16000007], esi ; ret
0x00000000004607a3 : clc ; idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x00000000004afd45 : clc ; idiv edi ; xor dl, bh ; idiv edi ; cmp bl, 0xf7 ; call rax
0x00000000004afcca : clc ; inc dword ptr [rax + 0x10fff816] ; or eax, edi ; call rax
0x00000000004afc2a : clc ; inc dword ptr [rax + 0x10fff817] ; or bh, al ; call rax
0x00000000004afce6 : clc ; inc dword ptr [rax + 0x14] ; clc ; inc dword ptr [rax + 0x16] ; clc ; call rax
0x00000000004afcea : clc ; inc dword ptr [rax + 0x16] ; clc ; call rax
0x00000000004aff06 : clc ; inc dword ptr [rax + 0x22] ; clc ; call qword ptr [rax - 0x1f0007dd]
0x00000000004aff5a : clc ; inc dword ptr [rax + 0x29] ; clc ; call qword ptr [rax - 0x1f0007d6]
0x00000000004afdce : clc ; inc dword ptr [rax + 0x32] ; clc ; inc dword ptr [rax] ; xor al, 0xf8 ; jmp rax
0x00000000004afe56 : clc ; inc dword ptr [rax + 0x35] ; clc ; jmp qword ptr [rax]
0x00000000004afebe : clc ; inc dword ptr [rax + 0x38] ; clc ; call qword ptr [rax]
0x00000000004afe26 : clc ; inc dword ptr [rax + 0x3d] ; clc ; inc dword ptr [rax + 0x3f] ; clc ; call rax
0x00000000004afe2a : clc ; inc dword ptr [rax + 0x3f] ; clc ; call rax
0x00000000004b01a6 : clc ; inc dword ptr [rax + 0x66] ; clc ; call rax
0x00000000004aff8e : clc ; inc dword ptr [rax + 0x69] ; clc ; call rax
0x00000000004afd12 : clc ; inc dword ptr [rax + 0xa] ; clc ; call qword ptr [rax]
0x00000000004afc7a : clc ; inc dword ptr [rax + 0xf] ; clc ; jmp qword ptr [rax]
0x00000000004b0a4a : clc ; inc dword ptr [rax - 0x14] ; clc ; jmp rax
0x00000000004b0a2a : clc ; inc dword ptr [rax - 0x21] ; clc ; jmp rax
0x00000000004b0a7e : clc ; inc dword ptr [rax - 0x2f000706] ; sti ; clc ; jmp qword ptr [rax]
0x00000000004aff16 : clc ; inc dword ptr [rax - 0x2f0007d9] ; sub al, bh ; jmp qword ptr [rax]
0x00000000004afd9e : clc ; inc dword ptr [rax - 0x2f0007fe] ; add edi, eax ; jmp qword ptr [rax]
0x00000000004b09d6 : clc ; inc dword ptr [rax - 0x4c] ; clc ; jmp rax
0x00000000004b0486 : clc ; inc dword ptr [rax - 0x70] ; clc ; call rax
0x00000000004b069e : clc ; inc dword ptr [rax - 0x73] ; clc ; call rax
0x00000000004b08ae : clc ; inc dword ptr [rax - 0x7f] ; clc ; jmp rax
0x00000000004b08ee : clc ; inc dword ptr [rax] ; clc ; jmp qword ptr [rax]
0x00000000004afe5e : clc ; inc dword ptr [rax] ; cmp eax, edi ; call rax
0x00000000004aff7e : clc ; inc dword ptr [rax] ; imul edi, eax, -1 ; nop ; push -8 ; jmp qword ptr [rax]
0x00000000004b09c6 : clc ; inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; clc ; call qword ptr [rax]
0x00000000004afbf2 : clc ; inc dword ptr [rax] ; or al, 0xf8 ; jmp rax
0x00000000004b0196 : clc ; inc dword ptr [rax] ; push 0x6790fff8 ; clc ; jmp qword ptr [rax]
0x00000000004b0476 : clc ; inc dword ptr [rax] ; xchg eax, edx ; clc ; call qword ptr [rax + 0x20fff891]
0x00000000004afdd2 : clc ; inc dword ptr [rax] ; xor al, 0xf8 ; jmp rax
0x00000000004b05fa : clc ; inc dword ptr [rcx + rdx*4 - 8] ; call rsp
0x000000000045b212 : clc ; inc dword ptr [rcx - 0x77] ; ret 0x840f
0x00000000004b003a : clc ; inc dword ptr [rdx + 0x6b] ; clc ; call rdx
0x00000000004b0102 : clc ; inc dword ptr [rdx + rbp*2 - 8] ; call rsp
0x00000000004b0532 : clc ; inc dword ptr [rdx - 0x6e] ; clc ; call rdx
0x00000000004b0762 : clc ; inc dword ptr [rdx] ; cmp eax, -1 ; jb 0x4b06f5 ; clc ; jmp rdx
0x00000000004affd6 : clc ; inc dword ptr [rsi + 0x68] ; clc ; call rsi
0x00000000004b04ce : clc ; inc dword ptr [rsi - 0x71] ; clc ; call rsi
0x00000000004affc6 : clc ; inc dword ptr [rsi] ; push -8 ; call qword ptr [rsi + 0x26fff869]
0x00000000004b04be : clc ; inc dword ptr [rsi] ; xchg eax, ecx ; clc ; call qword ptr [rsi + 0x26fff890]
0x00000000004b0186 : clc ; inc eax ; imul edi, eax, 0xf86950ff ; jmp rax
0x00000000004b0aae : clc ; inc eax ; stc ; call rax
0x00000000004aff26 : clc ; inc eax ; sub al, 0xf8 ; call qword ptr [rax]
0x00000000004c57a8 : clc ; insd dword ptr [rdi], dx ; add dword ptr [rbp - 9], 0x8d626770 ; rcl byte ptr [rdi], cl ; retf
0x0000000000449192 : clc ; ja 0x449164 ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x0000000000449368 : clc ; ja 0x44933a ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x000000000047f058 : clc ; ja 0x47f028 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000488a0f : clc ; jb 0x488a2c ; mov rsi, rdx ; cmp rcx, rsi ; jne 0x4889fc ; ret
0x00000000004494ca : clc ; jg 0x449499 ; mov eax, 0x80 ; pop rbx ; ret
0x0000000000449526 : clc ; jg 0x449526 ; int1 ; mov eax, eax ; ret
0x0000000000455ab7 : clc ; jg 0x455a46 ; ret 0xdb76
0x0000000000455ab7 : clc ; jg 0x455a4a ; ret 0xdb76
0x00000000004b03e2 : clc ; jmp qword ptr [rax + 0x10fff85c]
0x00000000004b01de : clc ; jmp qword ptr [rax + 0x10fff85d]
0x00000000004b06e6 : clc ; jmp qword ptr [rax + 0x10fff882]
0x00000000004b066e : clc ; jmp qword ptr [rax + 0x10fff88b]
0x00000000004b01d6 : clc ; jmp qword ptr [rax + 0x20fff85e]
0x00000000004b01ce : clc ; jmp qword ptr [rax + 0x20fff85f]
0x00000000004b01c6 : clc ; jmp qword ptr [rax + 0x20fff860]
0x00000000004b01be : clc ; jmp qword ptr [rax + 0x20fff861]
0x00000000004b0932 : clc ; jmp qword ptr [rax + 0x20fff865]
0x00000000004b08f6 : clc ; jmp qword ptr [rax + 0x20fff866]
0x00000000004b093a : clc ; jmp qword ptr [rax + 0x20fff868]
0x00000000004b08fe : clc ; jmp qword ptr [rax + 0x20fff869]
0x00000000004b0942 : clc ; jmp qword ptr [rax + 0x20fff86b]
0x00000000004b0906 : clc ; jmp qword ptr [rax + 0x20fff86c]
0x00000000004b094a : clc ; jmp qword ptr [rax + 0x20fff86e]
0x00000000004b090e : clc ; jmp qword ptr [rax + 0x20fff86f]
0x00000000004b0952 : clc ; jmp qword ptr [rax + 0x20fff871]
0x00000000004b0916 : clc ; jmp qword ptr [rax + 0x20fff872]
0x00000000004b095a : clc ; jmp qword ptr [rax + 0x20fff874]
0x00000000004b091e : clc ; jmp qword ptr [rax + 0x20fff875]
0x00000000004b0962 : clc ; jmp qword ptr [rax + 0x20fff877]
0x00000000004b0926 : clc ; jmp qword ptr [rax + 0x20fff878]
0x00000000004b0a26 : clc ; jmp qword ptr [rax + 0x40fff8dd]
0x00000000004b0a02 : clc ; jmp qword ptr [rax - 0x35]
0x00000000004b09f2 : clc ; jmp qword ptr [rax - 0x3d]
0x00000000004afc7e : clc ; jmp qword ptr [rax]
0x00000000004ccfca : clc ; jmp qword ptr [rcx]
0x00000000004b0736 : clc ; jmp qword ptr [rdx + 0x12fff888]
0x00000000004b054a : clc ; jmp qword ptr [rdx + 0x32fff88f]
0x00000000004b0032 : clc ; jmp qword ptr [rdx]
0x00000000004affce : clc ; jmp qword ptr [rsi]
0x000000000046234f : clc ; jmp rax
0x00000000004b0062 : clc ; jmp rdx
0x00000000004affbe : clc ; jmp rsi
0x00000000004b012a : clc ; jmp rsp
0x000000000045b134 : clc ; jnp 0x45b142 ; add byte ptr [rax + 0x63], cl ; ret
0x00000000004b036a : clc ; lcall [rdx + 0x2afff85b] ; pop rbx ; clc ; call rax
0x00000000004b0526 : clc ; lcall [rsp + rcx*4 - 0x73d30008] ; clc ; call rdx
0x0000000000400bca : clc ; leave ; ret
0x00000000004b036e : clc ; ljmp [rdx] ; pop rbx ; clc ; call rax
0x00000000004b02ea : clc ; ljmp [rsi + 0x3efff85b] ; pop rbx ; clc ; jmp rsp
0x00000000004b052a : clc ; ljmp [rsp + rcx*4] ; clc ; call rdx
0x0000000000400bc2 : clc ; mov byte ptr [rax + 8], 1 ; mov rax, qword ptr [rbp - 8] ; leave ; ret
0x00000000004c4122 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000401ee3 : clc ; mov dword ptr [rax + 0x10], 0xffffffff ; nop ; leave ; ret
0x0000000000413c44 : clc ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000430607 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000430f77 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435ec7 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431177 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435e37 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431377 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435da7 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000430623 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000044900e : clc ; mov qword ptr [rdi], rcx ; ret
0x000000000044918d : clc ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x000000000043985c : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000044829a : clc ; mov qword ptr [rdi], rsi ; ret
0x00000000004a6707 : clc ; mov r8, qword ptr [rax] ; lea rax, [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x00000000004a8f81 : clc ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000042eb05 : clc ; mov rcx, qword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x42eb3f ; xor eax, eax ; ret
0x00000000004790b0 : clc ; mov rdx, r8 ; jmp 0x479082
0x0000000000448292 : clc ; mov rsi, qword ptr [rsi] ; mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x0000000000497932 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000042ce42 : clc ; movzx eax, al ; sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000478fc1 : clc ; or dword ptr [rdi], ecx ; xchg dword ptr [rdi], esi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x000000000046e50f : clc ; or dword ptr [rdi], ecx ; xchg ecx, esp ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x0000000000413c5c : clc ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041be86 : clc ; pop rbp ; pop r12 ; ret
0x00000000004809aa : clc ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000425211 : clc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004aff22 : clc ; push qword ptr [rax + 0x2b] ; clc ; inc eax ; sub al, 0xf8 ; call qword ptr [rax]
0x00000000004b01a2 : clc ; push qword ptr [rax + 0x40fff866] ; clc ; call rax
0x00000000004b0482 : clc ; push qword ptr [rax + 0x40fff890] ; nop ; clc ; call rax
0x00000000004afdaa : clc ; push qword ptr [rax + 6] ; clc ; dec dword ptr [rax + 0x32] ; clc ; call qword ptr [rax]
0x00000000004b0876 : clc ; push qword ptr [rax - 0x78] ; clc ; jmp rax
0x00000000004afe3e : clc ; push qword ptr [rax] ; cmp eax, edi ; call qword ptr [rax]
0x00000000004b09d2 : clc ; push qword ptr [rax] ; mov dl, 0xf8 ; inc dword ptr [rax - 0x4c] ; clc ; jmp rax
0x00000000004afc0e : clc ; push qword ptr [rax] ; or bh, al ; push rax ; or edi, eax ; call rax
0x00000000004b03de : clc ; push qword ptr [rax] ; pop rbp ; clc ; jmp qword ptr [rax + 0x10fff85c]
0x000000000047b927 : clc ; push qword ptr [rbp + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x0000000000418ccf : clc ; push qword ptr [rbp - 0x44] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004b081e : clc ; push qword ptr [rbx + rax*4 - 8] ; jmp rsp
0x00000000004b05f6 : clc ; push qword ptr [rcx + rdx*4 - 0x6ebb0008] ; clc ; call rsp
0x000000000047f7e3 : clc ; push qword ptr [rdi + rax*2 - 0x77] ; ret 0xe283
0x00000000004b025e : clc ; push qword ptr [rdx + 0x5d] ; clc ; jmp rdx
0x00000000004b00fe : clc ; push qword ptr [rdx + rbp*2 + 0x6a44fff8] ; clc ; call rsp
0x00000000004b0766 : clc ; push qword ptr [rdx - 0x7e] ; clc ; jmp rdx
0x00000000004b0872 : clc ; push rax ; mov al, bh ; push qword ptr [rax - 0x78] ; clc ; jmp rax
0x00000000004afcb6 : clc ; push rax ; or al, 0xf8 ; call rax
0x00000000004afc12 : clc ; push rax ; or edi, eax ; call rax
0x00000000004b09c2 : clc ; push rax ; test eax, 0xac00fff8 ; clc ; call qword ptr [rax]
0x00000000004b0046 : clc ; push rdx ; imul edi, eax, 0xf86982ff ; call qword ptr [rdx]
0x00000000004b025a : clc ; push rdx ; pop rbp ; clc ; push qword ptr [rdx + 0x5d] ; clc ; jmp rdx
0x00000000004b081a : clc ; push rsp ; cmp eax, -1 ; je 0x4b07ae ; clc ; jmp rsp
0x0000000000413c75 : clc ; ret
0x00000000004a3d04 : clc ; ret 0xffb5
0x000000000043ffe4 : clc ; rol ch, 1 ; jns 0x43ffc5 ; retf 0xead3
0x0000000000440134 : clc ; rol ch, 1 ; jns 0x440115 ; retf 0xead3
0x0000000000440284 : clc ; rol ch, 1 ; jns 0x440265 ; retf 0xead3
0x00000000004403d4 : clc ; rol ch, 1 ; jns 0x4403b5 ; retf 0xead3
0x0000000000440524 : clc ; rol ch, 1 ; jns 0x440505 ; retf 0xead3
0x0000000000440674 : clc ; rol ch, 1 ; jns 0x440655 ; retf 0xead3
0x00000000004407c4 : clc ; rol ch, 1 ; jns 0x4407a5 ; retf 0xead3
0x0000000000440914 : clc ; rol ch, 1 ; jns 0x4408f5 ; retf 0xead3
0x0000000000440a64 : clc ; rol ch, 1 ; jns 0x440a45 ; retf 0xead3
0x0000000000440bb4 : clc ; rol ch, 1 ; jns 0x440b95 ; retf 0xead3
0x0000000000440d04 : clc ; rol ch, 1 ; jns 0x440ce5 ; retf 0xead3
0x0000000000440e54 : clc ; rol ch, 1 ; jns 0x440e35 ; retf 0xead3
0x0000000000440fa4 : clc ; rol ch, 1 ; jns 0x440f85 ; retf 0xead3
0x00000000004410f4 : clc ; rol ch, 1 ; jns 0x4410d5 ; retf 0xead3
0x0000000000441244 : clc ; rol ch, 1 ; jns 0x441225 ; retf 0xead3
0x000000000049f354 : clc ; rol ch, 1 ; jns 0x49f335 ; retf 0xead3
0x000000000049f4d4 : clc ; rol ch, 1 ; jns 0x49f4b5 ; retf 0xead3
0x000000000049f654 : clc ; rol ch, 1 ; jns 0x49f635 ; retf 0xead3
0x000000000049f7d4 : clc ; rol ch, 1 ; jns 0x49f7b5 ; retf 0xead3
0x000000000049f954 : clc ; rol ch, 1 ; jns 0x49f935 ; retf 0xead3
0x000000000049fad4 : clc ; rol ch, 1 ; jns 0x49fab5 ; retf 0xead3
0x000000000049fc54 : clc ; rol ch, 1 ; jns 0x49fc35 ; retf 0xead3
0x000000000049fdd4 : clc ; rol ch, 1 ; jns 0x49fdb5 ; retf 0xead3
0x000000000049ff54 : clc ; rol ch, 1 ; jns 0x49ff35 ; retf 0xead3
0x00000000004a00d4 : clc ; rol ch, 1 ; jns 0x4a00b5 ; retf 0xead3
0x00000000004a0254 : clc ; rol ch, 1 ; jns 0x4a0235 ; retf 0xead3
0x00000000004a03d4 : clc ; rol ch, 1 ; jns 0x4a03b5 ; retf 0xead3
0x00000000004a0554 : clc ; rol ch, 1 ; jns 0x4a0535 ; retf 0xead3
0x00000000004a06d4 : clc ; rol ch, 1 ; jns 0x4a06b5 ; retf 0xead3
0x00000000004a0854 : clc ; rol ch, 1 ; jns 0x4a0835 ; retf 0xead3
0x00000000004960fa : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000047e87f : clc ; shr rax, 2 ; ret
0x000000000048bdbd : clc ; std ; jbe 0x48bdcd ; ret
0x00000000004a0bb1 : clc ; sub rax, r8 ; ret
0x000000000047ed26 : clc ; sub rax, rdx ; shr rax, 2 ; vzeroupper ; ret
0x0000000000441f06 : clc ; sub rax, rdx ; vzeroupper ; ret
0x0000000000447eab : clc ; sub rax, rsi ; ret
0x000000000042cb3b : clc ; vzeroupper ; ret
0x000000000049ab44 : clc ; xchg eax, ebx ; add dword ptr [rax], eax ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000004c5c58 : cld ; adc ch, byte ptr [rip + 0x8acc8c6] ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000400cd7 : cld ; add byte ptr [rax], al ; nop ; pop rbp ; ret
0x000000000044942f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000049f040 : cld ; add qword ptr [rax], r8 ; mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000041338e : cld ; add rdx, rcx ; jmp 0x4133a4
0x00000000004c0d66 : cld ; call qword ptr [rax]
0x00000000004d1596 : cld ; call qword ptr [rbx]
0x00000000004d154a : cld ; call qword ptr [rdx]
0x00000000004d169a : cld ; call rdi
0x0000000000447641 : cld ; cmp eax, ecx ; jne 0x44785b ; xor eax, eax ; ret
0x0000000000447640 : cld ; cmp eax, ecx ; jne 0x44785c ; xor eax, eax ; ret
0x000000000042e126 : cld ; cmp ecx, eax ; jne 0x42eb4a ; xor eax, eax ; ret
0x000000000042e125 : cld ; cmp ecx, eax ; jne 0x42eb4b ; xor eax, eax ; ret
0x000000000048066a : cld ; dec dword ptr [rax + 0x39] ; ret
0x00000000004c0d9e : cld ; dec dword ptr [rax + 0x60fffc5a] ; pop rdx ; cld ; jmp qword ptr [rax]
0x000000000047dd88 : cld ; dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000045ac25 : cld ; dec dword ptr [rcx + rcx*4 + 0x25] ; ret 0x27de
0x00000000004c8684 : cld ; fdivr st(3), st(0) ; call rsp
0x00000000004ca641 : cld ; hlt ; call qword ptr [rdx]
0x0000000000485f8e : cld ; inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x000000000048c90b : cld ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x000000000044950c : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000044947a : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004c0da6 : cld ; jmp qword ptr [rax]
0x00000000004c0d6a : cld ; jmp qword ptr [rbx]
0x00000000004d17aa : cld ; jmp qword ptr [rcx]
0x00000000004d1a62 : cld ; jmp qword ptr [rdx]
0x00000000004d1b3a : cld ; jmp rdx
0x00000000004c0d62 : cld ; lcall [rax + 0x57] ; cld ; call qword ptr [rax]
0x00000000004c0d7a : cld ; lcall [rax + 0x57] ; cld ; jmp qword ptr [rbx]
0x00000000004c0d76 : cld ; lcall [rax + 0x57] ; cld ; lcall [rax + 0x57] ; cld ; jmp qword ptr [rbx]
0x00000000004c9664 : cld ; lodsb al, byte ptr [rsi] ; hlt ; jmp rdx
0x00000000004c4ea5 : cld ; lodsb al, byte ptr [rsi] ; loop 0x4c4e74 ; retf
0x00000000004012ca : cld ; mov dword ptr [rax], edx ; nop ; leave ; ret
0x0000000000430d92 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430f95 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431195 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431395 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000449016 : cld ; mov dword ptr [rdi], ecx ; ret
0x0000000000449198 : cld ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x000000000043986e : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000004482a8 : cld ; mov dword ptr [rdi], esi ; ret
0x00000000004482a2 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x00000000004307ca : cld ; mov qword ptr [rdi - 0x11], r11 ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004309aa : cld ; mov qword ptr [rdi - 0x12], r11 ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430b8a : cld ; mov qword ptr [rdi - 0x13], r11 ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430d6a : cld ; mov qword ptr [rdi - 0x14], r11 ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004309c6 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000436056 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430ba6 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435fd6 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430d86 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435f56 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004307e6 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004360d6 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000044b017 : cld ; mov rdi, r12 ; mov eax, 0x4f ; syscall
0x00000000004978ec : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000430671 : cld ; ret
0x000000000048f2c5 : cld ; retf 0x4166
0x000000000040a860 : cld ; retf 0xffff
0x00000000004c9a38 : cld ; sbb al, byte ptr [rax] ; add ah, al ; ret
0x00000000004c35c3 : cld ; shr al, cl ; add al, 0x3d ; retf
0x000000000044ad30 : cld ; sub byte ptr [rax], al ; test eax, eax ; jne 0x44ada4 ; mov eax, 0x48 ; syscall
0x00000000004c35d6 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000448b32 : cld ; vzeroupper ; ret
0x000000000047bd69 : cli ; add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000046ace5 : cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x0000000000412742 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000447fee : cli ; add dh, byte ptr [rdx + 8] ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00000000004123d7 : cli ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; retf
0x0000000000491975 : cli ; add dword ptr [rbp + 0x19], eax ; rol byte ptr [rcx - 0x7d], cl ; ret 0x4502
0x0000000000449001 : cli ; add dword ptr [rdi + 0x15], esi ; jb 0x449011 ; mov byte ptr [rdi], cl ; ret
0x0000000000448282 : cli ; add dword ptr [rdi + 0x26], esi ; jb 0x448298 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000044916f : cli ; add dword ptr [rdi + 0x2c], esi ; jb 0x449182 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000449337 : cli ; add dword ptr [rdi + 0x3a], esi ; jb 0x44934a ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000004485e2 : cli ; add dword ptr [rdi + 0x3b], esi ; jb 0x4485f8 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000448a32 : cli ; add dword ptr [rdi + 0x53], esi ; jb 0x448a48 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447ffb : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000043988c : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000044a0ee : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x000000000044a14c : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x0000000000455d59 : cli ; add esi, dword ptr [rdi + 0xf] ; mov dh, 0x4e ; add eax, dword ptr [rcx - 0x77] ; retf
0x00000000004c55b9 : cli ; call 0xffffffffab5a20b1
0x00000000004ced3a : cli ; call rbx
0x00000000004b2f06 : cli ; call rsp
0x00000000004b0a81 : cli ; clc ; call rax
0x000000000044dd55 : cli ; cmp eax, 0x83497174 ; ret
0x000000000045eefe : cli ; dec dword ptr [rax + 0x29] ; ret
0x000000000045deb5 : cli ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x00000000004afd49 : cli ; idiv edi ; cmp bl, 0xf7 ; call rax
0x000000000044944e : cli ; inc dword ptr [rax] ; add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x000000000045b20f : cli ; inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x0000000000453f6d : cli ; inc dword ptr [rcx - 0x77] ; ret
0x0000000000457255 : cli ; inc dword ptr [rcx - 0x77] ; ret 0x5be9
0x00000000004a29b7 : cli ; inc edi ; sbb byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000439847 : cli ; jg 0x43985a ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000447fc6 : cli ; jg 0x447fd8 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000004485f9 : cli ; jg 0x44860c ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000448a61 : cli ; jg 0x448a74 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000449182 : cli ; jg 0x449192 ; vzeroupper ; ret
0x0000000000449358 : cli ; jg 0x449368 ; vzeroupper ; ret
0x00000000004cfb1a : cli ; jmp qword ptr [rax]
0x00000000004cf922 : cli ; jmp qword ptr [rbx]
0x00000000004cffa2 : cli ; jmp qword ptr [rcx]
0x00000000004b2eca : cli ; jmp rax
0x000000000040e584 : cli ; jmp rdx
0x00000000004568cc : cli ; loopne 0x456949 ; jae 0x45685f ; retf 0xb941
0x0000000000431198 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431192 : cli ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004b066c : cli ; mov edi, eax ; jmp qword ptr [rax + 0x10fff88b]
0x000000000040e866 : cli ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000042ce48 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x000000000042b8f6 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000048f0fb : cli ; or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x8348
0x00000000004c5a41 : cli ; push 0x6e ; ja 0x4c59ce ; ret 0x48f
0x00000000004b2ec6 : cli ; push qword ptr [rax] ; mov bh, dl ; jmp rax
0x00000000004b2ec2 : cli ; push rax ; mov bh, dl ; push qword ptr [rax] ; mov bh, dl ; jmp rax
0x0000000000448f39 : cli ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000004c44e5 : cli ; ret 0xac65
0x000000000044d80b : cli ; setae al ; ret
0x00000000004abeaf : cli ; stc ; jmp qword ptr [rsi + 0xf]
0x000000000044aec3 : cli ; sub byte ptr [rax], al ; test eax, eax ; jne 0x44aeec ; mov eax, 3 ; syscall
0x00000000004c4390 : cli ; test bh, dl ; retf 0xdf7f
0x0000000000441d39 : cli ; test rdx, rdx ; je 0x441d59 ; bsf rax, rdx ; ret
0x0000000000441d39 : cli ; test rdx, rdx ; je 0x441d5a ; bsf rax, rdx ; ret
0x000000000047d8c8 : cli ; test rdx, rdx ; je 0x47d8f9 ; bsf rax, rdx ; ret
0x000000000047d8c8 : cli ; test rdx, rdx ; je 0x47d8fa ; bsf rax, rdx ; ret
0x00000000004c312a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000004b12b0 : cli ; xchg eax, ebp ; stc ; jmp rsi
0x0000000000471462 : cmc ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x000000000049ef88 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000047eb71 : cmc ; and ch, 0xf ; je 0x47eb9a ; add rax, 2 ; ret
0x00000000004cab46 : cmc ; call qword ptr [rax]
0x00000000004ae17a : cmc ; call rax
0x00000000004ae162 : cmc ; call rsp
0x00000000004b0a71 : cmc ; clc ; call qword ptr [rax - 0x1f00070a]
0x00000000004ae146 : cmc ; dec dword ptr [rax + 0x52] ; cmc ; ljmp [rcx] ; push rdx ; cmc ; jmp qword ptr [rax]
0x00000000004ae14e : cmc ; jmp qword ptr [rax]
0x00000000004cbb1a : cmc ; jmp qword ptr [rbx]
0x00000000004ae1c2 : cmc ; jmp rax
0x00000000004ae15e : cmc ; jmp rcx
0x00000000004caec2 : cmc ; jmp rsi
0x00000000004ae14a : cmc ; ljmp [rcx] ; push rdx ; cmc ; jmp qword ptr [rax]
0x00000000004c5e69 : cmc ; mov ch, 0xab ; ret
0x0000000000435fda : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430a1e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435fd3 : cmc ; mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430ba3 : cmc ; mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000479b17 : cmc ; mov rbp, rax ; jmp 0x479ae4
0x0000000000447383 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000004c2d17 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004c7a05 : cmc ; std ; call qword ptr [rax]
0x00000000004c4e99 : cmc ; sub dword ptr [rdi], ecx ; push rbx ; xchg eax, edx ; jae 0x4c4e7e ; push rsi ; pop rdx ; je 0x4c4e73 ; ret 0xacfc
0x0000000000447387 : cmc ; sub eax, edx ; ret
0x00000000004c54a5 : cmc ; xlatb ; ret 0x4e27
0x000000000041a339 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000041a338 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000474730 : cmove eax, eax ; mov dword ptr [rbp - 0x60c], edx ; jmp 0x470a03
0x0000000000449454 : cmove eax, ecx ; pop rbx ; ret
0x000000000047bed1 : cmove eax, ecx ; ret
0x0000000000424a83 : cmove eax, edx ; add rsp, 8 ; ret
0x000000000044941c : cmove eax, edx ; pop rbx ; ret
0x0000000000424bbf : cmove eax, edx ; ret
0x0000000000415d8f : cmove ebp, esp ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000415d8e : cmove ebp, r12d ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000488ad8 : cmove ecx, eax ; mov rax, rcx ; ret
0x000000000044d804 : cmove edx, eax ; xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x000000000047bed0 : cmove r8, rcx ; ret
0x000000000047472f : cmove r8d, eax ; mov dword ptr [rbp - 0x60c], edx ; jmp 0x470a04
0x0000000000449453 : cmove rax, rcx ; pop rbx ; ret
0x0000000000424a82 : cmove rax, rdx ; add rsp, 8 ; ret
0x000000000044941b : cmove rax, rdx ; pop rbx ; ret
0x0000000000424bbe : cmove rax, rdx ; ret
0x0000000000488ad7 : cmove rcx, rax ; mov rax, rcx ; ret
0x000000000044d803 : cmove rdx, rax ; xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x000000000041777b : cmovg eax, ecx ; test rdx, rdx ; jne 0x417779 ; ret
0x000000000047a9eb : cmovg eax, ecx ; test rdx, rdx ; jne 0x47a9e9 ; ret
0x000000000041777a : cmovg rax, rcx ; test rdx, rdx ; jne 0x41777a ; ret
0x000000000047a9ea : cmovg rax, rcx ; test rdx, rdx ; jne 0x47a9ea ; ret
0x00000000004240ba : cmovne eax, ecx ; ret
0x000000000047aab1 : cmovne eax, edx ; mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000417d79 : cmovne eax, edx ; mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004494ac : cmovne eax, edx ; pop rbx ; ret
0x0000000000424abf : cmovne eax, edx ; ret
0x00000000004418c4 : cmovne eax, edx ; vzeroupper ; ret
0x000000000047d4e5 : cmovne esi, edx ; bsr rsi, rsi ; lea rax, [rcx + rsi] ; ret
0x00000000004240b9 : cmovne rax, rcx ; ret
0x00000000004494ab : cmovne rax, rdx ; pop rbx ; ret
0x0000000000424abe : cmovne rax, rdx ; ret
0x00000000004418c3 : cmovne rax, rdx ; vzeroupper ; ret
0x000000000047d4e4 : cmovne rsi, rdx ; bsr rsi, rsi ; lea rax, [rcx + rsi] ; ret
0x000000000045bcfd : cmovns eax, dword ptr [rbx + 0x149f0e7] ; ror byte ptr [rax - 0x77], 1 ; ret 0x894c
0x000000000044e138 : cmovs eax, dword ptr [rbp + 0x480a74d2] ; lea edi, [rcx + rax + 0x20] ; jmp rdx
0x000000000042c458 : cmovs eax, dword ptr [rbx + 0x148f0e7] ; retf 0x8348
0x00000000004525cc : cmovs eax, edx ; ret
0x00000000004a9478 : cmovs ecx, dword ptr [rcx + 0x1bffe] ; add byte ptr [rax], al ; jmp rax
0x000000000047bc38 : cmovs edi, dword ptr [rcx] ; int1 ; jne 0x47bc39 ; lea eax, [rdx + rdi] ; ret
0x00000000004493fe : cmovs esp, dword ptr [rbx + 0xc] ; xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x0000000000449490 : cmovs esp, dword ptr [rbx + 4] ; xchg eax, esi ; add rax, rsi ; jmp rax
0x0000000000447e98 : cmp ah, byte ptr [rbx - 0x27] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000043f13a : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043fc9a : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043f47a : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000043ec5a : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000043f7ba : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043ef9a : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e77a : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000043f95a : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000043eaba : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043ebf0 : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f8f0 : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f410 : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043fc30 : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ef30 : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000043ea50 : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f750 : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x00000000004cec5c : cmp al, 0 ; add byte ptr [rax], al ; and al, 0x6d ; add byte ptr [rax], al ; loop 0x4cec6b ; jmp qword ptr [rax]
0x00000000004ce7c4 : cmp al, 0 ; add byte ptr [rax], al ; mov word ptr [rax], gs ; add byte ptr [rsi + rbp - 7], dh ; call qword ptr [rsi]
0x0000000000402550 : cmp al, 0 ; add byte ptr [rax], al ; nop dword ptr [rax] ; xor edi, edi ; mov eax, edx ; syscall
0x00000000004a3cb0 : cmp al, 0x23 ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x00000000004573f2 : cmp al, 0x24 ; add byte ptr [rcx - 0x77], al ; ret
0x00000000004512e2 : cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x0000000000417947 : cmp al, 0x24 ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000417936 : cmp al, 0x24 ; call 0x413bc4
0x00000000004a957e : cmp al, 0x24 ; lea r14, [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x000000000047dee3 : cmp al, 0x24 ; lea r9, [rsp + 0x38] ; lea rcx, [rax + 1] ; call rbx
0x00000000004a95cd : cmp al, 0x24 ; mov rdx, qword ptr [rbp] ; call r12
0x00000000004bf784 : cmp al, 0x2c ; sti ; jmp qword ptr [rdi]
0x00000000004a8a9c : cmp al, 0x31 ; or byte ptr [rbp + 4], dh ; mov qword ptr [rax], rdx ; ret
0x00000000004a8a2d : cmp al, 0x32 ; or byte ptr [rbp + 0x1a], dh ; mov rax, qword ptr [rax] ; ret
0x00000000004c4120 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004ae1c0 : cmp al, 0x53 ; cmc ; jmp rax
0x00000000004c3023 : cmp al, 0x66 ; movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x00000000004c5b0b : cmp al, 0x93 ; in al, dx ; retf 0xae32
0x000000000045bde1 : cmp al, 0xb3 ; add rdi, r11 ; jmp rdi
0x000000000040e869 : cmp al, 0xba ; add rdi, r10 ; jmp rdi
0x000000000042edb0 : cmp al, 0xe ; or byte ptr [rax], al ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004afe89 : cmp al, 0xf8 ; call qword ptr [rax + 0x20fff83e]
0x00000000004afec9 : cmp al, 0xf8 ; call qword ptr [rax]
0x00000000004afe69 : cmp al, 0xf8 ; call rax
0x000000000044d0bd : cmp al, 0xff ; dec dword ptr [rax - 0x7f] ; ret
0x00000000004afec1 : cmp al, bh ; call qword ptr [rax]
0x0000000000447846 : cmp al, byte ptr [rsi - 1] ; jne 0x44786c ; xor eax, eax ; ret
0x00000000004476ee : cmp al, byte ptr [rsi - 1] ; jne 0x447870 ; xor eax, eax ; ret
0x000000000044785f : cmp al, cl ; jne 0x447870 ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000042c6b6 : cmp al, dh ; ret
0x00000000004afec0 : cmp al, dil ; call qword ptr [rax]
0x000000000042c6b5 : cmp al, r14b ; ret
0x00000000004a6816 : cmp bh, 0x10 ; jne 0x4a683f ; xor eax, eax ; ret
0x00000000004a99b6 : cmp bh, 0x10 ; jne 0x4a99d5 ; xor eax, eax ; ret
0x00000000004aa816 : cmp bh, 0x10 ; jne 0x4aa835 ; xor eax, eax ; ret
0x00000000004ab286 : cmp bh, 0x10 ; jne 0x4ab2af ; xor eax, eax ; ret
0x00000000004a67fe : cmp bh, 0x30 ; jne 0x4a6844 ; mov rax, qword ptr [rsi + 0xb0] ; ret
0x00000000004a999c : cmp bh, 0x30 ; jne 0x4a99d1 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x00000000004aa7fc : cmp bh, 0x30 ; jne 0x4aa831 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x00000000004a994c : cmp bh, 3 ; mov eax, 4 ; jne 0x4a997b ; ret
0x00000000004a9971 : cmp bh, 4 ; jne 0x4a998f ; mov eax, 8 ; ret
0x00000000004afec5 : cmp bh, al ; call qword ptr [rax]
0x00000000004afe65 : cmp bh, al ; call rax
0x00000000004cdfb8 : cmp bh, bl ; std ; jmp qword ptr [rdi]
0x00000000004afd4c : cmp bl, 0xf7 ; call rax
0x00000000004c8828 : cmp bl, ch ; jmp qword ptr [rax]
0x0000000000411b22 : cmp byte ptr [r8 - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000041366f : cmp byte ptr [rax + 0x29], cl ; ret
0x0000000000481073 : cmp byte ptr [rax + 0x29], cl ; ret 0x8d49
0x00000000004117ee : cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000414119 : cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x00000000004029bb : cmp byte ptr [rax + 0x39], cl ; ret 0x4f76
0x0000000000495b7e : cmp byte ptr [rax + 0x39], cl ; retf
0x000000000042c6f7 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x000000000047a225 : cmp byte ptr [rax + 1], cl ; ret
0x0000000000479cb0 : cmp byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000045a01f : cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000045ca47 : cmp byte ptr [rax - 0x73], cl ; dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x0000000000452c18 : cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000048bee5 : cmp byte ptr [rax - 0x75], cl ; and al, 0x40 ; add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000048be73 : cmp byte ptr [rax - 0x75], cl ; and al, 0x40 ; add rsp, 0x58 ; jmp qword ptr [rax]
0x0000000000455133 : cmp byte ptr [rax - 0x75], cl ; je 0x455168 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x00000000004574a4 : cmp byte ptr [rax - 0x75], cl ; je 0x4574d9 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x00000000004586e4 : cmp byte ptr [rax - 0x75], cl ; je 0x458719 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000045cbc4 : cmp byte ptr [rax - 0x75], cl ; jl 0x45cbf5 ; and byte ptr [rax + 1], cl ; ret
0x0000000000411b23 : cmp byte ptr [rax - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x00000000004884f9 : cmp byte ptr [rax - 0x77], cl ; retf
0x00000000004123b0 : cmp byte ptr [rax - 0x77], cl ; retf 0x775
0x0000000000497b6f : cmp byte ptr [rax - 0x77], cl ; xlatb ; mov byte ptr [rsi], al ; jne 0x497b5b ; mov rax, rsi ; ret
0x0000000000479a56 : cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000454524 : cmp byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000042c6e6 : cmp byte ptr [rax], ah ; ret
0x00000000004cbf74 : cmp byte ptr [rax], al ; add al, ch ; fdivrp st(6) ; call qword ptr [rax]
0x0000000000417db3 : cmp byte ptr [rax], al ; je 0x417dc5 ; ret
0x00000000004a899f : cmp byte ptr [rax], al ; je 0x4a89c8 ; add rsp, 0x18 ; ret
0x0000000000447e32 : cmp byte ptr [rax], al ; retf 0xf66
0x0000000000441460 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x000000000042c6d6 : cmp byte ptr [rax], dl ; ret
0x000000000042c6d5 : cmp byte ptr [rax], r10b ; ret
0x000000000042c6e5 : cmp byte ptr [rax], r12b ; ret
0x000000000044145f : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000004d0ce1 : cmp byte ptr [rbx + 0x2030d07], al ; cld ; ret
0x00000000004d0d15 : cmp byte ptr [rbx + 0x2030d07], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004d0cad : cmp byte ptr [rbx + 0x3030d07], al ; or al, byte ptr [rcx] ; ret
0x00000000004a64b8 : cmp byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x0000000000417135 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040edb6 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000417430 : cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000004d0d03 : cmp byte ptr [rbx + rax*4 + 7], al ; or rax, 0x1370303 ; ret
0x00000000004d0c9b : cmp byte ptr [rbx + rax*4 + 7], al ; or rax, 0x34b0303 ; ret
0x00000000004d0ccf : cmp byte ptr [rbx + rax*4 + 7], al ; or rax, 0x35b0303 ; ret
0x00000000004c963c : cmp byte ptr [rbx - 0x1ff1b5f9], al ; add dword ptr [rdx], eax ; retf
0x000000000047b960 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x0000000000417deb : cmp byte ptr [rcx + rcx*4 + 0x63], cl ; mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a8a9b : cmp byte ptr [rcx + rsi], 8 ; jne 0x4a8aae ; mov qword ptr [rax], rdx ; ret
0x000000000040526b : cmp byte ptr [rcx - 0x75], al ; push rdi ; adc al, 0xf ; retf 0xfa83
0x000000000045f79c : cmp byte ptr [rcx - 0x75], cl ; push rdi ; and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000459d47 : cmp byte ptr [rcx - 0x77], cl ; push rsi ; sub byte ptr [rax - 0x3f], cl ; retf
0x000000000048a3c6 : cmp byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00000000004a8a40 : cmp byte ptr [rdi + rsi + 0xd8], 0 ; je 0x4a8a30 ; ret
0x00000000004d0e74 : cmp byte ptr [rdi - 0x5d180000], cl ; sti ; jmp qword ptr [rsi]
0x0000000000417d78 : cmp byte ptr [rdi], cl ; ret 0x389
0x000000000042dfdd : cmp byte ptr [rdi], dl ; ret
0x000000000042eaf0 : cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042ead9 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042eac2 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042d57e : cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004a8a2c : cmp byte ptr [rdx + rsi], 8 ; jne 0x4a8a55 ; mov rax, qword ptr [rax] ; ret
0x0000000000498334 : cmp byte ptr [rdx - 0x76b80000], dl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000004d2ae8 : cmp byte ptr [rdx - 3], ch ; call qword ptr [rbx]
0x00000000004afbf0 : cmp byte ptr [rdx], cl ; clc ; inc dword ptr [rax] ; or al, 0xf8 ; jmp rax
0x00000000004c8c74 : cmp byte ptr [rip + 0x74a80000], cl ; hlt ; jmp qword ptr [rax]
0x00000000004d2574 : cmp byte ptr [rsi + 0x3e780000], ah ; std ; call qword ptr [rdx]
0x0000000000456354 : cmp ch, al ; add eax, 0x2d8ba00 ; add byte ptr [rax], al ; call 0x402e1b
0x0000000000477f1e : cmp cl, 0xff ; dec dword ptr [rax + 0x6b] ; ret
0x00000000004a7fd4 : cmp cl, 0xff ; dec dword ptr [rcx + 0x31] ; retf 0x8948
0x0000000000447ee5 : cmp cl, byte ptr [rax + 0x63] ; leave ; lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x00000000004a4592 : cmp cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x000000000042f1c1 : cmp cl, byte ptr [rdi] ; retf 0x6601
0x000000000042f311 : cmp cl, byte ptr [rdi] ; retf 0x6602
0x000000000042f461 : cmp cl, byte ptr [rdi] ; retf 0x6603
0x000000000042f5b1 : cmp cl, byte ptr [rdi] ; retf 0x6604
0x000000000042f701 : cmp cl, byte ptr [rdi] ; retf 0x6605
0x000000000042f851 : cmp cl, byte ptr [rdi] ; retf 0x6606
0x000000000042f9a1 : cmp cl, byte ptr [rdi] ; retf 0x6607
0x000000000042faf1 : cmp cl, byte ptr [rdi] ; retf 0x6608
0x000000000042fc41 : cmp cl, byte ptr [rdi] ; retf 0x6609
0x000000000042fd91 : cmp cl, byte ptr [rdi] ; retf 0x660a
0x000000000042fee1 : cmp cl, byte ptr [rdi] ; retf 0x660b
0x0000000000430031 : cmp cl, byte ptr [rdi] ; retf 0x660c
0x0000000000430181 : cmp cl, byte ptr [rdi] ; retf 0x660d
0x00000000004302d1 : cmp cl, byte ptr [rdi] ; retf 0x660e
0x0000000000430421 : cmp cl, byte ptr [rdi] ; retf 0x660f
0x00000000004343fa : cmp cl, byte ptr [rdi] ; retf 0xf01
0x000000000043457a : cmp cl, byte ptr [rdi] ; retf 0xf02
0x00000000004346fa : cmp cl, byte ptr [rdi] ; retf 0xf03
0x000000000043487a : cmp cl, byte ptr [rdi] ; retf 0xf04
0x00000000004349fa : cmp cl, byte ptr [rdi] ; retf 0xf05
0x0000000000434b7a : cmp cl, byte ptr [rdi] ; retf 0xf06
0x0000000000434cfa : cmp cl, byte ptr [rdi] ; retf 0xf07
0x0000000000434e7a : cmp cl, byte ptr [rdi] ; retf 0xf08
0x0000000000434ffa : cmp cl, byte ptr [rdi] ; retf 0xf09
0x000000000043517a : cmp cl, byte ptr [rdi] ; retf 0xf0a
0x00000000004352fa : cmp cl, byte ptr [rdi] ; retf 0xf0b
0x000000000043547a : cmp cl, byte ptr [rdi] ; retf 0xf0c
0x00000000004355fa : cmp cl, byte ptr [rdi] ; retf 0xf0d
0x000000000043577a : cmp cl, byte ptr [rdi] ; retf 0xf0e
0x00000000004358fa : cmp cl, byte ptr [rdi] ; retf 0xf0f
0x00000000004c5ee6 : cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x0000000000405b27 : cmp cl, ch ; ret 0xfffb
0x00000000004418c1 : cmp dh, byte ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x000000000044933a : cmp dh, byte ptr [rdx + 2] ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000044fc11 : cmp di, word ptr [rip + 0x2885d4] ; je 0x44fbd3 ; call 0x45c6bb
0x00000000004a6815 : cmp dil, 0x10 ; jne 0x4a6840 ; xor eax, eax ; ret
0x00000000004a99b5 : cmp dil, 0x10 ; jne 0x4a99d6 ; xor eax, eax ; ret
0x00000000004aa815 : cmp dil, 0x10 ; jne 0x4aa836 ; xor eax, eax ; ret
0x00000000004ab285 : cmp dil, 0x10 ; jne 0x4ab2b0 ; xor eax, eax ; ret
0x00000000004a999b : cmp dil, 0x30 ; jne 0x4a99d2 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x00000000004aa7fb : cmp dil, 0x30 ; jne 0x4aa832 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x00000000004a994b : cmp dil, 3 ; mov eax, 4 ; jne 0x4a997c ; ret
0x00000000004a9970 : cmp dil, 4 ; jne 0x4a9990 ; mov eax, 8 ; ret
0x00000000004b0a80 : cmp dl, 0xf8 ; call rax
0x0000000000448281 : cmp dl, 1 ; ja 0x4482b8 ; jb 0x448299 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004485e1 : cmp dl, 1 ; ja 0x44862d ; jb 0x4485f9 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000448a31 : cmp dl, 1 ; ja 0x448a95 ; jb 0x448a49 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000449000 : cmp dl, 1 ; ja 0x449023 ; jb 0x449012 ; mov byte ptr [rdi], cl ; ret
0x000000000044916e : cmp dl, 1 ; ja 0x4491ab ; jb 0x449183 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000449336 : cmp dl, 1 ; ja 0x449381 ; jb 0x44934b ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000043988b : cmp dl, 1 ; jb 0x43989d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447ffa : cmp dl, 1 ; jb 0x448008 ; mov byte ptr [rdi], cl ; ret
0x0000000000447fed : cmp dl, 2 ; jb 0x448006 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000447fe2 : cmp dl, 4 ; jb 0x447ff7 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000424125 : cmp dl, al ; jne 0x424118 ; sub rax, 0x10 ; ret
0x0000000000424bd2 : cmp dl, byte ptr [rbx + 0x2b] ; add bh, dh ; ret 0
0x0000000000424124 : cmp dl, r8b ; jne 0x424119 ; sub rax, 0x10 ; ret
0x000000000047b908 : cmp dword ptr [rax + 0x30], 0 ; je 0x47b917 ; ret
0x000000000042afd7 : cmp dword ptr [rax + rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042b7b7 : cmp dword ptr [rax + rax], ecx ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000040fd61 : cmp dword ptr [rax - 0x39], ecx ; ret
0x0000000000435b18 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000004a899d : cmp dword ptr [rcx + 0x38], 0 ; je 0x4a89ca ; add rsp, 0x18 ; ret
0x000000000041a335 : cmp dword ptr [rdi + 0x10], eax ; cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000417db1 : cmp dword ptr [rdi + 0x38], 0 ; je 0x417dc7 ; ret
0x00000000004258c1 : cmp dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000418d15 : cmp dword ptr [rdx], ecx ; je 0x418d34 ; cmp rsi, rcx ; jne 0x418d1c ; lea eax, [rdx + rdi] ; ret
0x000000000047bc35 : cmp dword ptr [rdx], ecx ; je 0x47bc54 ; cmp rcx, rsi ; jne 0x47bc3c ; lea eax, [rdx + rdi] ; ret
0x00000000004a3154 : cmp dword ptr [rip + 0x233e1d], 0 ; jne 0x4a3169 ; pop rbx ; ret
0x0000000000413bc1 : cmp dword ptr [rip + 0x2c33e0], 0 ; je 0x413bd6 ; ret
0x0000000000480030 : cmp dword ptr [rsi], eax ; je 0x480133 ; xor eax, eax ; leave ; ret
0x00000000004b0761 : cmp eax, -1 ; add al, byte ptr [rbx - 0x7d8d0008] ; clc ; jmp rdx
0x0000000000424a7f : cmp eax, -1 ; cmove rax, rdx ; add rsp, 8 ; ret
0x0000000000489c4f : cmp eax, -1 ; cmove rax, rdx ; ret
0x00000000004b0765 : cmp eax, -1 ; jb 0x4b06f2 ; clc ; jmp rdx
0x000000000047b926 : cmp eax, -1 ; je 0x47b939 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b081d : cmp eax, -1 ; je 0x4b07ab ; clc ; jmp rsp
0x0000000000418cce : cmp eax, -1 ; jne 0x418c9a ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004b06e1 : cmp eax, -1 ; xor byte ptr [rbx - 0x7d5f0008], al ; clc ; call qword ptr [rax]
0x000000000048bdbc : cmp eax, -3 ; jbe 0x48bdce ; ret
0x000000000044ef52 : cmp eax, 0x16 ; ja 0x44efac ; movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x000000000044e22d : cmp eax, 0x1e ; ja 0x44e260 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000004a3155 : cmp eax, 0x233e1d ; add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x00000000004a3de5 : cmp eax, 0x2343d6 ; call 7
0x00000000004a3d2e : cmp eax, 0x23448d ; call 7
0x00000000004a3cfe : cmp eax, 0x2344bd ; call 7
0x00000000004a3547 : cmp eax, 0x234c74 ; call 7
0x00000000004a351f : cmp eax, 0x234c9c ; mov qword ptr [rsp + 8], rsi ; call 0xc
0x0000000000462889 : cmp eax, 0x271e92 ; mov rax, qword ptr [rdi + rax*8] ; jmp rax
0x000000000044fc13 : cmp eax, 0x2885d4 ; je 0x44fbd1 ; call 0x45c6b9
0x0000000000413bc2 : cmp eax, 0x2c33e0 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000404b5a : cmp eax, 0x2d2400 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000487af2 : cmp eax, 0x39463 ; mov eax, 0x15 ; syscall
0x0000000000486bdc : cmp eax, 0x3a08f ; mov edx, 0x21c ; call 0x402e1c
0x0000000000486d60 : cmp eax, 0x3a093 ; movsxd rax, dword ptr [rdi + r12*4] ; add rax, rdi ; jmp rax
0x00000000004afe29 : cmp eax, 0x3f40fff8 ; clc ; call rax
0x00000000004afde9 : cmp eax, 0x3f90fff8 ; clc ; jmp qword ptr [rax]
0x000000000047fab8 : cmp eax, 0x410000 ; je 0x47faf4 ; mov eax, 0x101 ; syscall
0x0000000000478ee8 : cmp eax, 0x46dff ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000043186f : cmp eax, 0x490007e5 ; movsxd rdx, dword ptr [rbx + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000456353 : cmp eax, 0x5c538 ; mov edx, 0x2d8 ; call 0x402e1c
0x000000000044db0f : cmp eax, 0x63bd1 ; mov eax, 0x15 ; syscall
0x00000000004c4001 : cmp eax, 0x7170d773 ; mov ebp, 0xfb67d10d ; ret
0x000000000044ba62 : cmp eax, 0x7d8b48 ; call r12
0x000000000044df2f : cmp eax, 0x83482f74 ; ret
0x000000000044dd56 : cmp eax, 0x83497174 ; ret
0x000000000047d644 : cmp eax, 0x89000001 ; ret 0x8948
0x00000000004568c2 : cmp eax, 0x89fffff3 ; retf 0xe283
0x00000000004cbccd : cmp eax, 0x9e000000 ; cmc ; jmp qword ptr [rbx]
0x00000000004cbce5 : cmp eax, 0x9e180000 ; cmc ; jmp qword ptr [rbx]
0x000000000040e579 : cmp eax, 0x9fd22 ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x00000000004c340b : cmp eax, 0xaf6a2574 ; xlatb ; out 0xb3, al ; retf 0xe80
0x0000000000417a59 : cmp eax, 0xd8af8b48 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0x8c20
0x00000000004b08ed : cmp eax, 0xf86400ff ; jmp qword ptr [rax]
0x00000000004b08ad : cmp eax, 0xf88140ff ; jmp rax
0x00000000004b072d : cmp eax, 0xf8817cff ; jmp qword ptr [rdx]
0x00000000004b0871 : cmp eax, 0xf888f0ff ; push qword ptr [rax - 0x78] ; clc ; jmp rax
0x00000000004b0731 : cmp eax, 0xf88922ff ; jmp qword ptr [rdx + 0x12fff888]
0x00000000004b06b1 : cmp eax, 0xf88950ff ; call rax
0x000000000044a8d6 : cmp eax, 0xfffff000 ; ja 0x44a8e8 ; ret
0x000000000044a924 : cmp eax, 0xfffff000 ; ja 0x44a938 ; ret
0x000000000044ab2f : cmp eax, 0xfffff000 ; ja 0x44ab98 ; ret
0x000000000044abc5 : cmp eax, 0xfffff000 ; ja 0x44abd8 ; ret
0x000000000044ac02 : cmp eax, 0xfffff000 ; ja 0x44ac68 ; ret
0x000000000044ac98 : cmp eax, 0xfffff000 ; ja 0x44acb0 ; ret
0x000000000044acc8 : cmp eax, 0xfffff000 ; ja 0x44ace0 ; ret
0x000000000044aed2 : cmp eax, 0xfffff000 ; ja 0x44af20 ; ret
0x000000000044af48 : cmp eax, 0xfffff000 ; ja 0x44af60 ; ret
0x000000000044b6a1 : cmp eax, 0xfffff000 ; ja 0x44b6b8 ; ret
0x000000000045c9ce : cmp eax, 0xfffff000 ; ja 0x45c9e8 ; ret
0x000000000047f8d6 : cmp eax, 0xfffff000 ; ja 0x47f8e8 ; ret
0x000000000047f92a : cmp eax, 0xfffff000 ; ja 0x47f940 ; ret
0x000000000044a848 : cmp eax, 0xfffff001 ; jae 0x44a857 ; ret
0x000000000044b768 : cmp eax, 0xfffff001 ; jae 0x44b777 ; ret
0x000000000044b908 : cmp eax, 0xfffff001 ; jae 0x44b917 ; ret
0x000000000044b938 : cmp eax, 0xfffff001 ; jae 0x44b947 ; ret
0x000000000044b968 : cmp eax, 0xfffff001 ; jae 0x44b977 ; ret
0x000000000044d77b : cmp eax, 0xfffff001 ; jae 0x44d78a ; ret
0x000000000044d7a8 : cmp eax, 0xfffff001 ; jae 0x44d7b7 ; ret
0x000000000047f858 : cmp eax, 0xfffff001 ; jae 0x47f867 ; ret
0x00000000004a3e58 : cmp eax, 0xfffff001 ; jae 0x4a3e67 ; ret
0x00000000004499b6 : cmp eax, 1 ; je 0x4499dc ; cmp eax, 2 ; je 0x4499d4 ; xor eax, eax ; ret
0x00000000004499bb : cmp eax, 2 ; je 0x4499cf ; xor eax, eax ; ret
0x000000000044d8ea : cmp eax, 4 ; je 0x44d8f5 ; ret
0x00000000004582e5 : cmp eax, dword ptr [rdi + rcx - 0x4a] ; add cl, byte ptr [rax - 0x73] ; add rcx, qword ptr [rax + 0x39] ; retf
0x000000000044db11 : cmp eax, dword ptr [rsi] ; add byte ptr [rax + 0x15], bh ; syscall
0x00000000004c52d7 : cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x000000000048b24b : cmp eax, eax ; je 0x48b1a1 ; sub eax, r8d ; ret
0x0000000000417778 : cmp eax, ecx ; cmovg rax, rcx ; test rdx, rdx ; jne 0x41777c ; ret
0x000000000047a9e8 : cmp eax, ecx ; cmovg rax, rcx ; test rdx, rdx ; jne 0x47a9ec ; ret
0x00000000004790ab : cmp eax, ecx ; jg 0x4790c8 ; add eax, edi ; mov rdx, r8 ; jmp 0x479087
0x0000000000447e4f : cmp eax, ecx ; jle 0x447e8f ; movsxd rax, ecx ; ret
0x0000000000447642 : cmp eax, ecx ; jne 0x44785a ; xor eax, eax ; ret
0x00000000004477aa : cmp eax, ecx ; jne 0x44786f ; xor eax, eax ; ret
0x0000000000447863 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000000004afe41 : cmp eax, edi ; call qword ptr [rax]
0x00000000004afe61 : cmp eax, edi ; call rax
0x0000000000419abb : cmp eax, edx ; jae 0x419ae7 ; movzx eax, byte ptr [rax] ; ret
0x000000000041065f : cmp eax, edx ; jbe 0x410623 ; mov r11d, 1 ; jmp 0x410638
0x000000000045ea77 : cmp eax, edx ; jbe 0x45ea3b ; mov r11d, 1 ; jmp 0x45ea50
0x000000000044d820 : cmp eax, edx ; jne 0x44d836 ; nop ; mov eax, 0xca ; syscall
0x00000000004a3684 : cmp eax, esi ; je 0x4a3695 ; ret
0x000000000046496f : cmp eax, esp ; je 0x4647a6 ; jmp 0x464944
0x000000000046496e : cmp eax, r12d ; je 0x4647a7 ; jmp 0x464945
0x00000000004790aa : cmp eax, r9d ; jg 0x4790c9 ; add eax, edi ; mov rdx, r8 ; jmp 0x479088
0x00000000004a34fe : cmp ebp, eax ; je 0x4a351c ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000457f6c : cmp ebp, ebx ; jb 0x457fde ; mov rdx, rax ; jmp 0x457f35
0x000000000044d886 : cmp ebx, 0xa ; je 0x44d891 ; ret
0x000000000041ef45 : cmp ebx, eax ; jb 0x41ef33 ; mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x000000000044ee9e : cmp ebx, eax ; setne dl ; jmp 0x44ee8a
0x000000000047dd65 : cmp ecx, 0xc00 ; je 0x47dd79 ; ret
0x000000000044dab1 : cmp ecx, dword ptr [rax + 0x10] ; jae 0x44daa6 ; ret
0x00000000004a2abe : cmp ecx, dword ptr [rax - 0x3f] ; loop 0x4a2acf ; add rdx, rax ; jmp 0x4a2ad8
0x000000000048c888 : cmp ecx, dword ptr [rax - 0x77] ; retf 0xfe8
0x00000000004503a2 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000047b3e4 : cmp ecx, dword ptr [rbp - 0x75] ; mov ch, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0x8c20
0x0000000000489c98 : cmp ecx, dword ptr [rdi + rsi] ; jae 0x489c48 ; xor eax, eax ; ret
0x0000000000457162 : cmp ecx, dword ptr [rdi] ; mov dh, 0x7a ; add cl, byte ptr [rax - 0x73] ; add rcx, qword ptr [rax + 0x39] ; retf
0x00000000004a3a51 : cmp ecx, dword ptr [rdx + 0x28] ; jae 0x4a3a3a ; mov eax, 1 ; ret
0x000000000047bece : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000042eb0b : cmp ecx, eax ; jne 0x42eb39 ; xor eax, eax ; ret
0x000000000042e0ff : cmp ecx, eax ; jne 0x42eb3d ; xor eax, eax ; ret
0x000000000042e127 : cmp ecx, eax ; jne 0x42eb49 ; xor eax, eax ; ret
0x0000000000488a28 : cmp ecx, eax ; jne 0x4889d2 ; mov eax, dword ptr [rdx + 4] ; ret
0x0000000000495a28 : cmp ecx, eax ; sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x0000000000497592 : cmp ecx, ecx ; ret
0x000000000047bc3a : cmp ecx, esi ; jne 0x47bc37 ; lea eax, [rdx + rdi] ; ret
0x0000000000488a16 : cmp ecx, esi ; jne 0x4889f5 ; ret
0x000000000044fc12 : cmp edi, dword ptr [rip + 0x2885d4] ; je 0x44fbd2 ; call 0x45c6ba
0x00000000004afde5 : cmp edi, eax ; call qword ptr [rax - 0x6f0007c3]
0x00000000004afe45 : cmp edi, eax ; call qword ptr [rax]
0x000000000047c93f : cmp edi, eax ; dec dword ptr [rax + 1] ; ret
0x00000000004afe25 : cmp edi, eax ; inc dword ptr [rax + 0x3d] ; clc ; inc dword ptr [rax + 0x3f] ; clc ; call rax
0x00000000004678e0 : cmp edi, eax ; ja 0x4678c7 ; mov eax, r9d ; ret
0x000000000045ac1e : cmp edi, ebp ; je 0x45ac33 ; call 0x4213dc
0x000000000047fc4e : cmp edi, edx ; ja 0x47fc7d ; ret
0x0000000000448202 : cmp edi, edx ; jb 0x44820f ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004678df : cmp edi, r8d ; ja 0x4678c8 ; mov eax, r9d ; ret
0x000000000044944d : cmp edx, 0xff ; cmove rax, rcx ; pop rbx ; ret
0x000000000042cb35 : cmp edx, eax ; jbe 0x42cbaa ; add rax, rdi ; vzeroupper ; ret
0x000000000042096a : cmp edx, eax ; jne 0x420935 ; ret
0x00000000004a2146 : cmp edx, ecx ; ja 0x4a213c ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000448feb : cmp edx, ecx ; jne 0x448fd8 ; ret
0x0000000000449152 : cmp edx, ecx ; jne 0x44913e ; vzeroupper ; ret
0x0000000000449315 : cmp edx, ecx ; jne 0x4492f9 ; vzeroupper ; ret
0x000000000044d80a : cmp edx, edi ; setae al ; ret
0x000000000047e6b6 : cmp edx, esi ; je 0x47e6c7 ; test edx, edx ; jne 0x47e6b9 ; ret
0x0000000000419af9 : cmp esi, -1 ; setne al ; neg eax ; ret
0x000000000045a194 : cmp esi, 3 ; je 0x45a1a6 ; ret
0x00000000004485e5 : cmp esi, dword ptr [rdx + 5] ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004c54a4 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x0000000000418d1a : cmp esi, ecx ; jne 0x418d17 ; lea eax, [rdx + rdi] ; ret
0x00000000004070bb : cmp esp, edx ; ja 0x4070a0 ; mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a899c : cmp qword ptr [r9 + 0x38], 0 ; je 0x4a89cb ; add rsp, 0x18 ; ret
0x000000000047b907 : cmp qword ptr [rax + 0x30], 0 ; je 0x47b918 ; ret
0x0000000000417db0 : cmp qword ptr [rdi + 0x38], 0 ; je 0x417dc8 ; ret
0x00000000004a3153 : cmp qword ptr [rip + 0x233e1d], 0 ; jne 0x4a316a ; pop rbx ; ret
0x0000000000413bc0 : cmp qword ptr [rip + 0x2c33e0], 0 ; je 0x413bd7 ; ret
0x000000000048002f : cmp qword ptr [rsi], rax ; je 0x480134 ; xor eax, eax ; leave ; ret
0x000000000044d885 : cmp r11d, 0xa ; je 0x44d892 ; ret
0x00000000004070ba : cmp r12, rdx ; ja 0x4070a1 ; mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000457f6b : cmp r13, r11 ; jb 0x457fdf ; mov rdx, rax ; jmp 0x457f36
0x000000000048b24a : cmp r8d, eax ; je 0x48b1a2 ; sub eax, r8d ; ret
0x000000000044a8d5 : cmp rax, -0x1000 ; ja 0x44a8e9 ; ret
0x000000000044a923 : cmp rax, -0x1000 ; ja 0x44a939 ; ret
0x000000000044ab2e : cmp rax, -0x1000 ; ja 0x44ab99 ; ret
0x000000000044abc4 : cmp rax, -0x1000 ; ja 0x44abd9 ; ret
0x000000000044ac01 : cmp rax, -0x1000 ; ja 0x44ac69 ; ret
0x000000000044ac97 : cmp rax, -0x1000 ; ja 0x44acb1 ; ret
0x000000000044acc7 : cmp rax, -0x1000 ; ja 0x44ace1 ; ret
0x000000000044aed1 : cmp rax, -0x1000 ; ja 0x44af21 ; ret
0x000000000044af47 : cmp rax, -0x1000 ; ja 0x44af61 ; ret
0x000000000044b6a0 : cmp rax, -0x1000 ; ja 0x44b6b9 ; ret
0x000000000045c9cd : cmp rax, -0x1000 ; ja 0x45c9e9 ; ret
0x000000000047f8d5 : cmp rax, -0x1000 ; ja 0x47f8e9 ; ret
0x000000000047f929 : cmp rax, -0x1000 ; ja 0x47f941 ; ret
0x00000000004b0870 : cmp rax, -0x7770f01 ; push qword ptr [rax - 0x78] ; clc ; jmp rax
0x000000000044a847 : cmp rax, -0xfff ; jae 0x44a858 ; ret
0x000000000044b767 : cmp rax, -0xfff ; jae 0x44b778 ; ret
0x000000000044b907 : cmp rax, -0xfff ; jae 0x44b918 ; ret
0x000000000044b937 : cmp rax, -0xfff ; jae 0x44b948 ; ret
0x000000000044b967 : cmp rax, -0xfff ; jae 0x44b978 ; ret
0x000000000044d77a : cmp rax, -0xfff ; jae 0x44d78b ; ret
0x000000000044d7a7 : cmp rax, -0xfff ; jae 0x44d7b8 ; ret
0x000000000047f857 : cmp rax, -0xfff ; jae 0x47f868 ; ret
0x00000000004a3e57 : cmp rax, -0xfff ; jae 0x4a3e68 ; ret
0x0000000000424a7e : cmp rax, -1 ; cmove rax, rdx ; add rsp, 8 ; ret
0x0000000000489c4e : cmp rax, -1 ; cmove rax, rdx ; ret
0x000000000048bdbb : cmp rax, -3 ; jbe 0x48bdcf ; ret
0x000000000041065e : cmp rax, r10 ; jbe 0x410624 ; mov r11d, 1 ; jmp 0x410639
0x000000000045ea76 : cmp rax, r10 ; jbe 0x45ea3c ; mov r11d, 1 ; jmp 0x45ea51
0x0000000000419aba : cmp rax, rdx ; jae 0x419ae8 ; movzx eax, byte ptr [rax] ; ret
0x00000000004a3683 : cmp rax, rsi ; je 0x4a3696 ; ret
0x000000000041ef44 : cmp rbx, rax ; jb 0x41ef34 ; mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x000000000044dab0 : cmp rcx, qword ptr [rax + 0x10] ; jae 0x44daa7 ; ret
0x0000000000489c97 : cmp rcx, qword ptr [rdi + rsi] ; jae 0x489c49 ; xor eax, eax ; ret
0x00000000004a3a50 : cmp rcx, qword ptr [rdx + 0x28] ; jae 0x4a3a3b ; mov eax, 1 ; ret
0x000000000047becd : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x0000000000488a27 : cmp rcx, r8 ; jne 0x4889d3 ; mov eax, dword ptr [rdx + 4] ; ret
0x000000000042eb0a : cmp rcx, rax ; jne 0x42eb3a ; xor eax, eax ; ret
0x000000000042e0fe : cmp rcx, rax ; jne 0x42eb3e ; xor eax, eax ; ret
0x0000000000495a27 : cmp rcx, rax ; sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x000000000047bc39 : cmp rcx, rsi ; jne 0x47bc38 ; lea eax, [rdx + rdi] ; ret
0x0000000000488a15 : cmp rcx, rsi ; jne 0x4889f6 ; ret
0x000000000047fc4d : cmp rdi, rdx ; ja 0x47fc7e ; ret
0x0000000000448201 : cmp rdi, rdx ; jb 0x448210 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000420969 : cmp rdx, r8 ; jne 0x420936 ; ret
0x000000000042cb34 : cmp rdx, rax ; jbe 0x42cbab ; add rax, rdi ; vzeroupper ; ret
0x0000000000448fea : cmp rdx, rcx ; jne 0x448fd9 ; ret
0x0000000000448fe9 : cmp rdx, rcx ; jne 0x448fda ; ret
0x0000000000449151 : cmp rdx, rcx ; jne 0x44913f ; vzeroupper ; ret
0x0000000000449314 : cmp rdx, rcx ; jne 0x4492fa ; vzeroupper ; ret
0x000000000044d809 : cmp rdx, rdi ; setae al ; ret
0x0000000000418d19 : cmp rsi, rcx ; jne 0x418d18 ; lea eax, [rdx + rdi] ; ret
0x00000000004418c0 : cmp sil, byte ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x000000000049f587 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049f887 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a0787 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004d2575 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; js 0x4d25be ; std ; call qword ptr [rdx]
0x00000000004a0487 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x000000000042e589 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00000000004005ac : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005b5 ; ret
0x00000000004c34d6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4c34a2 ; mov ecx, 0x5b92ac50 ; retf
0x000000000043f276 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a0187 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049fe87 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000431546 : cmpsb byte ptr [rsi], byte ptr [rdi] ; out 7, al ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004c55f1 : cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x000000000042f945 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add cl, byte ptr [rax] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000041e10d : cmpsd dword ptr [rsi], dword ptr [rdi] ; add eax, 0x83480000 ; retf 0x4901
0x0000000000486d68 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add rax, rdi ; jmp rax
0x00000000004b09c1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; clc ; push rax ; test eax, 0xac00fff8 ; clc ; call qword ptr [rax]
0x0000000000411a59 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x00000000004c2fbf : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov bx, 0xf32d ; retf
0x000000000046e375 : cmpsd dword ptr [rsi], dword ptr [rdi] ; outsb dx, byte ptr [rsi] ; add byte ptr es:[rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x000000000049acad : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 2
0x00000000004c5ff5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; xor byte ptr [rsi + 0x4ce2e5dd], 0x67 ; add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x00000000004a6890 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000041b3ac : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000004a6925 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x9272
0x0000000000411a5a : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000045311f : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004ad92c : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000004ad08c : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x00000000004d17a5 : cwde ; add byte ptr [rax], al ; js 0x4d17fa ; cld ; jmp qword ptr [rcx]
0x00000000004ce5d4 : cwde ; add byte ptr [rax], al ; mov dh, bh ; clc ; call qword ptr [rbx]
0x00000000004a85a5 : cwde ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000403a5b : cwde ; call 0x4004b3
0x00000000004c79d0 : cwde ; int1 ; std ; jmp rax
0x00000000004387d4 : cwde ; jl 0x4387ea ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004b0c38 : cwde ; mov cl, bh ; call rax
0x000000000047215a : cwde ; mov rdx, rax ; jmp 0x472110
0x00000000004ce2d4 : cwde ; movsxd rax, dword ptr [rax] ; add byte ptr [rax], ch ; jrcxz 0x4ce2da ; call qword ptr [rcx]
0x000000000049d0a4 : cwde ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000004c4fab : cwde ; popfq ; jrcxz 0x4c4f72 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x00000000004cd6d4 : cwde ; push rdi ; add byte ptr [rax], al ; mov bh, ah ; std ; jmp qword ptr [rdx]
0x0000000000451199 : cwde ; sub byte ptr [rax], al ; jne 0x4511b1 ; jmp 0x4511cb
0x00000000004b121c : cwde ; xchg eax, esi ; stc ; ljmp [rdx - 0x6a] ; stc ; jmp qword ptr [rdx]
0x0000000000443561 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x0000000000443562 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000448b2d : dec byte ptr [rax + 0x7f] ; jl 0x448b52 ; cld ; vzeroupper ; ret
0x000000000045f6f9 : dec byte ptr [rax - 0x75] ; mov ebp, 0xfffff758 ; call rax
0x000000000048b09f : dec byte ptr [rax - 0x77] ; fisttp word ptr [rax - 0x77] ; ret 0x15e8
0x000000000046a40e : dec byte ptr [rax - 0x77] ; out dx, eax ; call 0x4004cb
0x000000000047c7f0 : dec byte ptr [rax - 0x77] ; ret
0x000000000048b03d : dec byte ptr [rax - 0x7d] ; ret
0x000000000044bbb2 : dec byte ptr [rbx + rcx*4 + 0x5f] ; or byte ptr [rcx - 0xa], al ; ret
0x000000000040f706 : dec byte ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000044c243 : dec byte ptr [rcx + rcx*4 + 0x42] ; adc byte ptr [rax + 9], cl ; retf 0x8948
0x000000000040f2b7 : dec byte ptr [rcx + rcx*4 - 0x11] ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004482b0 : dec byte ptr [rdi] ; mov bh, 0x36 ; mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x000000000048bdb9 : dec dword ptr [r8 - 0x7d] ; clc ; std ; jbe 0x48bdd1 ; ret
0x0000000000458313 : dec dword ptr [r8 - 0x7d] ; ret 0x8801
0x000000000041579e : dec dword ptr [rax + 0x21] ; retf 0x2148
0x00000000004123ed : dec dword ptr [rax + 0x29] ; ret
0x00000000004436a2 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000495d31 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x000000000048f649 : dec dword ptr [rax + 0x29] ; ret 0x894c
0x000000000041f9f5 : dec dword ptr [rax + 0x29] ; ret 0x8d4c
0x00000000004afdaf : dec dword ptr [rax + 0x32] ; clc ; call qword ptr [rax]
0x000000000044c7bd : dec dword ptr [rax + 0x39] ; ret
0x00000000004143ad : dec dword ptr [rax + 0x39] ; ret 0x860f
0x00000000004a4af9 : dec dword ptr [rax + 0x39] ; ret 0xf48
0x000000000041ed95 : dec dword ptr [rax + 0x39] ; retf 0x2a74
0x000000000041ed67 : dec dword ptr [rax + 0x39] ; retf 0x4b74
0x0000000000497aee : dec dword ptr [rax + 0x48e57506] ; mov eax, esi ; ret
0x00000000004ae147 : dec dword ptr [rax + 0x52] ; cmc ; ljmp [rcx] ; push rdx ; cmc ; jmp qword ptr [rax]
0x00000000004c0d9f : dec dword ptr [rax + 0x60fffc5a] ; pop rdx ; cld ; jmp qword ptr [rax]
0x000000000046082c : dec dword ptr [rax + 0x63] ; retf
0x0000000000477f21 : dec dword ptr [rax + 0x6b] ; ret
0x0000000000478ac2 : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8502
0x000000000047d5d9 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x0000000000489c51 : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000424a81 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000047dd89 : dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000045ca4b : dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x0000000000472578 : dec dword ptr [rax + 1] ; ret
0x0000000000474ae8 : dec dword ptr [rax + 1] ; ret 0x348
0x0000000000491969 : dec dword ptr [rax + 1] ; retf 0xc148
0x00000000004b1a4f : dec dword ptr [rax - 0x36] ; stc ; jmp qword ptr [rax]
0x0000000000404333 : dec dword ptr [rax - 0x39] ; ret
0x000000000044a7cf : dec dword ptr [rax - 0x39] ; ret 0
0x000000000044a774 : dec dword ptr [rax - 0x39] ; ret 0x8000
0x000000000045f760 : dec dword ptr [rax - 0x39] ; ret 0x8c20
0x000000000044a6e7 : dec dword ptr [rax - 0x39] ; ret 0xff80
0x000000000046a416 : dec dword ptr [rax - 0x39] ; ret 0xffa0
0x000000000044aa65 : dec dword ptr [rax - 0x39] ; ret 0xffc0
0x000000000044a63c : dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000004a14d1 : dec dword ptr [rax - 0x39] ; sbb byte ptr [r8], al ; add byte ptr [rax], al ; add bl, ch ; ret
0x0000000000466c14 : dec dword ptr [rax - 0x39] ; shl dword ptr [rax], 0x8c ; insd dword ptr [rdi], dx ; add byte ptr [rax - 0x39], cl ; ret 0x92c8
0x00000000004a763f : dec dword ptr [rax - 0x46] ; mov eax, 0xf ; syscall
0x0000000000458224 : dec dword ptr [rax - 0x73] ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000472151 : dec dword ptr [rax - 0x73] ; add dword ptr [rax + r9*4 + 0x2a], eax ; jne 0x4720ff ; mov rdx, rax ; jmp 0x472119
0x00000000004256cd : dec dword ptr [rax - 0x73] ; add eax, 0x221ab ; cmove rax, rdx ; ret
0x0000000000463b0a : dec dword ptr [rax - 0x73] ; jo 0x463b1a ; mov rdi, r12 ; call 0x47fd6a
0x0000000000489e75 : dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000041fe48 : dec dword ptr [rax - 0x73] ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000476315 : dec dword ptr [rax - 0x73] ; xor al, 0xc5 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x4225db
0x00000000004a7b32 : dec dword ptr [rax - 0x75] ; add byte ptr [rcx + 1], cl ; ret 0xef89
0x0000000000411b1f : dec dword ptr [rax - 0x75] ; cmp byte ptr [r8 - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x00000000004aa1c8 : dec dword ptr [rax - 0x75] ; insb byte ptr [rdi], dx ; and al, 8 ; jmp 0x4aa1ea
0x0000000000450b2c : dec dword ptr [rax - 0x75] ; jne 0x450ac6 ; call rsi
0x00000000004ad927 : dec dword ptr [rax - 0x75] ; mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x000000000046ac2b : dec dword ptr [rax - 0x75] ; mov ebp, 0xfffff730 ; call rax
0x00000000004a835f : dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x000000000044be45 : dec dword ptr [rax - 0x75] ; push rdi ; adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000045a048 : dec dword ptr [rax - 0x75] ; xchg eax, ebp ; push 0x4cffffff ; mov edi, esi ; call rdx
0x000000000048bffc : dec dword ptr [rax - 0x77] ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000420af4 : dec dword ptr [rax - 0x77] ; add eax, 0x2b6d64 ; ret
0x00000000004a5ce7 : dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000004897f1 : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004729b8 : dec dword ptr [rax - 0x77] ; fimul dword ptr [rax + 0x29] ; ret 0x8b48
0x0000000000419032 : dec dword ptr [rax - 0x77] ; out 0x31, eax ; shr al, cl ; ret
0x000000000041dd75 : dec dword ptr [rax - 0x77] ; push rsp ; and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000402d9d : dec dword ptr [rax - 0x77] ; ret
0x000000000047fc3e : dec dword ptr [rax - 0x77] ; ret 0x1477
0x0000000000487027 : dec dword ptr [rax - 0x77] ; ret 0x20e8
0x00000000004202ef : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000042569b : dec dword ptr [rax - 0x77] ; ret 0x5ae9
0x000000000047fb9d : dec dword ptr [rax - 0x77] ; ret 0x7577
0x000000000046f7b6 : dec dword ptr [rax - 0x77] ; ret 0x81e8
0x0000000000477f78 : dec dword ptr [rax - 0x77] ; ret 0x840f
0x0000000000478148 : dec dword ptr [rax - 0x77] ; ret 0x850f
0x000000000042006c : dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000004249f7 : dec dword ptr [rax - 0x77] ; ret 0x854d
0x000000000045c872 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x000000000046f4c0 : dec dword ptr [rax - 0x77] ; ret 0x8b44
0x000000000044a566 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000482a0c : dec dword ptr [rax - 0x77] ; ret 0x8d4c
0x0000000000425116 : dec dword ptr [rax - 0x77] ; ret 0x90e9
0x000000000044b8c5 : dec dword ptr [rax - 0x77] ; ret 0xa076
0x000000000044a6c1 : dec dword ptr [rax - 0x77] ; ret 0xa0e9
0x000000000045823d : dec dword ptr [rax - 0x77] ; ret 0xb2eb
0x000000000044a6ad : dec dword ptr [rax - 0x77] ; ret 0xb4e9
0x0000000000425528 : dec dword ptr [rax - 0x77] ; ret 0xb60f
0x000000000046d539 : dec dword ptr [rax - 0x77] ; ret 0xb848
0x000000000048017c : dec dword ptr [rax - 0x77] ; ret 0xefeb
0x0000000000479a5a : dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000406b3f : dec dword ptr [rax - 0x77] ; ret 0xf748
0x00000000004123de : dec dword ptr [rax - 0x77] ; retf
0x00000000004821ac : dec dword ptr [rax - 0x77] ; retf 0x2de9
0x0000000000463984 : dec dword ptr [rax - 0x77] ; retf 0x8948
0x0000000000411d59 : dec dword ptr [rax - 0x77] ; retf 0x894c
0x000000000048210d : dec dword ptr [rax - 0x77] ; retf 0xb60f
0x000000000046e97f : dec dword ptr [rax - 0x77] ; retf 0xc148
0x00000000004ab89c : dec dword ptr [rax - 0x7b] ; in eax, dx ; jne 0x4ab884 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004abaef : dec dword ptr [rax - 0x7b] ; in eax, dx ; jne 0x4abae2 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004ac6a9 : dec dword ptr [rax - 0x7b] ; in eax, dx ; jne 0x4ac69a ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047fd96 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004983ee : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x000000000046b423 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000048bdba : dec dword ptr [rax - 0x7d] ; clc ; std ; jbe 0x48bdd0 ; ret
0x000000000045799a : dec dword ptr [rax - 0x7d] ; jl 0x4579cd ; add byte ptr [rsi + rsi*2 - 0xa], sil ; ret
0x0000000000405a8f : dec dword ptr [rax - 0x7d] ; ret
0x0000000000456041 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000045472b : dec dword ptr [rax - 0x7d] ; ret 0x4804
0x000000000040708b : dec dword ptr [rax - 0x7d] ; ret 0x4901
0x0000000000458314 : dec dword ptr [rax - 0x7d] ; ret 0x8801
0x00000000004a9927 : dec dword ptr [rax - 0x7d] ; ret 0xe902
0x000000000040ecbc : dec dword ptr [rax - 0x7d] ; retf 0xeb0b
0x000000000045ae18 : dec dword ptr [rax - 0x7d] ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000044d0c0 : dec dword ptr [rax - 0x7f] ; ret
0x0000000000435b1c : dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000048137d : dec dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x00000000004aa324 : dec dword ptr [rax - 9] ; ret
0x0000000000459f95 : dec dword ptr [rax - 9] ; ror dword ptr [rax - 0x77], 1 ; retf 0x8348
0x00000000004ae38b : dec dword ptr [rax] ; or esi, esi ; ljmp [rbx - 0x560009f9] ; or dh, dh ; jmp rsp
0x0000000000463664 : dec dword ptr [rbp + 0x63] ; ret 0x20be
0x0000000000457f66 : dec dword ptr [rbp + rcx*4 + 0x5d] ; add al, 0x4d ; cmp ebp, ebx ; jb 0x457fe4 ; mov rdx, rax ; jmp 0x457f3b
0x0000000000406c8b : dec dword ptr [rbp - 0x73] ; je 0x406ca1 ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x0000000000479a21 : dec dword ptr [rbp - 0x75] ; mov esp, 0xd824 ; add byte ptr [rax - 0x39], cl ; ret 0x8c20
0x00000000004698ad : dec dword ptr [rbp - 0x77] ; ret 0x894c
0x0000000000452e9d : dec dword ptr [rbp - 0x77] ; retf
0x000000000045deb6 : dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000425353 : dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x0000000000402114 : dec dword ptr [rbx + 0x2d7e0115] ; add bh, dh ; ret 0
0x00000000004b10bf : dec dword ptr [rbx + 0x7efff996] ; xchg eax, esi ; stc ; push qword ptr [rsi - 0x69] ; stc ; jmp rsi
0x000000000042406d : dec dword ptr [rbx + 0x90c2454] ; ret 0xbae9
0x00000000004ab6b9 : dec dword ptr [rbx + rcx*4 + 0x35] ; lahf ; retf
0x000000000047bb78 : dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x000000000047b10b : dec dword ptr [rbx - 0x3b7cb7fa] ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000471011 : dec dword ptr [rbx - 0x5ff7b] ; inc dword ptr [rcx - 0x77] ; ret 0x8341
0x0000000000473a69 : dec dword ptr [rbx - 0x6277b] ; inc dword ptr [rbp + 0x23850fc0] ; retf
0x0000000000467393 : dec dword ptr [rbx - 0x76b703b0] ; ror dword ptr [rax - 0x7d], 0xe8 ; add al, 0xe9 ; retf 0xfffb
0x00000000004a7f58 : dec dword ptr [rcx + 0x21] ; retf 0x8948
0x00000000004a7f76 : dec dword ptr [rcx + 0x29] ; retf 0x8948
0x00000000004a7fd7 : dec dword ptr [rcx + 0x31] ; retf 0x8948
0x0000000000461ea3 : dec dword ptr [rcx + 0x39] ; ret
0x00000000004635bf : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x00000000004866c9 : dec dword ptr [rcx + 0x39] ; ret 0x860f
0x00000000004a65ca : dec dword ptr [rcx + 0x39] ; retf
0x00000000004a7fe2 : dec dword ptr [rcx + 0x39] ; retf 0x8948
0x000000000046cd45 : dec dword ptr [rcx + 0x63] ; ret
0x000000000046c8c7 : dec dword ptr [rcx + 0x63] ; ret 0x8545
0x000000000046f06e : dec dword ptr [rcx + 0x63] ; retf 0x20be
0x00000000004034cd : dec dword ptr [rcx + 0x63] ; test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x0000000000449472 : dec dword ptr [rcx + 0x6e8c1c8] ; and eax, 0x3fffc00 ; pop rbx ; ret
0x00000000004a7fab : dec dword ptr [rcx + 1] ; retf 0x8948
0x00000000004a7fa0 : dec dword ptr [rcx + 9] ; retf 0x8948
0x0000000000486945 : dec dword ptr [rcx + rax - 0x28] ; call rax
0x000000000045ac26 : dec dword ptr [rcx + rcx*4 + 0x25] ; ret 0x27de
0x000000000040470f : dec dword ptr [rcx + rcx*4 + 0x6d] ; or byte ptr [rcx - 0x77ba7639], 0xe8 ; ret 0x57e
0x0000000000459c1a : dec dword ptr [rcx + rcx*4 - 0x11] ; call r12
0x0000000000450b29 : dec dword ptr [rcx + rcx*4 - 1] ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x000000000045f6f6 : dec dword ptr [rcx + rcx*4 - 2] ; mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x0000000000459d71 : dec dword ptr [rcx + rcx*4 - 9] ; call rbx
0x000000000045a04f : dec dword ptr [rcx + rcx*4 - 9] ; call rdx
0x000000000045f556 : dec dword ptr [rcx - 0x2f42763f] ; idiv bh ; call rax
0x000000000048d655 : dec dword ptr [rcx - 0x39] ; ret
0x000000000046e8a3 : dec dword ptr [rcx - 0x4e773] ; inc dword ptr [rcx + 0x29] ; retf 0x98e9
0x00000000004712e8 : dec dword ptr [rcx - 0x61f43] ; dec dword ptr [rax + 0x39] ; ret
0x000000000041d18c : dec dword ptr [rcx - 0x73] ; and byte ptr [r8 - 0x7d], r9b ; retf
0x00000000004ada26 : dec dword ptr [rcx - 0x73] ; and byte ptr [rax - 0x7d], cl ; retf
0x00000000004a4d57 : dec dword ptr [rcx - 0x73] ; or byte ptr [rax - 0x77], r9b ; ret
0x0000000000456dd2 : dec dword ptr [rcx - 0x75] ; add byte ptr [r8 - 0x77], r9b ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x000000000040f57f : dec dword ptr [rcx - 0x75] ; add byte ptr [r8 - 0x7d], r9b ; ret
0x000000000040cbaf : dec dword ptr [rcx - 0x75] ; or byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; retf 0xffe7
0x0000000000461e07 : dec dword ptr [rcx - 0x77] ; ret
0x0000000000486a10 : dec dword ptr [rcx - 0x77] ; ret 0x13e9
0x0000000000405ad1 : dec dword ptr [rcx - 0x77] ; ret 0x149
0x00000000004873b0 : dec dword ptr [rcx - 0x77] ; ret 0x9be9
0x000000000046c894 : dec dword ptr [rcx - 0x77] ; ret 0xff31
0x000000000041d526 : dec dword ptr [rcx - 0x7b] ; ret
0x000000000048e10c : dec dword ptr [rcx - 0x7d] ; in al, dx ; add dword ptr [rcx + 0xf], eax ; mov esi, 0x8941240c ; retf
0x0000000000461c0f : dec dword ptr [rcx - 0x7d] ; ret
0x00000000004b0523 : dec dword ptr [rcx*4 - 0x73630008] ; clc ; ljmp [rsp + rcx*4] ; clc ; call rdx
0x000000000046210b : dec dword ptr [rdi + rcx + 0x48] ; ret 0x958b
0x00000000004b2037 : dec dword ptr [rdi + rcx*8 - 0x2d360007] ; stc ; call qword ptr [rax]
0x00000000004b201b : dec dword ptr [rdi - 0x2e] ; stc ; call qword ptr [rdi]
0x0000000000471adf : dec dword ptr [rdi] ; lahf ; ret 0xd729
0x0000000000417a30 : dec dword ptr [rdi] ; mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004a761f : dec dword ptr [rdi] ; mov dh, 0x78 ; add cl, byte ptr [rax - 0x7d] ; rol byte ptr [rdx], 0xe9 ; retf 0xfffc
0x00000000004525cb : dec dword ptr [rdi] ; ret 0x41c3
0x0000000000491308 : dec dword ptr [rdi] ; test al, bh ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x0000000000454c2f : dec dword ptr [rdi] ; test byte ptr [rsi - 0x8fffffc], cl ; ret 0
0x00000000004755c5 : dec dword ptr [rdi] ; test dh, bh ; retf
0x000000000044c664 : dec dword ptr [rdi] ; test dword ptr [rax + 0x49000000], edx ; mov edi, dword ptr [rbp] ; call r12
0x000000000044c634 : dec dword ptr [rdi] ; test dword ptr [rax + rax - 0x74b70000], ebx ; jge 0x44c64b ; call r12
0x000000000042d4b6 : dec dword ptr [rdi] ; test dword ptr [rbx - 0x3a000003], esp ; std ; xlatb ; ret 0xe883
0x00000000004476f0 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004613ef : dec dword ptr [rdi] ; test dword ptr [rsi - 0x16000007], esi ; ret
0x0000000000474759 : dec dword ptr [rdi] ; test eax, eax ; retf
0x0000000000487b0a : dec dword ptr [rdi] ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000461b77 : dec dword ptr [rdi] ; xchg byte ptr [rdx], ah ; and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x00000000004225fc : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd020
0x0000000000419afb : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000470946 : dec dword ptr [rdx + 0x63] ; add al, 0xa2 ; add rax, rdx ; jmp rax
0x00000000004b086f : dec dword ptr [rdx - 0x7f] ; clc ; push rax ; mov al, bh ; push qword ptr [rax - 0x78] ; clc ; jmp rax
0x000000000045e40d : dec dword ptr [rip + 0x27bccd] ; jne 0x45e42b ; jmp 0x45e445
0x0000000000451196 : dec dword ptr [rip + 0x2898d4] ; jne 0x4511b4 ; jmp 0x4511ce
0x00000000004b11db : dec eax ; xchg eax, ebp ; stc ; jmp qword ptr [rdx]
0x00000000004b203b : dec ecx ; sar cl, cl ; call qword ptr [rax]
0x000000000045cf68 : dec qword ptr [r13 - 0x77] ; retf
0x00000000004436a1 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x0000000000491968 : dec qword ptr [rax + 1] ; retf 0xc148
0x00000000004ca44d : div ah ; call qword ptr [rdi]
0x00000000004afd3d : div bh ; call qword ptr [rax - 0x1f000809]
0x000000000047d7c2 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x0000000000488a75 : div byte ptr [rbx + rax + 0x48] ; mov dword ptr [rsi], edi ; mov rax, rcx ; ret
0x000000000045a191 : div byte ptr [rsp + rcx - 0x7d] ; inc byte ptr [rbx] ; je 0x45a1a9 ; ret
0x00000000004afd3c : div dil ; call qword ptr [rax - 0x1f000809]
0x0000000000452c62 : div dword ptr [rdi + rbp - 0x75] ; adc dword ptr [rdi], ecx ; retf 0xd285
0x00000000004678f6 : div eax ; add r9d, eax ; mov eax, r9d ; ret
0x0000000000479b16 : div ebp ; mov rbp, rax ; jmp 0x479ae5
0x0000000000449528 : div ecx ; mov eax, eax ; ret
0x00000000004876ad : div ecx ; mov rsi, rax ; call 0x423927
0x000000000044950f : div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000004afd41 : div edi ; jmp rax
0x0000000000479b15 : div r13 ; mov rbp, rax ; jmp 0x479ae6
0x00000000004678f5 : div r8d ; add r9d, eax ; mov eax, r9d ; ret
0x00000000004876ac : div rcx ; mov rsi, rax ; call 0x423928
0x0000000000449429 : enter -0x173f, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x0000000000449474 : enter -0x173f, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000042cbe7 : enter -0x23b, -0x29 ; ret 0xc085
0x00000000004889d0 : enter -0x3eb8, -8 ; add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x000000000044d07f : enter -0x3fcf, -0x18 ; cdq ; and byte ptr [rbx], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000447864 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000047bdd5 : enter -0x72b7, 0x14 ; nop ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000449481 : enter -0x72b8, 0x35 ; sti ; ja 0x44949a ; add cl, al ; call 0xffffffff84071da7
0x0000000000496abb : enter -0x72b8, 0x41 ; adc byte ptr [rdi], cl ; sahf ; ret 0x3948
0x000000000044355e : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000044369e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000480400 : enter -0x72b8, 0xc ; xor byte ptr [rax + 1], cl ; retf
0x000000000042c9c7 : enter -0x73b, 0x77 ; ret
0x00000000004069f7 : enter -0x76b3, -0x19 ; jmp 0x4069cc
0x00000000004960f6 : enter -0x76b4, 0x47 ; clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000496082 : enter -0x76b4, 7 ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x000000000049618c : enter -0x76b4, 7 ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000488ada : enter -0x76b8, -0x38 ; ret
0x000000000046613f : enter -0x7cb7, -0x40 ; add dword ptr [rcx], edi ; retf
0x000000000042d394 : enter -2, -1 ; ret
0x00000000004b1a25 : enter -7, -0x10 ; retf 0xfff9
0x00000000004b1a3d : enter -7, -0x30 ; retf 0xfff9
0x0000000000473adc : enter -7, -1 ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x4705a5
0x00000000004b1a39 : enter -7, 0x34 ; enter -7, -0x30 ; retf 0xfff9
0x00000000004b1a35 : enter -7, 0x34 ; enter -7, 0x34 ; enter -7, -0x30 ; retf 0xfff9
0x00000000004a0e13 : enter 0, 0 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004b9c1c : enter 0, 0 ; retf
0x00000000004bdc70 : enter 0, 0 ; retf 0
0x00000000004badc8 : enter 0x10, 0 ; retf
0x00000000004790ac : enter 0x117f, 1 ; clc ; mov rdx, r8 ; jmp 0x479086
0x0000000000417919 : enter 0x1476, 0x48 ; mov eax, dword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000441ae9 : enter 0x148, -8 ; vzeroupper ; ret
0x000000000049f074 : enter 0x14e, 0 ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000046d77c : enter 0x1b9, 0 ; add byte ptr [rax], al ; jmp rax
0x0000000000447860 : enter 0x275, 0x39 ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x0000000000497881 : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000047ec6e : enter 0x2948, -0x30 ; shr rax, 2 ; vzeroupper ; ret
0x0000000000441e4e : enter 0x2948, -0x30 ; vzeroupper ; ret
0x000000000040edff : enter 0x3148, -0x30 ; movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x40edef ; ret
0x0000000000426f4d : enter 0x31c3, -0x40 ; ret
0x0000000000447e50 : enter 0x357e, 0x48 ; movsxd rax, ecx ; ret
0x00000000004cbe04 : enter 0x3e, 0 ; adc rsi, rsi ; call rsp
0x000000000040eeac : enter 0x50f, 0x48 ; mov edi, eax ; mov eax, 0xba ; syscall
0x0000000000403000 : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040fc92 : enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x00000000004c5c5c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004d1d04 : enter 0x9d, 0 ; test al, 0xd3 ; cld ; call qword ptr [rax]
0x00000000004ba5c8 : enter 0xa, 0 ; retf
0x00000000004ba9c8 : enter 0xd, 0 ; retf
0x0000000000417779 : enter 0xf48, 0x4f ; ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x41777b ; ret
0x000000000047a9e9 : enter 0xf48, 0x4f ; ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x47a9eb ; ret
0x000000000042e636 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004414b1 : enter 0xf66, -0x15 ; ret
0x000000000042d2e7 : enter 0xfc3, 0x1f ; add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004bde70 : enter 1, 0 ; retf 1
0x00000000004bb180 : enter 2, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004be070 : enter 2, 0 ; retf 2
0x00000000004be270 : enter 3, 0 ; retf 3
0x00000000004be470 : enter 4, 0 ; retf 4
0x00000000004be670 : enter 5, 0 ; retf 5
0x00000000004be870 : enter 6, 0 ; retf 6
0x00000000004bea70 : enter 7, 0 ; retf 7
0x00000000004bec70 : enter 8, 0 ; retf 8
0x00000000004bee70 : enter 9, 0 ; retf 9
0x00000000004a8a84 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbp + rax + 0x48], dh ; mov dword ptr [rdi + rsi*8], edx ; ret
0x00000000004a8a43 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x0000000000413dc0 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x0000000000411088 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000410a86 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000488ad3 : fadd dword ptr [rbp - 0x7c] ; ror byte ptr [rax + 0xf], 0x44 ; enter -0x76b8, -0x38 ; ret
0x0000000000432504 : fadd dword ptr [rdi] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004ccfc8 : fadd dword ptr [rdi] ; clc ; jmp qword ptr [rcx]
0x0000000000494dfc : fadd dword ptr [rdx] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000456359 : fadd dword ptr [rdx] ; add byte ptr [rax], al ; call 0x402e16
0x0000000000459b45 : fadd qword ptr [rax - 0x7bf0ffc2] ; retf
0x000000000046c862 : fadd qword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004678e3 : fadd qword ptr [rcx + rcx*4 - 0x38] ; ret
0x0000000000432114 : fadd qword ptr [rdi] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000046158b : fadd qword ptr [rip + 0x3d8d4800] ; retf
0x000000000042e181 : fbld tbyte ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004ab854 : fbstp tbyte ptr [rbp - 0x17] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042e17f : fbstp tbyte ptr [rdx - 0x10f09921] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004c5298 : fcmovb st(0), st(3) ; ret
0x0000000000441f6b : fcmovnb st(0), st(5) ; std ; xlatb ; ret
0x00000000004605d6 : fcmovnb st(0), st(6) ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x00000000004d1548 : fcom dword ptr [rsp + rdi*8] ; call qword ptr [rdx]
0x00000000004bfc70 : fcom qword ptr [rcx - 0x6de30005] ; sti ; call rsp
0x00000000004b11d8 : fcom qword ptr [rsi - 0x6a370007] ; stc ; jmp qword ptr [rdx]
0x00000000004cc644 : fcom st(0), st(4) ; idiv edi ; retf
0x000000000041a530 : fcom st(2) ; sub eax, dword ptr [rax] ; ret
0x00000000004a8a49 : fcomi st(3) ; ret
0x00000000004c4191 : fcomip st(4) ; jp 0x4c414f ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x00000000004038cc : fcomp dword ptr [rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040fabc : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000411879 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000004159d6 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000044b731 : fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000004c6019 : fcomp dword ptr [rdx + 0x21] ; ret
0x00000000004038cb : fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004c4280 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000004a3ba6 : fcos ; dec dword ptr [rax - 0x77] ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000004a3d48 : fdiv dword ptr [rbp + 0x11] ; add rsp, 0x40 ; pop rbx ; ret
0x00000000004a3e2f : fdiv dword ptr [rbp + 0x12] ; add rsp, 0x50 ; pop rbx ; ret
0x000000000048c954 : fdiv dword ptr [rbp + 0x1e] ; add rsp, 0x110 ; pop rbx ; ret
0x000000000042e64f : fdiv dword ptr [rdx - 0x10f09928] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e44f : fdiv qword ptr [rdx - 0x10f09924] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b0a25 : fdiv st(0), st(0) ; jmp qword ptr [rax + 0x40fff8dd]
0x00000000004a6699 : fdiv st(3) ; ret
0x00000000004c79f0 : fdiv st(3) ; std ; call qword ptr [rax]
0x00000000004c35be : fdiv st(7) ; lahf ; push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x0000000000419030 : fdiv st(7), st(0) ; dec dword ptr [rax - 0x77] ; out 0x31, eax ; shr al, cl ; ret
0x00000000004cfb19 : fdivp st(2) ; jmp qword ptr [rax]
0x0000000000401b9a : fdivr dword ptr [r9] ; ret 0x860f
0x00000000004cfb14 : fdivr dword ptr [rbx] ; add al, cl ; fdivp st(2) ; jmp qword ptr [rax]
0x0000000000401b9b : fdivr dword ptr [rcx] ; ret 0x860f
0x00000000004cfad1 : fdivr st(2) ; jmp rdx
0x00000000004c8671 : fdivr st(3), st(0) ; call qword ptr [rdx]
0x00000000004c8685 : fdivr st(3), st(0) ; call rsp
0x00000000004a0c5b : fdivr st(3), st(0) ; ret
0x00000000004c35d5 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000447868 : fdivr st(7) ; ret
0x00000000004cbf79 : fdivrp st(6) ; call qword ptr [rax]
0x00000000004cbf8d : fdivrp st(6) ; jmp qword ptr [rsi]
0x0000000000483612 : ffreep st(6) ; and al, 0x5f ; add al, ch ; retf
0x000000000047e286 : fiadd dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410318 : fiadd dword ptr [rbp + 0x450f48c9] ; ret 0x8348
0x000000000048e09f : fiadd dword ptr [rbp - 0x7b] ; fisttp dword ptr [rax + 0xf] ; ret 0x8948
0x000000000047b2b3 : fiadd dword ptr [rbx - 0x7bf0fc1e] ; retf
0x0000000000432316 : fiadd dword ptr [rdi] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004137fa : fiadd word ptr [rcx + rcx*4 - 0x11] ; mov eax, r9d ; syscall
0x0000000000431f26 : fiadd word ptr [rdi] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004c5e66 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x000000000042e54f : fidiv dword ptr [rdx - 0x10f09926] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e24f : fidiv word ptr [rdx - 0x10f09922] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004a3a55 : fidivr dword ptr [rax + 1] ; ret
0x00000000004897ee : fidivr word ptr [rbx - 7] ; dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000432263 : fild dword ptr [r15] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000498481 : fild dword ptr [rbp + 0xf480000] ; ret 0x66c3
0x00000000004321c6 : fild dword ptr [rdi] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000403261 : fild qword ptr [rsi + 0x6348000a] ; add al, 0x82 ; add rax, rdx ; jmp rax
0x00000000004259b1 : fild word ptr [r9] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000004a89b3 : fild word ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdx + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004666d2 : fild word ptr [rbp - 0x77] ; ret 0x8b4c
0x00000000004259b2 : fild word ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000431dd6 : fild word ptr [rdi] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000041af9c : fimul dword ptr [rax + 0x21] ; ret 0x8948
0x000000000041f08a : fimul dword ptr [rax + 0x21] ; ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb38af
0x00000000004201ca : fimul dword ptr [rax + 0x21] ; ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb49ef
0x0000000000420f84 : fimul dword ptr [rax + 0x21] ; ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb57a9
0x0000000000422a87 : fimul dword ptr [rax + 0x21] ; ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb72ac
0x0000000000422f8c : fimul dword ptr [rax + 0x21] ; ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb77b1
0x00000000004234c8 : fimul dword ptr [rax + 0x21] ; ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb7ced
0x0000000000456dd9 : fimul dword ptr [rax + 0x29] ; ret 0x8348
0x00000000004729bb : fimul dword ptr [rax + 0x29] ; ret 0x8b48
0x000000000048b097 : fimul dword ptr [rax + 0x39] ; ret 0x7472
0x000000000046726d : fimul dword ptr [rax + 0x39] ; ret 0xe57f
0x000000000048e3d4 : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x00000000004a2144 : fimul dword ptr [rax + 0x39] ; retf 0xe677
0x0000000000467232 : fimul dword ptr [rax + 0x39] ; retf 0xe87f
0x0000000000447ea5 : fimul dword ptr [rax + 0x63] ; ror dword ptr [rax + 1], 0xf8 ; sub rax, rsi ; ret
0x000000000047d975 : fimul dword ptr [rax + 0xf] ; mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x000000000042b716 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046dbed : fimul dword ptr [rax - 0x3f] ; clc ; add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x0000000000405cb4 : fimul dword ptr [rbx + 0x4d8b005d] ; add al, 0xf ; retf
0x000000000045276f : fimul word ptr [rax + 1] ; ret
0x0000000000458234 : fimul word ptr [rax - 0x77] ; int1 ; je 0x457fe4 ; mov rdx, rax ; jmp 0x458201
0x00000000004582ab : fimul word ptr [rax - 0x77] ; int1 ; je 0x457fe4 ; mov rdx, rax ; jmp 0x458278
0x000000000049770c : fimul word ptr [rbp + 0x11] ; retf
0x00000000004976ce : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x497728
0x00000000004a3aae : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x4a3b08
0x0000000000422d51 : fimul word ptr [rcx + rcx*4 - 0x11] ; call 0x41ef96
0x00000000004039b3 : fimul word ptr [rcx - 0x7d] ; in al, dx ; add dword ptr [rbp - 0x77], ecx ; out dx, al ; call 0x4004ba
0x000000000044ac2f : fistp qword ptr [rax + 1] ; syscall
0x00000000004179de : fistp word ptr [rbx + 0x5d] ; jmp rax
0x000000000047ade0 : fistp word ptr [rbx + 0x5d] ; pop r12 ; jmp rax
0x00000000004223c3 : fistp word ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000048e0a2 : fisttp dword ptr [rax + 0xf] ; ret 0x8948
0x00000000004a127e : fisttp dword ptr [rax - 0x73] ; push rax ; or byte ptr [rax - 0x73], cl ; or al, 0xca ; jmp 0x4a129c
0x00000000004ab851 : fisttp dword ptr [rax - 0x77] ; fbstp tbyte ptr [rbp - 0x17] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047c522 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000045a3a7 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004966c1 : fisttp dword ptr [rax - 0x77] ; ret
0x00000000004ab9dd : fisttp dword ptr [rax - 0x77] ; sbb eax, 0x22e42b ; jne 0x4ab9d3 ; pop rbx ; ret
0x00000000004680bc : fisttp dword ptr [rax - 0x7b] ; rol byte ptr [rcx + 0xf], 0x94 ; ret
0x0000000000489866 : fisttp dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret
0x0000000000468d68 : fisttp dword ptr [rax - 0x7d] ; jl 0x468d9b ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004822de : fisttp dword ptr [rax - 0x7d] ; ret
0x00000000004a7e70 : fisttp dword ptr [rbx + 0x63] ; add al, 0x99 ; add rax, r9 ; jmp rax
0x00000000004727c1 : fisttp dword ptr [rcx - 0x77] ; ret
0x00000000004966db : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x0000000000456ab7 : fisttp dword ptr [rcx - 0x7d] ; ret
0x00000000004a98ed : fisttp dword ptr [rdi] ; mov dh, 0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000487984 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000004221eb : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xd020
0x00000000004070ae : fisttp qword ptr [rax - 0x7d] ; ret 0x4401
0x000000000045970a : fisttp qword ptr [rdi] ; ret 0xc389
0x000000000048b0a2 : fisttp word ptr [rax - 0x77] ; ret 0x15e8
0x0000000000402c03 : fisttp word ptr [rax - 0x7d] ; ret
0x000000000049675f : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000044aeed : fisttp word ptr [rcx + 0x3b8c2] ; add byte ptr [rax], al ; syscall
0x00000000004405ad : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000004ac661 : fisub dword ptr [rdx] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000042e551 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000445e4f : fisub dword ptr [rsi + 0xf] ; xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x000000000042e251 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000445e91 : fisubr word ptr [rax - 0x297af0f0] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000047078b : fld dword ptr [rax - 0x78f0dd07] ; ret
0x00000000004323b4 : fld dword ptr [rdi] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000468815 : fld dword ptr [rip - 0x6bf0bf00] ; ret
0x00000000004969d4 : fld qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x149
0x0000000000431fc4 : fld qword ptr [rdi] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004c42c1 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x000000000047d612 : fld st(5) ; std ; xlatb ; retf 0xfdc5
0x000000000047d672 : fld st(5) ; std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000049797e : fld xword ptr [rsp - 0x18] ; ret
0x000000000042c5f9 : fldenv [rsi + 0xf] ; je 0x42c656 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042c8d7 : fldenv [rsi + 0xf] ; je 0x42c934 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042e5d1 : fldenv [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042c4f1 : fldenv [rsi + 0xf] ; xlatb ; ret
0x00000000004567c3 : fldl2t ; retf 0xfffd
0x000000000046a0dc : fldpi ; stosd dword ptr [rdi], eax ; mov eax, 1 ; ret
0x0000000000497774 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000041c09f : fmul dword ptr [rax + 0x39] ; ret
0x0000000000447b37 : fmul dword ptr [rax + 9] ; retf 0x4466
0x0000000000492f09 : fmul dword ptr [rax - 0x39] ; ret
0x00000000004132e8 : fmul dword ptr [rax - 0x77] ; ret
0x000000000040f391 : fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000004a52a4 : fmul dword ptr [rbx + rcx*4 + 0x34] ; ret 0xf41
0x000000000044df7c : fmul dword ptr [rbx - 0x7ad33ebc] ; ror byte ptr [rdi], 0x84 ; retf 0
0x0000000000481380 : fmul dword ptr [rcx + 0x21] ; ret
0x000000000046aac0 : fmul dword ptr [rdi] ; ret
0x000000000049487c : fmul dword ptr [rdi] ; xchg eax, edx ; ret 0x2948
0x00000000004a25e2 : fmul qword ptr [rax - 0x77] ; ret
0x00000000004aa8de : fmul qword ptr [rbx + rcx*4 + 0x58] ; sub byte ptr [rbp + 1], cl ; retf
0x0000000000425d09 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000043a22f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000004611cf : fmul qword ptr [rdi] ; lea ebp, [rdx] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000459908 : fmul qword ptr [rdi] ; ret 0xc389
0x000000000047d610 : fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x000000000047d670 : fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000042586f : fnsave dword ptr [rdi] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000457f6d : fnsave dword ptr [rdx + 0x68] ; mov rdx, rax ; jmp 0x457f34
0x000000000042e34f : fnsave dword ptr [rdx - 0x10f09923] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e5cf : fnstenv [rdx - 0x10f09927] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004c5b0a : fnstsw dword ptr [rbx + rdx*4] ; in al, dx ; retf 0xae32
0x000000000040ee09 : fpatan ; ret
0x000000000048ab9f : frstor dword ptr [rdx + 1] ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000042e351 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004c501f : fst dword ptr [rbp - 0x5e] ; sub dword ptr [rbx + 0x5c347ebb], edx ; sbb ebp, ebx ; retf
0x00000000004ae178 : fst qword ptr [rdx - 0xb] ; call rax
0x00000000004c3fa7 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000004601b3 : fstp dword ptr [rdi + 0x39480001] ; ret
0x00000000004c4320 : fstp st(0) ; ret 0xde5d
0x00000000004c34eb : fstp st(3), st(0) ; retf 0xeb83
0x000000000044af32 : fsub dword ptr [rcx + rcx*4 + 1] ; mov eax, 0xffffffff ; jmp 0x44af09
0x000000000044a858 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000044a8e8 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x000000000044ab98 : fsub dword ptr [rcx + rcx*4 + 2] ; mov rax, -1 ; ret
0x000000000042e651 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004423d4 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000004c5a3a : fsub qword ptr [rax - 0x6b13d16d] ; push rsi ; cli ; push 0x6e ; ja 0x4c59d5 ; ret 0x48f
0x00000000004c58d8 : fsub qword ptr [rbx] ; sub dword ptr [rsi], 0x76 ; retf
0x0000000000447c7b : fsub qword ptr [rsi + 0xf] ; jmp 0x447c47
0x000000000042e451 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004415cc : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000044ae94 : fsubr st(3) ; ret 0xf66
0x00000000004c5ff8 : fucom st(5) ; loop 0x4c6051 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000484511 : fucomi st(3) ; ret 0x1f0f
0x0000000000461317 : fucomip st(0) ; ret
0x00000000004a980f : fucomip st(0) ; retf
0x00000000004a6d41 : fucomip st(1) ; ret
0x00000000004c563e : fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x000000000049dd89 : hlt ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004cc330 : hlt ; add byte ptr [r8], al ; pushfq ; retf
0x000000000049ec89 : hlt ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004c8c52 : hlt ; call qword ptr [rax]
0x00000000004c8fb6 : hlt ; call qword ptr [rdi]
0x00000000004c8c66 : hlt ; call qword ptr [rdx]
0x00000000004ca56a : hlt ; call qword ptr [rsi]
0x000000000044bf81 : hlt ; call r15
0x00000000004c8ad2 : hlt ; call rsp
0x00000000004b0aad : hlt ; clc ; inc eax ; stc ; call rax
0x00000000004b081c : hlt ; cmp eax, -1 ; je 0x4b07ac ; clc ; jmp rsp
0x00000000004afd39 : hlt ; idiv edi ; div dil ; call qword ptr [rax - 0x1f000809]
0x00000000004c43a8 : hlt ; jmp 0x4c437d
0x00000000004c8b92 : hlt ; jmp qword ptr [rax]
0x00000000004c941e : hlt ; jmp rdi
0x00000000004c9666 : hlt ; jmp rdx
0x00000000004c4192 : hlt ; jp 0x4c414e ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x00000000004d0dac : hlt ; lahf ; sti ; call rdx
0x0000000000435f5a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430c0e : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435f53 : hlt ; mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000044a31e : hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x0000000000430d83 : hlt ; mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004a0bab : hlt ; movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x0000000000447373 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000400a7a : hlt ; nop dword ptr [rax + rax] ; ret
0x000000000041b4d0 : hlt ; ret 0x2b
0x0000000000483587 : hlt ; retf 3
0x00000000004c44e3 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x000000000041a9d3 : hlt ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000447377 : hlt ; sub eax, edx ; ret
0x0000000000400cd6 : idiv ah ; add byte ptr [rax], al ; nop ; pop rbp ; ret
0x00000000004b0a75 : idiv al ; jmp rax
0x000000000045f55c : idiv bh ; call rax
0x000000000048e211 : idiv bh ; dec dword ptr [rax + 0x39] ; ret
0x000000000046ac29 : idiv bh ; dec dword ptr [rax - 0x75] ; mov ebp, 0xfffff730 ; call rax
0x000000000045f554 : idiv bh ; dec dword ptr [rcx - 0x2f42763f] ; idiv bh ; call rax
0x00000000004607a4 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x000000000046c105 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add dh, al ; test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x000000000046056a : idiv bh ; inc dword ptr [rcx] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x000000000046c90f : idiv bh ; inc dword ptr [rcx] ; add byte ptr [rax], al ; add dh, al ; test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x00000000004602b6 : idiv bh ; jmp qword ptr [rax]
0x00000000004a8aac : idiv bh ; nop ; mov rax, qword ptr [rdi + 0x98] ; ret
0x00000000004a1237 : idiv bh ; nop dword ptr [rax] ; ret
0x00000000004ae2a2 : idiv bh ; push rbp ; or esi, esi ; jmp rsp
0x0000000000438476 : idiv byte ptr [rdi + 7] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004525c6 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x00000000004c7a75 : idiv ch ; call rax
0x00000000004af9ee : idiv edi ; adc byte ptr [rdi + rsi*8 - 0x8726f01], cl ; call qword ptr [rax]
0x00000000004af9ba : idiv edi ; add byte ptr [rbp - 9], bh ; jmp qword ptr [rax]
0x00000000004af9ea : idiv edi ; add byte ptr [rcx - 9], bh ; call qword ptr [rax]
0x000000000045f876 : idiv edi ; call qword ptr [rax]
0x00000000004afd4a : idiv edi ; cmp bl, 0xf7 ; call rax
0x00000000004afbee : idiv edi ; cmp byte ptr [rdx], cl ; clc ; inc dword ptr [rax] ; or al, 0xf8 ; jmp rax
0x000000000046082a : idiv edi ; dec dword ptr [rax + 0x63] ; retf
0x000000000045f75e : idiv edi ; dec dword ptr [rax - 0x39] ; ret 0x8c20
0x000000000046c261 : idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000004afd3a : idiv edi ; div dil ; call qword ptr [rax - 0x1f000809]
0x000000000046012c : idiv edi ; inc dword ptr [rcx - 0x7d] ; in al, dx ; add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x000000000046b4bd : idiv edi ; inc dword ptr [rcx - 1] ; push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000044f73b : idiv edi ; jmp 0x44efaa
0x000000000046bd5f : idiv edi ; jmp qword ptr [rsi + 0xf]
0x00000000004afd56 : idiv edi ; jo 0x4afd62 ; idiv edi ; rol byte ptr [rax], 0xf8 ; call qword ptr [rax]
0x00000000004af9b6 : idiv edi ; loopne 0x4afa3e ; idiv edi ; add byte ptr [rbp - 9], bh ; jmp qword ptr [rax]
0x00000000004afa2a : idiv edi ; mov esi, edi ; jmp qword ptr [rax]
0x0000000000483d06 : idiv edi ; mov r8d, dword ptr [rsp + 0xc] ; jmp 0x483cc4
0x00000000004afd3e : idiv edi ; nop ; div edi ; jmp rax
0x00000000004abe7b : idiv edi ; nop dword ptr [rax] ; ret
0x00000000004ac818 : idiv edi ; ret
0x00000000004afad6 : idiv edi ; ret 0xf7e7
0x00000000004afada : idiv edi ; ret 0xf7e8
0x00000000004cc646 : idiv edi ; retf
0x00000000004afd5a : idiv edi ; rol byte ptr [rax], 0xf8 ; call qword ptr [rax]
0x00000000004afa8a : idiv edi ; rol cl, 0xf7 ; push qword ptr [rax - 0x5f00083e] ; ret
0x00000000004abaee : idiv edi ; test rbp, rbp ; jne 0x4abae3 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004ac6a8 : idiv edi ; test rbp, rbp ; jne 0x4ac69b ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004afd46 : idiv edi ; xor dl, bh ; idiv edi ; cmp bl, 0xf7 ; call rax
0x00000000004ac817 : idiv r15 ; ret
0x00000000004ac6a7 : idiv r15 ; test rbp, rbp ; jne 0x4ac69c ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000405338 : imul al ; ret 0xbfac
0x0000000000496ed8 : imul al ; ret 0xf695
0x0000000000402d94 : imul al ; xchg byte ptr [rdx - 0x7cb7fffc], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000048a626 : imul byte ptr [rcx + 1] ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000040aeff : imul eax ; retf
0x0000000000404200 : imul eax ; retf 0x1d1
0x0000000000416cf4 : imul eax, dword ptr [rbx], 0 ; add rsp, 0x80 ; ret
0x0000000000445ed1 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x000000000049d3b0 : imul eax, dword ptr [rcx], 0 ; mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000429b47 : imul eax, dword ptr [rcx], 0x894d0000 ; retf
0x0000000000469ba2 : imul eax, dword ptr [rcx], 0xc7480000 ; ret 0xffe0
0x0000000000429547 : imul eax, dword ptr [rdi], 0x894d0000 ; retf
0x000000000044a550 : imul eax, dword ptr [rsi], 0 ; movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x000000000047c660 : imul ecx, dword ptr [rax], -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042a8a7 : imul ecx, dword ptr [rbx], 0x894d0000 ; retf
0x000000000042ba87 : imul ecx, dword ptr [rcx], 0x894d0000 ; retf
0x0000000000429247 : imul ecx, dword ptr [rdx], 0x894d0000 ; retf
0x00000000004c9d77 : imul ecx, dword ptr [rsi], 0x18 ; ret
0x0000000000417dea : imul edi, dword ptr [rax], 0x4c ; mov dword ptr [rbx + 0x40], esp ; mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004aff7d : imul edi, eax, -1 ; add byte ptr [rbx - 8], ch ; call qword ptr [rax + 0x20fff86a]
0x00000000004b0945 : imul edi, eax, -1 ; and byte ptr [rbp - 8], ch ; jmp qword ptr [rax + 0x20fff86e]
0x00000000004b00fd : imul edi, eax, -1 ; mov ah, 0x6a ; clc ; inc dword ptr [rdx + rbp*2 - 8] ; call rsp
0x00000000004aff81 : imul edi, eax, -1 ; nop ; push -8 ; jmp qword ptr [rax]
0x00000000004affd1 : imul edi, eax, 0xf868b6ff ; inc dword ptr [rsi + 0x68] ; clc ; call rsi
0x00000000004aff8d : imul edi, eax, 0xf86940ff ; call rax
0x00000000004b0189 : imul edi, eax, 0xf86950ff ; jmp rax
0x00000000004b0049 : imul edi, eax, 0xf86982ff ; call qword ptr [rdx]
0x00000000004b0901 : imul edi, eax, 0xf86b20ff ; jmp qword ptr [rax + 0x20fff86c]
0x000000000042fc83 : imul edi, edi, 0x63490007 ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000405c64 : imul edi, edx, -1 ; dec dword ptr [rax - 0x7d] ; ret
0x000000000044ba36 : imul edx, dword ptr [rax], 0x48 ; test ebp, ebp ; jne 0x44ba5b ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044c5a1 : imul edx, dword ptr [rax], 0x48 ; test ebp, ebp ; jne 0x44c5d3 ; mov rdi, qword ptr [rbx] ; call r12
0x0000000000428c47 : imul edx, dword ptr [rax], 0x894d0000 ; retf
0x0000000000428947 : imul edx, dword ptr [rbx], 0x894d0000 ; retf
0x0000000000428647 : imul edx, dword ptr [rsi], 0x894d0000 ; retf
0x0000000000432a43 : imul edx, ebx, 0x63490007 ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000041956e : imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x000000000049ad44 : imul esp, dword ptr [rbx], 0x894d0000 ; retf
0x000000000044534c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x0000000000416cf3 : imul rax, qword ptr [r11], 0 ; add rsp, 0x80 ; ret
0x00000000004ab9e2 : in al, 0x22 ; add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x0000000000470f58 : in al, 0x4a ; movsxd rax, dword ptr [rdx] ; add rax, rdx ; jmp rax
0x0000000000430c06 : in al, 0x4c ; mov dword ptr [rdi - 0x14], ebx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004c5921 : in al, 0x4c ; pop rax ; retf
0x000000000040e5f9 : in al, 0x74 ; mov esp, 0x24448b48 ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000044205c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000044dd53 : in al, 0x80 ; cli ; cmp eax, 0x83497174 ; ret
0x00000000004d2220 : in al, 0xa2 ; add byte ptr [rax], al ; sbb r15b, bpl ; jmp qword ptr [rdx]
0x000000000045fe50 : in al, 0xf ; lahf ; ret
0x0000000000435f3a : in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000448fee : in al, 0xf3 ; ret
0x00000000004318da : in al, 7 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004a6690 : in al, dx ; adc al, byte ptr [rdx] ; add bl, dh ; movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x00000000004859a0 : in al, dx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x0000000000420d61 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; retf 2
0x00000000004514e0 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; push rsi ; ret
0x0000000000422d3b : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf
0x0000000000420da5 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; xchg eax, ecx ; retf 2
0x0000000000489da7 : in al, dx ; add byte ptr [rax], dl ; add byte ptr [rax], al ; mov rbx, rsp ; mov rsi, rbx ; syscall
0x00000000004602f4 : in al, dx ; add dword ptr [rax - 0x93b43], eax ; jmp qword ptr [rax]
0x00000000004039b6 : in al, dx ; add dword ptr [rbp - 0x77], ecx ; out dx, al ; call 0x4004b7
0x0000000000460131 : in al, dx ; add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x000000000048e10f : in al, dx ; add dword ptr [rcx + 0xf], eax ; mov esi, 0x8941240c ; retf
0x0000000000485e30 : in al, dx ; and esp, dword ptr [rip + 0x48c03100] ; add esp, 8 ; ret
0x00000000004b0a4d : in al, dx ; clc ; jmp rax
0x00000000004b072c : in al, dx ; cmp eax, 0xf8817cff ; jmp qword ptr [rdx]
0x000000000049797d : in al, dx ; fld xword ptr [rsp - 0x18] ; ret
0x000000000045f553 : in al, dx ; idiv bh ; dec dword ptr [rcx - 0x2f42763f] ; idiv bh ; call rax
0x0000000000415d91 : in al, dx ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044d8e3 : in al, dx ; mov eax, r11d ; and eax, 0xc ; cmp eax, 4 ; je 0x44d8fc ; ret
0x0000000000430c0a : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043633a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042008f : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000042bb04 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004c5b0d : in al, dx ; retf 0xae32
0x00000000004a9629 : in al, dx ; sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x00000000004a980b : in al, dx ; sbb byte ptr [rax - 0x77], cl ; fucomip st(0) ; retf
0x00000000004a60a4 : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004ca6f4 : in al, dx ; std ; hlt ; call qword ptr [rsi]
0x00000000004c5a3e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4c59d1 ; ret 0x48f
0x00000000004c5a3d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4c59d2 ; ret 0x48f
0x000000000046bfc0 : in eax, 0 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000044a5b6 : in eax, 0 ; add byte ptr [rax], al ; syscall
0x00000000004c4143 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000497af2 : in eax, 0x48 ; mov eax, esi ; ret
0x0000000000430a16 : in eax, 0x4c ; mov dword ptr [rdi - 0x13], ebx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004c33d9 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x00000000004a7b6a : in eax, 0x83 ; call qword ptr [rcx]
0x00000000004650bd : in eax, 0xdf ; loopne 0x46504e ; ret
0x00000000004c5ff9 : in eax, 0xe2 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004c419a : in eax, 0xe5 ; retf 0x2a91
0x000000000047eb73 : in eax, 0xf ; je 0x47eb98 ; add rax, 2 ; ret
0x00000000004494a9 : in eax, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x0000000000435fba : in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004cc9a9 : in eax, 0xf7 ; call qword ptr [rbx]
0x00000000004c54c1 : in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004259fb : in eax, 2 ; cmovne rax, rdx ; ret
0x0000000000431870 : in eax, 7 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000425759 : in eax, 8 ; lea rax, [rip + 0x79ee] ; je 0x425736 ; ret
0x0000000000468668 : in eax, dx ; add al, 0x84 ; ror byte ptr [rdi], 0x84 ; ret 0x17
0x00000000004981b9 : in eax, dx ; add al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000046b7f8 : in eax, dx ; add dword ptr [rax - 0x91743], eax ; jmp qword ptr [rax]
0x000000000044ba3a : in eax, dx ; jne 0x44ba57 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044c5a5 : in eax, dx ; jne 0x44c5cf ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044c5d8 : in eax, dx ; jne 0x44c628 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044c604 : in eax, dx ; jne 0x44c688 ; mov rdi, qword ptr [rbp] ; call r12
0x00000000004ab89f : in eax, dx ; jne 0x4ab881 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004abaf2 : in eax, dx ; jne 0x4abadf ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004ac6ac : in eax, dx ; jne 0x4ac697 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000447b92 : in eax, dx ; lea rax, [rcx - 1] ; ret
0x00000000004453bf : in eax, dx ; mov dh, 6 ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000430a1a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004363ba : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000495ea7 : in eax, dx ; or byte ptr [rax + 0x39], cl ; retf
0x000000000049e790 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000417782 : in eax, dx ; ret
0x00000000004c3f18 : in eax, dx ; retf
0x0000000000447ce2 : in eax, dx ; sub rax, 1 ; ret
0x0000000000439889 : inc bl ; cmp dl, 1 ; jb 0x43989f ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447ff8 : inc bl ; cmp dl, 1 ; jb 0x44800a ; mov byte ptr [rdi], cl ; ret
0x0000000000447ff7 : inc bl ; cmp dl, 1 ; jb 0x44800b ; mov byte ptr [rdi], cl ; ret
0x0000000000417d72 : inc byte ptr [rbp + 0x738948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x000000000044bbcc : inc byte ptr [rbp - 0x60f0be13] ; ret 0x8545
0x000000000045a195 : inc byte ptr [rbx] ; je 0x45a1a5 ; ret
0x000000000042fd36 : inc byte ptr [rdi] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000489518 : inc dword ptr [r9 + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004afccb : inc dword ptr [rax + 0x10fff816] ; or eax, edi ; call rax
0x00000000004afc2b : inc dword ptr [rax + 0x10fff817] ; or bh, al ; call rax
0x00000000004afce3 : inc dword ptr [rax + 0x12] ; clc ; inc dword ptr [rax + 0x14] ; clc ; inc dword ptr [rax + 0x16] ; clc ; call rax
0x00000000004afce7 : inc dword ptr [rax + 0x14] ; clc ; inc dword ptr [rax + 0x16] ; clc ; call rax
0x00000000004afceb : inc dword ptr [rax + 0x16] ; clc ; call rax
0x00000000004aff07 : inc dword ptr [rax + 0x22] ; clc ; call qword ptr [rax - 0x1f0007dd]
0x00000000004aff5b : inc dword ptr [rax + 0x29] ; clc ; call qword ptr [rax - 0x1f0007d6]
0x00000000004afdcf : inc dword ptr [rax + 0x32] ; clc ; inc dword ptr [rax] ; xor al, 0xf8 ; jmp rax
0x00000000004afe57 : inc dword ptr [rax + 0x35] ; clc ; jmp qword ptr [rax]
0x00000000004afebf : inc dword ptr [rax + 0x38] ; clc ; call qword ptr [rax]
0x00000000004afe23 : inc dword ptr [rax + 0x3b] ; clc ; inc dword ptr [rax + 0x3d] ; clc ; inc dword ptr [rax + 0x3f] ; clc ; call rax
0x00000000004afe27 : inc dword ptr [rax + 0x3d] ; clc ; inc dword ptr [rax + 0x3f] ; clc ; call rax
0x00000000004afe2b : inc dword ptr [rax + 0x3f] ; clc ; call rax
0x00000000004b2017 : inc dword ptr [rax + 0x4ffff9d4] ; sar cl, cl ; call qword ptr [rdi]
0x00000000004afc73 : inc dword ptr [rax + 0x60fff80b] ; or eax, 0xf40fff8 ; clc ; jmp qword ptr [rax]
0x00000000004b01a7 : inc dword ptr [rax + 0x66] ; clc ; call rax
0x00000000004aff8f : inc dword ptr [rax + 0x69] ; clc ; call rax
0x00000000004afd13 : inc dword ptr [rax + 0xa] ; clc ; call qword ptr [rax]
0x00000000004afc7b : inc dword ptr [rax + 0xf] ; clc ; jmp qword ptr [rax]
0x00000000004b0a4b : inc dword ptr [rax - 0x14] ; clc ; jmp rax
0x00000000004b0a2b : inc dword ptr [rax - 0x21] ; clc ; jmp rax
0x00000000004b0a7f : inc dword ptr [rax - 0x2f000706] ; sti ; clc ; jmp qword ptr [rax]
0x00000000004aff17 : inc dword ptr [rax - 0x2f0007d9] ; sub al, bh ; jmp qword ptr [rax]
0x00000000004afd9f : inc dword ptr [rax - 0x2f0007fe] ; add edi, eax ; jmp qword ptr [rax]
0x00000000004b09d7 : inc dword ptr [rax - 0x4c] ; clc ; jmp rax
0x00000000004b0b87 : inc dword ptr [rax - 0x5f0006af] ; push rcx ; stc ; inc eax ; push rcx ; stc ; jmp rax
0x00000000004b0b63 : inc dword ptr [rax - 0x5f0006b0] ; push rax ; stc ; inc eax ; push rax ; stc ; call rax
0x00000000004b0c33 : inc dword ptr [rax - 0x67000678] ; mov cl, bh ; call rax
0x00000000004b0487 : inc dword ptr [rax - 0x70] ; clc ; call rax
0x00000000004b069f : inc dword ptr [rax - 0x73] ; clc ; call rax
0x00000000004afc23 : inc dword ptr [rax - 0x7f0007ed] ; adc eax, 0x1780fff8 ; clc ; call qword ptr [rax]
0x00000000004b08af : inc dword ptr [rax - 0x7f] ; clc ; jmp rax
0x000000000046bf4d : inc dword ptr [rax - 0x91743] ; jmp qword ptr [rax]
0x00000000004607e5 : inc dword ptr [rax - 0x93b43] ; jmp qword ptr [rax]
0x00000000004afd3b : inc dword ptr [rax - 0xa] ; idiv edi ; nop ; div edi ; jmp rax
0x000000000046d217 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor eax, 0x267bfd ; jmp rax
0x00000000004704e1 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret 0xc748
0x0000000000461e19 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; retf 0x8944
0x0000000000464de1 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; or al, 0x89 ; ret 0xc689
0x00000000004607a6 : inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x000000000046c107 : inc dword ptr [rax] ; add byte ptr [rax], al ; add dh, al ; test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x000000000042eb61 : inc dword ptr [rax] ; add byte ptr [rax], al ; and ecx, 0xff ; sub eax, ecx ; ret
0x000000000044944f : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x000000000042eb67 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x00000000004b08ef : inc dword ptr [rax] ; clc ; jmp qword ptr [rax]
0x00000000004afe5f : inc dword ptr [rax] ; cmp eax, edi ; call rax
0x00000000004b0a23 : inc dword ptr [rax] ; fdiv st(0), st(0) ; jmp qword ptr [rax + 0x40fff8dd]
0x00000000004aff7f : inc dword ptr [rax] ; imul edi, eax, -1 ; nop ; push -8 ; jmp qword ptr [rax]
0x00000000004af9bb : inc dword ptr [rax] ; jge 0x4af9ba ; jmp qword ptr [rax]
0x00000000004af9eb : inc dword ptr [rax] ; jns 0x4af9ea ; call qword ptr [rax]
0x00000000004af9eb : inc dword ptr [rax] ; jns 0x4af9f2 ; call qword ptr [rax]
0x00000000004b09c7 : inc dword ptr [rax] ; lodsb al, byte ptr [rsi] ; clc ; call qword ptr [rax]
0x00000000004afbf3 : inc dword ptr [rax] ; or al, 0xf8 ; jmp rax
0x00000000004b0197 : inc dword ptr [rax] ; push 0x6790fff8 ; clc ; jmp qword ptr [rax]
0x00000000004b0b53 : inc dword ptr [rax] ; push rax ; stc ; jmp qword ptr [rax]
0x00000000004b0b77 : inc dword ptr [rax] ; push rcx ; stc ; jmp qword ptr [rax]
0x00000000004b0b97 : inc dword ptr [rax] ; push rdx ; stc ; jmp qword ptr [rax]
0x00000000004b1a57 : inc dword ptr [rax] ; retf 0xfff9
0x00000000004b0abf : inc dword ptr [rax] ; stc ; call qword ptr [rax]
0x00000000004add5e : inc dword ptr [rax] ; sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004af9db : inc dword ptr [rax] ; xchg bh, dh ; jmp qword ptr [rax]
0x00000000004b0477 : inc dword ptr [rax] ; xchg eax, edx ; clc ; call qword ptr [rax + 0x20fff891]
0x00000000004afdd3 : inc dword ptr [rax] ; xor al, 0xf8 ; jmp rax
0x0000000000473a6f : inc dword ptr [rbp + 0x23850fc0] ; retf
0x000000000048d1c8 : inc dword ptr [rbp + 0x31] ; dec dword ptr [rax - 0x39] ; ret
0x0000000000456ab4 : inc dword ptr [rbp + 0x31] ; fisttp dword ptr [rcx - 0x7d] ; ret
0x00000000004069f3 : inc dword ptr [rbp + 0x4dc879c0] ; mov edi, esp ; jmp 0x4069d0
0x0000000000485f8f : inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x0000000000460972 : inc dword ptr [rbp + 0x79850fc9] ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x00000000004a7e6c : inc dword ptr [rbp + 0xf] ; mov dh, 0xdb ; movsxd rax, dword ptr [r9 + r11*4] ; add rax, r9 ; jmp rax
0x000000000048c90c : inc dword ptr [rbp - 0x76b08a40] ; ret
0x0000000000403a60 : inc dword ptr [rbp - 0x7aa48740] ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000400947 : inc dword ptr [rbx + 0x438d01c1] ; call rbx
0x0000000000483d07 : inc dword ptr [rbx + rcx*4 + 0x44] ; and al, 0xc ; jmp 0x483cc3
0x000000000046c25c : inc dword ptr [rbx + rcx*4 - 0x63] ; idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000040e7db : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004a9b99 : inc dword ptr [rbx - 0x38b7f808] ; ret 0xffff
0x000000000045b210 : inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x0000000000477eb2 : inc dword ptr [rbx - 0x78f0d008] ; sbb eax, 0x89000002 ; ret 0x348
0x0000000000457a8b : inc dword ptr [rbx - 0x7af0f808] ; xchg eax, esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000004a7d93 : inc dword ptr [rbx - 0x7bf0bf1e] ; ret
0x000000000041f9ae : inc dword ptr [rbx - 0x7bf0fe1a] ; pop rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x0000000000460764 : inc dword ptr [rbx - 0x8f743] ; call qword ptr [rax]
0x000000000044950d : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000004a994d : inc dword ptr [rbx] ; mov eax, 4 ; jne 0x4a997a ; ret
0x000000000044947b : inc dword ptr [rbx] ; pop rbx ; ret
0x0000000000489519 : inc dword ptr [rcx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000461b32 : inc dword ptr [rcx + 0x29] ; ret 0x8545
0x000000000046e8a9 : inc dword ptr [rcx + 0x29] ; retf 0x98e9
0x00000000004611cc : inc dword ptr [rcx + 0x39] ; fmul qword ptr [rdi] ; lea ebp, [rdx] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000415d8d : inc dword ptr [rcx + 0xf] ; in al, dx ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046812b : inc dword ptr [rcx + 0xf] ; mov dh, 0x34 ; add dword ptr [rbp - 0x41f040be], ecx ; retf 0x53c
0x00000000004a3984 : inc dword ptr [rcx + 0xf] ; mov dh, 0x49 ; add al, 0x89 ; retf 0xeac0
0x00000000004627c6 : inc dword ptr [rcx + 0xf] ; mov esi, 0x3d8d48c7 ; outsb dx, byte ptr [rsi] ; retf
0x0000000000462771 : inc dword ptr [rcx + 0xf] ; mov esi, 0x3d8d48c7 ; ret
0x000000000048b252 : inc dword ptr [rcx + rbp - 0x40] ; ret
0x0000000000413a5b : inc dword ptr [rcx + rcx*4 - 0x18] ; syscall
0x0000000000479551 : inc dword ptr [rcx + rcx*4 - 0x40] ; jmp 0x479527
0x000000000046496d : inc dword ptr [rcx + rdi - 0x20] ; je 0x4647a8 ; jmp 0x464946
0x00000000004b05fb : inc dword ptr [rcx + rdx*4 - 8] ; call rsp
0x0000000000494a89 : inc dword ptr [rcx - 0x48] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x00000000004b1377 : inc dword ptr [rcx - 0x500066b] ; xchg eax, ebp ; stc ; jmp rsi
0x0000000000453f6e : inc dword ptr [rcx - 0x77] ; ret
0x0000000000457256 : inc dword ptr [rcx - 0x77] ; ret 0x5be9
0x0000000000473f86 : inc dword ptr [rcx - 0x77] ; ret 0x8141
0x0000000000471017 : inc dword ptr [rcx - 0x77] ; ret 0x8341
0x000000000045b213 : inc dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000046012e : inc dword ptr [rcx - 0x7d] ; in al, dx ; add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x000000000046f666 : inc dword ptr [rcx - 0x7d] ; retf
0x000000000044b8b7 : inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x00000000004b11a3 : inc dword ptr [rcx - 0x7e00066b] ; xchg eax, ebp ; stc ; call rdx
0x000000000046b4bf : inc dword ptr [rcx - 1] ; push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004bf95f : inc dword ptr [rcx - 5] ; jmp rcx
0x000000000046056c : inc dword ptr [rcx] ; add byte ptr [rax], al ; add bh, al ; test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x000000000046c911 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add dh, al ; test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x0000000000466bcf : inc dword ptr [rcx] ; retf
0x000000000042fc84 : inc dword ptr [rdi] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004bf95b : inc dword ptr [rdx + 0x44fffb1d] ; and ebx, edi ; jmp rcx
0x00000000004b003b : inc dword ptr [rdx + 0x6b] ; clc ; call rdx
0x00000000004b0103 : inc dword ptr [rdx + rbp*2 - 8] ; call rsp
0x00000000004b0533 : inc dword ptr [rdx - 0x6e] ; clc ; call rdx
0x00000000004b0763 : inc dword ptr [rdx] ; cmp eax, -1 ; jb 0x4b06f4 ; clc ; jmp rdx
0x0000000000440d8d : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000004affd7 : inc dword ptr [rsi + 0x68] ; clc ; call rsi
0x00000000004b04cf : inc dword ptr [rsi - 0x71] ; clc ; call rsi
0x00000000004a9972 : inc dword ptr [rsi*2 + 0x8b80f] ; add byte ptr [rax], al ; ret
0x00000000004affc7 : inc dword ptr [rsi] ; push -8 ; call qword ptr [rsi + 0x26fff869]
0x00000000004b04bf : inc dword ptr [rsi] ; xchg eax, ecx ; clc ; call qword ptr [rsi + 0x26fff890]
0x00000000004afd5b : inc eax ; add al, bh ; call qword ptr [rax]
0x0000000000447daa : inc eax ; add rsp, 0x100 ; sub rax, rdx ; ret
0x00000000004b06df : inc eax ; cmp eax, -1 ; xor byte ptr [rbx - 0x7d5f0008], al ; clc ; call qword ptr [rax]
0x00000000004b0187 : inc eax ; imul edi, eax, 0xf86950ff ; jmp rax
0x00000000004af9b3 : inc eax ; jp 0x4af9b2 ; jmp rax
0x00000000004b0b6b : inc eax ; push rax ; stc ; call rax
0x00000000004b0b8f : inc eax ; push rcx ; stc ; jmp rax
0x00000000004b0aaf : inc eax ; stc ; call rax
0x00000000004aff27 : inc eax ; sub al, 0xf8 ; call qword ptr [rax]
0x000000000042d4bc : inc ebp ; std ; xlatb ; ret 0xe883
0x000000000047bedc : inc ebx ; nop ; xor eax, eax ; ret
0x0000000000419946 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000044acba : inc ebx ; nop dword ptr [rax] ; mov eax, 8 ; syscall
0x00000000004a29b8 : inc edi ; sbb byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047193e : inc esi ; add al, 2 ; add dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000439888 : inc r11b ; cmp dl, 1 ; jb 0x4398a0 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000425aeb : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000042c284 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049797f : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x00000000004aa1cb : insb byte ptr [rdi], dx ; and al, 8 ; jmp 0x4aa1e7
0x00000000004b0909 : insb byte ptr [rdi], dx ; clc ; jmp qword ptr [rax]
0x00000000004aff75 : insb byte ptr [rdi], dx ; clc ; jmp rax
0x00000000004c5ffe : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004c55b1 : insb byte ptr [rdi], dx ; jae 0x4c55f4 ; lahf ; push -0x57d3205 ; call 0xffffffffab5a20b9
0x00000000004c55b0 : insb byte ptr [rdi], dx ; jae 0x4c55f5 ; lahf ; push -0x57d3205 ; call 0xffffffffab5a20ba
0x00000000004d0da8 : insb byte ptr [rdi], dx ; mov es, word ptr [rax] ; add ah, dh ; lahf ; sti ; call rdx
0x0000000000464eb0 : insb byte ptr [rdi], dx ; movsd dword ptr [rdi], dword ptr [rsi] ; add eax, 0x6f0f6600 ; ret 0x33e8
0x000000000045eef5 : insb byte ptr [rdi], dx ; ret 0x4c40
0x00000000004c53c6 : insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x0000000000425800 : insb byte ptr [rdi], dx ; xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000049e010 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044c5d4 : insd dword ptr [rdi], dx ; adc byte ptr [rbp - 0x7b], cl ; in eax, dx ; jne 0x44c62c ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044c600 : insd dword ptr [rdi], dx ; adc byte ptr [rbp - 0x7b], cl ; in eax, dx ; jne 0x44c68c ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000454c26 : insd dword ptr [rdi], dx ; add al, 0 ; add bh, dh ; ret 0xf800
0x000000000040b1ef : insd dword ptr [rdi], dx ; add al, 0 ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x0000000000478eea : insd dword ptr [rdi], dx ; add al, 0 ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000040fd6e : insd dword ptr [rdi], dx ; add byte ptr [rax + 0x39], cl ; ret
0x000000000040fd67 : insd dword ptr [rdi], dx ; add byte ptr [rax - 0x39], cl ; rcl al, 0x92 ; insd dword ptr [rdi], dx ; add byte ptr [rax + 0x39], cl ; ret
0x000000000047a366 : insd dword ptr [rdi], dx ; add byte ptr [rax - 0x39], cl ; ret 0x8c20
0x0000000000466c1a : insd dword ptr [rdi], dx ; add byte ptr [rax - 0x39], cl ; ret 0x92c8
0x0000000000414a73 : insd dword ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000004143f9 : insd dword ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; ret 0x294d
0x0000000000461707 : insd dword ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x00000000004256fb : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000004cec61 : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; loop 0x4cec66 ; jmp qword ptr [rax]
0x000000000047d210 : insd dword ptr [rdi], dx ; add byte ptr [rcx], dh ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x000000000049ef10 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004c57a9 : insd dword ptr [rdi], dx ; add dword ptr [rbp - 9], 0x8d626770 ; rcl byte ptr [rdi], cl ; retf
0x00000000004b0949 : insd dword ptr [rdi], dx ; clc ; jmp qword ptr [rax + 0x20fff86e]
0x000000000041902f : insd dword ptr [rdi], dx ; fdiv st(7), st(0) ; dec dword ptr [rax - 0x77] ; out 0x31, eax ; shr al, cl ; ret
0x00000000004ab922 : insd dword ptr [rdi], dx ; js 0x4ab99f ; ret 0x8b48
0x0000000000404712 : insd dword ptr [rdi], dx ; or byte ptr [rcx - 0x77ba7639], 0xe8 ; ret 0x57e
0x00000000004c5fff : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004c43ad : insd dword ptr [rdi], dx ; ret 0xb9b9
0x0000000000420af9 : insd dword ptr [rdi], dx ; sub eax, dword ptr [rax] ; ret
0x00000000004c52bf : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000452785 : int 0x19
0x000000000043fd6f : int 0x41
0x000000000043c06f : int 0x7e
0x0000000000469b9a : int 0x80
0x00000000004779c2 : int 0x84
0x000000000045e40f : int 0xbc
0x0000000000456ff6 : int 0xf
0x0000000000436c5b : int1 ; adc al, 0x2a ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000047e596 : int1 ; call rbx
0x0000000000448b2c : int1 ; dec byte ptr [rax + 0x7f] ; jl 0x448b53 ; cld ; vzeroupper ; ret
0x0000000000457e32 : int1 ; je 0x457fe1 ; mov rdx, rax ; jmp 0x457df9
0x0000000000458237 : int1 ; je 0x457fe1 ; mov rdx, rax ; jmp 0x4581fe
0x00000000004582ae : int1 ; je 0x457fe1 ; mov rdx, rax ; jmp 0x458275
0x0000000000447f7b : int1 ; jl 0x447fcc ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000447f9c : int1 ; jl 0x447fed ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000447fa9 : int1 ; jl 0x448000 ; adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x0000000000447faf : int1 ; jl 0x448000 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000448084 : int1 ; jl 0x4480d5 ; adc dword ptr [rsi - 1], edx ; ret
0x00000000004480dc : int1 ; jl 0x44812d ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000448179 : int1 ; jl 0x4481ca ; adc dword ptr [rsi + 7], edx ; ret
0x0000000000449405 : int1 ; jmp rcx
0x000000000047bc3b : int1 ; jne 0x47bc36 ; lea eax, [rdx + rdi] ; ret
0x0000000000488a17 : int1 ; jne 0x4889f4 ; ret
0x00000000004c5284 : int1 ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x0000000000449529 : int1 ; mov eax, eax ; ret
0x0000000000435dab : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004311df : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004876ae : int1 ; mov rsi, rax ; call 0x423926
0x0000000000447343 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000004316bb : int1 ; out 7, al ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000449510 : int1 ; pop rbx ; mov eax, eax ; ret
0x00000000004040eb : int1 ; ret
0x00000000004c59d6 : int1 ; ret 0x5803
0x00000000004abf63 : int1 ; retf 0x22
0x00000000004a5ce5 : int1 ; std ; dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000004c79d1 : int1 ; std ; jmp rax
0x0000000000447347 : int1 ; sub eax, edx ; ret
0x000000000042d2a1 : int1 ; sub rax, rcx ; je 0x42d2bb ; sbb eax, eax ; or eax, 1 ; ret
0x000000000042ecec : invd ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004959c0 : iretd ; call 0xffffffffce9de51c
0x0000000000497650 : iretd ; call 0xffffffffce9e01ac
0x00000000004cf921 : iretd ; cli ; jmp qword ptr [rbx]
0x0000000000400946 : iretd ; inc dword ptr [rbx + 0x438d01c1] ; call rbx
0x00000000004a427a : iretd ; mov qword ptr [rbp - 0xf0], rcx ; call 0x4004f2
0x00000000004b2001 : iretd ; stc ; call rbx
0x00000000004b2039 : iretd ; stc ; dec ecx ; sar cl, cl ; call qword ptr [rax]
0x00000000004070bd : ja 0x40709e ; mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000439cb3 : ja 0x439cb7 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000445497 : ja 0x44549d ; ret
0x00000000004454b3 : ja 0x4454bd ; mov dword ptr [rdi], ecx ; ret
0x00000000004454f4 : ja 0x445503 ; mov qword ptr [rdi], rcx ; ret
0x0000000000445579 : ja 0x44558d ; ret
0x00000000004455cf : ja 0x4455e7 ; ret
0x0000000000445651 : ja 0x44566d ; ret
0x0000000000445ab7 : ja 0x445ac1 ; lea rax, [rdi + 2] ; ret
0x0000000000445ad3 : ja 0x445ae1 ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x0000000000445b24 : ja 0x445b37 ; mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x0000000000445c09 : ja 0x445c21 ; lea rax, [rdi + 0x10] ; ret
0x0000000000445c7f : ja 0x445c9b ; lea rax, [rdi + 0x14] ; ret
0x0000000000445d01 : ja 0x445d21 ; lea rax, [rdi + 0x18] ; ret
0x0000000000448284 : ja 0x4482b5 ; jb 0x448296 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000448450 : ja 0x44847c ; movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000044851e : ja 0x44854a ; movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000004485e4 : ja 0x44862a ; jb 0x4485f6 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000448a34 : ja 0x448a92 ; jb 0x448a46 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000448f62 : ja 0x448f7b ; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000448f12 : ja 0x448f84 ; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000449003 : ja 0x449020 ; jb 0x44900f ; mov byte ptr [rdi], cl ; ret
0x0000000000449193 : ja 0x449163 ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x0000000000449171 : ja 0x4491a8 ; jb 0x449180 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000449369 : ja 0x449339 ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x0000000000449339 : ja 0x44937e ; jb 0x449348 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000449486 : ja 0x449495 ; add cl, al ; call 0xffffffff84071da2
0x000000000044a31c : ja 0x44a348 ; hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x000000000044a8db : ja 0x44a8e3 ; ret
0x000000000044a929 : ja 0x44a933 ; ret
0x000000000044a915 : ja 0x44a954 ; mov edi, eax ; mov rsi, rdx ; mov eax, 5 ; syscall
0x000000000044ab34 : ja 0x44ab93 ; ret
0x000000000044abca : ja 0x44abd3 ; ret
0x000000000044ac07 : ja 0x44ac63 ; ret
0x000000000044ac9d : ja 0x44acab ; ret
0x000000000044accd : ja 0x44acdb ; ret
0x000000000044aed7 : ja 0x44af1b ; ret
0x000000000044af4d : ja 0x44af5b ; ret
0x000000000044b6a6 : ja 0x44b6b3 ; ret
0x000000000044b869 : ja 0x44b8ec ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000044daa4 : ja 0x44dac0 ; mov qword ptr [rax + 0x20], rcx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000044e230 : ja 0x44e25d ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000044ef55 : ja 0x44efa9 ; movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x000000000044efcc : ja 0x44efaa ; movsxd rax, dword ptr [rbp + rax*4] ; add rax, rbp ; jmp rax
0x000000000045c9d3 : ja 0x45c9e3 ; ret
0x00000000004678e2 : ja 0x4678c5 ; mov eax, r9d ; ret
0x000000000046d776 : ja 0x46d7aa ; add byte ptr [rax - 0x75], cl ; add al, 0xc8 ; mov ecx, 1 ; jmp rax
0x0000000000478635 : ja 0x47866c ; movzx eax, al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000047954c : ja 0x47935a ; mov eax, r8d ; jmp 0x47952c
0x000000000047dbd8 : ja 0x47dc2c ; add eax, edi ; sub rax, rdx ; vzeroupper ; ret
0x000000000047f059 : ja 0x47f027 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000047f8db : ja 0x47f8e3 ; ret
0x000000000047f92f : ja 0x47f93b ; ret
0x000000000047fc50 : ja 0x47fc7b ; ret
0x000000000049615e : ja 0x4961b0 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004a2148 : ja 0x4a213a ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004a6295 : ja 0x4a62a6 ; add byte ptr [rax], al ; mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x00000000004a8234 : ja 0x4a8279 ; mov eax, dword ptr [rbp + 8] ; movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x00000000004a952d : ja 0x4a9536 ; sbb eax, eax ; ret
0x00000000004aaf85 : ja 0x4aafe2 ; mov ch, 0xff ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b0925 : ja 0x4b0925 ; jmp qword ptr [rax + 0x20fff878]
0x00000000004b0965 : ja 0x4b0961 ; jmp qword ptr [rax]
0x00000000004c5a44 : ja 0x4c59cb ; ret 0x48f
0x00000000004cd4d0 : ja 0x4cd505 ; jmp qword ptr [rbx]
0x0000000000417d77 : jae 0x417dbd ; cmovne eax, edx ; mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000419abd : jae 0x419ae5 ; movzx eax, byte ptr [rax] ; ret
0x000000000042d215 : jae 0x42d4bb ; xor eax, eax ; vzeroupper ; ret
0x0000000000448ffe : jae 0x44901e ; cmp dl, 1 ; ja 0x449025 ; jb 0x449014 ; mov byte ptr [rdi], cl ; ret
0x000000000044a84d : jae 0x44a852 ; ret
0x000000000044b76d : jae 0x44b772 ; ret
0x000000000044b90d : jae 0x44b912 ; ret
0x000000000044b93d : jae 0x44b942 ; ret
0x000000000044b96d : jae 0x44b972 ; ret
0x000000000044d780 : jae 0x44d785 ; ret
0x000000000044d7ad : jae 0x44d7b2 ; ret
0x000000000044dab4 : jae 0x44daa3 ; ret
0x00000000004568cf : jae 0x45685c ; retf 0xb941
0x000000000045c77e : jae 0x45c7c5 ; xor eax, eax ; pop rbx ; ret
0x00000000004787a3 : jae 0x4787b3 ; add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rcx ; jmp rax
0x000000000047c24f : jae 0x47c2ad ; push 0 ; lea r9, [rbp - 0x40] ; mov rdi, r15 ; call r12
0x000000000047f85d : jae 0x47f862 ; ret
0x0000000000489c9b : jae 0x489c45 ; xor eax, eax ; ret
0x000000000049d0c9 : jae 0x49d145 ; add dword ptr [rax], eax ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000004a0baa : jae 0x4a0bab ; movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x00000000004a3a54 : jae 0x4a3a37 ; mov eax, 1 ; ret
0x00000000004a3e5d : jae 0x4a3e62 ; ret
0x00000000004aa4b6 : jae 0x4aa4c9 ; mov rdx, qword ptr [r15] ; mov rdi, r13 ; call r14
0x00000000004b0959 : jae 0x4b0959 ; jmp qword ptr [rax + 0x20fff874]
0x00000000004c4002 : jae 0x4c3fe4 ; jo 0x4c4080 ; mov ebp, 0xfb67d10d ; ret
0x00000000004c4e9e : jae 0x4c4e79 ; push rsi ; pop rdx ; je 0x4c4e6e ; ret 0xacfc
0x00000000004c55b2 : jae 0x4c55f3 ; lahf ; push -0x57d3205 ; call 0xffffffffab5a20b8
0x00000000004c9ad2 : jae 0x4c9ae0 ; ret
0x000000000041ef47 : jb 0x41ef31 ; mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x000000000042579a : jb 0x4257eb ; sub eax, dword ptr [rax] ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x000000000042f13c : jb 0x42f156 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042f1ea : jb 0x42f1fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f28c : jb 0x42f2a6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042f33a : jb 0x42f34a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f3dc : jb 0x42f3f6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042f48a : jb 0x42f49a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f52c : jb 0x42f546 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042f5da : jb 0x42f5ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f67c : jb 0x42f696 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042f72a : jb 0x42f73a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f7cc : jb 0x42f7e6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042f87a : jb 0x42f88a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f91c : jb 0x42f936 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042f9ca : jb 0x42f9da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042fa6a : jb 0x42fa8b ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042fb1a : jb 0x42fb2a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042fbbc : jb 0x42fbd6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042fc6a : jb 0x42fc7a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042fd0c : jb 0x42fd26 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042fdba : jb 0x42fdca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042fe5c : jb 0x42fe76 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042ff0a : jb 0x42ff1a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ffac : jb 0x42ffc6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000043005a : jb 0x43006a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004300fc : jb 0x430116 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000004301aa : jb 0x4301ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043024c : jb 0x430266 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000004302fa : jb 0x43030a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043039c : jb 0x4303b6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000043044a : jb 0x43045a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431b0c : jb 0x431b26 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000431bba : jb 0x431bca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431c5c : jb 0x431c76 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000431d0a : jb 0x431d1a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431dac : jb 0x431dc6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000431e5a : jb 0x431e6a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431efc : jb 0x431f16 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000431faa : jb 0x431fba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043204c : jb 0x432066 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000004320fa : jb 0x43210a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043219c : jb 0x4321b6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000043224a : jb 0x43225a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004322ec : jb 0x432306 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000043239a : jb 0x4323aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043243a : jb 0x43245b ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000004324ea : jb 0x4324fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043258c : jb 0x4325a6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000043263a : jb 0x43264a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004326dc : jb 0x4326f6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000043278a : jb 0x43279a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043282c : jb 0x432846 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000004328da : jb 0x4328ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043297c : jb 0x432996 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000432a2a : jb 0x432a3a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000432acc : jb 0x432ae6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000432b7a : jb 0x432b8a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000432c1c : jb 0x432c36 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000432cca : jb 0x432cda ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000432d6c : jb 0x432d86 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000432e1a : jb 0x432e2a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043988e : jb 0x43989a ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447fb9 : jb 0x447fd0 ; vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000447fd2 : jb 0x447fe9 ; vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000447fe5 : jb 0x447ff4 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000447ff0 : jb 0x448003 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000447ffd : jb 0x448005 ; mov byte ptr [rdi], cl ; ret
0x0000000000448204 : jb 0x44820d ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000448286 : jb 0x448294 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000448285 : jb 0x448295 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000044826b : jb 0x4483df ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004485e6 : jb 0x4485f4 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004485c6 : jb 0x44879c ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000448a36 : jb 0x448a44 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000448a11 : jb 0x448c57 ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000449005 : jb 0x44900d ; mov byte ptr [rdi], cl ; ret
0x0000000000449173 : jb 0x44917e ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000044933b : jb 0x449346 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000457f6e : jb 0x457fdc ; mov rdx, rax ; jmp 0x457f33
0x000000000046cdc9 : jb 0x46cdde ; lea rax, [rsi + 8] ; mov qword ptr [rdx + 8], rax ; jmp 0x46cdab
0x0000000000488a10 : jb 0x488a2b ; mov rsi, rdx ; cmp rcx, rsi ; jne 0x4889fb ; ret
0x00000000004b0260 : jb 0x4b02c2 ; clc ; jmp rdx
0x00000000004b0258 : jb 0x4b02c3 ; clc ; push rdx ; pop rbp ; clc ; push qword ptr [rdx + 0x5d] ; clc ; jmp rdx
0x00000000004b0768 : jb 0x4b06ef ; clc ; jmp rdx
0x00000000004b0919 : jb 0x4b0915 ; jmp qword ptr [rax]
0x00000000004c2d14 : jb 0x4c2d4b ; pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004c5658 : jb 0x4c56b2 ; call 0x4c168017
0x00000000004c8b91 : jb 0x4c8b89 ; jmp qword ptr [rax]
0x00000000004c8b90 : jb 0x4c8b8a ; jmp qword ptr [rax]
0x0000000000402ae4 : jbe 0x402af8 ; syscall
0x0000000000410661 : jbe 0x410621 ; mov r11d, 1 ; jmp 0x410636
0x0000000000411596 : jbe 0x4115c9 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000041198f : jbe 0x4119e2 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041791a : jbe 0x41793b ; mov rax, qword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000418006 : jbe 0x418023 ; mov rax, qword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000420209 : jbe 0x42023b ; add byte ptr [rax - 0x7d], cl ; retf 0x4901
0x0000000000429ca7 : jbe 0x429cc0 ; movzx ecx, byte ptr [rsi + rdx] ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000042b407 : jbe 0x42b420 ; movzx ecx, byte ptr [rsi + rdx] ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000042c3e7 : jbe 0x42c400 ; movzx ecx, byte ptr [rsi + rdx] ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000042c6f6 : jbe 0x42c735 ; add rax, rdi ; ret
0x000000000042c706 : jbe 0x42c737 ; lea rax, [rdi + rax + 0x10] ; ret
0x000000000042c716 : jbe 0x42c737 ; lea rax, [rdi + rax + 0x20] ; ret
0x000000000042c726 : jbe 0x42c737 ; lea rax, [rdi + rax + 0x30] ; ret
0x000000000042c48f : jbe 0x42c73c ; add rax, rdi ; add rax, rcx ; ret
0x000000000042cb37 : jbe 0x42cba8 ; add rax, rdi ; vzeroupper ; ret
0x000000000042cb47 : jbe 0x42cbac ; add rax, 0x20 ; add rax, rdi ; vzeroupper ; ret
0x000000000042cb67 : jbe 0x42cbac ; add rax, 0x40 ; add rax, rdi ; vzeroupper ; ret
0x000000000042cb87 : jbe 0x42cbac ; add rax, 0x60 ; add rax, rdi ; vzeroupper ; ret
0x00000000004579a2 : jbe 0x45799c ; ret
0x000000000045ea79 : jbe 0x45ea39 ; mov r11d, 1 ; jmp 0x45ea4e
0x000000000046785d : jbe 0x467879 ; add r12, 0x14 ; jmp 0x465dda
0x000000000047dbd7 : jbe 0x47dc5b ; add rax, rdi ; sub rax, rdx ; vzeroupper ; ret
0x000000000048bdbf : jbe 0x48bdcb ; ret
0x0000000000497dd3 : jbe 0x497de0 ; add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004a9999 : jbe 0x4a99bc ; cmp dil, 0x30 ; jne 0x4a99d4 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x00000000004aa7f9 : jbe 0x4aa81c ; cmp dil, 0x30 ; jne 0x4aa834 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x00000000004affc4 : jbe 0x4b003b ; clc ; inc dword ptr [rsi] ; push -8 ; call qword ptr [rsi + 0x26fff869]
0x00000000004b04bc : jbe 0x4b045a ; clc ; inc dword ptr [rsi] ; xchg eax, ecx ; clc ; call qword ptr [rsi + 0x26fff890]
0x00000000004b0961 : jbe 0x4b0961 ; jmp qword ptr [rax + 0x20fff877]
0x00000000004b10c8 : jbe 0x4b1064 ; stc ; jmp rsi
0x00000000004c58dc : jbe 0x4c58af ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x00000000004c58db : jbe 0x4c58b0 ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x0000000000400426 : je 0x40042c ; call rax
0x0000000000400aa9 : je 0x400ac0 ; pop rbp ; mov edi, 0x6d8bd0 ; jmp rax
0x0000000000400aeb : je 0x400b00 ; pop rbp ; mov edi, 0x6d8bd0 ; jmp rax
0x000000000040245b : je 0x40248d ; adc byte ptr [rbx + 0x480c247c], cl ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000403a55 : je 0x403a5d ; add al, 0x48 ; add esi, dword ptr [rbp - 0x68] ; call 0x4004b9
0x0000000000406c8e : je 0x406c9e ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x0000000000412d9c : je 0x412e12 ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000041366d : je 0x413698 ; cmp byte ptr [rax + 0x29], cl ; ret
0x0000000000413bc8 : je 0x413bcf ; ret
0x000000000041579c : je 0x4157d3 ; dec dword ptr [rax + 0x21] ; retf 0x2148
0x0000000000417931 : je 0x417960 ; or al, 0x48 ; mov dword ptr [rsp], edi ; call 0x413bc9
0x00000000004179eb : je 0x417973 ; mov eax, 0xffffffff ; ret
0x0000000000417942 : je 0x417974 ; or al, 0x48 ; mov edi, dword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000417bdb : je 0x417b63 ; mov eax, 0xffffffff ; ret
0x0000000000417db5 : je 0x417dc3 ; ret
0x0000000000418c35 : je 0x418c45 ; and dword ptr [rbx], 0xffffffef ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000418d17 : je 0x418d32 ; cmp rsi, rcx ; jne 0x418d1a ; lea eax, [rdx + rdi] ; ret
0x0000000000419af5 : je 0x419b14 ; xor eax, eax ; cmp esi, -1 ; setne al ; neg eax ; ret
0x000000000041a9ce : je 0x41a9ec ; mov dword ptr [rip + 0x2bf4b6], 0 ; ret
0x0000000000423bb2 : je 0x423bde ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x00000000004240a3 : je 0x4240b6 ; lea rax, [rdx - 0x10] ; ret
0x000000000042409e : je 0x4240d3 ; test rax, rax ; je 0x4240bb ; lea rax, [rdx - 0x10] ; ret
0x00000000004242b0 : je 0x42423d ; retf 0x4c89
0x00000000004242af : je 0x42423e ; retf 0x4c89
0x0000000000425762 : je 0x42572d ; ret
0x000000000042851e : je 0x428534 ; add byte ptr [rdi + 0x63], cl ; or al, 0x8a ; lea r10, [r10 + r9] ; jmp r10
0x000000000042b4e3 : je 0x42b4ad ; lea r10, [r10 + r9] ; jmp r10
0x000000000042c3ca : je 0x42c3d2 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000042c5fc : je 0x42c653 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042c798 : je 0x42c7bb ; bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x000000000042c8da : je 0x42c931 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042d2a5 : je 0x42d2b7 ; sbb eax, eax ; or eax, 1 ; ret
0x000000000042e8c7 : je 0x42e8d1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043e303 : je 0x43e2cd ; lea r10, [r10 + r9] ; jmp r10
0x000000000043fe93 : je 0x43fe5d ; lea r10, [r10 + r9] ; jmp r10
0x0000000000441671 : je 0x441689 ; bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x0000000000441c8c : je 0x441c7a ; pmovmskb edx, xmm4 ; test edx, edx ; je 0x441ca6 ; bsf eax, edx ; ret
0x0000000000441c94 : je 0x441c9e ; bsf eax, edx ; ret
0x0000000000441c94 : je 0x441c9f ; bsf eax, edx ; ret
0x0000000000441d3d : je 0x441d55 ; bsf rax, rdx ; ret
0x0000000000441d3d : je 0x441d56 ; bsf rax, rdx ; ret
0x0000000000441cdc : je 0x441d69 ; bsf rax, rdx ; ret
0x0000000000441cdc : je 0x441d6a ; bsf rax, rdx ; ret
0x0000000000447ea4 : je 0x447e8b ; movsxd rax, ecx ; add rax, rdi ; sub rax, rsi ; ret
0x0000000000448313 : je 0x448334 ; ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x00000000004499be : je 0x4499cc ; xor eax, eax ; ret
0x00000000004499b9 : je 0x4499d9 ; cmp eax, 2 ; je 0x4499d1 ; xor eax, eax ; ret
0x0000000000449a0d : je 0x4499f3 ; ret
0x0000000000449e35 : je 0x449e47 ; add dword ptr [rax + 0x10], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000449f56 : je 0x449f63 ; add byte ptr [rax + 1], bh ; jmp 0x449f2c
0x000000000044ae48 : je 0x44ae77 ; mov eax, 0x48 ; syscall
0x000000000044b207 : je 0x44b232 ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x000000000044b79a : je 0x44b7a1 ; ret
0x000000000044d889 : je 0x44d88e ; ret
0x000000000044d8ed : je 0x44d8f2 ; ret
0x000000000044e13c : je 0x44e14f ; lea rdi, [rcx + rax + 0x20] ; jmp rdx
0x000000000044e137 : je 0x44e154 ; test rdx, rdx ; je 0x44e154 ; lea rdi, [rcx + rax + 0x20] ; jmp rdx
0x000000000044ee68 : je 0x44ee73 ; ret
0x000000000044ee84 : je 0x44ee99 ; mov dword ptr [rip + 0x287c2c], edx ; pop rbx ; ret
0x000000000044fc18 : je 0x44fbcc ; call 0x45c6b4
0x0000000000452f05 : je 0x452f33 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00000000004536bf : je 0x4536ee ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x00000000004539af : je 0x4539de ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x0000000000453cf7 : je 0x453d26 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000453f36 : je 0x453f65 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000045459e : je 0x4545cc ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000455136 : je 0x455165 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x00000000004561c2 : je 0x4561f1 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000456cbb : je 0x456cea ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000457063 : je 0x457092 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000004574a7 : je 0x4574d6 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x00000000004578e2 : je 0x457910 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000457ea4 : je 0x457ed3 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000457e33 : je 0x457fe0 ; mov rdx, rax ; jmp 0x457df8
0x0000000000458238 : je 0x457fe0 ; mov rdx, rax ; jmp 0x4581fd
0x00000000004582af : je 0x457fe0 ; mov rdx, rax ; jmp 0x458274
0x00000000004581d3 : je 0x458202 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000004586e7 : je 0x458716 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000458b22 : je 0x458b50 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000045a197 : je 0x45a1a3 ; ret
0x000000000045a192 : je 0x45a1a8 ; cmp esi, 3 ; je 0x45a1a8 ; ret
0x000000000045aaea : je 0x45aaf0 ; call rsi
0x000000000045abe6 : je 0x45abec ; call rax
0x000000000045ac20 : je 0x45ac31 ; call 0x4213da
0x000000000045bfeb : je 0x45bff1 ; call rax
0x000000000045c5ae : je 0x45c5bb ; ret
0x0000000000464971 : je 0x4647a4 ; jmp 0x464942
0x000000000046a72c : je 0x46a757 ; and byte ptr [rax + 1], cl ; ret
0x0000000000475367 : je 0x472228 ; jmp 0x471e02
0x0000000000475701 : je 0x47225d ; jmp 0x4719ec
0x000000000047aab6 : je 0x47ab06 ; add esp, 0x20 ; pop rbx ; ret
0x000000000047aab5 : je 0x47ab07 ; add esp, 0x20 ; pop rbx ; ret
0x000000000047b90c : je 0x47b913 ; ret
0x000000000047b929 : je 0x47b936 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047b963 : je 0x47b9c5 ; pop rbp ; pop r12 ; ret
0x000000000047b9ef : je 0x47ba51 ; pop rbp ; pop r12 ; ret
0x000000000047bb4a : je 0x47bb5a ; and dword ptr [rbx], 0xffffffef ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000047bb7a : je 0x47bba4 ; or al, 0xeb ; ret 0x5590
0x000000000047bba6 : je 0x47bbb6 ; and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047bc37 : je 0x47bc52 ; cmp rcx, rsi ; jne 0x47bc3a ; lea eax, [rdx + rdi] ; ret
0x000000000047d8cc : je 0x47d8f5 ; bsf rax, rdx ; ret
0x000000000047d8cc : je 0x47d8f6 ; bsf rax, rdx ; ret
0x000000000047d85c : je 0x47d909 ; bsf rax, rdx ; ret
0x000000000047d85c : je 0x47d90a ; bsf rax, rdx ; ret
0x000000000047dd6b : je 0x47dd73 ; ret
0x000000000047e58e : je 0x47e5bd ; sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov r9, r14 ; call rbx
0x000000000047e6b8 : je 0x47e6c5 ; test edx, edx ; jne 0x47e6b7 ; ret
0x000000000047e7cc : je 0x47e7fa ; bsf rax, rdx ; shr rax, 2 ; ret
0x000000000047eb59 : je 0x47eb79 ; mov cl, dl ; and cl, 0xf ; je 0x47eb89 ; ret
0x000000000047eb60 : je 0x47eb82 ; ret
0x000000000047eb75 : je 0x47eb96 ; add rax, 2 ; ret
0x000000000047fa2b : je 0x47fa5d ; adc byte ptr [rbx - 0x47e7db84], cl ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x000000000047fabd : je 0x47faef ; mov eax, 0x101 ; syscall
0x0000000000480032 : je 0x480131 ; xor eax, eax ; leave ; ret
0x0000000000488a76 : je 0x488a83 ; mov qword ptr [rsi], rdi ; mov rax, rcx ; ret
0x0000000000489515 : je 0x489523 ; lock inc dword ptr [r9 + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000489862 : je 0x489892 ; and byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret
0x000000000048b24d : je 0x48b19f ; sub eax, r8d ; ret
0x00000000004958eb : je 0x495917 ; or byte ptr [rbp + rcx*4 + 5], cl ; retf
0x00000000004983f2 : je 0x498406 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049d213 : je 0x49d1dd ; lea r10, [r10 + r9] ; jmp r10
0x000000000049f1c3 : je 0x49f18d ; lea r10, [r10 + r9] ; jmp r10
0x00000000004a0c5a : je 0x4a0c3b ; ret
0x00000000004a0ec8 : je 0x4a0ef3 ; or byte ptr [rax + 1], cl ; ret
0x00000000004a260c : je 0x4a2622 ; mov rax, qword ptr [r12] ; add rax, qword ptr [rdx + 8] ; call rax
0x00000000004a2abd : je 0x4a2b02 ; shl rdx, 5 ; add rdx, rax ; jmp 0x4a2ad9
0x00000000004a309d : je 0x4a30bc ; test byte ptr [rip + 0x2378f2], 0x40 ; jne 0x4a30d9 ; ret
0x00000000004a3543 : je 0x4a350d ; lea rdi, [rip + 0x234c74] ; call 0xb
0x00000000004a3500 : je 0x4a351a ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a3548 : je 0x4a359c ; and eax, dword ptr [rax] ; call 6
0x00000000004a3686 : je 0x4a3693 ; ret
0x00000000004a3cfa : je 0x4a3d13 ; lea rdi, [rip + 0x2344bd] ; call 0xb
0x00000000004a3d2a : je 0x4a3d43 ; lea rdi, [rip + 0x23448d] ; call 0xb
0x00000000004a3de1 : je 0x4a3dfa ; lea rdi, [rip + 0x2343d6] ; call 0xb
0x00000000004a641d : je 0x4a6448 ; adc byte ptr [rcx - 0x77], cl ; ret
0x00000000004a6813 : je 0x4a6825 ; cmp dil, 0x10 ; jne 0x4a6842 ; xor eax, eax ; ret
0x00000000004a89b8 : je 0x4a89a2 ; add rsp, 0x18 ; ret
0x00000000004a89a1 : je 0x4a89c6 ; add rsp, 0x18 ; ret
0x00000000004a8a48 : je 0x4a8a28 ; ret
0x00000000004a8a89 : je 0x4a8a96 ; mov qword ptr [rdi + rsi*8], rdx ; ret
0x00000000004a8b23 : je 0x4a8b3b ; mov rax, qword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x00000000004a9477 : je 0x4a9492 ; mov rsi, rdi ; mov edi, 1 ; jmp rax
0x00000000004a982b : je 0x4a984a ; xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004a99b3 : je 0x4a99c5 ; cmp dil, 0x10 ; jne 0x4a99d8 ; xor eax, eax ; ret
0x00000000004aa813 : je 0x4aa825 ; cmp dil, 0x10 ; jne 0x4aa838 ; xor eax, eax ; ret
0x00000000004aad7a : je 0x4aad83 ; ret
0x00000000004aadb3 : je 0x4aadc4 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x4aadc9 ; ret
0x00000000004aae8a : je 0x4aae93 ; ret
0x00000000004ab283 : je 0x4ab295 ; cmp dil, 0x10 ; jne 0x4ab2b2 ; xor eax, eax ; ret
0x00000000004abf6a : je 0x4abf83 ; call 0x4213db
0x00000000004ac623 : je 0x4ac62e ; call rax
0x00000000004ac61a : je 0x4ac63c ; mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x4ac637 ; call rax
0x00000000004ac877 : je 0x4ac86b ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004b0820 : je 0x4b07a8 ; clc ; jmp rsp
0x00000000004b0818 : je 0x4b07a9 ; clc ; push rsp ; cmp eax, -1 ; je 0x4b07b0 ; clc ; jmp rsp
0x00000000004b091d : je 0x4b091d ; jmp qword ptr [rax + 0x20fff875]
0x00000000004b095d : je 0x4b0959 ; jmp qword ptr [rax]
0x00000000004c340c : je 0x4c343a ; push -0x51 ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004c4168 : je 0x4c4133 ; xor al, 0xd8 ; ret
0x00000000004c43a7 : je 0x4c43a4 ; jmp 0x4c437e
0x00000000004c4ea2 : je 0x4c4e6a ; ret 0xacfc
0x00000000004c8c51 : je 0x4c8c49 ; call qword ptr [rax]
0x00000000004c8c65 : je 0x4c8c5d ; call qword ptr [rdx]
0x00000000004c8c79 : je 0x4c8c71 ; jmp qword ptr [rax]
0x00000000004c8fb0 : je 0x4c8fc9 ; add byte ptr [rax], al ; xchg spl, r14b ; call qword ptr [rdi]
0x00000000004c96b0 : je 0x4c96d0 ; add byte ptr [rax], al ; pushfq ; mov dl, 0xf4 ; call qword ptr [rax]
0x00000000004ce7cc : je 0x4ce7ff ; stc ; call qword ptr [rsi]
0x0000000000400b1e : jg 0x400b70 ; add al, ch ; retf 0xaa4
0x0000000000417db2 : jg 0x417df2 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x000000000042f1e4 : jg 0x42f1b2 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x42f200 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f334 : jg 0x42f302 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x42f350 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f484 : jg 0x42f452 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x42f4a0 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f5d4 : jg 0x42f5a2 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x42f5f0 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f724 : jg 0x42f6f2 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x42f740 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f874 : jg 0x42f842 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x42f890 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f9c4 : jg 0x42f992 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x42f9e0 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042fb14 : jg 0x42fae2 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x42fb30 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042fc64 : jg 0x42fc32 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x42fc80 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042fdb4 : jg 0x42fd82 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x42fdd0 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ff04 : jg 0x42fed2 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x42ff20 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430054 : jg 0x430022 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x430070 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004301a4 : jg 0x430172 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x4301c0 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004302f4 : jg 0x4302c2 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x430310 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430444 : jg 0x430412 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x430460 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430dc9 : jg 0x430e1c ; ret
0x0000000000430e10 : jg 0x430e60 ; mov ebx, 0x4f7f0ff3 ; retf
0x0000000000430e15 : jg 0x430e68 ; retf
0x0000000000430e4f : jg 0x430e9a ; ret
0x0000000000430e8f : jg 0x430eda ; retf
0x0000000000430fc9 : jg 0x43101c ; ret 0x894c
0x0000000000431010 : jg 0x431060 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x0000000000431015 : jg 0x431068 ; retf 0x894c
0x000000000043104f : jg 0x43109a ; ret 0x894c
0x000000000043108b : jg 0x4310d6 ; retf 0x894c
0x0000000000431bb4 : jg 0x431b82 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x431bd0 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431d04 : jg 0x431cd2 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x431d20 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431e54 : jg 0x431e22 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x431e70 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431fa4 : jg 0x431f72 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x431fc0 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004320f4 : jg 0x4320c2 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x432110 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000432244 : jg 0x432212 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x432260 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000432394 : jg 0x432362 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x4323b0 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004324e4 : jg 0x4324b2 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x432500 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000432634 : jg 0x432602 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x432650 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000432784 : jg 0x432752 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x4327a0 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004328d4 : jg 0x4328a2 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x4328f0 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000432a24 : jg 0x4329f2 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x432a40 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000432b74 : jg 0x432b42 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x432b90 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000432cc4 : jg 0x432c92 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x432ce0 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000432e14 : jg 0x432de2 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x432e30 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000433799 : jg 0x4337ec ; ret
0x00000000004337e0 : jg 0x433830 ; mov ebx, 0x4f7f0ff3 ; retf
0x00000000004337e5 : jg 0x433838 ; retf
0x000000000043381f : jg 0x43386a ; ret
0x000000000043385f : jg 0x4338aa ; retf
0x0000000000433999 : jg 0x4339ec ; ret 0x894c
0x00000000004339e0 : jg 0x433a30 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x00000000004339e5 : jg 0x433a38 ; retf 0x894c
0x0000000000433a1f : jg 0x433a6a ; ret 0x894c
0x0000000000433a5b : jg 0x433aa6 ; retf 0x894c
0x0000000000435d88 : jg 0x435dd9 ; loope 0x435d87 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435dff : jg 0x435e4a ; ret 0xff2
0x0000000000435e18 : jg 0x435e69 ; loop 0x435e17 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435e8f : jg 0x435eda ; ret
0x0000000000435ea8 : jg 0x435ef9 ; jrcxz 0x435ea7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435f38 : jg 0x435f89 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435fb8 : jg 0x436009 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000436038 : jg 0x436089 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004360b8 : jg 0x436109 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000436138 : jg 0x436189 ; call 0x4fc2713a
0x00000000004361b8 : jg 0x436209 ; jmp 0x4fc271ba
0x0000000000436215 : jg 0x436265 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x000000000043621f : jg 0x43626a ; retf 0xff2
0x0000000000436295 : jg 0x4362e5 ; mov ebx, 0x46f00ff2 ; retf
0x000000000043629f : jg 0x4362ea ; retf
0x0000000000436338 : jg 0x436389 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004363b8 : jg 0x436409 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000436448 : jg 0x436499 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004364c8 : jg 0x436519 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043653c : jg 0x436547 ; ret
0x0000000000436596 : jg 0x4365a9 ; ret
0x0000000000436591 : jg 0x4365e1 ; psllq mm1, qword ptr [rdi] ; jg 0x4365ae ; ret
0x0000000000436606 : jg 0x436619 ; ret
0x0000000000436676 : jg 0x436689 ; ret
0x0000000000436671 : jg 0x4366c1 ; or eax, 0xf7f0ff3 ; ret
0x00000000004366e6 : jg 0x4366f9 ; ret
0x00000000004366e1 : jg 0x436731 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000436756 : jg 0x436769 ; ret
0x0000000000436751 : jg 0x4367a1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000004367c6 : jg 0x4367d9 ; ret
0x00000000004367c1 : jg 0x436811 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000436836 : jg 0x436849 ; ret
0x0000000000436831 : jg 0x436881 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000004368a6 : jg 0x4368b9 ; ret
0x00000000004368a1 : jg 0x4368f1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000436916 : jg 0x436929 ; ret
0x0000000000436986 : jg 0x436999 ; ret
0x00000000004369f6 : jg 0x436a09 ; ret
0x00000000004369f1 : jg 0x436a41 ; add eax, 0xf7f0ff3 ; ret
0x0000000000436a66 : jg 0x436a79 ; ret
0x0000000000436a61 : jg 0x436ab1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000436ad6 : jg 0x436ae9 ; ret
0x0000000000436ad1 : jg 0x436b21 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000436b46 : jg 0x436b59 ; ret
0x0000000000436b41 : jg 0x436b91 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000436bb6 : jg 0x436bc9 ; ret
0x0000000000436bb1 : jg 0x436c01 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438477 : jg 0x43848b ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004388a8 : jg 0x4388f9 ; loope 0x4388a7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043891f : jg 0x43896a ; ret 0xff2
0x0000000000438938 : jg 0x438989 ; loop 0x438937 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004389af : jg 0x4389fa ; ret
0x00000000004389c8 : jg 0x438a19 ; jrcxz 0x4389c7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000438a58 : jg 0x438aa9 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000438ad8 : jg 0x438b29 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000438b58 : jg 0x438ba9 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000438bd8 : jg 0x438c29 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000438c58 : jg 0x438ca9 ; call 0x4fc29c5a
0x0000000000438cd8 : jg 0x438d29 ; jmp 0x4fc29cda
0x0000000000438d35 : jg 0x438d85 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x0000000000438d3f : jg 0x438d8a ; retf 0xff2
0x0000000000438db5 : jg 0x438e05 ; mov ebx, 0x46f00ff2 ; retf
0x0000000000438dbf : jg 0x438e0a ; retf
0x0000000000438e58 : jg 0x438ea9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000438ed8 : jg 0x438f29 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000438f68 : jg 0x438fb9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000438fe8 : jg 0x439039 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043905c : jg 0x439067 ; ret
0x00000000004390b6 : jg 0x4390c9 ; ret
0x00000000004390b1 : jg 0x439101 ; psllq mm1, qword ptr [rdi] ; jg 0x4390ce ; ret
0x0000000000439126 : jg 0x439139 ; ret
0x0000000000439196 : jg 0x4391a9 ; ret
0x0000000000439191 : jg 0x4391e1 ; or eax, 0xf7f0ff3 ; ret
0x0000000000439206 : jg 0x439219 ; ret
0x0000000000439201 : jg 0x439251 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000439276 : jg 0x439289 ; ret
0x0000000000439271 : jg 0x4392c1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000004392e6 : jg 0x4392f9 ; ret
0x00000000004392e1 : jg 0x439331 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000439356 : jg 0x439369 ; ret
0x0000000000439351 : jg 0x4393a1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000004393c6 : jg 0x4393d9 ; ret
0x00000000004393c1 : jg 0x439411 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000439436 : jg 0x439449 ; ret
0x00000000004394a6 : jg 0x4394b9 ; ret
0x0000000000439516 : jg 0x439529 ; ret
0x0000000000439511 : jg 0x439561 ; add eax, 0xf7f0ff3 ; ret
0x0000000000439586 : jg 0x439599 ; ret
0x0000000000439581 : jg 0x4395d1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000004395f6 : jg 0x439609 ; ret
0x00000000004395f1 : jg 0x439641 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000439666 : jg 0x439679 ; ret
0x0000000000439661 : jg 0x4396b1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000004396d6 : jg 0x4396e9 ; ret
0x00000000004396d1 : jg 0x439721 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000439834 : jg 0x439845 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x0000000000439848 : jg 0x439859 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000439cba : jg 0x439cb6 ; ret
0x0000000000445566 : jg 0x445571 ; ret
0x0000000000445576 : jg 0x445584 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000044558a : jg 0x445599 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000004455a9 : jg 0x4455b7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000004455b9 : jg 0x4455c7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000004455c9 : jg 0x4455da ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000004455ea : jg 0x4455f9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000044560a : jg 0x445619 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000044562a : jg 0x445639 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000044564a : jg 0x44565c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000044566e : jg 0x445681 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000044568d : jg 0x44569f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000004456ad : jg 0x4456bf ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000004456cb : jg 0x4456db ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000004456eb : jg 0x4456fb ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000044570b : jg 0x44571b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000044572b : jg 0x44573b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000445bf6 : jg 0x445c05 ; lea rax, [rdi + 0xf] ; ret
0x0000000000445c06 : jg 0x445c18 ; mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x0000000000445c1a : jg 0x445c2d ; mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x11] ; ret
0x0000000000445c39 : jg 0x445c4b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x0000000000445c59 : jg 0x445c6b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x0000000000445c79 : jg 0x445c8e ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; lea rax, [rdi + 0x14] ; ret
0x0000000000445c9a : jg 0x445cad ; mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x15] ; ret
0x0000000000445cba : jg 0x445ccd ; mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x16] ; ret
0x0000000000445cda : jg 0x445ced ; mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x17] ; ret
0x0000000000445d7b : jg 0x445d8f ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, [rdi + 0x1c] ; ret
0x0000000000445d9b : jg 0x445daf ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, [rdi + 0x1d] ; ret
0x0000000000445dbb : jg 0x445dcf ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, [rdi + 0x1e] ; ret
0x0000000000445d7f : jg 0x445ddf ; or eax, 0x1c478d48 ; ret
0x0000000000445ddb : jg 0x445def ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, [rdi + 0x1f] ; ret
0x0000000000447fc7 : jg 0x447fd7 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000447fbd : jg 0x447fdd ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000448454 : jg 0x44848c ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000448522 : jg 0x44855a ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000448563 : jg 0x448577 ; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1 ; vzeroupper ; ret
0x000000000044859f : jg 0x4485b3 ; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1 ; vzeroupper ; ret
0x00000000004485fa : jg 0x44860b ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000044878b : jg 0x4487b5 ; vzeroupper ; ret
0x0000000000448785 : jg 0x4487d3 ; movabs al, byte ptr [0x77f8c5237f7ec1c4] ; ret
0x0000000000448832 : jg 0x44883c ; vzeroupper ; ret
0x000000000044882d : jg 0x448899 ; vmovdqu ymmword ptr [r11], ymm8 ; vzeroupper ; ret
0x00000000004488be : jg 0x4488e8 ; vzeroupper ; ret
0x00000000004488b8 : jg 0x448906 ; movabs al, byte ptr [0x77f8c5237f7ec1c4] ; ret
0x000000000044894e : jg 0x448958 ; vzeroupper ; ret
0x0000000000448949 : jg 0x4489b5 ; vmovdqu ymmword ptr [r11], ymm8 ; vzeroupper ; ret
0x0000000000448a4a : jg 0x448a5e ; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1 ; vzeroupper ; ret
0x0000000000448a62 : jg 0x448a73 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000448c46 : jg 0x448c70 ; vzeroupper ; ret
0x0000000000448c45 : jg 0x448c71 ; vzeroupper ; ret
0x0000000000448c3f : jg 0x448c8e ; std ; vmovdqu64 zmmword ptr [r11], zmm4 ; vzeroupper ; ret
0x0000000000448d06 : jg 0x448d16 ; vmovdqu64 zmmword ptr [r11], zmm8 ; vzeroupper ; ret
0x0000000000448d0c : jg 0x448d16 ; vzeroupper ; ret
0x0000000000448d0b : jg 0x448d17 ; vzeroupper ; ret
0x0000000000448ddf : jg 0x448e09 ; vzeroupper ; ret
0x0000000000448dde : jg 0x448e0a ; vzeroupper ; ret
0x0000000000448dd8 : jg 0x448e27 ; std ; vmovdqu64 zmmword ptr [r11], zmm4 ; vzeroupper ; ret
0x0000000000448eac : jg 0x448ebc ; vmovdqu64 zmmword ptr [r11], zmm8 ; vzeroupper ; ret
0x0000000000448eb2 : jg 0x448ebc ; vzeroupper ; ret
0x0000000000448eb1 : jg 0x448ebd ; vzeroupper ; ret
0x0000000000448f1c : jg 0x448f27 ; ret
0x0000000000448f6c : jg 0x448f77 ; ret
0x0000000000448fe3 : jg 0x44902f ; xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000449074 : jg 0x449082 ; vzeroupper ; ret
0x00000000004490c4 : jg 0x4490d2 ; vzeroupper ; ret
0x0000000000449183 : jg 0x449191 ; vzeroupper ; ret
0x0000000000449201 : jg 0x44920f ; vzeroupper ; ret
0x0000000000449200 : jg 0x449210 ; vzeroupper ; ret
0x0000000000449261 : jg 0x44926f ; vzeroupper ; ret
0x0000000000449260 : jg 0x449270 ; vzeroupper ; ret
0x000000000044934b : jg 0x449359 ; vzeroupper ; ret
0x0000000000449359 : jg 0x449367 ; vzeroupper ; ret
0x00000000004493b0 : jg 0x4493ed ; ret 0x2b77
0x00000000004494cb : jg 0x449498 ; mov eax, 0x80 ; pop rbx ; ret
0x0000000000449527 : jg 0x449525 ; int1 ; mov eax, eax ; ret
0x000000000044dad2 : jg 0x44dac0 ; mov qword ptr [rax + 0x20], rcx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000044fe16 : jg 0x44fd9d ; retf
0x0000000000455ab8 : jg 0x455a45 ; ret 0xdb76
0x0000000000455ab8 : jg 0x455a49 ; ret 0xdb76
0x0000000000460ab2 : jg 0x460acb ; test byte ptr [rip - 0x7c000011], al ; ret
0x000000000046b0a2 : jg 0x46b0bb ; test byte ptr [rip - 0x7c000003], dl ; ret
0x000000000046c51a : jg 0x46c533 ; test byte ptr [rbp - 0x7c000018], bl ; ret
0x000000000046c617 : jg 0x46c630 ; test byte ptr [rax - 0x7c000019], ah ; ret
0x0000000000470349 : jg 0x470362 ; mov r12, rax ; call 0x47c567
0x00000000004790ad : jg 0x4790c6 ; add eax, edi ; mov rdx, r8 ; jmp 0x479085
0x0000000000489707 : jg 0x489719 ; test rdi, rdi ; jne 0x4896e8 ; ret
0x000000000048ca35 : jg 0x48ca6a ; mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x0000000000497951 : jg 0x49795e ; ret 0xf089
0x00000000004a6268 : jg 0x4a6272 ; add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x00000000004d2e71 : jg 0x4d2e72 ; call qword ptr [rdx]
0x000000000040f22a : jge 0x40f233 ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000041a3c7 : jge 0x41a3a1 ; sub eax, dword ptr [rax] ; ret
0x0000000000420d5d : jge 0x420d6a ; sub rsp, 0x80 ; call 0x44d81b
0x0000000000420da1 : jge 0x420dae ; sub rsp, 0x80 ; call 0x44d84b
0x000000000044ba65 : jge 0x44ba6a ; call r12
0x000000000044ba5c : jge 0x44ba7a ; test rdi, rdi ; jne 0x44baac ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044ba8d : jge 0x44ba92 ; call r12
0x000000000044ba84 : jge 0x44baa2 ; test rdi, rdi ; jne 0x44bacc ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044bf7d : jge 0x44bf2d ; mov r12d, r14d ; call r15
0x000000000044c5dd : jge 0x44c5e2 ; call r12
0x000000000044c609 : jge 0x44c60e ; call r12
0x000000000044c63d : jge 0x44c642 ; call r12
0x000000000044c66d : jge 0x44c672 ; call r12
0x000000000044c695 : jge 0x44c69a ; call r12
0x000000000044c68c : jge 0x44c6aa ; test rdi, rdi ; jne 0x44c6fd ; mov rdi, qword ptr [r13] ; call r12
0x000000000044c6c5 : jge 0x44c6ca ; call r12
0x000000000044c6bc : jge 0x44c6da ; test rdi, rdi ; jne 0x44c72e ; mov rdi, qword ptr [r13] ; call r12
0x0000000000482da4 : jge 0x482dd9 ; xor esi, esi ; call 0x4004ab
0x00000000004a3152 : jge 0x4a31a8 ; cmp dword ptr [rip + 0x233e1d], 0 ; jne 0x4a316b ; pop rbx ; ret
0x00000000004a8e02 : jge 0x4a8dff ; leave ; ret
0x00000000004a8f80 : jge 0x4a8f83 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004a90cc : jge 0x4a90c9 ; leave ; ret
0x00000000004a9118 : jge 0x4a911b ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004a92a7 : jge 0x4a92aa ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004a9407 : jge 0x4a9404 ; leave ; ret
0x00000000004a9458 : jge 0x4a945b ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004af9bd : jge 0x4af9b8 ; jmp qword ptr [rax]
0x00000000004c346a : jge 0x4c344b ; push r8 ; xor byte ptr [rcx], ah ; retf
0x00000000004c4db4 : jge 0x4c4e25 ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004cfd25 : jge 0x4cfd2d ; add byte ptr [rax - 0x17], bh ; cli ; jmp qword ptr [rax]
0x000000000040245f : jl 0x40248d ; or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000405d66 : jl 0x405d91 ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000040e758 : jl 0x40e783 ; or byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x0000000000418282 : jl 0x41829e ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041fccb : jl 0x41fcc5 ; ret 0x7508
0x00000000004387d5 : jl 0x4387e9 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004397b4 : jl 0x439803 ; adc dword ptr [rcx - 1], edi ; ret
0x00000000004397ad : jl 0x439803 ; adc dword ptr [rcx - 2], esi ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00000000004397f0 : jl 0x43983f ; adc dword ptr [rcx - 1], ebx ; ret
0x00000000004397e9 : jl 0x43983f ; adc dword ptr [rcx - 2], edx ; vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x00000000004399ee : jl 0x439a3d ; adc dword ptr [rcx - 1], edi ; ret
0x00000000004399e7 : jl 0x439a3d ; adc dword ptr [rcx - 2], esi ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x0000000000439b4e : jl 0x439ba4 ; adc dword ptr [rcx + 6], esi ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x0000000000439b55 : jl 0x439ba4 ; adc dword ptr [rcx + 7], edi ; ret
0x0000000000439cb0 : jl 0x439d06 ; adc dword ptr [rdi - 7], esi ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000439cb7 : jl 0x439d06 ; adc dword ptr [rdi - 8], edi ; ret
0x0000000000447f7c : jl 0x447fcb ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000447f75 : jl 0x447fcb ; adc dword ptr [rsi - 2], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x0000000000447f9d : jl 0x447fec ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000447f96 : jl 0x447fec ; adc dword ptr [rsi - 2], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x0000000000447faa : jl 0x447fff ; adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x0000000000447fb0 : jl 0x447fff ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000448085 : jl 0x4480d4 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000044807e : jl 0x4480d4 ; adc dword ptr [rsi - 2], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x00000000004480d6 : jl 0x44812c ; adc dword ptr [rsi + 2], edx ; vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x00000000004480dd : jl 0x44812c ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000448173 : jl 0x4481c9 ; adc dword ptr [rsi + 6], edx ; vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x000000000044817a : jl 0x4481c9 ; adc dword ptr [rsi + 7], edx ; ret
0x0000000000448b30 : jl 0x448b4f ; cld ; vzeroupper ; ret
0x000000000044bb42 : jl 0x44bb70 ; or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x00000000004527f1 : jl 0x45281f ; and byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000452c16 : jl 0x452c44 ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000454b58 : jl 0x454b86 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000045513b : jl 0x455165 ; call r15
0x0000000000455b8a : jl 0x455bb8 ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000004574ac : jl 0x4574d6 ; call r15
0x00000000004578e7 : jl 0x457910 ; call rbx
0x000000000045799d : jl 0x4579ca ; add byte ptr [rsi + rsi*2 - 0xa], sil ; ret
0x00000000004580cd : jl 0x4580f7 ; or al, 0xe9 ; ret
0x00000000004586ec : jl 0x458716 ; call r15
0x0000000000458b27 : jl 0x458b50 ; call rbx
0x0000000000458bdd : jl 0x458c0a ; add byte ptr [rdx + rdi*2 - 0xa], sil ; ret
0x000000000045bcfb : jl 0x45bd2d ; cmovns eax, dword ptr [rbx + 0x149f0e7] ; ror byte ptr [rax - 0x77], 1 ; ret 0x894c
0x000000000045cbc7 : jl 0x45cbf2 ; and byte ptr [rax + 1], cl ; ret
0x000000000045d03e : jl 0x45d069 ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000045d386 : jl 0x45d3b1 ; xor byte ptr [rax + 0x39], cl ; ret 0x8d48
0x0000000000468d6b : jl 0x468d98 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000046a455 : jl 0x46a480 ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047fa2f : jl 0x47fa5d ; sbb byte ptr [rax + 0x101], bh ; syscall
0x0000000000485905 : jl 0x485930 ; or byte ptr [rax - 0x7d], cl ; ret 0x101
0x000000000048c915 : jl 0x48c943 ; sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x00000000004a3c16 : jl 0x4a3c40 ; adc al, ch ; ret 0xfe89
0x00000000004b0730 : jl 0x4b06b6 ; clc ; jmp qword ptr [rdx]
0x00000000004c4fb2 : jl 0x4c5011 ; leave ; retf
0x00000000004020ec : jle 0x402121 ; add byte ptr [rsp + rcx - 0x7f], dh ; retf 0x440
0x0000000000402118 : jle 0x40214b ; add bh, dh ; ret 0
0x000000000041333e : jle 0x41334b ; add byte ptr [rax + 0x29], cl ; ret
0x000000000041ea95 : jle 0x41eaae ; add byte ptr [rax], al ; call 0x4004fd
0x0000000000441cde : jle 0x441ce7 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000441cde : jle 0x441ce8 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000447e51 : jle 0x447e8d ; movsxd rax, ecx ; ret
0x0000000000447fe0 : jle 0x447faf ; cmp dl, 4 ; jb 0x447ff9 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000448784 : jle 0x448811 ; movabs al, byte ptr [0x77f8c5237f7ec1c4] ; ret
0x00000000004488b7 : jle 0x448944 ; movabs al, byte ptr [0x77f8c5237f7ec1c4] ; ret
0x000000000045a1e2 : jle 0x45a1f5 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000004b10c4 : jle 0x4b1063 ; stc ; push qword ptr [rsi - 0x69] ; stc ; jmp rsi
0x00000000004c3462 : jle 0x4c33fb ; xlatb ; retf 0xa1eb
0x00000000004c35bc : jle 0x4c357f ; fdiv st(7) ; lahf ; push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x00000000004c5025 : jle 0x4c5060 ; pop rsp ; sbb ebp, ebx ; retf
0x00000000004c54ba : jle 0x4c5461 ; mov edi, 0x99b51319 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000425bdd : jmp 0x100c8529
0x0000000000425c86 : jmp 0x100c85d2
0x0000000000425dc6 : jmp 0x100c8712
0x0000000000425f06 : jmp 0x100c8852
0x0000000000426046 : jmp 0x100c8992
0x0000000000426186 : jmp 0x100c8ad2
0x00000000004262c6 : jmp 0x100c8c12
0x0000000000426406 : jmp 0x100c8d52
0x0000000000426546 : jmp 0x100c8e92
0x0000000000426686 : jmp 0x100c8fd2
0x00000000004267c6 : jmp 0x100c9112
0x0000000000426906 : jmp 0x100c9252
0x0000000000426a46 : jmp 0x100c9392
0x0000000000426b86 : jmp 0x100c94d2
0x0000000000426cc6 : jmp 0x100c9612
0x0000000000426e06 : jmp 0x100c9752
0x00000000004272cd : jmp 0x100c9c19
0x0000000000427376 : jmp 0x100c9cc2
0x0000000000427496 : jmp 0x100c9de2
0x00000000004275b6 : jmp 0x100c9f02
0x00000000004276d6 : jmp 0x100ca022
0x00000000004277f6 : jmp 0x100ca142
0x0000000000427916 : jmp 0x100ca262
0x0000000000427a36 : jmp 0x100ca382
0x0000000000427b56 : jmp 0x100ca4a2
0x0000000000427c76 : jmp 0x100ca5c2
0x0000000000427d96 : jmp 0x100ca6e2
0x0000000000427eb6 : jmp 0x100ca802
0x0000000000427fd6 : jmp 0x100ca922
0x00000000004280f6 : jmp 0x100caa42
0x0000000000428216 : jmp 0x100cab62
0x0000000000428336 : jmp 0x100cac82
0x000000000042854d : jmp 0x100cae99
0x0000000000428626 : jmp 0x100caf72
0x00000000004287a6 : jmp 0x100cb0f2
0x0000000000428926 : jmp 0x100cb272
0x0000000000428aa6 : jmp 0x100cb3f2
0x0000000000428c26 : jmp 0x100cb572
0x0000000000428da6 : jmp 0x100cb6f2
0x0000000000428f26 : jmp 0x100cb872
0x00000000004290a6 : jmp 0x100cb9f2
0x0000000000429226 : jmp 0x100cbb72
0x00000000004293a6 : jmp 0x100cbcf2
0x0000000000429526 : jmp 0x100cbe72
0x00000000004296a6 : jmp 0x100cbff2
0x0000000000429826 : jmp 0x100cc172
0x00000000004299a6 : jmp 0x100cc2f2
0x0000000000429b26 : jmp 0x100cc472
0x0000000000429d9d : jmp 0x100cc6e9
0x0000000000429e76 : jmp 0x100cc7c2
0x0000000000429fe6 : jmp 0x100cc932
0x000000000042a156 : jmp 0x100ccaa2
0x000000000042a2c6 : jmp 0x100ccc12
0x000000000042a436 : jmp 0x100ccd82
0x000000000042a5a6 : jmp 0x100ccef2
0x000000000042a716 : jmp 0x100cd062
0x000000000042a886 : jmp 0x100cd1d2
0x000000000042a9f6 : jmp 0x100cd342
0x000000000042ab66 : jmp 0x100cd4b2
0x000000000042acd6 : jmp 0x100cd622
0x000000000042ae46 : jmp 0x100cd792
0x000000000042afb6 : jmp 0x100cd902
0x000000000042b126 : jmp 0x100cda72
0x000000000042b296 : jmp 0x100cdbe2
0x000000000042b509 : jmp 0x100cde55
0x000000000042b5b6 : jmp 0x100cdf02
0x000000000042b6a6 : jmp 0x100cdff2
0x000000000042b796 : jmp 0x100ce0e2
0x000000000042b886 : jmp 0x100ce1d2
0x000000000042b976 : jmp 0x100ce2c2
0x000000000042ba66 : jmp 0x100ce3b2
0x000000000042bb56 : jmp 0x100ce4a2
0x000000000042bc46 : jmp 0x100ce592
0x000000000042bd36 : jmp 0x100ce682
0x000000000042be26 : jmp 0x100ce772
0x000000000042bf16 : jmp 0x100ce862
0x000000000042c006 : jmp 0x100ce952
0x000000000042c0f6 : jmp 0x100cea42
0x000000000042c1e6 : jmp 0x100ceb32
0x000000000042c2d6 : jmp 0x100cec22
0x0000000000439fe7 : jmp 0x100dc933
0x000000000043a16c : jmp 0x100dcab8
0x000000000043a37c : jmp 0x100dccc8
0x000000000043a58c : jmp 0x100dced8
0x000000000043a79c : jmp 0x100dd0e8
0x000000000043a9ac : jmp 0x100dd2f8
0x000000000043abbc : jmp 0x100dd508
0x000000000043adcc : jmp 0x100dd718
0x000000000043afdc : jmp 0x100dd928
0x000000000043b1ec : jmp 0x100ddb38
0x000000000043b3fc : jmp 0x100ddd48
0x000000000043b60c : jmp 0x100ddf58
0x000000000043b81c : jmp 0x100de168
0x000000000043ba2c : jmp 0x100de378
0x000000000043bc3c : jmp 0x100de588
0x000000000043be4c : jmp 0x100de798
0x000000000043c227 : jmp 0x100deb73
0x000000000043c3ac : jmp 0x100decf8
0x000000000043c5ac : jmp 0x100deef8
0x000000000043c7ac : jmp 0x100df0f8
0x000000000043c9ac : jmp 0x100df2f8
0x000000000043cbac : jmp 0x100df4f8
0x000000000043cdac : jmp 0x100df6f8
0x000000000043cfac : jmp 0x100df8f8
0x000000000043d1ac : jmp 0x100dfaf8
0x000000000043d3ac : jmp 0x100dfcf8
0x000000000043d5ac : jmp 0x100dfef8
0x000000000043d7ac : jmp 0x100e00f8
0x000000000043d9ac : jmp 0x100e02f8
0x000000000043dbac : jmp 0x100e04f8
0x000000000043ddac : jmp 0x100e06f8
0x000000000043dfac : jmp 0x100e08f8
0x000000000043e36f : jmp 0x100e0cbb
0x000000000043e4d8 : jmp 0x100e0e24
0x000000000043e678 : jmp 0x100e0fc4
0x000000000043e818 : jmp 0x100e1164
0x000000000043e9b8 : jmp 0x100e1304
0x000000000043eb58 : jmp 0x100e14a4
0x000000000043ecf8 : jmp 0x100e1644
0x000000000043ee98 : jmp 0x100e17e4
0x000000000043f038 : jmp 0x100e1984
0x000000000043f1d8 : jmp 0x100e1b24
0x000000000043f378 : jmp 0x100e1cc4
0x000000000043f518 : jmp 0x100e1e64
0x000000000043f6b8 : jmp 0x100e2004
0x000000000043f858 : jmp 0x100e21a4
0x000000000043f9f8 : jmp 0x100e2344
0x000000000043fb98 : jmp 0x100e24e4
0x000000000043fee5 : jmp 0x100e2831
0x000000000043ffee : jmp 0x100e293a
0x000000000044013e : jmp 0x100e2a8a
0x000000000044028e : jmp 0x100e2bda
0x00000000004403de : jmp 0x100e2d2a
0x000000000044052e : jmp 0x100e2e7a
0x000000000044067e : jmp 0x100e2fca
0x00000000004407ce : jmp 0x100e311a
0x000000000044091e : jmp 0x100e326a
0x0000000000440a6e : jmp 0x100e33ba
0x0000000000440bbe : jmp 0x100e350a
0x0000000000440d0e : jmp 0x100e365a
0x0000000000440e5e : jmp 0x100e37aa
0x0000000000440fae : jmp 0x100e38fa
0x00000000004410fe : jmp 0x100e3a4a
0x000000000044124e : jmp 0x100e3b9a
0x00000000004986d7 : jmp 0x1013b023
0x000000000049887c : jmp 0x1013b1c8
0x0000000000498acc : jmp 0x1013b418
0x0000000000498d1c : jmp 0x1013b668
0x0000000000498f6c : jmp 0x1013b8b8
0x00000000004991bc : jmp 0x1013bb08
0x000000000049940c : jmp 0x1013bd58
0x000000000049965c : jmp 0x1013bfa8
0x00000000004998ac : jmp 0x1013c1f8
0x0000000000499afc : jmp 0x1013c448
0x0000000000499d4c : jmp 0x1013c698
0x0000000000499f9c : jmp 0x1013c8e8
0x000000000049a1ec : jmp 0x1013cb38
0x000000000049a43c : jmp 0x1013cd88
0x000000000049a68c : jmp 0x1013cfd8
0x000000000049a8dc : jmp 0x1013d228
0x000000000049ad27 : jmp 0x1013d673
0x000000000049aecc : jmp 0x1013d818
0x000000000049b10c : jmp 0x1013da58
0x000000000049b34c : jmp 0x1013dc98
0x000000000049b58c : jmp 0x1013ded8
0x000000000049b7cc : jmp 0x1013e118
0x000000000049ba0c : jmp 0x1013e358
0x000000000049bc4c : jmp 0x1013e598
0x000000000049be8c : jmp 0x1013e7d8
0x000000000049c0cc : jmp 0x1013ea18
0x000000000049c30c : jmp 0x1013ec58
0x000000000049c54c : jmp 0x1013ee98
0x000000000049c78c : jmp 0x1013f0d8
0x000000000049c9cc : jmp 0x1013f318
0x000000000049cc0c : jmp 0x1013f558
0x000000000049ce4c : jmp 0x1013f798
0x000000000049d27f : jmp 0x1013fbcb
0x000000000049d418 : jmp 0x1013fd64
0x000000000049d5f8 : jmp 0x1013ff44
0x000000000049d7d8 : jmp 0x10140124
0x000000000049d9a8 : jmp 0x101402f4
0x000000000049db88 : jmp 0x101404d4
0x000000000049dd68 : jmp 0x101406b4
0x000000000049df48 : jmp 0x10140894
0x000000000049e128 : jmp 0x10140a74
0x000000000049e308 : jmp 0x10140c54
0x000000000049e4e8 : jmp 0x10140e34
0x000000000049e6c8 : jmp 0x10141014
0x000000000049e8a8 : jmp 0x101411f4
0x000000000049ea88 : jmp 0x101413d4
0x000000000049ec68 : jmp 0x101415b4
0x000000000049ee48 : jmp 0x10141794
0x000000000049f215 : jmp 0x10141b61
0x000000000049f35e : jmp 0x10141caa
0x000000000049f4de : jmp 0x10141e2a
0x000000000049f65e : jmp 0x10141faa
0x000000000049f7de : jmp 0x1014212a
0x000000000049f95e : jmp 0x101422aa
0x000000000049fade : jmp 0x1014242a
0x000000000049fc5e : jmp 0x101425aa
0x000000000049fdde : jmp 0x1014272a
0x000000000049ff5e : jmp 0x101428aa
0x00000000004a00de : jmp 0x10142a2a
0x00000000004a025e : jmp 0x10142baa
0x00000000004a03de : jmp 0x10142d2a
0x00000000004a055e : jmp 0x10142eaa
0x00000000004a06de : jmp 0x1014302a
0x00000000004a085e : jmp 0x101431aa
0x0000000000403c26 : jmp 0x403ba2
0x0000000000404eb4 : jmp 0x404ede
0x0000000000405c63 : jmp 0x4056da
0x00000000004069fb : jmp 0x4069c8
0x0000000000410669 : jmp 0x41062e
0x0000000000410d81 : jmp 0x410cd8
0x00000000004142d1 : jmp 0x4142d0
0x0000000000415a12 : jmp 0x4159d8
0x0000000000417564 : jmp 0x41758e
0x0000000000424a65 : jmp 0x424a33
0x000000000042b622 : jmp 0x42b638
0x000000000042d9d8 : jmp 0x42d9a6
0x000000000042da56 : jmp 0x42da24
0x000000000042dee8 : jmp 0x42deb6
0x000000000042df66 : jmp 0x42df34
0x00000000004414b4 : jmp 0x44147a
0x0000000000441608 : jmp 0x4415cd
0x00000000004416cc : jmp 0x441692
0x0000000000441818 : jmp 0x4417dd
0x0000000000447b3e : jmp 0x447b04
0x0000000000447c0f : jmp 0x447bd5
0x0000000000447c7e : jmp 0x447c44
0x00000000004497c8 : jmp 0x449796
0x0000000000449f5e : jmp 0x449f24
0x000000000044a6e3 : jmp 0x44a571
0x000000000044a6b1 : jmp 0x44a572
0x000000000044a6a5 : jmp 0x44a71b
0x000000000044aa61 : jmp 0x44a9be
0x000000000044adf1 : jmp 0x44ad51
0x000000000044ae95 : jmp 0x44ae5a
0x000000000044af3b : jmp 0x44af00
0x000000000044f73d : jmp 0x44efa8
0x000000000045119e : jmp 0x4511c6
0x0000000000455715 : jmp 0x455568
0x000000000044fbf2 : jmp 0x45c662
0x000000000045e415 : jmp 0x45e43d
0x000000000045ea81 : jmp 0x45ea46
0x000000000045eb1e : jmp 0x45eae2
0x00000000004615ce : jmp 0x45f824
0x0000000000460e63 : jmp 0x460e68
0x0000000000464977 : jmp 0x46493c
0x0000000000467863 : jmp 0x465dd4
0x000000000046a1de : jmp 0x46a209
0x000000000046c298 : jmp 0x46c25e
0x000000000046cdd3 : jmp 0x46cda1
0x0000000000473ae4 : jmp 0x47059d
0x0000000000474412 : jmp 0x4706b3
0x000000000047470b : jmp 0x4709fa
0x000000000047560f : jmp 0x471866
0x0000000000475707 : jmp 0x4719e6
0x000000000047536d : jmp 0x471dfc
0x000000000047709c : jmp 0x473b24
0x0000000000478044 : jmp 0x47807f
0x0000000000478e24 : jmp 0x478de9
0x0000000000478e23 : jmp 0x478dea
0x0000000000479555 : jmp 0x479523
0x0000000000479b1b : jmp 0x479ae0
0x000000000047c5d3 : jmp 0x47c599
0x000000000047fa71 : jmp 0x47f9c3
0x00000000004821a9 : jmp 0x4821af
0x0000000000483d0d : jmp 0x483cbd
0x0000000000484512 : jmp 0x4844d7
0x0000000000488748 : jmp 0x488715
0x0000000000489a7a : jmp 0x489851
0x0000000000495411 : jmp 0x494ece
0x00000000004976d2 : jmp 0x497724
0x000000000049877e : jmp 0x498794
0x000000000049f45e : jmp 0x49f474
0x000000000049fa5e : jmp 0x49fa74
0x000000000049fd5e : jmp 0x49fd74
0x00000000004a005e : jmp 0x4a0074
0x00000000004a035e : jmp 0x4a0374
0x00000000004a065e : jmp 0x4a0674
0x00000000004a14da : jmp 0x4a14a0
0x00000000004a3ab2 : jmp 0x4a3b04
0x00000000004aa1ce : jmp 0x4aa1e4
0x00000000004c366a : jmp 0x4c36a9
0x00000000004c43a9 : jmp 0x4c437c
0x00000000004c5029 : jmp 0x4c4ff7
0x00000000004c53a0 : jmp 0x4c5334
0x00000000004c539f : jmp 0x4c5335
0x00000000004c5576 : jmp 0x4c5544
0x00000000004361ba : jmp 0x4fc271b8
0x00000000004361b9 : jmp 0x4fc271b9
0x0000000000438cda : jmp 0x4fc29cd8
0x0000000000438cd9 : jmp 0x4fc29cd9
0x00000000004c3617 : jmp 0xffffffff91164fee
0x0000000000496161 : jmp 0xffffffffc358eab6
0x0000000000485cf9 : jmp 0xffffffffeb0a1f89
0x000000000047f7f3 : jmp 0xfffffffff679ba83
0x0000000000412c72 : jmp 0xfffffffffef5b08f
0x00000000004afa4f : jmp qword ptr [rax + 0x10fff7af]
0x00000000004b03e3 : jmp qword ptr [rax + 0x10fff85c]
0x00000000004b01df : jmp qword ptr [rax + 0x10fff85d]
0x00000000004b06e7 : jmp qword ptr [rax + 0x10fff882]
0x00000000004b066f : jmp qword ptr [rax + 0x10fff88b]
0x00000000004b01d7 : jmp qword ptr [rax + 0x20fff85e]
0x00000000004b01cf : jmp qword ptr [rax + 0x20fff85f]
0x00000000004b01c7 : jmp qword ptr [rax + 0x20fff860]
0x00000000004b01bf : jmp qword ptr [rax + 0x20fff861]
0x00000000004b0933 : jmp qword ptr [rax + 0x20fff865]
0x00000000004b08f7 : jmp qword ptr [rax + 0x20fff866]
0x00000000004b093b : jmp qword ptr [rax + 0x20fff868]
0x00000000004b08ff : jmp qword ptr [rax + 0x20fff869]
0x00000000004b0943 : jmp qword ptr [rax + 0x20fff86b]
0x00000000004b0907 : jmp qword ptr [rax + 0x20fff86c]
0x00000000004b094b : jmp qword ptr [rax + 0x20fff86e]
0x00000000004b090f : jmp qword ptr [rax + 0x20fff86f]
0x00000000004b0953 : jmp qword ptr [rax + 0x20fff871]
0x00000000004b0917 : jmp qword ptr [rax + 0x20fff872]
0x00000000004b095b : jmp qword ptr [rax + 0x20fff874]
0x00000000004b091f : jmp qword ptr [rax + 0x20fff875]
0x00000000004b0963 : jmp qword ptr [rax + 0x20fff877]
0x00000000004b0927 : jmp qword ptr [rax + 0x20fff878]
0x00000000004b0a27 : jmp qword ptr [rax + 0x40fff8dd]
0x00000000004b0a03 : jmp qword ptr [rax - 0x35]
0x00000000004b09f3 : jmp qword ptr [rax - 0x3d]
0x00000000004b09af : jmp qword ptr [rax - 0x4f000761]
0x000000000040f631 : jmp qword ptr [rax]
0x00000000004c0d6b : jmp qword ptr [rbx]
0x00000000004cc7db : jmp qword ptr [rcx]
0x0000000000410550 : jmp qword ptr [rdi + rax*8]
0x00000000004bf787 : jmp qword ptr [rdi]
0x00000000004b0737 : jmp qword ptr [rdx + 0x12fff888]
0x00000000004b054b : jmp qword ptr [rdx + 0x32fff88f]
0x000000000046b175 : jmp qword ptr [rdx + rax*8]
0x00000000004b0033 : jmp qword ptr [rdx]
0x0000000000424a49 : jmp qword ptr [rsi + 0xf]
0x00000000004128ed : jmp qword ptr [rsi - 0x70]
0x000000000044f745 : jmp qword ptr [rsi]
0x0000000000425bb9 : jmp r10
0x000000000048a3c0 : jmp r11
0x000000000042ebbd : jmp r9
0x0000000000400ab1 : jmp rax
0x000000000048a3c1 : jmp rbx
0x0000000000423722 : jmp rcx
0x000000000040e86e : jmp rdi
0x000000000040e585 : jmp rdx
0x000000000045b8e7 : jmp rsi
0x00000000004ae2a7 : jmp rsp
0x00000000004005ad : jne 0x4005b4 ; ret
0x0000000000402348 : jne 0x40256b ; call qword ptr [rbx + 0x10]
0x0000000000403a5a : jne 0x4039f8 ; call 0x4004b4
0x0000000000403aa2 : jne 0x403a40 ; call 0x4004b4
0x0000000000404eb2 : jne 0x404ec6 ; jmp 0x404ee0
0x00000000004070dc : jne 0x4070f0 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000040edb1 : jne 0x40edd7 ; add rsp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040ee08 : jne 0x40ede6 ; ret
0x000000000040eefb : jne 0x40ef25 ; add rsp, 0x118 ; ret
0x0000000000410a81 : jne 0x410a94 ; add rsp, 0xd8 ; ret
0x0000000000410b32 : jne 0x410b45 ; add rsp, 0xd8 ; ret
0x0000000000410c03 : jne 0x410c16 ; add rsp, 0xd8 ; ret
0x0000000000410ef4 : jne 0x410f09 ; add rsp, 0xd0 ; pop rbx ; ret
0x0000000000411083 : jne 0x41109a ; add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x00000000004116ae : jne 0x4116e1 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000041198e : jne 0x411a10 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412a1e : jne 0x412ad9 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000415ae5 : jne 0x415af3 ; ret
0x0000000000417427 : jne 0x4174f2 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000417562 : jne 0x417576 ; jmp 0x417590
0x0000000000417708 : jne 0x41775c ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000417781 : jne 0x417773 ; ret
0x000000000041869e : jne 0x418693 ; ret
0x0000000000418929 : jne 0x418be2 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000418cd1 : jne 0x418c97 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000418d1c : jne 0x418d15 ; lea eax, [rdx + rdi] ; ret
0x00000000004194f9 : jne 0x419546 ; add rsp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000419636 : jne 0x41962b ; ret
0x0000000000419673 : jne 0x41968a ; sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000041b290 : jne 0x41b29f ; add rsp, 0x20 ; pop rbx ; ret
0x000000000042096c : jne 0x420933 ; ret
0x0000000000423e1a : jne 0x423da1 ; ret
0x0000000000424127 : jne 0x424116 ; sub rax, 0x10 ; ret
0x000000000042720c : jne 0x4271f6 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000042c6a7 : jne 0x42c704 ; xor eax, eax ; ret
0x000000000042c677 : jne 0x42c728 ; xor eax, eax ; ret
0x000000000042cb23 : jne 0x42cb47 ; xor eax, eax ; vzeroupper ; ret
0x000000000042cae6 : jne 0x42cb8b ; xor eax, eax ; vzeroupper ; ret
0x000000000042d25a : jne 0x42d265 ; vzeroupper ; ret
0x000000000042d354 : jne 0x42d266 ; ret
0x000000000042d49f : jne 0x42d269 ; vzeroupper ; ret
0x000000000042eb0d : jne 0x42eb37 ; xor eax, eax ; ret
0x000000000042e101 : jne 0x42eb3b ; xor eax, eax ; ret
0x000000000042e129 : jne 0x42eb47 ; xor eax, eax ; ret
0x0000000000445ee5 : jne 0x445e76 ; lea rax, [rdi + 3] ; ret
0x0000000000445eb7 : jne 0x445e76 ; lea rax, [rdi + 7] ; ret
0x0000000000445eb6 : jne 0x445e77 ; lea rax, [rdi + 7] ; ret
0x0000000000445f80 : jne 0x445e7a ; lea rax, [rdi + 0xb] ; ret
0x0000000000445f3a : jne 0x445e7a ; lea rax, [rdi + 0xf] ; ret
0x0000000000445f39 : jne 0x445e7b ; lea rax, [rdi + 0xf] ; ret
0x0000000000445fc6 : jne 0x44609a ; lea rax, [rdi + 7] ; ret
0x0000000000445fc5 : jne 0x44609b ; lea rax, [rdi + 7] ; ret
0x0000000000446019 : jne 0x44610a ; lea rax, [rdi + 0xf] ; ret
0x0000000000446018 : jne 0x44610b ; lea rax, [rdi + 0xf] ; ret
0x0000000000447315 : jne 0x44739c ; movzx eax, byte ptr [rdi - 9] ; movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x0000000000447644 : jne 0x447858 ; xor eax, eax ; ret
0x0000000000447849 : jne 0x447869 ; xor eax, eax ; ret
0x00000000004476f1 : jne 0x44786d ; xor eax, eax ; ret
0x0000000000447861 : jne 0x44786e ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000447971 : jne 0x447962 ; ret
0x0000000000447968 : jne 0x44798b ; movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x44796b ; ret
0x0000000000447a21 : jne 0x447a12 ; ret
0x0000000000447a18 : jne 0x447a3b ; movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x447a1b ; ret
0x0000000000447b91 : jne 0x447b86 ; lea rax, [rcx - 1] ; ret
0x0000000000447ce1 : jne 0x447cd6 ; sub rax, 1 ; ret
0x0000000000448fed : jne 0x448fd6 ; ret
0x0000000000449154 : jne 0x44913c ; vzeroupper ; ret
0x0000000000449317 : jne 0x4492f7 ; vzeroupper ; ret
0x00000000004497c2 : jne 0x4496f7 ; jmp 0x44979c
0x00000000004497be : jne 0x4497a0 ; test al, al ; jne 0x4496fb ; jmp 0x4497a0
0x0000000000449aef : jne 0x449b1b ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000449f2f : jne 0x449f6c ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044a8a7 : jne 0x44a8bf ; add rsp, 0x28 ; ret
0x000000000044a9c5 : jne 0x44aa83 ; add rsp, 0x68 ; ret
0x000000000044aad7 : jne 0x44ab21 ; add rsp, 0x58 ; ret
0x000000000044ab28 : jne 0x44ab44 ; xor eax, eax ; syscall
0x000000000044abf8 : jne 0x44ac17 ; mov eax, 1 ; syscall
0x000000000044ad35 : jne 0x44ad9f ; mov eax, 0x48 ; syscall
0x000000000044ad58 : jne 0x44ae13 ; add rsp, 0x78 ; ret
0x000000000044ae91 : jne 0x44ae5e ; neg eax ; jmp 0x44ae5e
0x000000000044ae67 : jne 0x44aeb9 ; add rsp, 0x68 ; ret
0x000000000044aec8 : jne 0x44aee7 ; mov eax, 3 ; syscall
0x000000000044b806 : jne 0x44b81d ; add rsp, 0x28 ; ret
0x000000000044b86a : jne 0x44b8d2 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000044ba3b : jne 0x44ba56 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044ba61 : jne 0x44baa7 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044ba89 : jne 0x44bac7 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044c5a6 : jne 0x44c5ce ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044c5d9 : jne 0x44c627 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044c605 : jne 0x44c687 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044c635 : jne 0x44c6e2 ; mov rdi, qword ptr [r13] ; call r12
0x000000000044c691 : jne 0x44c6f8 ; mov rdi, qword ptr [r13] ; call r12
0x000000000044c665 : jne 0x44c706 ; mov rdi, qword ptr [r13] ; call r12
0x000000000044c6c1 : jne 0x44c729 ; mov rdi, qword ptr [r13] ; call r12
0x000000000044ccc5 : jne 0x44cd2e ; add rsp, 0xd0 ; pop rbx ; ret
0x000000000044d64a : jne 0x44d661 ; add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x000000000044d6da : jne 0x44d6f1 ; add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x000000000044d832 : jne 0x44d829 ; pop rdx ; pop r10 ; ret
0x000000000044d822 : jne 0x44d834 ; nop ; mov eax, 0xca ; syscall
0x000000000044d87f : jne 0x44d874 ; and r11d, 0xffffffbb ; cmp r11d, 0xa ; je 0x44d898 ; ret
0x000000000044ec77 : jne 0x44ec6c ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000450b2f : jne 0x450ac3 ; call rsi
0x000000000045119c : jne 0x4511ae ; jmp 0x4511c8
0x000000000045c6ef : jne 0x45c6fc ; add rsp, 0x18 ; ret
0x000000000045c937 : jne 0x45c98c ; add rsp, 0x148 ; ret
0x000000000045e413 : jne 0x45e425 ; jmp 0x45e43f
0x000000000046a1dc : jne 0x46a1f1 ; jmp 0x46a20b
0x000000000046a352 : jne 0x46a365 ; add rsp, 0xd8 ; ret
0x0000000000472159 : jne 0x4720f7 ; mov rdx, rax ; jmp 0x472111
0x000000000047a4cd : jne 0x47a4fc ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047a722 : jne 0x47a735 ; add rsp, 0xd8 ; ret
0x000000000047a9f1 : jne 0x47a9e3 ; ret
0x000000000047bc3c : jne 0x47bc35 ; lea eax, [rdx + rdi] ; ret
0x000000000047bec9 : jne 0x47bee3 ; mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000047bf78 : jne 0x47bfd4 ; lea r9, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x000000000047c09a : jne 0x47c0d4 ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047d7c3 : jne 0x47d7ce ; xor rax, rax ; ret
0x000000000047dbc3 : jne 0x47dbf8 ; mov rax, r8 ; vzeroupper ; ret
0x000000000047db8a : jne 0x47dc3c ; mov rax, r8 ; vzeroupper ; ret
0x000000000047e6bc : jne 0x47e6b3 ; ret
0x000000000047e6c3 : jne 0x47e6ce ; xor rax, rax ; ret
0x000000000047e95b : jne 0x47e916 ; mov rax, rdx ; ret
0x000000000047efc3 : jne 0x47effc ; mov rax, r8 ; shr rax, 2 ; vzeroupper ; ret
0x000000000047f810 : jne 0x47f855 ; add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x000000000047f9a7 : jne 0x47fa0d ; mov eax, 0x101 ; syscall
0x000000000047f9ca : jne 0x47fa93 ; add rsp, 0x78 ; ret
0x000000000047fadc : jne 0x47fb29 ; add rsp, 0x58 ; ret
0x000000000047fb5f : jne 0x47fb72 ; movzx eax, al ; add rsp, 0x58 ; ret
0x000000000047fb5f : jne 0x47fb74 ; movzx eax, al ; add rsp, 0x58 ; ret
0x000000000047fc0e : jne 0x47fc31 ; add rsp, 0x38 ; ret
0x00000000004800db : jne 0x47fff1 ; mov eax, 1 ; leave ; ret
0x0000000000486b2c : jne 0x486b4c ; mov r15, qword ptr [rbx] ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x0000000000488a2a : jne 0x4889d0 ; mov eax, dword ptr [rdx + 4] ; ret
0x0000000000488a18 : jne 0x4889f3 ; ret
0x00000000004896b7 : jne 0x4896d1 ; mov rax, qword ptr [rip + 0x250e30] ; ret
0x000000000048970c : jne 0x4896e3 ; ret
0x0000000000489703 : jne 0x4896fc ; mov rdi, qword ptr [rdi + 8] ; test rdi, rdi ; jne 0x4896ec ; ret
0x0000000000489bf3 : jne 0x489c0c ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000048b1c9 : jne 0x48b1a1 ; movsx eax, cl ; neg eax ; ret
0x000000000048bfba : jne 0x48bfc9 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000048c0b5 : jne 0x48c0e9 ; add rsp, 0x38 ; ret
0x000000000048c175 : jne 0x48c1a4 ; add rsp, 0x68 ; ret
0x000000000048c2d6 : jne 0x48c314 ; add rsp, 0x78 ; ret
0x000000000048c5a5 : jne 0x48c5d4 ; add rsp, 0x68 ; ret
0x000000000048c955 : jne 0x48c97f ; add rsp, 0x110 ; pop rbx ; ret
0x000000000048c9d6 : jne 0x48c9eb ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000495752 : jne 0x495795 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000495802 : jne 0x49587a ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004958e0 : jne 0x495944 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000497591 : jne 0x4975d1 ; leave ; ret
0x0000000000497af1 : jne 0x497add ; mov rax, rsi ; ret
0x0000000000497b75 : jne 0x497b55 ; mov rax, rsi ; ret
0x0000000000497c18 : jne 0x497cdf ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000497dd1 : jne 0x497f59 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004982dd : jne 0x4982ea ; add rsp, 0x38 ; ret
0x00000000004983c0 : jne 0x4983da ; add rsp, 0x38 ; ret
0x00000000004a0f90 : jne 0x4a0f9f ; mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004a1545 : jne 0x4a155c ; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000004a30a6 : jne 0x4a30d0 ; ret
0x00000000004a30a5 : jne 0x4a30d1 ; ret
0x00000000004a315b : jne 0x4a3162 ; pop rbx ; ret
0x00000000004a3c3b : jne 0x4a3c52 ; add rsp, 0x38 ; ret
0x00000000004a3d49 : jne 0x4a3d63 ; add rsp, 0x40 ; pop rbx ; ret
0x00000000004a3e30 : jne 0x4a3e4b ; add rsp, 0x50 ; pop rbx ; ret
0x00000000004a6360 : jne 0x4a629a ; add rsp, 0x38 ; ret
0x00000000004a6819 : jne 0x4a683c ; xor eax, eax ; ret
0x00000000004a6801 : jne 0x4a6841 ; mov rax, qword ptr [rsi + 0xb0] ; ret
0x00000000004a8a30 : jne 0x4a8a51 ; mov rax, qword ptr [rax] ; ret
0x00000000004a8a9f : jne 0x4a8aaa ; mov qword ptr [rax], rdx ; ret
0x00000000004a8dfe : jne 0x4a8df7 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x00000000004a90c8 : jne 0x4a90c1 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x00000000004a9403 : jne 0x4a93fc ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x00000000004a98ec : jne 0x4a98d4 ; movzx eax, byte ptr [rax] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004a9954 : jne 0x4a9973 ; ret
0x00000000004a9974 : jne 0x4a998c ; mov eax, 8 ; ret
0x00000000004a999f : jne 0x4a99ce ; mov rax, qword ptr [rsi + 0x10] ; ret
0x00000000004a99b9 : jne 0x4a99d2 ; xor eax, eax ; ret
0x00000000004aa7ff : jne 0x4aa82e ; mov rax, qword ptr [rsi + 0x10] ; ret
0x00000000004aa819 : jne 0x4aa832 ; xor eax, eax ; ret
0x00000000004aadb9 : jne 0x4aadc3 ; ret
0x00000000004aadd4 : jne 0x4aade3 ; ret
0x00000000004ab004 : jne 0x4ab013 ; ret
0x00000000004ab289 : jne 0x4ab2ac ; xor eax, eax ; ret
0x00000000004ab855 : jne 0x4ab848 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004ab8a0 : jne 0x4ab880 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004ab9e5 : jne 0x4ab9cb ; pop rbx ; ret
0x00000000004abaf3 : jne 0x4abade ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004ac6ad : jne 0x4ac696 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004ac831 : jne 0x4ac848 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004b0921 : jne 0x4b091d ; jmp qword ptr [rax]
0x00000000004c34d7 : jne 0x4c34a1 ; mov ecx, 0x5b92ac50 ; retf
0x00000000004c546b : jne 0x4c5492 ; retf 0x32dd
0x000000000042e3be : jno 0x42e3cd ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004397b0 : jno 0x4397b9 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00000000004399ea : jno 0x4399f3 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x0000000000439b51 : jno 0x439b62 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x0000000000439cb6 : jno 0x439d3a ; adc qword ptr [rdi - 8], rdi ; ret
0x000000000046e10f : jno 0x46e13e ; add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x0000000000496054 : jno 0x4960a6 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004b0915 : jno 0x4b0915 ; jmp qword ptr [rax + 0x20fff872]
0x00000000004b0955 : jno 0x4b0951 ; jmp qword ptr [rax]
0x00000000004c81f4 : jno 0x4c8188 ; call qword ptr [rbx]
0x0000000000425ac1 : jnp 0x425af4 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000425ac1 : jnp 0x425af5 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000045b135 : jnp 0x45b141 ; add byte ptr [rax + 0x63], cl ; ret
0x000000000046a21c : jnp 0x46a1b7 ; add qword ptr [rcx + 0x26e9060d], rcx ; add byte ptr [rax + 0x63], cl ; retf 0x8948
0x0000000000478a54 : jnp 0x478a7a ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000479158 : jnp 0x47917e ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004897ef : jnp 0x4897f4 ; dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004af9b9 : jnp 0x4af9b8 ; inc dword ptr [rax] ; jge 0x4af9bc ; jmp qword ptr [rax]
0x00000000004c3e85 : jnp 0x4c3e42 ; ret
0x00000000004c4e82 : jnp 0x4c4ee0 ; retf
0x00000000004c5289 : jnp 0x4c52d6 ; retf 0x99e0
0x00000000004c5ee9 : jnp 0x4c5f2a ; retf
0x00000000004cfacd : jnp 0x4cfad5 ; add byte ptr [rax], dh ; fdivr st(2) ; jmp rdx
0x00000000004cfb15 : jnp 0x4cfb1d ; add al, cl ; fdivp st(2) ; jmp qword ptr [rax]
0x00000000004cfb2d : jnp 0x4cfb35 ; add al, dl ; loope 0x4cfb33 ; jmp qword ptr [rbx]
0x00000000004069f6 : jns 0x4069c6 ; mov r15, r12 ; jmp 0x4069cd
0x000000000042575f : jns 0x425767 ; add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x00000000004397b7 : jns 0x4397ba ; ret
0x00000000004399f1 : jns 0x4399f4 ; ret
0x0000000000439b58 : jns 0x439b63 ; ret
0x000000000043ffe7 : jns 0x43ffc2 ; retf 0xead3
0x0000000000440067 : jns 0x4400d8 ; rcr dword ptr [rdx], 0xf ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000440137 : jns 0x440112 ; retf 0xead3
0x00000000004400b8 : jns 0x440129 ; rcr dword ptr [rdx], 0xf ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004401b7 : jns 0x440228 ; rcr dword ptr [rdx], 0xf ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000440287 : jns 0x440262 ; retf 0xead3
0x00000000004403d7 : jns 0x4403b2 ; retf 0xead3
0x0000000000440356 : jns 0x4403c7 ; rcr dword ptr [rdx], 0xf ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000440527 : jns 0x440502 ; retf 0xead3
0x00000000004405a7 : jns 0x440618 ; rcr dword ptr [rdx], 0xf ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000440677 : jns 0x440652 ; retf 0xead3
0x00000000004407c7 : jns 0x4407a2 ; retf 0xead3
0x0000000000440748 : jns 0x4407b9 ; rcr dword ptr [rdx], 0xf ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000440847 : jns 0x4408b8 ; rcr dword ptr [rdx], 0xf ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000440917 : jns 0x4408f2 ; retf 0xead3
0x0000000000440898 : jns 0x440909 ; rcr dword ptr [rdx], 0xf ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000440997 : jns 0x440a08 ; rcr dword ptr [rdx], 0xf ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000440a67 : jns 0x440a42 ; retf 0xead3
0x0000000000440bb7 : jns 0x440b92 ; retf 0xead3
0x0000000000440d07 : jns 0x440ce2 ; retf 0xead3
0x0000000000440d87 : jns 0x440df8 ; rcr dword ptr [rdx], 0xf ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x0000000000440e57 : jns 0x440e32 ; retf 0xead3
0x0000000000440fa7 : jns 0x440f82 ; retf 0xead3
0x00000000004410f7 : jns 0x4410d2 ; retf 0xead3
0x0000000000441078 : jns 0x4410e9 ; rcr dword ptr [rdx], 0xf ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000441177 : jns 0x4411e8 ; rcr dword ptr [rdx], 0xf ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000441247 : jns 0x441222 ; retf 0xead3
0x00000000004483c8 : jns 0x4483b5 ; movups xmmword ptr [rcx - 0x30], xmm8 ; movups xmmword ptr [r11], xmm4 ; ret
0x00000000004484b6 : jns 0x4484a3 ; movups xmmword ptr [rcx - 0x30], xmm8 ; movups xmmword ptr [r11], xmm4 ; ret
0x000000000044c606 : jns 0x44c656 ; mov edi, dword ptr [rbp] ; call r12
0x000000000049f357 : jns 0x49f332 ; retf 0xead3
0x000000000049f4d7 : jns 0x49f4b2 ; retf 0xead3
0x000000000049f657 : jns 0x49f632 ; retf 0xead3
0x000000000049f7d7 : jns 0x49f7b2 ; retf 0xead3
0x000000000049f957 : jns 0x49f932 ; retf 0xead3
0x000000000049fad7 : jns 0x49fab2 ; retf 0xead3
0x000000000049fc57 : jns 0x49fc32 ; retf 0xead3
0x000000000049fdd7 : jns 0x49fdb2 ; retf 0xead3
0x000000000049ff57 : jns 0x49ff32 ; retf 0xead3
0x00000000004a00d7 : jns 0x4a00b2 ; retf 0xead3
0x00000000004a0257 : jns 0x4a0232 ; retf 0xead3
0x00000000004a03d7 : jns 0x4a03b2 ; retf 0xead3
0x00000000004a0557 : jns 0x4a0532 ; retf 0xead3
0x00000000004a06d7 : jns 0x4a06b2 ; retf 0xead3
0x00000000004a0857 : jns 0x4a0832 ; retf 0xead3
0x00000000004a609e : jns 0x4a60ad ; add byte ptr [rax], al ; sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a66ee : jns 0x4a66fb ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x00000000004a899e : jns 0x4a89e1 ; add byte ptr [rbp + rbx + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004a970e : jns 0x4a971b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x00000000004ab30e : jns 0x4ab31b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x00000000004af9b1 : jns 0x4af9b0 ; inc eax ; jp 0x4af9b4 ; jmp rax
0x00000000004af9ed : jns 0x4af9e8 ; call qword ptr [rax]
0x00000000004af9ed : jns 0x4af9f0 ; call qword ptr [rax]
0x00000000004c2f8e : jns 0x4c2f24 ; ret 0xf869
0x00000000004c2f8d : jns 0x4c2f25 ; ret 0xf869
0x00000000004c539e : jns 0x4c53f5 ; jmp 0x4c5336
0x0000000000415904 : jo 0x415955 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000415934 : jo 0x415985 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000420965 : jo 0x420979 ; add byte ptr [rax], al ; cmp rdx, r8 ; jne 0x42093a ; ret
0x000000000044b57d : jo 0x44b581 ; dec dword ptr [rax - 0x77] ; ret
0x000000000044cb64 : jo 0x44cbba ; add esp, 0xd0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044dac2 : jo 0x44dae6 ; ret
0x0000000000454a30 : jo 0x454a3a ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000463b0d : jo 0x463b17 ; mov rdi, r12 ; call 0x47fd67
0x000000000046e15e : jo 0x46e18d ; add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x000000000046e1a3 : jo 0x46e1d2 ; add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x000000000046e1e8 : jo 0x46e217 ; add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x000000000047745a : jo 0x4773e7 ; ret 0x348
0x000000000047aa6a : jo 0x47aa82 ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000047de36 : jo 0x47de98 ; pop rbp ; pop r12 ; ret
0x000000000047dfea : jo 0x47e050 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047e28d : jo 0x47e2ef ; pop rbp ; pop r12 ; ret
0x000000000048c494 : jo 0x48c4fa ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004afd58 : jo 0x4afd60 ; idiv edi ; rol byte ptr [rax], 0xf8 ; call qword ptr [rax]
0x00000000004afdac : jo 0x4afdbb ; clc ; dec dword ptr [rax + 0x32] ; clc ; call qword ptr [rax]
0x00000000004aff24 : jo 0x4aff58 ; clc ; inc eax ; sub al, 0xf8 ; call qword ptr [rax]
0x00000000004aff7c : jo 0x4afff4 ; clc ; inc dword ptr [rax] ; imul edi, eax, -1 ; nop ; push -8 ; jmp qword ptr [rax]
0x00000000004b0194 : jo 0x4b0209 ; clc ; inc dword ptr [rax] ; push 0x6790fff8 ; clc ; jmp qword ptr [rax]
0x00000000004b0474 : jo 0x4b0413 ; clc ; inc dword ptr [rax] ; xchg eax, edx ; clc ; call qword ptr [rax + 0x20fff891]
0x00000000004b0878 : jo 0x4b0805 ; clc ; jmp rax
0x00000000004b0951 : jo 0x4b0951 ; jmp qword ptr [rax + 0x20fff871]
0x00000000004b1a4c : jo 0x4b1a1f ; stc ; dec dword ptr [rax - 0x36] ; stc ; jmp qword ptr [rax]
0x00000000004c4004 : jo 0x4c407e ; mov ebp, 0xfb67d10d ; ret
0x00000000004cb40c : jo 0x4cb413 ; ret 0xa01
0x00000000004cdaf0 : jo 0x4cdb63 ; clc ; call qword ptr [rdi]
0x00000000004ce4ac : jo 0x4ce51a ; add byte ptr [rax], al ; xor dl, ah ; std ; call rdx
0x00000000004d0add : jo 0x4d0ae4 ; retf
0x000000000040065e : jp 0x400699 ; add byte ptr [rax - 0x77], cl ; call 0x4938d7bc
0x0000000000458be2 : jp 0x458bdc ; ret
0x000000000046e1a2 : jp 0x46e21c ; add byte ptr es:[rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x0000000000497d2a : jp 0x497d54 ; and al, 0 ; ret
0x00000000004a982a : jp 0x4a98ab ; adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000004af9b5 : jp 0x4af9b0 ; jmp rax
0x00000000004c4193 : jp 0x4c414d ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x00000000004c517a : jp 0x4c511d ; xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x000000000042ef09 : jrcxz 0x42ef23 ; or byte ptr [rax], al ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000431a8a : jrcxz 0x431a9e ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000435eaa : jrcxz 0x435ea5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435ea9 : jrcxz 0x435ea6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004389ca : jrcxz 0x4389c5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004389c9 : jrcxz 0x4389c6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000044d883 : jrcxz 0x44d848 ; cmp r11d, 0xa ; je 0x44d894 ; ret
0x0000000000450b27 : jrcxz 0x450b32 ; dec dword ptr [rcx + rcx*4 - 1] ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x0000000000469c9f : jrcxz 0x469ca5 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x0000000000469c9e : jrcxz 0x469ca6 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x0000000000489dae : jrcxz 0x489dfc ; mov esi, ebx ; syscall
0x00000000004abaf4 : jrcxz 0x4abb56 ; pop rbp ; pop r12 ; ret
0x00000000004c2de5 : jrcxz 0x4c2e3f ; ret
0x00000000004c4412 : jrcxz 0x4c4490 ; and ebx, dword ptr [rbx] ; xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x00000000004c4fad : jrcxz 0x4c4f70 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x00000000004c5b09 : jrcxz 0x4c5aed ; cmp al, 0x93 ; in al, dx ; retf 0xae32
0x00000000004c8711 : jrcxz 0x4c8708 ; call rax
0x00000000004ce2c1 : jrcxz 0x4ce2bd ; call qword ptr [rdi]
0x00000000004ce2d9 : jrcxz 0x4ce2d5 ; call qword ptr [rcx]
0x00000000004ce2ed : jrcxz 0x4ce2e9 ; call qword ptr [rcx]
0x00000000004ce301 : jrcxz 0x4ce2fd ; call qword ptr [rcx]
0x00000000004ce300 : jrcxz 0x4ce2fe ; call qword ptr [rcx]
0x000000000040fcc5 : js 0x40fce9 ; call rdx
0x0000000000425797 : js 0x42579a ; add eax, 0x2b4772 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004258f7 : js 0x4258fa ; add eax, 0x2b4612 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x0000000000425a37 : js 0x425a3a ; add eax, 0x2b44d2 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004493d4 : js 0x4493e6 ; add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rax, rsi ; jmp rax
0x00000000004493d3 : js 0x4493e7 ; add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rax, rsi ; jmp rax
0x000000000044b743 : js 0x44b72f ; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000455c1d : js 0x455c85 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000467c08 : js 0x467c15 ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xdce8
0x000000000047b909 : js 0x47b941 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000485f92 : js 0x485fa5 ; pop rbx ; ret
0x00000000004a1669 : js 0x4a16d1 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004a5ce4 : js 0x4a5ce1 ; std ; dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000004a8c56 : js 0x4a8c63 ; add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000004a8c63 : js 0x4a8c6f ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004ab923 : js 0x4ab99e ; ret 0x8b48
0x00000000004b0929 : js 0x4b0925 ; jmp qword ptr [rax]
0x00000000004c4ee8 : js 0x4c4ebc ; movsxd rbx, dword ptr [rsi + rax*8 + 0x74] ; retf 0x93a2
0x00000000004c4e81 : js 0x4c4f01 ; pop rdx ; retf
0x00000000004c57a7 : js 0x4c57ad ; insd dword ptr [rdi], dx ; add dword ptr [rbp - 9], 0x8d626770 ; rcl byte ptr [rdi], cl ; retf
0x00000000004cd0b4 : js 0x4cd10e ; add byte ptr [rax], al ; or byte ptr [rcx], cl ; clc ; call qword ptr [rcx]
0x00000000004cdfb4 : js 0x4ce01d ; add byte ptr [rax], al ; cmp bh, bl ; std ; jmp qword ptr [rdi]
0x00000000004cfd28 : js 0x4cfd16 ; cli ; jmp qword ptr [rax]
0x00000000004d17a8 : js 0x4d17f7 ; cld ; jmp qword ptr [rcx]
0x00000000004d2578 : js 0x4d25bb ; std ; call qword ptr [rdx]
0x000000000046cca3 : lahf ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000457e35 : lahf ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x000000000042035f : lahf ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000004c54c3 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000488a2b : lahf ; mov eax, dword ptr [rdx + 4] ; ret
0x0000000000440aed : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046054f : lahf ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004c4db2 : lahf ; or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004c55b4 : lahf ; push -0x57d3205 ; call 0xffffffffab5a20b6
0x00000000004c35c0 : lahf ; push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x000000000044bd1b : lahf ; ret
0x0000000000419fdf : lahf ; ret 0x3949
0x000000000041a092 : lahf ; ret 0x48e9
0x000000000044bbd1 : lahf ; ret 0x8545
0x00000000004c2d1d : lahf ; ret 0x871e
0x0000000000471293 : lahf ; ret 0xd629
0x0000000000471ae1 : lahf ; ret 0xd729
0x00000000004493a9 : lahf ; ret 0xea81
0x00000000004a8011 : lahf ; ret 0xf45
0x00000000004ab6bd : lahf ; retf
0x00000000004d0dad : lahf ; sti ; call rdx
0x00000000004d0d99 : lahf ; sti ; jmp qword ptr [rcx]
0x000000000044117d : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004c0d63 : lcall [rax + 0x57] ; cld ; call qword ptr [rax]
0x00000000004c0d7b : lcall [rax + 0x57] ; cld ; jmp qword ptr [rbx]
0x00000000004c0d77 : lcall [rax + 0x57] ; cld ; lcall [rax + 0x57] ; cld ; jmp qword ptr [rbx]
0x00000000004b121b : lcall [rax + 0x6afff996] ; xchg eax, esi ; stc ; jmp qword ptr [rdx]
0x00000000004c79eb : lcall [rax - 0x2700020d] ; std ; call qword ptr [rax]
0x00000000004b1fdb : lcall [rax] ; sar ecx, cl ; lcall [rdi - 0x2f] ; stc ; ljmp [rdx] ; sar ecx, 1 ; jmp rdx
0x000000000041be82 : lcall [rbx + 0x48] ; mov eax, edi ; pop rbp ; pop r12 ; ret
0x000000000044fbed : lcall [rbx + 0x5d] ; pop r12 ; jmp 0x45c667
0x000000000041a6e0 : lcall [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004130b5 : lcall [rbx + 0x5d] ; pop r12 ; ret
0x0000000000412e3b : lcall [rbx + 0x5d] ; ret
0x000000000048a056 : lcall [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x00000000004b1fdf : lcall [rdi - 0x2f] ; stc ; ljmp [rdx] ; sar ecx, 1 ; jmp rdx
0x00000000004b036b : lcall [rdx + 0x2afff85b] ; pop rbx ; clc ; call rax
0x00000000004bfc73 : lcall [rdx + rdx*4] ; sti ; call rsp
0x00000000004b0527 : lcall [rsp + rcx*4 - 0x73d30008] ; clc ; call rdx
0x0000000000435d16 : lddqu xmm0, xmmword ptr [rsi - 0x10] ; movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x0000000000436536 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000418d2b : lea eax, [r8 - 1] ; ret
0x00000000004a670c : lea eax, [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000042c6d4 : lea eax, [rax + rdi + 0x10] ; ret
0x000000000042c6e4 : lea eax, [rax + rdi + 0x20] ; ret
0x000000000042c6b4 : lea eax, [rax + rdi - 0x10] ; ret
0x0000000000418d2c : lea eax, [rax - 1] ; ret
0x00000000004a3d2f : lea eax, [rbx] ; call 6
0x000000000047a65a : lea eax, [rcx + 4] ; mov qword ptr [rdx + 0x20], rax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x000000000047d4ed : lea eax, [rcx + rsi] ; ret
0x0000000000447b94 : lea eax, [rcx - 1] ; ret
0x0000000000445c0c : lea eax, [rdi + 0x10] ; ret
0x0000000000445c21 : lea eax, [rdi + 0x11] ; ret
0x0000000000445c3f : lea eax, [rdi + 0x12] ; ret
0x0000000000445c5f : lea eax, [rdi + 0x13] ; ret
0x0000000000445c82 : lea eax, [rdi + 0x14] ; ret
0x0000000000445ca1 : lea eax, [rdi + 0x15] ; ret
0x0000000000445cc1 : lea eax, [rdi + 0x16] ; ret
0x0000000000445ce1 : lea eax, [rdi + 0x17] ; ret
0x0000000000445d04 : lea eax, [rdi + 0x18] ; ret
0x0000000000445d29 : lea eax, [rdi + 0x19] ; ret
0x0000000000445d47 : lea eax, [rdi + 0x1a] ; ret
0x0000000000445d67 : lea eax, [rdi + 0x1b] ; ret
0x0000000000445d83 : lea eax, [rdi + 0x1c] ; ret
0x0000000000445da3 : lea eax, [rdi + 0x1d] ; ret
0x0000000000445dc3 : lea eax, [rdi + 0x1e] ; ret
0x0000000000445de3 : lea eax, [rdi + 0x1f] ; ret
0x0000000000445b5d : lea eax, [rdi + 0xa] ; ret
0x0000000000445b7d : lea eax, [rdi + 0xb] ; ret
0x0000000000445b9f : lea eax, [rdi + 0xc] ; ret
0x0000000000445bbf : lea eax, [rdi + 0xd] ; ret
0x0000000000445bdf : lea eax, [rdi + 0xe] ; ret
0x0000000000445bf9 : lea eax, [rdi + 0xf] ; ret
0x0000000000445aa7 : lea eax, [rdi + 1] ; ret
0x0000000000445aba : lea eax, [rdi + 2] ; ret
0x0000000000445ac5 : lea eax, [rdi + 3] ; ret
0x0000000000445ad8 : lea eax, [rdi + 4] ; ret
0x0000000000445aed : lea eax, [rdi + 5] ; ret
0x0000000000445b0b : lea eax, [rdi + 6] ; ret
0x0000000000445b17 : lea eax, [rdi + 7] ; ret
0x0000000000445b2a : lea eax, [rdi + 8] ; ret
0x0000000000445b3f : lea eax, [rdi + 9] ; ret
0x000000000042c709 : lea eax, [rdi + rax + 0x10] ; ret
0x000000000042c719 : lea eax, [rdi + rax + 0x20] ; ret
0x000000000042c613 : lea eax, [rdi + rax + 0x30] ; ret
0x000000000047d735 : lea eax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x000000000044145c : lea eax, [rdi + rax] ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x0000000000441677 : lea eax, [rdi + rax] ; ret
0x0000000000447eea : lea eax, [rdi + rcx] ; sub rax, rsi ; ret
0x000000000047d3e9 : lea eax, [rdi + rsi] ; ret
0x000000000048bdb8 : lea eax, [rdi - 1] ; cmp rax, -3 ; jbe 0x48bdd2 ; ret
0x00000000004376f7 : lea eax, [rdi] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000445a93 : lea eax, [rdi] ; ret
0x000000000044507d : lea eax, [rdx + 0xa] ; ret
0x000000000044509d : lea eax, [rdx + 0xb] ; ret
0x00000000004450bf : lea eax, [rdx + 0xc] ; ret
0x00000000004450df : lea eax, [rdx + 0xd] ; ret
0x00000000004450ff : lea eax, [rdx + 0xe] ; ret
0x0000000000444f8f : lea eax, [rdx + 0xf] ; ret
0x0000000000472153 : lea eax, [rdx + 1] ; mov byte ptr [rdx], r13b ; jne 0x4720fd ; mov rdx, rax ; jmp 0x472117
0x0000000000444fb7 : lea eax, [rdx + 1] ; ret
0x0000000000444fcd : lea eax, [rdx + 2] ; ret
0x0000000000444fe5 : lea eax, [rdx + 3] ; ret
0x0000000000444ffb : lea eax, [rdx + 4] ; ret
0x000000000044500d : lea eax, [rdx + 5] ; ret
0x000000000044502b : lea eax, [rdx + 6] ; ret
0x0000000000444f37 : lea eax, [rdx + 7] ; ret
0x000000000044503d : lea eax, [rdx + 8] ; ret
0x000000000044505d : lea eax, [rdx + 9] ; ret
0x0000000000418d1e : lea eax, [rdx + rdi] ; ret
0x00000000004494c3 : lea eax, [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004240a6 : lea eax, [rdx - 0x10] ; ret
0x0000000000444fa5 : lea eax, [rdx] ; ret
0x0000000000425b18 : lea eax, [rip + 0x1bb12] ; cmove rax, rdx ; ret
0x0000000000424bb8 : lea eax, [rip + 0x1d0a2] ; cmove rax, rdx ; ret
0x00000000004256cf : lea eax, [rip + 0x221ab] ; cmove rax, rdx ; ret
0x0000000000425a58 : lea eax, [rip + 0x22732] ; cmovne rax, rdx ; ret
0x0000000000425918 : lea eax, [rip + 0x22862] ; cmovne rax, rdx ; ret
0x00000000004257b8 : lea eax, [rip + 0x229d2] ; cmovne rax, rdx ; ret
0x0000000000425abf : lea eax, [rip + 0x22a7b] ; cmovne rax, rdx ; ret
0x000000000042597f : lea eax, [rip + 0x22bab] ; cmovne rax, rdx ; ret
0x000000000042581f : lea eax, [rip + 0x22d1b] ; cmovne rax, rdx ; ret
0x0000000000425a9e : lea eax, [rip + 0x22ecc] ; cmovne rax, rdx ; ret
0x000000000042595e : lea eax, [rip + 0x22ffc] ; cmovne rax, rdx ; ret
0x00000000004257fe : lea eax, [rip + 0x2316c] ; cmovne rax, rdx ; ret
0x0000000000424b3f : lea eax, [rip + 0x231db] ; cmovne rax, rdx ; ret
0x000000000042588a : lea eax, [rip + 0x23660] ; cmovne rax, rdx ; ret
0x000000000042586d : lea eax, [rip + 0x237dd] ; cmovne rax, rdx ; ret
0x00000000004258be : lea eax, [rip + 0x2390c] ; cmovne rax, rdx ; ret
0x000000000046e3c6 : lea eax, [rip + 0x266e54] ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046e373 : lea eax, [rip + 0x266ea7] ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046de46 : lea eax, [rip + 0x266ed4] ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046e1e5 : lea eax, [rip + 0x267035] ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046e1a0 : lea eax, [rip + 0x26707a] ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046e15b : lea eax, [rip + 0x2670bf] ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046e10c : lea eax, [rip + 0x26710e] ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000462837 : lea eax, [rip + 0x271de3] ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000462be6 : lea eax, [rip + 0x271f34] ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000462b98 : lea eax, [rip + 0x271f82] ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000462ae9 : lea eax, [rip + 0x272031] ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000462a8d : lea eax, [rip + 0x27208d] ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004627ed : lea eax, [rip + 0x27232d] ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046279f : lea eax, [rip + 0x27237b] ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000462346 : lea eax, [rip + 0x2724d4] ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000044ee51 : lea eax, [rip + 0x2894a9] ; ret
0x0000000000425ae8 : lea eax, [rip + 0x6c52] ; cmove rax, rdx ; ret
0x00000000004256f8 : lea eax, [rip + 0x6d12] ; cmove rax, rdx ; ret
0x000000000042575c : lea eax, [rip + 0x79ee] ; je 0x425733 ; ret
0x000000000049847f : lea eax, [rip + 0x85db] ; cmovne rax, rdx ; ret
0x000000000047c908 : lea eax, [rip + 0x9f2] ; cmove rax, rdx ; ret
0x0000000000400d62 : lea eax, [rip + 0xad1ac] ; add rax, rdx ; jmp rax
0x000000000047dd18 : lea eax, [rip + 0xc62] ; cmove rax, rdx ; ret
0x000000000047c8d8 : lea eax, [rip + 0xee2] ; cmove rax, rdx ; ret
0x00000000004895c1 : lea eax, [rsi + 1] ; mov qword ptr [rip + 0x250f25], rax ; ret
0x000000000046cdcc : lea eax, [rsi + 8] ; mov qword ptr [rdx + 8], rax ; jmp 0x46cda8
0x0000000000459371 : lea eax, [rsp + 0xb0] ; xor r9d, r9d ; call r15
0x000000000049d3af : lea ebp, [rbx + 1] ; add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x00000000004611d1 : lea ebp, [rdx] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000457f68 : lea ebx, [rbp + 4] ; cmp r13, r11 ; jb 0x457fe2 ; mov rdx, rax ; jmp 0x457f39
0x000000000040f351 : lea ebx, [rdi + rax] ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004c35d1 : lea ebx, [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000047deeb : lea ecx, [rax + 1] ; call rbx
0x000000000047e2c6 : lea ecx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x000000000047c254 : lea ecx, [rbp - 0x40] ; mov rdi, r15 ; call r12
0x000000000042ec20 : lea ecx, [rbx + rcx] ; jmp r9
0x000000000044532e : lea ecx, [rbx + rcx] ; jmp rcx
0x000000000046a894 : lea ecx, [rbx + rdx] ; add rdx, r12 ; call qword ptr [r10 + rax*8]
0x000000000042f0e1 : lea ecx, [rcx - 7] ; lea rdx, [rdx - 0x40] ; jmp r9
0x0000000000488a24 : lea ecx, [rdx + 4] ; cmp rcx, r8 ; jne 0x4889d6 ; mov eax, dword ptr [rdx + 4] ; ret
0x00000000004a1284 : lea ecx, [rdx + rcx*8] ; jmp 0x4a1296
0x00000000004240b6 : lea ecx, [rdx - 8] ; cmovne rax, rcx ; ret
0x00000000004976d0 : lea ecx, [rdx] ; jmp 0x497726
0x00000000004a3ab0 : lea ecx, [rdx] ; jmp 0x4a3b06
0x000000000047fd57 : lea ecx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000047c060 : lea ecx, [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000047bf7b : lea ecx, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x000000000047e24e : lea ecx, [rsp + 0x20] ; call rbx
0x000000000047e07c : lea ecx, [rsp + 0x28] ; call r12
0x000000000047e43c : lea ecx, [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x000000000047dee6 : lea ecx, [rsp + 0x38] ; lea rcx, [rax + 1] ; call rbx
0x000000000046ac27 : lea edi, [rax + 0x48fffff6] ; mov edi, dword ptr [rbp - 0x8d0] ; call rax
0x0000000000482da3 : lea edi, [rbp + 0x28] ; xor esi, esi ; call 0x4004ac
0x0000000000420d5c : lea edi, [rbp] ; sub rsp, 0x80 ; call 0x44d81c
0x0000000000420da0 : lea edi, [rbp] ; sub rsp, 0x80 ; call 0x44d84c
0x000000000044e13f : lea edi, [rcx + rax + 0x20] ; jmp rdx
0x0000000000470348 : lea edi, [rdi + 0x10] ; mov r12, rax ; call 0x47c568
0x00000000004a3de4 : lea edi, [rip + 0x2343d6] ; call 8
0x00000000004a3d2d : lea edi, [rip + 0x23448d] ; call 8
0x00000000004a3cfd : lea edi, [rip + 0x2344bd] ; call 8
0x00000000004a3546 : lea edi, [rip + 0x234c74] ; call 8
0x0000000000462888 : lea edi, [rip + 0x271e92] ; mov rax, qword ptr [rdi + rax*8] ; jmp rax
0x0000000000487af1 : lea edi, [rip + 0x39463] ; mov eax, 0x15 ; syscall
0x000000000044db0e : lea edi, [rip + 0x63bd1] ; mov eax, 0x15 ; syscall
0x0000000000433f1f : lea edi, [rsi + 0x63490007] ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000419641 : lea edx, [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000041a39f : lea edx, [rax + 1] ; mov qword ptr [rip + 0x2bd487], rdx ; ret
0x00000000004040f0 : lea edx, [rax + 1] ; mov rdi, rdx ; mov qword ptr [rbp - 0x78], rdx ; call 0x420b1c
0x00000000004a1280 : lea edx, [rax + 8] ; lea rcx, [rdx + rcx*8] ; jmp 0x4a129a
0x000000000047bdd7 : lea edx, [rax + rdx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000478c19 : lea edx, [rbx + 0x34] ; mov esi, 1 ; mov rdi, rbx ; call rax
0x000000000042ecf4 : lea edx, [rbx + rdx] ; jmp rdx
0x0000000000425bb6 : lea edx, [rdx + rcx] ; jmp r10
0x000000000042f0e8 : lea edx, [rdx - 0x40] ; jmp r9
0x00000000004257d3 : lea edx, [rip + 0x11407] ; cmovne rax, rdx ; ret
0x00000000004259f4 : lea edx, [rip + 0x166b6] ; and ch, 2 ; cmovne rax, rdx ; ret
0x0000000000424b1f : lea edx, [rip + 0x1d62b] ; cmovne rax, rdx ; ret
0x00000000004259af : lea edx, [rip + 0x1df4b] ; cmovne rax, rdx ; ret
0x0000000000425744 : lea edx, [rip + 0x209c6] ; cmovne rax, rdx ; ret
0x0000000000424ab8 : lea edx, [rip + 0x21332] ; cmovne rax, rdx ; ret
0x00000000004984c4 : lea edx, [rip + 0x26c6] ; and ch, 2 ; cmovne rax, rdx ; ret
0x0000000000424aef : lea edx, [rip + 0x272b] ; cmovne rax, rdx ; ret
0x000000000047e68a : lea edx, [rip + 0x30] ; cmovne rax, rdx ; ret
0x0000000000424bf9 : lea edx, [rip + 0x50d1] ; cmovne rax, rdx ; ret
0x0000000000425a73 : lea edx, [rip + 0xe697] ; cmovne rax, rdx ; ret
0x0000000000425933 : lea edx, [rip + 0xe7b7] ; cmovne rax, rdx ; ret
0x000000000047dd84 : lea edx, [rip - 0x34bda] ; cmove rax, rdx ; ret
0x00000000004481fe : lea edx, [rsi + rcx] ; cmp rdi, rdx ; jb 0x448213 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000463b0c : lea esi, [rax + 1] ; mov rdi, r12 ; call 0x47fd68
0x0000000000476317 : lea esi, [rax*8] ; call 0x4225d9
0x000000000047bf77 : lea esi, [rbp + 0x50] ; lea r9, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x00000000004a9581 : lea esi, [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x000000000046d21d : lea esi, [rip + 0x267bfd] ; jmp rax
0x0000000000462f32 : lea esi, [rip + 0x2717e8] ; mov rax, qword ptr [rsi + rax*8] ; xor esi, esi ; jmp rax
0x000000000044820f : lea esi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000410ce5 : lea esp, [rbp - 0x20] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000488546 : lea esp, [rbx + rdi*8 - 0x76b30001] ; ret 0x2948
0x0000000000425bb5 : lea r10, [r10 + r9] ; jmp r10
0x0000000000457f67 : lea r11, [rbp + 4] ; cmp r13, r11 ; jb 0x457fe3 ; mov rdx, rax ; jmp 0x457f3a
0x00000000004a9580 : lea r14, [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x0000000000459370 : lea r8, [rsp + 0xb0] ; xor r9d, r9d ; call r15
0x000000000042ec1f : lea r9, [r11 + r9] ; jmp r9
0x000000000042f0e0 : lea r9, [r9 - 7] ; lea rdx, [rdx - 0x40] ; jmp r9
0x000000000047c253 : lea r9, [rbp - 0x40] ; mov rdi, r15 ; call r12
0x00000000004976cf : lea r9, [rdx] ; jmp 0x497727
0x00000000004a3aaf : lea r9, [rdx] ; jmp 0x4a3b07
0x000000000047c05f : lea r9, [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000047bf7a : lea r9, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x000000000047e24d : lea r9, [rsp + 0x20] ; call rbx
0x000000000047e07b : lea r9, [rsp + 0x28] ; call r12
0x000000000047e43b : lea r9, [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x000000000047dee5 : lea r9, [rsp + 0x38] ; lea rcx, [rax + 1] ; call rbx
0x000000000047e07a : lea r9, ds:[rsp + 0x28] ; call r12
0x00000000004a670b : lea rax, [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000042c6d3 : lea rax, [rax + rdi + 0x10] ; ret
0x000000000042c6e3 : lea rax, [rax + rdi + 0x20] ; ret
0x000000000042c6b3 : lea rax, [rax + rdi - 0x10] ; ret
0x000000000047a659 : lea rax, [rcx + 4] ; mov qword ptr [rdx + 0x20], rax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x000000000047d4ec : lea rax, [rcx + rsi] ; ret
0x0000000000447b93 : lea rax, [rcx - 1] ; ret
0x0000000000445c0b : lea rax, [rdi + 0x10] ; ret
0x0000000000445c20 : lea rax, [rdi + 0x11] ; ret
0x0000000000445c3e : lea rax, [rdi + 0x12] ; ret
0x0000000000445c5e : lea rax, [rdi + 0x13] ; ret
0x0000000000445c81 : lea rax, [rdi + 0x14] ; ret
0x0000000000445ca0 : lea rax, [rdi + 0x15] ; ret
0x0000000000445cc0 : lea rax, [rdi + 0x16] ; ret
0x0000000000445ce0 : lea rax, [rdi + 0x17] ; ret
0x0000000000445d03 : lea rax, [rdi + 0x18] ; ret
0x0000000000445d28 : lea rax, [rdi + 0x19] ; ret
0x0000000000445d46 : lea rax, [rdi + 0x1a] ; ret
0x0000000000445d66 : lea rax, [rdi + 0x1b] ; ret
0x0000000000445d82 : lea rax, [rdi + 0x1c] ; ret
0x0000000000445da2 : lea rax, [rdi + 0x1d] ; ret
0x0000000000445dc2 : lea rax, [rdi + 0x1e] ; ret
0x0000000000445de2 : lea rax, [rdi + 0x1f] ; ret
0x0000000000445b5c : lea rax, [rdi + 0xa] ; ret
0x0000000000445b7c : lea rax, [rdi + 0xb] ; ret
0x0000000000445b9e : lea rax, [rdi + 0xc] ; ret
0x0000000000445bbe : lea rax, [rdi + 0xd] ; ret
0x0000000000445bde : lea rax, [rdi + 0xe] ; ret
0x0000000000445bf8 : lea rax, [rdi + 0xf] ; ret
0x0000000000445aa6 : lea rax, [rdi + 1] ; ret
0x0000000000445ab9 : lea rax, [rdi + 2] ; ret
0x0000000000445ac4 : lea rax, [rdi + 3] ; ret
0x0000000000445ad7 : lea rax, [rdi + 4] ; ret
0x0000000000445aec : lea rax, [rdi + 5] ; ret
0x0000000000445b0a : lea rax, [rdi + 6] ; ret
0x0000000000445b16 : lea rax, [rdi + 7] ; ret
0x0000000000445b29 : lea rax, [rdi + 8] ; ret
0x0000000000445b3e : lea rax, [rdi + 9] ; ret
0x000000000042c708 : lea rax, [rdi + rax + 0x10] ; ret
0x000000000042c718 : lea rax, [rdi + rax + 0x20] ; ret
0x000000000042c612 : lea rax, [rdi + rax + 0x30] ; ret
0x000000000047d734 : lea rax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x000000000044145b : lea rax, [rdi + rax] ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x0000000000441676 : lea rax, [rdi + rax] ; ret
0x0000000000447ee9 : lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x000000000047d3e8 : lea rax, [rdi + rsi] ; ret
0x000000000048bdb7 : lea rax, [rdi - 1] ; cmp rax, -3 ; jbe 0x48bdd3 ; ret
0x0000000000445a92 : lea rax, [rdi] ; ret
0x000000000044507c : lea rax, [rdx + 0xa] ; ret
0x000000000044509c : lea rax, [rdx + 0xb] ; ret
0x00000000004450be : lea rax, [rdx + 0xc] ; ret
0x00000000004450de : lea rax, [rdx + 0xd] ; ret
0x00000000004450fe : lea rax, [rdx + 0xe] ; ret
0x0000000000444f8e : lea rax, [rdx + 0xf] ; ret
0x0000000000472152 : lea rax, [rdx + 1] ; mov byte ptr [rdx], r13b ; jne 0x4720fe ; mov rdx, rax ; jmp 0x472118
0x0000000000444fb6 : lea rax, [rdx + 1] ; ret
0x0000000000444fcc : lea rax, [rdx + 2] ; ret
0x0000000000444fe4 : lea rax, [rdx + 3] ; ret
0x0000000000444ffa : lea rax, [rdx + 4] ; ret
0x000000000044500c : lea rax, [rdx + 5] ; ret
0x000000000044502a : lea rax, [rdx + 6] ; ret
0x0000000000444f36 : lea rax, [rdx + 7] ; ret
0x000000000044503c : lea rax, [rdx + 8] ; ret
0x000000000044505c : lea rax, [rdx + 9] ; ret
0x00000000004240a5 : lea rax, [rdx - 0x10] ; ret
0x0000000000444fa4 : lea rax, [rdx] ; ret
0x0000000000425b17 : lea rax, [rip + 0x1bb12] ; cmove rax, rdx ; ret
0x0000000000424bb7 : lea rax, [rip + 0x1d0a2] ; cmove rax, rdx ; ret
0x00000000004256ce : lea rax, [rip + 0x221ab] ; cmove rax, rdx ; ret
0x0000000000425a57 : lea rax, [rip + 0x22732] ; cmovne rax, rdx ; ret
0x0000000000425917 : lea rax, [rip + 0x22862] ; cmovne rax, rdx ; ret
0x00000000004257b7 : lea rax, [rip + 0x229d2] ; cmovne rax, rdx ; ret
0x0000000000425abe : lea rax, [rip + 0x22a7b] ; cmovne rax, rdx ; ret
0x000000000042597e : lea rax, [rip + 0x22bab] ; cmovne rax, rdx ; ret
0x000000000042581e : lea rax, [rip + 0x22d1b] ; cmovne rax, rdx ; ret
0x0000000000425a9d : lea rax, [rip + 0x22ecc] ; cmovne rax, rdx ; ret
0x000000000042595d : lea rax, [rip + 0x22ffc] ; cmovne rax, rdx ; ret
0x00000000004257fd : lea rax, [rip + 0x2316c] ; cmovne rax, rdx ; ret
0x0000000000424b3e : lea rax, [rip + 0x231db] ; cmovne rax, rdx ; ret
0x0000000000425889 : lea rax, [rip + 0x23660] ; cmovne rax, rdx ; ret
0x000000000042586c : lea rax, [rip + 0x237dd] ; cmovne rax, rdx ; ret
0x00000000004258bd : lea rax, [rip + 0x2390c] ; cmovne rax, rdx ; ret
0x000000000046e3c5 : lea rax, [rip + 0x266e54] ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046e372 : lea rax, [rip + 0x266ea7] ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046de45 : lea rax, [rip + 0x266ed4] ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046e1e4 : lea rax, [rip + 0x267035] ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046e19f : lea rax, [rip + 0x26707a] ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046e15a : lea rax, [rip + 0x2670bf] ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046e10b : lea rax, [rip + 0x26710e] ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000462836 : lea rax, [rip + 0x271de3] ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000462be5 : lea rax, [rip + 0x271f34] ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000462b97 : lea rax, [rip + 0x271f82] ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000462ae8 : lea rax, [rip + 0x272031] ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000462a8c : lea rax, [rip + 0x27208d] ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004627ec : lea rax, [rip + 0x27232d] ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046279e : lea rax, [rip + 0x27237b] ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000462345 : lea rax, [rip + 0x2724d4] ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000044ee50 : lea rax, [rip + 0x2894a9] ; ret
0x0000000000425ae7 : lea rax, [rip + 0x6c52] ; cmove rax, rdx ; ret
0x00000000004256f7 : lea rax, [rip + 0x6d12] ; cmove rax, rdx ; ret
0x000000000042575b : lea rax, [rip + 0x79ee] ; je 0x425734 ; ret
0x000000000049847e : lea rax, [rip + 0x85db] ; cmovne rax, rdx ; ret
0x000000000047c907 : lea rax, [rip + 0x9f2] ; cmove rax, rdx ; ret
0x0000000000400d61 : lea rax, [rip + 0xad1ac] ; add rax, rdx ; jmp rax
0x000000000047dd17 : lea rax, [rip + 0xc62] ; cmove rax, rdx ; ret
0x000000000047c8d7 : lea rax, [rip + 0xee2] ; cmove rax, rdx ; ret
0x00000000004895c0 : lea rax, [rsi + 1] ; mov qword ptr [rip + 0x250f25], rax ; ret
0x000000000046cdcb : lea rax, [rsi + 8] ; mov qword ptr [rdx + 8], rax ; jmp 0x46cda9
0x000000000040f350 : lea rbx, [r15 + rax] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000044532d : lea rcx, [r11 + rcx] ; jmp rcx
0x000000000047deea : lea rcx, [rax + 1] ; call rbx
0x000000000047e2c5 : lea rcx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x000000000046a893 : lea rcx, [rbx + rdx] ; add rdx, r12 ; call qword ptr [r10 + rax*8]
0x0000000000488a23 : lea rcx, [rdx + 4] ; cmp rcx, r8 ; jne 0x4889d7 ; mov eax, dword ptr [rdx + 4] ; ret
0x00000000004a1283 : lea rcx, [rdx + rcx*8] ; jmp 0x4a1297
0x00000000004240b5 : lea rcx, [rdx - 8] ; cmovne rax, rcx ; ret
0x000000000047fd56 : lea rcx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000044e13e : lea rdi, [rcx + rax + 0x20] ; jmp rdx
0x0000000000470347 : lea rdi, [rdi + 0x10] ; mov r12, rax ; call 0x47c569
0x00000000004a3de3 : lea rdi, [rip + 0x2343d6] ; call 9
0x00000000004a3d2c : lea rdi, [rip + 0x23448d] ; call 9
0x00000000004a3cfc : lea rdi, [rip + 0x2344bd] ; call 9
0x00000000004a3545 : lea rdi, [rip + 0x234c74] ; call 9
0x0000000000462887 : lea rdi, [rip + 0x271e92] ; mov rax, qword ptr [rdi + rax*8] ; jmp rax
0x0000000000487af0 : lea rdi, [rip + 0x39463] ; mov eax, 0x15 ; syscall
0x000000000044db0d : lea rdi, [rip + 0x63bd1] ; mov eax, 0x15 ; syscall
0x000000000042ecf3 : lea rdx, [r11 + rdx] ; jmp rdx
0x000000000047bdd6 : lea rdx, [r8 + rdx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000419640 : lea rdx, [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000041a39e : lea rdx, [rax + 1] ; mov qword ptr [rip + 0x2bd487], rdx ; ret
0x00000000004a127f : lea rdx, [rax + 8] ; lea rcx, [rdx + rcx*8] ; jmp 0x4a129b
0x0000000000478c18 : lea rdx, [rbx + 0x34] ; mov esi, 1 ; mov rdi, rbx ; call rax
0x000000000042f0e7 : lea rdx, [rdx - 0x40] ; jmp r9
0x00000000004257d2 : lea rdx, [rip + 0x11407] ; cmovne rax, rdx ; ret
0x0000000000424b1e : lea rdx, [rip + 0x1d62b] ; cmovne rax, rdx ; ret
0x00000000004259ae : lea rdx, [rip + 0x1df4b] ; cmovne rax, rdx ; ret
0x0000000000425743 : lea rdx, [rip + 0x209c6] ; cmovne rax, rdx ; ret
0x0000000000424ab7 : lea rdx, [rip + 0x21332] ; cmovne rax, rdx ; ret
0x0000000000424aee : lea rdx, [rip + 0x272b] ; cmovne rax, rdx ; ret
0x000000000047e689 : lea rdx, [rip + 0x30] ; cmovne rax, rdx ; ret
0x0000000000424bf8 : lea rdx, [rip + 0x50d1] ; cmovne rax, rdx ; ret
0x0000000000425a72 : lea rdx, [rip + 0xe697] ; cmovne rax, rdx ; ret
0x0000000000425932 : lea rdx, [rip + 0xe7b7] ; cmovne rax, rdx ; ret
0x000000000047dd83 : lea rdx, [rip - 0x34bda] ; cmove rax, rdx ; ret
0x00000000004481fd : lea rdx, [rsi + rcx] ; cmp rdi, rdx ; jb 0x448214 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000463b0b : lea rsi, [rax + 1] ; mov rdi, r12 ; call 0x47fd69
0x0000000000476316 : lea rsi, [rax*8] ; call 0x4225da
0x000000000047bf76 : lea rsi, [rbp + 0x50] ; lea r9, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x000000000046d21c : lea rsi, [rip + 0x267bfd] ; jmp rax
0x000000000044820e : lea rsi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000410ce4 : lea rsp, [rbp - 0x20] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000042b147 : leave ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042c027 : leave ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000045937a : leave ; call r15
0x00000000004b0a01 : leave ; clc ; jmp qword ptr [rax - 0x35]
0x0000000000447ee4 : leave ; cmp cl, byte ptr [rax + 0x63] ; leave ; lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x0000000000447970 : leave ; jne 0x447963 ; ret
0x0000000000447a20 : leave ; jne 0x447a13 ; ret
0x0000000000447ce0 : leave ; jne 0x447cd7 ; sub rax, 1 ; ret
0x000000000047e95a : leave ; jne 0x47e917 ; mov rax, rdx ; ret
0x0000000000447ee8 : leave ; lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x000000000042d2cf : leave ; mov al, byte ptr [rdi + rdx - 1] ; mov cl, byte ptr [rsi + rdx - 1] ; sub eax, ecx ; ret
0x00000000004a36db : leave ; mov ch, 0xff ; nop ; add rsp, 8 ; ret
0x0000000000494fb9 : leave ; mov rdi, rbx ; call 0x492d4a
0x00000000004a66c0 : leave ; movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x00000000004502bf : leave ; movzx eax, al ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x000000000042711c : leave ; movzx eax, byte ptr [rax + rcx] ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000046d739 : leave ; movzx eax, byte ptr [rdi + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000400bcb : leave ; ret
0x00000000004c4fb4 : leave ; retf
0x00000000004c3781 : leave ; retf 0x6ee8
0x00000000004c21e9 : leave ; retf 0xcccb
0x0000000000432ce3 : leave ; rol byte ptr [rdi], 1 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004b203c : leave ; sar cl, cl ; call qword ptr [rax]
0x0000000000463b08 : leave ; stc ; dec dword ptr [rax - 0x73] ; jo 0x463b1c ; mov rdi, r12 ; call 0x47fd6c
0x0000000000488a72 : leave ; test rsi, rsi ; je 0x488a87 ; mov qword ptr [rsi], rdi ; mov rax, rcx ; ret
0x000000000047e24a : leave ; xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x00000000004b0c77 : ljmp [rax + rcx*4 - 0x77760007] ; stc ; call rsi
0x00000000004c7ea3 : ljmp [rax - 0x2f0001e8] ; sbb dh, bh ; jmp rax
0x00000000004c79e7 : ljmp [rax] ; std ; lcall [rax - 0x2700020d] ; std ; call qword ptr [rax]
0x0000000000478ee9 : ljmp [rbp + 4] ; add byte ptr [rax + 0x63], cl ; add al, 0x87 ; add rax, rdi ; jmp rax
0x00000000004ae38f : ljmp [rbx - 0x560009f9] ; or dh, dh ; jmp rsp
0x000000000049787f : ljmp [rcx] ; enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004ae14b : ljmp [rcx] ; push rdx ; cmc ; jmp qword ptr [rax]
0x00000000004b121f : ljmp [rdx - 0x6a] ; stc ; jmp qword ptr [rdx]
0x00000000004b036f : ljmp [rdx] ; pop rbx ; clc ; call rax
0x00000000004b0367 : ljmp [rdx] ; pop rsp ; clc ; lcall [rdx + 0x2afff85b] ; pop rbx ; clc ; call rax
0x00000000004b1fe3 : ljmp [rdx] ; sar ecx, 1 ; jmp rdx
0x00000000004b02eb : ljmp [rsi + 0x3efff85b] ; pop rbx ; clc ; jmp rsp
0x00000000004b052b : ljmp [rsp + rcx*4] ; clc ; call rdx
0x000000000042d90e : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000489517 : lock inc dword ptr [r9 + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411510 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004472f0 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000004645bb : lodsb al, byte ptr [rsi] ; add eax, 0x3d8d4800 ; retf
0x00000000004b09c9 : lodsb al, byte ptr [rsi] ; clc ; call qword ptr [rax]
0x00000000004c9665 : lodsb al, byte ptr [rsi] ; hlt ; jmp rdx
0x00000000004c4ea6 : lodsb al, byte ptr [rsi] ; loop 0x4c4e73 ; retf
0x0000000000435cc0 : lodsb al, byte ptr [rsi] ; movabs byte ptr [0x8d49931463490007], al ; adc al, 0x13 ; jmp rdx
0x00000000004ce2e8 : lodsb al, byte ptr [rsi] ; movsxd rax, dword ptr [rax] ; add byte ptr [rbx], dh ; clc ; call qword ptr [rcx]
0x000000000042b744 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004035b3 : lodsb al, byte ptr [rsi] ; or al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000004c5c5d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004cc294 : lodsb al, byte ptr [rsi] ; ret 0xfff7
0x00000000004c34db : lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x000000000048cb3c : lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000462c3f : lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x000000000044fb0d : lodsd eax, dword ptr [rsi] ; add rsp, 0x1d0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049618b : lodsd eax, dword ptr [rsi] ; enter -0x76b4, 7 ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00000000004c5285 : lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x000000000041b937 : lodsd eax, dword ptr [rsi] ; mov esi, 0xc8bf002b ; or byte ptr [rax], al ; add al, ch ; retf
0x000000000049e3d0 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004033e6 : lodsd eax, dword ptr [rsi] ; or al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000004961c2 : lodsd eax, dword ptr [rsi] ; ret
0x000000000047631f : lodsd eax, dword ptr [rsi] ; ret 0xfffa
0x000000000048cb3b : lodsq rax, qword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041338d : loop 0x41338f ; add rdx, rcx ; jmp 0x4133a5
0x0000000000422d4e : loop 0x422da1 ; mov esi, ebx ; mov rdi, r13 ; call 0x41ef99
0x000000000042720d : loop 0x427245 ; shr byte ptr [rcx], 0xc8 ; ret
0x0000000000431b36 : loop 0x431b4a ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000435e1a : loop 0x435e15 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435e19 : loop 0x435e16 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043893a : loop 0x438935 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000438939 : loop 0x438936 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000044948f : loop 0x4494a9 ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x000000000044ab57 : loop 0x44aba5 ; mov eax, eax ; mov rsi, rbp ; mov edi, ebx ; xor eax, eax ; syscall
0x000000000044b855 : loop 0x44b8af ; mov esi, ebp ; mov rdi, rbp ; mov eax, 9 ; syscall
0x000000000044dad3 : loop 0x44db26 ; mov dword ptr [rax + 0x20], ecx ; mov byte ptr [rax + 0x28], 1 ; ret
0x00000000004568bd : loop 0x456852 ; push rax ; add al, 0xe9 ; cmp eax, 0x89fffff3 ; retf 0xe283
0x000000000046a891 : loop 0x46a8a1 ; lea rcx, [rbx + rdx] ; add rdx, r12 ; call qword ptr [r10 + rax*8]
0x000000000046a899 : loop 0x46a8e0 ; call qword ptr [rdx + rax*8]
0x00000000004727d6 : loop 0x4727dc ; dec dword ptr [rax - 0x39] ; ret
0x000000000047c8da : loop 0x47c8f1 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000047c8da : loop 0x47c8f2 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000047fb8e : loop 0x47fb56 ; add dword ptr [rax + rax], edx ; mov eax, ecx ; syscall
0x00000000004a2ac1 : loop 0x4a2acc ; add rdx, rax ; jmp 0x4a2ad5
0x00000000004a89b9 : loop 0x4a8a08 ; add esp, 0x18 ; ret
0x00000000004b0a35 : loop 0x4b0a31 ; jmp qword ptr [rax]
0x00000000004c4ea7 : loop 0x4c4e72 ; retf
0x00000000004c5ffa : loop 0x4c604f ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004ce4b1 : loop 0x4ce4b2 ; call rdx
0x00000000004cec65 : loop 0x4cec62 ; jmp qword ptr [rax]
0x00000000004cec64 : loop 0x4cec63 ; jmp qword ptr [rax]
0x0000000000431bd4 : loope 0x431be8 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000431c86 : loope 0x431c9a ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000435d8a : loope 0x435d85 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435d89 : loope 0x435d86 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004388aa : loope 0x4388a5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004388a9 : loope 0x4388a6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000044601b : loope 0x446025 ; add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x0000000000449a0e : loope 0x449a05 ; ret
0x000000000044fb2e : loope 0x44fb3b ; pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x000000000047eb5e : loope 0x47eb73 ; je 0x47eb84 ; ret
0x0000000000486d2b : loope 0x486d31 ; dec dword ptr [rcx - 0x77] ; ret
0x000000000048a039 : loope 0x48a064 ; add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000496057 : loope 0x4960a9 ; mov dword ptr [rdi], ecx ; ret
0x0000000000496088 : loope 0x4960db ; mov dword ptr [rdi - 8], ecx ; ret
0x00000000004960fd : loope 0x496150 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x00000000004a6266 : loope 0x4a6271 ; jg 0x4a6274 ; add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x00000000004ab9e6 : loope 0x4aba45 ; ret
0x00000000004ac6ae : loope 0x4ac710 ; pop rbp ; pop r12 ; ret
0x00000000004ae160 : loope 0x4ae1b6 ; cmc ; call rsp
0x00000000004bf8e4 : loope 0x4bf912 ; sti ; jmp rcx
0x00000000004bf8e8 : loope 0x4bf916 ; sti ; jmp rcx
0x00000000004bf964 : loope 0x4bf992 ; sti ; jmp rcx
0x00000000004bf968 : loope 0x4bf996 ; sti ; jmp rcx
0x00000000004c4fb1 : loope 0x4c5033 ; pop rdx ; leave ; retf
0x00000000004cfb31 : loope 0x4cfb2f ; jmp qword ptr [rbx]
0x00000000004012c7 : loopne 0x40125c ; push rbp ; cld ; mov dword ptr [rax], edx ; nop ; leave ; ret
0x00000000004012c6 : loopne 0x40125d ; push rbp ; cld ; mov dword ptr [rax], edx ; nop ; leave ; ret
0x00000000004071f0 : loopne 0x407258 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040ee98 : loopne 0x40eea6 ; add byte ptr [rax], al ; movaps xmmword ptr [rsp + 0xf0], xmm0 ; syscall
0x0000000000410ce7 : loopne 0x410d4d ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000410ce6 : loopne 0x410d4e ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000412955 : loopne 0x4129c9 ; nop dword ptr cs:[rax + rax] ; pop rbx ; ret
0x0000000000413bc3 : loopne 0x413c00 ; sub al, 0 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000415179 : loopne 0x4151e1 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000418182 : loopne 0x4181ea ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041a308 : loopne 0x41a316 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041dc9c : loopne 0x41dcb0 ; xchg eax, esp ; ret 0x3de9
0x000000000041f060 : loopne 0x41f0c8 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041f940 : loopne 0x41f9a8 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000420320 : loopne 0x420388 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042361f : loopne 0x423685 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000042f141 : loopne 0x42f158 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f140 : loopne 0x42f159 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f291 : loopne 0x42f2a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f290 : loopne 0x42f2a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f3e1 : loopne 0x42f3f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f3e0 : loopne 0x42f3f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f531 : loopne 0x42f548 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f530 : loopne 0x42f549 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f681 : loopne 0x42f698 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f680 : loopne 0x42f699 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f7d1 : loopne 0x42f7e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f7d0 : loopne 0x42f7e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f921 : loopne 0x42f938 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f920 : loopne 0x42f939 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042fa6f : loopne 0x42fa86 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042fa6e : loopne 0x42fa87 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042fbc1 : loopne 0x42fbd8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042fbc0 : loopne 0x42fbd9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042fd11 : loopne 0x42fd28 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042fd10 : loopne 0x42fd29 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042fe61 : loopne 0x42fe78 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042fe60 : loopne 0x42fe79 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ffb1 : loopne 0x42ffc8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ffb0 : loopne 0x42ffc9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430101 : loopne 0x430118 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430100 : loopne 0x430119 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430251 : loopne 0x430268 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430250 : loopne 0x430269 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004303a1 : loopne 0x4303b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004303a0 : loopne 0x4303b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431b11 : loopne 0x431b28 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431b10 : loopne 0x431b29 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431c61 : loopne 0x431c78 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431c60 : loopne 0x431c79 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431d24 : loopne 0x431d38 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000431db1 : loopne 0x431dc8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431db0 : loopne 0x431dc9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431f01 : loopne 0x431f18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431f00 : loopne 0x431f19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000432051 : loopne 0x432068 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000432050 : loopne 0x432069 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004321a1 : loopne 0x4321b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004321a0 : loopne 0x4321b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004322f1 : loopne 0x432308 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004322f0 : loopne 0x432309 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000043243f : loopne 0x432456 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000043243e : loopne 0x432457 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000432591 : loopne 0x4325a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000432590 : loopne 0x4325a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004326e1 : loopne 0x4326f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004326e0 : loopne 0x4326f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000432831 : loopne 0x432848 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000432830 : loopne 0x432849 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000432981 : loopne 0x432998 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000432980 : loopne 0x432999 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000432ad1 : loopne 0x432ae8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000432ad0 : loopne 0x432ae9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000432c21 : loopne 0x432c38 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000432c20 : loopne 0x432c39 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000432d71 : loopne 0x432d88 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000432d70 : loopne 0x432d89 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000441c8d : loopne 0x441d00 ; pmovmskb edx, mm4 ; test edx, edx ; je 0x441ca5 ; bsf eax, edx ; ret
0x0000000000441c8d : loopne 0x441d01 ; pmovmskb edx, mm4 ; test edx, edx ; je 0x441ca6 ; bsf eax, edx ; ret
0x0000000000447fc3 : loopne 0x447f93 ; vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000448310 : loopne 0x44832c ; adc dword ptr [rdi + rdx - 0x30], esi ; movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x00000000004483c9 : loopne 0x448419 ; movups xmmword ptr [rcx - 0x30], xmm0 ; movups xmmword ptr [r11], xmm4 ; ret
0x00000000004484b7 : loopne 0x448507 ; movups xmmword ptr [rcx - 0x30], xmm0 ; movups xmmword ptr [r11], xmm4 ; ret
0x00000000004493fd : loopne 0x449417 ; movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x000000000044cf16 : loopne 0x44cf7e ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000044d8e8 : loopne 0x44d8fd ; cmp eax, 4 ; je 0x44d8f7 ; ret
0x000000000044fb32 : loopne 0x44fb95 ; pop r12 ; ret
0x00000000004568cd : loopne 0x456948 ; jae 0x45685e ; retf 0xb941
0x000000000045b8dc : loopne 0x45b8e9 ; add byte ptr [rax], al ; movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x000000000045eefc : loopne 0x45ef19 ; cli ; dec dword ptr [rax + 0x29] ; ret
0x00000000004615c9 : loopne 0x4615db ; mov dword ptr [rcx + rax], esi ; jmp 0x45f829
0x00000000004650bf : loopne 0x46504c ; ret
0x000000000046f22a : loopne 0x46f230 ; dec dword ptr [rcx + 0x63] ; ret
0x00000000004789b9 : loopne 0x478a1d ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000479195 : loopne 0x4791f9 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047b452 : loopne 0x47b4ba ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000047f768 : loopne 0x47f7d0 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000482a36 : loopne 0x482a9e ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000495a2d : loopne 0x495a36 ; sub eax, 1 ; ret
0x00000000004a6706 : loopne 0x4a670c ; mov r8, qword ptr [rax] ; lea rax, [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x00000000004a8acc : loopne 0x4a8ada ; mov dword ptr [rsi], eax ; mov rax, qword ptr [rdi + 0x98] ; ret
0x00000000004a9726 : loopne 0x4a972c ; mov r8, qword ptr [rax] ; lea rax, [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x00000000004ab326 : loopne 0x4ab32c ; mov r8, qword ptr [rax] ; lea rax, [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x00000000004af9b8 : loopne 0x4afa3c ; idiv edi ; add byte ptr [rbp - 9], bh ; jmp qword ptr [rax]
0x00000000004afd44 : loopne 0x4afd49 ; idiv edi ; xor dl, bh ; idiv edi ; cmp bl, 0xf7 ; call rax
0x00000000004b09c0 : loopne 0x4b0974 ; clc ; push rax ; test eax, 0xac00fff8 ; clc ; call qword ptr [rax]
0x00000000004b0ab8 : loopne 0x4b0b0e ; stc ; push rax ; stc ; inc dword ptr [rax] ; stc ; call qword ptr [rax]
0x00000000004b0b4c : loopne 0x4b0ba8 ; stc ; push rax ; stc ; inc dword ptr [rax] ; push rax ; stc ; jmp qword ptr [rax]
0x00000000004b0b74 : loopne 0x4b0bcd ; stc ; inc dword ptr [rax] ; push rcx ; stc ; jmp qword ptr [rax]
0x00000000004b0b94 : loopne 0x4b0bee ; stc ; inc dword ptr [rax] ; push rdx ; stc ; jmp qword ptr [rax]
0x00000000004c35d4 : loopne 0x4c35b4 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004c411c : loopne 0x4c4173 ; sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004c531e : loopne 0x4c5393 ; mov bh, 0x38 ; push 0xfd4cbe ; retf 0xf64
0x00000000004ca6e0 : loopne 0x4ca6e2 ; hlt ; call qword ptr [rsi]
0x00000000004cc7d9 : loopne 0x4cc7d4 ; jmp qword ptr [rcx]
0x00000000004d1b1c : loopne 0x4d1ac0 ; add byte ptr [rax], al ; push rax ; cld ; jmp qword ptr [rdx]
0x00000000004c2fea : mov ah, 0x13 ; ret
0x00000000004ad92a : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000004ad08a : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x00000000004ca6f0 : mov ah, 0x27 ; add byte ptr [rax], al ; in al, dx ; std ; hlt ; call qword ptr [rsi]
0x00000000004cdff0 : mov ah, 0x60 ; add byte ptr [rax], al ; sbb al, 0xc2 ; clc ; jmp rax
0x000000000044b75d : mov ah, 0x66 ; nop ; mov eax, 0x10 ; syscall
0x00000000004b0100 : mov ah, 0x6a ; clc ; inc dword ptr [rdx + rbp*2 - 8] ; call rsp
0x00000000004b05f8 : mov ah, 0x91 ; clc ; inc dword ptr [rcx + rdx*4 - 8] ; call rsp
0x00000000004b1218 : mov ah, 0x95 ; stc ; lcall [rax + 0x6afff996] ; xchg eax, esi ; stc ; jmp qword ptr [rdx]
0x00000000004b12a8 : mov ah, 0x95 ; stc ; push qword ptr [rbp + rdx*4 - 0x6a050007] ; stc ; jmp rsi
0x0000000000480668 : mov ah, 0xa4 ; cld ; dec dword ptr [rax + 0x39] ; ret
0x00000000004c3490 : mov ah, 0xa5 ; ret
0x00000000004b09d9 : mov ah, 0xf8 ; jmp rax
0x00000000004d1ce1 : mov ah, 0xfc ; call qword ptr [rax]
0x000000000047dd87 : mov ah, 0xfc ; dec dword ptr [rax + 0xf] ; ret 0x90c3
0x00000000004c81f0 : mov ah, 2 ; add byte ptr [rax], al ; jno 0x4c818c ; call qword ptr [rbx]
0x0000000000434a97 : mov ah, 7 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004c2de4 : mov ah, bl ; push rsi ; ret
0x000000000042b4e0 : mov ah, byte ptr [rsi + 0xf] ; je 0x42b4b0 ; lea r10, [r10 + r9] ; jmp r10
0x000000000043e300 : mov ah, byte ptr [rsi + 0xf] ; je 0x43e2d0 ; lea r10, [r10 + r9] ; jmp r10
0x000000000049d210 : mov ah, byte ptr [rsi + 0xf] ; je 0x49d1e0 ; lea r10, [r10 + r9] ; jmp r10
0x00000000004a6806 : mov al, 0 ; add byte ptr [rax], al ; ret
0x0000000000459374 : mov al, 0 ; add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x00000000004afdcc : mov al, 0x3f ; clc ; inc dword ptr [rax + 0x32] ; clc ; inc dword ptr [rax] ; xor al, 0xf8 ; jmp rax
0x00000000004b0aec : mov al, 0x4a ; stc ; inc eax ; stc ; call rax
0x00000000004b0b14 : mov al, 0x4b ; stc ; call rax
0x00000000004cd810 : mov al, 0x4d ; clc ; call qword ptr [rax]
0x00000000004b0b44 : mov al, 0x4f ; stc ; call rax
0x00000000004c0d74 : mov al, 0x5a ; cld ; lcall [rax + 0x57] ; cld ; lcall [rax + 0x57] ; cld ; jmp qword ptr [rbx]
0x00000000004cdaec : mov al, 0x5b ; add byte ptr [rax], al ; jo 0x4cdb67 ; clc ; call qword ptr [rdi]
0x00000000004b03a4 : mov al, 0x5c ; clc ; jmp qword ptr [rax]
0x00000000004b03dc : mov al, 0x5d ; clc ; push qword ptr [rax] ; pop rbp ; clc ; jmp qword ptr [rax + 0x10fff85c]
0x00000000004b01b8 : mov al, 0x62 ; clc ; jmp qword ptr [rax]
0x00000000004b01a4 : mov al, 0x66 ; clc ; inc dword ptr [rax + 0x66] ; clc ; call rax
0x00000000004aff8c : mov al, 0x69 ; clc ; inc dword ptr [rax + 0x69] ; clc ; call rax
0x00000000004b08ac : mov al, 0x81 ; clc ; inc dword ptr [rax - 0x7f] ; clc ; jmp rax
0x00000000004b069c : mov al, 0x8d ; clc ; inc dword ptr [rax - 0x73] ; clc ; call rax
0x00000000004b0484 : mov al, 0x90 ; clc ; inc dword ptr [rax - 0x70] ; clc ; call rax
0x0000000000441a3f : mov al, 0xc5 ; std ; xlatb ; ret
0x00000000004a90af : mov al, 0xe8 ; retf
0x00000000004c5296 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x000000000040598f : mov al, 0xf ; retf
0x00000000004cffa0 : mov al, 0xf8 ; cli ; jmp qword ptr [rcx]
0x00000000004b09d1 : mov al, 0xf8 ; push qword ptr [rax] ; mov dl, 0xf8 ; inc dword ptr [rax - 0x4c] ; clc ; jmp rax
0x00000000004a29b6 : mov al, 0xfa ; inc edi ; sbb byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000445a44 : mov al, 6 ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000434f17 : mov al, 7 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004cd080 : mov al, 8 ; clc ; call qword ptr [rdx]
0x00000000004b073d : mov al, bh ; call qword ptr [rdx + 0x12fff887]
0x00000000004b0739 : mov al, bh ; call qword ptr [rdx]
0x00000000004b08b9 : mov al, bh ; call rax
0x00000000004b0879 : mov al, bh ; jmp rax
0x00000000004b0875 : mov al, bh ; push qword ptr [rax - 0x78] ; clc ; jmp rax
0x000000000041fff9 : mov al, byte ptr [rax + 2] ; add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x0000000000478dd2 : mov al, byte ptr [rax] ; add byte ptr [rax], al ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00000000004650cb : mov al, byte ptr [rbx - 0x76ffffe6] ; ret 0xc389
0x0000000000444fc6 : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; lea rax, [rdx + 2] ; ret
0x0000000000443816 : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000444ff4 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; lea rax, [rdx + 4] ; ret
0x0000000000443834 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000444fa0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x00000000004437f0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000042d2d0 : mov al, byte ptr [rdi + rdx - 1] ; mov cl, byte ptr [rsi + rdx - 1] ; sub eax, ecx ; ret
0x00000000004379f7 : mov al, byte ptr [rdi] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000403e0c : mov al, ch ; ret
0x0000000000404718 : mov al, ch ; ret 0x57e
0x000000000043fe90 : mov al, ch ; stc ; je 0x43fe60 ; lea r10, [r10 + r9] ; jmp r10
0x000000000049f1c0 : mov al, ch ; stc ; je 0x49f190 ; lea r10, [r10 + r9] ; jmp r10
0x0000000000445004 : mov ax, word ptr [rcx + 4] ; mov word ptr [rdx + 4], ax ; lea rax, [rdx + 5] ; ret
0x0000000000443844 : mov ax, word ptr [rcx + 4] ; mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x0000000000444fb0 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x0000000000443800 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000436b51 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000041c10f : mov bh, 0x2b ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004482b2 : mov bh, 0x36 ; mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x00000000004c5320 : mov bh, 0x38 ; push 0xfd4cbe ; retf 0xf64
0x00000000004599d4 : mov bh, 0x43 ; add al, 0x89 ; retf
0x000000000045954f : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x0000000000445eb8 : mov bh, 0x48 ; lea eax, [rdi + 7] ; ret
0x00000000004c55f8 : mov bh, 0x4e ; retf 0x9d7d
0x00000000004c42c4 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x00000000004c21d7 : mov bh, 0xb8 ; mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x0000000000401875 : mov bh, 0xc0 ; add al, 0 ; leave ; ret
0x00000000004c21e6 : mov bh, 0xc8 ; leave ; retf 0xcccb
0x000000000048972d : mov bh, 0xd ; and eax, 0x6894800 ; ret
0x0000000000414689 : mov bh, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0x8c20
0x0000000000425935 : mov bh, 0xe7 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000004d1291 : mov bh, 0xfb ; call qword ptr [rax]
0x00000000004d12a5 : mov bh, 0xfb ; call qword ptr [rdx]
0x000000000041ed93 : mov bh, 0xff ; dec dword ptr [rax + 0x39] ; retf 0x2a74
0x0000000000445326 : mov bh, 6 ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000004c59d3 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000434797 : mov bh, 7 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004cd6d8 : mov bh, ah ; std ; jmp qword ptr [rdx]
0x00000000004b2ec9 : mov bh, dl ; jmp rax
0x00000000004b2ec5 : mov bh, dl ; push qword ptr [rax] ; mov bh, dl ; jmp rax
0x00000000004477ae : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004c565b : mov bl, 0x29 ; retf 0xbf4b
0x000000000047e95c : mov bl, 0x48 ; mov eax, edx ; ret
0x000000000045bde2 : mov bl, 0x4c ; add edi, ebx ; jmp rdi
0x0000000000400b28 : mov bl, 0x87 ; sub eax, 0xc35d0100 ; nop ; ret
0x00000000004b0c74 : mov bl, 0x88 ; stc ; ljmp [rax + rcx*4 - 0x77760007] ; stc ; call rsi
0x00000000004c53a3 : mov bl, 0x8e ; ret 0xdcd9
0x0000000000416e23 : mov bl, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0x8c20
0x00000000004c5640 : mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x0000000000485483 : mov bl, 3 ; add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x0000000000434c17 : mov bl, 7 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004244e1 : mov bl, 8 ; add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x00000000004c2fc1 : mov bx, 0xf32d ; retf
0x000000000048b350 : mov byte ptr [r8 + 0x15], r15b ; syscall
0x000000000044fdea : mov byte ptr [r8 - 0x7d], r9b ; ret 0x4830
0x000000000048b351 : mov byte ptr [rax + 0x15], bh ; syscall
0x000000000044daaa : mov byte ptr [rax + 0x28], 1 ; ret
0x0000000000400bc3 : mov byte ptr [rax + 8], 1 ; mov rax, qword ptr [rbp - 8] ; leave ; ret
0x00000000004be46c : mov byte ptr [rax + rax], 0 ; enter 4, 0 ; retf 4
0x00000000004525c3 : mov byte ptr [rax - 0x7c], 0xf6 ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000044fdeb : mov byte ptr [rax - 0x7d], cl ; ret 0x4830
0x000000000044c936 : mov byte ptr [rax], 0xa ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044d64f : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004020b4 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004cbfc4 : mov byte ptr [rax], al ; add byte ptr [rax], ch ; and dh, bh ; call qword ptr [rax]
0x0000000000470370 : mov byte ptr [rax], bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000470371 : mov byte ptr [rax], ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004788a7 : mov byte ptr [rcx + 0xf], 0x4f ; ret
0x000000000045b8e3 : mov byte ptr [rcx + rax - 0x3a], cl ; jmp rsi
0x00000000004a66c4 : mov byte ptr [rcx + rax - 0x40], cl ; jmp rax
0x00000000004070bf : mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048b1c5 : mov byte ptr [rcx], 0x84 ; sal byte ptr [rbp - 0x31], cl ; movsx eax, cl ; neg eax ; ret
0x000000000045f0c4 : mov byte ptr [rcx], ah ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004a8766 : mov byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000460463 : mov byte ptr [rcx], cl ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000445c08 : mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x0000000000445578 : mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000445c7e : mov byte ptr [rdi + 0x14], dh ; lea rax, [rdi + 0x14] ; ret
0x00000000004455ce : mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000445d00 : mov byte ptr [rdi + 0x18], dh ; lea rax, [rdi + 0x18] ; ret
0x0000000000445650 : mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000445ab6 : mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x0000000000445496 : mov byte ptr [rdi + 2], dh ; ret
0x0000000000445ad2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x00000000004454b2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000445b23 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x00000000004454f3 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000004c5655 : mov byte ptr [rdi - 0x17ac8d3c], al ; mov bl, 0x29 ; retf 0xbf4b
0x000000000043076b : mov byte ptr [rdi - 1], dl ; ret
0x0000000000413c70 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x0000000000437b77 : mov byte ptr [rdi], al ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004ccf68 : mov byte ptr [rdi], al ; clc ; call qword ptr [rcx]
0x0000000000439892 : mov byte ptr [rdi], cl ; ret
0x0000000000449175 : mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000445a90 : mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x0000000000445470 : mov byte ptr [rdi], dh ; ret
0x0000000000436bc3 : mov byte ptr [rdi], dl ; ret
0x0000000000444fc9 : mov byte ptr [rdx + 2], al ; lea rax, [rdx + 2] ; ret
0x0000000000443819 : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000444ff7 : mov byte ptr [rdx + 4], al ; lea rax, [rdx + 4] ; ret
0x0000000000443837 : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000004472eb : mov byte ptr [rdx + rdx*8 + 0xac840f], 0 ; add dh, dh ; ret 0x7501
0x0000000000444fa2 : mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x00000000004437f2 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000472157 : mov byte ptr [rdx], ch ; jne 0x4720f9 ; mov rdx, rax ; jmp 0x472113
0x0000000000472156 : mov byte ptr [rdx], r13b ; jne 0x4720fa ; mov rdx, rax ; jmp 0x472114
0x00000000004a7230 : mov byte ptr [rip + 0x2330b9], 8 ; ret
0x0000000000400b26 : mov byte ptr [rip + 0x2d87b3], 1 ; pop rbp ; ret
0x0000000000456347 : mov byte ptr [rip + 0x358d4800], 0xc9 ; ret
0x000000000043f756 : mov byte ptr [rip - 0x7cb80000], 0xc2 ; adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000041ef49 : mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x0000000000497aef : mov byte ptr [rsi], al ; jne 0x497adf ; mov rax, rsi ; ret
0x0000000000497b73 : mov byte ptr [rsi], al ; jne 0x497b57 ; mov rax, rsi ; ret
0x00000000004a0c59 : mov byte ptr [rsp + rbx*8 - 0xd], dh ; ret
0x00000000004c2de2 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x00000000004c4123 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000410662 : mov ch, 0x41 ; mov ebx, 1 ; jmp 0x410635
0x000000000045ea7a : mov ch, 0x41 ; mov ebx, 1 ; jmp 0x45ea4d
0x00000000004c4db6 : mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004c54bf : mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004c5e6a : mov ch, 0xab ; ret
0x00000000004c34d3 : mov ch, 0xb2 ; xchg eax, edi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4c34a5 ; mov ecx, 0x5b92ac50 ; retf
0x000000000047b3e7 : mov ch, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0x8c20
0x00000000004afa61 : mov ch, 0xf7 ; call rax
0x00000000004a354f : mov ch, 0xff ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004aaf87 : mov ch, 0xff ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a36dc : mov ch, 0xff ; nop ; add rsp, 8 ; ret
0x000000000042e486 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000047eb70 : mov ch, dh ; and ch, 0xf ; je 0x47eb9b ; add rax, 2 ; ret
0x00000000004d304d : mov cl, 0 ; add byte ptr [rax], dh ; xchg ch, bh ; jmp qword ptr [rax]
0x0000000000404eb7 : mov cl, 0x35 ; ret
0x00000000004c58c1 : mov cl, 0x3f ; retf
0x0000000000452ceb : mov cl, 0xf ; retf 0xd285
0x0000000000425351 : mov cl, 0xfd ; dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x0000000000445946 : mov cl, 6 ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000434d97 : mov cl, 7 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004b0c39 : mov cl, bh ; call rax
0x00000000004b0c7d : mov cl, bh ; call rsi
0x00000000004b0c31 : mov cl, bh ; inc dword ptr [rax - 0x67000678] ; mov cl, bh ; call rax
0x00000000004b0c75 : mov cl, bh ; ljmp [rax + rcx*4 - 0x77760007] ; stc ; call rsi
0x000000000045c4e7 : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x000000000043c075 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x0000000000425bb4 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x00000000004c5292 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000042d2d4 : mov cl, byte ptr [rsi + rdx - 1] ; sub eax, ecx ; ret
0x0000000000439890 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000047eb5b : mov cl, dl ; and cl, 0xf ; je 0x47eb87 ; ret
0x00000000004c554c : mov cs, edi ; ret 0x8b36
0x000000000048cbfd : mov cs, esi ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x0000000000469b52 : mov cs, word ptr [rdx - 0x77000000] ; ror byte ptr [rcx - 0x77], cl ; ret
0x00000000004405fe : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x000000000043987e : mov cx, word ptr [rcx - 2] ; mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x0000000000445584 : mov cx, word ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000430bb4 : mov cx, word ptr [rsi - 2] ; mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000436ae4 : mov cx, word ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000445490 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000497c1a : mov dh, 0 ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000000004a98ef : mov dh, 0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000417a32 : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000413f1f : mov dh, 0 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000419ac0 : mov dh, 0 ; ret
0x0000000000413435 : mov dh, 0x10 ; mov eax, edx ; pop rbx ; ret
0x0000000000424121 : mov dh, 0x14 ; add dword ptr [rax + rdi - 0x3e], eax ; jne 0x42411c ; sub rax, 0x10 ; ret
0x0000000000436bc1 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000042ce24 : mov dh, 0x16 ; sub eax, edx ; ret
0x000000000040ee04 : mov dh, 0x17 ; test dl, dl ; jne 0x40edea ; ret
0x000000000046812e : mov dh, 0x34 ; add dword ptr [rbp - 0x41f040be], ecx ; retf 0x53c
0x000000000041827d : mov dh, 0x3c ; adc byte ptr [rax - 0x78], al ; jl 0x4182a3 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004582e8 : mov dh, 0x40 ; add cl, byte ptr [rax - 0x73] ; add rcx, qword ptr [rax + 0x39] ; retf
0x00000000004788bc : mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x00000000004582fe : mov dh, 0x40 ; add ecx, dword ptr [rax + 0x39] ; retf
0x000000000040ed29 : mov dh, 0x40 ; or dword ptr [rax + rax*8 - 0x38b79f8c], eax ; ret 0xfff0
0x0000000000458312 : mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000046af7b : mov dh, 0x46 ; or al, 0x83 ; ret
0x0000000000447381 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000447371 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000447341 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000447361 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000447351 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000045fb59 : mov dh, 0x47 ; or al, 0x83 ; ret
0x00000000004a3987 : mov dh, 0x49 ; add al, 0x89 ; retf 0xeac0
0x00000000004ac816 : mov dh, 0x4b ; idiv edi ; ret
0x0000000000455d1d : mov dh, 0x4e ; add dword ptr [rcx - 0x77], eax ; retf
0x0000000000455d5e : mov dh, 0x4e ; add eax, dword ptr [rcx - 0x77] ; retf
0x00000000004c4282 : mov dh, 0x4e ; ret 0x474c
0x00000000004c4410 : mov dh, 0x53 ; jrcxz 0x4c4492 ; and ebx, dword ptr [rbx] ; xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x0000000000447385 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x0000000000447375 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x0000000000447345 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x0000000000447355 : mov dh, 0x56 ; sub eax, edx ; ret
0x000000000048f0f4 : mov dh, 0x5d ; add byte ptr [rbp - 0x57f2fad], cl ; or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x8348
0x00000000004259f6 : mov dh, 0x66 ; add dword ptr [rax], eax ; and ch, 2 ; cmovne rax, rdx ; ret
0x0000000000464de8 : mov dh, 0x67 ; or al, 0x89 ; ret 0xc689
0x00000000004affd4 : mov dh, 0x68 ; clc ; inc dword ptr [rsi + 0x68] ; clc ; call rsi
0x000000000040725a : mov dh, 0x73 ; add dword ptr [rax - 0x77], ecx ; ret
0x00000000004101c4 : mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000456e26 : mov dh, 0x78 ; add cl, byte ptr [rax + 0x39] ; retf
0x00000000004a7621 : mov dh, 0x78 ; add cl, byte ptr [rax - 0x7d] ; rol byte ptr [rdx], 0xe9 ; retf 0xfffc
0x0000000000456e11 : mov dh, 0x78 ; add dword ptr [rax + 0x39], ecx ; retf
0x0000000000456e3b : mov dh, 0x78 ; add ecx, dword ptr [rax + 0x39] ; retf
0x0000000000457164 : mov dh, 0x7a ; add cl, byte ptr [rax - 0x73] ; add rcx, qword ptr [rax + 0x39] ; retf
0x0000000000482fef : mov dh, 0x87 ; adc eax, 0x89000003 ; ret 0xe8c0
0x00000000004b04cc : mov dh, 0x8f ; clc ; inc dword ptr [rsi - 0x71] ; clc ; call rsi
0x00000000004c21d6 : mov dh, 0xb7 ; mov eax, 0xbcbbbab9 ; mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x000000000047fb62 : mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x000000000046b16d : mov dh, 0xc0 ; mov dword ptr [rbp - 0x910], esi ; jmp qword ptr [rdx + rax*8]
0x00000000004a7936 : mov dh, 0xc0 ; movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x0000000000470699 : mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000478638 : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000004a3c8d : mov dh, 0xc0 ; neg eax ; ret
0x000000000049803a : mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042ce44 : mov dh, 0xc0 ; sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00000000004502c1 : mov dh, 0xc0 ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x0000000000449461 : mov dh, 0xc1 ; pop rbx ; ret
0x0000000000416832 : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000456346 : mov dh, 0xc6 ; add eax, 0x358d4800 ; leave ; ret
0x0000000000448f35 : mov dh, 0xc6 ; mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000004525c2 : mov dh, 0xc6 ; test sil, sil ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x00000000004c54c4 : mov dh, 0xc7 ; ret 0xe71f
0x00000000004a66bf : mov dh, 0xc9 ; movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x000000000042ce4a : mov dh, 0xd2 ; sub eax, edx ; ret
0x00000000004a7e6f : mov dh, 0xdb ; movsxd rax, dword ptr [r9 + r11*4] ; add rax, r9 ; jmp rax
0x00000000004c5ff7 : mov dh, 0xdd ; in eax, 0xe2 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000448289 : mov dh, 0xe ; mov byte ptr [rdi], cl ; ret
0x0000000000426f61 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042d2e4 : mov dh, 0xe ; sub eax, ecx ; ret
0x0000000000470f57 : mov dh, 0xe4 ; movsxd rax, dword ptr [rdx + r12*4] ; add rax, rdx ; jmp rax
0x000000000041a9d2 : mov dh, 0xf4 ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040e865 : mov dh, 0xfa ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x0000000000417a41 : mov dh, 2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000413f31 : mov dh, 2 ; ret
0x00000000004453c0 : mov dh, 6 ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000434917 : mov dh, 7 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000042d2e1 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042ce21 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000426f64 : mov dh, 7 ; sub eax, ecx ; ret
0x00000000004ce5d8 : mov dh, bh ; clc ; call qword ptr [rbx]
0x0000000000449a0c : mov dh, byte ptr [rcx - 0xd] ; ret
0x00000000004b0030 : mov dl, 0x65 ; clc ; jmp qword ptr [rdx]
0x00000000004b0038 : mov dl, 0x6b ; clc ; inc dword ptr [rdx + 0x6b] ; clc ; call rdx
0x00000000004c34d4 : mov dl, 0x97 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4c34a4 ; mov ecx, 0x5b92ac50 ; retf
0x00000000004c96b5 : mov dl, 0xf4 ; call qword ptr [rax]
0x00000000004b09d5 : mov dl, 0xf8 ; inc dword ptr [rax - 0x4c] ; clc ; jmp rax
0x00000000004a2f8d : mov dl, 2 ; add byte ptr [rax], al ; call 0x402e1c
0x0000000000419a7e : mov dl, 3 ; sub al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004307f0 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000463f4d : mov ds, word ptr [rax + rax + 0x63490000] ; ret 0x8944
0x00000000004c58de : mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x0000000000439886 : mov dword ptr [r9 - 2], ecx ; ret
0x0000000000439871 : mov dword ptr [r9 - 4], ecx ; ret
0x0000000000401ee4 : mov dword ptr [rax + 0x10], 0xffffffff ; nop ; leave ; ret
0x000000000044da41 : mov dword ptr [rax + 0x10], ecx ; mov qword ptr [rax + 8], rdx ; ret
0x000000000047aa29 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000047aa69 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000401ccf : mov dword ptr [rax + 0x18], 0 ; nop ; leave ; ret
0x000000000047ba68 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000044daa7 : mov dword ptr [rax + 0x20], ecx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000044dac1 : mov dword ptr [rax + 0x20], esi ; ret
0x000000000047ba64 : mov dword ptr [rax + 0x28], edx ; mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000047b95e : mov dword ptr [rax + 0x38], esp ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047aa2d : mov dword ptr [rax + 0x40], ecx ; ret
0x000000000047baea : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x00000000004524ff : mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000452502 : mov dword ptr [rax + 0x54], edx ; ret
0x0000000000418755 : mov dword ptr [rax + 8], 0 ; ret
0x000000000041b000 : mov dword ptr [rax + 8], ebx ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000401369 : mov dword ptr [rax + 8], edx ; nop ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000044da45 : mov dword ptr [rax + 8], edx ; ret
0x000000000047440c : mov dword ptr [rax], 0x16 ; jmp 0x4706b9
0x000000000044a900 : mov dword ptr [rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000004679fd : mov dword ptr [rax], 0x16 ; mov eax, edx ; ret
0x0000000000410552 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x000000000047478d : mov dword ptr [rax], 0xc ; jmp 0x470a00
0x000000000047fc80 : mov dword ptr [rax], 0xc ; mov eax, 0xffffffff ; ret
0x000000000041ef7a : mov dword ptr [rax], 0xc ; mov rax, rsi ; ret
0x000000000047c6a4 : mov dword ptr [rax], 0xc ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412df5 : mov dword ptr [rax], 9 ; mov eax, 0xffffffff ; ret
0x00000000004981fd : mov dword ptr [rax], edi ; pop rbx ; ret
0x000000000049814d : mov dword ptr [rax], edx ; add rsp, 8 ; ret
0x000000000047af5d : mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047aa26 : mov dword ptr [rax], edx ; mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000047aa66 : mov dword ptr [rax], edx ; mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000041ba82 : mov dword ptr [rax], edx ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000004012cb : mov dword ptr [rax], edx ; nop ; leave ; ret
0x00000000004981f1 : mov dword ptr [rax], edx ; pop rbx ; ret
0x00000000004a8aa2 : mov dword ptr [rax], edx ; ret
0x000000000047bddb : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x0000000000486a01 : mov dword ptr [rbp - 0x100], ebx ; call r10
0x0000000000461997 : mov dword ptr [rbp - 0x4d8], 0 ; jmp rax
0x000000000046361f : mov dword ptr [rbp - 0x4e8], eax ; call 0x4004ec
0x0000000000474705 : mov dword ptr [rbp - 0x60c], eax ; jmp 0x470a00
0x0000000000474733 : mov dword ptr [rbp - 0x60c], edx ; jmp 0x470a00
0x0000000000473ada : mov dword ptr [rbp - 0x638], 0 ; jmp 0x4705a7
0x0000000000477096 : mov dword ptr [rbp - 0x670], eax ; jmp 0x473b2a
0x0000000000475607 : mov dword ptr [rbp - 0x690], eax ; xor eax, eax ; jmp 0x47186e
0x000000000047803e : mov dword ptr [rbp - 0x6d0], edi ; jmp 0x478085
0x000000000047f91b : mov dword ptr [rbp - 0x77], 0xca8948c2 ; mov eax, 0x106 ; syscall
0x000000000048b34f : mov dword ptr [rbp - 0x78], eax ; mov eax, 0x15 ; syscall
0x00000000004040f7 : mov dword ptr [rbp - 0x78], edx ; call 0x420b15
0x000000000046b16f : mov dword ptr [rbp - 0x910], esi ; jmp qword ptr [rdx + rax*8]
0x00000000004873a1 : mov dword ptr [rbp - 0xe0], ebx ; call r10
0x00000000004a427c : mov dword ptr [rbp - 0xf0], ecx ; call 0x4004f0
0x0000000000498520 : mov dword ptr [rbp], eax ; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000419569 : mov dword ptr [rbp], eax ; mov qword ptr [rbx + 0x60], rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047c965 : mov dword ptr [rbp], eax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047d20f : mov dword ptr [rbp], ebp ; xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047c979 : mov dword ptr [rbp], ebx ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045a1d2 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000413d47 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x000000000048bffe : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000041412f : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000489cee : mov dword ptr [rbx + 0x10], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a14d3 : mov dword ptr [rbx + 0x18], 0 ; jmp 0x4a14a7
0x000000000048bf33 : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000004a3cb5 : mov dword ptr [rbx + 0x18], eax ; pop rbx ; ret
0x0000000000489cea : mov dword ptr [rbx + 0x18], esp ; mov qword ptr [rbx + 0x10], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a3d89 : mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x000000000045a2ff : mov dword ptr [rbx + 0x20], edx ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045c77d : mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x0000000000417ded : mov dword ptr [rbx + 0x40], esp ; mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004178d1 : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x000000000047bc9a : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041956d : mov dword ptr [rbx + 0x60], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000415902 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047aab4 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000047b961 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000413ccb : mov dword ptr [rbx + 0x90], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004a868b : mov dword ptr [rbx + 0x98], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000498036 : mov dword ptr [rbx + 4], edx ; movzx eax, al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047c6bc : mov dword ptr [rbx + 8], 0x400 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000489a77 : mov dword ptr [rbx + 8], eax ; jmp 0x489854
0x0000000000413d43 : mov dword ptr [rbx + 8], eax ; mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x000000000041412b : mov dword ptr [rbx + 8], eax ; mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x00000000004897d9 : mov dword ptr [rbx + 8], eax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000417c65 : mov dword ptr [rbx + 8], eax ; movzx eax, byte ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045a1e7 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000047c65f : mov dword ptr [rbx + 8], ebp ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000417d0d : mov dword ptr [rbx + 8], edx ; movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000413431 : mov dword ptr [rbx + 8], edx ; movzx edx, byte ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000045aae0 : mov dword ptr [rbx + rsi*8], esi ; mov rsi, qword ptr [rax + r14*8] ; test rsi, rsi ; je 0x45aafa ; call rsi
0x0000000000450fb3 : mov dword ptr [rbx], 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000463f48 : mov dword ptr [rbx], 0x8e0f0000 ; pushfq ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x00000000004a0f93 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000417d7c : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004a5ce9 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000417df0 : mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000413c45 : mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047ba6b : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000047036e : mov dword ptr [rbx], edx ; mov byte ptr [rax], bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004184b0 : mov dword ptr [rbx], edx ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000413f56 : mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000417862 : mov dword ptr [rbx], edx ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004114d1 : mov dword ptr [rcx + 0x130], edx ; ret
0x000000000040206e : mov dword ptr [rcx + rax*2], 0x72f2a30f ; ret 0xfe83
0x00000000004615cb : mov dword ptr [rcx + rax], esi ; jmp 0x45f827
0x0000000000464a98 : mov dword ptr [rcx + rdx*8], eax ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000452855 : mov dword ptr [rcx - 0x7d], 0x940f07fc ; ret 0x1f0f
0x0000000000439887 : mov dword ptr [rcx - 2], ecx ; ret
0x0000000000439872 : mov dword ptr [rcx - 4], ecx ; ret
0x0000000000439861 : mov dword ptr [rcx - 8], ecx ; ret
0x000000000044af34 : mov dword ptr [rcx], eax ; mov eax, 0xffffffff ; jmp 0x44af07
0x000000000044a85a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000047a661 : mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x000000000041a4b4 : mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x0000000000445c1d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x11] ; ret
0x0000000000445c5b : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x0000000000445cdd : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x17] ; ret
0x0000000000445c7b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; lea rax, [rdi + 0x14] ; ret
0x00000000004455cb : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000445cfd : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; lea rax, [rdi + 0x18] ; ret
0x000000000044564d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000044558d : mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000445d40 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1a] ; ret
0x0000000000445690 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000445d60 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1b] ; ret
0x00000000004456b0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000445d21 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x19] ; ret
0x0000000000445671 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000445d43 : mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1a] ; ret
0x0000000000445693 : mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000004177b3 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000445d25 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x19] ; ret
0x0000000000445d63 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1b] ; ret
0x00000000004177df : mov dword ptr [rdi + 0x18], ecx ; mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000445675 : mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000041a4b1 : mov dword ptr [rdi + 0x24], ebp ; mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x000000000044c933 : mov dword ptr [rdi + 0x28], edx ; mov byte ptr [rax], 0xa ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004859a5 : mov dword ptr [rdi + 0x300], eax ; ret
0x0000000000485977 : mov dword ptr [rdi + 0x308], eax ; ret
0x00000000004177af : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x00000000004177e3 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000004a8ae1 : mov dword ptr [rdi + 0x98], esi ; ret
0x0000000000418592 : mov dword ptr [rdi + 0xa8], 0 ; ret
0x0000000000445c9d : mov dword ptr [rdi + 0xe], ecx ; lea rax, [rdi + 0x15] ; ret
0x00000000004455ed : mov dword ptr [rdi + 0xe], ecx ; ret
0x0000000000445c3b : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x0000000000445cbd : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x16] ; ret
0x00000000004455ab : mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000436a05 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000436848 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000436ae8 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x0000000000436995 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004367d8 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000445b07 : mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x0000000000436925 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000436768 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004454d7 : mov dword ptr [rdi + 3], edx ; ret
0x0000000000445ae9 : mov dword ptr [rdi + 4], edx ; lea rax, [rdi + 5] ; ret
0x00000000004366f8 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004454c9 : mov dword ptr [rdi + 4], edx ; ret
0x0000000000445b9b : mov dword ptr [rdi + 5], edx ; lea rax, [rdi + 0xc] ; ret
0x0000000000436688 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000044553b : mov dword ptr [rdi + 5], edx ; ret
0x0000000000445bbb : mov dword ptr [rdi + 6], edx ; lea rax, [rdi + 0xd] ; ret
0x0000000000436618 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000044554b : mov dword ptr [rdi + 6], edx ; ret
0x0000000000445b59 : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x0000000000445bdb : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xe] ; ret
0x00000000004365a8 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000445519 : mov dword ptr [rdi + 7], edx ; ret
0x0000000000497a3e : mov dword ptr [rdi + 8], eax ; mov eax, 2 ; ret
0x00000000004177b7 : mov dword ptr [rdi + 8], eax ; ret
0x0000000000496208 : mov dword ptr [rdi + 8], eax ; shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000497a83 : mov dword ptr [rdi + 8], ecx ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x0000000000496194 : mov dword ptr [rdi + 8], ecx ; ret
0x0000000000445b79 : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x0000000000445b3b : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 9] ; ret
0x0000000000497770 : mov dword ptr [rdi + 8], edx ; mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000004959a4 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x000000000044550b : mov dword ptr [rdi + 8], edx ; ret
0x000000000049675d : mov dword ptr [rdi + rbx*8 + 8], ecx ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000044901b : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], cx ; ret
0x00000000004491a0 : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], cx ; vzeroupper ; ret
0x00000000004482b5 : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], si ; ret
0x0000000000449013 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000449195 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x00000000004482a5 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000044900b : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rcx ; ret
0x000000000044918a : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x0000000000448297 : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rsi ; ret
0x00000000004a8a8c : mov dword ptr [rdi + rsi*8], edx ; ret
0x00000000004304b5 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004304f3 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004960ff : mov dword ptr [rdi - 0x10], ecx ; ret
0x0000000000430668 : mov dword ptr [rdi - 0x11], ebx ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430764 : mov dword ptr [rdi - 0x11], ebx ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004306b0 : mov dword ptr [rdi - 0x11], ebx ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430838 : mov dword ptr [rdi - 0x12], ebx ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430a18 : mov dword ptr [rdi - 0x13], ebx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430c08 : mov dword ptr [rdi - 0x14], ebx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430dd9 : mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000430fd9 : mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004311d9 : mov dword ptr [rdi - 0x17], ebx ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004304b1 : mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004304ef : mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043083c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000436058 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430a1c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435fd8 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430c0c : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435f58 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430ddd : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435ec9 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000430fdd : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435e39 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004311dd : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435da9 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000430bbd : mov dword ptr [rdi - 2], ecx ; ret
0x00000000004309d5 : mov dword ptr [rdi - 2], edx ; ret
0x0000000000430bb9 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000430f99 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000043066f : mov dword ptr [rdi - 4], edx ; ret
0x0000000000430f96 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431196 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431396 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004960f8 : mov dword ptr [rdi - 8], eax ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000004304b9 : mov dword ptr [rdi - 8], ecx ; ret
0x00000000004304f7 : mov dword ptr [rdi - 8], edx ; ret
0x000000000043066c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430768 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004306b4 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004360d8 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000489728 : mov dword ptr [rdi], eax ; mov rax, qword ptr [rip + 0x250db7] ; mov qword ptr [rsi], rax ; ret
0x0000000000496084 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x000000000049618e : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000046a17a : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000445ad5 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x0000000000445b27 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 8] ; ret
0x0000000000445ab4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x0000000000445494 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000445b05 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x00000000004454d5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x0000000000445b57 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x0000000000445517 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000445b77 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x0000000000445527 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000447fe7 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000445b98 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xc] ; ret
0x0000000000445538 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000445bb8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xd] ; ret
0x0000000000445548 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000445bd8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xe] ; ret
0x0000000000445558 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x0000000000445ae6 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, [rdi + 5] ; ret
0x00000000004454c6 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000445b38 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; lea rax, [rdi + 9] ; ret
0x0000000000445508 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000447ff3 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x00000000004365ac : mov dword ptr [rdi], ecx ; ret
0x000000000044918f : mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x0000000000445aa4 : mov dword ptr [rdi], edx ; lea rax, [rdi + 1] ; ret
0x0000000000445ac2 : mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x0000000000445b14 : mov dword ptr [rdi], edx ; lea rax, [rdi + 7] ; ret
0x00000000004368b4 : mov dword ptr [rdi], edx ; ret
0x000000000043986f : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000497806 : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000043985e : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000439883 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x000000000046a0aa : mov dword ptr [rdi], esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044829c : mov dword ptr [rdi], esi ; ret
0x000000000042f0d2 : mov dword ptr [rdi], esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x0000000000413dc5 : mov dword ptr [rdx + 0x130], edi ; pop rbx ; ret
0x000000000047a65e : mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000445027 : mov dword ptr [rdx + 3], eax ; lea rax, [rdx + 6] ; ret
0x0000000000443857 : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000445009 : mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x0000000000443849 : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000004450bb : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 0xc] ; ret
0x0000000000445039 : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 8] ; ret
0x0000000000443869 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x00000000004450db : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 0xd] ; ret
0x0000000000445059 : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 9] ; ret
0x0000000000443879 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000445079 : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xa] ; ret
0x00000000004450fb : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xe] ; ret
0x0000000000443889 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000046cdd0 : mov dword ptr [rdx + 8], eax ; jmp 0x46cda4
0x0000000000445099 : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xb] ; ret
0x0000000000444f8b : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xf] ; ret
0x00000000004437db : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000004196e0 : mov dword ptr [rdx + 8], eax ; xor eax, eax ; ret
0x00000000004977c7 : mov dword ptr [rdx], 0 ; mov eax, 1 ; ret
0x0000000000497a90 : mov dword ptr [rdx], 0 ; mov eax, 2 ; ret
0x00000000004978bd : mov dword ptr [rdx], 0xffffc002 ; mov eax, 1 ; ret
0x0000000000444fb4 : mov dword ptr [rdx], eax ; lea rax, [rdx + 1] ; ret
0x0000000000444fe2 : mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x0000000000444f34 : mov dword ptr [rdx], eax ; lea rax, [rdx + 7] ; ret
0x0000000000444fc4 : mov dword ptr [rdx], eax ; mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; lea rax, [rdx + 2] ; ret
0x0000000000443814 : mov dword ptr [rdx], eax ; mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000444ff2 : mov dword ptr [rdx], eax ; mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; lea rax, [rdx + 4] ; ret
0x0000000000443832 : mov dword ptr [rdx], eax ; mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000044a8ea : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000497808 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000497a25 : mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x0000000000445022 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; lea rax, [rdx + 6] ; ret
0x0000000000443852 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000445034 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 8] ; ret
0x0000000000443864 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000445054 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 9] ; ret
0x0000000000443874 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000445074 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xa] ; ret
0x0000000000443884 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000445094 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xb] ; ret
0x0000000000443894 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000044ab9a : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x0000000000443784 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000004981dd : mov dword ptr [rdx], eax ; pop rbx ; ret
0x0000000000419648 : mov dword ptr [rdx], eax ; ret
0x000000000047ad7a : mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004ab9df : mov dword ptr [rip + 0x22e42b], ebx ; jne 0x4ab9d1 ; pop rbx ; ret
0x00000000004aae90 : mov dword ptr [rip + 0x22f62e], 1 ; ret
0x00000000004aad80 : mov dword ptr [rip + 0x22f73e], 1 ; ret
0x0000000000497d28 : mov dword ptr [rip + 0x24247a], eax ; ret
0x0000000000497d0d : mov dword ptr [rip + 0x242495], eax ; add rsp, 8 ; ret
0x0000000000489681 : mov dword ptr [rip + 0x250e69], eax ; add rsp, 8 ; ret
0x00000000004895c5 : mov dword ptr [rip + 0x250f25], eax ; ret
0x000000000045c5a8 : mov dword ptr [rip + 0x27c50a], edx ; je 0x45c5c1 ; ret
0x000000000044ee86 : mov dword ptr [rip + 0x287c2c], edx ; pop rbx ; ret
0x000000000044d749 : mov dword ptr [rip + 0x28aa21], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000420af6 : mov dword ptr [rip + 0x2b6d64], eax ; ret
0x0000000000420b00 : mov dword ptr [rip + 0x2b9386], 0 ; ret
0x0000000000420a96 : mov dword ptr [rip + 0x2b9400], 0 ; ret
0x000000000041aa1c : mov dword ptr [rip + 0x2bce3e], eax ; ret
0x000000000041a517 : mov dword ptr [rip + 0x2bd2d3], eax ; ret
0x000000000041a52e : mov dword ptr [rip + 0x2bd2d8], eax ; ret
0x000000000041a4ef : mov dword ptr [rip + 0x2bd2f3], eax ; ret
0x000000000041a4cf : mov dword ptr [rip + 0x2bd30b], eax ; ret
0x000000000041a3c5 : mov dword ptr [rip + 0x2bd47d], eax ; ret
0x000000000041a3b5 : mov dword ptr [rip + 0x2bd485], eax ; ret
0x000000000041a3a3 : mov dword ptr [rip + 0x2bd487], edx ; ret
0x000000000041a365 : mov dword ptr [rip + 0x2bd48d], eax ; ret
0x000000000041a355 : mov dword ptr [rip + 0x2bd4a5], eax ; ret
0x000000000041a9d0 : mov dword ptr [rip + 0x2bf4b6], 0 ; ret
0x000000000041a544 : mov dword ptr [rip + 0x2bf96a], eax ; ret
0x0000000000419a7c : mov dword ptr [rip + 0x2c03b2], 0 ; ret
0x0000000000402ae3 : mov dword ptr [rsi + 0x10], esi ; syscall
0x0000000000445423 : mov dword ptr [rsi + 0x63490006], esi ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000447ff6 : mov dword ptr [rsi - 2], ecx ; ret
0x0000000000447fe9 : mov dword ptr [rsi - 4], ecx ; ret
0x0000000000482b91 : mov dword ptr [rsi], 0xffffffff ; xor eax, eax ; ret
0x00000000004a8ace : mov dword ptr [rsi], eax ; mov rax, qword ptr [rdi + 0x98] ; ret
0x0000000000489732 : mov dword ptr [rsi], eax ; ret
0x0000000000488a79 : mov dword ptr [rsi], edi ; mov rax, rcx ; ret
0x000000000045eb1a : mov dword ptr [rsi], edi ; xor eax, eax ; jmp 0x45eae6
0x0000000000402adb : mov dword ptr [rsi], esi ; mov eax, 0x9e ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000040a856 : mov dword ptr [rsp + 0x10], eax ; mov qword ptr [rsp + 8], rcx ; call 0x40736b
0x000000000041dcba : mov dword ptr [rsp + 0x10], ebx ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000041dd77 : mov dword ptr [rsp + 0x10], edx ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000044ae44 : mov dword ptr [rsp + 0x20], eax ; je 0x44ae7b ; mov eax, 0x48 ; syscall
0x0000000000452bec : mov dword ptr [rsp + 0x50], eax ; call 0x44eec6
0x0000000000405c5f : mov dword ptr [rsp + 0x60], eax ; jmp 0x4056de
0x0000000000417930 : mov dword ptr [rsp + 0xc], esi ; mov qword ptr [rsp], rdi ; call 0x413bca
0x000000000041dcbf : mov dword ptr [rsp + 8], eax ; call rcx
0x000000000040a85b : mov dword ptr [rsp + 8], ecx ; call 0x407366
0x00000000004123be : mov dword ptr [rsp + 8], ecx ; mov rdi, r15 ; call rax
0x000000000041e2d4 : mov dword ptr [rsp + 8], edx ; call 0x41a576
0x00000000004a3525 : mov dword ptr [rsp + 8], esi ; call 6
0x000000000041e2d3 : mov dword ptr [rsp + 8], r10d ; call 0x41a577
0x000000000049797a : mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x00000000004978e9 : mov dword ptr [rsp - 4], edx ; movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000049792f : mov dword ptr [rsp - 8], edx ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000004a54e5 : mov dword ptr [rsp], eax ; mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x00000000004a5493 : mov dword ptr [rsp], eax ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000414622 : mov dword ptr [rsp], ecx ; mov rdi, rbx ; call rax
0x0000000000417935 : mov dword ptr [rsp], edi ; call 0x413bc5
0x000000000047440b : mov dword ptr fs:[rax], 0x16 ; jmp 0x4706ba
0x000000000044a8ff : mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x00000000004679fc : mov dword ptr fs:[rax], 0x16 ; mov eax, edx ; ret
0x0000000000410551 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x000000000047478c : mov dword ptr fs:[rax], 0xc ; jmp 0x470a01
0x000000000047fc7f : mov dword ptr fs:[rax], 0xc ; mov eax, 0xffffffff ; ret
0x000000000041ef79 : mov dword ptr fs:[rax], 0xc ; mov rax, rsi ; ret
0x0000000000412df4 : mov dword ptr fs:[rax], 9 ; mov eax, 0xffffffff ; ret
0x000000000047fc6c : mov dword ptr fs:[rax], edx ; xor eax, eax ; ret
0x000000000044af33 : mov dword ptr fs:[rcx], eax ; mov eax, 0xffffffff ; jmp 0x44af08
0x000000000044a859 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000044a8e9 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000044ab99 : mov dword ptr fs:[rdx], eax ; mov rax, -1 ; ret
0x00000000004482a4 : mov dword ptr ss:[rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x00000000004454c2 : mov dx, word ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000445503 : mov dx, word ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x00000000004309d0 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000445aa0 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x0000000000445480 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004a6371 : mov eax, 0 ; add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x00000000004494a3 : mov eax, 0 ; and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x0000000000400b94 : mov eax, 0 ; call 0x44ce17
0x000000000040119d : mov eax, 0 ; pop rbp ; ret
0x000000000040041d : mov eax, 0 ; test rax, rax ; je 0x400435 ; call rax
0x00000000004494db : mov eax, 0x10 ; pop rbx ; ret
0x000000000044b760 : mov eax, 0x10 ; syscall
0x000000000047f9a9 : mov eax, 0x101 ; syscall
0x000000000047f922 : mov eax, 0x106 ; syscall
0x000000000044b697 : mov eax, 0x12e ; xor edi, edi ; syscall
0x0000000000488249 : mov eax, 0x14 ; syscall
0x000000000044db14 : mov eax, 0x15 ; syscall
0x00000000004247d0 : mov eax, 0x16 ; ret
0x000000000044a840 : mov eax, 0x18 ; syscall
0x000000000044d773 : mov eax, 0x19 ; syscall
0x000000000044b960 : mov eax, 0x1c ; syscall
0x00000000004494e9 : mov eax, 0x20 ; pop rbx ; ret
0x00000000004a3e50 : mov eax, 0x26 ; syscall
0x00000000004a0c70 : mov eax, 0x27 ; syscall
0x0000000000464c5d : mov eax, 0x2948fff9 ; ret
0x00000000004494e2 : mov eax, 0x30 ; pop rbx ; ret
0x000000000047f850 : mov eax, 0x3f ; syscall
0x00000000004494f7 : mov eax, 0x40 ; pop rbx ; ret
0x00000000004c33db : mov eax, 0x45155e93 ; ret 0x591c
0x000000000044ad37 : mov eax, 0x48 ; syscall
0x000000000046ac28 : mov eax, 0x48fffff6 ; mov edi, dword ptr [rbp - 0x8d0] ; call rax
0x000000000044b01b : mov eax, 0x4f ; syscall
0x00000000004595a8 : mov eax, 0x5b000000 ; pop r12 ; ret
0x0000000000415677 : mov eax, 0x5b000000 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004494f0 : mov eax, 0x60 ; pop rbx ; ret
0x000000000044d7a0 : mov eax, 0x63 ; syscall
0x000000000047f880 : mov eax, 0x66 ; syscall
0x000000000047f8a0 : mov eax, 0x68 ; syscall
0x000000000047f890 : mov eax, 0x6b ; syscall
0x000000000047f8b0 : mov eax, 0x6c ; syscall
0x00000000004494cd : mov eax, 0x80 ; pop rbx ; ret
0x00000000004a529f : mov eax, 0x89000003 ; fmul dword ptr [rbx + rcx*4 + 0x34] ; ret 0xf41
0x00000000004a2564 : mov eax, 0x89fd8945 ; ret 0xe283
0x0000000000402add : mov eax, 0x9e ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000044b930 : mov eax, 0xa ; syscall
0x000000000044b900 : mov eax, 0xb ; syscall
0x000000000040eeb2 : mov eax, 0xba ; syscall
0x00000000004c21d8 : mov eax, 0xbcbbbab9 ; mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x000000000047f120 : mov eax, 0xc9 ; syscall
0x00000000004858ca : mov eax, 0xca ; syscall
0x000000000040eee0 : mov eax, 0xe ; syscall
0x00000000004c4fa9 : mov eax, 0xe39d9886 ; mov ecx, 0x7ce1a201 ; pop rdx ; leave ; retf
0x000000000044a5b5 : mov eax, 0xe5 ; syscall
0x000000000040eebe : mov eax, 0xea ; syscall
0x000000000045c7a1 : mov eax, 0xf ; syscall
0x000000000042e619 : mov eax, 0xf66b8b2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000459d6c : mov eax, 0xff514ee8 ; dec dword ptr [rcx + rcx*4 - 9] ; call rbx
0x000000000044c7b8 : mov eax, 0xffd272e8 ; dec dword ptr [rax + 0x39] ; ret
0x000000000048a051 : mov eax, 0xffffffc0 ; pop rbx ; mov eax, dword ptr fs:[rax] ; ret
0x000000000047af7f : mov eax, 0xffffffff ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044aa5c : mov eax, 0xffffffff ; jmp 0x44a9c3
0x000000000044adec : mov eax, 0xffffffff ; jmp 0x44ad56
0x000000000044af36 : mov eax, 0xffffffff ; jmp 0x44af05
0x000000000047fa6c : mov eax, 0xffffffff ; jmp 0x47f9c8
0x00000000004130b1 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412e37 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000414143 : mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000412dfb : mov eax, 0xffffffff ; ret
0x0000000000479957 : mov eax, 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004a9528 : mov eax, 1 ; ja 0x4a953b ; sbb eax, eax ; ret
0x0000000000449f59 : mov eax, 1 ; jmp 0x449f29
0x00000000004800e1 : mov eax, 1 ; leave ; ret
0x000000000047b9e8 : mov eax, 1 ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004977e5 : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x00000000004184b2 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a219d : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000048a040 : mov eax, 1 ; pop rbx ; ret
0x000000000046a0df : mov eax, 1 ; ret
0x000000000044abfa : mov eax, 1 ; syscall
0x000000000047e973 : mov eax, 2 ; ret
0x000000000047ebd1 : mov eax, 3 ; ret
0x000000000044aeca : mov eax, 3 ; syscall
0x00000000004a994f : mov eax, 4 ; jne 0x4a9978 ; ret
0x000000000047ebe1 : mov eax, 4 ; ret
0x000000000044a8ce : mov eax, 4 ; syscall
0x000000000047ebf1 : mov eax, 5 ; ret
0x000000000044a91c : mov eax, 5 ; syscall
0x000000000047ec01 : mov eax, 6 ; ret
0x000000000047f8ce : mov eax, 6 ; syscall
0x000000000047ec11 : mov eax, 7 ; ret
0x00000000004494d4 : mov eax, 8 ; pop rbx ; ret
0x0000000000450310 : mov eax, 8 ; ret
0x000000000044acc0 : mov eax, 8 ; syscall
0x000000000044b85c : mov eax, 9 ; syscall
0x00000000004a0c52 : mov eax, dword ptr [r8 + rax*4] ; sub eax, dword ptr [r8 + r9*4] ; je 0x4a0c43 ; ret
0x000000000041294a : mov eax, dword ptr [rax + 0x130] ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000412951 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000047bef4 : mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000438621 : mov eax, dword ptr [rax + 0x63490007] ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000418698 : mov eax, dword ptr [rax + 0x68] ; test rax, rax ; jne 0x418699 ; ret
0x000000000048bdf1 : mov eax, dword ptr [rax + 8] ; ret
0x000000000048be01 : mov eax, dword ptr [rax + 8] ; sub rax, qword ptr fs:[0] ; ret
0x00000000004a0c53 : mov eax, dword ptr [rax + rax*4] ; sub eax, dword ptr [r8 + r9*4] ; je 0x4a0c42 ; ret
0x000000000045abe0 : mov eax, dword ptr [rax + rbp*8] ; test rax, rax ; je 0x45abf2 ; call rax
0x000000000046d77a : mov eax, dword ptr [rax + rcx*8] ; mov ecx, 1 ; jmp rax
0x000000000045c5ef : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000046234d : mov eax, dword ptr [rax + rdi*8] ; jmp rax
0x00000000004a6709 : mov eax, dword ptr [rax] ; lea rax, [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x00000000004a66f1 : mov eax, dword ptr [rax] ; mov qword ptr [r10], r8 ; ret
0x000000000045c5ec : mov eax, dword ptr [rax] ; mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000048a059 : mov eax, dword ptr [rax] ; ret
0x00000000004179d5 : mov eax, dword ptr [rbp + 0x20] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000417bc5 : mov eax, dword ptr [rbp + 0x28] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000004a8236 : mov eax, dword ptr [rbp + 8] ; movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x0000000000402ebc : mov eax, dword ptr [rbp + 8] ; sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004012c5 : mov eax, dword ptr [rbp - 0x20] ; mov edx, dword ptr [rbp - 4] ; mov dword ptr [rax], edx ; nop ; leave ; ret
0x0000000000410d7e : mov eax, dword ptr [rbp - 0x3c] ; jmp 0x410cdb
0x0000000000486940 : mov eax, dword ptr [rbp - 0xb8] ; add rax, r11 ; call rax
0x0000000000400bc8 : mov eax, dword ptr [rbp - 8] ; leave ; ret
0x0000000000400bc0 : mov eax, dword ptr [rbp - 8] ; mov byte ptr [rax + 8], 1 ; mov rax, qword ptr [rbp - 8] ; leave ; ret
0x0000000000401ee1 : mov eax, dword ptr [rbp - 8] ; mov dword ptr [rax + 0x10], 0xffffffff ; nop ; leave ; ret
0x0000000000486761 : mov eax, dword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000048661e : mov eax, dword ptr [rbx + 0x10] ; add rbx, 0x18 ; add rax, qword ptr [r14] ; call rax
0x000000000041791d : mov eax, dword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004981f9 : mov eax, dword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x00000000004981e9 : mov eax, dword ptr [rbx + 0x18] ; mov rdx, qword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000418009 : mov eax, dword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000418429 : mov eax, dword ptr [rbx + 0x48] ; add rsp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x0000000000452be9 : mov eax, dword ptr [rbx] ; mov qword ptr [rsp + 0x50], rax ; call 0x44eec9
0x0000000000445024 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; lea rax, [rdx + 6] ; ret
0x0000000000443854 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000445005 : mov eax, dword ptr [rcx + 4] ; mov word ptr [rdx + 4], ax ; lea rax, [rdx + 5] ; ret
0x0000000000443845 : mov eax, dword ptr [rcx + 4] ; mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x0000000000445036 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 8] ; ret
0x0000000000443866 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x00000000004450b7 : mov eax, dword ptr [rcx + 5] ; mov qword ptr [rdx + 5], rax ; lea rax, [rdx + 0xc] ; ret
0x00000000004438a7 : mov eax, dword ptr [rcx + 5] ; mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x0000000000445056 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 9] ; ret
0x0000000000443876 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00000000004450d7 : mov eax, dword ptr [rcx + 6] ; mov qword ptr [rdx + 6], rax ; lea rax, [rdx + 0xd] ; ret
0x00000000004438c7 : mov eax, dword ptr [rcx + 6] ; mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x0000000000445076 : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xa] ; ret
0x0000000000443886 : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000004450f7 : mov eax, dword ptr [rcx + 7] ; mov qword ptr [rdx + 7], rax ; lea rax, [rdx + 0xe] ; ret
0x00000000004438e7 : mov eax, dword ptr [rcx + 7] ; mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x0000000000445096 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xb] ; ret
0x0000000000443896 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000444f87 : mov eax, dword ptr [rcx + 8] ; mov qword ptr [rdx + 8], rax ; lea rax, [rdx + 0xf] ; ret
0x00000000004437d7 : mov eax, dword ptr [rcx + 8] ; mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x000000000043e46a : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000043fd42 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000444fe0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x0000000000443820 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000444f31 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x0000000000443781 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000444fb1 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x0000000000443801 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000004d314b : mov eax, dword ptr [rcx] ; retf 2
0x0000000000486f46 : mov eax, dword ptr [rdi + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000047bd4e : mov eax, dword ptr [rdi + 0x10] ; sar rdx, 2 ; sub eax, edx ; ret
0x0000000000419650 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000419678 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000045bfe2 : mov eax, dword ptr [rdi + 0x20] ; mov rbx, rdi ; test rax, rax ; je 0x45bffa ; call rax
0x00000000004ac61d : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x4ac634 ; call rax
0x000000000047bef1 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000004199a1 : mov eax, dword ptr [rdi + 0x68] ; ret
0x00000000004a8a61 : mov eax, dword ptr [rdi + 0x90] ; ret
0x00000000004a8ab1 : mov eax, dword ptr [rdi + 0x98] ; ret
0x00000000004a8af1 : mov eax, dword ptr [rdi + 0xa0] ; ret
0x00000000004a8b51 : mov eax, dword ptr [rdi + 0xa8] ; ret
0x00000000004a8b41 : mov eax, dword ptr [rdi + 0xb0] ; ret
0x00000000004a8b01 : mov eax, dword ptr [rdi + 0xb8] ; ret
0x0000000000419ab7 : mov eax, dword ptr [rdi + 8] ; cmp rax, rdx ; jae 0x419aeb ; movzx eax, byte ptr [rax] ; ret
0x000000000046288f : mov eax, dword ptr [rdi + rax*8] ; jmp rax
0x00000000004a8a98 : mov eax, dword ptr [rdi + rsi*8] ; cmp byte ptr [rcx + rsi], 8 ; jne 0x4a8ab1 ; mov qword ptr [rax], rdx ; ret
0x0000000000437877 : mov eax, dword ptr [rdi] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004a3681 : mov eax, dword ptr [rdi] ; cmp rax, rsi ; je 0x4a3698 ; ret
0x0000000000419645 : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000041a541 : mov eax, dword ptr [rdi] ; nop ; mov dword ptr [rip + 0x2bf96a], eax ; ret
0x000000000041a3c1 : mov eax, dword ptr [rdi] ; nop ; mov qword ptr [rip + 0x2bd47d], rax ; ret
0x000000000041a3b1 : mov eax, dword ptr [rdi] ; nop ; mov qword ptr [rip + 0x2bd485], rax ; ret
0x000000000041a361 : mov eax, dword ptr [rdi] ; nop ; mov qword ptr [rip + 0x2bd48d], rax ; ret
0x000000000041a351 : mov eax, dword ptr [rdi] ; nop ; mov qword ptr [rip + 0x2bd4a5], rax ; ret
0x00000000004aadb5 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x4aadc7 ; ret
0x00000000004aadd0 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x4aade7 ; ret
0x00000000004ab000 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x4ab017 ; ret
0x0000000000488a2c : mov eax, dword ptr [rdx + 4] ; ret
0x0000000000449a07 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x4499f9 ; ret
0x000000000043c076 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000477093 : mov eax, dword ptr [rdx] ; mov qword ptr [rbp - 0x670], rax ; jmp 0x473b2d
0x0000000000419631 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x419630 ; ret
0x00000000004aae82 : mov eax, dword ptr [rip + 0x22f640] ; test eax, eax ; je 0x4aae9b ; ret
0x00000000004aad72 : mov eax, dword ptr [rip + 0x22f750] ; test eax, eax ; je 0x4aad8b ; ret
0x00000000004a0e70 : mov eax, dword ptr [rip + 0x239b8a] ; ret
0x000000000048972b : mov eax, dword ptr [rip + 0x250db7] ; mov qword ptr [rsi], rax ; ret
0x00000000004896ba : mov eax, dword ptr [rip + 0x250e30] ; ret
0x0000000000459451 : mov eax, dword ptr [rip + 0x280b41] ; ret
0x0000000000450f51 : mov eax, dword ptr [rip + 0x289b11] ; ret
0x000000000044ee60 : mov eax, dword ptr [rip + 0x28bbea] ; test eax, eax ; je 0x44ee7b ; ret
0x000000000044b791 : mov eax, dword ptr [rip + 0x28ca61] ; test rax, rax ; je 0x44b7aa ; ret
0x000000000044ab20 : mov eax, dword ptr [rip + 0x28fe26] ; test eax, eax ; jne 0x44ab4c ; xor eax, eax ; syscall
0x0000000000419981 : mov eax, dword ptr [rip + 0x2bd799] ; ret
0x00000000004a99a2 : mov eax, dword ptr [rsi + 0x10] ; ret
0x00000000004a6831 : mov eax, dword ptr [rsi + 0xa8] ; ret
0x00000000004a6804 : mov eax, dword ptr [rsi + 0xb0] ; ret
0x00000000004a6821 : mov eax, dword ptr [rsi + 0xb8] ; ret
0x00000000004a99c1 : mov eax, dword ptr [rsi + 8] ; ret
0x000000000046d73f : mov eax, dword ptr [rsi + rax*8] ; jmp rax
0x00000000004628d9 : mov eax, dword ptr [rsi + rax*8] ; mov esi, 1 ; jmp rax
0x0000000000462f39 : mov eax, dword ptr [rsi + rax*8] ; xor esi, esi ; jmp rax
0x00000000004976cc : mov eax, dword ptr [rsi + rbx*8] ; lea r9, [rdx] ; jmp 0x49772a
0x00000000004a3aac : mov eax, dword ptr [rsi + rbx*8] ; lea r9, [rdx] ; jmp 0x4a3b0a
0x000000000047af5f : mov eax, dword ptr [rsi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004a8b26 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x000000000044bb46 : mov eax, dword ptr [rsp + 0x10] ; call rax
0x0000000000402463 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000454b5c : mov eax, dword ptr [rsp + 0x20] ; call rax
0x000000000044af0a : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000483d09 : mov eax, dword ptr [rsp + 0xc] ; jmp 0x483cc1
0x000000000044ae8d : mov eax, dword ptr [rsp + 0xc] ; jne 0x44ae62 ; neg eax ; jmp 0x44ae62
0x000000000044ab7a : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040f22d : mov eax, dword ptr [rsp + 8] ; call rax
0x00000000004a260f : mov eax, dword ptr [rsp] ; add rax, qword ptr [rdx + 8] ; call rax
0x00000000004a6596 : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x00000000004a629a : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000048a058 : mov eax, dword ptr fs:[rax] ; ret
0x000000000041bbf0 : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000479553 : mov eax, eax ; jmp 0x479525
0x000000000040eef9 : mov eax, eax ; jne 0x40ef27 ; add rsp, 0x118 ; ret
0x0000000000449a05 : mov eax, eax ; mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x4499fb ; ret
0x000000000044ac29 : mov eax, eax ; mov rsi, rbp ; mov edi, ebx ; mov eax, 1 ; syscall
0x000000000044ab59 : mov eax, eax ; mov rsi, rbp ; mov edi, ebx ; xor eax, eax ; syscall
0x00000000004239cf : mov eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000449512 : mov eax, eax ; ret
0x000000000047ef94 : mov eax, eax ; shr rax, 2 ; vzeroupper ; ret
0x000000000044a322 : mov eax, eax ; syscall
0x000000000047db91 : mov eax, eax ; vzeroupper ; ret
0x000000000046a5c1 : mov eax, ebp ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044b9e9 : mov eax, ebp ; mov esi, 3 ; pop rbp ; pop r12 ; jmp rax
0x0000000000423e82 : mov eax, ebp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041157b : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000480359 : mov eax, ebp ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000044c524 : mov eax, ebp ; pop rbx ; pop rbp ; jmp rax
0x000000000044b9d2 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x00000000004108a9 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004115b2 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000411693 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041114e : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412da2 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000413a5d : mov eax, ebp ; syscall
0x0000000000497773 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x000000000044d8e5 : mov eax, ebx ; and eax, 0xc ; cmp eax, 4 ; je 0x44d8fa ; ret
0x000000000048c953 : mov eax, ebx ; jne 0x48c981 ; add rsp, 0x110 ; pop rbx ; ret
0x00000000004a3d47 : mov eax, ebx ; jne 0x4a3d65 ; add rsp, 0x40 ; pop rbx ; ret
0x00000000004a3e2e : mov eax, ebx ; jne 0x4a3e4d ; add rsp, 0x50 ; pop rbx ; ret
0x0000000000480f06 : mov eax, ebx ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040fabb : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000411878 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004159d5 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044b730 : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000413d4b : mov eax, ebx ; pop rbx ; ret
0x00000000004959a7 : mov eax, ecx ; adc eax, eax ; ret
0x000000000047bdd4 : mov eax, ecx ; lea rdx, [r8 + rdx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000402fff : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004678e5 : mov eax, ecx ; ret
0x0000000000449428 : mov eax, ecx ; shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x0000000000449473 : mov eax, ecx ; shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000040eeab : mov eax, ecx ; syscall
0x00000000004b06b5 : mov eax, edi ; call rax
0x00000000004b0735 : mov eax, edi ; jmp qword ptr [rdx + 0x12fff888]
0x0000000000413c43 : mov eax, edi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000413c5b : mov eax, edi ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041be85 : mov eax, edi ; pop rbp ; pop r12 ; ret
0x00000000004809a9 : mov eax, edi ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000425210 : mov eax, edi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000413c74 : mov eax, edi ; ret
0x000000000041ba85 : mov eax, edx ; add rsp, 8 ; ret
0x00000000004679ae : mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000406978 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000469f8a : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000411421 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000413437 : mov eax, edx ; pop rbx ; ret
0x000000000041ba91 : mov eax, edx ; ret
0x000000000040255a : mov eax, edx ; syscall
0x000000000044d82c : mov eax, edx ; xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x44d82f ; pop rdx ; pop r10 ; ret
0x0000000000479b11 : mov eax, edx ; xor edx, edx ; div r13 ; mov rbp, rax ; jmp 0x479aea
0x0000000000410ef2 : mov eax, esi ; jne 0x410f0b ; add rsp, 0xd0 ; pop rbx ; ret
0x000000000048ca37 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x0000000000414f1a : mov eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000406dc9 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000414eaf : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000479884 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041ef4d : mov eax, esi ; pop rbx ; ret
0x000000000041ef81 : mov eax, esi ; ret
0x000000000044a312 : mov eax, esi ; syscall
0x00000000004071ef : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042361e : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004789b8 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044d8e4 : mov eax, r11d ; and eax, 0xc ; cmp eax, 4 ; je 0x44d8fb ; ret
0x0000000000423e81 : mov eax, r13d ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000413a5c : mov eax, r13d ; syscall
0x0000000000479552 : mov eax, r8d ; jmp 0x479526
0x000000000040eef8 : mov eax, r8d ; jne 0x40ef28 ; add rsp, 0x118 ; ret
0x000000000044a321 : mov eax, r8d ; syscall
0x00000000004678e4 : mov eax, r9d ; ret
0x00000000004137fe : mov eax, r9d ; syscall
0x000000000043400b : mov ebp, 0x63490007 ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004c52d4 : mov ebp, 0x63b1101 ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x00000000004a3544 : mov ebp, 0x743d8d48 ; and r8, qword ptr [rax] ; call 0xa
0x00000000004bac64 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x00000000004c21dd : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x0000000000417e5a : mov ebp, 0xc4ebffff ; nop ; mov eax, 0xffffffff ; ret
0x00000000004a3cff : mov ebp, 0xe8002344 ; clc ; ret 0xffb5
0x000000000042e319 : mov ebp, 0xf66bdb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047d358 : mov ebp, 0xf80148c0 ; ret
0x000000000047d5dc : mov ebp, 0xf80148c6 ; ret
0x00000000004c4006 : mov ebp, 0xfb67d10d ; ret
0x000000000046ac2e : mov ebp, 0xfffff730 ; call rax
0x000000000045f6fc : mov ebp, 0xfffff758 ; call rax
0x000000000047803f : mov ebp, 0xfffff930 ; jmp 0x478084
0x000000000046dc29 : mov ebp, 0xfffffae8 ; add byte ptr [rcx - 0x77], al ; ret 0x1674
0x0000000000488244 : mov ebp, 0xfffffb94 ; mov eax, 0x14 ; syscall
0x0000000000466b05 : mov ebp, 0xffffff40 ; call rax
0x0000000000413a57 : mov ebp, 0xffffff7c ; mov eax, r13d ; syscall
0x00000000004a8df9 : mov ebp, dword ptr [rbp - 0x18] ; mov r14, qword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x0000000000400aae : mov ebp, dword ptr [rbp] ; jmp rax
0x00000000004a8f83 : mov ebp, dword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000044ba35 : mov ebp, dword ptr [rbx + 0x10] ; test rbp, rbp ; jne 0x44ba5c ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044c5a0 : mov ebp, dword ptr [rbx + 0x10] ; test rbp, rbp ; jne 0x44c5d4 ; mov rdi, qword ptr [rbx] ; call r12
0x00000000004aa1ca : mov ebp, dword ptr [rsp + 8] ; jmp 0x4aa1e8
0x0000000000479b19 : mov ebp, eax ; jmp 0x479ae2
0x0000000000488746 : mov ebp, eax ; jmp 0x488717
0x000000000048ca3d : mov ebp, ecx ; nop ; jmp rdx
0x00000000004c4e98 : mov ebp, esi ; sub dword ptr [rdi], ecx ; push rbx ; xchg eax, edx ; jae 0x4c4e7f ; push rsi ; pop rdx ; je 0x4c4e74 ; ret 0xacfc
0x00000000004c5024 : mov ebx, 0x1b5c347e ; jmp 0x4c4ffc
0x0000000000436297 : mov ebx, 0x46f00ff2 ; retf
0x0000000000436292 : mov ebx, 0x477f0ff3 ; mov ebx, 0x46f00ff2 ; retf
0x0000000000430df4 : mov ebx, 0x4e6f0ff3 ; retf
0x0000000000430e12 : mov ebx, 0x4f7f0ff3 ; retf
0x0000000000457254 : mov ebx, 0x8941fffa ; ret 0x5be9
0x000000000044d884 : mov ebx, 0xafb8341 ; je 0x44d893 ; ret
0x000000000046365d : mov ebx, 0xb9e90005 ; out 0xff, eax ; dec dword ptr [rbp + 0x63] ; ret 0x20be
0x00000000004c21db : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x000000000044ee63 : mov ebx, 0xc0850028 ; je 0x44ee78 ; ret
0x0000000000425b1b : mov ebx, 0xf480001 ; ret 0x66c3
0x000000000042e499 : mov ebx, 0xf66bbb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000410664 : mov ebx, 1 ; jmp 0x410633
0x000000000045ea7c : mov ebx, 1 ; jmp 0x45ea4b
0x00000000004c5644 : mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004a11e1 : mov ebx, eax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000048c911 : mov ebx, eax ; mov rdi, qword ptr [rsp + 0x18] ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x000000000045bfe6 : mov ebx, edi ; test rax, rax ; je 0x45bff6 ; call rax
0x000000000047f710 : mov ebx, esi ; sub rsp, 8 ; syscall
0x0000000000489dad : mov ebx, esp ; mov rsi, rbx ; syscall
0x000000000041beed : mov ecx, 0x148002b ; ret
0x000000000040eea6 : mov ecx, 0x27 ; mov eax, ecx ; syscall
0x000000000041bef7 : mov ecx, 0x3948002b ; ret
0x0000000000417429 : mov ecx, 0x48000000 ; add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000047f9cc : mov ecx, 0x48000000 ; add esp, 0x78 ; ret
0x00000000004328f3 : mov ecx, 0x490007d4 ; movsxd rdx, dword ptr [rbx + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000042fb33 : mov ecx, 0x49000800 ; movsxd rdx, dword ptr [rbx + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004c34d9 : mov ecx, 0x5b92ac50 ; retf
0x0000000000434617 : mov ecx, 0x63490007 ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004c4fae : mov ecx, 0x7ce1a201 ; pop rdx ; leave ; retf
0x00000000004a7232 : mov ecx, 0x8002330 ; ret
0x00000000004ba9b4 : mov ecx, 0xbc00000d ; or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x00000000004c21d9 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x000000000047fc30 : mov ecx, 0xc ; mov eax, ecx ; syscall
0x00000000004a89b2 : mov ecx, 0xdf ; add byte ptr [rdx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000042e599 : mov ecx, 0xf66b9b2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000046d77d : mov ecx, 1 ; jmp rax
0x000000000043987f : mov ecx, dword ptr [rcx - 2] ; mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x000000000043986c : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000043985a : mov ecx, dword ptr [rcx - 8] ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000047e955 : mov ecx, dword ptr [rdi + rdx*4] ; test r9d, r9d ; jne 0x47e91c ; mov rax, rdx ; ret
0x000000000042ec1e : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x000000000047becb : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000043c073 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000004455b4 : mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000445625 : mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000445585 : mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000004455e5 : mov ecx, dword ptr [rsi + 0xe] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000004455a4 : mov ecx, dword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000445605 : mov ecx, dword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000004c5464 : mov ecx, dword ptr [rsi + rdi*2 + 0xaaed8a9] ; jne 0x4c5499 ; retf 0x32dd
0x000000000044829f : mov ecx, dword ptr [rsi + rdx - 4] ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x0000000000430bb5 : mov ecx, dword ptr [rsi - 2] ; mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000430f93 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431193 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431393 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000436054 : mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000435fd4 : mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000435f54 : mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004360d4 : mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042eb07 : mov ecx, dword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x42eb3d ; xor eax, eax ; ret
0x0000000000435ec5 : mov ecx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000435e35 : mov ecx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000435da5 : mov ecx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000445ad0 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x00000000004454b0 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000445b21 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x00000000004454f1 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000436a03 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000436993 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000436923 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004454c0 : mov ecx, dword ptr [rsi] ; mov dx, word ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000004454d0 : mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x0000000000445511 : mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000445521 : mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000436845 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004367d5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000436765 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004366f5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000436685 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000436615 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004365a5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000436ae5 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000445ab1 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x0000000000445491 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000048bee7 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000048be75 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x58 ; jmp qword ptr [rax]
0x000000000043986b : mov ecx, dword ptr ss:[rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000047c5d1 : mov ecx, eax ; jmp 0x47c59b
0x000000000045024b : mov ecx, ebp ; call rbx
0x000000000047e076 : mov ecx, ebp ; mov rdi, qword ptr [r14] ; lea r9, [rsp + 0x28] ; call r12
0x0000000000418430 : mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x0000000000448272 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000041846a : mov ecx, edx ; xor edx, edx ; jmp rax
0x000000000047e595 : mov ecx, esi ; call rbx
0x0000000000457e31 : mov ecx, esi ; je 0x457fe2 ; mov rdx, rax ; jmp 0x457dfa
0x0000000000458236 : mov ecx, esi ; je 0x457fe2 ; mov rdx, rax ; jmp 0x4581ff
0x00000000004582ad : mov ecx, esi ; je 0x457fe2 ; mov rdx, rax ; jmp 0x458276
0x00000000004a7e2c : mov edi, 0x148015b ; retf
0x0000000000460f4a : mov edi, 0x440f48c0 ; ret 0xae9
0x000000000046e15d : mov edi, 0x48002670 ; mov eax, dword ptr [rax + rdi*8] ; jmp rax
0x0000000000433e55 : mov edi, 0x63490007 ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000400aac : mov edi, 0x6d8bd0 ; jmp rax
0x00000000004a722b : mov edi, 0x8002330 ; mov byte ptr [rip + 0x2330b9], 8 ; ret
0x00000000004c54bc : mov edi, 0x99b51319 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004b09ed : mov edi, 0xc160fff8 ; clc ; jmp qword ptr [rax - 0x3d]
0x000000000042e149 : mov edi, 0xf66bfb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000045b20e : mov edi, 0xf883fffa ; inc dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000044a9a4 : mov edi, 0xffffff9c ; syscall
0x00000000004a87b6 : mov edi, 1 ; call r14
0x00000000004a870c : mov edi, 1 ; call rax
0x00000000004a947c : mov edi, 1 ; jmp rax
0x0000000000400b8f : mov edi, 1 ; mov eax, 0 ; call 0x44ce1c
0x000000000044a5b0 : mov edi, 1 ; mov eax, 0xe5 ; syscall
0x000000000040eedb : mov edi, 2 ; mov eax, 0xe ; syscall
0x000000000040f10e : mov edi, 6 ; call 0x45c99c
0x00000000004b202c : mov edi, cs ; stc ; call rbx
0x00000000004b2038 : mov edi, cs ; stc ; dec ecx ; sar cl, cl ; call qword ptr [rax]
0x000000000040fcc4 : mov edi, dword ptr [rax + 0x20] ; call rdx
0x0000000000488243 : mov edi, dword ptr [rbp - 0x46c] ; mov eax, 0x14 ; syscall
0x000000000044bf7c : mov edi, dword ptr [rbp - 0x58] ; mov r12d, r14d ; call r15
0x0000000000413a56 : mov edi, dword ptr [rbp - 0x84] ; mov eax, r13d ; syscall
0x000000000045f6fb : mov edi, dword ptr [rbp - 0x8a8] ; call rax
0x000000000046ac2d : mov edi, dword ptr [rbp - 0x8d0] ; call rax
0x0000000000466b04 : mov edi, dword ptr [rbp - 0xc0] ; call rax
0x00000000004a8e01 : mov edi, dword ptr [rbp - 8] ; leave ; ret
0x00000000004a8f7f : mov edi, dword ptr [rbp - 8] ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000044ba64 : mov edi, dword ptr [rbp] ; call r12
0x000000000040f229 : mov edi, dword ptr [rbp] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000044ba3e : mov edi, dword ptr [rbx] ; call r12
0x0000000000486b2f : mov edi, dword ptr [rbx] ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000048ca34 : mov edi, dword ptr [rdi + 0x28] ; mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x0000000000489706 : mov edi, dword ptr [rdi + 8] ; test rdi, rdi ; jne 0x4896e9 ; ret
0x00000000004c42c6 : mov edi, dword ptr [rdx] ; ret
0x000000000047e079 : mov edi, dword ptr [rsi] ; lea r9, [rsp + 0x28] ; call r12
0x00000000004aa6de : mov edi, dword ptr [rsp + 0x10] ; call r14
0x000000000047fa2e : mov edi, dword ptr [rsp + 0x18] ; mov eax, 0x101 ; syscall
0x000000000048c914 : mov edi, dword ptr [rsp + 0x18] ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x0000000000452925 : mov edi, dword ptr [rsp + 0x20] ; call r15
0x00000000004527f0 : mov edi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000453201 : mov edi, dword ptr [rsp + 0x30] ; call r14
0x00000000004533d9 : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x00000000004536c3 : mov edi, dword ptr [rsp + 0x38] ; call r12
0x0000000000453cfb : mov edi, dword ptr [rsp + 0x38] ; call r14
0x0000000000456cbf : mov edi, dword ptr [rsp + 0x38] ; call r15
0x0000000000452f09 : mov edi, dword ptr [rsp + 0x38] ; call rbx
0x0000000000452c15 : mov edi, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000045513a : mov edi, dword ptr [rsp + 0x40] ; call r15
0x00000000004578e6 : mov edi, dword ptr [rsp + 0x40] ; call rbx
0x0000000000454b57 : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000044adb1 : mov edi, dword ptr [rsp + 0xc] ; mov eax, 0x48 ; syscall
0x000000000040245e : mov edi, dword ptr [rsp + 0xc] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000041803b : mov edi, dword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000044bb41 : mov edi, dword ptr [rsp + 8] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000417946 : mov edi, dword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004a957d : mov edi, dword ptr [rsp] ; lea r14, [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x000000000047dee2 : mov edi, dword ptr [rsp] ; lea r9, [rsp + 0x38] ; lea rcx, [rax + 1] ; call rbx
0x00000000004a95cc : mov edi, dword ptr [rsp] ; mov rdx, qword ptr [rbp] ; call r12
0x0000000000449d5a : mov edi, eax ; call 0x4004c8
0x00000000004b0671 : mov edi, eax ; call qword ptr [rax]
0x0000000000424834 : mov edi, eax ; call rcx
0x00000000004b0531 : mov edi, eax ; inc dword ptr [rdx - 0x6e] ; clc ; call rdx
0x00000000004b066d : mov edi, eax ; jmp qword ptr [rax + 0x10fff88b]
0x000000000040eeb0 : mov edi, eax ; mov eax, 0xba ; syscall
0x000000000044a8c9 : mov edi, eax ; mov rsi, rdx ; mov eax, 4 ; syscall
0x000000000044a917 : mov edi, eax ; mov rsi, rdx ; mov eax, 5 ; syscall
0x000000000047f8c9 : mov edi, eax ; mov rsi, rdx ; mov eax, 6 ; syscall
0x0000000000423718 : mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x000000000046a410 : mov edi, ebp ; call 0x4004c9
0x0000000000422d53 : mov edi, ebp ; call 0x41ef94
0x00000000004a533e : mov edi, ebp ; call qword ptr [r14]
0x0000000000402bfe : mov edi, ebp ; call qword ptr [r15 + rbx*8]
0x00000000004a5412 : mov edi, ebp ; call qword ptr [rax]
0x00000000004a54ee : mov edi, ebp ; call qword ptr [rcx]
0x0000000000459c1c : mov edi, ebp ; call r12
0x00000000004aa4bc : mov edi, ebp ; call r14
0x0000000000423bb6 : mov edi, ebp ; call rax
0x000000000047e441 : mov edi, ebp ; call rbx
0x000000000040f34e : mov edi, ebp ; lea rbx, [r15 + rax] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000044b85a : mov edi, ebp ; mov eax, 9 ; syscall
0x00000000004137fc : mov edi, ebp ; mov eax, r9d ; syscall
0x000000000047e592 : mov edi, ebp ; mov r9, r14 ; call rbx
0x000000000040f2b9 : mov edi, ebp ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000044c51d : mov edi, ebx ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000045ef92 : mov edi, ebx ; call 0x400458
0x00000000004040d8 : mov edi, ebx ; call 0x420b14
0x0000000000494fbb : mov edi, ebx ; call 0x492d48
0x000000000045054e : mov edi, ebx ; call r14
0x0000000000414626 : mov edi, ebx ; call rax
0x000000000044a25f : mov edi, ebx ; jmp qword ptr [rsi + 0xf]
0x00000000004ab853 : mov edi, ebx ; jne 0x4ab84a ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044ac2e : mov edi, ebx ; mov eax, 1 ; syscall
0x000000000044aeec : mov edi, ebx ; mov edx, eax ; mov eax, 3 ; syscall
0x00000000004179dd : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x000000000047addf : mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000004223c2 : mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000044ab5e : mov edi, ebx ; xor eax, eax ; syscall
0x00000000004a4279 : mov edi, ecx ; mov qword ptr [rbp - 0xf0], rcx ; call 0x4004f3
0x000000000040b15a : mov edi, edi ; call 0x4213d8
0x000000000047c258 : mov edi, edi ; call r12
0x00000000004123c3 : mov edi, edi ; call rax
0x0000000000450b2b : mov edi, edi ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x0000000000497b71 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x497b59 ; mov rax, rsi ; ret
0x000000000044a310 : mov edi, edx ; mov eax, esi ; syscall
0x000000000044a31f : mov edi, edx ; mov eax, r8d ; syscall
0x00000000004040f4 : mov edi, edx ; mov qword ptr [rbp - 0x78], rdx ; call 0x420b18
0x00000000004b2ec1 : mov edi, edx ; push rax ; mov bh, dl ; push qword ptr [rax] ; mov bh, dl ; jmp rax
0x0000000000459d73 : mov edi, esi ; call rbx
0x000000000045a051 : mov edi, esi ; call rdx
0x00000000004af9e9 : mov edi, esi ; inc dword ptr [rax] ; jns 0x4af9ec ; call qword ptr [rax]
0x000000000041e2d1 : mov edi, esi ; mov dword ptr [rsp + 8], r10d ; call 0x41a579
0x0000000000463b10 : mov edi, esp ; call 0x47fd64
0x00000000004a94d4 : mov edi, esp ; call r15
0x000000000047bf80 : mov edi, esp ; call rbx
0x00000000004069f9 : mov edi, esp ; jmp 0x4069ca
0x000000000044b019 : mov edi, esp ; mov eax, 0x4f ; syscall
0x00000000004137fb : mov edi, r13d ; mov eax, r9d ; syscall
0x0000000000449416 : mov edx, 0 ; cmove rax, rdx ; pop rbx ; ret
0x0000000000489c49 : mov edx, 0 ; cmp rax, -1 ; cmove rax, rdx ; ret
0x0000000000413dc6 : mov edx, 0x130 ; pop rbx ; ret
0x0000000000486be1 : mov edx, 0x21c ; call 0x402e17
0x0000000000456358 : mov edx, 0x2d8 ; call 0x402e17
0x0000000000436217 : mov edx, 0x46f00ff2 ; retf 0xff3
0x0000000000436212 : mov edx, 0x477f0ff3 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x000000000047d352 : mov edx, 0x48000001 ; bsr eax, eax ; add rax, rdi ; ret
0x0000000000417dac : mov edx, 0x48001f0f ; cmp dword ptr [rdi + 0x38], 0 ; je 0x417dcc ; ret
0x0000000000430ff4 : mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x0000000000431012 : mov edx, 0x4f7f0ff3 ; retf 0x894c
0x0000000000434497 : mov edx, 0x63490007 ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000044d6f6 : mov edx, 0x64 ; test eax, eax ; cmove eax, edx ; ret
0x000000000044a76b : mov edx, 0x8000 ; jmp 0x44a576
0x000000000045674e : mov edx, 0x89fffff3 ; retf 0xe283
0x00000000004c377e : mov edx, 0xcac982a4 ; call 0xffffffffaf0ed5fe
0x000000000040eeb3 : mov edx, 0xf000000 ; add eax, 0x8944c689 ; ret 0xeab8
0x000000000042e519 : mov edx, 0xf66bab2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004a7641 : mov edx, 0xfc0c7 ; add byte ptr [rax], al ; syscall
0x000000000045c5cf : mov edx, 0xffffffe0 ; mov qword ptr fs:[rdx], rax ; ret
0x00000000004525c7 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000044d84d : mov edx, 1 ; mov eax, 0xca ; syscall
0x00000000004889ac : mov edx, 1 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000044a6de : mov edx, 4 ; jmp 0x44a576
0x000000000045c9c1 : mov edx, 8 ; mov eax, 0xe ; syscall
0x000000000045c864 : mov edx, 8 ; mov eax, ecx ; syscall
0x000000000047ad7c : mov edx, dword ptr [rax] ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000047e6b4 : mov edx, dword ptr [rax] ; cmp edx, esi ; je 0x47e6c9 ; test edx, edx ; jne 0x47e6bb ; ret
0x000000000045a04a : mov edx, dword ptr [rbp - 0x98] ; mov rdi, r14 ; call rdx
0x00000000004012c8 : mov edx, dword ptr [rbp - 4] ; mov dword ptr [rax], edx ; nop ; leave ; ret
0x00000000004a95d0 : mov edx, dword ptr [rbp] ; call r12
0x00000000004981d9 : mov edx, dword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x000000000043fd3f : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000043e46d : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000004981ed : mov edx, dword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000498254 : mov edx, dword ptr [rdi + 0x448] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x00000000004aa4b9 : mov edx, dword ptr [rdi] ; mov rdi, r13 ; call r14
0x0000000000420963 : mov edx, dword ptr [rdx + 0x870] ; cmp rdx, r8 ; jne 0x42093c ; ret
0x00000000004a0cc4 : mov edx, dword ptr [rip + 0x2395ee] ; add word ptr [rdx + rax*2], 1 ; ret
0x0000000000436a00 : mov edx, dword ptr [rsi + 1] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000436990 : mov edx, dword ptr [rsi + 2] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000445b02 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x00000000004454d2 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x0000000000436920 : mov edx, dword ptr [rsi + 3] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004454c3 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000445534 : mov edx, dword ptr [rsi + 5] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000445544 : mov edx, dword ptr [rsi + 6] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000445513 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000445554 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x0000000000445523 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000445504 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x00000000004b10c0 : mov edx, dword ptr [rsi - 0x69810007] ; stc ; push qword ptr [rsi - 0x69] ; stc ; jmp rsi
0x00000000004309d1 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000430d90 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004309c4 : mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430ba4 : mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430d84 : mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004307e4 : mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430f90 : mov edx, dword ptr [rsi - 5] ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431190 : mov edx, dword ptr [rsi - 6] ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431390 : mov edx, dword ptr [rsi - 7] ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430605 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000430f75 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000431175 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000431375 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000430621 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000445ac0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x0000000000436a70 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000445b11 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x00000000004368b1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000445aa1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x0000000000445481 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000048c919 : mov edx, dword ptr [rsp + 0x10] ; call rdx
0x00000000004a8709 : mov edx, dword ptr [rsp] ; mov edi, 1 ; call rax
0x000000000044948c : mov edx, eax ; and edx, 0xf ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x000000000041351d : mov edx, eax ; jmp 0x4134bf
0x0000000000424839 : mov edx, eax ; jmp 0x4247ec
0x000000000044a6af : mov edx, eax ; jmp 0x44a574
0x0000000000457e3a : mov edx, eax ; jmp 0x457df1
0x0000000000457f71 : mov edx, eax ; jmp 0x457f30
0x000000000045823f : mov edx, eax ; jmp 0x4581f6
0x00000000004582b6 : mov edx, eax ; jmp 0x45826d
0x000000000047215c : mov edx, eax ; jmp 0x47210e
0x00000000004790b2 : mov edx, eax ; jmp 0x479080
0x000000000048017e : mov edx, eax ; jmp 0x480172
0x000000000040eebc : mov edx, eax ; mov eax, 0xea ; syscall
0x000000000044aeee : mov edx, eax ; mov eax, 3 ; syscall
0x000000000041962e : mov edx, eax ; mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x419633 ; ret
0x000000000047f91d : mov edx, eax ; mov rdx, rcx ; mov eax, 0x106 ; syscall
0x00000000004a5490 : mov edx, ebp ; mov qword ptr [rsp], r8 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000450243 : mov edx, ebp ; mov rsi, qword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x00000000004a5339 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x00000000004a540d : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x00000000004a54e9 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x00000000004a52f3 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000466afe : mov edx, ebp ; mov rsi, r14 ; mov rdi, qword ptr [rbp - 0xc0] ; call rax
0x00000000004aa6d8 : mov edx, ebx ; mov rsi, qword ptr [r15] ; mov rdi, qword ptr [rsp + 0x10] ; call r14
0x000000000047f920 : mov edx, ecx ; mov eax, 0x106 ; syscall
0x000000000044d771 : mov edx, ecx ; mov eax, 0x19 ; syscall
0x0000000000448f38 : mov edx, edi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000047e439 : mov edx, esi ; lea r9, [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x000000000044aa22 : mov edx, esi ; mov rsi, rdi ; mov edi, 0xffffff9c ; syscall
0x000000000040f4d9 : mov edx, esp ; call 0x40f178
0x000000000047fb8d : mov edx, esp ; mov esi, 0x5401 ; mov eax, ecx ; syscall
0x000000000044ab56 : mov edx, esp ; mov r8d, eax ; mov rsi, rbp ; mov edi, ebx ; xor eax, eax ; syscall
0x0000000000422d4d : mov edx, esp ; mov rsi, rbx ; mov rdi, r13 ; call 0x41ef9a
0x000000000040eebb : mov edx, r8d ; mov eax, 0xea ; syscall
0x00000000004576e9 : mov es, edx ; add eax, 0x29480000 ; ret 0x349
0x0000000000454c32 : mov es, word ptr [rax + rax] ; add bh, dh ; ret 0
0x00000000004d0da9 : mov es, word ptr [rax] ; add ah, dh ; lahf ; sti ; call rdx
0x00000000004d0d95 : mov es, word ptr [rax] ; add al, bl ; lahf ; sti ; jmp qword ptr [rcx]
0x000000000047fd59 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x0000000000437577 : mov es, word ptr [rdi] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000044ad72 : mov esi, 0x10 ; mov eax, 0x48 ; syscall
0x00000000004a8824 : mov esi, 0x1a ; mov edi, 1 ; call r14
0x00000000004627c9 : mov esi, 0x3d8d48c7 ; outsb dx, byte ptr [rsi] ; retf
0x0000000000462774 : mov esi, 0x3d8d48c7 ; ret
0x00000000004787a2 : mov esi, 0x48000473 ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x00000000004524fc : mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000004c5286 : mov esi, 0x497b96cc ; retf 0x99e0
0x000000000048cb37 : mov esi, 0x4c8d4803 ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000047fb8f : mov esi, 0x5401 ; mov eax, ecx ; syscall
0x00000000004c52ba : mov esi, 0x5fd2fe07 ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000433f20 : mov esi, 0x63490007 ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004c5323 : mov esi, 0x6400fd4c ; retf 0xf64
0x00000000004c340a : mov esi, 0x6a25743d ; scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x000000000044d908 : mov esi, 0x80 ; syscall
0x00000000004858c5 : mov esi, 0x81 ; mov eax, 0xca ; syscall
0x00000000004516b2 : mov esi, 0x83480147 ; ret
0x0000000000423a8a : mov esi, 0x85002b6e ; ror byte ptr [rdi], 0x85 ; ret
0x000000000048e113 : mov esi, 0x8941240c ; retf
0x00000000004041fb : mov esi, 0x894cffbf ; imul eax ; retf 0x1d1
0x00000000004a87b1 : mov esi, 0xa ; mov edi, 1 ; call r14
0x00000000004a87d9 : mov esi, 0xa ; mov edi, 1 ; call rax
0x0000000000488ab9 : mov esi, 0xaf0f4907 ; retf 0x14c
0x000000000046613e : mov esi, 0xc08349c8 ; add dword ptr [rcx], edi ; retf
0x00000000004c21de : mov esi, 0xc2c1c0bf ; ret
0x000000000048b271 : mov esi, 0xc3c829c2 ; mov eax, 1 ; ret
0x00000000004678dd : mov esi, 0xc7394406 ; ja 0x4678ca ; mov eax, r9d ; ret
0x000000000041b938 : mov esi, 0xc8bf002b ; or byte ptr [rax], al ; add al, ch ; retf
0x00000000004493a4 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x000000000042e219 : mov esi, 0xf66beb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004c3126 : mov esi, 0xfa1fb992 ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000004628dc : mov esi, 1 ; jmp rax
0x00000000004a8dbf : mov esi, 1 ; mov edi, 1 ; call rax
0x0000000000478c1c : mov esi, 1 ; mov rdi, rbx ; call rax
0x000000000044b9d8 : mov esi, 2 ; jmp rax
0x000000000044b9eb : mov esi, 3 ; pop rbp ; pop r12 ; jmp rax
0x0000000000403a53 : mov esi, dword ptr [r13 + r15*8 + 4] ; add rsi, qword ptr [rbp - 0x68] ; call 0x4004bb
0x000000000045aae4 : mov esi, dword ptr [rax + rsi*8] ; test rsi, rsi ; je 0x45aaf6 ; call rsi
0x000000000044bf79 : mov esi, dword ptr [rax] ; mov rdi, qword ptr [rbp - 0x58] ; mov r12d, r14d ; call r15
0x0000000000403a54 : mov esi, dword ptr [rbp + rdi*8 + 4] ; add rsi, qword ptr [rbp - 0x68] ; call 0x4004ba
0x00000000004a8dfd : mov esi, dword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x0000000000450b2e : mov esi, dword ptr [rbp - 0x70] ; call rsi
0x00000000004aa4b5 : mov esi, dword ptr [rbx + 8] ; mov rdx, qword ptr [r15] ; mov rdi, r13 ; call r14
0x000000000044bb3e : mov esi, dword ptr [rbx] ; mov rdi, qword ptr [rsp + 8] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000040f226 : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [r13] ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004aa6db : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [rsp + 0x10] ; call r14
0x000000000046cdc8 : mov esi, dword ptr [rdx + 8] ; lea rax, [rsi + 8] ; mov qword ptr [rdx + 8], rax ; jmp 0x46cdac
0x00000000004a9585 : mov esi, dword ptr [rsi] ; call r12
0x00000000004482a3 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000043986a : mov esi, dword ptr [rsi] ; mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000448294 : mov esi, dword ptr [rsi] ; mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000048426b : mov esi, dword ptr [rsp + 0x18] ; add rdi, qword ptr [rsp + 8] ; call 0x4004bb
0x0000000000450246 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x000000000047e58d : mov esi, dword ptr [rsp + 0x18] ; mov rdi, rbp ; mov r9, r14 ; call rbx
0x0000000000420d01 : mov esi, dword ptr [rsp + 0x28] ; add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x0000000000452920 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000423bb1 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000004531fc : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x00000000004533d4 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000004536be : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x0000000000453cf6 : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000456cba : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000452f04 : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000455135 : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x00000000004578e1 : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000004215c9 : mov esi, dword ptr [rsp + 0x68] ; call rax
0x00000000004ad929 : mov esi, dword ptr [rsp + 0x98] ; mov rdi, r13 ; call rax
0x00000000004ad089 : mov esi, dword ptr [rsp + 0x98] ; mov rdi, r15 ; call rax
0x00000000004876b0 : mov esi, eax ; call 0x423924
0x000000000040eeb9 : mov esi, eax ; mov edx, r8d ; mov eax, 0xea ; syscall
0x00000000004005a9 : mov esi, eax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005b8 ; ret
0x00000000004039b9 : mov esi, ebp ; call 0x4004b4
0x000000000044ac2c : mov esi, ebp ; mov edi, ebx ; mov eax, 1 ; syscall
0x000000000044ab5c : mov esi, ebp ; mov edi, ebx ; xor eax, eax ; syscall
0x0000000000424831 : mov esi, ebp ; mov rdi, rax ; call rcx
0x000000000044b857 : mov esi, ebp ; mov rdi, rbp ; mov eax, 9 ; syscall
0x00000000004231e2 : mov esi, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x00000000004211f5 : mov esi, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x00000000004137f9 : mov esi, ebx ; mov edi, r13d ; mov eax, r9d ; syscall
0x0000000000422d50 : mov esi, ebx ; mov rdi, r13 ; call 0x41ef97
0x00000000004039b2 : mov esi, ebx ; sub r12, 1 ; mov r14, r13 ; call 0x4004bb
0x0000000000489db0 : mov esi, ebx ; syscall
0x00000000004196da : mov esi, ecx ; add rax, rsi ; mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x000000000040eed9 : mov esi, ecx ; mov edi, 2 ; mov eax, 0xe ; syscall
0x00000000004afa2d : mov esi, edi ; jmp qword ptr [rax]
0x000000000044b695 : mov esi, edi ; mov eax, 0x12e ; xor edi, edi ; syscall
0x000000000044a9a2 : mov esi, edi ; mov edi, 0xffffff9c ; syscall
0x00000000004a947a : mov esi, edi ; mov edi, 1 ; jmp rax
0x000000000045f6f8 : mov esi, edi ; mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x000000000040f2b6 : mov esi, edi ; mov rdi, r13 ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000046a40d : mov esi, edi ; mov rdi, rbp ; call 0x4004cc
0x0000000000488a13 : mov esi, edx ; cmp rcx, rsi ; jne 0x4889f8 ; ret
0x000000000044a8cc : mov esi, edx ; mov eax, 4 ; syscall
0x000000000044a91a : mov esi, edx ; mov eax, 5 ; syscall
0x000000000047f8cc : mov esi, edx ; mov eax, 6 ; syscall
0x0000000000403a9e : mov esi, esi ; add rsi, qword ptr [rbp - 0x68] ; call 0x4004b8
0x0000000000466b01 : mov esi, esi ; mov rdi, qword ptr [rbp - 0xc0] ; call rax
0x00000000004a94d1 : mov esi, esi ; mov rdi, r12 ; call r15
0x000000000044a5ae : mov esi, esp ; mov edi, 1 ; mov eax, 0xe5 ; syscall
0x0000000000413a54 : mov esi, esp ; mov edi, dword ptr [rbp - 0x84] ; mov eax, r13d ; syscall
0x00000000004a533c : mov esi, esp ; mov edi, ebp ; call qword ptr [r14]
0x0000000000402bfc : mov esi, esp ; mov edi, ebp ; call qword ptr [r15 + rbx*8]
0x00000000004a5410 : mov esi, esp ; mov edi, ebp ; call qword ptr [rax]
0x00000000004a54ec : mov esi, esp ; mov edi, ebp ; call qword ptr [rcx]
0x00000000004a52f6 : mov esi, esp ; mov edi, ebp ; call rax
0x000000000047addc : mov esi, esp ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000047addb : mov esi, r12d ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000040e5fb : mov esp, 0x24448b48 ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000042c6b1 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000042c6e1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000042c6d1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000004340c8 : mov esp, 0x63490007 ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000405331 : mov esp, 0x8024 ; add byte ptr [rcx], dh ; imul al ; ret 0xbfac
0x0000000000418cd2 : mov esp, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x000000000045311d : mov esp, 0x9824 ; add byte ptr [rax + 0xf], cl ; ret
0x000000000045e410 : mov esp, 0xa750027 ; jmp 0x45e442
0x000000000045359f : mov esp, 0xa824 ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004be658 : mov esp, 0xbe000005 ; add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x000000000042cbd2 : mov esp, 0xc08348c0 ; add rax, rdi ; vzeroupper ; ret
0x000000000042cbc2 : mov esp, 0xc08348c0 ; and byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x000000000042c6f1 : mov esp, 0xc22948c0 ; jbe 0x42c73a ; add rax, rdi ; ret
0x000000000042c701 : mov esp, 0xc22948c0 ; jbe 0x42c73c ; lea rax, [rdi + rax + 0x10] ; ret
0x000000000042c711 : mov esp, 0xc22948c0 ; jbe 0x42c73c ; lea rax, [rdi + rax + 0x20] ; ret
0x000000000042c721 : mov esp, 0xc22948c0 ; jbe 0x42c73c ; lea rax, [rdi + rax + 0x30] ; ret
0x0000000000441ae5 : mov esp, 0xc80148c0 ; add rax, rdi ; vzeroupper ; ret
0x0000000000441df3 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x000000000047e878 : mov esp, 0xd00148d2 ; sub rax, rdi ; shr rax, 2 ; ret
0x0000000000479a24 : mov esp, 0xd824 ; add byte ptr [rax - 0x39], cl ; ret 0x8c20
0x00000000004a8a41 : mov esp, 0xd837 ; add byte ptr [rax], al ; je 0x4a8a2f ; ret
0x000000000042e419 : mov esp, 0xf66bcb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042c79b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x000000000042cc57 : mov esp, 0xf80148c0 ; add rax, rcx ; vzeroupper ; ret
0x000000000042c6c1 : mov esp, 0xf80148c0 ; ret
0x0000000000441f02 : mov esp, 0xf80148c0 ; sub rax, rdx ; vzeroupper ; ret
0x000000000042cbb2 : mov esp, 0xf80148c0 ; vzeroupper ; ret
0x0000000000400806 : mov esp, eax ; call 0x449398
0x00000000004006cf : mov esp, eax ; call 0x449858
0x000000000047034c : mov esp, eax ; call 0x47c564
0x000000000048ca3a : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x00000000004a8f87 : mov esp, ecx ; ret
0x000000000044b016 : mov esp, edi ; mov rdi, r12 ; mov eax, 0x4f ; syscall
0x000000000044bf80 : mov esp, esi ; call r15
0x00000000004543ad : mov fs, word ptr [rbx] ; add eax, 0x29480000 ; ret 0x349
0x000000000045892d : mov gs, esi ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x00000000004a66f3 : mov qword ptr [r10], r8 ; ret
0x0000000000405c5e : mov qword ptr [r12 + 0x60], rax ; jmp 0x4056df
0x000000000041ba81 : mov qword ptr [r8], rdx ; mov rax, rdx ; add rsp, 8 ; ret
0x0000000000439860 : mov qword ptr [r9 - 8], rcx ; ret
0x000000000044da40 : mov qword ptr [rax + 0x10], rcx ; mov qword ptr [rax + 8], rdx ; ret
0x000000000047aa28 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000047aa68 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000401cce : mov qword ptr [rax + 0x18], 0 ; nop ; leave ; ret
0x000000000047ba67 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000044daa6 : mov qword ptr [rax + 0x20], rcx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000044dac0 : mov qword ptr [rax + 0x20], rsi ; ret
0x000000000047b95d : mov qword ptr [rax + 0x38], r12 ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047aa2c : mov qword ptr [rax + 0x40], rcx ; ret
0x000000000047bae9 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000418754 : mov qword ptr [rax + 8], 0 ; ret
0x000000000044da44 : mov qword ptr [rax + 8], rdx ; ret
0x00000000004981fc : mov qword ptr [rax], rdi ; pop rbx ; ret
0x000000000049814c : mov qword ptr [rax], rdx ; add rsp, 8 ; ret
0x000000000047af5c : mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047aa25 : mov qword ptr [rax], rdx ; mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000047aa65 : mov qword ptr [rax], rdx ; mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000004981f0 : mov qword ptr [rax], rdx ; pop rbx ; ret
0x00000000004a8aa1 : mov qword ptr [rax], rdx ; ret
0x000000000047bdda : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000486a00 : mov qword ptr [rbp - 0x100], r11 ; call r10
0x0000000000461996 : mov qword ptr [rbp - 0x4d8], 0 ; jmp rax
0x0000000000477095 : mov qword ptr [rbp - 0x670], rax ; jmp 0x473b2b
0x0000000000475606 : mov qword ptr [rbp - 0x690], rax ; xor eax, eax ; jmp 0x47186f
0x000000000047803d : mov qword ptr [rbp - 0x6d0], r15 ; jmp 0x478086
0x000000000047803c : mov qword ptr [rbp - 0x6d0], r15 ; jmp 0x478087
0x000000000048b34e : mov qword ptr [rbp - 0x78], rax ; mov eax, 0x15 ; syscall
0x00000000004040f6 : mov qword ptr [rbp - 0x78], rdx ; call 0x420b16
0x00000000004873a0 : mov qword ptr [rbp - 0xe0], r11 ; call r10
0x00000000004a427b : mov qword ptr [rbp - 0xf0], rcx ; call 0x4004f1
0x0000000000419568 : mov qword ptr [rbp], rax ; mov qword ptr [rbx + 0x60], rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047c964 : mov qword ptr [rbp], rax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045a1d1 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000413d46 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x000000000048bffd : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000041412e : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000489ced : mov qword ptr [rbx + 0x10], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a14d2 : mov qword ptr [rbx + 0x18], 0 ; jmp 0x4a14a8
0x0000000000489ce9 : mov qword ptr [rbx + 0x18], r12 ; mov qword ptr [rbx + 0x10], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048bf32 : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000004a3cb4 : mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x00000000004a3d88 : mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000045a2fe : mov qword ptr [rbx + 0x20], rdx ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000417dec : mov qword ptr [rbx + 0x40], r12 ; mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004178d0 : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x000000000047bc99 : mov qword ptr [rbx + 0x60], rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041956c : mov qword ptr [rbx + 0x60], rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047c6bb : mov qword ptr [rbx + 8], 0x400 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000489a76 : mov qword ptr [rbx + 8], rax ; jmp 0x489855
0x0000000000413d42 : mov qword ptr [rbx + 8], rax ; mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x000000000041412a : mov qword ptr [rbx + 8], rax ; mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x00000000004897d8 : mov qword ptr [rbx + 8], rax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000413430 : mov qword ptr [rbx + 8], rdx ; movzx edx, byte ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x00000000004a0f92 : mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004a5ce8 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000047036d : mov qword ptr [rbx], rdx ; mov byte ptr [rax], bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004114d0 : mov qword ptr [rcx + 0x130], rdx ; ret
0x0000000000464a97 : mov qword ptr [rcx + rdx*8], rax ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000049620e : mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000445cdc : mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x17] ; ret
0x0000000000445cfc : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; lea rax, [rdi + 0x18] ; ret
0x000000000044564c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000044562c : mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000445d3f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1a] ; ret
0x000000000044568f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000445d5f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1b] ; ret
0x00000000004456af : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000445d20 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x19] ; ret
0x0000000000445670 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000004177b2 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x00000000004177de : mov qword ptr [rdi + 0x18], rcx ; mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000004859a4 : mov qword ptr [rdi + 0x300], rax ; ret
0x0000000000485976 : mov qword ptr [rdi + 0x308], rax ; ret
0x00000000004177ae : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x00000000004177e2 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000004a8ae0 : mov qword ptr [rdi + 0x98], rsi ; ret
0x0000000000418591 : mov qword ptr [rdi + 0xa8], 0 ; ret
0x0000000000445c9c : mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x15] ; ret
0x00000000004455ec : mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000445cbc : mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x16] ; ret
0x000000000044560c : mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000436847 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004367d7 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000436767 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004366f7 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000445b9a : mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xc] ; ret
0x0000000000436687 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000044553a : mov qword ptr [rdi + 5], rdx ; ret
0x0000000000445bba : mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xd] ; ret
0x0000000000436617 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000044554a : mov qword ptr [rdi + 6], rdx ; ret
0x0000000000445bda : mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xe] ; ret
0x00000000004365a7 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000044555a : mov qword ptr [rdi + 7], rdx ; ret
0x000000000049776f : mov qword ptr [rdi + 8], r10 ; mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000004959a3 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000496207 : mov qword ptr [rdi + 8], r8 ; shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000497a82 : mov qword ptr [rdi + 8], r9 ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x0000000000496193 : mov qword ptr [rdi + 8], r9 ; ret
0x0000000000497a3d : mov qword ptr [rdi + 8], rax ; mov eax, 2 ; ret
0x00000000004177b6 : mov qword ptr [rdi + 8], rax ; ret
0x000000000049675c : mov qword ptr [rdi + r11*8 + 8], r9 ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000044900a : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rcx ; ret
0x0000000000449189 : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x0000000000448296 : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x00000000004a8a8b : mov qword ptr [rdi + rsi*8], rdx ; ret
0x00000000004304b4 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004304f2 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004960fe : mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000430667 : mov qword ptr [rdi - 0x11], r11 ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430763 : mov qword ptr [rdi - 0x11], r11 ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004306af : mov qword ptr [rdi - 0x11], r11 ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430837 : mov qword ptr [rdi - 0x12], r11 ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430a17 : mov qword ptr [rdi - 0x13], r11 ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430c07 : mov qword ptr [rdi - 0x14], r11 ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430dd8 : mov qword ptr [rdi - 0x15], r11 ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000430fd8 : mov qword ptr [rdi - 0x16], r11 ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004311d8 : mov qword ptr [rdi - 0x17], r11 ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004304b0 : mov qword ptr [rdi - 0x18], r10 ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004304ee : mov qword ptr [rdi - 0x18], r10 ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043083b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000436057 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430a1b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435fd7 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430c0b : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435f57 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430ddc : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435ec8 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000430fdc : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435e38 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004311dc : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435da8 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004960f7 : mov qword ptr [rdi - 8], r8 ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000496089 : mov qword ptr [rdi - 8], r9 ; ret
0x00000000004304b8 : mov qword ptr [rdi - 8], rcx ; ret
0x00000000004304f6 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000043066b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430767 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004306b3 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004360d7 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000046a179 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046a0a9 : mov qword ptr [rdi], r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000496083 : mov qword ptr [rdi], r8 ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x000000000049618d : mov qword ptr [rdi], r8 ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000496058 : mov qword ptr [rdi], r9 ; ret
0x0000000000445b26 : mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x0000000000445b56 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x0000000000445516 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000445b76 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x0000000000445526 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000445b97 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xc] ; ret
0x0000000000445537 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000445bb7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xd] ; ret
0x0000000000445547 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000445bd7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xe] ; ret
0x0000000000445557 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x0000000000445b37 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; lea rax, [rdi + 9] ; ret
0x0000000000445507 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x00000000004365ab : mov qword ptr [rdi], rcx ; ret
0x000000000044918e : mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x0000000000445b13 : mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x00000000004368b3 : mov qword ptr [rdi], rdx ; ret
0x0000000000497805 : mov qword ptr [rdi], rsi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000043985d : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000044829b : mov qword ptr [rdi], rsi ; ret
0x0000000000413dc4 : mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x000000000047a65d : mov qword ptr [rdx + 0x20], rax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x00000000004450ba : mov qword ptr [rdx + 5], rax ; lea rax, [rdx + 0xc] ; ret
0x00000000004438aa : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x00000000004450da : mov qword ptr [rdx + 6], rax ; lea rax, [rdx + 0xd] ; ret
0x00000000004438ca : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x00000000004450fa : mov qword ptr [rdx + 7], rax ; lea rax, [rdx + 0xe] ; ret
0x00000000004438ea : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000046cdcf : mov qword ptr [rdx + 8], rax ; jmp 0x46cda5
0x0000000000444f8a : mov qword ptr [rdx + 8], rax ; lea rax, [rdx + 0xf] ; ret
0x00000000004437da : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x00000000004196df : mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x0000000000444f33 : mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x0000000000443863 : mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000443873 : mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000443883 : mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000443893 : mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000443783 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000004981dc : mov qword ptr [rdx], rax ; pop rbx ; ret
0x0000000000419647 : mov qword ptr [rdx], rax ; ret
0x00000000004ab9de : mov qword ptr [rip + 0x22e42b], rbx ; jne 0x4ab9d2 ; pop rbx ; ret
0x0000000000497d27 : mov qword ptr [rip + 0x24247a], rax ; ret
0x0000000000497d0c : mov qword ptr [rip + 0x242495], rax ; add rsp, 8 ; ret
0x0000000000489680 : mov qword ptr [rip + 0x250e69], rax ; add rsp, 8 ; ret
0x00000000004895c4 : mov qword ptr [rip + 0x250f25], rax ; ret
0x000000000045c5a7 : mov qword ptr [rip + 0x27c50a], rdx ; je 0x45c5c2 ; ret
0x0000000000420af5 : mov qword ptr [rip + 0x2b6d64], rax ; ret
0x000000000041aa1b : mov qword ptr [rip + 0x2bce3e], rax ; ret
0x000000000041a516 : mov qword ptr [rip + 0x2bd2d3], rax ; ret
0x000000000041a4ee : mov qword ptr [rip + 0x2bd2f3], rax ; ret
0x000000000041a4ce : mov qword ptr [rip + 0x2bd30b], rax ; ret
0x000000000041a3c4 : mov qword ptr [rip + 0x2bd47d], rax ; ret
0x000000000041a3b4 : mov qword ptr [rip + 0x2bd485], rax ; ret
0x000000000041a3a2 : mov qword ptr [rip + 0x2bd487], rdx ; ret
0x000000000041a364 : mov qword ptr [rip + 0x2bd48d], rax ; ret
0x000000000041a354 : mov qword ptr [rip + 0x2bd4a5], rax ; ret
0x0000000000419a7b : mov qword ptr [rip + 0x2c03b2], 0 ; ret
0x0000000000402ae2 : mov qword ptr [rsi + 0x10], rsi ; syscall
0x0000000000482b90 : mov qword ptr [rsi], -1 ; xor eax, eax ; ret
0x0000000000489731 : mov qword ptr [rsi], rax ; ret
0x0000000000488a78 : mov qword ptr [rsi], rdi ; mov rax, rcx ; ret
0x000000000045eb19 : mov qword ptr [rsi], rdi ; xor eax, eax ; jmp 0x45eae7
0x0000000000402ada : mov qword ptr [rsi], rsi ; mov eax, 0x9e ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000041dcb9 : mov qword ptr [rsp + 0x10], r11 ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000040a855 : mov qword ptr [rsp + 0x10], rax ; mov qword ptr [rsp + 8], rcx ; call 0x40736c
0x000000000041dd76 : mov qword ptr [rsp + 0x10], rdx ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000044ae43 : mov qword ptr [rsp + 0x20], rax ; je 0x44ae7c ; mov eax, 0x48 ; syscall
0x0000000000452beb : mov qword ptr [rsp + 0x50], rax ; call 0x44eec7
0x000000000041dcbe : mov qword ptr [rsp + 8], rax ; call rcx
0x000000000040a85a : mov qword ptr [rsp + 8], rcx ; call 0x407367
0x00000000004123bd : mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x00000000004a3524 : mov qword ptr [rsp + 8], rsi ; call 7
0x000000000049792e : mov qword ptr [rsp - 8], rdx ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000004a54e4 : mov qword ptr [rsp], r8 ; mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x00000000004a5492 : mov qword ptr [rsp], r8 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000414621 : mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x0000000000417934 : mov qword ptr [rsp], rdi ; call 0x413bc6
0x000000000041ba80 : mov qword ptr fs:[r8], rdx ; mov rax, rdx ; add rsp, 8 ; ret
0x000000000045c5d5 : mov qword ptr fs:[rdx], rax ; ret
0x0000000000448295 : mov qword ptr ss:[rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000044d770 : mov r10, rcx ; mov eax, 0x19 ; syscall
0x0000000000436216 : mov r10d, 0x46f00ff2 ; retf 0xff3
0x0000000000431011 : mov r10d, 0x4f7f0ff3 ; retf 0x894c
0x00000000004c377d : mov r10d, 0xcac982a4 ; call 0xffffffffaf0ed5ff
0x00000000004c377c : mov r10d, 0xcac982a4 ; call 0xffffffffaf0ed600
0x000000000045c9c0 : mov r10d, 8 ; mov eax, 0xe ; syscall
0x000000000045c863 : mov r10d, 8 ; mov eax, ecx ; syscall
0x000000000047f91c : mov r10d, r8d ; mov rdx, rcx ; mov eax, 0x106 ; syscall
0x0000000000436296 : mov r11d, 0x46f00ff2 ; retf
0x0000000000430e11 : mov r11d, 0x4f7f0ff3 ; retf
0x0000000000410663 : mov r11d, 1 ; jmp 0x410634
0x000000000045ea7b : mov r11d, 1 ; jmp 0x45ea4c
0x0000000000400805 : mov r12, rax ; call 0x449399
0x00000000004006ce : mov r12, rax ; call 0x449859
0x000000000047034b : mov r12, rax ; call 0x47c565
0x000000000044b015 : mov r12, rdi ; mov rdi, r12 ; mov eax, 0x4f ; syscall
0x000000000044bf7f : mov r12d, r14d ; call r15
0x00000000004a8dfc : mov r14, qword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x00000000004039b8 : mov r14, r13 ; call 0x4004b5
0x00000000004a8e00 : mov r15, qword ptr [rbp - 8] ; leave ; ret
0x00000000004a8f7e : mov r15, qword ptr [rbp - 8] ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000486b2e : mov r15, qword ptr [rbx] ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x00000000004069f8 : mov r15, r12 ; jmp 0x4069cb
0x00000000004a66f0 : mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x00000000004a6708 : mov r8, qword ptr [rax] ; lea rax, [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x0000000000449a04 : mov r8, rax ; mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x4499fc ; ret
0x00000000004a90ae : mov r8b, 0xe8 ; retf
0x0000000000404717 : mov r8b, r13b ; ret 0x57e
0x0000000000459d6b : mov r8d, 0xff514ee8 ; dec dword ptr [rcx + rcx*4 - 9] ; call rbx
0x0000000000483d08 : mov r8d, dword ptr [rsp + 0xc] ; jmp 0x483cc2
0x000000000044ab58 : mov r8d, eax ; mov rsi, rbp ; mov edi, ebx ; xor eax, eax ; syscall
0x000000000045024a : mov r9, r13 ; call rbx
0x000000000047e594 : mov r9, r14 ; call rbx
0x00000000004459df : mov r9b, 6 ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000048a050 : mov rax, -0x40 ; pop rbx ; mov eax, dword ptr fs:[rax] ; ret
0x0000000000418be0 : mov rax, -1 ; ret
0x000000000040041c : mov rax, 0 ; test rax, rax ; je 0x400436 ; call rax
0x000000000045c7a0 : mov rax, 0xf ; syscall
0x000000000047ebb0 : mov rax, 1 ; ret
0x000000000047ebc0 : mov rax, 2 ; ret
0x000000000047ebd0 : mov rax, 3 ; ret
0x000000000047ebe0 : mov rax, 4 ; ret
0x000000000047ebf0 : mov rax, 5 ; ret
0x000000000047ec00 : mov rax, 6 ; ret
0x000000000047ec10 : mov rax, 7 ; ret
0x00000000004a260e : mov rax, qword ptr [r12] ; add rax, qword ptr [rdx + 8] ; call rax
0x0000000000486f45 : mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x0000000000412949 : mov rax, qword ptr [rax + 0x130] ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000412950 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000047bef3 : mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000418697 : mov rax, qword ptr [rax + 0x68] ; test rax, rax ; jne 0x41869a ; ret
0x000000000048bdf0 : mov rax, qword ptr [rax + 8] ; ret
0x000000000045abdf : mov rax, qword ptr [rax + rbp*8] ; test rax, rax ; je 0x45abf3 ; call rax
0x000000000046d779 : mov rax, qword ptr [rax + rcx*8] ; mov ecx, 1 ; jmp rax
0x000000000045c5ee : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000046234c : mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000045c5eb : mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x00000000004a8a32 : mov rax, qword ptr [rax] ; ret
0x00000000004012c4 : mov rax, qword ptr [rbp - 0x20] ; mov edx, dword ptr [rbp - 4] ; mov dword ptr [rax], edx ; nop ; leave ; ret
0x000000000048693f : mov rax, qword ptr [rbp - 0xb8] ; add rax, r11 ; call rax
0x0000000000400bc7 : mov rax, qword ptr [rbp - 8] ; leave ; ret
0x0000000000486760 : mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000048661d : mov rax, qword ptr [rbx + 0x10] ; add rbx, 0x18 ; add rax, qword ptr [r14] ; call rax
0x000000000041791c : mov rax, qword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004981f8 : mov rax, qword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x00000000004981e8 : mov rax, qword ptr [rbx + 0x18] ; mov rdx, qword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000418008 : mov rax, qword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000452be8 : mov rax, qword ptr [rbx] ; mov qword ptr [rsp + 0x50], rax ; call 0x44eeca
0x00000000004450b6 : mov rax, qword ptr [rcx + 5] ; mov qword ptr [rdx + 5], rax ; lea rax, [rdx + 0xc] ; ret
0x00000000004438a6 : mov rax, qword ptr [rcx + 5] ; mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x00000000004450d6 : mov rax, qword ptr [rcx + 6] ; mov qword ptr [rdx + 6], rax ; lea rax, [rdx + 0xd] ; ret
0x00000000004438c6 : mov rax, qword ptr [rcx + 6] ; mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x00000000004450f6 : mov rax, qword ptr [rcx + 7] ; mov qword ptr [rdx + 7], rax ; lea rax, [rdx + 0xe] ; ret
0x00000000004438e6 : mov rax, qword ptr [rcx + 7] ; mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x0000000000444f86 : mov rax, qword ptr [rcx + 8] ; mov qword ptr [rdx + 8], rax ; lea rax, [rdx + 0xf] ; ret
0x00000000004437d6 : mov rax, qword ptr [rcx + 8] ; mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x0000000000444f30 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x0000000000443780 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000045bfe1 : mov rax, qword ptr [rdi + 0x20] ; mov rbx, rdi ; test rax, rax ; je 0x45bffb ; call rax
0x00000000004ac61c : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x4ac635 ; call rax
0x000000000047bef0 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000004199a0 : mov rax, qword ptr [rdi + 0x68] ; ret
0x00000000004a8a60 : mov rax, qword ptr [rdi + 0x90] ; ret
0x00000000004a8ab0 : mov rax, qword ptr [rdi + 0x98] ; ret
0x00000000004a8af0 : mov rax, qword ptr [rdi + 0xa0] ; ret
0x00000000004a8b50 : mov rax, qword ptr [rdi + 0xa8] ; ret
0x00000000004a8b40 : mov rax, qword ptr [rdi + 0xb0] ; ret
0x00000000004a8b00 : mov rax, qword ptr [rdi + 0xb8] ; ret
0x0000000000419ab6 : mov rax, qword ptr [rdi + 8] ; cmp rax, rdx ; jae 0x419aec ; movzx eax, byte ptr [rax] ; ret
0x000000000046288e : mov rax, qword ptr [rdi + rax*8] ; jmp rax
0x00000000004a3680 : mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x4a3699 ; ret
0x0000000000419644 : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000041a540 : mov rax, qword ptr [rdi] ; nop ; mov dword ptr [rip + 0x2bf96a], eax ; ret
0x000000000041a3c0 : mov rax, qword ptr [rdi] ; nop ; mov qword ptr [rip + 0x2bd47d], rax ; ret
0x000000000041a3b0 : mov rax, qword ptr [rdi] ; nop ; mov qword ptr [rip + 0x2bd485], rax ; ret
0x000000000041a360 : mov rax, qword ptr [rdi] ; nop ; mov qword ptr [rip + 0x2bd48d], rax ; ret
0x000000000041a350 : mov rax, qword ptr [rdi] ; nop ; mov qword ptr [rip + 0x2bd4a5], rax ; ret
0x0000000000477092 : mov rax, qword ptr [rdx] ; mov qword ptr [rbp - 0x670], rax ; jmp 0x473b2e
0x0000000000419630 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x419631 ; ret
0x000000000048972a : mov rax, qword ptr [rip + 0x250db7] ; mov qword ptr [rsi], rax ; ret
0x00000000004896b9 : mov rax, qword ptr [rip + 0x250e30] ; ret
0x0000000000459450 : mov rax, qword ptr [rip + 0x280b41] ; ret
0x0000000000450f50 : mov rax, qword ptr [rip + 0x289b11] ; ret
0x0000000000419980 : mov rax, qword ptr [rip + 0x2bd799] ; ret
0x00000000004a99a1 : mov rax, qword ptr [rsi + 0x10] ; ret
0x00000000004a6830 : mov rax, qword ptr [rsi + 0xa8] ; ret
0x00000000004a6803 : mov rax, qword ptr [rsi + 0xb0] ; ret
0x00000000004a6820 : mov rax, qword ptr [rsi + 0xb8] ; ret
0x00000000004a99c0 : mov rax, qword ptr [rsi + 8] ; ret
0x000000000046d73e : mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x00000000004628d8 : mov rax, qword ptr [rsi + rax*8] ; mov esi, 1 ; jmp rax
0x0000000000462f38 : mov rax, qword ptr [rsi + rax*8] ; xor esi, esi ; jmp rax
0x00000000004976cb : mov rax, qword ptr [rsi + rbx*8] ; lea r9, [rdx] ; jmp 0x49772b
0x00000000004a3aab : mov rax, qword ptr [rsi + rbx*8] ; lea r9, [rdx] ; jmp 0x4a3b0b
0x00000000004a8b25 : mov rax, qword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x000000000044bb45 : mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000402462 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000454b5b : mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000040f22c : mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004a6595 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x00000000004a6299 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000045c5ea : mov rax, qword ptr fs:[rax] ; mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000042361d : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004789b7 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044bf0d : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000414f19 : mov rax, r14 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000414eae : mov rax, r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041bbef : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004239ce : mov rax, r8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047ef93 : mov rax, r8 ; shr rax, 2 ; vzeroupper ; ret
0x000000000047db90 : mov rax, r8 ; vzeroupper ; ret
0x000000000044b9e8 : mov rax, rbp ; mov esi, 3 ; pop rbp ; pop r12 ; jmp rax
0x000000000041157a : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044c523 : mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000044b9d1 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x00000000004115b1 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000411692 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000415056 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a8c5a : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000004a3d46 : mov rax, rbx ; jne 0x4a3d66 ; add rsp, 0x40 ; pop rbx ; ret
0x00000000004a3e2d : mov rax, rbx ; jne 0x4a3e4e ; add rsp, 0x50 ; pop rbx ; ret
0x0000000000415aa1 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004159d4 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044b72f : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000413d4a : mov rax, rbx ; pop rbx ; ret
0x0000000000488a7b : mov rax, rcx ; ret
0x0000000000413c42 : mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000413c5a : mov rax, rdi ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041be84 : mov rax, rdi ; pop rbp ; pop r12 ; ret
0x0000000000413c73 : mov rax, rdi ; ret
0x000000000041ba84 : mov rax, rdx ; add rsp, 8 ; ret
0x000000000047f65a : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041b43c : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000449515 : mov rax, rdx ; pop rbx ; ret
0x000000000041ba90 : mov rax, rdx ; ret
0x0000000000479b10 : mov rax, rdx ; xor edx, edx ; div r13 ; mov rbp, rax ; jmp 0x479aeb
0x000000000041ef4c : mov rax, rsi ; pop rbx ; ret
0x000000000041ef80 : mov rax, rsi ; ret
0x00000000004a8f82 : mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004aa1c9 : mov rbp, qword ptr [rsp + 8] ; jmp 0x4aa1e9
0x000000000048ca3c : mov rbp, r9 ; nop ; jmp rdx
0x0000000000479b18 : mov rbp, rax ; jmp 0x479ae3
0x0000000000488745 : mov rbp, rax ; jmp 0x488718
0x00000000004a11e0 : mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000045bfe5 : mov rbx, rdi ; test rax, rax ; je 0x45bff7 ; call rax
0x000000000047f70f : mov rbx, rsi ; sub rsp, 8 ; syscall
0x0000000000489dac : mov rbx, rsp ; mov rsi, rbx ; syscall
0x0000000000439859 : mov rcx, qword ptr [rcx - 8] ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000445624 : mov rcx, qword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000004455e4 : mov rcx, qword ptr [rsi + 0xe] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000445604 : mov rcx, qword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000042eb06 : mov rcx, qword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x42eb3e ; xor eax, eax ; ret
0x0000000000435ec4 : mov rcx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000435e34 : mov rcx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000435da4 : mov rcx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004454f0 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000445510 : mov rcx, qword ptr [rsi] ; mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000445520 : mov rcx, qword ptr [rsi] ; mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000436844 : mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004367d4 : mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000436764 : mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004366f4 : mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000436684 : mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000436614 : mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004365a4 : mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000048bee6 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000048be74 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x58 ; jmp qword ptr [rax]
0x0000000000439858 : mov rcx, qword ptr ss:[rcx - 8] ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000047e075 : mov rcx, r13 ; mov rdi, qword ptr [r14] ; lea r9, [rsp + 0x28] ; call r12
0x000000000047c5d0 : mov rcx, rax ; jmp 0x47c59c
0x0000000000448271 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000457e30 : mov rcx, rsi ; je 0x457fe3 ; mov rdx, rax ; jmp 0x457dfb
0x0000000000458235 : mov rcx, rsi ; je 0x457fe3 ; mov rdx, rax ; jmp 0x458200
0x00000000004582ac : mov rcx, rsi ; je 0x457fe3 ; mov rdx, rax ; jmp 0x458277
0x000000000044c63b : mov rdi, qword ptr [r13] ; call r12
0x000000000040f228 : mov rdi, qword ptr [r13] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000047e078 : mov rdi, qword ptr [r14] ; lea r9, [rsp + 0x28] ; call r12
0x000000000040fcc3 : mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000044bf7b : mov rdi, qword ptr [rbp - 0x58] ; mov r12d, r14d ; call r15
0x000000000045f6fa : mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x000000000046ac2c : mov rdi, qword ptr [rbp - 0x8d0] ; call rax
0x0000000000466b03 : mov rdi, qword ptr [rbp - 0xc0] ; call rax
0x000000000044ba63 : mov rdi, qword ptr [rbp] ; call r12
0x000000000044ba3d : mov rdi, qword ptr [rbx] ; call r12
0x0000000000489705 : mov rdi, qword ptr [rdi + 8] ; test rdi, rdi ; jne 0x4896ea ; ret
0x00000000004aa6dd : mov rdi, qword ptr [rsp + 0x10] ; call r14
0x000000000048c913 : mov rdi, qword ptr [rsp + 0x18] ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x0000000000452924 : mov rdi, qword ptr [rsp + 0x20] ; call r15
0x00000000004527ef : mov rdi, qword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000453200 : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x00000000004533d8 : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000004536c2 : mov rdi, qword ptr [rsp + 0x38] ; call r12
0x0000000000453cfa : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000456cbe : mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000452f08 : mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000452c14 : mov rdi, qword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000455139 : mov rdi, qword ptr [rsp + 0x40] ; call r15
0x00000000004578e5 : mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000454b56 : mov rdi, qword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000041803a : mov rdi, qword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000044bb40 : mov rdi, qword ptr [rsp + 8] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000417945 : mov rdi, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004a957c : mov rdi, qword ptr [rsp] ; lea r14, [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x00000000004a95cb : mov rdi, qword ptr [rsp] ; mov rdx, qword ptr [rbp] ; call r12
0x0000000000463b0f : mov rdi, r12 ; call 0x47fd65
0x00000000004a94d3 : mov rdi, r12 ; call r15
0x000000000047bf7f : mov rdi, r12 ; call rbx
0x000000000044b018 : mov rdi, r12 ; mov eax, 0x4f ; syscall
0x0000000000422d52 : mov rdi, r13 ; call 0x41ef95
0x0000000000459c1b : mov rdi, r13 ; call r12
0x00000000004aa4bb : mov rdi, r13 ; call r14
0x00000000004ad930 : mov rdi, r13 ; call rax
0x000000000040f34d : mov rdi, r13 ; lea rbx, [r15 + rax] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000040f2b8 : mov rdi, r13 ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000459d72 : mov rdi, r14 ; call rbx
0x000000000045a050 : mov rdi, r14 ; call rdx
0x000000000041e2d0 : mov rdi, r14 ; mov dword ptr [rsp + 8], r10d ; call 0x41a57a
0x000000000040b159 : mov rdi, r15 ; call 0x4213d9
0x000000000047c257 : mov rdi, r15 ; call r12
0x00000000004123c2 : mov rdi, r15 ; call rax
0x0000000000450b2a : mov rdi, r15 ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x0000000000449d59 : mov rdi, rax ; call 0x4004c9
0x0000000000424833 : mov rdi, rax ; call rcx
0x000000000040eeaf : mov rdi, rax ; mov eax, 0xba ; syscall
0x000000000044a8c8 : mov rdi, rax ; mov rsi, rdx ; mov eax, 4 ; syscall
0x000000000047f8c8 : mov rdi, rax ; mov rsi, rdx ; mov eax, 6 ; syscall
0x0000000000423717 : mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x000000000046a40f : mov rdi, rbp ; call 0x4004ca
0x0000000000423bb5 : mov rdi, rbp ; call rax
0x000000000047e440 : mov rdi, rbp ; call rbx
0x000000000044b859 : mov rdi, rbp ; mov eax, 9 ; syscall
0x000000000047e591 : mov rdi, rbp ; mov r9, r14 ; call rbx
0x000000000044c51c : mov rdi, rbx ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000045ef91 : mov rdi, rbx ; call 0x400459
0x00000000004040d7 : mov rdi, rbx ; call 0x420b15
0x0000000000494fba : mov rdi, rbx ; call 0x492d49
0x000000000045054d : mov rdi, rbx ; call r14
0x0000000000414625 : mov rdi, rbx ; call rax
0x00000000004ab852 : mov rdi, rbx ; jne 0x4ab84b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004179dc : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000047adde : mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000004a4278 : mov rdi, rcx ; mov qword ptr [rbp - 0xf0], rcx ; call 0x4004f4
0x0000000000497b70 : mov rdi, rdx ; mov byte ptr [rsi], al ; jne 0x497b5a ; mov rax, rsi ; ret
0x00000000004040f3 : mov rdi, rdx ; mov qword ptr [rbp - 0x78], rdx ; call 0x420b19
0x000000000045c5ce : mov rdx, -0x20 ; mov qword ptr fs:[rdx], rax ; ret
0x00000000004a8708 : mov rdx, qword ptr [r12] ; mov edi, 1 ; call rax
0x00000000004aa4b8 : mov rdx, qword ptr [r15] ; mov rdi, r13 ; call r14
0x000000000045a049 : mov rdx, qword ptr [rbp - 0x98] ; mov rdi, r14 ; call rdx
0x00000000004a95cf : mov rdx, qword ptr [rbp] ; call r12
0x00000000004981d8 : mov rdx, qword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x00000000004981ec : mov rdx, qword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000498253 : mov rdx, qword ptr [rdi + 0x448] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x00000000004a0cc3 : mov rdx, qword ptr [rip + 0x2395ee] ; add word ptr [rdx + rax*2], 1 ; ret
0x0000000000445533 : mov rdx, qword ptr [rsi + 5] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000445543 : mov rdx, qword ptr [rsi + 6] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000445553 : mov rdx, qword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x0000000000430604 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000430f74 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000431174 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000431374 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000430620 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000445b10 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x00000000004368b0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000048c918 : mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x000000000040f4d8 : mov rdx, r12 ; call 0x40f179
0x0000000000422d4c : mov rdx, r12 ; mov rsi, rbx ; mov rdi, r13 ; call 0x41ef9b
0x00000000004a548f : mov rdx, r13 ; mov qword ptr [rsp], r8 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x00000000004a5338 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x00000000004a540c : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x00000000004a54e8 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x00000000004a52f2 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000047e438 : mov rdx, r14 ; lea r9, [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x00000000004790b1 : mov rdx, r8 ; jmp 0x479081
0x0000000000424838 : mov rdx, rax ; jmp 0x4247ed
0x000000000044a6ae : mov rdx, rax ; jmp 0x44a575
0x0000000000457e39 : mov rdx, rax ; jmp 0x457df2
0x0000000000457f70 : mov rdx, rax ; jmp 0x457f31
0x000000000045823e : mov rdx, rax ; jmp 0x4581f7
0x00000000004582b5 : mov rdx, rax ; jmp 0x45826e
0x000000000047215b : mov rdx, rax ; jmp 0x47210f
0x000000000048017d : mov rdx, rax ; jmp 0x480173
0x000000000041962d : mov rdx, rax ; mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x419634 ; ret
0x0000000000450242 : mov rdx, rbp ; mov rsi, qword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x00000000004aa6d7 : mov rdx, rbx ; mov rsi, qword ptr [r15] ; mov rdi, qword ptr [rsp + 0x10] ; call r14
0x000000000047f91f : mov rdx, rcx ; mov eax, 0x106 ; syscall
0x0000000000448f37 : mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000047fb8c : mov rdx, rsp ; mov esi, 0x5401 ; mov eax, ecx ; syscall
0x00000000004a9584 : mov rsi, qword ptr [r14] ; call r12
0x000000000040f225 : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [r13] ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004aa6da : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [rsp + 0x10] ; call r14
0x000000000045aae3 : mov rsi, qword ptr [rax + r14*8] ; test rsi, rsi ; je 0x45aaf7 ; call rsi
0x000000000045aae2 : mov rsi, qword ptr [rax + r14*8] ; test rsi, rsi ; je 0x45aaf8 ; call rsi
0x000000000044bf78 : mov rsi, qword ptr [rax] ; mov rdi, qword ptr [rbp - 0x58] ; mov r12d, r14d ; call r15
0x0000000000450b2d : mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x00000000004aa4b4 : mov rsi, qword ptr [rbx + 8] ; mov rdx, qword ptr [r15] ; mov rdi, r13 ; call r14
0x0000000000448293 : mov rsi, qword ptr [rsi] ; mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000048426a : mov rsi, qword ptr [rsp + 0x18] ; add rdi, qword ptr [rsp + 8] ; call 0x4004bc
0x0000000000450245 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x000000000047e58c : mov rsi, qword ptr [rsp + 0x18] ; mov rdi, rbp ; mov r9, r14 ; call rbx
0x0000000000420d00 : mov rsi, qword ptr [rsp + 0x28] ; add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x000000000045291f : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000423bb0 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000004531fb : mov rsi, qword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x00000000004533d3 : mov rsi, qword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000004536bd : mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x0000000000453cf5 : mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000456cb9 : mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000452f03 : mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000455134 : mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x00000000004578e0 : mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000004215c8 : mov rsi, qword ptr [rsp + 0x68] ; call rax
0x00000000004ad928 : mov rsi, qword ptr [rsp + 0x98] ; mov rdi, r13 ; call rax
0x00000000004ad088 : mov rsi, qword ptr [rsp + 0x98] ; mov rdi, r15 ; call rax
0x0000000000413a53 : mov rsi, r12 ; mov edi, dword ptr [rbp - 0x84] ; mov eax, r13d ; syscall
0x00000000004a533b : mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x0000000000402bfb : mov rsi, r12 ; mov edi, ebp ; call qword ptr [r15 + rbx*8]
0x00000000004a540f : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x00000000004a54eb : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x00000000004a52f5 : mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000044b856 : mov rsi, r13 ; mov rdi, rbp ; mov eax, 9 ; syscall
0x00000000004231e1 : mov rsi, r13 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x00000000004211f4 : mov rsi, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000466b00 : mov rsi, r14 ; mov rdi, qword ptr [rbp - 0xc0] ; call rax
0x00000000004a94d0 : mov rsi, r14 ; mov rdi, r12 ; call r15
0x000000000045f6f7 : mov rsi, r15 ; mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x000000000040f2b5 : mov rsi, r15 ; mov rdi, r13 ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004876af : mov rsi, rax ; call 0x423925
0x00000000004005a8 : mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005b9 ; ret
0x000000000044ac2b : mov rsi, rbp ; mov edi, ebx ; mov eax, 1 ; syscall
0x000000000044ab5b : mov rsi, rbp ; mov edi, ebx ; xor eax, eax ; syscall
0x0000000000424830 : mov rsi, rbp ; mov rdi, rax ; call rcx
0x00000000004137f8 : mov rsi, rbx ; mov edi, r13d ; mov eax, r9d ; syscall
0x0000000000422d4f : mov rsi, rbx ; mov rdi, r13 ; call 0x41ef98
0x00000000004039b1 : mov rsi, rbx ; sub r12, 1 ; mov r14, r13 ; call 0x4004bc
0x0000000000489daf : mov rsi, rbx ; syscall
0x000000000044a9a1 : mov rsi, rdi ; mov edi, 0xffffff9c ; syscall
0x00000000004a9479 : mov rsi, rdi ; mov edi, 1 ; jmp rax
0x0000000000488a12 : mov rsi, rdx ; cmp rcx, rsi ; jne 0x4889f9 ; ret
0x000000000044a8cb : mov rsi, rdx ; mov eax, 4 ; syscall
0x000000000044a919 : mov rsi, rdx ; mov eax, 5 ; syscall
0x000000000047f8cb : mov rsi, rdx ; mov eax, 6 ; syscall
0x000000000048ca39 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x00000000004a8f86 : mov rsp, rcx ; ret
0x00000000004b09d8 : mov spl, 0xf8 ; jmp rax
0x0000000000492b45 : mov ss, esi ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x000000000046e266 : mov ss, word ptr [rax + rax + 0x63490000] ; ret 0x8948
0x0000000000439885 : mov word ptr [r9 - 2], cx ; ret
0x00000000004ce7c8 : mov word ptr [rax], gs ; add byte ptr [rsi + rbp - 7], dh ; call qword ptr [rsi]
0x00000000004d12c8 : mov word ptr [rbx - 0x483c0000], ss ; sti ; call qword ptr [rdx]
0x0000000000445c1c : mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x11] ; ret
0x000000000044558c : mov word ptr [rdi + 0x10], cx ; ret
0x0000000000445d24 : mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x19] ; ret
0x0000000000445674 : mov word ptr [rdi + 0x18], cx ; ret
0x0000000000436ae7 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000445ae8 : mov word ptr [rdi + 4], dx ; lea rax, [rdi + 5] ; ret
0x00000000004454c8 : mov word ptr [rdi + 4], dx ; ret
0x0000000000445b3a : mov word ptr [rdi + 8], dx ; lea rax, [rdi + 9] ; ret
0x000000000044550a : mov word ptr [rdi + 8], dx ; ret
0x000000000044901a : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], cx ; ret
0x000000000044919f : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], cx ; vzeroupper ; ret
0x00000000004482b4 : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x0000000000430bbc : mov word ptr [rdi - 2], cx ; ret
0x00000000004309d4 : mov word ptr [rdi - 2], dx ; ret
0x0000000000430bb8 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000445ab3 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x0000000000445493 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000447ff2 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000436aeb : mov word ptr [rdi], cx ; ret
0x00000000004491a4 : mov word ptr [rdi], cx ; vzeroupper ; ret
0x0000000000445aa3 : mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x0000000000436b53 : mov word ptr [rdi], dx ; ret
0x0000000000439882 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x00000000004482b9 : mov word ptr [rdi], si ; ret
0x0000000000436c20 : mov word ptr [rdx + 0x63490007], ds ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000445008 : mov word ptr [rdx + 4], ax ; lea rax, [rdx + 5] ; ret
0x0000000000443848 : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x0000000000444fb3 : mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x0000000000443813 : mov word ptr [rdx], ax ; mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000443803 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000447ff5 : mov word ptr [rsi - 2], cx ; ret
0x0000000000405afb : mov word ptr [rsp + rcx*4], fs ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x00000000004482b3 : mov word ptr ss:[rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x00000000004114cc : movabs al, byte ptr [0x130918948000000] ; add byte ptr [rax], al ; ret
0x0000000000486d62 : movabs al, byte ptr [0x148a704634a0003] ; clc ; jmp rax
0x000000000047b903 : movabs al, byte ptr [0x30788348000000] ; je 0x47b91c ; ret
0x000000000044da3c : movabs al, byte ptr [0x4810488948ffffff] ; mov dword ptr [rax + 8], edx ; ret
0x00000000004981d4 : movabs al, byte ptr [0x4818538b48000000] ; mov dword ptr [rdx], eax ; pop rbx ; ret
0x0000000000485f8c : movabs al, byte ptr [0x5b0e78c085fffc59] ; ret
0x00000000004c5a3b : movabs al, byte ptr [0x6e6afa5694ec2e93] ; ja 0x4c59d4 ; ret 0x48f
0x0000000000448787 : movabs al, byte ptr [0x77f8c5237f7ec1c4] ; ret
0x00000000004b03e4 : movabs al, byte ptr [0x80fff85c10fff85c] ; pop rbx ; clc ; jmp qword ptr [rax]
0x000000000044e5ec : movabs al, byte ptr [0x8948c08548000374] ; ret
0x00000000004b01d8 : movabs al, byte ptr [0xa0fff85e20fff85e] ; pop rbp ; clc ; call qword ptr [rax]
0x00000000004b01d0 : movabs al, byte ptr [0xa0fff85f20fff85f] ; pop rsi ; clc ; jmp qword ptr [rax]
0x00000000004b01c8 : movabs al, byte ptr [0xa0fff86020fff860] ; pop rdi ; clc ; jmp qword ptr [rax]
0x00000000004b0900 : movabs al, byte ptr [0xa0fff86b20fff869] ; insb byte ptr [rdi], dx ; clc ; jmp qword ptr [rax]
0x00000000004b0944 : movabs al, byte ptr [0xa0fff86d20fff86b] ; outsb dx, byte ptr [rsi] ; clc ; jmp qword ptr [rax]
0x00000000004b0908 : movabs al, byte ptr [0xa0fff86e20fff86c] ; outsd dx, dword ptr [rsi] ; clc ; jmp qword ptr [rax]
0x00000000004b094c : movabs al, byte ptr [0xa0fff87020fff86e] ; jno 0x4b095a ; jmp qword ptr [rax]
0x00000000004b0910 : movabs al, byte ptr [0xa0fff87120fff86f] ; jb 0x4b091e ; jmp qword ptr [rax]
0x00000000004b0954 : movabs al, byte ptr [0xa0fff87320fff871] ; je 0x4b0962 ; jmp qword ptr [rax]
0x00000000004b0918 : movabs al, byte ptr [0xa0fff87420fff872] ; jne 0x4b0926 ; jmp qword ptr [rax]
0x00000000004b095c : movabs al, byte ptr [0xa0fff87620fff874] ; ja 0x4b096a ; jmp qword ptr [rax]
0x00000000004b0920 : movabs al, byte ptr [0xa0fff87720fff875] ; js 0x4b092e ; jmp qword ptr [rax]
0x00000000004b0aa8 : movabs al, byte ptr [0xc0fff8f430fff907] ; stc ; call rax
0x00000000004b0ae8 : movabs al, byte ptr [0xc0fff94ab0fff94a] ; stc ; call rax
0x00000000004b0b40 : movabs al, byte ptr [0xd0fff94fb0fff94f] ; stc ; jmp rax
0x00000000004b0b68 : movabs al, byte ptr [0xd0fff950c0fff950] ; push rax ; stc ; jmp rax
0x000000000040f991 : movabs al, byte ptr [0xe80000001ebf002c] ; ret 0x3aa
0x00000000004afc0c : movabs al, byte ptr [0xf0fff80a30fff817] ; or edi, eax ; call rax
0x000000000043400a : movabs byte ptr [0x49931463490007bd], al ; lea edx, [rbx + rdx] ; jmp rdx
0x000000000044b8a7 : movabs byte ptr [0x89419c74010028e6], al ; retf 0x9b9
0x0000000000435cc1 : movabs byte ptr [0x8d49931463490007], al ; adc al, 0x13 ; jmp rdx
0x00000000004b0738 : movabs byte ptr [0x92fff88812fff888], al ; xchg eax, edi ; call qword ptr [rdx]
0x00000000004c53c3 : movabs byte ptr [0xd900432ac06c5d01], al ; retf 0xea91
0x0000000000458440 : movabs byte ptr [0xe800000309ba0005], al ; ret
0x00000000004c5021 : movabs byte ptr [0xeb1b5c347ebb9329], al ; retf
0x00000000004c3467 : movabs eax, dword ptr [0x2130504dd97d9556] ; retf
0x00000000004c3d1a : movabs eax, dword ptr [0x95a55d87a0d1e161] ; retf 0x33e6
0x00000000004b09b5 : movabs eax, dword ptr [0xa5d0fff8a3c0fff8] ; clc ; jmp rax
0x00000000004c3fff : movabs eax, dword ptr [0xdbd7170d7733db8] ; shl dword ptr [rdi - 5], 1 ; ret
0x000000000043431d : movabs r12, 0x8d49931463490007 ; adc al, 0x13 ; jmp rdx
0x0000000000459cf8 : movabs r8, 0x894cc78948de8948 ; retf 0x48e8
0x000000000042e318 : movabs rbp, 0xf66d1ef0f66bdb2 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e418 : movabs rsp, 0xf66d1ef0f66bcb2 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042f1e6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x42f1fe ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f336 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x42f34e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f486 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x42f49e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f5d6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x42f5ee ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f726 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x42f73e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f876 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x42f88e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f9c6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x42f9de ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042fb16 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x42fb2e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042fc66 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x42fc7e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042fdb6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x42fdce ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ff06 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x42ff1e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430056 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x43006e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004301a6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x4301be ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004302f6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x43030e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430446 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x43045e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431bb6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x431bce ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431d06 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x431d1e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431e56 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x431e6e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431fa6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x431fbe ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004320f6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x43210e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000432246 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x43225e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000432396 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x4323ae ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004324e6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x4324fe ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000432636 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x43264e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000432786 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x43279e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004328d6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x4328ee ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000432a26 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x432a3e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000432b76 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x432b8e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000432cc6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x432cde ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000432e16 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x432e2e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f142 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042f13e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042f1ec : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000040ee9c : movaps xmmword ptr [rsp + 0xf0], xmm0 ; syscall
0x0000000000445bf0 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; lea rax, [rdi + 0xf] ; ret
0x0000000000445570 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000445560 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000445ddd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, [rdi + 0x1f] ; ret
0x000000000044572d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000004367bf : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043674f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004366df : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043666f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000445d7d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, [rdi + 0x1c] ; ret
0x00000000004456cd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000004365ff : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000445d9d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000004456ed : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043658f : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000445dbd : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, [rdi + 0x1e] ; ret
0x000000000044570d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000436baf : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000436b3f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000436acf : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000436a5f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004369ef : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043697f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043690f : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043689f : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043682f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000448f87 : movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x0000000000448f14 : movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000448f8d : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x0000000000435d1b : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x0000000000435d8b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004364c6 : movdqu xmmword ptr [rdi - 0x11], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000436446 : movdqu xmmword ptr [rdi - 0x12], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004363b6 : movdqu xmmword ptr [rdi - 0x13], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000436336 : movdqu xmmword ptr [rdi - 0x14], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004362b6 : movdqu xmmword ptr [rdi - 0x15], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000436236 : movdqu xmmword ptr [rdi - 0x16], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004361b6 : movdqu xmmword ptr [rdi - 0x17], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000436136 : movdqu xmmword ptr [rdi - 0x18], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004360b6 : movdqu xmmword ptr [rdi - 0x19], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000436036 : movdqu xmmword ptr [rdi - 0x1a], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435fb6 : movdqu xmmword ptr [rdi - 0x1b], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435f36 : movdqu xmmword ptr [rdi - 0x1c], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435ea6 : movdqu xmmword ptr [rdi - 0x1d], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435e16 : movdqu xmmword ptr [rdi - 0x1e], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435d86 : movdqu xmmword ptr [rdi - 0x1f], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000445bf4 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, [rdi + 0xf] ; ret
0x0000000000445c04 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x0000000000445574 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000445c57 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000004455c7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000004455b7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000445c37 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x00000000004455a7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000445cd8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x17] ; ret
0x0000000000445648 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000445628 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000044568b : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000004456ab : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000044566c : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000445c98 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x15] ; ret
0x00000000004455e8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000445cb8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x16] ; ret
0x0000000000445608 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000445c18 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x11] ; ret
0x0000000000445588 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000445729 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000004456c9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000004456e9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x0000000000445709 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043653a : movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000436594 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000448f13 : movdqu xmmword ptr fs:[rdi + rdx - 0x10], xmm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000445bf1 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; lea rax, [rdi + 0xf] ; ret
0x0000000000445571 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000445561 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000436532 : movq qword ptr [rdi + 0x10], mm0 ; lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000445dde : movq qword ptr [rdi + 0x10], mm2 ; lea rax, [rdi + 0x1f] ; ret
0x000000000044572e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00000000004367c0 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000436750 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004366e0 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000436670 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000445d7e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, [rdi + 0x1c] ; ret
0x00000000004456ce : movq qword ptr [rdi + 0xd], mm2 ; ret
0x0000000000436600 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000445d9e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000004456ee : movq qword ptr [rdi + 0xe], mm2 ; ret
0x0000000000436590 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000445dbe : movq qword ptr [rdi + 0xf], mm2 ; lea rax, [rdi + 0x1e] ; ret
0x000000000044570e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x0000000000436bb0 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000436b40 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000436ad0 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000436a60 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004369f0 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000436980 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000436910 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004368a0 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000436830 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000448f88 : movq qword ptr [rdi + rdx - 0x10], mm0 ; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x0000000000448f15 : movq qword ptr [rdi + rdx - 0x10], mm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000448f8e : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000435d1c : movq qword ptr [rdi - 0x10], mm0 ; ret
0x0000000000435d8c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004364c7 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000436447 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004363b7 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000436337 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004362b7 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000436237 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004361b7 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000436137 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004360b7 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000436037 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435fb7 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435f37 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435ea7 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435e17 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435d87 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000445bf5 : movq qword ptr [rdi], mm0 ; lea rax, [rdi + 0xf] ; ret
0x0000000000445c05 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x0000000000445575 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000445c58 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000004455c8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000004455b8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000445c38 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x00000000004455a8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000445cd9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x17] ; ret
0x0000000000445649 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000445629 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000044568c : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000004456ac : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000044566d : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000445c99 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x15] ; ret
0x00000000004455e9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000445cb9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x16] ; ret
0x0000000000445609 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000445c19 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x11] ; ret
0x0000000000445589 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000445dda : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, [rdi + 0x1f] ; ret
0x000000000044572a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000445d7a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, [rdi + 0x1c] ; ret
0x00000000004456ca : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x0000000000445d9a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000004456ea : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x0000000000445dba : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, [rdi + 0x1e] ; ret
0x000000000044570a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043653b : movq qword ptr [rdi], mm0 ; ret
0x0000000000436595 : movq qword ptr [rdi], mm1 ; ret
0x00000000004cdae8 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x7000005b], dh ; outsb dx, byte ptr [rsi] ; clc ; call qword ptr [rdi]
0x000000000045929c : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047fc48 : movsb byte ptr [rdi], byte ptr [rsi] ; and eax, 0x48c03100 ; cmp edi, edx ; ja 0x47fc83 ; ret
0x0000000000480669 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; dec dword ptr [rax + 0x39] ; ret
0x0000000000448215 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000004c941d : movsb byte ptr [rdi], byte ptr [rsi] ; hlt ; jmp rdi
0x00000000004c4142 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004c539d : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x4c53f6 ; jmp 0x4c5337
0x0000000000400b23 : movsb byte ptr [rdi], byte ptr [rsi] ; or al, byte ptr [rax] ; mov byte ptr [rip + 0x2d87b3], 1 ; pop rbp ; ret
0x00000000004893b8 : movsb byte ptr [rdi], byte ptr [rsi] ; or eax, 0x8b410025 ; adc edi, dword ptr [rcx] ; ret 0x840f
0x0000000000448207 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004c3025 : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x0000000000489c9c : movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, eax ; ret
0x00000000004ada3c : movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x0000000000464e88 : movsd dword ptr [rdi], dword ptr [rsi] ; add eax, 0x6f0f6600 ; ret 0x290f
0x0000000000464eb1 : movsd dword ptr [rdi], dword ptr [rsi] ; add eax, 0x6f0f6600 ; ret 0x33e8
0x00000000004b09bd : movsd dword ptr [rdi], dword ptr [rsi] ; clc ; jmp rax
0x0000000000496081 : movsd dword ptr [rdi], dword ptr [rsi] ; enter -0x76b4, 7 ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x00000000004c563d : movsd dword ptr [rdi], dword ptr [rsi] ; fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004c59d5 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004c5291 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000046d827 : movsd dword ptr [rdi], dword ptr [rsi] ; or al, 0 ; add byte ptr [rcx + 1], al ; ret 0x8b48
0x00000000004960b2 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000410d87 : movsd dword ptr [rdi], dword ptr [rsi] ; retf
0x0000000000420d67 : movsd dword ptr [rdi], dword ptr [rsi] ; retf 2
0x00000000004c3d21 : movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x0000000000497933 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000004a6694 : movss dword ptr [rsp - 0x28], xmm0 ; ret
0x00000000004978ed : movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000004678dc : movsx eax, byte ptr [rsi] ; cmp edi, r8d ; ja 0x4678cb ; mov eax, r9d ; ret
0x000000000048b1cb : movsx eax, cl ; neg eax ; ret
0x000000000048b270 : movsx eax, dl ; sub eax, ecx ; ret
0x000000000045b20d : movsx edi, dx ; inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x00000000004524fb : movsx edx, byte ptr [rdx + 0x1b] ; mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000004678db : movsx r8d, byte ptr [rsi] ; cmp edi, r8d ; ja 0x4678cc ; mov eax, r9d ; ret
0x0000000000425bb1 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, [r10 + r9] ; jmp r10
0x000000000043419b : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000042ec1b : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, [r11 + r9] ; jmp r9
0x00000000004a7938 : movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x00000000004034ce : movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x00000000004a8239 : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x00000000004a68e7 : movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x00000000004a66c1 : movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x00000000004a7e71 : movsxd rax, dword ptr [r9 + r11*4] ; add rax, r9 ; jmp rax
0x00000000004a66c2 : movsxd rax, dword ptr [rax + rcx*4] ; add rax, r8 ; jmp rax
0x0000000000417dee : movsxd rax, dword ptr [rax - 0x77] ; add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004ce2fd : movsxd rax, dword ptr [rax] ; add byte ptr [rax - 0x1d], al ; clc ; call qword ptr [rcx]
0x00000000004ce2bd : movsxd rax, dword ptr [rax] ; add byte ptr [rax], ah ; jrcxz 0x4ce2c1 ; call qword ptr [rdi]
0x000000000044d7a1 : movsxd rax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000004ce2d5 : movsxd rax, dword ptr [rax] ; add byte ptr [rax], ch ; jrcxz 0x4ce2d9 ; call qword ptr [rcx]
0x00000000004ce2e9 : movsxd rax, dword ptr [rax] ; add byte ptr [rbx], dh ; clc ; call qword ptr [rcx]
0x00000000004c40c0 : movsxd rax, dword ptr [rbp + 0x275dcc4c] ; retf 0xd1cb
0x00000000004034cf : movsxd rax, dword ptr [rbp + rax*4] ; add rax, r13 ; jmp rax
0x000000000044efcf : movsxd rax, dword ptr [rbp + rax*4] ; add rax, rbp ; jmp rax
0x000000000044ef58 : movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x0000000000462d0d : movsxd rax, dword ptr [rbx - 0x52743] ; call qword ptr [rax]
0x000000000048643d : movsxd rax, dword ptr [rcx + r12*4] ; add rax, rcx ; jmp rax
0x00000000004787a7 : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x00000000004a7e72 : movsxd rax, dword ptr [rcx + rbx*4] ; add rax, r9 ; jmp rax
0x000000000044826d : movsxd rax, dword ptr [rcx] ; add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000048643e : movsxd rax, dword ptr [rcx] ; add rax, rcx ; jmp rax
0x0000000000486d65 : movsxd rax, dword ptr [rdi + r12*4] ; add rax, rdi ; jmp rax
0x00000000004a68e8 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, r15 ; jmp rax
0x0000000000478dd7 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x0000000000486d66 : movsxd rax, dword ptr [rdi] ; add rax, rdi ; jmp rax
0x0000000000470947 : movsxd rax, dword ptr [rdx + r12*4] ; add rax, rdx ; jmp rax
0x0000000000403266 : movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000044a554 : movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x0000000000470948 : movsxd rax, dword ptr [rdx] ; add rax, rdx ; jmp rax
0x00000000004a823a : movsxd rax, dword ptr [rsi + rax*4] ; add rax, r14 ; jmp rax
0x000000000047863b : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000004493d8 : movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x0000000000449492 : movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x00000000004a7939 : movsxd rax, dword ptr [rsp + rax*4] ; add rax, r12 ; jmp rax
0x00000000004a0bad : movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x0000000000447ea7 : movsxd rax, ecx ; add rax, rdi ; sub rax, rsi ; ret
0x0000000000447e54 : movsxd rax, ecx ; ret
0x000000000043f13b : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000440d88 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x00000000004405a8 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000440998 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004401b8 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043fc9b : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043f47b : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000043ec5b : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x0000000000440357 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043f7bb : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043ef9b : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e77b : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000043f95b : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x0000000000440848 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000440068 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000441178 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043eabb : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043ebf1 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f8f1 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f411 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000440749 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000441079 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043fc31 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ef31 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000043ea51 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f751 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x0000000000440899 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004400b9 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004ae29c : movsxd rbp, dword ptr [rbx] ; add byte ptr [rbp + 9], dl ; idiv bh ; push rbp ; or esi, esi ; jmp rsp
0x0000000000489ceb : movsxd rbx, dword ptr [rax] ; mov qword ptr [rbx + 0x10], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004c4eea : movsxd rbx, dword ptr [rsi + rax*8 + 0x74] ; retf 0x93a2
0x0000000000447e99 : movsxd rbx, ecx ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000042d54d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000445329 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000004250a6 : movsxd rcx, dword ptr [rax - 0x7d] ; ret 0xe901
0x000000000043419c : movsxd rcx, dword ptr [rbx + rcx*4] ; add r9, r11 ; jmp r9
0x000000000042ec1c : movsxd rcx, dword ptr [rbx + rcx*4] ; lea r9, [r11 + r9] ; jmp r9
0x000000000042d54e : movsxd rcx, dword ptr [rbx + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000044532a : movsxd rcx, dword ptr [rbx + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000425bb2 : movsxd rcx, dword ptr [rdx + rcx*4] ; lea r10, [r10 + r9] ; jmp r10
0x000000000042b4de : movsxd rcx, dword ptr [rdx + rcx*4] ; pcmpeqb xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x000000000043fe8e : movsxd rcx, dword ptr [rdx + rcx*4] ; vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x0000000000449400 : movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x000000000048bff9 : movsxd rcx, dword ptr [rsi - 0x76b70001] ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000447ee7 : movsxd rcx, ecx ; lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x000000000040e867 : movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000045bddf : movsxd rdi, dword ptr [r11 + rsi*4] ; add rdi, r11 ; jmp rdi
0x0000000000417e59 : movsxd rdi, dword ptr [rbp - 0x3b140001] ; nop ; mov eax, 0xffffffff ; ret
0x000000000045bde0 : movsxd rdi, dword ptr [rbx + rsi*4] ; add rdi, r11 ; jmp rdi
0x000000000040e868 : movsxd rdi, dword ptr [rdx + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000042ecef : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000487af3 : movsxd rdx, dword ptr [rbx + rax + 0x15b800] ; add byte ptr [rax], al ; syscall
0x000000000042ecf0 : movsxd rdx, dword ptr [rbx + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000040e57f : movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x000000000044a7c9 : movsxd rdx, eax ; jmp 0x44a573
0x000000000044a7c8 : movsxd rdx, eax ; jmp 0x44a574
0x0000000000400d5f : movsxd rdx, eax ; lea rax, [rip + 0xad1ac] ; add rax, rdx ; jmp rax
0x000000000045b8e0 : movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x000000000045b8e1 : movsxd rsi, dword ptr [rax + rcx*4] ; add rsi, r8 ; jmp rsi
0x000000000044730c : movsxd rsi, esi ; ret 0x7520
0x00000000004247c9 : movsxd rsp, dword ptr [rdi + 0x1f0ffffe] ; add byte ptr [rax + 0x16], bh ; ret
0x000000000042d549 : movsxd rsp, dword ptr [rip + 0x63490008] ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00000000004978ee : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x0000000000497934 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x00000000004483cf : movups xmmword ptr [r11], xmm4 ; ret
0x0000000000448456 : movups xmmword ptr [r11], xmm8 ; ret
0x0000000000448457 : movups xmmword ptr [rbx], xmm0 ; ret
0x00000000004483d0 : movups xmmword ptr [rbx], xmm4 ; ret
0x00000000004483cb : movups xmmword ptr [rcx - 0x30], xmm0 ; movups xmmword ptr [r11], xmm4 ; ret
0x00000000004483ca : movups xmmword ptr [rcx - 0x30], xmm8 ; movups xmmword ptr [r11], xmm4 ; ret
0x000000000044844e : movups xmmword ptr [rdi + 0x20], xmm6 ; movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000448452 : movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000004481b2 : movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000448334 : movups xmmword ptr [rdi + rdx - 0x10], xmm2 ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x0000000000448339 : movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x0000000000448311 : movups xmmword ptr [rdi + rdx - 0x30], xmm6 ; movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x0000000000448316 : movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x00000000004481af : movups xmmword ptr [rdi], xmm0 ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000004a6695 : movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x000000000047fb61 : movzx eax, al ; add rsp, 0x58 ; ret
0x000000000046b16c : movzx eax, al ; mov dword ptr [rbp - 0x910], esi ; jmp qword ptr [rdx + rax*8]
0x00000000004a7935 : movzx eax, al ; movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x0000000000470698 : movzx eax, al ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000478637 : movzx eax, al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000004a3c8c : movzx eax, al ; neg eax ; ret
0x0000000000498039 : movzx eax, al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042ce43 : movzx eax, al ; sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00000000004502c0 : movzx eax, al ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x0000000000416830 : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042711d : movzx eax, byte ptr [rax + rcx] ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000004a98ee : movzx eax, byte ptr [rax] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000417a31 : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000413f1e : movzx eax, byte ptr [rax] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000419abf : movzx eax, byte ptr [rax] ; ret
0x000000000046d73a : movzx eax, byte ptr [rdi + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x000000000042b594 : movzx eax, byte ptr [rdi + rcx] ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000426faf : movzx eax, byte ptr [rdi + rdx] ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000426f48 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000447330 : movzx eax, byte ptr [rdi - 0x10] ; movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x0000000000447390 : movzx eax, byte ptr [rdi - 0xa] ; movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x0000000000447380 : movzx eax, byte ptr [rdi - 0xb] ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000447370 : movzx eax, byte ptr [rdi - 0xc] ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000447360 : movzx eax, byte ptr [rdi - 0xd] ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000447350 : movzx eax, byte ptr [rdi - 0xe] ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000447340 : movzx eax, byte ptr [rdi - 0xf] ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000447842 : movzx eax, byte ptr [rdi - 1] ; cmp al, byte ptr [rsi - 1] ; jne 0x447870 ; xor eax, eax ; ret
0x000000000042e400 : movzx eax, byte ptr [rdi - 1] ; movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x000000000042e1b3 : movzx eax, byte ptr [rdi - 1] ; movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x0000000000447317 : movzx eax, byte ptr [rdi - 9] ; movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x000000000042d2e0 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042ce20 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000426f63 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000417a40 : movzx eax, byte ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000413f30 : movzx eax, byte ptr [rdx] ; ret
0x0000000000416831 : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000449460 : movzx eax, cl ; pop rbx ; ret
0x0000000000448f34 : movzx eax, dh ; mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000448f33 : movzx eax, sil ; mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000004a7e6e : movzx ebx, bl ; movsxd rax, dword ptr [r9 + r11*4] ; add rax, r9 ; jmp rax
0x000000000044796a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x447969 ; ret
0x0000000000447a1a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x447a19 ; ret
0x0000000000426f44 : movzx ecx, byte ptr [rsi + rdx] ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000427206 : movzx ecx, byte ptr [rsi + rdx] ; test al, al ; jne 0x4271fc ; xor eax, eax ; sub eax, ecx ; ret
0x000000000042e404 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x0000000000448288 : movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000426f60 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042d2e3 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000004a66be : movzx ecx, cl ; movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x000000000040e864 : movzx edi, dl ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x0000000000413434 : movzx edx, byte ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000040ee03 : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x40edeb ; ret
0x0000000000427121 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000042d4f9 : movzx edx, byte ptr [rsi + rcx + 0x20] ; sub eax, edx ; vzeroupper ; ret
0x000000000042d519 : movzx edx, byte ptr [rsi + rcx + 0x40] ; sub eax, edx ; vzeroupper ; ret
0x000000000042d4df : movzx edx, byte ptr [rsi + rcx + 0x60] ; sub eax, edx ; vzeroupper ; ret
0x000000000042b598 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000042d268 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; vzeroupper ; ret
0x0000000000426fb3 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000042c3c3 : movzx edx, byte ptr [rsi + rdx] ; test r8d, r8d ; je 0x42c3d9 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000447334 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x0000000000447394 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x0000000000447384 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000447374 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000447364 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000447354 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000447344 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000004364e0 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042e1b7 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000044731b : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x0000000000436bc0 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000042ce23 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000042ce49 : movzx edx, dl ; sub eax, edx ; ret
0x0000000000436460 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000436b50 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004482b1 : movzx esi, word ptr [rsi] ; mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x0000000000470f56 : movzx esp, ah ; movsxd rax, dword ptr [rdx + r12*4] ; add rax, rdx ; jmp rax
0x00000000004a7e6d : movzx r11d, r11b ; movsxd rax, dword ptr [r9 + r11*4] ; add rax, r9 ; jmp rax
0x0000000000470f55 : movzx r12d, r12b ; movsxd rax, dword ptr [rdx + r12*4] ; add rax, rdx ; jmp rax
0x000000000046b16b : movzx r8d, r8b ; mov dword ptr [rbp - 0x910], esi ; jmp qword ptr [rdx + rax*8]
0x000000000041ef78 : mul byte ptr [rdi + rax*8] ; or al, 0 ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x000000000045a92e : mul byte ptr [rdi] ; add al, ch ; retf 0xba56
0x00000000004aae85 : mul byte ptr [rdx] ; add byte ptr [rbp - 0xcfb8b40], al ; ret
0x000000000047d427 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000004aad75 : mul dword ptr [rdx] ; add byte ptr [rbp - 0xcfb8b40], al ; ret
0x000000000044ae93 : neg eax ; jmp 0x44ae5c
0x000000000044af31 : neg eax ; mov dword ptr fs:[rcx], eax ; mov eax, 0xffffffff ; jmp 0x44af0a
0x000000000044a857 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000044a8e7 : neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000044ab97 : neg eax ; mov dword ptr fs:[rdx], eax ; mov rax, -1 ; ret
0x0000000000419aff : neg eax ; ret
0x0000000000488ad2 : neg eax ; test r8b, r8b ; cmove rcx, rax ; mov rax, rcx ; ret
0x00000000004c7e9c : nop ; add al, 0xfe ; call qword ptr [rax + 0x18]
0x000000000041682c : nop ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], al ; mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000435c17 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000047c05b : nop ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x000000000047c155 : nop ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x00000000004cda54 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + rbx*2], bl ; add byte ptr [rax], al ; and al, 0x65 ; clc ; call rcx
0x000000000044c667 : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44c678 ; call r12
0x000000000042d86c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047fd9c : nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040136c : nop ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004503ff : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004a36df : nop ; add rsp, 8 ; ret
0x000000000042da1c : nop ; and byte ptr [rax], cl ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00000000004aff0c : nop ; and edi, eax ; jmp rax
0x00000000004a0fef : nop ; call rax
0x0000000000450b30 : nop ; call rsi
0x00000000004b0545 : nop ; clc ; call qword ptr [rdx]
0x00000000004b0489 : nop ; clc ; call rax
0x00000000004b0485 : nop ; clc ; inc dword ptr [rax - 0x70] ; clc ; call rax
0x00000000004afe8c : nop ; clc ; jmp qword ptr [rax]
0x00000000004b0549 : nop ; clc ; jmp qword ptr [rdx + 0x32fff88f]
0x00000000004b04c5 : nop ; clc ; jmp qword ptr [rsi]
0x00000000004b0685 : nop ; clc ; jmp rax
0x00000000004cbb19 : nop ; cmc ; jmp qword ptr [rbx]
0x00000000004caec0 : nop ; cmc ; jmp rsi
0x00000000004afe88 : nop ; cmp al, 0xf8 ; call qword ptr [rax + 0x20fff83e]
0x00000000004afde8 : nop ; cmp eax, 0x3f90fff8 ; clc ; jmp qword ptr [rax]
0x00000000004cbccc : nop ; cmp eax, 0x9e000000 ; cmc ; jmp qword ptr [rbx]
0x00000000004b06b0 : nop ; cmp eax, 0xf88950ff ; call rax
0x00000000004afde4 : nop ; cmp edi, eax ; call qword ptr [rax - 0x6f0007c3]
0x000000000044daaf : nop ; cmp rcx, qword ptr [rax + 0x10] ; jae 0x44daa8 ; ret
0x00000000004afd40 : nop ; div edi ; jmp rax
0x00000000004b0a74 : nop ; idiv al ; jmp rax
0x000000000048ca3f : nop ; jmp rdx
0x00000000004cfacc : nop ; jnp 0x4cfad6 ; add byte ptr [rax], dh ; fdivr st(2) ; jmp rdx
0x00000000004011d7 : nop ; leave ; ret
0x00000000004307ef : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000497a8f : nop ; mov dword ptr [rdx], 0 ; mov eax, 2 ; ret
0x00000000004aae8f : nop ; mov dword ptr [rip + 0x22f62e], 1 ; ret
0x00000000004aad7f : nop ; mov dword ptr [rip + 0x22f73e], 1 ; ret
0x000000000041a543 : nop ; mov dword ptr [rip + 0x2bf96a], eax ; ret
0x00000000004309cf : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000044b75f : nop ; mov eax, 0x10 ; syscall
0x00000000004a0c6f : nop ; mov eax, 0x27 ; syscall
0x000000000047f84f : nop ; mov eax, 0x3f ; syscall
0x000000000044d79f : nop ; mov eax, 0x63 ; syscall
0x000000000047f11f : nop ; mov eax, 0xc9 ; syscall
0x000000000044d824 : nop ; mov eax, 0xca ; syscall
0x0000000000417e5f : nop ; mov eax, 0xffffffff ; ret
0x000000000048a03f : nop ; mov eax, 1 ; pop rbx ; ret
0x0000000000430d8f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000445abf : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x000000000047bdd9 : nop ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000041a3c3 : nop ; mov qword ptr [rip + 0x2bd47d], rax ; ret
0x000000000041a3b3 : nop ; mov qword ptr [rip + 0x2bd485], rax ; ret
0x000000000041a363 : nop ; mov qword ptr [rip + 0x2bd48d], rax ; ret
0x000000000041a353 : nop ; mov qword ptr [rip + 0x2bd4a5], rax ; ret
0x000000000045c9bf : nop ; mov r10d, 8 ; mov eax, 0xe ; syscall
0x00000000004a8aaf : nop ; mov rax, qword ptr [rdi + 0x98] ; ret
0x00000000004a681f : nop ; mov rax, qword ptr [rsi + 0xb8] ; ret
0x00000000004a99bf : nop ; mov rax, qword ptr [rsi + 8] ; ret
0x0000000000445b0f : nop ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x000000000044555f : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004afd10 : nop ; or al, bh ; inc dword ptr [rax + 0xa] ; clc ; call qword ptr [rax]
0x0000000000478e1f : nop ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x478dee
0x0000000000478e1e : nop ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x478def
0x000000000042b61c : nop ; or eax, 0x83490000 ; jmp 0x42b63e
0x0000000000499fbd : nop ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000400c05 : nop ; pop rbp ; ret
0x00000000004b03ac : nop ; pop rbx ; clc ; jmp qword ptr [rax]
0x00000000004aff84 : nop ; push -8 ; jmp qword ptr [rax]
0x00000000004cd4cc : nop ; push rbp ; add byte ptr [rax], al ; ja 0x4cd509 ; jmp qword ptr [rbx]
0x00000000004004ef : nop ; ret
0x00000000004771b1 : nop ; retf
0x00000000004b1a48 : nop ; retf 0xfff9
0x00000000004d22c0 : nop ; sbb edi, ebp ; jmp qword ptr [rcx]
0x00000000004aff60 : nop ; sub bh, al ; jmp rax
0x000000000041967f : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000004b047c : nop ; xchg eax, ecx ; clc ; jmp qword ptr [rax]
0x0000000000415acf : nop ; xor eax, eax ; ret
0x000000000047eb88 : nop dword ptr [rax + rax] ; add rax, 3 ; ret
0x000000000044c52b : nop dword ptr [rax + rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004142cb : nop dword ptr [rax + rax] ; call 0x413bcb
0x000000000040fd88 : nop dword ptr [rax + rax] ; call qword ptr [rbx]
0x000000000041b018 : nop dword ptr [rax + rax] ; call rax
0x00000000004a1208 : nop dword ptr [rax + rax] ; call rbx
0x00000000004460b8 : nop dword ptr [rax + rax] ; lea rax, [rdi + 0xa] ; ret
0x00000000004460c8 : nop dword ptr [rax + rax] ; lea rax, [rdi + 0xb] ; ret
0x00000000004460d8 : nop dword ptr [rax + rax] ; lea rax, [rdi + 0xc] ; ret
0x00000000004460e8 : nop dword ptr [rax + rax] ; lea rax, [rdi + 0xd] ; ret
0x00000000004460f8 : nop dword ptr [rax + rax] ; lea rax, [rdi + 0xe] ; ret
0x0000000000446038 : nop dword ptr [rax + rax] ; lea rax, [rdi + 1] ; ret
0x0000000000446048 : nop dword ptr [rax + rax] ; lea rax, [rdi + 2] ; ret
0x0000000000446058 : nop dword ptr [rax + rax] ; lea rax, [rdi + 3] ; ret
0x0000000000446068 : nop dword ptr [rax + rax] ; lea rax, [rdi + 4] ; ret
0x0000000000446078 : nop dword ptr [rax + rax] ; lea rax, [rdi + 5] ; ret
0x0000000000446088 : nop dword ptr [rax + rax] ; lea rax, [rdi + 6] ; ret
0x0000000000446098 : nop dword ptr [rax + rax] ; lea rax, [rdi + 8] ; ret
0x00000000004460a8 : nop dword ptr [rax + rax] ; lea rax, [rdi + 9] ; ret
0x0000000000446028 : nop dword ptr [rax + rax] ; lea rax, [rdi] ; ret
0x0000000000445468 : nop dword ptr [rax + rax] ; mov byte ptr [rdi], dh ; ret
0x0000000000424a4b : nop dword ptr [rax + rax] ; mov eax, 0x16 ; ret
0x000000000044b95b : nop dword ptr [rax + rax] ; mov eax, 0x1c ; syscall
0x000000000047f87b : nop dword ptr [rax + rax] ; mov eax, 0x66 ; syscall
0x000000000044b92b : nop dword ptr [rax + rax] ; mov eax, 0xa ; syscall
0x0000000000419adb : nop dword ptr [rax + rax] ; mov eax, 0xffffffff ; ret
0x000000000041964b : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000044a308 : nop dword ptr [rax + rax] ; mov edi, edx ; mov eax, esi ; syscall
0x000000000044549b : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000044dab8 : nop dword ptr [rax + rax] ; mov qword ptr [rax + 0x20], rsi ; ret
0x0000000000418bdb : nop dword ptr [rax + rax] ; mov rax, -1 ; ret
0x000000000048bde8 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000486f93 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x0000000000419998 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rdi + 0x68] ; ret
0x00000000004199a8 : nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000004454db : nop dword ptr [rax + rax] ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000004215c3 : nop dword ptr [rax + rax] ; mov rsi, qword ptr [rsp + 0x68] ; call rax
0x00000000004a94cb : nop dword ptr [rax + rax] ; mov rsi, r14 ; mov rdi, r12 ; call r15
0x0000000000413f28 : nop dword ptr [rax + rax] ; movzx eax, byte ptr [rdx] ; ret
0x0000000000400ab3 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x0000000000412958 : nop dword ptr [rax + rax] ; pop rbx ; ret
0x0000000000400a7b : nop dword ptr [rax + rax] ; ret
0x0000000000418d23 : nop dword ptr [rax + rax] ; sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x00000000004188a8 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000445e68 : nop dword ptr [rax + rax] ; xor rax, rax ; ret
0x000000000042de9d : nop dword ptr [rax] ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000047eb7c : nop dword ptr [rax] ; add rax, 1 ; ret
0x000000000042c6ac : nop dword ptr [rax] ; bsf eax, eax ; lea rax, [rax + rdi - 0x10] ; ret
0x0000000000417dad : nop dword ptr [rax] ; cmp qword ptr [rdi + 0x38], 0 ; je 0x417dcb ; ret
0x00000000004247cd : nop dword ptr [rax] ; mov eax, 0x16 ; ret
0x000000000044a83c : nop dword ptr [rax] ; mov eax, 0x18 ; syscall
0x00000000004a3e49 : nop dword ptr [rax] ; mov eax, 0x26 ; syscall
0x000000000047bed5 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x000000000044ac89 : nop dword ptr [rax] ; mov eax, 1 ; syscall
0x000000000044af3d : nop dword ptr [rax] ; mov eax, 3 ; syscall
0x000000000044acbc : nop dword ptr [rax] ; mov eax, 8 ; syscall
0x00000000004a0e6c : nop dword ptr [rax] ; mov eax, dword ptr [rip + 0x239b8a] ; ret
0x0000000000436a69 : nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000044d76c : nop dword ptr [rax] ; mov r10, rcx ; mov eax, 0x19 ; syscall
0x00000000004981f5 : nop dword ptr [rax] ; mov rax, qword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000450f4d : nop dword ptr [rax] ; mov rax, qword ptr [rip + 0x289b11] ; ret
0x000000000041ba8c : nop dword ptr [rax] ; mov rax, rdx ; ret
0x00000000004a5335 : nop dword ptr [rax] ; mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x0000000000423bac : nop dword ptr [rax] ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x000000000042ce1d : nop dword ptr [rax] ; movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000449459 : nop dword ptr [rax] ; movzx eax, cl ; pop rbx ; ret
0x0000000000436bb9 : nop dword ptr [rax] ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000485eec : nop dword ptr [rax] ; or byte ptr [rdi + 0x315], 4 ; ret
0x0000000000400af5 : nop dword ptr [rax] ; pop rbp ; ret
0x0000000000422ccd : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000449a8c : nop dword ptr [rax] ; pop rbx ; ret
0x000000000041b00d : nop dword ptr [rax] ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000419791 : nop dword ptr [rax] ; ret
0x0000000000415a0d : nop dword ptr [rax] ; xor eax, eax ; jmp 0x4159dd
0x0000000000417f95 : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000044abb9 : nop dword ptr [rax] ; xor eax, eax ; syscall
0x0000000000402554 : nop dword ptr [rax] ; xor edi, edi ; mov eax, edx ; syscall
0x00000000004a1207 : nop dword ptr cs:[rax + rax] ; call rbx
0x0000000000446027 : nop dword ptr cs:[rax + rax] ; lea rax, [rdi] ; ret
0x0000000000445467 : nop dword ptr cs:[rax + rax] ; mov byte ptr [rdi], dh ; ret
0x00000000004199a7 : nop dword ptr cs:[rax + rax] ; mov rax, rdi ; ret
0x0000000000412957 : nop dword ptr cs:[rax + rax] ; pop rbx ; ret
0x0000000000419967 : nop dword ptr cs:[rax + rax] ; ret
0x0000000000447d07 : nop dword ptr cs:[rax + rax] ; xor eax, eax ; ret
0x0000000000445e67 : nop dword ptr cs:[rax + rax] ; xor rax, rax ; ret
0x000000000044c52a : nop word ptr [rax + rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004142ca : nop word ptr [rax + rax] ; call 0x413bcc
0x000000000040fd87 : nop word ptr [rax + rax] ; call qword ptr [rbx]
0x000000000041b017 : nop word ptr [rax + rax] ; call rax
0x0000000000424a4a : nop word ptr [rax + rax] ; mov eax, 0x16 ; ret
0x0000000000485e4a : nop word ptr [rax + rax] ; mov eax, 0xffffffff ; ret
0x000000000044549a : nop word ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000004215c2 : nop word ptr [rax + rax] ; mov rsi, qword ptr [rsp + 0x68] ; call rax
0x0000000000497faa : nop word ptr [rax + rax] ; pop rbx ; ret
0x000000000044c537 : nop word ptr [rax + rax] ; ret
0x00000000004188a7 : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004a1206 : nop word ptr cs:[rax + rax] ; call rbx
0x0000000000445466 : nop word ptr cs:[rax + rax] ; mov byte ptr [rdi], dh ; ret
0x0000000000412956 : nop word ptr cs:[rax + rax] ; pop rbx ; ret
0x0000000000419966 : nop word ptr cs:[rax + rax] ; ret
0x0000000000447d06 : nop word ptr cs:[rax + rax] ; xor eax, eax ; ret
0x0000000000437276 : not byte ptr [rcx + 0x63490007] ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000436f76 : not byte ptr [rdi + rax + 0x14634900] ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000413389 : not edx ; and rdx, 0xfffffffffffffffc ; add rdx, rcx ; jmp 0x4133a9
0x0000000000413388 : not rdx ; and rdx, 0xfffffffffffffffc ; add rdx, rcx ; jmp 0x4133aa
0x0000000000498149 : or ah, byte ptr [rax + rax] ; mov qword ptr [rax], rdx ; add rsp, 8 ; ret
0x00000000004c8b8d : or al, 0 ; add byte ptr [rax + 0x72], al ; hlt ; jmp qword ptr [rax]
0x000000000047dd1b : or al, 0 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000042b717 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044074f : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b745 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000047478f : or al, 0 ; add byte ptr [rax], al ; jmp 0x4709fe
0x000000000047fc82 : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000047fc31 : or al, 0 ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000041ef7c : or al, 0 ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x000000000047c6a6 : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042a738 : or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000047dd68 : or al, 0 ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x000000000046d828 : or al, 0 ; add byte ptr [rcx + 1], al ; ret 0x8b48
0x000000000049fd59 : or al, 0 ; add byte ptr [rcx - 0x7d], cl ; jmp 0x49fd79
0x000000000046a895 : or al, 0x13 ; add rdx, r12 ; call qword ptr [r10 + rax*8]
0x0000000000426f46 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000427208 : or al, 0x16 ; test al, al ; jne 0x4271fa ; xor eax, eax ; sub eax, ecx ; ret
0x000000000041ef4a : or al, 0x1e ; mov rax, rsi ; pop rbx ; ret
0x0000000000414623 : or al, 0x24 ; mov rdi, rbx ; call rax
0x00000000004ca448 : or al, 0x25 ; add byte ptr [rax], al ; and al, 0xf6 ; hlt ; call qword ptr [rdi]
0x000000000044aad1 : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x44ab27 ; add rsp, 0x58 ; ret
0x000000000044ae61 : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x44aebf ; add rsp, 0x68 ; ret
0x000000000047fad6 : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x47fb2f ; add rsp, 0x58 ; ret
0x000000000047fc08 : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x47fc37 ; add rsp, 0x38 ; ret
0x000000000048c0af : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x48c0ef ; add rsp, 0x38 ; ret
0x000000000048c16f : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x48c1aa ; add rsp, 0x68 ; ret
0x000000000048c2d0 : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x48c31a ; add rsp, 0x78 ; ret
0x000000000048c59f : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x48c5da ; add rsp, 0x68 ; ret
0x00000000004a3c35 : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x4a3c58 ; add rsp, 0x38 ; ret
0x0000000000489c99 : or al, 0x37 ; jae 0x489c47 ; xor eax, eax ; ret
0x00000000004258c0 : or al, 0x39 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000478e22 : or al, 0x40 ; jmp 0x478deb
0x0000000000478e21 : or al, 0x40 ; jmp 0x478dec
0x000000000044af0d : or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x00000000004a3de2 : or al, 0x48 ; lea edi, [rip + 0x2343d6] ; call 0xa
0x00000000004a3d2b : or al, 0x48 ; lea edi, [rip + 0x23448d] ; call 0xa
0x00000000004a3cfb : or al, 0x48 ; lea edi, [rip + 0x2344bd] ; call 0xa
0x0000000000417933 : or al, 0x48 ; mov dword ptr [rsp], edi ; call 0x413bc7
0x0000000000402461 : or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000417944 : or al, 0x48 ; mov edi, dword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004a95ca : or al, 0x48 ; mov edi, dword ptr [rsp] ; mov rdx, qword ptr [rbp] ; call r12
0x00000000004983f3 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000004788d3 : or al, 0x7e ; ret 0x8944
0x00000000004020f0 : or al, 0x81 ; retf 0x440
0x000000000045a193 : or al, 0x83 ; inc byte ptr [rbx] ; je 0x45a1a7 ; ret
0x00000000004493fb : or al, 0x83 ; loopne 0x449419 ; movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x000000000045fb5b : or al, 0x83 ; ret
0x00000000004242b6 : or al, 0x83 ; retf 0x8902
0x0000000000449401 : or al, 0x86 ; add rcx, rsi ; jmp rcx
0x0000000000464dea : or al, 0x89 ; ret 0xc689
0x000000000044948b : or al, 0x89 ; ret 0xe283
0x0000000000425bb3 : or al, 0x8a ; lea r10, [r10 + r9] ; jmp r10
0x000000000043c074 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000042b4df : or al, 0x8a ; pcmpeqb xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x000000000043fe8f : or al, 0x8a ; vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x000000000043419d : or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000042ec1d : or al, 0x8b ; lea r9, [r11 + r9] ; jmp r9
0x0000000000439869 : or al, 0x8b ; mov ecx, dword ptr ss:[rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000004b0524 : or al, 0x8d ; clc ; lcall [rsp + rcx*4 - 0x73d30008] ; clc ; call rdx
0x000000000047fd58 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000042d54f : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000042ebb2 : or al, 0x93 ; add rsi, rdx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000044532b : or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000047e956 : or al, 0x97 ; test r9d, r9d ; jne 0x47e91b ; mov rax, rdx ; ret
0x000000000042ec21 : or al, 0xb ; jmp r9
0x000000000044532f : or al, 0xb ; jmp rcx
0x0000000000420a95 : or al, 0xc7 ; add eax, 0x2b9400 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a1285 : or al, 0xca ; jmp 0x4a1295
0x000000000046b420 : or al, 0xe6 ; std ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000424068 : or al, 0xe8 ; add ch, byte ptr [rdi - 1] ; dec dword ptr [rbx + 0x90c2454] ; ret 0xbae9
0x00000000004580cf : or al, 0xe9 ; ret
0x000000000047bb7c : or al, 0xeb ; ret 0x5590
0x000000000040524f : or al, 0xf ; retf 0xd289
0x00000000004366e3 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000046854d : or al, 0xf6 ; ret 0xf01
0x00000000004afcb9 : or al, 0xf8 ; call rax
0x00000000004afbf5 : or al, 0xf8 ; jmp rax
0x000000000047dd62 : or al, 2 ; add byte ptr [rcx + 0xc00f9], al ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x000000000042ef0a : or al, 8 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000424071 : or al, 9 ; ret 0xbae9
0x00000000004cd069 : or al, bh ; call qword ptr [rax]
0x00000000004cd081 : or al, bh ; call qword ptr [rdx]
0x00000000004afd11 : or al, bh ; inc dword ptr [rax + 0xa] ; clc ; call qword ptr [rax]
0x000000000046c386 : or al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; test dword ptr [rax], esi ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0x8c20
0x000000000042b8f7 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f2e1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b925 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004a87b2 : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, 1 ; call r14
0x00000000004a87da : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000044b931 : or al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000429248 : or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004ba5b5 : or al, byte ptr [rax] ; add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x0000000000400d66 : or al, byte ptr [rax] ; add rax, rdx ; jmp rax
0x0000000000400b24 : or al, byte ptr [rax] ; mov byte ptr [rip + 0x2d87b3], 1 ; pop rbp ; ret
0x0000000000403263 : or al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000040892d : or al, byte ptr [rbx - 0x7bf0fd07] ; ret
0x000000000040bdbc : or al, byte ptr [rbx - 0x7bf0fd07] ; ret 0x18
0x000000000044ee7a : or al, byte ptr [rbx] ; add byte ptr [rcx], bh ; ret
0x000000000044ee99 : or al, byte ptr [rbx] ; add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x000000000044e066 : or al, byte ptr [rcx + rcx*8 - 0x7cb7ed8c] ; ret 0x4801
0x00000000004d0cb3 : or al, byte ptr [rcx] ; ret
0x00000000004a0007 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000040a85e : or al, ch ; cld ; retf 0xffff
0x000000000048ab9d : or al, ch ; frstor dword ptr [rdx + 1] ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000040a7bd : or al, ch ; popfq ; retf
0x000000000040a904 : or al, ch ; push rsi ; retf 0xffff
0x000000000040cf97 : or al, ch ; ret
0x000000000040c098 : or al, ch ; ret 0xffb2
0x000000000040848f : or al, ch ; retf
0x000000000041e2d7 : or al, ch ; xchg eax, ebx ; ret 0xffff
0x00000000004c7a70 : or al, dh ; std ; push rax ; idiv ch ; call rax
0x00000000004afd15 : or bh, al ; call qword ptr [rax]
0x00000000004afc31 : or bh, al ; call rax
0x00000000004afbf1 : or bh, al ; inc dword ptr [rax] ; or al, 0xf8 ; jmp rax
0x00000000004afc11 : or bh, al ; push rax ; or edi, eax ; call rax
0x00000000004257a0 : or bh, dh ; ret 0
0x000000000041ba8a : or bl, al ; nop dword ptr [rax] ; mov rax, rdx ; ret
0x000000000044da47 : or bl, al ; nop dword ptr [rax] ; ret
0x000000000046cdd1 : or bl, bpl ; retf
0x00000000004070dd : or bl, byte ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004aa1cd : or bl, ch ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000046cdd2 : or bl, ch ; retf
0x00000000004368a3 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000044b6a7 : or bl, dh ; ret
0x00000000004517a6 : or byte ptr [r15], 0x8e ; ret 1
0x0000000000417c66 : or byte ptr [r15], cl ; mov dh, 2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041c1d5 : or byte ptr [r15], r9b ; test ebx, ebp ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000412751 : or byte ptr [r8 + 0x29], r9b ; ret
0x000000000040f42d : or byte ptr [r8 + 0x39], cl ; ret
0x0000000000419ab8 : or byte ptr [r8 + 0x39], r9b ; sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x00000000004ad0d9 : or byte ptr [r8 + 0x7a840f01], bpl ; add eax, 0x89490000 ; ret 0x8349
0x0000000000452af3 : or byte ptr [r8 + 0xf], cl ; ret
0x0000000000497a3f : or byte ptr [r8 + 2], r15b ; ret
0x000000000041281f : or byte ptr [r8 - 0x3f], r9b ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000041f042 : or byte ptr [r8 - 0x75], cl ; or byte ptr [rbx + 0x94807e0], r8b ; ret
0x00000000004897da : or byte ptr [r8 - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004437d8 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000489cc5 : or byte ptr [r8 - 0x7b], cl ; sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x0000000000483052 : or byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; ret
0x000000000040cbb2 : or byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; retf 0xffe7
0x000000000047c6bd : or byte ptr [r8], al ; add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004a01e2 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000497a84 : or byte ptr [r9 + 0x2b802], r9b ; add byte ptr [rax], al ; ret
0x00000000004a8237 : or byte ptr [r9 + 0x63], r9b ; add al, 0x86 ; add rax, r14 ; jmp rax
0x0000000000497a20 : or byte ptr [r9 + r13 - 0x30], r8b ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x0000000000443897 : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x000000000040136b : or byte ptr [rax + 0x18c48348], dl ; pop rbx ; pop rbp ; ret
0x0000000000412752 : or byte ptr [rax + 0x29], cl ; ret
0x000000000041273c : or byte ptr [rax + 0x2b], cl ; adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000414115 : or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000040f42e : or byte ptr [rax + 0x39], cl ; ret
0x00000000004543a8 : or byte ptr [rax + 0x39], cl ; ret 0x8e0f
0x0000000000495ea8 : or byte ptr [rax + 0x39], cl ; retf
0x0000000000419ab9 : or byte ptr [rax + 0x39], cl ; sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x00000000004ad0da : or byte ptr [rax + 0x7a840f01], ch ; add eax, 0x89490000 ; ret 0x8349
0x00000000004c9ace : or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rbx + 0xa] ; ret
0x0000000000452af4 : or byte ptr [rax + 0xf], cl ; ret
0x000000000041ab66 : or byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000004a9527 : or byte ptr [rax + 1], bh ; ja 0x4a953c ; sbb eax, eax ; ret
0x000000000041b002 : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a219c : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000487ac1 : or byte ptr [rax + 1], cl ; ret
0x00000000004a9526 : or byte ptr [rax + 1], r15b ; ja 0x4a953d ; sbb eax, eax ; ret
0x0000000000497a40 : or byte ptr [rax + 2], bh ; ret
0x00000000004a58b7 : or byte ptr [rax + 3], cl ; push rbp ; add bl, ch ; add eax, 0x1489066 ; ret 0xb70f
0x000000000048be03 : or byte ptr [rax + rcx*2 + 0x2b], ah ; add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000048be02 : or byte ptr [rax + rcx*2 + 0x2b], spl ; add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000412820 : or byte ptr [rax - 0x3f], cl ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000042575a : or byte ptr [rax - 0x73], cl ; add eax, 0x79ee ; je 0x425735 ; ret
0x00000000004a1282 : or byte ptr [rax - 0x73], cl ; or al, 0xca ; jmp 0x4a1298
0x000000000046cdca : or byte ptr [rax - 0x73], cl ; or byte ptr [rax - 0x77], r9b ; or bl, bpl ; retf
0x000000000041a403 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x0000000000452be7 : or byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax - 0x77] ; and al, 0x50 ; call 0x44eecb
0x000000000044bb44 : or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x000000000041f043 : or byte ptr [rax - 0x75], cl ; or byte ptr [rbx + 0x94807e0], r8b ; ret
0x00000000004b0c34 : or byte ptr [rax - 0x77670007], 0xf9 ; call rax
0x000000000047aa64 : or byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; jo 0x47aa88 ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000044c522 : or byte ptr [rax - 0x77], cl ; call 0xffffffffe144228b
0x00000000004437dd : or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000415aa0 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000004897db : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000044b72e : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000004179db : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x000000000046cdce : or byte ptr [rax - 0x77], cl ; or bl, bpl ; retf
0x00000000004437d9 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047f659 : or byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x0000000000489b80 : or byte ptr [rax - 0x77], cl ; ret
0x0000000000411e9b : or byte ptr [rax - 0x77], cl ; retf 0x294c
0x00000000004a0eb3 : or byte ptr [rax - 0x77], cl ; retf 0xc148
0x000000000046cdcd : or byte ptr [rax - 0x77], r9b ; or bl, bpl ; retf
0x00000000004a4d5a : or byte ptr [rax - 0x77], r9b ; ret
0x0000000000489708 : or byte ptr [rax - 0x7b], cl ; push qword ptr [rbp - 0x2e] ; ret
0x0000000000483053 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000000000040cbb3 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 0xffe7
0x00000000004a4fae : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rax + rax*8 + 0x49], 0x83 ; ret 0xf608
0x0000000000489cc6 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x00000000004a5007 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rsi*4 + 0x48], 0x83 ; ret 0xf608
0x0000000000420090 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000045d040 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000044bef2 : or byte ptr [rax - 0x7d], cl ; ret
0x0000000000485907 : or byte ptr [rax - 0x7d], cl ; ret 0x101
0x000000000048ccad : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000487f72 : or byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044df20 : or byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000412e36 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000047c6be : or byte ptr [rax], al ; add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000046c645 : or byte ptr [rax], al ; add al, ch ; ret
0x000000000041b93d : or byte ptr [rax], al ; add al, ch ; retf
0x000000000041b72b : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000048d95e : or byte ptr [rax], al ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000042bbc7 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f481 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042bb05 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000418757 : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000452a9a : or byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000045c9c2 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x000000000045c865 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x00000000004494d5 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000450311 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000044acc1 : or byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000004293c8 : or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004a68e4 : or byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; add al, 0x87 ; add rax, r15 ; jmp rax
0x0000000000420966 : or byte ptr [rax], al ; add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x420939 ; ret
0x0000000000412234 : or byte ptr [rax], al ; add byte ptr [rdi], cl ; test dword ptr [rcx - 0x16000002], esi ; retf 0xfffe
0x000000000042193c : or byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3d83
0x0000000000425baf : or byte ptr [rax], al ; movsxd r9, dword ptr [r10 + r9*4] ; lea r10, [r10 + r9] ; jmp r10
0x000000000042ec19 : or byte ptr [rax], al ; movsxd r9, dword ptr [r11 + r9*4] ; lea r9, [r11 + r9] ; jmp r9
0x00000000004244e2 : or byte ptr [rax], al ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000042d54b : or byte ptr [rax], al ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000042eced : or byte ptr [rax], al ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000042f354 : or byte ptr [rax], cl ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004ca443 : or byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [0xfffffffff6240000], cl ; hlt ; call qword ptr [rdi]
0x00000000004cd6cf : or byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77ffffa9], bl ; out 0xfd, eax ; jmp qword ptr [rdx]
0x0000000000440b3e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004a8a2f : or byte ptr [rbp + 0x1a], dh ; mov rax, qword ptr [rax] ; ret
0x00000000004a13bb : or byte ptr [rbp + 0x39481e04], cl ; ret 0x830f
0x0000000000495e01 : or byte ptr [rbp + 0x39], cl ; ret 0x8b48
0x00000000004a10d6 : or byte ptr [rbp + 0x440f4cf6], al ; ret
0x000000000045f62c : or byte ptr [rbp + 0x63840fc0], al ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000465930 : or byte ptr [rbp + 0x6a840fc0], al ; sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000419672 : or byte ptr [rbp + 0xb], dh ; sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000004a8a9e : or byte ptr [rbp + 4], dh ; mov qword ptr [rax], rdx ; ret
0x0000000000495a83 : or byte ptr [rbp + rcx*4 + 0x24], cl ; ret 0x8d4a
0x00000000004946ee : or byte ptr [rbp + rcx*4 + 0x48], al ; dec dword ptr [rax + 1] ; retf 0xc148
0x00000000004958ed : or byte ptr [rbp + rcx*4 + 5], cl ; retf
0x0000000000410c8f : or byte ptr [rbp - 0x627bf040], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041e102 : or byte ptr [rbp - 0x75], cl ; push rax ; or byte ptr [rcx - 0xa], al ; ret 0xf04
0x00000000004ada43 : or byte ptr [rbp - 0x77], cl ; ret
0x000000000044b52c : or byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0xc221
0x000000000044b043 : or byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0xca21
0x00000000004a2457 : or byte ptr [rbx + 0x394401c2], al ; retf 0x830f
0x0000000000413f1b : or byte ptr [rbx + 0x5d], bl ; movzx eax, byte ptr [rax] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040069c : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004149e6 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000402ec5 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000044c3ae : or byte ptr [rbx + 0x94801e2], al ; ret 0x8949
0x000000000041f047 : or byte ptr [rbx + 0x94807e0], al ; ret
0x000000000041f046 : or byte ptr [rbx + 0x94807e0], r8b ; ret
0x0000000000478e20 : or byte ptr [rbx + 0xc], 0x40 ; jmp 0x478ded
0x0000000000464ac7 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x00000000004111b9 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x000000000044d904 : or byte ptr [rbx], al ; add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x0000000000485979 : or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x000000000049776b : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000497a85 : or byte ptr [rcx + 0x2b802], cl ; add byte ptr [rax], al ; ret
0x000000000048b8ad : or byte ptr [rcx + 0x33], cl ; add byte ptr [r8 + 9], r9b ; ret 0x840f
0x00000000004834a2 : or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0x1475
0x0000000000483474 : or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0xe75
0x0000000000469f89 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x0000000000411877 : or byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x00000000004a5c85 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x0000000000479883 : or byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; pop r13 ; ret
0x00000000004a8238 : or byte ptr [rcx + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x00000000004788b9 : or byte ptr [rcx + 0xf], al ; mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x00000000004a3b4b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000496760 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x0000000000497a21 : or byte ptr [rcx + rbp - 0x30], al ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x00000000004a540b : or byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x000000000044bf0c : or byte ptr [rcx + rcx*4 - 0x18], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004239cd : or byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004123c1 : or byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000497772 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000044c41b : or byte ptr [rcx - 0x75], cl ; add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x00000000004a0eac : or byte ptr [rcx - 0x75], cl ; sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; retf 0xc148
0x0000000000443898 : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x0000000000421bd8 : or byte ptr [rcx - 0x77], cl ; ret
0x000000000040e75a : or byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x000000000044bbea : or byte ptr [rcx - 0x77], cl ; retf
0x0000000000404713 : or byte ptr [rcx - 0x77ba7639], 0xe8 ; ret 0x57e
0x000000000044bbb6 : or byte ptr [rcx - 0xa], al ; ret
0x000000000041e106 : or byte ptr [rcx - 0xa], al ; ret 0xf04
0x00000000004d1698 : or byte ptr [rcx - 4], al ; call rdi
0x0000000000400bc5 : or byte ptr [rcx], al ; mov rax, qword ptr [rbp - 8] ; leave ; ret
0x00000000004cd0b8 : or byte ptr [rcx], cl ; clc ; call qword ptr [rcx]
0x0000000000415aba : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000004c5c5e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000485ef0 : or byte ptr [rdi + 0x315], 4 ; ret
0x0000000000485e40 : or byte ptr [rdi + 0x315], 4 ; xor eax, eax ; ret
0x000000000047141e : or byte ptr [rdi + r9 - 0x4a], r8b ; sub byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000047141f : or byte ptr [rdi + rcx - 0x4a], al ; sub byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000045603b : or byte ptr [rdi], 0x85 ; retf 0xfffa
0x00000000004563c7 : or byte ptr [rdi], 0x85 ; rol dword ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004517a7 : or byte ptr [rdi], 0x8e ; ret 1
0x0000000000417d0f : or byte ptr [rdi], cl ; mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000413433 : or byte ptr [rdi], cl ; mov dh, 0x10 ; mov eax, edx ; pop rbx ; ret
0x00000000004101c2 : or byte ptr [rdi], cl ; mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000047fb60 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x00000000004a3c8b : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000417c67 : or byte ptr [rdi], cl ; mov dh, 2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000405244 : or byte ptr [rdi], cl ; retf 0x8941
0x000000000042f1eb : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000041c1d6 : or byte ptr [rdi], cl ; test ebx, ebp ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000411d22 : or byte ptr [rdi], cl ; test edi, eax ; add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fd08], al ; ret
0x00000000004963c3 : or byte ptr [rdi], cl ; xchg eax, edx ; ret 0x8949
0x0000000000402521 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000447fd1 : or byte ptr [rdx + 0xa], dh ; vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x00000000004889ab : or byte ptr [rdx + 1], bh ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000047b953 : or byte ptr [rdx + rbx - 0x7d], dh ; retf 0x4808
0x000000000044ae8b : or byte ptr [rdx], al ; mov eax, dword ptr [rsp + 0xc] ; jne 0x44ae64 ; neg eax ; jmp 0x44ae64
0x000000000044ae74 : or byte ptr [rsi + 0x10], bh ; mov eax, 0x48 ; syscall
0x00000000004d1544 : or byte ptr [rsi + 0x14d80000], dl ; cld ; call qword ptr [rdx]
0x0000000000425b57 : or byte ptr [rsi + 0xf], ah ; out dx, eax ; shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x00000000004d0caa : or byte ptr [rsi + rcx + 0x38], al ; add dword ptr [rdi], 0xd ; add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004d0cde : or byte ptr [rsi + rcx + 0x38], al ; add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; cld ; ret
0x00000000004d0d12 : or byte ptr [rsi + rcx + 0x38], al ; add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000459551 : or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x0000000000411cb4 : or cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000411817 : or cl, byte ptr [rax - 0x7d] ; ret
0x0000000000424d42 : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000045ef4e : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000042f166 : or cl, byte ptr [rax] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004a260d : or cl, byte ptr [rcx - 0x75] ; add al, 0x24 ; add rax, qword ptr [rdx + 8] ; call rax
0x00000000004abe77 : or cl, ch ; push rbx ; push rbp ; idiv edi ; nop dword ptr [rax] ; ret
0x0000000000485915 : or cl, ch ; ret
0x0000000000414cb6 : or cl, ch ; retf
0x0000000000489a79 : or cl, ch ; retf 0xfffd
0x00000000004c5642 : or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x000000000042b592 : or dh, al ; movzx eax, byte ptr [rdi + rcx] ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x00000000004367c3 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000004aadd5 : or dh, bl ; ret
0x00000000004c546a : or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x000000000047bc36 : or dh, byte ptr [rdi + rcx + 0x48] ; cmp ecx, esi ; jne 0x47bc3b ; lea eax, [rdx + rdi] ; ret
0x0000000000418d16 : or dh, byte ptr [rdi + rcx + 0x48] ; cmp esi, ecx ; jne 0x418d1b ; lea eax, [rdx + rdi] ; ret
0x0000000000412d9b : or dh, byte ptr [rdx + rbp*2 + 0x48] ; add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000004ae395 : or dh, dh ; jmp rsp
0x000000000044e91c : or dh, dh ; ret 0x8902
0x000000000041bd27 : or dh, dh ; ret 0xf02
0x00000000004afd14 : or dil, al ; call qword ptr [rax]
0x00000000004b2034 : or dl, ah ; stc ; dec dword ptr [rdi + rcx*8 - 0x2d360007] ; stc ; call qword ptr [rax]
0x0000000000459548 : or dword ptr [rax + 0x39], 0xf1a72c2 ; mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x000000000042193a : or dword ptr [rax + 0xf000008], 0xffffff93 ; ret 0x3d83
0x000000000044ef5a : or dword ptr [rax + 1], 0xffffffd8 ; jmp rax
0x000000000040ed2b : or dword ptr [rax + rax*8 - 0x38b79f8c], eax ; ret 0xfff0
0x000000000042a007 : or dword ptr [rax + rax], edx ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000045c14e : or dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x000000000044205e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000047c90b : or dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004a4390 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042bad7 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004409ef : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042ba15 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000412df7 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000044b85d : or dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000044b8b2 : or dword ptr [rax], eax ; add byte ptr [rax], al ; xor edi, edi ; or r10d, 0x40 ; mov eax, ecx ; syscall
0x000000000049332a : or dword ptr [rax], eax ; add byte ptr [rax], bh ; ret
0x000000000042aa18 : or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000460465 : or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004a0059 : or dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; jmp 0x4a0079
0x0000000000467baa : or dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf
0x000000000040e57c : or dword ptr [rax], eax ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x000000000040e862 : or dword ptr [rax], eax ; movzx edi, dl ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000042f204 : or dword ptr [rax], ecx ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004bf197 : or dword ptr [rax], ecx ; retf
0x0000000000495f91 : or dword ptr [rbp + 0x39], ecx ; retf
0x00000000004c4db3 : or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x000000000042e986 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000414140 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040ed27 : or dword ptr [rdi], ecx ; mov dh, 0x40 ; or dword ptr [rax + rax*8 - 0x38b79f8c], eax ; ret 0xfff0
0x000000000048b1a8 : or dword ptr [rdi], ecx ; xchg byte ptr [rcx + 0x38000000], dh ; retf 0x850f
0x0000000000478fc2 : or dword ptr [rdi], ecx ; xchg dword ptr [rdi], esi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x000000000048f0fc : or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x8348
0x000000000046e510 : or dword ptr [rdi], ecx ; xchg ecx, esp ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x00000000004a9829 : or dword ptr [rdx + 0x74], edi ; adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000004c560e : or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf 0xbb9a
0x000000000041a23b : or dword ptr [rdx - 2], esp ; dec dword ptr [rax - 0x77] ; ret
0x0000000000425747 : or dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000042f9e3 : or dword ptr [rdx], eax ; or byte ptr [rax], al ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000048a036 : or dword ptr [rip + 0x24e1ab], 1 ; pop rbx ; ret
0x00000000004a00ff : or dword ptr cs:[rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004d0cb0 : or eax, 0x10a0303 ; ret
0x00000000004d0d08 : or eax, 0x1370303 ; ret
0x0000000000445d81 : or eax, 0x1c478d48 ; ret
0x000000000045e40e : or eax, 0x27bccd ; jne 0x45e42a ; jmp 0x45e444
0x0000000000451197 : or eax, 0x2898d4 ; jne 0x4511b3 ; jmp 0x4511cd
0x00000000004d0ca0 : or eax, 0x34b0303 ; ret
0x00000000004d0cd4 : or eax, 0x35b0303 ; ret
0x0000000000486438 : or eax, 0x3a923 ; movsxd rax, dword ptr [rcx + r12*4] ; add rax, rcx ; jmp rax
0x000000000047beca : or eax, 0x3b484a8b ; cmove r8, rcx ; ret
0x00000000004c301f : or eax, 0x3cfe491d ; movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x0000000000478de2 : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000047864a : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045c85f : or eax, 0x41000000 ; mov edx, 8 ; mov eax, ecx ; syscall
0x000000000045c25a : or eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004787a1 : or eax, 0x473be ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x0000000000441672 : or eax, 0x48c0bc0f ; lea eax, [rdi + rax] ; ret
0x000000000047d8c5 : or eax, 0x48fad348 ; test edx, edx ; je 0x47d8fc ; bsf rax, rdx ; ret
0x0000000000401172 : or eax, 0x5d900000 ; ret
0x000000000042eea0 : or eax, 0x63490008 ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004c8c61 : or eax, 0x749c0000 ; hlt ; call qword ptr [rdx]
0x00000000004c8c4d : or eax, 0x74a00000 ; hlt ; call qword ptr [rax]
0x00000000004c8c75 : or eax, 0x74a80000 ; hlt ; jmp qword ptr [rax]
0x00000000004456c8 : or eax, 0x77f0ff3 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000042b627 : or eax, 0x83480000 ; ret 0x4910
0x000000000043efa1 : or eax, 0x83480000 ; ret 0xe910
0x000000000042b655 : or eax, 0x83480000 ; ret 0xeb10
0x000000000042b61d : or eax, 0x83490000 ; jmp 0x42b63d
0x0000000000428f48 : or eax, 0x894d0000 ; retf
0x00000000004893b9 : or eax, 0x8b410025 ; adc edi, dword ptr [rcx] ; ret 0x840f
0x0000000000489456 : or eax, 0x8b410025 ; adc edi, dword ptr [rcx] ; ret 0xc74
0x00000000004ac832 : or eax, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x000000000047e7e2 : or eax, 0xc2bc0f48 ; shr rax, 2 ; ret
0x00000000004c3461 : or eax, 0xcad7947e ; jmp 0x4c340d
0x00000000004ba9b9 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x00000000004ba9c1 : or eax, 0xdc50000 ; add byte ptr [rax], al ; enter 0xd, 0 ; retf
0x00000000004ba9c5 : or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x000000000042f13d : or eax, 0xe067290f ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000004c55f3 : or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x0000000000455c85 : or eax, 0xea810000 ; ret 0
0x00000000004c5293 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x00000000004afc79 : or eax, 0xf40fff8 ; clc ; jmp qword ptr [rax]
0x0000000000436673 : or eax, 0xf7f0ff3 ; ret
0x000000000044a85d : or eax, 0xffffffff ; ret
0x000000000042d2a9 : or eax, 1 ; ret
0x000000000042b807 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f141 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b835 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004c9a31 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; cld ; sbb al, byte ptr [rax] ; add ah, al ; ret
0x000000000044b901 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000004290c8 : or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004c9ad0 : or eax, dword ptr [rdx] ; jae 0x4c9ae2 ; ret
0x00000000004d2562 : or eax, dword ptr [rdx] ; ret 0xe0a
0x00000000004afcb1 : or eax, edi ; call qword ptr [rax]
0x00000000004cd0b9 : or eax, edi ; call qword ptr [rcx]
0x00000000004afcd1 : or eax, edi ; call rax
0x000000000044178e : or eax, edx ; bsf rax, rax ; lea rax, [rdi + rax] ; ret
0x0000000000497a3b : or eax, edx ; mov qword ptr [rdi + 8], rax ; mov eax, 2 ; ret
0x0000000000495907 : or ebp, 0x89480002 ; ret 0xc148
0x0000000000419674 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000404eb3 : or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; ret
0x0000000000413c5d : or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000413c40 : or ebp, edx ; mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000436833 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000415ae6 : or ebx, esi ; ret
0x00000000004245bf : or ecx, dword ptr [rax + 0x63] ; ret
0x00000000004149d7 : or ecx, dword ptr [rax + 1] ; ret 0x8949
0x00000000004c965b : or ecx, dword ptr [rax + rax] ; add byte ptr [rdi + rdx], ah ; add byte ptr [rax], al ; cld ; lodsb al, byte ptr [rsi] ; hlt ; jmp rdx
0x00000000004481fc : or ecx, dword ptr [rax - 0x73] ; adc al, 0xe ; cmp rdi, rdx ; jb 0x448215 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004a8b24 : or ecx, dword ptr [rax - 0x75] ; and al, 0x10 ; add rsp, 0x28 ; ret
0x0000000000466646 : or ecx, dword ptr [rax - 0x7d] ; call 0xffffffffc27fae56
0x00000000004254fc : or ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004ac8af : or ecx, dword ptr [rax - 0x7d] ; ret 0x4810
0x000000000042f0ba : or ecx, dword ptr [rax] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000495c63 : or ecx, dword ptr [rbp + 0x39] ; ret 0x860f
0x000000000042d2a0 : or ecx, esi ; sub rax, rcx ; je 0x42d2bc ; sbb eax, eax ; or eax, 1 ; ret
0x00000000004afc15 : or edi, eax ; call rax
0x00000000004afcb5 : or edi, eax ; push rax ; or al, 0xf8 ; call rax
0x000000000044b8b9 : or edx, 0x40 ; mov eax, ecx ; syscall
0x00000000004978e7 : or edx, eax ; mov dword ptr [rsp - 4], edx ; movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000041a4d1 : or edx, ebx ; sub eax, dword ptr [rax] ; ret
0x0000000000441def : or edx, ecx ; bsf rdx, rdx ; add rax, rdx ; sub rax, rdi ; ret
0x00000000004a8705 : or esi, 2 ; mov rdx, qword ptr [r12] ; mov edi, 1 ; call rax
0x00000000004977e3 : or esi, eax ; mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x0000000000448f63 : or esi, ebx ; movq qword ptr [rdi + rdx - 0x10], mm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000436753 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000045c9d4 : or esi, ebx ; ret
0x00000000004ae2a5 : or esi, esi ; jmp rsp
0x00000000004ae38d : or esi, esi ; ljmp [rbx - 0x560009f9] ; or dh, dh ; jmp rsp
0x0000000000414141 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000004c927a : or esp, dword ptr [rsi + rcx + 0x18] ; ret
0x000000000044b8b8 : or r10d, 0x40 ; mov eax, ecx ; syscall
0x00000000004368a2 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000436832 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004367c2 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000436752 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004d2561 : or r8d, dword ptr [r10] ; ret 0xe0a
0x0000000000489a78 : or r9b, bpl ; retf 0xfffd
0x0000000000459550 : or r9b, byte ptr [r8 + 0x39] ; ret 0x1176
0x00000000004d0d07 : or rax, 0x1370303 ; ret
0x00000000004d0c9f : or rax, 0x34b0303 ; ret
0x00000000004d0cd3 : or rax, 0x35b0303 ; ret
0x0000000000478de1 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x0000000000478649 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042ee9f : or rax, 0x63490008 ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000044a85c : or rax, 0xffffffffffffffff ; ret
0x000000000049fee2 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b8a7 : or rax, qword ptr [r8] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004c9acf : or rax, qword ptr [rdx] ; jae 0x4c9ae3 ; ret
0x000000000044178d : or rax, rdx ; bsf rax, rax ; lea rax, [rdi + rax] ; ret
0x0000000000497a3a : or rax, rdx ; mov qword ptr [rdi + 8], rax ; mov eax, 2 ; ret
0x00000000004977e2 : or rsi, rax ; mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x00000000004c9279 : or rsp, qword ptr [rsi + r9 + 0x18] ; ret
0x0000000000425a76 : out 0, al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000046a727 : out 0, al ; add byte ptr [rbp - 0x75], cl ; je 0x46a75c ; and byte ptr [rax + 1], cl ; ret
0x000000000046a726 : out 0, al ; add byte ptr [rbp - 0x75], cl ; je 0x46a75d ; and byte ptr [rax + 1], cl ; ret
0x0000000000425936 : out 0, eax ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000400a76 : out 0x16, al ; add byte ptr [rax], al ; hlt ; nop dword ptr [rax + rax] ; ret
0x0000000000419035 : out 0x31, eax ; shr al, cl ; ret
0x000000000044d880 : out 0x41, eax ; and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x44d897 ; ret
0x00000000004a94d5 : out 0x41, eax ; call rdi
0x00000000004a2149 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000497804 : out 0x48, al ; mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000047addd : out 0x48, al ; mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000044ec78 : out 0x48, eax ; add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000413c59 : out 0x48, eax ; mov eax, edi ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000424128 : out 0x48, eax ; sub eax, 0x10 ; ret
0x0000000000430836 : out 0x4c, al ; mov dword ptr [rdi - 0x12], ebx ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430666 : out 0x4c, eax ; mov dword ptr [rdi - 0x11], ebx ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430762 : out 0x4c, eax ; mov dword ptr [rdi - 0x11], ebx ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004306ae : out 0x4c, eax ; mov dword ptr [rdi - 0x11], ebx ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000414f17 : out 0x5b, al ; mov rax, r14 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047a5a5 : out 0x74, eax ; xor byte ptr [rax - 0x75], cl ; test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x00000000004c4e80 : out 0x78, al ; jnp 0x4c4ee2 ; retf
0x00000000004a533d : out 0x89, al ; out dx, eax ; call qword ptr [r14]
0x0000000000402bfd : out 0x89, al ; out dx, eax ; call qword ptr [r15 + rbx*8]
0x00000000004a5411 : out 0x89, al ; out dx, eax ; call qword ptr [rax]
0x00000000004a54ed : out 0x89, al ; out dx, eax ; call qword ptr [rcx]
0x00000000004a52f7 : out 0x89, al ; out dx, eax ; call rax
0x0000000000413a55 : out 0x8b, al ; mov ebp, 0xffffff7c ; mov eax, r13d ; syscall
0x00000000004c3411 : out 0xb3, al ; retf 0xe80
0x000000000044a5af : out 0xbf, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x00000000004c4140 : out 0xcf, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000047c93c : out 0xe8, al ; xchg eax, esi ; cmp edi, eax ; dec dword ptr [rax + 1] ; ret
0x000000000041a239 : out 0xe8, eax ; or dword ptr [rdx - 2], esp ; dec dword ptr [rax - 0x77] ; ret
0x0000000000407608 : out 0xe8, eax ; ret 0x19d
0x0000000000463b11 : out 0xe8, eax ; ret 1
0x0000000000459cf0 : out 0xe8, eax ; retf 0xfa67
0x0000000000477f6f : out 0xe8, eax ; sbb esp, dword ptr [rdx] ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00000000004069fa : out 0xeb, eax ; retf 0x8b49
0x0000000000449414 : out 0xf0, al ; mov edx, 0 ; cmove rax, rdx ; pop rbx ; ret
0x000000000043603a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004360ba : out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004c5e68 : out 0xf5, eax ; mov ch, 0xab ; ret
0x00000000004afae1 : out 0xf7, al ; call qword ptr [rax]
0x00000000004afaf1 : out 0xf7, al ; jmp rcx
0x00000000004afb39 : out 0xf7, eax ; call qword ptr [rsi - 0x69000818]
0x000000000046b421 : out 0xfd, al ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004cd6d9 : out 0xfd, eax ; jmp qword ptr [rdx]
0x0000000000463662 : out 0xff, eax ; dec dword ptr [rbp + 0x63] ; ret 0x20be
0x0000000000403e5d : out 1, eax ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000489c95 : out 4, al ; cmp rcx, qword ptr [rdi + rsi] ; jae 0x489c4b ; xor eax, eax ; ret
0x0000000000431547 : out 7, al ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000043146d : out 7, eax ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000042f405 : out 7, eax ; or byte ptr [rax], al ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000045892e : out dx, al ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x00000000004039ba : out dx, al ; call 0x4004b3
0x0000000000453f6c : out dx, al ; cli ; inc dword ptr [rcx - 0x77] ; ret
0x00000000004c5297 : out dx, al ; fcmovb st(0), st(3) ; ret
0x000000000042575e : out dx, al ; jns 0x425768 ; add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x0000000000485482 : out dx, al ; mov bl, 3 ; add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x000000000044ac2d : out dx, al ; mov edi, ebx ; mov eax, 1 ; syscall
0x000000000044ab5d : out dx, al ; mov edi, ebx ; xor eax, eax ; syscall
0x000000000043083a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000424832 : out dx, al ; mov rdi, rax ; call rcx
0x0000000000423716 : out dx, al ; mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x000000000044b858 : out dx, al ; mov rdi, rbp ; mov eax, 9 ; syscall
0x000000000043644a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000044089e : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004c55f2 : out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x00000000004c4e7f : out dx, al ; out 0x78, al ; jnp 0x4c4ee3 ; retf
0x00000000004231e3 : out dx, al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x00000000004211f6 : out dx, al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x00000000004a0cc6 : out dx, al ; xchg eax, ebp ; and eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x0000000000418c39 : out dx, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000418c91 : out dx, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000046a411 : out dx, eax ; call 0x4004c8
0x0000000000422d54 : out dx, eax ; call 0x41ef93
0x00000000004a533f : out dx, eax ; call qword ptr [r14]
0x0000000000402bff : out dx, eax ; call qword ptr [r15 + rbx*8]
0x00000000004a5413 : out dx, eax ; call qword ptr [rax]
0x00000000004a54ef : out dx, eax ; call qword ptr [rcx]
0x0000000000459c1d : out dx, eax ; call r12
0x00000000004aa4bd : out dx, eax ; call r14
0x0000000000423bb7 : out dx, eax ; call rax
0x000000000047e442 : out dx, eax ; call rbx
0x00000000004b0a55 : out dx, eax ; clc ; jmp qword ptr [rax]
0x00000000004c5ee5 : out dx, eax ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x00000000004afbed : out dx, eax ; idiv edi ; cmp byte ptr [rdx], cl ; clc ; inc dword ptr [rax] ; or al, 0xf8 ; jmp rax
0x000000000045ac1f : out dx, eax ; je 0x45ac32 ; call 0x4213db
0x00000000004abf69 : out dx, eax ; je 0x4abf84 ; call 0x4213dc
0x000000000040f34f : out dx, eax ; lea rbx, [r15 + rax] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000044b85b : out dx, eax ; mov eax, 9 ; syscall
0x00000000004137fd : out dx, eax ; mov eax, r9d ; syscall
0x0000000000403a52 : out dx, eax ; mov esi, dword ptr [r13 + r15*8 + 4] ; add rsi, qword ptr [rbp - 0x68] ; call 0x4004bc
0x000000000043066a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430766 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004306b2 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000047e593 : out dx, eax ; mov r9, r14 ; call rbx
0x000000000040f2ba : out dx, eax ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004364ca : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000047d426 : out dx, eax ; mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000044099d : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042d9d3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42d9ab
0x000000000042da51 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42da29
0x000000000042dee3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42debb
0x000000000042df61 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42df39
0x000000000042d5d3 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042d5e8 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042d5fd : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000447ab3 : out dx, eax ; ret 0xf66
0x0000000000466605 : out dx, eax ; ret 5
0x0000000000447a96 : out dx, eax ; retf 0x4466
0x00000000004c55bb : out dx, eax ; retf 0xab0d
0x0000000000425b5a : out dx, eax ; shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000042eaec : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042ead5 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042eabe : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042d57a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042d84f : out dx, eax ; xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042d90c : out dx, eax ; xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042d86a : out dx, eax ; xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042d8bb : out dx, eax ; xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004a6437 : out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x000000000043e8ae : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000478f58 : outsb dx, byte ptr [rsi] ; add al, 0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000046de49 : outsb dx, byte ptr [rsi] ; add byte ptr es:[rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x0000000000445ede : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x000000000049d0a5 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000495803 : outsb dx, byte ptr [rsi] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004cdaf1 : outsb dx, byte ptr [rsi] ; clc ; call qword ptr [rdi]
0x00000000004b090d : outsb dx, byte ptr [rsi] ; clc ; jmp qword ptr [rax + 0x20fff86f]
0x00000000004b094d : outsb dx, byte ptr [rsi] ; clc ; jmp qword ptr [rax]
0x00000000004c5a43 : outsb dx, byte ptr [rsi] ; ja 0x4c59cc ; ret 0x48f
0x0000000000487ac0 : outsb dx, byte ptr [rsi] ; or byte ptr [rax + 1], cl ; ret
0x00000000004627ce : outsb dx, byte ptr [rsi] ; retf
0x00000000004c3784 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x00000000004c4db8 : outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x000000000041a4b2 : outsd dx, dword ptr [rsi] ; and al, 0x89 ; adc byte ptr [r11 + 0x5d], r11b ; ret
0x00000000004b0911 : outsd dx, dword ptr [rsi] ; clc ; jmp qword ptr [rax]
0x0000000000425d08 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000043a22e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000004c8ad1 : outsd dx, dword ptr [rsi] ; hlt ; call rsp
0x00000000004116ad : outsd dx, dword ptr [rsi] ; jne 0x4116e2 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000430df2 : outsd dx, dword ptr [rsi] ; mov ebx, 0x4e6f0ff3 ; retf
0x0000000000430ff2 : outsd dx, dword ptr [rsi] ; mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x000000000042d9ce : outsd dx, dword ptr [rsi] ; pop rdi ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42d9b0
0x000000000042da4c : outsd dx, dword ptr [rsi] ; pop rdi ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42da2e
0x000000000042dede : outsd dx, dword ptr [rsi] ; pop rdi ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42dec0
0x000000000042df5c : outsd dx, dword ptr [rsi] ; pop rdi ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42df3e
0x000000000042d5ce : outsd dx, dword ptr [rsi] ; push rdi ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042d5e3 : outsd dx, dword ptr [rsi] ; push rdi ; and byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e8ed : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000042e98d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000042e4b2 : outsd dx, dword ptr [rsi] ; push rdi ; retf
0x000000000042e532 : outsd dx, dword ptr [rsi] ; push rdi ; retf 0xcab2
0x000000000042d5f8 : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047d42a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000445726 : outsd dx, dword ptr [rsi] ; push rsi ; adc bl, dh ; movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000004456c6 : outsd dx, dword ptr [rsi] ; push rsi ; or eax, 0x77f0ff3 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x0000000000445706 : outsd dx, dword ptr [rsi] ; push rsi ; psllq mm1, qword ptr [rdi] ; jg 0x445720 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000042e8f2 : outsd dx, dword ptr [rsi] ; ret
0x0000000000464e8d : outsd dx, dword ptr [rsi] ; ret 0x290f
0x0000000000464eb6 : outsd dx, dword ptr [rsi] ; ret 0x33e8
0x000000000041b67a : outsd dx, dword ptr [rsi] ; ret 0x4466
0x00000000004c4146 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x000000000041b0b2 : outsd dx, dword ptr [rsi] ; ret 0x8348
0x0000000000430fa7 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x000000000042e992 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x0000000000467c0d : outsd dx, dword ptr [rsi] ; ret 0xdce8
0x0000000000467be9 : outsd dx, dword ptr [rsi] ; ret 0xe583
0x000000000047d47a : outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000430e72 : outsd dx, dword ptr [rsi] ; retf
0x000000000043e259 : outsd dx, dword ptr [rsi] ; retf 0x4466
0x0000000000431072 : outsd dx, dword ptr [rsi] ; retf 0x8b4c
0x000000000042deda : outsd dx, dword ptr [rsi] ; retf 0xf66
0x000000000042d9ca : outsd dx, dword ptr [rsi] ; retf 0xff3
0x0000000000464e54 : outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x0000000000467baf : outsd dx, dword ptr [rsi] ; sbb dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf
0x00000000004c4145 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000042b4e2 : pcmpeqb mm0, mm1 ; lea r10, [r10 + r9] ; jmp r10
0x000000000047eb74 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x000000000047eb5f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000042b4e1 : pcmpeqb xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x00000000004c5545 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000004c5546 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x0000000000449176 : pextrw edi, mm0, 0x77 ; ret
0x000000000047d60a : pextrw edi, mm5, 0x74 ; rol ebp, 1 ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x000000000042c60c : pmovmskb eax, mm1 ; bsf eax, eax ; lea rax, [rdi + rax + 0x30] ; ret
0x000000000042c6a2 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x42c709 ; xor eax, eax ; ret
0x000000000042c60b : pmovmskb eax, xmm1 ; bsf eax, eax ; lea rax, [rdi + rax + 0x30] ; ret
0x000000000042c6a1 : pmovmskb eax, xmm1 ; test eax, eax ; jne 0x42c70a ; xor eax, eax ; ret
0x0000000000441c8f : pmovmskb edx, mm4 ; test edx, edx ; je 0x441ca3 ; bsf eax, edx ; ret
0x0000000000441c8f : pmovmskb edx, mm4 ; test edx, edx ; je 0x441ca4 ; bsf eax, edx ; ret
0x0000000000441c8e : pmovmskb edx, xmm4 ; test edx, edx ; je 0x441ca4 ; bsf eax, edx ; ret
0x0000000000441c8e : pmovmskb edx, xmm4 ; test edx, edx ; je 0x441ca5 ; bsf eax, edx ; ret
0x000000000044d835 : pop r10 ; ret
0x00000000004c59cf : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000044fbf0 : pop r12 ; jmp 0x45c664
0x000000000044b9f1 : pop r12 ; jmp rax
0x000000000044b9d6 : pop r12 ; mov esi, 2 ; jmp rax
0x00000000004211f9 : pop r12 ; pop r13 ; pop r14 ; jmp rax
0x000000000042371c : pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x00000000004223c6 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004038ce : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040069f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000410ce9 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000041157e : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040edb9 : pop r12 ; pop r13 ; ret
0x00000000004070c4 : pop r12 ; ret
0x00000000004211fb : pop r13 ; pop r14 ; jmp rax
0x000000000042371e : pop r13 ; pop r14 ; jmp rcx
0x00000000004223c8 : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004038d0 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004006a1 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000410ceb : pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000411580 : pop r13 ; pop r14 ; ret
0x000000000040edbb : pop r13 ; ret
0x00000000004211fd : pop r14 ; jmp rax
0x0000000000423720 : pop r14 ; jmp rcx
0x00000000004223ca : pop r14 ; pop r15 ; jmp rax
0x00000000004038d2 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004006a3 : pop r14 ; pop r15 ; ret
0x0000000000410ced : pop r14 ; pop rbp ; ret
0x0000000000411582 : pop r14 ; ret
0x00000000004223cc : pop r15 ; jmp rax
0x00000000004038d4 : pop r15 ; pop rbp ; ret
0x00000000004006a5 : pop r15 ; ret
0x00000000004a5c44 : pop rax ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000004cd80d : pop rax ; add byte ptr [rax], al ; mov al, 0x4d ; clc ; call qword ptr [rax]
0x000000000041f9b4 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x000000000048e210 : pop rax ; idiv bh ; dec dword ptr [rax + 0x39] ; ret
0x0000000000460829 : pop rax ; idiv edi ; dec dword ptr [rax + 0x63] ; retf
0x000000000045f75d : pop rax ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0x8c20
0x00000000004abaed : pop rax ; idiv edi ; test rbp, rbp ; jne 0x4abae4 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000460e62 : pop rax ; jmp 0x460e69
0x000000000048be7c : pop rax ; jmp qword ptr [rax]
0x0000000000433e54 : pop rax ; mov edi, 0x63490007 ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004d0d94 : pop rax ; mov es, word ptr [rax] ; add al, bl ; lahf ; sti ; jmp qword ptr [rcx]
0x000000000041b001 : pop rax ; or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004ada42 : pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x000000000040ed26 : pop rax ; or dword ptr [rdi], ecx ; mov dh, 0x40 ; or dword ptr [rax + rax*8 - 0x38b79f8c], eax ; ret 0xfff0
0x0000000000412c4e : pop rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000048bf36 : pop rax ; pop rdx ; pop rbx ; ret
0x00000000004c0d64 : pop rax ; push rdi ; cld ; call qword ptr [rax]
0x00000000004c0d7c : pop rax ; push rdi ; cld ; jmp qword ptr [rbx]
0x00000000004c0d78 : pop rax ; push rdi ; cld ; lcall [rax + 0x57] ; cld ; jmp qword ptr [rbx]
0x000000000044aadc : pop rax ; ret
0x00000000004c5923 : pop rax ; retf
0x00000000004aa8e1 : pop rax ; sub byte ptr [rbp + 1], cl ; retf
0x00000000004d1694 : pop rax ; xchg eax, edi ; add byte ptr [rax], al ; or byte ptr [rcx - 4], al ; call rdi
0x0000000000457f69 : pop rbp ; add al, 0x4d ; cmp ebp, ebx ; jb 0x457fe1 ; mov rdx, rax ; jmp 0x457f38
0x000000000048f0f5 : pop rbp ; add byte ptr [rbp - 0x57f2fad], cl ; or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x8348
0x000000000047c97a : pop rbp ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000044ccc6 : pop rbp ; add rsp, 0xd0 ; pop rbx ; ret
0x00000000004b01e1 : pop rbp ; clc ; call qword ptr [rax]
0x00000000004b03e1 : pop rbp ; clc ; jmp qword ptr [rax + 0x10fff85c]
0x00000000004b0261 : pop rbp ; clc ; jmp rdx
0x00000000004b03dd : pop rbp ; clc ; push qword ptr [rax] ; pop rbp ; clc ; jmp qword ptr [rax + 0x10fff85c]
0x00000000004b025d : pop rbp ; clc ; push qword ptr [rdx + 0x5d] ; clc ; jmp rdx
0x00000000004c53c5 : pop rbp ; insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x00000000004020eb : pop rbp ; jle 0x402122 ; add byte ptr [rsp + rcx - 0x7f], dh ; retf 0x440
0x00000000004179e0 : pop rbp ; jmp rax
0x000000000047f9a8 : pop rbp ; mov eax, 0x101 ; syscall
0x00000000004a2563 : pop rbp ; mov eax, 0x89fd8945 ; ret 0xe283
0x0000000000423e80 : pop rbp ; mov eax, r13d ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000400aab : pop rbp ; mov edi, 0x6d8bd0 ; jmp rax
0x00000000004c3d20 : pop rbp ; movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x0000000000413f1d : pop rbp ; movzx eax, byte ptr [rax] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004a438f : pop rbp ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044fbef : pop rbp ; pop r12 ; jmp 0x45c665
0x000000000044b9f0 : pop rbp ; pop r12 ; jmp rax
0x000000000044b9d5 : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x00000000004211f8 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x000000000042371b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x00000000004223c5 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000040069e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000041157d : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040edb8 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004070c3 : pop rbp ; pop r12 ; ret
0x00000000004211fc : pop rbp ; pop r14 ; jmp rax
0x000000000042371f : pop rbp ; pop r14 ; jmp rcx
0x00000000004223c9 : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x00000000004038d1 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004006a2 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000410cec : pop rbp ; pop r14 ; pop rbp ; ret
0x0000000000411581 : pop rbp ; pop r14 ; ret
0x0000000000497778 : pop rbp ; pop rbx ; ret
0x0000000000400ab8 : pop rbp ; ret
0x000000000045192f : pop rbp ; retf
0x000000000045192c : pop rbp ; test al, 0xe8 ; pop rbp ; retf
0x00000000004cda59 : pop rbx ; add byte ptr [rax], al ; and al, 0x65 ; clc ; call rcx
0x00000000004cdaed : pop rbx ; add byte ptr [rax], al ; jo 0x4cdb66 ; clc ; call qword ptr [rdi]
0x00000000004a7e2d : pop rbx ; add dword ptr [rax + 1], ecx ; retf
0x00000000004c2d18 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000449522 : pop rbx ; and eax, 0x7ff80000 ; div ecx ; mov eax, eax ; ret
0x00000000004494c6 : pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004b0371 : pop rbx ; clc ; call rax
0x00000000004b03ad : pop rbx ; clc ; jmp qword ptr [rax]
0x00000000004b02f1 : pop rbx ; clc ; jmp rsp
0x00000000004b036d : pop rbx ; clc ; ljmp [rdx] ; pop rbx ; clc ; call rax
0x00000000004c0d69 : pop rbx ; cld ; jmp qword ptr [rbx]
0x00000000004c2d16 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000417924 : pop rbx ; jmp rax
0x000000000046f228 : pop rbx ; loopne 0x46f232 ; dec dword ptr [rcx + 0x63] ; ret
0x000000000048a057 : pop rbx ; mov eax, dword ptr fs:[rax] ; ret
0x0000000000449511 : pop rbx ; mov eax, eax ; ret
0x000000000047a4cf : pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004679ad : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000004c52d3 : pop rbx ; mov ebp, 0x63b1101 ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x0000000000418469 : pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000412948 : pop rbx ; mov rax, qword ptr [rax + 0x130] ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000414f18 : pop rbx ; mov rax, r14 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044b9e7 : pop rbx ; mov rax, rbp ; mov esi, 3 ; pop rbp ; pop r12 ; jmp rax
0x0000000000411579 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041be83 : pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x00000000004231e0 : pop rbx ; mov rsi, r13 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x00000000004038cd : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000410ce8 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004595ac : pop rbx ; pop r12 ; ret
0x00000000004a64b9 : pop rbx ; pop r14 ; ret
0x00000000004179df : pop rbx ; pop rbp ; jmp rax
0x0000000000413f1c : pop rbx ; pop rbp ; movzx eax, byte ptr [rax] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044fbee : pop rbx ; pop rbp ; pop r12 ; jmp 0x45c666
0x000000000047ade1 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000044b9d4 : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x00000000004211f7 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x000000000042371a : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x00000000004223c4 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000040069d : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004115b4 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040edb7 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004070c2 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000401371 : pop rbx ; pop rbp ; ret
0x00000000004020b8 : pop rbx ; ret
0x00000000004c6000 : pop rbx ; ret 0x6f9
0x00000000004c34dd : pop rbx ; retf
0x00000000004a3f1c : pop rbx ; sar rax, 3 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044fb30 : pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x00000000004070de : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000418432 : pop rbx ; xor edx, edx ; jmp rax
0x000000000042b2b7 : pop rcx ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042f893 : pop rcx ; add ecx, dword ptr [rax] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004986f4 : pop rcx ; and al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000485f8d : pop rcx ; cld ; inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x00000000004c0d89 : pop rcx ; cld ; jmp qword ptr [rbx]
0x000000000042b997 : pop rcx ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004ac06b : pop rcx ; retf 0x22
0x000000000048cfb5 : pop rcx ; shl byte ptr [rdi + rax*8], 0x22 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000042f1e8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042d9cf : pop rdi ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42d9af
0x000000000042da4d : pop rdi ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42da2d
0x000000000042dedf : pop rdi ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42debf
0x000000000042df5d : pop rdi ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42df3d
0x0000000000483616 : pop rdi ; add al, ch ; retf
0x000000000044102d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004b0311 : pop rdi ; clc ; call rsp
0x00000000004b01d5 : pop rdi ; clc ; jmp qword ptr [rax + 0x20fff85e]
0x00000000004b01d1 : pop rdi ; clc ; jmp qword ptr [rax]
0x0000000000430c09 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430a19 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004c52be : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000004223cd : pop rdi ; jmp rax
0x00000000004c4281 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x000000000044c6c2 : pop rdi ; mov rdi, qword ptr [r13] ; call r12
0x000000000044bbe9 : pop rdi ; or byte ptr [rcx - 0x77], cl ; retf
0x000000000044bbb5 : pop rdi ; or byte ptr [rcx - 0xa], al ; ret
0x0000000000430839 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430669 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430765 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004306b1 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004038d5 : pop rdi ; pop rbp ; ret
0x00000000004006a6 : pop rdi ; ret
0x00000000004b1fe0 : pop rdi ; sar ecx, 1 ; ljmp [rdx] ; sar ecx, 1 ; jmp rdx
0x000000000042be96 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x00000000004958e1 : pop rdx ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004c0da5 : pop rdx ; cld ; jmp qword ptr [rax]
0x00000000004c0da9 : pop rdx ; cld ; jmp qword ptr [rbx]
0x00000000004c0d75 : pop rdx ; cld ; lcall [rax + 0x57] ; cld ; lcall [rax + 0x57] ; cld ; jmp qword ptr [rbx]
0x00000000004b0a6f : pop rdx ; cmc ; clc ; call qword ptr [rax - 0x1f00070a]
0x00000000004c4ea1 : pop rdx ; je 0x4c4e6b ; ret 0xacfc
0x00000000004c4fb3 : pop rdx ; leave ; retf
0x00000000004c5e67 : pop rdx ; out 0xf5, eax ; mov ch, 0xab ; ret
0x000000000044d834 : pop rdx ; pop r10 ; ret
0x000000000048bf37 : pop rdx ; pop rbx ; ret
0x00000000004b0a6e : pop rdx ; pop rdx ; cmc ; clc ; call qword ptr [rax - 0x1f00070a]
0x00000000004b0a6d : pop rdx ; pop rdx ; pop rdx ; cmc ; clc ; call qword ptr [rax - 0x1f00070a]
0x00000000004b0a6c : pop rdx ; pop rdx ; pop rdx ; pop rdx ; cmc ; clc ; call qword ptr [rax - 0x1f00070a]
0x00000000004b0a6b : pop rdx ; pop rdx ; pop rdx ; pop rdx ; pop rdx ; cmc ; clc ; call qword ptr [rax - 0x1f00070a]
0x000000000044d859 : pop rdx ; pop rsi ; ret
0x000000000044ab35 : pop rdx ; ret
0x00000000004c4e83 : pop rdx ; retf
0x00000000004c59d0 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000042d9d4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42d9aa
0x000000000042da52 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42da28
0x000000000042dee4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42deba
0x000000000042df62 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42df38
0x0000000000440f2e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000464e4e : pop rsi ; add al, byte ptr [rax] ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x00000000004216c6 : pop rsi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004c80d4 : pop rsi ; cdq ; call qword ptr [rcx]
0x00000000004b0319 : pop rsi ; clc ; call rsp
0x00000000004b01dd : pop rsi ; clc ; jmp qword ptr [rax + 0x10fff85d]
0x00000000004b01d9 : pop rsi ; clc ; jmp qword ptr [rax]
0x00000000004b0259 : pop rsi ; clc ; push rdx ; pop rbp ; clc ; push qword ptr [rdx + 0x5d] ; clc ; jmp rdx
0x0000000000459d46 : pop rsi ; cmp byte ptr [rcx - 0x77], cl ; push rsi ; sub byte ptr [rax - 0x3f], cl ; retf
0x00000000004211fe : pop rsi ; jmp rax
0x0000000000423721 : pop rsi ; jmp rcx
0x000000000044c692 : pop rsi ; mov rdi, qword ptr [r13] ; call r12
0x00000000004223cb : pop rsi ; pop r15 ; jmp rax
0x00000000004038d3 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000004006a4 : pop rsi ; pop r15 ; ret
0x0000000000410cee : pop rsi ; pop rbp ; ret
0x0000000000411583 : pop rsi ; ret
0x000000000043eac0 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042c194 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043f7c0 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x000000000048b34b : pop rsp ; add eax, dword ptr [rax] ; mov qword ptr [rbp - 0x78], rax ; mov eax, 0x15 ; syscall
0x000000000041dcbb : pop rsp ; and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x00000000004b03a9 : pop rsp ; clc ; call qword ptr [rax + 0x20fff85b]
0x00000000004b03e5 : pop rsp ; clc ; call qword ptr [rax]
0x00000000004b03a5 : pop rsp ; clc ; jmp qword ptr [rax]
0x00000000004b0369 : pop rsp ; clc ; lcall [rdx + 0x2afff85b] ; pop rbx ; clc ; call rax
0x00000000004b02e9 : pop rsp ; clc ; ljmp [rsi + 0x3efff85b] ; pop rbx ; clc ; jmp rsp
0x000000000046158a : pop rsp ; fadd qword ptr [rip + 0x3d8d4800] ; retf
0x000000000044fbf1 : pop rsp ; jmp 0x45c663
0x000000000044b9f2 : pop rsp ; jmp rax
0x000000000044b9d7 : pop rsp ; mov esi, 2 ; jmp rax
0x0000000000429d6e : pop rsp ; or byte ptr [rax], al ; movsxd r9, dword ptr [r10 + r9*4] ; lea r10, [r10 + r9] ; jmp r10
0x00000000004211fa : pop rsp ; pop r13 ; pop r14 ; jmp rax
0x000000000042371d : pop rsp ; pop r13 ; pop r14 ; jmp rcx
0x00000000004223c7 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004038cf : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004006a0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000410cea : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000041157f : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000040edba : pop rsp ; pop r13 ; ret
0x0000000000403073 : pop rsp ; ret
0x0000000000434190 : pop rsp ; ret 7
0x0000000000403136 : pop rsp ; retf
0x00000000004959c9 : pop rsp ; retf 0x4df0
0x00000000004cab44 : pop rsp ; sbb al, 0xf5 ; call qword ptr [rax]
0x00000000004c5027 : pop rsp ; sbb ebp, ebx ; retf
0x0000000000479b9c : popfq ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000410c94 : popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004d1d05 : popfq ; add byte ptr [rax], al ; test al, 0xd3 ; cld ; call qword ptr [rax]
0x000000000046c51d : popfq ; call 0xffffffffc3cac527
0x000000000046c25f : popfq ; idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000004c4fac : popfq ; jrcxz 0x4c4f71 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x0000000000425bae : popfq ; or byte ptr [rax], al ; movsxd r9, dword ptr [r10 + r9*4] ; lea r10, [r10 + r9] ; jmp r10
0x000000000049194d : popfq ; ret 0x841
0x00000000004a7ffe : popfq ; ret 0xf45
0x000000000040a7bf : popfq ; retf
0x00000000004c5d62 : popfq ; retf 0xde4f
0x000000000049d4e0 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000436592 : psllq mm1, qword ptr [r15] ; jg 0x4365ad ; ret
0x00000000004390b2 : psllq mm1, qword ptr [r15] ; jg 0x4390cd ; ret
0x0000000000436593 : psllq mm1, qword ptr [rdi] ; jg 0x4365ac ; ret
0x00000000004390b3 : psllq mm1, qword ptr [rdi] ; jg 0x4390cc ; ret
0x00000000004455a6 : psllq mm1, qword ptr [rdi] ; jg 0x4455ba ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000004455a5 : psllq mm1, qword ptr [rdi] ; jg 0x4455bb ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000445607 : psllq mm1, qword ptr [rdi] ; jg 0x44561c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000445606 : psllq mm1, qword ptr [rdi] ; jg 0x44561d ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000445708 : psllq mm1, qword ptr [rdi] ; jg 0x44571e ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000445c36 : psllq mm1, qword ptr [rdi] ; jg 0x445c4e ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x0000000000400b1d : push -0x17ffb381 ; retf 0xaa4
0x00000000004c3d84 : push -0x30 ; retf 0xe72e
0x00000000004cc9a4 : push -0x37ffffb6 ; in eax, 0xf7 ; call qword ptr [rbx]
0x00000000004cc2a4 : push -0x37ffffbd ; ret 0xfff7
0x00000000004c340e : push -0x51 ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004c55b5 : push -0x57d3205 ; call 0xffffffffab5a20b5
0x00000000004c35c1 : push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x00000000004b1220 : push -0x6a ; stc ; jmp qword ptr [rdx]
0x000000000045fc52 : push -0x7c000003 ; ret
0x0000000000471052 : push -0x7c000006 ; ret 0x8908
0x0000000000420fc2 : push -0x7cb7ffd5 ; retf 0x4901
0x0000000000445ec4 : push -0x9ffffff ; ret 0x7501
0x00000000004d2ae9 : push -3 ; call qword ptr [rbx]
0x00000000004c0d9d : push -4 ; dec dword ptr [rax + 0x60fffc5a] ; pop rdx ; cld ; jmp qword ptr [rax]
0x00000000004c0d6d : push -4 ; jmp qword ptr [rbx]
0x00000000004c0d61 : push -4 ; lcall [rax + 0x57] ; cld ; call qword ptr [rax]
0x000000000041a546 : push -7 ; sub eax, dword ptr [rax] ; ret
0x00000000004affc9 : push -8 ; call qword ptr [rsi + 0x26fff869]
0x00000000004b0105 : push -8 ; call rsp
0x00000000004b0101 : push -8 ; inc dword ptr [rdx + rbp*2 - 8] ; call rsp
0x00000000004affc5 : push -8 ; inc dword ptr [rsi] ; push -8 ; call qword ptr [rsi + 0x26fff869]
0x00000000004b0185 : push -8 ; inc eax ; imul edi, eax, 0xf86950ff ; jmp rax
0x00000000004b0941 : push -8 ; jmp qword ptr [rax + 0x20fff86b]
0x00000000004aff85 : push -8 ; jmp qword ptr [rax]
0x00000000004b0045 : push -8 ; push rdx ; imul edi, eax, 0xf86982ff ; call qword ptr [rdx]
0x000000000047c251 : push 0 ; lea r9, [rbp - 0x40] ; mov rdi, r15 ; call r12
0x000000000047e2c3 : push 0 ; lea rcx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x00000000004c4db5 : push 0x1b6e41b5 ; std ; retf
0x0000000000468c63 : push 0x29490005 ; ret
0x00000000004ce7c9 : push 0x2e740000 ; stc ; call qword ptr [rsi]
0x00000000004c527f : push 0x42d256 ; int1 ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x0000000000412d9d : push 0x48 ; add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000004a3d84 : push 0x4800001f ; mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x0000000000483e25 : push 0x48b4901 ; and al, 0x83 ; ret
0x000000000045a04c : push 0x4cffffff ; mov edi, esi ; call rdx
0x0000000000411ad7 : push 0x5c415d5b ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004b0199 : push 0x6790fff8 ; clc ; jmp qword ptr [rax]
0x00000000004b0195 : push 0x6800fff8 ; clc ; call qword ptr [rax + 0x20fff867]
0x00000000004affd5 : push 0x6846fff8 ; clc ; call rsi
0x00000000004b08fd : push 0x69a0fff8 ; clc ; jmp qword ptr [rax]
0x00000000004b093d : push 0x6a20fff8 ; clc ; jmp qword ptr [rax + 0x20fff86b]
0x00000000004c5a42 : push 0x6e ; ja 0x4c59cd ; ret 0x48f
0x0000000000418a75 : push 0x74c98548 ; and cl, byte ptr [rax + 0x39] ; retf
0x0000000000417357 : push 0x74c98548 ; sub byte ptr [rax + 0x39], cl ; retf
0x000000000047b925 : push 0x74fff883 ; add eax, 0x5c415d5b ; ret
0x000000000041869a : push 0x75c08548 ; ret
0x00000000004d17a4 : push 0x78000098 ; cld ; jmp qword ptr [rcx]
0x00000000004c5322 : push 0xfd4cbe ; retf 0xf64
0x0000000000439f6e : push 7 ; add byte ptr [rdi + 0x63], cl ; or al, 0x8a ; lea r10, [r10 + r9] ; jmp r10
0x00000000004b03a3 : push qword ptr [rax + 0x20fff85c] ; pop rsp ; clc ; call qword ptr [rax + 0x20fff85b]
0x00000000004aff23 : push qword ptr [rax + 0x2b] ; clc ; inc eax ; sub al, 0xf8 ; call qword ptr [rax]
0x00000000004b03db : push qword ptr [rax + 0x30fff85d] ; pop rbp ; clc ; jmp qword ptr [rax + 0x10fff85c]
0x00000000004afdcb : push qword ptr [rax + 0x40fff83f] ; xor bh, al ; inc dword ptr [rax] ; xor al, 0xf8 ; jmp rax
0x00000000004b01a3 : push qword ptr [rax + 0x40fff866] ; clc ; call rax
0x00000000004b0483 : push qword ptr [rax + 0x40fff890] ; nop ; clc ; call rax
0x00000000004c0d73 : push qword ptr [rax + 0x58fffc5a] ; push rdi ; cld ; lcall [rax + 0x57] ; cld ; jmp qword ptr [rbx]
0x00000000004b0193 : push qword ptr [rax + 0x68] ; clc ; inc dword ptr [rax] ; push 0x6790fff8 ; clc ; jmp qword ptr [rax]
0x00000000004aff7b : push qword ptr [rax + 0x6b] ; clc ; inc dword ptr [rax] ; imul edi, eax, -1 ; nop ; push -8 ; jmp qword ptr [rax]
0x00000000004afdab : push qword ptr [rax + 6] ; clc ; dec dword ptr [rax + 0x32] ; clc ; call qword ptr [rax]
0x00000000004b1a3b : push qword ptr [rax + rcx*8] ; stc ; call rax
0x00000000004b1a37 : push qword ptr [rax + rcx*8] ; stc ; push qword ptr [rax + rcx*8] ; stc ; call rax
0x00000000004b1a33 : push qword ptr [rax + rcx*8] ; stc ; push qword ptr [rax + rcx*8] ; stc ; push qword ptr [rax + rcx*8] ; stc ; call rax
0x00000000004b1a23 : push qword ptr [rax + rcx*8] ; stc ; push rax ; retf 0xfff9
0x00000000004b0b43 : push qword ptr [rax - 0x2f0006b1] ; stc ; jmp rax
0x00000000004b0b13 : push qword ptr [rax - 0x2f0006b5] ; stc ; push rax ; stc ; call qword ptr [rax]
0x00000000004b1a4b : push qword ptr [rax - 0x36] ; stc ; dec dword ptr [rax - 0x36] ; stc ; jmp qword ptr [rax]
0x00000000004b0aeb : push qword ptr [rax - 0x3f0006b6] ; stc ; call rax
0x00000000004afa8f : push qword ptr [rax - 0x5f00083e] ; ret
0x00000000004b0473 : push qword ptr [rax - 0x6e] ; clc ; inc dword ptr [rax] ; xchg eax, edx ; clc ; call qword ptr [rax + 0x20fff891]
0x00000000004b1a43 : push qword ptr [rax - 0x6f000636] ; retf 0xfff9
0x00000000004b0877 : push qword ptr [rax - 0x78] ; clc ; jmp rax
0x00000000004afd57 : push qword ptr [rax - 1] ; idiv edi ; rol byte ptr [rax], 0xf8 ; call qword ptr [rax]
0x00000000004c7cb3 : push qword ptr [rax] ; add dh, bh ; call rcx
0x00000000004afd9b : push qword ptr [rax] ; add eax, edi ; inc dword ptr [rax - 0x2f0007fe] ; add edi, eax ; jmp qword ptr [rax]
0x00000000004aff13 : push qword ptr [rax] ; clc ; inc dword ptr [rax - 0x2f0007d9] ; sub al, bh ; jmp qword ptr [rax]
0x00000000004afd47 : push qword ptr [rax] ; cli ; idiv edi ; cmp bl, 0xf7 ; call rax
0x00000000004afe3f : push qword ptr [rax] ; cmp eax, edi ; call qword ptr [rax]
0x00000000004b0aab : push qword ptr [rax] ; hlt ; clc ; inc eax ; stc ; call rax
0x00000000004a67ff : push qword ptr [rax] ; jne 0x4a6843 ; mov rax, qword ptr [rsi + 0xb0] ; ret
0x00000000004a999d : push qword ptr [rax] ; jne 0x4a99d0 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x00000000004aa7fd : push qword ptr [rax] ; jne 0x4aa830 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x00000000004b2ec7 : push qword ptr [rax] ; mov bh, dl ; jmp rax
0x00000000004b09d3 : push qword ptr [rax] ; mov dl, 0xf8 ; inc dword ptr [rax - 0x4c] ; clc ; jmp rax
0x00000000004afc0f : push qword ptr [rax] ; or bh, al ; push rax ; or edi, eax ; call rax
0x00000000004b03df : push qword ptr [rax] ; pop rbp ; clc ; jmp qword ptr [rax + 0x10fff85c]
0x00000000004b0183 : push qword ptr [rax] ; push -8 ; inc eax ; imul edi, eax, 0xf86950ff ; jmp rax
0x00000000004b0a7b : push qword ptr [rax] ; stc ; clc ; inc dword ptr [rax - 0x2f000706] ; sti ; clc ; jmp qword ptr [rax]
0x0000000000447848 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x000000000044ba88 : push qword ptr [rbp + 0x35] ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044ba60 : push qword ptr [rbp + 0x3d] ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044c690 : push qword ptr [rbp + 0x5e] ; mov rdi, qword ptr [r13] ; call r12
0x000000000044c6c0 : push qword ptr [rbp + 0x5f] ; mov rdi, qword ptr [r13] ; call r12
0x000000000042d259 : push qword ptr [rbp + 4] ; vzeroupper ; ret
0x000000000047b928 : push qword ptr [rbp + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x00000000004a2c06 : push qword ptr [rbp + rax - 0x18] ; ret 0xf7e7
0x000000000041849d : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x000000000047b94e : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000418906 : push qword ptr [rbp + rcx - 0x18] ; ret 0x8a
0x00000000004ac619 : push qword ptr [rbp + rdx + 0x48] ; mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x4ac638 ; call rax
0x00000000004b1217 : push qword ptr [rbp + rdx*4 - 0x69670007] ; stc ; ljmp [rdx - 0x6a] ; stc ; jmp qword ptr [rdx]
0x00000000004b12ab : push qword ptr [rbp + rdx*4 - 0x6a050007] ; stc ; jmp rsi
0x000000000048970b : push qword ptr [rbp - 0x2e] ; ret
0x0000000000418cd0 : push qword ptr [rbp - 0x44] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000462e6b : push qword ptr [rbp - 0x4b8] ; push rax ; call 0x45f119
0x000000000044a84c : push qword ptr [rbx + 1] ; ret
0x0000000000418c34 : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000047bba5 : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004b081f : push qword ptr [rbx + rax*4 - 8] ; jmp rsp
0x00000000004b05f7 : push qword ptr [rcx + rdx*4 - 0x6ebb0008] ; clc ; call rsp
0x00000000004605d4 : push qword ptr [rcx] ; fcmovnb st(0), st(6) ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x00000000004a127c : push qword ptr [rcx] ; fisttp dword ptr [rax - 0x73] ; push rax ; or byte ptr [rax - 0x73], cl ; or al, 0xca ; jmp 0x4a129e
0x000000000048450f : push qword ptr [rcx] ; fucomi st(3) ; ret 0x1f0f
0x0000000000416a7f : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000456a03 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004512dd : push qword ptr [rcx] ; ror byte ptr [rcx - 0x7d], cl ; cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x000000000047560c : push qword ptr [rcx] ; shr cl, 0x50 ; ret 0xffff
0x0000000000474515 : push qword ptr [rcx] ; shr cl, 0xcb ; retf
0x000000000045ae5d : push qword ptr [rcx] ; shr cl, cl ; retf
0x00000000004bf957 : push qword ptr [rcx] ; sub bh, bl ; inc dword ptr [rdx + 0x44fffb1d] ; and ebx, edi ; jmp rcx
0x00000000004bf8cf : push qword ptr [rcx] ; sub bh, bl ; jmp rcx
0x00000000004bf8cb : push qword ptr [rcx] ; sub bh, bl ; push qword ptr [rcx] ; sub bh, bl ; jmp rcx
0x00000000004bf8c7 : push qword ptr [rcx] ; sub bh, bl ; push qword ptr [rcx] ; sub bh, bl ; push qword ptr [rcx] ; sub bh, bl ; jmp rcx
0x000000000044a31b : push qword ptr [rdi + 0x22] ; hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x000000000044aed6 : push qword ptr [rdi + 0x3f] ; ret
0x000000000044ac06 : push qword ptr [rdi + 0x57] ; ret
0x000000000044ab33 : push qword ptr [rdi + 0x5a] ; ret
0x000000000045c9d2 : push qword ptr [rdi + 0xb] ; ret
0x000000000044a8da : push qword ptr [rdi + 3] ; ret
0x000000000044abc9 : push qword ptr [rdi + 4] ; ret
0x000000000044a928 : push qword ptr [rdi + 5] ; ret
0x000000000047f92e : push qword ptr [rdi + 7] ; ret
0x000000000044b6a5 : push qword ptr [rdi + 8] ; ret
0x000000000044ac9c : push qword ptr [rdi + 9] ; ret
0x000000000047f7e4 : push qword ptr [rdi + rax*2 - 0x77] ; ret 0xe283
0x00000000004b025f : push qword ptr [rdx + 0x5d] ; clc ; jmp rdx
0x00000000004b0257 : push qword ptr [rdx + 0x5e] ; clc ; push rdx ; pop rbp ; clc ; push qword ptr [rdx + 0x5d] ; clc ; jmp rdx
0x00000000004b00ff : push qword ptr [rdx + rbp*2 + 0x6a44fff8] ; clc ; call rsp
0x00000000004b0767 : push qword ptr [rdx - 0x7e] ; clc ; jmp rdx
0x00000000004affc3 : push qword ptr [rsi + 0x6a] ; clc ; inc dword ptr [rsi] ; push -8 ; call qword ptr [rsi + 0x26fff869]
0x00000000004a6812 : push qword ptr [rsi + rax + 0x40] ; cmp bh, 0x10 ; jne 0x4a6843 ; xor eax, eax ; ret
0x00000000004a99b2 : push qword ptr [rsi + rax + 0x40] ; cmp bh, 0x10 ; jne 0x4a99d9 ; xor eax, eax ; ret
0x00000000004aa812 : push qword ptr [rsi + rax + 0x40] ; cmp bh, 0x10 ; jne 0x4aa839 ; xor eax, eax ; ret
0x00000000004ab282 : push qword ptr [rsi + rax + 0x40] ; cmp bh, 0x10 ; jne 0x4ab2b3 ; xor eax, eax ; ret
0x000000000048273a : push qword ptr [rsi + rbx - 0x17] ; retf
0x00000000004b10c7 : push qword ptr [rsi - 0x69] ; stc ; jmp rsi
0x00000000004b04bb : push qword ptr [rsi - 0x6f] ; clc ; inc dword ptr [rsi] ; xchg eax, ecx ; clc ; call qword ptr [rsi + 0x26fff890]
0x00000000004b0817 : push qword ptr [rsp + rax*4 - 8] ; push rsp ; cmp eax, -1 ; je 0x4b07b1 ; clc ; jmp rsp
0x000000000047f70b : push r12 ; push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x00000000004178d2 : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004c346c : push r8 ; xor byte ptr [rcx], ah ; retf
0x000000000047aa2a : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000419681 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000044c3a9 : push rax ; adc byte ptr [rcx - 0x75], cl ; push rax ; or byte ptr [rbx + 0x94801e2], al ; ret 0x8949
0x000000000041d70d : push rax ; adc dh, dh ; ret 0xf0f
0x00000000004568bf : push rax ; add al, 0xe9 ; cmp eax, 0x89fffff3 ; retf 0xe283
0x000000000049a8fd : push rax ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004c7aaf : push rax ; add bh, dh ; call rax
0x00000000004c8fac : push rax ; add byte ptr [rax], al ; add byte ptr [rax + rdx], dh ; add byte ptr [rsi + rax*4 - 0xc], cl ; call qword ptr [rdi]
0x00000000004cdfec : push rax ; add byte ptr [rax], al ; add byte ptr [rax - 0x3de40000], dh ; clc ; jmp rax
0x00000000004178d3 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000424bfc : push rax ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000004ccfc5 : push rax ; add byte ptr [rax], al ; fadd dword ptr [rdi] ; clc ; jmp qword ptr [rcx]
0x00000000004ccf65 : push rax ; add byte ptr [rax], al ; mov byte ptr [rdi], al ; clc ; call qword ptr [rcx]
0x00000000004cbd8c : push rax ; add byte ptr ds:[rax], al ; add byte ptr [rsi], 0xf6 ; jmp qword ptr [rbx]
0x000000000041a3a0 : push rax ; add dword ptr [rax - 0x77], ecx ; adc eax, 0x2bd487 ; ret
0x000000000047036b : push rax ; add dword ptr [rax - 0x77], ecx ; adc eax, dword ptr [rax - 0x78] ; sub byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000041342e : push rax ; add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000045fbaf : push rax ; add dword ptr [rax - 0x77], ecx ; push rsi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000004040f1 : push rax ; add dword ptr [rax - 0x77], ecx ; xlatb ; mov qword ptr [rbp - 0x78], rdx ; call 0x420b1b
0x00000000004aff03 : push rax ; and al, bh ; inc dword ptr [rax + 0x22] ; clc ; call qword ptr [rax - 0x1f0007dd]
0x0000000000402200 : push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x0000000000452bef : push rax ; call 0x44eec3
0x0000000000462e71 : push rax ; call 0x45f113
0x00000000004502c8 : push rax ; call rbx
0x00000000004afebc : push rax ; clc ; inc dword ptr [rax + 0x38] ; clc ; call qword ptr [rax]
0x00000000004afeac : push rax ; clc ; jmp rax
0x00000000004d1b20 : push rax ; cld ; jmp qword ptr [rdx]
0x000000000047a224 : push rax ; cmp byte ptr [rax + 1], cl ; ret
0x00000000004afd37 : push rax ; hlt ; idiv edi ; div dil ; call qword ptr [rax - 0x1f000809]
0x00000000004c7a73 : push rax ; idiv ch ; call rax
0x00000000004aff74 : push rax ; insb byte ptr [rdi], dx ; clc ; jmp rax
0x000000000044b57c : push rax ; jo 0x44b582 ; dec dword ptr [rax - 0x77] ; ret
0x000000000047bf79 : push rax ; lea r9, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x00000000004c34da : push rax ; lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x00000000004b0873 : push rax ; mov al, bh ; push qword ptr [rax - 0x78] ; clc ; jmp rax
0x00000000004b2ec3 : push rax ; mov bh, dl ; push qword ptr [rax] ; mov bh, dl ; jmp rax
0x00000000004aaf86 : push rax ; mov ch, 0xff ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000452501 : push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000004b06b4 : push rax ; mov eax, edi ; call rax
0x00000000004aad74 : push rax ; mul dword ptr [rdx] ; add byte ptr [rbp - 0xcfb8b40], al ; ret
0x00000000004b0684 : push rax ; nop ; clc ; jmp rax
0x00000000004c8b8c : push rax ; or al, 0 ; add byte ptr [rax + 0x72], al ; hlt ; jmp qword ptr [rax]
0x00000000004afcb7 : push rax ; or al, 0xf8 ; call rax
0x000000000044da46 : push rax ; or bl, al ; nop dword ptr [rax] ; ret
0x000000000040136a : push rax ; or byte ptr [rax + 0x18c48348], dl ; pop rbx ; pop rbp ; ret
0x00000000004a58b6 : push rax ; or byte ptr [rax + 3], cl ; push rbp ; add bl, ch ; add eax, 0x1489066 ; ret 0xb70f
0x00000000004a1281 : push rax ; or byte ptr [rax - 0x73], cl ; or al, 0xca ; jmp 0x4a1299
0x000000000041a402 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x000000000041b72a : push rax ; or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000419671 : push rax ; or byte ptr [rbp + 0xb], dh ; sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000044c3ad : push rax ; or byte ptr [rbx + 0x94801e2], al ; ret 0x8949
0x000000000041e105 : push rax ; or byte ptr [rcx - 0xa], al ; ret 0xf04
0x000000000044e91b : push rax ; or dh, dh ; ret 0x8902
0x000000000041ee42 : push rax ; or dh, dh ; ret 0xf02
0x00000000004afcb0 : push rax ; or eax, edi ; call qword ptr [rax]
0x00000000004afc13 : push rax ; or edi, eax ; call rax
0x000000000048c6ee : push rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004a3e35 : push rax ; pop rbx ; ret
0x00000000004c0d88 : push rax ; pop rcx ; cld ; jmp qword ptr [rbx]
0x000000000047c250 : push rax ; push 0 ; lea r9, [rbp - 0x40] ; mov rdi, r15 ; call r12
0x000000000047b924 : push rax ; push 0x74fff883 ; add eax, 0x5c415d5b ; ret
0x0000000000482739 : push rax ; push qword ptr [rsi + rbx - 0x17] ; retf
0x00000000004c0de4 : push rax ; push rdi ; cld ; jmp qword ptr [rbx]
0x0000000000452503 : push rax ; push rsp ; ret
0x0000000000475610 : push rax ; ret 0xffff
0x00000000004c5d80 : push rax ; retf
0x00000000004b1a27 : push rax ; retf 0xfff9
0x000000000041ca64 : push rax ; sbb byte ptr [rax + 0x39], cl ; retf 0x850f
0x0000000000419676 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000047ba69 : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000004c7ea0 : push rax ; sbb dh, bh ; ljmp [rax - 0x2f0001e8] ; sbb dh, bh ; jmp rax
0x00000000004aff30 : push rax ; sbb eax, edi ; jmp qword ptr [rax]
0x00000000004b0b1b : push rax ; stc ; call qword ptr [rax]
0x00000000004b0b6d : push rax ; stc ; call rax
0x00000000004b0b4f : push rax ; stc ; inc dword ptr [rax] ; push rax ; stc ; jmp qword ptr [rax]
0x00000000004b0b75 : push rax ; stc ; inc dword ptr [rax] ; push rcx ; stc ; jmp qword ptr [rax]
0x00000000004b0abb : push rax ; stc ; inc dword ptr [rax] ; stc ; call qword ptr [rax]
0x00000000004b0b69 : push rax ; stc ; inc eax ; push rax ; stc ; call rax
0x00000000004b0b55 : push rax ; stc ; jmp qword ptr [rax]
0x00000000004b0b71 : push rax ; stc ; jmp rax
0x000000000047ba65 : push rax ; sub byte ptr [rax - 0x77], cl ; push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000004b08d8 : push rax ; test al, bh ; call rax
0x00000000004b09c3 : push rax ; test eax, 0xac00fff8 ; clc ; call qword ptr [rax]
0x00000000004b08d0 : push rax ; test eax, edi ; call rax
0x00000000004a2ab9 : push rax ; test rdx, rdx ; je 0x4a2b06 ; shl rdx, 5 ; add rdx, rax ; jmp 0x4a2add
0x00000000004b08c8 : push rax ; xchg al, bh ; call rax
0x00000000004b08c0 : push rax ; xchg eax, edi ; call rax
0x00000000004afed4 : push rax ; xor bh, al ; jmp qword ptr [rax]
0x00000000004c346d : push rax ; xor byte ptr [rcx], ah ; retf
0x00000000004a58ba : push rbp ; add bl, ch ; add eax, 0x1489066 ; ret 0xb70f
0x00000000004a8362 : push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x00000000004cd4cd : push rbp ; add byte ptr [rax], al ; ja 0x4cd508 ; jmp qword ptr [rbx]
0x00000000004a87d7 : push rbp ; add byte ptr [rsi + 0xa], bh ; mov edi, 1 ; call rax
0x0000000000489e78 : push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x00000000004012c9 : push rbp ; cld ; mov dword ptr [rax], edx ; nop ; leave ; ret
0x00000000004117ed : push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004abe7a : push rbp ; idiv edi ; nop dword ptr [rax] ; ret
0x00000000004c5020 : push rbp ; movabs byte ptr [0xeb1b5c347ebb9329], al ; retf
0x000000000049e628 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000048b8ac : push rbp ; or byte ptr [rcx + 0x33], cl ; add byte ptr [r8 + 9], r9b ; ret 0x840f
0x00000000004ae2a4 : push rbp ; or esi, esi ; jmp rsp
0x000000000047f70a : push rbp ; push r12 ; push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x000000000047f70d : push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x00000000004d2ea6 : push rbp ; ret
0x0000000000411b26 : push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000040234f : push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000489cef : push rbx ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000498037 : push rbx ; add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004cd269 : push rbx ; add byte ptr [rax], al ; push rsp ; sbb al, 0xf8 ; jmp qword ptr [rdx]
0x00000000004c5659 : push rbx ; call 0x4c168016
0x00000000004ae1c1 : push rbx ; cmc ; jmp rax
0x0000000000414118 : push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000045f79b : push rbx ; cmp byte ptr [rcx - 0x75], cl ; push rdi ; and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000448a35 : push rbx ; jb 0x448a45 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000047b962 : push rbx ; je 0x47b9c6 ; pop rbp ; pop r12 ; ret
0x000000000047b9ee : push rbx ; je 0x47ba52 ; pop rbp ; pop r12 ; ret
0x00000000004c4411 : push rbx ; jrcxz 0x4c4491 ; and ebx, dword ptr [rbx] ; xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x0000000000435159 : push rbx ; mov al, 7 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000434e59 : push rbx ; mov bl, 7 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000434b59 : push rbx ; mov dh, 7 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000434859 : push rbx ; mov ecx, 0x63490007 ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000434559 : push rbx ; mov esp, 0x63490007 ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000047f70e : push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x0000000000414114 : push rbx ; or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x0000000000417d0e : push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000413432 : push rbx ; or byte ptr [rdi], cl ; mov dh, 0x10 ; mov eax, edx ; pop rbx ; ret
0x00000000004abe79 : push rbx ; push rbp ; idiv edi ; nop dword ptr [rax] ; ret
0x000000000044c5bf : push rbx ; ret
0x000000000048f0f8 : push rbx ; rol byte ptr [rax - 0x69f0f606], 1 ; ret 0x8348
0x000000000047035d : push rbx ; sbb byte ptr [rax + 1], cl ; ret 0x14c
0x000000000041461c : push rbx ; sub rdx, rsi ; mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x00000000004c4e9c : push rbx ; xchg eax, edx ; jae 0x4c4e7b ; push rsi ; pop rdx ; je 0x4c4e70 ; ret 0xacfc
0x0000000000478c1a : push rbx ; xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000041fd22 : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000041c05b : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000041c3d7 : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0xb277
0x00000000004cd07d : push rcx ; add byte ptr [rax], al ; mov al, 8 ; clc ; call qword ptr [rdx]
0x00000000004cd0b5 : push rcx ; add byte ptr [rax], al ; or byte ptr [rcx], cl ; clc ; call qword ptr [rcx]
0x000000000044d1cb : push rcx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004c4125 : push rcx ; call qword ptr [rsi]
0x00000000004cd895 : push rcx ; clc ; jmp qword ptr [rdx]
0x00000000004ae161 : push rcx ; cmc ; call rsp
0x00000000004ae15d : push rcx ; cmc ; jmp rcx
0x00000000004600c6 : push rcx ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004399ed : push rcx ; jl 0x439a3e ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000439b54 : push rcx ; jl 0x439ba5 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000041273b : push rcx ; or byte ptr [rax + 0x2b], cl ; adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000004834a1 : push rcx ; or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0x1475
0x0000000000483473 : push rcx ; or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0xe75
0x0000000000401171 : push rcx ; or eax, 0x5d900000 ; ret
0x000000000041ab6d : push rcx ; sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x00000000004b0b95 : push rcx ; stc ; inc dword ptr [rax] ; push rdx ; stc ; jmp qword ptr [rax]
0x00000000004b0b8d : push rcx ; stc ; inc eax ; push rcx ; stc ; jmp rax
0x00000000004b0b79 : push rcx ; stc ; jmp qword ptr [rax]
0x00000000004b0b91 : push rcx ; stc ; jmp rax
0x000000000040526e : push rdi ; adc al, 0xf ; retf 0xfa83
0x000000000044be48 : push rdi ; adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000040525e : push rdi ; adc byte ptr [rdi], cl ; retf 0xd289
0x000000000042d5cf : push rdi ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000445aea : push rdi ; add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x00000000004366f9 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00000000004cd6d5 : push rdi ; add byte ptr [rax], al ; mov bh, ah ; std ; jmp qword ptr [rdx]
0x00000000004823e4 : push rdi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000445b9c : push rdi ; add eax, 0xc478d48 ; ret
0x000000000042cb48 : push rdi ; add rax, 0x20 ; add rax, rdi ; vzeroupper ; ret
0x000000000045f79f : push rdi ; and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000042d5e4 : push rdi ; and byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004304f8 : push rdi ; clc ; ret
0x00000000004c0d65 : push rdi ; cld ; call qword ptr [rax]
0x00000000004c0d7d : push rdi ; cld ; jmp qword ptr [rbx]
0x00000000004c0d79 : push rdi ; cld ; lcall [rax + 0x57] ; cld ; jmp qword ptr [rbx]
0x0000000000430670 : push rdi ; cld ; ret
0x0000000000431197 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000435fd9 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000479a55 : push rdi ; cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x000000000042e54e : push rdi ; fidiv dword ptr [rdx - 0x10f09926] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e34e : push rdi ; fnsave dword ptr [rdx - 0x10f09923] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044af30 : push rdi ; fsub dword ptr [rcx + rcx*4 + 1] ; mov eax, 0xffffffff ; jmp 0x44af0b
0x000000000044a856 : push rdi ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000044a8e6 : push rdi ; fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x0000000000435f59 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004afd59 : push rdi ; inc eax ; add al, bh ; call qword ptr [rax]
0x0000000000435daa : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042e618 : push rdi ; mov eax, 0xf66b8b2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e498 : push rdi ; mov ebx, 0xf66bbb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e598 : push rdi ; mov ecx, 0xf66b9b2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e518 : push rdi ; mov edx, 0xf66bab2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004177b0 : push rdi ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x00000000004177e4 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000435e3a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000040524e : push rdi ; or al, 0xf ; retf 0xd289
0x000000000049776a : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00000000004a3b4a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000497771 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x0000000000405243 : push rdi ; or byte ptr [rdi], cl ; retf 0x8941
0x000000000041bd26 : push rdi ; or dh, dh ; ret 0xf02
0x0000000000445d80 : push rdi ; or eax, 0x1c478d48 ; ret
0x000000000042e8ee : push rdi ; ret
0x000000000042e98e : push rdi ; ret 0xff3
0x000000000042e4b3 : push rdi ; retf
0x000000000042e533 : push rdi ; retf 0xcab2
0x000000000041a490 : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret
0x000000000045f7a3 : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000405282 : push rdi ; sbb byte ptr [rdi], cl ; retf 0xd289
0x0000000000431397 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430bba : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000430f97 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000044c934 : push rdi ; sub dh, al ; add byte ptr [rdx], cl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042d5f9 : push rdi ; xor byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047d42b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042c6a8 : push rdi ; xor eax, eax ; ret
0x000000000042fa9a : push rdx ; add dword ptr [rax], ecx ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004b0060 : push rdx ; clc ; jmp rdx
0x00000000004ae179 : push rdx ; cmc ; call rax
0x00000000004ae199 : push rdx ; cmc ; call rsp
0x00000000004ae145 : push rdx ; cmc ; dec dword ptr [rax + 0x52] ; cmc ; ljmp [rcx] ; push rdx ; cmc ; jmp qword ptr [rax]
0x00000000004ae14d : push rdx ; cmc ; jmp qword ptr [rax]
0x00000000004ae149 : push rdx ; cmc ; ljmp [rcx] ; push rdx ; cmc ; jmp qword ptr [rax]
0x00000000004b0047 : push rdx ; imul edi, eax, 0xf86982ff ; call qword ptr [rdx]
0x0000000000425aea : push rdx ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000004a98eb : push rdx ; jne 0x4a98d5 ; movzx eax, byte ptr [rax] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004b025b : push rdx ; pop rbp ; clc ; push qword ptr [rdx + 0x5d] ; clc ; jmp rdx
0x0000000000476205 : push rdx ; sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004524fd : push rdx ; sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x00000000004b0b99 : push rdx ; stc ; jmp qword ptr [rax]
0x0000000000445727 : push rsi ; adc bl, dh ; movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000042d5d4 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004480d9 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x448130 ; adc dword ptr [rsi + 3], edx ; ret
0x00000000004366f2 : push rsi ; add al, 0x48 ; mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000041aa18 : push rsi ; add byte ptr [rax], al ; mov qword ptr [rip + 0x2bce3e], rax ; ret
0x0000000000436991 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000048bf2f : push rsi ; add dword ptr [rax], eax ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000436a01 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000436682 : push rsi ; add eax, 0x480e8b48 ; mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000445535 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000436921 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000445b03 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; lea rax, [rdi + 6] ; ret
0x00000000004454d3 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000046acdd : push rsi ; and byte ptr [rcx + 0x2b], cl ; push rsi ; sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x000000000042d5e9 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000430606 : push rsi ; clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000430f76 : push rsi ; clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000431176 : push rsi ; clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000431376 : push rsi ; clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000430622 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000430d91 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004309c5 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430ba5 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430d85 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004307e5 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431191 : push rsi ; cli ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004c5a40 : push rsi ; cli ; push 0x6e ; ja 0x4c59cf ; ret 0x48f
0x0000000000435fd2 : push rsi ; cmc ; mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000447386 : push rsi ; cmc ; sub eax, edx ; ret
0x000000000045a01e : push rsi ; cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000042e17e : push rsi ; fbstp tbyte ptr [rdx - 0x10f09921] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e24e : push rsi ; fidiv word ptr [rdx - 0x10f09922] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000435f52 : push rsi ; hlt ; mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000447376 : push rsi ; hlt ; sub eax, edx ; ret
0x0000000000447346 : push rsi ; int1 ; sub eax, edx ; ret
0x0000000000447fc2 : push rsi ; loopne 0x447f94 ; vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000434f16 : push rsi ; mov al, 7 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000434c16 : push rsi ; mov bl, 7 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000434916 : push rsi ; mov dh, 7 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000434616 : push rsi ; mov ecx, 0x63490007 ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000042e148 : push rsi ; mov edi, 0xf66bfb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e218 : push rsi ; mov esi, 0xf66beb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004456c7 : push rsi ; or eax, 0x77f0ff3 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000004c52d2 : push rsi ; pop rbx ; mov ebp, 0x63b1101 ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x00000000004c4ea0 : push rsi ; pop rdx ; je 0x4c4e6c ; ret 0xacfc
0x0000000000445707 : push rsi ; psllq mm1, qword ptr [rdi] ; jg 0x44571f ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000004514e6 : push rsi ; ret
0x0000000000405858 : push rsi ; retf 0xb
0x000000000040a906 : push rsi ; retf 0xffff
0x00000000004c5280 : push rsi ; rol byte ptr [rdx], cl ; int1 ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x000000000046ace1 : push rsi ; sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x0000000000431391 : push rsi ; stc ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430f91 : push rsi ; sti ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000459d4a : push rsi ; sub byte ptr [rax - 0x3f], cl ; retf
0x000000000045fbb3 : push rsi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000447356 : push rsi ; sub eax, edx ; ret
0x00000000004360d2 : push rsi ; test dword ptr [rbx - 0x76b703b2], 0x4f89f757 ; cld ; ret
0x00000000004c3468 : push rsi ; xchg eax, ebp ; jge 0x4c344d ; push r8 ; xor byte ptr [rcx], ah ; retf
0x00000000004b04b4 : push rsi ; xchg eax, edx ; clc ; jmp rsi
0x000000000044ea59 : push rsi ; xor al, byte ptr [rsi] ; add byte ptr [rax + 0xf], cl ; ret
0x000000000042d5fe : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004cc290 : push rsp ; add byte ptr [r8], al ; lodsb al, byte ptr [rsi] ; ret 0xfff7
0x000000000047fb91 : push rsp ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000048c91a : push rsp ; and al, 0x10 ; call rdx
0x000000000041dd78 : push rsp ; and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000048bee3 : push rsp ; and al, 0x38 ; mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000048be71 : push rsp ; and al, 0x38 ; mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x58 ; jmp qword ptr [rax]
0x0000000000497930 : push rsp ; and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000004978ea : push rsp ; and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000042d658 : push rsp ; and al, 8 ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000041e2d5 : push rsp ; and al, 8 ; call 0x41a575
0x00000000004b0128 : push rsp ; clc ; jmp rsp
0x00000000004b081b : push rsp ; cmp eax, -1 ; je 0x4b07ad ; clc ; jmp rsp
0x00000000004959bf : push rsp ; iretd ; call 0xffffffffce9de51d
0x000000000049764f : push rsp ; iretd ; call 0xffffffffce9e01ad
0x0000000000445458 : push rsp ; mov dh, 6 ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000040f990 : push rsp ; movabs al, byte ptr [0xe80000001ebf002c] ; ret 0x3aa
0x000000000049e329 : push rsp ; or eax, 0x894d0000 ; retf
0x000000000046e3c8 : push rsp ; outsb dx, byte ptr [rsi] ; add byte ptr es:[rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x00000000004b0310 : push rsp ; pop rdi ; clc ; call rsp
0x00000000004b0318 : push rsp ; pop rsi ; clc ; call rsp
0x000000000047f70c : push rsp ; push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x0000000000452504 : push rsp ; ret
0x00000000004a492c : push rsp ; ret 0x4808
0x00000000004c9a0c : push rsp ; ret 0xfff4
0x0000000000495960 : push rsp ; retf 0x48f8
0x00000000004cd26c : push rsp ; sbb al, 0xf8 ; jmp qword ptr [rdx]
0x0000000000405197 : push rsp ; sbb eax, 0xfc80f00 ; retf 0xc089
0x00000000004c566a : push rsp ; syscall
0x000000000043e780 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x00000000004caeb8 : pushfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x6fffffd1], al ; cmc ; jmp rsi
0x0000000000463f4e : pushfq ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000044c637 : pushfq ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44c648 ; call r12
0x0000000000453baa : pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000048401f : pushfq ; and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x0000000000417f0b : pushfq ; and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0x8c20
0x00000000004a3520 : pushfq ; and r8, qword ptr [rax] ; mov qword ptr [rsp + 8], rsi ; call 0xb
0x00000000004c8c64 : pushfq ; je 0x4c8c5e ; call qword ptr [rdx]
0x00000000004c96b4 : pushfq ; mov dl, 0xf4 ; call qword ptr [rax]
0x000000000043f480 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b654 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x00000000004a8037 : pushfq ; ret 0xf45
0x00000000004cc334 : pushfq ; retf
0x000000000040fd6b : rcl al, 0x92 ; insd dword ptr [rdi], dx ; add byte ptr [rax + 0x39], cl ; ret
0x000000000049967d : rcl byte ptr [rax + rax], 1 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004b0680 : rcl byte ptr [rax - 0x6faf0008], 0xf8 ; jmp rax
0x00000000004b0b6c : rcl byte ptr [rax - 7], 0xff ; rcl byte ptr [rax - 7], 1 ; jmp rax
0x00000000004b0b70 : rcl byte ptr [rax - 7], 1 ; jmp rax
0x00000000004b11d4 : rcl byte ptr [rbp - 0x69230007], cl ; stc ; dec eax ; xchg eax, ebp ; stc ; jmp qword ptr [rdx]
0x00000000004b0b90 : rcl byte ptr [rcx - 7], 0xff ; loopne 0x4b0bf2 ; stc ; inc dword ptr [rax] ; push rdx ; stc ; jmp qword ptr [rax]
0x00000000004c57b1 : rcl byte ptr [rdi], cl ; retf
0x000000000040fd6c : rcl byte ptr [rdx + 0x3948006d], 1 ; ret
0x0000000000424bfb : rcl dword ptr [rax], 1 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000049ab69 : rcl dword ptr [rbx + 0xc8b0001], cl ; mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x00000000004c52da : rcl dword ptr [rsi + 0x27], cl ; retf 0xc0fe
0x00000000004c4e9f : rcl dword ptr [rsi + 0x5a], cl ; je 0x4c4e6d ; ret 0xacfc
0x000000000041a519 : rcl edx, cl ; sub eax, dword ptr [rax] ; ret
0x00000000004c52d9 : rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x00000000004c4e9b : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x4c4e71 ; ret 0xacfc
0x000000000049b7ed : rcr byte ptr [rax], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000047d213 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000004070e0 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004679af : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000497777 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000449521 : rcr byte ptr [rbx + 0x25], cl ; add byte ptr [rax], al ; clc ; jg 0x44952b ; int1 ; mov eax, eax ; ret
0x000000000048b3fd : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407abd : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004514f2 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000415abc : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000040ffa6 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004a8c68 : rcr byte ptr [rbx + 0x5d], 0xc3 ; nop dword ptr [rax] ; ret
0x0000000000406979 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000469f8b : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x0000000000411422 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000498f8d : rcr byte ptr [rbx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004c52bd : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000004aff3c : rcr byte ptr [rsi], 0xf8 ; call qword ptr [rax]
0x0000000000495a29 : rcr dword ptr [rcx], 0xc0 ; and eax, 2 ; sub eax, 1 ; ret
0x00000000004c5611 : rcr dword ptr [rcx], cl ; retf 0xbb9a
0x000000000043f13c : rcr dword ptr [rdx], 0xf ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000440d89 : rcr dword ptr [rdx], 0xf ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x00000000004405a9 : rcr dword ptr [rdx], 0xf ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000440999 : rcr dword ptr [rdx], 0xf ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004401b9 : rcr dword ptr [rdx], 0xf ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043fc9c : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043f47c : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000043ec5c : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x0000000000440358 : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043f7bc : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043ef9c : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e77c : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000043f95c : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x0000000000440849 : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000440069 : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000441179 : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043eabc : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043ebf2 : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f8f2 : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f412 : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044074a : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000044107a : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043fc32 : rcr dword ptr [rdx], 0xf ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ef32 : rcr dword ptr [rdx], 0xf ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000043ea52 : rcr dword ptr [rdx], 0xf ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f752 : rcr dword ptr [rdx], 0xf ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000044089a : rcr dword ptr [rdx], 0xf ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004400ba : rcr dword ptr [rdx], 0xf ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000494dfb : rcr eax, 2 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000448214 : rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000448206 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000448f3a : rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000420001 : rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004005ab : repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005b6 ; ret
0x000000000040042e : ret
0x00000000004006d7 : ret 0
0x00000000004badc0 : ret 0x10
0x000000000048590a : ret 0x101
0x000000000049774c : ret 0x114d
0x0000000000459554 : ret 0x1176
0x0000000000489e7c : ret 0x1272
0x0000000000486a13 : ret 0x13e9
0x00000000004a64d1 : ret 0x145
0x0000000000496bf6 : ret 0x1474
0x00000000004834a8 : ret 0x1475
0x000000000047fc41 : ret 0x1477
0x00000000004472e8 : ret 0x148
0x0000000000405ad4 : ret 0x149
0x0000000000470361 : ret 0x14c
0x0000000000439dac : ret 0x14d
0x000000000040ba0a : ret 0x159
0x000000000048b0a5 : ret 0x15e8
0x000000000046dc31 : ret 0x1674
0x000000000044a74e : ret 0x16e9
0x00000000004284da : ret 0x17
0x000000000042cb86 : ret 0x1776
0x000000000040bdc2 : ret 0x18
0x0000000000439ce9 : ret 0x180f
0x000000000042c715 : ret 0x1876
0x000000000040760a : ret 0x19d
0x000000000045954b : ret 0x1a72
0x00000000004c581a : ret 0x1ad4
0x0000000000408f82 : ret 0x1b
0x00000000004c3fad : ret 0x1b49
0x00000000004aa59f : ret 0x1be8
0x00000000004259aa : ret 0x1c6
0x000000000045e6c9 : ret 0x1ce9
0x00000000004bca90 : ret 0x1d4
0x00000000004bd228 : ret 0x1d5
0x000000000044c9ea : ret 0x1d8
0x0000000000401f11 : ret 0x1d89
0x00000000004a96da : ret 0x1e7
0x000000000040fe62 : ret 0x1f0f
0x000000000041fd26 : ret 0x1f77
0x000000000045b93d : ret 0x1fe9
0x000000000045c597 : ret 0x200
0x000000000048202b : ret 0x2041
0x000000000044b20c : ret 0x2044
0x0000000000463667 : ret 0x20be
0x000000000045c42a : ret 0x20e8
0x00000000004a643b : ret 0x2148
0x0000000000414b8d : ret 0x214c
0x000000000041411c : ret 0x2175
0x00000000004aacf4 : ret 0x22
0x0000000000488c18 : ret 0x2275
0x0000000000442058 : ret 0x2288
0x0000000000425aba : ret 0x22a
0x000000000042eaf2 : ret 0x2373
0x00000000004bba98 : ret 0x24
0x000000000047dd03 : ret 0x25
0x00000000004172cd : ret 0x2501
0x0000000000468d34 : ret 0x2504
0x00000000004249d3 : ret 0x2575
0x0000000000482302 : ret 0x2586
0x00000000004a5825 : ret 0x25e8
0x00000000004a7ed1 : ret 0x25e9
0x000000000045ac65 : ret 0x27
0x000000000047d906 : ret 0x2774
0x000000000045ac2a : ret 0x27de
0x00000000004302c6 : ret 0x280f
0x000000000042c705 : ret 0x2876
0x000000000044e572 : ret 0x28a0
0x000000000044ea4a : ret 0x28bf
0x0000000000488c97 : ret 0x28f5
0x0000000000464e8e : ret 0x290f
0x00000000004953fb : ret 0x2941
0x0000000000412747 : ret 0x2948
0x0000000000467dca : ret 0x2949
0x0000000000410370 : ret 0x294c
0x00000000004143fd : ret 0x294d
0x000000000041b49a : ret 0x2b
0x0000000000411b2a : ret 0x2b48
0x0000000000420bba : ret 0x2b6c
0x00000000004240fb : ret 0x2b74
0x0000000000420042 : ret 0x2b75
0x00000000004493b2 : ret 0x2b77
0x00000000004009c5 : ret 0x2b8
0x000000000041aeba : ret 0x2bc9
0x000000000041b5c2 : ret 0x2be8
0x00000000004a7ebf : ret 0x2be9
0x0000000000418f6a : ret 0x2c0e
0x000000000042088e : ret 0x2c75
0x000000000040f11a : ret 0x2ca8
0x000000000049561a : ret 0x2d1
0x0000000000478e25 : ret 0x2e66
0x000000000044dc1e : ret 0x2f75
0x000000000049275a : ret 0x2ff
0x00000000004698f5 : ret 0x30be
0x00000000004bbf88 : ret 0x33
0x0000000000464eb7 : ret 0x33e8
0x0000000000474aeb : ret 0x348
0x00000000004543b4 : ret 0x349
0x00000000004a6270 : ret 0x3575
0x00000000004855da : ret 0x3774
0x000000000042cb66 : ret 0x3776
0x00000000004c50fa : ret 0x3827
0x0000000000479cae : ret 0x3873
0x000000000042c6f5 : ret 0x3876
0x0000000000417d7b : ret 0x389
0x00000000004c3786 : ret 0x38ae
0x00000000004a9b82 : ret 0x38e8
0x00000000004a4e48 : ret 0x3901
0x000000000048b39d : ret 0x3934
0x000000000046f208 : ret 0x3941
0x00000000004123d1 : ret 0x3948
0x000000000041318d : ret 0x3949
0x000000000042016c : ret 0x394c
0x000000000046a89d : ret 0x394d
0x0000000000447962 : ret 0x3a01
0x000000000042eadb : ret 0x3a73
0x00000000004a3a43 : ret 0x3a83
0x000000000040f99a : ret 0x3aa
0x000000000048b42a : ret 0x3b34
0x0000000000448381 : ret 0x3b48
0x000000000044aeef : ret 0x3b8
0x0000000000415379 : ret 0x3c75
0x000000000048b35d : ret 0x3d
0x0000000000489608 : ret 0x3d73
0x0000000000421941 : ret 0x3d83
0x000000000041dc9f : ret 0x3de9
0x000000000048543a : ret 0x3e80
0x000000000048d442 : ret 0x4001
0x000000000045bd4b : ret 0x4002
0x000000000040e54d : ret 0x4074
0x000000000047def1 : ret 0x408d
0x000000000044de6a : ret 0x4101
0x0000000000461f38 : ret 0x4108
0x00000000004626e5 : ret 0x4110
0x000000000048b3d7 : ret 0x4134
0x0000000000454b67 : ret 0x415f
0x00000000004525ce : ret 0x41c3
0x000000000042715a : ret 0x4266
0x000000000047aab3 : ret 0x4389
0x00000000004070b1 : ret 0x4401
0x000000000046a14b : ret 0x4404
0x000000000041b67b : ret 0x4466
0x000000000041f013 : ret 0x4473
0x000000000049197c : ret 0x4502
0x0000000000400de0 : ret 0x458b
0x00000000004c4284 : ret 0x474c
0x0000000000425176 : ret 0x4801
0x0000000000413386 : ret 0x4803
0x00000000004239e1 : ret 0x4804
0x0000000000441fe3 : ret 0x4808
0x0000000000404286 : ret 0x480a
0x000000000041d6b8 : ret 0x4810
0x000000000045a2fc : ret 0x4811
0x000000000045f637 : ret 0x481e
0x000000000045f657 : ret 0x4820
0x000000000044fdee : ret 0x4830
0x0000000000427066 : ret 0x4840
0x0000000000441c98 : ret 0x48c3
0x000000000041a093 : ret 0x48e9
0x00000000004c5a46 : ret 0x48f
0x000000000040704c : ret 0x4901
0x000000000045700b : ret 0x4902
0x000000000041a6d2 : ret 0x4908
0x000000000042b62c : ret 0x4910
0x000000000045c199 : ret 0x4c01
0x000000000041f9ba : ret 0x4c07
0x000000000045eef6 : ret 0x4c40
0x000000000041e676 : ret 0x4d01
0x000000000045d9b8 : ret 0x4d10
0x000000000040398f : ret 0x4de8
0x00000000004c54a7 : ret 0x4e27
0x00000000004029be : ret 0x4f76
0x000000000045096f : ret 0x5089
0x000000000044da87 : ret 0x508b
0x000000000042eac4 : ret 0x5173
0x000000000044b147 : ret 0x5488
0x00000000004978e8 : ret 0x5489
0x00000000004c370c : ret 0x5508
0x000000000047bb7e : ret 0x5590
0x000000000042cb46 : ret 0x5776
0x000000000040471a : ret 0x57e
0x00000000004c59d8 : ret 0x5803
0x0000000000457071 : ret 0x5841
0x00000000004a33b5 : ret 0x5876
0x000000000040f9a3 : ret 0x589
0x00000000004c33e0 : ret 0x591c
0x00000000004c4147 : ret 0x5ae4
0x000000000042569e : ret 0x5ae9
0x0000000000457259 : ret 0x5be9
0x00000000004106aa : ret 0x5d5b
0x0000000000451cea : ret 0x609
0x00000000004c5e72 : ret 0x62c1
0x0000000000486880 : ret 0x6349
0x00000000004a0b84 : ret 0x637f
0x000000000045a2d3 : ret 0x6411
0x000000000045ceb1 : ret 0x6601
0x000000000042c681 : ret 0x6620
0x0000000000424b48 : ret 0x66c3
0x0000000000489e8e : ret 0x674
0x000000000042cb36 : ret 0x6776
0x00000000004c33ff : ret 0x67b2
0x0000000000418325 : ret 0x6874
0x000000000048b0e0 : ret 0x6ae8
0x000000000044a7fa : ret 0x6ae9
0x00000000004c6001 : ret 0x6f9
0x00000000004184a1 : ret 0x7401
0x00000000004239aa : ret 0x7402
0x00000000004868ea : ret 0x7403
0x000000000044b8a1 : ret 0x7404
0x000000000047b952 : ret 0x7408
0x0000000000413c2d : ret 0x7420
0x0000000000465de4 : ret 0x7450
0x000000000048b09a : ret 0x7472
0x0000000000445ec9 : ret 0x7501
0x0000000000445ed6 : ret 0x7502
0x0000000000445ee3 : ret 0x7504
0x000000000041fccd : ret 0x7508
0x0000000000445e9b : ret 0x7510
0x0000000000445ea8 : ret 0x7520
0x00000000004259ce : ret 0x7540
0x000000000047fba0 : ret 0x7577
0x000000000042d9b2 : ret 0x7677
0x0000000000495ce2 : ret 0x777
0x00000000004975a6 : ret 0x77f
0x00000000004040e1 : ret 0x7ce9
0x000000000042c621 : ret 0x7e20
0x000000000042ca9c : ret 0x7e40
0x0000000000425d0c : ret 0x7f10
0x000000000046f420 : ret 0x7f3c
0x000000000043428e : ret 0x80
0x0000000000426ee9 : ret 0x8000
0x00000000004a9842 : ret 0x8001
0x0000000000480fe7 : ret 0x8116
0x0000000000473f89 : ret 0x8141
0x000000000046170b : ret 0x8148
0x00000000004a9d98 : ret 0x8166
0x000000000046f7b9 : ret 0x81e8
0x000000000041e3a0 : ret 0x820f
0x0000000000456893 : ret 0x8301
0x0000000000487607 : ret 0x8303
0x000000000042d580 : ret 0x830f
0x000000000045f504 : ret 0x8341
0x0000000000424a85 : ret 0x8348
0x0000000000447de0 : ret 0x8349
0x000000000048947f : ret 0x8364
0x000000000047b296 : ret 0x840
0x000000000047ff99 : ret 0x8401
0x0000000000413195 : ret 0x840f
0x00000000004555e0 : ret 0x841
0x00000000004a6aee : ret 0x8440
0x0000000000484027 : ret 0x848b
0x0000000000478ac9 : ret 0x8502
0x00000000004144b2 : ret 0x850f
0x0000000000459c33 : ret 0x8511
0x000000000044bbd2 : ret 0x8545
0x0000000000403e62 : ret 0x8548
0x00000000004249fa : ret 0x854d
0x0000000000406f21 : ret 0x8575
0x00000000004709a2 : ret 0x8590
0x0000000000401b9d : ret 0x860f
0x000000000041c05f : ret 0x870f
0x00000000004c2d1e : ret 0x871e
0x000000000046f427 : ret 0x875
0x000000000042c725 : ret 0x876
0x0000000000403f8c : ret 0x8801
0x00000000004538dd : ret 0x8804
0x000000000045cf02 : ret 0x8841
0x000000000048856e : ret 0x8844
0x000000000040377a : ret 0x8901
0x000000000044e91e : ret 0x8902
0x00000000004137aa : ret 0x8908
0x000000000045f4f6 : ret 0x8941
0x000000000042092f : ret 0x8944
0x0000000000401ddd : ret 0x8948
0x00000000004149da : ret 0x8949
0x0000000000411e41 : ret 0x894c
0x000000000049675b : ret 0x894e
0x000000000041890a : ret 0x8a
0x00000000004a35e0 : ret 0x8b
0x0000000000452209 : ret 0x8b01
0x000000000047911a : ret 0x8b04
0x000000000047fd33 : ret 0x8b05
0x0000000000478fcb : ret 0x8b08
0x00000000004c554e : ret 0x8b36
0x000000000041e881 : ret 0x8b41
0x000000000046f4c3 : ret 0x8b44
0x0000000000400c41 : ret 0x8b48
0x00000000004125f6 : ret 0x8b49
0x00000000004966de : ret 0x8b4a
0x000000000040e75d : ret 0x8b4c
0x000000000046664d : ret 0x8c0f
0x0000000000422705 : ret 0x8c1
0x00000000004110e6 : ret 0x8c20
0x000000000045ef51 : ret 0x8d04
0x00000000004a7cef : ret 0x8d0f
0x000000000041df7c : ret 0x8d44
0x000000000041ab71 : ret 0x8d48
0x0000000000469b2c : ret 0x8d49
0x0000000000495a87 : ret 0x8d4a
0x000000000041f094 : ret 0x8d4c
0x0000000000495933 : ret 0x8d74
0x000000000045f512 : ret 0x8d89
0x000000000046658d : ret 0x8de8
0x00000000004543ab : ret 0x8e0f
0x000000000045f7ba : ret 0x8f0f
0x0000000000441465 : ret 0x90c3
0x000000000041eaca : ret 0x90d
0x0000000000425119 : ret 0x90e9
0x00000000004820ee : ret 0x9174
0x00000000004a692b : ret 0x9272
0x0000000000466c1e : ret 0x92c8
0x000000000041b51a : ret 0x942
0x000000000041c37d : ret 0x948
0x000000000047d4c8 : ret 0x94c
0x0000000000498032 : ret 0x950f
0x000000000044a180 : ret 0x9572
0x00000000004c4373 : ret 0x9576
0x000000000046210f : ret 0x958b
0x000000000042393e : ret 0x976
0x0000000000473485 : ret 0x9875
0x00000000004873b3 : ret 0x9be9
0x000000000041351e : ret 0x9deb
0x00000000004a2ac5 : ret 0x9eb
0x00000000004ba5c0 : ret 0xa
0x00000000004cb40e : ret 0xa01
0x000000000044b8c8 : ret 0xa076
0x000000000044a6c4 : ret 0xa0e9
0x00000000004a7dae : ret 0xa4e9
0x00000000004c4063 : ret 0xa514
0x00000000004a7ead : ret 0xa5e9
0x0000000000403c2e : ret 0xaa5
0x000000000044cfdd : ret 0xabe
0x00000000004c44e7 : ret 0xac65
0x00000000004c4ea4 : ret 0xacfc
0x0000000000475c19 : ret 0xad83
0x000000000047215d : ret 0xadeb
0x0000000000460f4f : ret 0xae9
0x000000000042483a : ret 0xaeeb
0x0000000000402e2a : ret 0xb
0x00000000004c8a27 : ret 0xb00e
0x0000000000412a5d : ret 0xb074
0x000000000041c3db : ret 0xb277
0x0000000000457e3b : ret 0xb2eb
0x000000000044a6b0 : ret 0xb4e9
0x000000000045f536 : ret 0xb589
0x0000000000401bf1 : ret 0xb60f
0x0000000000402204 : ret 0xb70f
0x000000000046b795 : ret 0xb8
0x000000000046d53c : ret 0xb848
0x00000000004a9c02 : ret 0xb8e8
0x00000000004c43ae : ret 0xb9b9
0x000000000046ed75 : ret 0xb9e9
0x0000000000478ba4 : ret 0xba41
0x0000000000424073 : ret 0xbae9
0x0000000000457f72 : ret 0xbaeb
0x0000000000476669 : ret 0xbb08
0x00000000004a8366 : ret 0xbc80
0x000000000045f522 : ret 0xbd89
0x0000000000475506 : ret 0xbe08
0x000000000048b1e2 : ret 0xbe0f
0x00000000004c4104 : ret 0xbe57
0x00000000004744da : ret 0xbf08
0x000000000040533a : ret 0xbfac
0x0000000000426da9 : ret 0xc000
0x00000000004931e3 : ret 0xc001
0x0000000000404476 : ret 0xc031
0x000000000045a31e : ret 0xc083
0x000000000042c4e0 : ret 0xc085
0x000000000047e769 : ret 0xc148
0x000000000041c4f9 : ret 0xc183
0x0000000000405c08 : ret 0xc189
0x000000000044b532 : ret 0xc221
0x000000000042096b : ret 0xc275
0x0000000000471981 : ret 0xc283
0x000000000042e994 : ret 0xc2b2
0x000000000044941e : ret 0xc35b
0x000000000045970d : ret 0xc389
0x000000000042096d : ret 0xc3f3
0x00000000004c21e2 : ret 0xc4c3
0x00000000004c3cb8 : ret 0xc4ff
0x000000000042cb01 : ret 0xc540
0x00000000004597d6 : ret 0xc589
0x0000000000464dec : ret 0xc689
0x000000000048945d : ret 0xc74
0x00000000004423a0 : ret 0xc748
0x000000000048ccd2 : ret 0xc749
0x000000000046a9e8 : ret 0xc789
0x000000000048b272 : ret 0xc829
0x00000000004637b3 : ret 0xc839
0x0000000000417d6c : ret 0xc883
0x00000000004621e7 : ret 0xc985
0x00000000004790b3 : ret 0xc9eb
0x0000000000441fb1 : ret 0xc9ff
0x00000000004008e1 : ret 0xca21
0x0000000000471975 : ret 0xcb73
0x000000000048262f : ret 0xcbe9
0x00000000004c374a : ret 0xcca7
0x00000000004c582d : ret 0xcd11
0x0000000000406412 : ret 0xce80
0x00000000004ba9c0 : ret 0xd
0x00000000004221ee : ret 0xd020
0x000000000040f1e6 : ret 0xd021
0x000000000044d45f : ret 0xd029
0x0000000000465c6b : ret 0xd120
0x0000000000402524 : ret 0xd284
0x00000000004592ca : ret 0xd285
0x00000000004aa2e8 : ret 0xd2e8
0x00000000004840b6 : ret 0xd348
0x00000000004512e7 : ret 0xd5e9
0x0000000000471294 : ret 0xd629
0x0000000000471ae2 : ret 0xd729
0x000000000048b61f : ret 0xd75
0x000000000045e8f6 : ret 0xd774
0x00000000004c52c5 : ret 0xd8f
0x00000000004113d3 : ret 0xdaf7
0x0000000000455aba : ret 0xdb76
0x00000000004c53a6 : ret 0xdcd9
0x0000000000467c0e : ret 0xdce8
0x00000000004c4322 : ret 0xde5d
0x0000000000424f65 : ret 0xde8
0x00000000004c30b1 : ret 0xde9e
0x0000000000426c69 : ret 0xe000
0x0000000000445e59 : ret 0xe074
0x000000000044f070 : ret 0xe083
0x00000000004d2564 : ret 0xe0a
0x00000000004a7f71 : ret 0xe1e9
0x000000000044eea2 : ret 0xe1eb
0x000000000040edf0 : ret 0xe281
0x0000000000401f45 : ret 0xe283
0x000000000047d1d8 : ret 0xe575
0x0000000000467270 : ret 0xe57f
0x0000000000467bea : ret 0xe583
0x0000000000449412 : ret 0xe680
0x00000000004682cf : ret 0xe683
0x00000000004c54c6 : ret 0xe71f
0x000000000048347a : ret 0xe75
0x0000000000424126 : ret 0xe775
0x00000000004678a3 : ret 0xe7e9
0x000000000042d165 : ret 0xe883
0x0000000000482ff6 : ret 0xe8c0
0x000000000040421a : ret 0xe901
0x000000000040425f : ret 0xe902
0x0000000000442046 : ret 0xe908
0x000000000043e5e6 : ret 0xe910
0x000000000045fd7d : ret 0xe920
0x00000000004c3827 : ret 0xe970
0x00000000004493aa : ret 0xea81
0x000000000040eebd : ret 0xeab8
0x0000000000401f2d : ret 0xeac1
0x0000000000487cb6 : ret 0xeb01
0x0000000000478fe3 : ret 0xeb04
0x000000000042b65a : ret 0xeb10
0x000000000048b442 : ret 0xeb34
0x00000000004c5fd8 : ret 0xec2
0x000000000048deb1 : ret 0xec74
0x000000000045e880 : ret 0xed75
0x00000000004c5c7a : ret 0xef32
0x00000000004a7b38 : ret 0xef89
0x000000000048017f : ret 0xefeb
0x000000000042a44e : ret 0xf
0x0000000000426b29 : ret 0xf000
0x00000000004068f5 : ret 0xf01
0x000000000041bd29 : ret 0xf02
0x000000000041e109 : ret 0xf04
0x0000000000412ce3 : ret 0xf08
0x0000000000497953 : ret 0xf089
0x000000000041bff9 : ret 0xf0f
0x000000000040f6ee : ret 0xf10
0x00000000004680eb : ret 0xf20
0x000000000041e273 : ret 0xf275
0x00000000004651a6 : ret 0xf3f
0x0000000000468673 : ret 0xf40
0x0000000000479a5d : ret 0xf41
0x00000000004a7fec : ret 0xf45
0x0000000000424d19 : ret 0xf475
0x0000000000453166 : ret 0xf48
0x000000000040051d : ret 0xf49
0x0000000000468659 : ret 0xf50
0x00000000004a4fb6 : ret 0xf608
0x000000000047f7f5 : ret 0xf631
0x00000000004270e6 : ret 0xf66
0x0000000000485107 : ret 0xf675
0x0000000000496eda : ret 0xf695
0x0000000000479b1c : ret 0xf741
0x0000000000406b42 : ret 0xf748
0x0000000000495ccc : ret 0xf749
0x00000000004a2c0a : ret 0xf7e7
0x00000000004afadc : ret 0xf7e8
0x00000000004269e9 : ret 0xf800
0x00000000004b026c : ret 0xf85b
0x00000000004b005c : ret 0xf867
0x00000000004c2f90 : ret 0xf869
0x00000000004b0554 : ret 0xf88e
0x0000000000419aa3 : ret 0xf8b
0x00000000004651a1 : ret 0xf8c1
0x00000000004418c6 : ret 0xf8c5
0x0000000000449754 : ret 0xf8e9
0x0000000000481d4a : ret 0xf9ed
0x0000000000474c2a : ret 0xfa3f
0x0000000000420652 : ret 0xfae9
0x0000000000420c3a : ret 0xfbe9
0x00000000004268a9 : ret 0xfc00
0x00000000004257c1 : ret 0xfc3
0x000000000047fb6a : ret 0xfcdd
0x0000000000426769 : ret 0xfe00
0x00000000004c7e74 : ret 0xfe01
0x0000000000419bda : ret 0xfe68
0x0000000000402075 : ret 0xfe83
0x00000000004a3c1a : ret 0xfe89
0x000000000042496a : ret 0xfea5
0x0000000000426629 : ret 0xff00
0x0000000000435e01 : ret 0xff2
0x000000000044f01b : ret 0xff25
0x000000000042d329 : ret 0xff2d
0x000000000042708a : ret 0xff3
0x000000000046c897 : ret 0xff31
0x00000000004264e9 : ret 0xff80
0x0000000000467e71 : ret 0xff83
0x0000000000455a4c : ret 0xff85
0x0000000000476a32 : ret 0xff9f
0x000000000045eee2 : ret 0xffa0
0x00000000004249ca : ret 0xffa5
0x000000000040c39a : ret 0xffaf
0x000000000040c09a : ret 0xffb2
0x00000000004a3d05 : ret 0xffb5
0x00000000004120f7 : ret 0xffb8
0x0000000000492da9 : ret 0xffbf
0x000000000040ef0a : ret 0xffc0
0x00000000004246d8 : ret 0xffdf
0x000000000045c5d0 : ret 0xffe0
0x000000000046ee54 : ret 0xffe7
0x0000000000469b09 : ret 0xffe8
0x000000000044a765 : ret 0xffe9
0x00000000004103d1 : ret 0xffef
0x00000000004240f2 : ret 0xfff
0x000000000040ed32 : ret 0xfff0
0x000000000046c280 : ret 0xfff1
0x00000000004c9a0d : ret 0xfff4
0x00000000004a4284 : ret 0xfff5
0x00000000004afa91 : ret 0xfff7
0x0000000000425fe9 : ret 0xfff8
0x00000000004876b4 : ret 0xfff9
0x000000000041dba8 : ret 0xfffa
0x0000000000405b29 : ret 0xfffb
0x0000000000425ea9 : ret 0xfffc
0x0000000000419525 : ret 0xfffd
0x0000000000425d69 : ret 0xfffe
0x000000000041793a : ret 0xffff
0x000000000042cd75 : ret 1
0x000000000042cd9b : ret 2
0x000000000042e752 : ret 3
0x0000000000400b9b : ret 4
0x0000000000456785 : ret 5
0x00000000004ba168 : ret 6
0x000000000042bbea : ret 7
0x000000000040b258 : ret 8
0x000000000044690a : ret 9
0x0000000000488c8f : retf
0x0000000000412bd2 : retf 0
0x00000000004baf20 : retf 0x11
0x00000000004959ed : retf 0x114d
0x0000000000481500 : retf 0x12b9
0x000000000045787f : retf 0x12e9
0x0000000000463c09 : retf 0x147f
0x000000000047cb13 : retf 0x148
0x000000000043416c : retf 0x14c
0x00000000004285b2 : retf 0x16
0x0000000000471472 : retf 0x18
0x000000000049767d : retf 0x194d
0x000000000044d772 : retf 0x19b8
0x00000000004083a4 : retf 0x1b
0x000000000040ff01 : retf 0x1be
0x000000000041f628 : retf 0x1be9
0x00000000004a0c43 : retf 0x1c74
0x0000000000404202 : retf 0x1d1
0x00000000004bcac8 : retf 0x1d4
0x00000000004bd268 : retf 0x1d5
0x000000000042ca50 : retf 0x1f0f
0x00000000004cd012 : retf 0x2000
0x000000000046f071 : retf 0x20be
0x00000000004157a1 : retf 0x2148
0x00000000004ab6b2 : retf 0x22
0x000000000041c383 : retf 0x2274
0x00000000004ac1b2 : retf 0x22c8
0x00000000004ace7d : retf 0x22da
0x00000000004ad4b2 : retf 0x23
0x0000000000402765 : retf 0x230
0x000000000048a01b : retf 0x24
0x000000000048a022 : retf 0x24ce
0x0000000000483d12 : retf 0x2531
0x000000000047761d : retf 0x2575
0x000000000047f67d : retf 0x25b2
0x000000000045decd : retf 0x27
0x000000000044b794 : retf 0x28
0x000000000042f0d9 : retf 0x280f
0x00000000004511a2 : retf 0x2898
0x000000000047b60a : retf 0x2941
0x000000000040ad9f : retf 0x2948
0x0000000000411e9e : retf 0x294c
0x000000000041ed98 : retf 0x2a74
0x000000000041065b : retf 0x2a7e
0x00000000004c419c : retf 0x2a91
0x000000000041deb4 : retf 0x2b
0x000000000042077d : retf 0x2ba1
0x000000000045955f : retf 0x2c73
0x0000000000459539 : retf 0x2c76
0x00000000004c361a : retf 0x2c90
0x000000000040066a : retf 0x2d7a
0x00000000004821af : retf 0x2de9
0x000000000044df01 : retf 0x2e75
0x00000000004681e2 : retf 0x2f8
0x0000000000402728 : retf 0x31
0x00000000004359f6 : retf 0x3148
0x00000000004c5405 : retf 0x3159
0x000000000048fb92 : retf 0x32a
0x00000000004c546d : retf 0x32dd
0x00000000004bbfc8 : retf 0x33
0x00000000004c3d23 : retf 0x33e6
0x0000000000490cff : retf 0x343d
0x0000000000471568 : retf 0x348
0x00000000004c4251 : retf 0x3617
0x00000000004359d2 : retf 0x377
0x0000000000489a82 : retf 0x378
0x000000000041f930 : retf 0x3948
0x000000000047b370 : retf 0x3949
0x000000000041a64a : retf 0x394c
0x00000000004c2889 : retf 0x3b9a
0x00000000004209bd : retf 0x3d83
0x00000000004c5866 : retf 0x3d8a
0x0000000000481cb2 : retf 0x3e8
0x00000000004c30fb : retf 0x3ec
0x0000000000493a8c : retf 0x3f3d
0x000000000044f075 : retf 0x4102
0x000000000044f1c1 : retf 0x4110
0x000000000048f2c6 : retf 0x4166
0x000000000045557e : retf 0x4180
0x000000000042713c : retf 0x4266
0x00000000004552e3 : retf 0x4280
0x00000000004a59ed : retf 0x42f6
0x00000000004020f2 : retf 0x440
0x000000000043e25a : retf 0x4466
0x0000000000467046 : retf 0x45e9
0x0000000000455ce4 : retf 0x4689
0x000000000041a705 : retf 0x4801
0x0000000000418391 : retf 0x4802
0x000000000040eb3c : retf 0x4805
0x000000000040eba7 : retf 0x4806
0x000000000047b957 : retf 0x4808
0x000000000040ea58 : retf 0x4809
0x000000000040ec98 : retf 0x480a
0x000000000040ec5c : retf 0x480d
0x0000000000411db3 : retf 0x4810
0x0000000000411eb1 : retf 0x4820
0x0000000000459d02 : retf 0x48e8
0x0000000000495961 : retf 0x48f8
0x000000000041e113 : retf 0x4901
0x000000000045b3d3 : retf 0x4a8d
0x000000000041ed6a : retf 0x4b74
0x0000000000418343 : retf 0x4c01
0x0000000000401562 : retf 0x4c3
0x00000000004242b2 : retf 0x4c89
0x00000000004a4f49 : retf 0x4d20
0x00000000004959b8 : retf 0x4de8
0x00000000004959ca : retf 0x4df0
0x00000000004959dc : retf 0x4df8
0x000000000041f5f2 : retf 0x51e9
0x0000000000468136 : retf 0x53c
0x000000000049592d : retf 0x5489
0x00000000004a0b92 : retf 0x557f
0x00000000004a66a6 : retf 0x5774
0x00000000004001d1 : retf 0x5bb1
0x000000000049844d : retf 0x5d5b
0x0000000000484145 : retf 0x5f6
0x000000000040fbcc : retf 0x6411
0x000000000042f1c3 : retf 0x6601
0x000000000042f313 : retf 0x6602
0x000000000042f463 : retf 0x6603
0x000000000042f5b3 : retf 0x6604
0x000000000042f703 : retf 0x6605
0x000000000042f853 : retf 0x6606
0x000000000042f9a3 : retf 0x6607
0x000000000042faf3 : retf 0x6608
0x000000000042fc43 : retf 0x6609
0x000000000042fd93 : retf 0x660a
0x000000000042fee3 : retf 0x660b
0x0000000000430033 : retf 0x660c
0x0000000000430183 : retf 0x660d
0x00000000004302d3 : retf 0x660e
0x0000000000430423 : retf 0x660f
0x0000000000491980 : retf 0x6677
0x00000000004359f1 : retf 0x676
0x00000000004c5785 : retf 0x67ca
0x000000000047f921 : retf 0x6b8
0x00000000004c3782 : retf 0x6ee8
0x00000000004c5646 : retf 0x7272
0x00000000004c4e1f : retf 0x76a5
0x00000000004123b3 : retf 0x775
0x00000000004c3ca2 : retf 0x79f5
0x000000000044b04b : retf 0x8041
0x000000000042c983 : retf 0x8148
0x000000000041f242 : retf 0x820f
0x0000000000411a60 : retf 0x830f
0x0000000000414f51 : retf 0x8310
0x0000000000413f3d : retf 0x8320
0x00000000004560e7 : retf 0x8341
0x000000000041a702 : retf 0x8348
0x000000000042b5ff : retf 0x8349
0x000000000041abe0 : retf 0x840f
0x000000000047789b : retf 0x8440
0x00000000004c4590 : retf 0x8481
0x0000000000415956 : retf 0x850f
0x00000000004008e3 : retf 0x8545
0x000000000044248b : retf 0x8548
0x000000000042c4a9 : retf 0x860f
0x00000000004341bc : retf 0x870f
0x00000000004a4ff0 : retf 0x8820
0x00000000004552cd : retf 0x8880
0x00000000004242b8 : retf 0x8902
0x00000000004026e4 : retf 0x8904
0x0000000000412df0 : retf 0x8920
0x000000000044b8ba : retf 0x8940
0x0000000000405246 : retf 0x8941
0x0000000000461e20 : retf 0x8944
0x0000000000404193 : retf 0x8948
0x000000000042ebf9 : retf 0x8949
0x0000000000411d5c : retf 0x894c
0x00000000004573da : retf 0x8966
0x000000000045532e : retf 0x8980
0x00000000004a10d2 : retf 0x8b41
0x0000000000405b7b : retf 0x8b48
0x00000000004069fc : retf 0x8b49
0x0000000000430ff9 : retf 0x8b4c
0x000000000041ac1e : retf 0x8d48
0x000000000042c3b9 : retf 0x8d4a
0x00000000004453dd : retf 0x8d4c
0x00000000004219b2 : retf 0x8de
0x000000000048f05f : retf 0x8de9
0x000000000041f63b : retf 0x8e9
0x000000000042b53d : retf 0x9066
0x000000000041d162 : retf 0x91f
0x000000000045be40 : retf 0x9273
0x00000000004c4eee : retf 0x93a2
0x000000000041b062 : retf 0x948
0x000000000048dba3 : retf 0x973d
0x000000000046e8ac : retf 0x98e9
0x00000000004c528b : retf 0x99e0
0x000000000044b8b0 : retf 0x9b9
0x00000000004c55fa : retf 0x9d7d
0x00000000004c5f05 : retf 0xa020
0x00000000004c3465 : retf 0xa1eb
0x00000000004c54eb : retf 0xa2fe
0x000000000041e409 : retf 0xa74
0x0000000000459ba2 : retf 0xa8e8
0x0000000000400b22 : retf 0xaa4
0x00000000004c55bc : retf 0xab0d
0x0000000000401008 : retf 0xace
0x000000000040f9fd : retf 0xade9
0x00000000004c5b0e : retf 0xae32
0x00000000004057f2 : retf 0xb
0x000000000041f391 : retf 0xb2e9
0x00000000004c4309 : retf 0xb51a
0x00000000004ab132 : retf 0xb54e
0x000000000042cfe2 : retf 0xb60f
0x00000000004a6582 : retf 0xb801
0x00000000004560f4 : retf 0xb941
0x00000000004a35d0 : retf 0xba
0x000000000041e141 : retf 0xba41
0x000000000045a932 : retf 0xba56
0x0000000000478cd2 : retf 0xbb41
0x00000000004c5613 : retf 0xbb9a
0x00000000004a1286 : retf 0xbeb
0x00000000004c565d : retf 0xbf4b
0x000000000046efcc : retf 0xc
0x0000000000470edd : retf 0xc001
0x0000000000458248 : retf 0xc031
0x0000000000403913 : retf 0xc089
0x00000000004c52dd : retf 0xc0fe
0x000000000040f38a : retf 0xc148
0x000000000047d48e : retf 0xc149
0x0000000000462745 : retf 0xc239
0x0000000000471973 : retf 0xc277
0x000000000045a69d : retf 0xc6
0x0000000000466fc1 : retf 0xc7
0x0000000000425054 : retf 0xc748
0x000000000047d743 : retf 0xc985
0x000000000042e534 : retf 0xcab2
0x00000000004c21ea : retf 0xcccb
0x000000000040bcd7 : retf 0xd
0x00000000004c40c6 : retf 0xd1cb
0x000000000044951f : retf 0xd231
0x0000000000416005 : retf 0xd284
0x0000000000452bb4 : retf 0xd285
0x0000000000401bb3 : retf 0xd289
0x00000000004c57d7 : retf 0xd39
0x0000000000449316 : retf 0xd975
0x000000000048d9e5 : retf 0xdb84
0x00000000004c5d63 : retf 0xde4f
0x0000000000413391 : retf 0xdeb
0x00000000004c4393 : retf 0xdf7f
0x0000000000408326 : retf 0xe
0x000000000046ccd2 : retf 0xe0
0x00000000004c3e3e : retf 0xe152
0x0000000000449153 : retf 0xe175
0x00000000004a12ab : retf 0xe275
0x0000000000455e00 : retf 0xe283
0x0000000000482bf9 : retf 0xe474
0x0000000000448fec : retf 0xe475
0x00000000004c441c : retf 0xe496
0x000000000045fac7 : retf 0xe677
0x00000000004c3d86 : retf 0xe72e
0x00000000004c3413 : retf 0xe80
0x0000000000481a6b : retf 0xe802
0x0000000000467235 : retf 0xe87f
0x000000000040ebd9 : retf 0xe903
0x000000000049733c : retf 0xe972
0x0000000000462c45 : retf 0xe9ff
0x0000000000496c8b : retf 0xea72
0x0000000000413253 : retf 0xea77
0x0000000000401bd3 : retf 0xea83
0x00000000004c53cc : retf 0xea91
0x00000000004a398b : retf 0xeac0
0x000000000041c692 : retf 0xeac1
0x0000000000425c81 : retf 0xead3
0x000000000040eb92 : retf 0xeb04
0x000000000040ebf1 : retf 0xeb07
0x000000000040eab8 : retf 0xeb08
0x000000000040ecbf : retf 0xeb0b
0x000000000040ec92 : retf 0xeb0c
0x00000000004c34ed : retf 0xeb83
0x00000000004c5ce1 : retf 0xebbf
0x000000000041828b : retf 0xee75
0x0000000000488577 : retf 0xee7c
0x00000000004343fc : retf 0xf01
0x000000000043457c : retf 0xf02
0x00000000004346fc : retf 0xf03
0x000000000043487c : retf 0xf04
0x00000000004349fc : retf 0xf05
0x0000000000434b7c : retf 0xf06
0x0000000000434cfc : retf 0xf07
0x0000000000434e7c : retf 0xf08
0x0000000000434ffc : retf 0xf09
0x000000000043517c : retf 0xf0a
0x00000000004352fc : retf 0xf0b
0x000000000043547c : retf 0xf0c
0x00000000004355fc : retf 0xf0d
0x000000000043577c : retf 0xf0e
0x00000000004358fc : retf 0xf0f
0x000000000043fe2d : retf 0xf1c5
0x000000000045f54b : retf 0xf41
0x0000000000441df0 : retf 0xf48
0x000000000047d971 : retf 0xf4c
0x00000000004a4812 : retf 0xf5bc
0x000000000047cb16 : retf 0xf631
0x00000000004ad2c2 : retf 0xf63a
0x00000000004c5328 : retf 0xf64
0x0000000000425b63 : retf 0xf66
0x0000000000495382 : retf 0xf6b0
0x000000000042d59a : retf 0xf748
0x00000000004b035c : retf 0xf85d
0x00000000004b0354 : retf 0xf85e
0x00000000004b034c : retf 0xf85f
0x00000000004b0344 : retf 0xf860
0x00000000004b033c : retf 0xf861
0x00000000004b0148 : retf 0xf869
0x00000000004b0640 : retf 0xf890
0x000000000041e96d : retf 0xf989
0x000000000043feff : retf 0xf9c5
0x000000000047f342 : retf 0xfa17
0x0000000000459cf2 : retf 0xfa67
0x0000000000405271 : retf 0xfa83
0x000000000046513a : retf 0xfac1
0x00000000004ac512 : retf 0xfafa
0x000000000047d616 : retf 0xfdc5
0x000000000048c88b : retf 0xfe8
0x000000000042d3c7 : retf 0xfec5
0x0000000000436221 : retf 0xff2
0x000000000042d9cb : retf 0xff3
0x000000000040ee64 : retf 0xff31
0x00000000004a352b : retf 0xffb5
0x000000000046f472 : retf 0xffde
0x000000000040cbb9 : retf 0xffe7
0x00000000004a2d02 : retf 0xfff3
0x00000000004662ea : retf 0xfff5
0x00000000004553c7 : retf 0xfff6
0x00000000004600e2 : retf 0xfff8
0x00000000004a9cf2 : retf 0xfff9
0x000000000045603e : retf 0xfffa
0x000000000046739f : retf 0xfffb
0x000000000040f4e1 : retf 0xfffc
0x000000000044e45a : retf 0xfffd
0x000000000041223e : retf 0xfffe
0x00000000004039bd : retf 0xffff
0x00000000004040dc : retf 1
0x0000000000420d68 : retf 2
0x0000000000410f01 : retf 3
0x00000000004a7a45 : retf 4
0x0000000000462867 : retf 5
0x000000000040b0ea : retf 6
0x00000000004bea74 : retf 7
0x0000000000421e04 : retf 8
0x000000000042d6eb : retf 9
0x0000000000447a25 : rol bl, 0x48 ; mov eax, edi ; ret
0x0000000000449513 : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x00000000004a681c : rol bl, 0x66 ; nop ; mov rax, qword ptr [rsi + 0xb8] ; ret
0x00000000004a99bc : rol bl, 0x66 ; nop ; mov rax, qword ptr [rsi + 8] ; ret
0x000000000042c67e : rol bl, 0x83 ; ret 0x6620
0x000000000047e96b : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000419687 : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000041967c : rol bl, 1 ; nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000042ce4d : rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000004483cd : rol byte ptr [r9 + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x0000000000427062 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000441f36 : rol byte ptr [rax + 0x48], 1 ; clc ; sub rax, rdx ; vzeroupper ; ret
0x000000000042cb6b : rol byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x000000000047d902 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000004be460 : rol byte ptr [rax + rax], 0 ; ret 4
0x0000000000401876 : rol byte ptr [rax + rax], 0xc9 ; ret
0x000000000040206a : rol byte ptr [rax + rcx*2], 0x83 ; mov dword ptr [rcx + rax*2], 0x72f2a30f ; ret 0xfe83
0x00000000004b08d4 : rol byte ptr [rax + rdi*8 - 0x77baf01], 1 ; call rax
0x000000000048f0f9 : rol byte ptr [rax - 0x69f0f606], 1 ; ret 0x8348
0x00000000004563c4 : rol byte ptr [rax - 0x7af07f07], 0xc1 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040041e : rol byte ptr [rax], 0 ; add byte ptr [rax], al ; test rax, rax ; je 0x400434 ; call rax
0x0000000000484021 : rol byte ptr [rax], 0 ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000042d8bd : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044e92b : rol byte ptr [rax], 0 ; add dh, dh ; ret 0x7404
0x00000000004afd5c : rol byte ptr [rax], 0xf8 ; call qword ptr [rax]
0x00000000004a89ee : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000044cb68 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410ef9 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000042c8c2 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000460f45 : rol byte ptr [rbp - 0x40f0b737], 1 ; ror byte ptr [rax + 0xf], 0x44 ; ret 0xae9
0x00000000004b08cc : rol byte ptr [rbp - 0x7aaf0008], 1 ; clc ; call rax
0x00000000004a12a5 : rol byte ptr [rbx + 0x394800d3], 1 ; retf 0xe275
0x0000000000447866 : rol byte ptr [rbx + 0xfc3ffd8], 0x1f ; add byte ptr [rax], r8b ; xor eax, eax ; ret
0x0000000000425a3a : rol byte ptr [rbx + rbp], cl ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x0000000000495a2b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x0000000000419af8 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x0000000000454b61 : rol byte ptr [rbx - 0x76befb08], 1 ; ret 0x415f
0x00000000004af9d4 : rol byte ptr [rbx - 0x7b1f0009], 0xf7 ; inc dword ptr [rax] ; xchg bh, dh ; jmp qword ptr [rax]
0x00000000004b06e0 : rol byte ptr [rbx - 0x7ccf0008], 0xf8 ; jmp qword ptr [rax + 0x10fff882]
0x000000000047ebd2 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000004ad2fe : rol byte ptr [rbx], 0 ; add byte ptr [rbp + rcx*4 + 5], cl ; retf
0x00000000004a2451 : rol byte ptr [rbx], 0 ; add byte ptr [rbp - 0x75], al ; or byte ptr [rbx + 0x394401c2], al ; retf 0x830f
0x00000000004afda4 : rol byte ptr [rbx], 1 ; clc ; jmp qword ptr [rax]
0x000000000040116c : rol byte ptr [rcx + 0x51e8002d], 1 ; or eax, 0x5d900000 ; ret
0x00000000004493a1 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x00000000004680bf : rol byte ptr [rcx + 0xf], 0x94 ; ret
0x00000000004483ce : rol byte ptr [rcx + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x00000000004008de : rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x00000000004790a9 : rol byte ptr [rcx + rdi - 0x38], 0x7f ; adc dword ptr [rcx], eax ; clc ; mov rdx, r8 ; jmp 0x479089
0x000000000046ed72 : rol byte ptr [rcx - 0x77], 1 ; ret 0xb9e9
0x0000000000491979 : rol byte ptr [rcx - 0x7d], cl ; ret 0x4502
0x000000000046c294 : rol byte ptr [rcx - 7], 0xff ; jmp 0x46c262
0x000000000047ebb2 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x0000000000466142 : rol byte ptr [rcx], 0x39 ; retf
0x00000000004502c6 : rol byte ptr [rcx], 0x50 ; call rbx
0x000000000045ae1b : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x0000000000449737 : rol byte ptr [rcx], 0x83 ; ret 0xf01
0x0000000000449750 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x0000000000424bbb : rol byte ptr [rcx], 1 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000044fb11 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004610f2 : rol byte ptr [rcx], cl ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004b08bc : rol byte ptr [rdi - 0x78af0008], 1 ; clc ; call rax
0x000000000047ec12 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x000000000043412b : rol byte ptr [rdi], 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004c870c : rol byte ptr [rdi], 1 ; add byte ptr [rax], al ; and bl, ah ; call rax
0x0000000000432ce4 : rol byte ptr [rdi], 1 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000432af6 : rol byte ptr [rdi], cl ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000047ebc2 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000047eb79 : rol byte ptr [rdx], 0xc3 ; nop dword ptr [rax] ; add rax, 1 ; ret
0x00000000004a7626 : rol byte ptr [rdx], 0xe9 ; retf 0xfffc
0x00000000004c5281 : rol byte ptr [rdx], cl ; int1 ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000004b08c4 : rol byte ptr [rsi - 0x79af0008], 1 ; clc ; call rax
0x000000000047ec02 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000049c9ed : rol byte ptr [rsi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043ffe5 : rol ch, 1 ; jns 0x43ffc4 ; retf 0xead3
0x0000000000440135 : rol ch, 1 ; jns 0x440114 ; retf 0xead3
0x0000000000440285 : rol ch, 1 ; jns 0x440264 ; retf 0xead3
0x00000000004403d5 : rol ch, 1 ; jns 0x4403b4 ; retf 0xead3
0x0000000000440525 : rol ch, 1 ; jns 0x440504 ; retf 0xead3
0x0000000000440675 : rol ch, 1 ; jns 0x440654 ; retf 0xead3
0x00000000004407c5 : rol ch, 1 ; jns 0x4407a4 ; retf 0xead3
0x0000000000440915 : rol ch, 1 ; jns 0x4408f4 ; retf 0xead3
0x0000000000440a65 : rol ch, 1 ; jns 0x440a44 ; retf 0xead3
0x0000000000440bb5 : rol ch, 1 ; jns 0x440b94 ; retf 0xead3
0x0000000000440d05 : rol ch, 1 ; jns 0x440ce4 ; retf 0xead3
0x0000000000440e55 : rol ch, 1 ; jns 0x440e34 ; retf 0xead3
0x0000000000440fa5 : rol ch, 1 ; jns 0x440f84 ; retf 0xead3
0x00000000004410f5 : rol ch, 1 ; jns 0x4410d4 ; retf 0xead3
0x0000000000441245 : rol ch, 1 ; jns 0x441224 ; retf 0xead3
0x000000000049f355 : rol ch, 1 ; jns 0x49f334 ; retf 0xead3
0x000000000049f4d5 : rol ch, 1 ; jns 0x49f4b4 ; retf 0xead3
0x000000000049f655 : rol ch, 1 ; jns 0x49f634 ; retf 0xead3
0x000000000049f7d5 : rol ch, 1 ; jns 0x49f7b4 ; retf 0xead3
0x000000000049f955 : rol ch, 1 ; jns 0x49f934 ; retf 0xead3
0x000000000049fad5 : rol ch, 1 ; jns 0x49fab4 ; retf 0xead3
0x000000000049fc55 : rol ch, 1 ; jns 0x49fc34 ; retf 0xead3
0x000000000049fdd5 : rol ch, 1 ; jns 0x49fdb4 ; retf 0xead3
0x000000000049ff55 : rol ch, 1 ; jns 0x49ff34 ; retf 0xead3
0x00000000004a00d5 : rol ch, 1 ; jns 0x4a00b4 ; retf 0xead3
0x00000000004a0255 : rol ch, 1 ; jns 0x4a0234 ; retf 0xead3
0x00000000004a03d5 : rol ch, 1 ; jns 0x4a03b4 ; retf 0xead3
0x00000000004a0555 : rol ch, 1 ; jns 0x4a0534 ; retf 0xead3
0x00000000004a06d5 : rol ch, 1 ; jns 0x4a06b4 ; retf 0xead3
0x00000000004a0855 : rol ch, 1 ; jns 0x4a0834 ; retf 0xead3
0x000000000042cbef : rol ch, 1 ; std ; xlatb ; ret
0x000000000047d676 : rol ch, cl ; std ; xlatb ; ret
0x0000000000441f5f : rol ch, cl ; std ; xlatb ; ret 0xc085
0x00000000004c21e0 : rol cl, 0xc2 ; ret
0x00000000004afa8c : rol cl, 0xf7 ; push qword ptr [rax - 0x5f00083e] ; ret
0x0000000000432c45 : rol dword ptr [edi], 1 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000047eb5c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x000000000044914c : rol dword ptr [rax + 0x48000000], 0x39 ; retf 0xe175
0x0000000000448fe8 : rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x00000000004384c0 : rol dword ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000042cb20 : rol dword ptr [rbp + 0x311b75c0], 0xc0 ; vzeroupper ; ret
0x000000000042c6a4 : rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x000000000042cbe3 : rol dword ptr [rbp - 0x3a378a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000441a33 : rol dword ptr [rbp - 0x3a678a40], 0xfd ; xlatb ; ret 0xc085
0x000000000042c674 : rol dword ptr [rbp - 0x5c7af040], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004822d9 : rol dword ptr [rcx], 0 ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x0000000000400949 : rol dword ptr [rcx], 0x8d ; call r11
0x000000000045830f : rol dword ptr [rcx], 0xf ; mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x0000000000432c46 : rol dword ptr [rdi], 1 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000432a44 : rol dword ptr [rdi], cl ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004cd00e : rol dword ptr [rdx + 0xe], 8 ; retf 0x2000
0x00000000004563ca : rol dword ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047d60e : rol ebp, 1 ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x000000000047d66e : rol ebp, 1 ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000042d325 : rol ebp, 1 ; stc ; xlatb ; ret 0xff2d
0x00000000004240bc : rol ebx, 0x66 ; nop ; xor eax, eax ; ret
0x00000000004240bb : rol r11d, 0x66 ; nop ; xor eax, eax ; ret
0x00000000004cc3c0 : ror ah, 0xf7 ; call qword ptr [rbx]
0x000000000047a363 : ror al, 0x92 ; insd dword ptr [rdi], dx ; add byte ptr [rax - 0x39], cl ; ret 0x8c20
0x00000000004c5462 : ror bh, cl ; mov ecx, dword ptr [rsi + rdi*2 + 0xaaed8a9] ; jne 0x4c549b ; retf 0x32dd
0x00000000004cc370 : ror bl, 0xf7 ; call qword ptr [rax]
0x000000000047c255 : ror byte ptr [r9 + rcx*4 - 1], 0x41 ; call rsp
0x00000000004a6258 : ror byte ptr [rax + 0x21], cl ; ret 0xc148
0x000000000042c6f2 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x42c739 ; add rax, rdi ; ret
0x000000000042c702 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x42c73b ; lea rax, [rdi + rax + 0x10] ; ret
0x000000000042c712 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x42c73b ; lea rax, [rdi + rax + 0x20] ; ret
0x000000000042c722 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x42c73b ; lea rax, [rdi + rax + 0x30] ; ret
0x0000000000441df7 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x000000000047e87c : ror byte ptr [rax + 0x29], 1 ; clc ; shr rax, 2 ; ret
0x00000000004122ae : ror byte ptr [rax + 0x29], 1 ; ret
0x000000000042cb33 : ror byte ptr [rax + 0x39], 0xc2 ; jbe 0x42cbac ; add rax, rdi ; vzeroupper ; ret
0x000000000047fc4c : ror byte ptr [rax + 0x39], 0xd7 ; ja 0x47fc7f ; ret
0x000000000044d808 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x000000000041ef43 : ror byte ptr [rax + 0x39], 1 ; ret
0x000000000048eaa1 : ror byte ptr [rax + 0x39], cl ; call 0x490b7cbe
0x0000000000491af9 : ror byte ptr [rax + 0x39], cl ; call 0x490bad16
0x0000000000495ee1 : ror byte ptr [rax + 0x39], cl ; call 0x490bf0fe
0x0000000000494879 : ror byte ptr [rax + 0x39], cl ; fmul dword ptr [rdi] ; xchg eax, edx ; ret 0x2948
0x0000000000486baa : ror byte ptr [rax + 0x39], cl ; ret
0x0000000000479cb3 : ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000044efcd : ror byte ptr [rax + 0x63], cl ; test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x0000000000488ad6 : ror byte ptr [rax + 0xf], 0x44 ; enter -0x76b8, -0x38 ; ret
0x0000000000460f4b : ror byte ptr [rax + 0xf], 0x44 ; ret 0xae9
0x000000000045c4f9 : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000045c4ea : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x0000000000441ae6 : ror byte ptr [rax + 1], 0xc8 ; add rax, rdi ; vzeroupper ; ret
0x000000000042c79c : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x000000000042cc58 : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; vzeroupper ; ret
0x000000000042c6c2 : ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000441f03 : ror byte ptr [rax + 1], 0xf8 ; sub rax, rdx ; vzeroupper ; ret
0x000000000042cbb3 : ror byte ptr [rax + 1], 0xf8 ; vzeroupper ; ret
0x0000000000406c93 : ror byte ptr [rax + 1], 1 ; ret
0x0000000000401bee : ror byte ptr [rax + 1], cl ; ret 0xb60f
0x0000000000441df4 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x000000000047e879 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; shr rax, 2 ; ret
0x00000000004ba868 : ror byte ptr [rax + rax], 0 ; ret
0x000000000042ce45 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000441d36 : ror byte ptr [rax - 0x2d], 0xfa ; test rdx, rdx ; je 0x441d5c ; bsf rax, rdx ; ret
0x00000000004964fc : ror byte ptr [rax - 0x3f], 0xe0 ; add ecx, dword ptr [rbp - 0x77] ; ret 0x8d48
0x0000000000467e6a : ror byte ptr [rax - 0x3f], 0xe2 ; and byte ptr [rax + 9], cl ; ret 0xff83
0x000000000044ea55 : ror byte ptr [rax - 0x73], 0x3d ; push rsi ; xor al, byte ptr [rsi] ; add byte ptr [rax + 0xf], cl ; ret
0x000000000044ea77 : ror byte ptr [rax - 0x73], 0x3d ; xor al, byte ptr [rsi] ; add byte ptr [rax + 0xf], cl ; ret
0x000000000044ea99 : ror byte ptr [rax - 0x73], 0x3d ; xor al, byte ptr cs:[rsi] ; add byte ptr [rax + 0xf], cl ; ret
0x000000000042c6b2 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x000000000042c6e2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x000000000042c6d2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x00000000004240ee : ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x0000000000442323 : ror byte ptr [rax - 0x73], 0x76 ; adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x000000000044235f : ror byte ptr [rax - 0x73], 0x76 ; adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000400d60 : ror byte ptr [rax - 0x73], 1 ; add eax, 0xad1ac ; add rax, rdx ; jmp rax
0x0000000000483caa : ror byte ptr [rax - 0x73], cl ; add dword ptr [r15], r9d ; xchg eax, ebp ; ret 0xc283
0x000000000047fb8b : ror byte ptr [rax - 0x77], 0xe2 ; mov esi, 0x5401 ; mov eax, ecx ; syscall
0x000000000044ac2a : ror byte ptr [rax - 0x77], 0xee ; mov edi, ebx ; mov eax, 1 ; syscall
0x000000000044ab5a : ror byte ptr [rax - 0x77], 0xee ; mov edi, ebx ; xor eax, eax ; syscall
0x0000000000497a3c : ror byte ptr [rax - 0x77], 1 ; or byte ptr [r8 + 2], r15b ; ret
0x00000000004124f0 : ror byte ptr [rax - 0x77], 1 ; ret
0x00000000004a626d : ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x000000000045bd04 : ror byte ptr [rax - 0x77], 1 ; ret 0x894c
0x0000000000414e00 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x000000000048c24a : ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000040eded : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000042073d : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000415ae1 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x415af7 ; ret
0x000000000049802c : ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000042cbd3 : ror byte ptr [rax - 0x7d], 0xc0 ; add rax, rdi ; vzeroupper ; ret
0x000000000042cbc3 : ror byte ptr [rax - 0x7d], 0xc0 ; and byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x00000000004247f5 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000417865 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000004a3c87 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000047fb63 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x00000000004a9d07 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000416a81 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000041f08d : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb38ac
0x00000000004201cd : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb49ec
0x0000000000420f87 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb57a6
0x0000000000422a8a : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb72a9
0x0000000000422f8f : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb77ae
0x00000000004234cb : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb7cea
0x000000000046dc26 : ror byte ptr [rax - 0x7d], 1 ; mov ebp, 0xfffffae8 ; add byte ptr [rcx - 0x77], al ; ret 0x1674
0x000000000040fe70 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x000000000044bcd4 : ror byte ptr [rax - 0x7d], 1 ; retf 0x4901
0x000000000041338a : ror byte ptr [rax - 0x7d], cl ; loop 0x413392 ; add rdx, rcx ; jmp 0x4133a8
0x0000000000456a05 : ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000447dab : ror byte ptr [rax - 0x7f], 0xc4 ; add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x00000000004a4e45 : ror byte ptr [rax], 0x83 ; ret 0x3901
0x00000000004787d2 : ror byte ptr [rbp + 0x39441604], cl ; retf 0xf41
0x0000000000478cf2 : ror byte ptr [rbp + 0x39441704], cl ; ret 0xf49
0x000000000047e24c : ror byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call rbx
0x0000000000449a06 : ror byte ptr [rbx + 0x42b8204], 0x8a ; je 0x4499fa ; ret
0x0000000000400aad : ror byte ptr [rbx - 0x1f00ff93], 1 ; nop dword ptr [rax + rax] ; pop rbp ; ret
0x0000000000400aef : ror byte ptr [rbx - 0x1f00ff93], 1 ; nop dword ptr [rax] ; pop rbp ; ret
0x00000000004b0530 : ror byte ptr [rbx - 0x6dbd0008], cl ; clc ; call rdx
0x00000000004b0b18 : ror byte ptr [rbx - 7], 1 ; push rax ; stc ; call qword ptr [rax]
0x000000000044b694 : ror byte ptr [rcx + 0x12eb8fe], cl ; add byte ptr [rax], al ; xor edi, edi ; syscall
0x0000000000497a24 : ror byte ptr [rcx + 0x2b802], 1 ; add byte ptr [rax], al ; ret
0x00000000004a7937 : ror byte ptr [rcx + 0x63], 4 ; test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x000000000046a178 : ror byte ptr [rcx + rcx*4 + 0x2f], 0x5b ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046a0a8 : ror byte ptr [rcx + rcx*4 + 0x37], 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047e437 : ror byte ptr [rcx + rcx*4 - 0xe], 0x4c ; lea ecx, [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x000000000047c256 : ror byte ptr [rcx + rcx*4 - 1], 0x41 ; call rsp
0x0000000000498035 : ror byte ptr [rcx - 0x49f0fbad], 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000474732 : ror byte ptr [rcx - 0x60b6b], 0xff ; jmp 0x470a01
0x0000000000474731 : ror byte ptr [rcx - 0x60b6b], 0xff ; jmp 0x470a02
0x000000000045da06 : ror byte ptr [rcx - 0x73], 0x43 ; adc byte ptr [rdi], cl ; sahf ; ret 0x894c
0x0000000000469b58 : ror byte ptr [rcx - 0x77], cl ; ret
0x00000000004512df : ror byte ptr [rcx - 0x7d], cl ; cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x000000000046b16e : ror byte ptr [rcx - 0x90f4b], 0xff ; jmp qword ptr [rdx + rax*8]
0x00000000004b0ab0 : ror byte ptr [rcx - 7], 0xff ; ror byte ptr [rcx - 7], 1 ; jmp rax
0x00000000004b0ab4 : ror byte ptr [rcx - 7], 1 ; jmp rax
0x0000000000479b14 : ror byte ptr [rcx - 9], cl ; cmc ; mov rbp, rax ; jmp 0x479ae7
0x00000000004b0b48 : ror byte ptr [rdi - 7], 1 ; jmp rax
0x000000000045c7a2 : ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x000000000049c0ed : ror byte ptr [rdi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042f1e5 : ror byte ptr [rdi], 0x29 ; pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044d6fc : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x0000000000482281 : ror byte ptr [rdi], 0x84 ; clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000046054c : ror byte ptr [rdi], 0x84 ; lahf ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000041150d : ror byte ptr [rdi], 0x84 ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047fd99 : ror byte ptr [rdi], 0x84 ; nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000493326 : ror byte ptr [rdi], 0x84 ; or dword ptr [rax], eax ; add byte ptr [rax], bh ; ret
0x0000000000410c91 : ror byte ptr [rdi], 0x84 ; popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000403a66 : ror byte ptr [rdi], 0x84 ; ret
0x000000000046866b : ror byte ptr [rdi], 0x84 ; ret 0x17
0x0000000000452267 : ror byte ptr [rdi], 0x84 ; ret 0xfffc
0x000000000049154b : ror byte ptr [rdi], 0x84 ; ret 0xfffe
0x0000000000424ede : ror byte ptr [rdi], 0x84 ; retf
0x000000000044df82 : ror byte ptr [rdi], 0x84 ; retf 0
0x000000000040cbb6 : ror byte ptr [rdi], 0x84 ; retf 0xffe7
0x0000000000454efc : ror byte ptr [rdi], 0x84 ; retf 0xfffc
0x000000000044232a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000423a8f : ror byte ptr [rdi], 0x85 ; ret
0x000000000044e35f : ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x0000000000487d92 : ror byte ptr [rdi], 0x85 ; ret 2
0x000000000046833e : ror byte ptr [rdi], 0x85 ; retf
0x000000000044e457 : ror byte ptr [rdi], 0x85 ; retf 0xfffd
0x000000000042ca2d : ror byte ptr [rdi], 0x85 ; retf 1
0x0000000000464e6c : ror byte ptr [rdi], 0x85 ; retf 6
0x000000000042428f : ror byte ptr [rdi], 0x88 ; retf 1
0x0000000000469209 : ror byte ptr [rdi], 0x8f ; ret 7
0x000000000044d45c : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x0000000000489869 : ror byte ptr [rdi], 0x94 ; ret
0x000000000048b35a : ror byte ptr [rdi], 0x94 ; ret 0x3d
0x000000000046f41d : ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x000000000049802f : ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000447e9e : ror byte ptr [rdi], 0x94 ; ret 0xc085
0x00000000004240e8 : ror byte ptr [rdi], 0x94 ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x0000000000472717 : ror byte ptr [rdi], 0x95 ; ret
0x00000000004113d0 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x000000000046e82a : ror byte ptr [rdi], 0xb6 ; add al, 7 ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x00000000004240eb : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x0000000000448315 : ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000040ee02 : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x40edec ; ret
0x000000000044ab2b : ror byte ptr [rdi], 5 ; cmp rax, -0x1000 ; ja 0x44ab9c ; ret
0x000000000044abc1 : ror byte ptr [rdi], 5 ; cmp rax, -0x1000 ; ja 0x44abdc ; ret
0x000000000046519e : ror byte ptr [rdi], cl ; ret 0xf8c1
0x000000000047d85b : ror byte ptr [rdi], cl ; test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x0000000000441cdb : ror byte ptr [rdi], cl ; test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000004b0af4 : ror byte ptr [rdx - 7], 1 ; push rax ; stc ; inc dword ptr [rax] ; stc ; call qword ptr [rax]
0x00000000004b1a40 : ror dl, 1 ; stc ; push qword ptr [rax - 0x6f000636] ; retf 0xfff9
0x00000000004359d7 : ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x00000000004a0bae : ror dword ptr [rax + 1], 0xf8 ; sub rax, r8 ; ret
0x0000000000447ea8 : ror dword ptr [rax + 1], 0xf8 ; sub rax, rsi ; ret
0x0000000000441cc4 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0x8948
0x0000000000441de9 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf48
0x000000000047d96a : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf4c
0x00000000004a6434 : ror dword ptr [rax - 0x3f], cl ; out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x00000000004792a6 : ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x00000000004a367f : ror dword ptr [rax - 0x75], 7 ; cmp rax, rsi ; je 0x4a369a ; ret
0x0000000000401dda : ror dword ptr [rax - 0x77], 1 ; ret 0x8948
0x0000000000424837 : ror dword ptr [rax - 0x77], 1 ; ret 0xaeeb
0x00000000004840b3 : ror dword ptr [rax - 0x77], 1 ; ret 0xd348
0x00000000004678a0 : ror dword ptr [rax - 0x77], 1 ; ret 0xe7e9
0x0000000000459f98 : ror dword ptr [rax - 0x77], 1 ; retf 0x8348
0x00000000004a1211 : ror dword ptr [rax - 0x77], cl ; ret
0x000000000041777d : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x417777 ; ret
0x000000000047a9ed : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x47a9e7 ; ret
0x0000000000467399 : ror dword ptr [rax - 0x7d], 0xe8 ; add al, 0xe9 ; retf 0xfffb
0x000000000045f654 : ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x00000000004971cd : ror dword ptr [rbp + rcx*4 + 0x14], cl ; ret
0x000000000046725b : ror dword ptr [rcx - 0x77], 0x14 ; ret 0x8b48
0x00000000004125eb : ror dword ptr [rcx - 0x77], 0x47 ; and byte ptr [rcx - 0x77], cl ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x0000000000445e57 : ror dword ptr [rcx], cl ; ret 0xe074
0x000000000048639e : ror dword ptr [rdi], 0x84 ; retf 6
0x000000000042e128 : ror dword ptr [rdi], 0x85 ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042e834 : ror dword ptr [rdi], 0x85 ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042e606 : ror dword ptr [rdi], 0x85 ; add eax, 0xc0310000 ; ret
0x000000000042e586 : ror dword ptr [rdi], 0x85 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000042e8c4 : ror dword ptr [rdi], 0x85 ; je 0x42e8d4 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042e3bb : ror dword ptr [rdi], 0x85 ; jno 0x42e3d0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042e483 : ror dword ptr [rdi], 0x85 ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042e100 : ror dword ptr [rdi], 0x85 ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000049194b : ror dword ptr [rdi], cl ; popfq ; ret 0x841
0x000000000040fc91 : ror eax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x000000000040fbcb : ror edx, 0x11 ; xor rdx, qword ptr fs:[0x30] ; call rdx
0x000000000041777c : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x417778 ; ret
0x000000000047a9ec : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x47a9e8 ; ret
0x0000000000402ade : sahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jbe 0x402afe ; syscall
0x00000000004cbcd1 : sahf ; cmc ; jmp qword ptr [rbx]
0x00000000004409ee : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004c3785 : sahf ; ret 0x38ae
0x0000000000496ac1 : sahf ; ret 0x3948
0x000000000045da0c : sahf ; ret 0x894c
0x00000000004a8024 : sahf ; ret 0xf45
0x00000000004c42bc : sahf ; retf
0x0000000000419afe : sal bh, 0xd8 ; ret
0x00000000004afa89 : sal bh, 0xff ; rol cl, 0xf7 ; push qword ptr [rax - 0x5f00083e] ; ret
0x0000000000426ee7 : sal bh, 1 ; ret 0x8000
0x0000000000426da7 : sal bh, 1 ; ret 0xc000
0x0000000000426c67 : sal bh, 1 ; ret 0xe000
0x0000000000426b27 : sal bh, 1 ; ret 0xf000
0x00000000004269e7 : sal bh, 1 ; ret 0xf800
0x00000000004268a7 : sal bh, 1 ; ret 0xfc00
0x0000000000426767 : sal bh, 1 ; ret 0xfe00
0x0000000000426627 : sal bh, 1 ; ret 0xff00
0x00000000004264e7 : sal bh, 1 ; ret 0xff80
0x00000000004263a7 : sal bh, 1 ; ret 0xffc0
0x0000000000426267 : sal bh, 1 ; ret 0xffe0
0x0000000000426127 : sal bh, 1 ; ret 0xfff0
0x0000000000425fe7 : sal bh, 1 ; ret 0xfff8
0x0000000000425ea7 : sal bh, 1 ; ret 0xfffc
0x0000000000425d67 : sal bh, 1 ; ret 0xfffe
0x000000000042ccef : sal bl, 1 ; bsf eax, eax ; add rax, rdi ; vzeroupper ; ret
0x000000000047e95f : sal bl, 1 ; ret
0x000000000048970d : sal bl, cl ; ret
0x000000000040ed2d : sal byte ptr [rax + 0x48], 0xc7 ; ret 0xfff0
0x00000000004a4fb1 : sal byte ptr [rax + rax*8 + 0x49], 0x83 ; ret 0xf608
0x000000000045a312 : sal byte ptr [rax + rdx - 0x7b], cl ; sar byte ptr [rdx], 0xf ; ret 0xc083
0x000000000044abf7 : sal byte ptr [rbp + 0x16], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000044aec7 : sal byte ptr [rbp + 0x16], 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000040eefa : sal byte ptr [rbp + 0x1f], 0x48 ; add esp, 0x118 ; ret
0x000000000047dbc2 : sal byte ptr [rbp + 0x2b], 0x4c ; mov eax, eax ; vzeroupper ; ret
0x000000000048c90e : sal byte ptr [rbp + 0x4f], 0x89 ; ret
0x000000000047f9a6 : sal byte ptr [rbp + 0x5d], 0xb8 ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000004070db : sal byte ptr [rbp + 0xa], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000004aadd3 : sal byte ptr [rbp + 0xa], 0xf3 ; ret
0x000000000047bec8 : sal byte ptr [rbp + 0xd], 0x8b ; cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x00000000004a0f8f : sal byte ptr [rbp + 3], cl ; mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004aadb8 : sal byte ptr [rbp + 5], 0xf3 ; ret
0x000000000044d821 : sal byte ptr [rbp + 8], 1 ; nop ; mov eax, 0xca ; syscall
0x0000000000415ae4 : sal byte ptr [rbp + 9], cl ; ret
0x000000000047e7e0 : sal byte ptr [rbp + rcx + 0x48], cl ; bsf eax, edx ; shr rax, 2 ; ret
0x000000000047eb58 : sal byte ptr [rbp + rdx - 0x78], cl ; rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x000000000044d831 : sal byte ptr [rbp - 0x10], 0x5a ; pop r10 ; ret
0x000000000041869d : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x0000000000447b90 : sal byte ptr [rbp - 0x13], cl ; lea rax, [rcx - 1] ; ret
0x0000000000417780 : sal byte ptr [rbp - 0x13], cl ; ret
0x000000000042720b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000040ee07 : sal byte ptr [rbp - 0x27], cl ; ret
0x000000000042cbed : sal byte ptr [rbp - 0x30], 0xc5 ; std ; xlatb ; ret
0x000000000048b1c8 : sal byte ptr [rbp - 0x31], cl ; movsx eax, cl ; neg eax ; ret
0x000000000042cbe5 : sal byte ptr [rbp - 0x38], 0xc5 ; std ; xlatb ; ret 0xc085
0x0000000000441a3d : sal byte ptr [rbp - 0x50], 0xc5 ; std ; xlatb ; ret
0x0000000000441a35 : sal byte ptr [rbp - 0x68], 0xc5 ; std ; xlatb ; ret 0xc085
0x000000000047e6bb : sal byte ptr [rbp - 0xe], cl ; ret
0x0000000000419abc : sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x000000000044e916 : sal byte ptr [rbx + rbp + 0x48], 0x8b ; push rax ; or dh, dh ; ret 0x8902
0x00000000004a8b22 : sal byte ptr [rbx + rcx + 0x48], 0x8b ; and al, 0x10 ; add rsp, 0x28 ; ret
0x00000000004a2abc : sal byte ptr [rbx + rdi + 0x48], cl ; shl edx, 5 ; add rdx, rax ; jmp 0x4a2ada
0x000000000047b3e2 : sal byte ptr [rbx + rdi + 0x4d], 0x8b ; mov ch, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0x8c20
0x000000000046613a : sal byte ptr [rbx + rsi + 0xf], 0xbe ; enter -0x7cb7, -0x40 ; add dword ptr [rcx], edi ; retf
0x0000000000441d3c : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x0000000000494fb7 : sal byte ptr [rcx], 0xc9 ; mov rdi, rbx ; call 0x492d4c
0x00000000004502bd : sal byte ptr [rcx], 0xc9 ; movzx eax, al ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x000000000047e248 : sal byte ptr [rcx], 0xc9 ; xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x00000000004502c2 : sal byte ptr [rcx], 0xd2 ; add eax, 1 ; push rax ; call rbx
0x000000000044d806 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x0000000000479b12 : sal byte ptr [rcx], 1 ; ror byte ptr [rcx - 9], cl ; cmc ; mov rbp, rax ; jmp 0x479ae9
0x0000000000408929 : sal byte ptr [rdi + rbp - 0x75], cl ; or al, byte ptr [rbx - 0x7bf0fd07] ; ret
0x000000000040bdb8 : sal byte ptr [rdi + rbp - 0x75], cl ; or al, byte ptr [rbx - 0x7bf0fd07] ; ret 0x18
0x000000000042fa69 : sal byte ptr [rdx + 0x14], 1 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000047d8cb : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000047e7cb : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; shr rax, 2 ; ret
0x000000000042f13b : sal byte ptr [rdx + 0xd], 1 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000400425 : sal byte ptr [rdx + rax - 1], 0xd0 ; add rsp, 8 ; ret
0x0000000000447ea3 : sal byte ptr [rdx + rbx*8 + 0x48], 0x63 ; ror dword ptr [rax + 1], 0xf8 ; sub rax, rsi ; ret
0x000000000044e13b : sal byte ptr [rdx + rcx + 0x48], cl ; lea edi, [rcx + rax + 0x20] ; jmp rdx
0x00000000004a260b : sal byte ptr [rdx + rcx + 0x49], cl ; mov eax, dword ptr [rsp] ; add rax, qword ptr [rdx + 8] ; call rax
0x0000000000400b19 : sal byte ptr [rdx + rcx - 0x41], 0x68 ; jg 0x400b75 ; add al, ch ; retf 0xaa4
0x0000000000401080 : sal byte ptr [rdx + rcx - 0x48], 0 ; add byte ptr [rax], al ; add cl, ch ; ret 0
0x0000000000442053 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x000000000042e9af : sal byte ptr [rdx - 0x10f0992e], cl ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042ead0 : sal byte ptr [rdx - 0x10f09930], 1 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000418005 : sal byte ptr [rsi + 0x10], 0x48 ; mov eax, dword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000042c797 : sal byte ptr [rsi + rdx + 0xf], 0xbc ; ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x0000000000410660 : sal byte ptr [rsi - 0x4b], 1 ; mov r11d, 1 ; jmp 0x410637
0x000000000045ea78 : sal byte ptr [rsi - 0x4b], 1 ; mov r11d, 1 ; jmp 0x45ea4f
0x00000000004983f1 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000489cc9 : sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x00000000004a500a : sal byte ptr [rsp + rsi*4 + 0x48], 0x83 ; ret 0xf608
0x0000000000434fd9 : sal dword ptr [rcx + 0x63490007], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004349d9 : sal dword ptr [rdi + 0x63490007], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000434cd9 : sal dword ptr [rdi + rax + 0x14634900], cl ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000042e90f : sal dword ptr [rdx - 0x10f0992d], cl ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042ea4f : sal dword ptr [rdx - 0x10f0992f], 1 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000448273 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000048b1cd : sal edi, 0xd8 ; ret
0x00000000004627c3 : sal edx, 0xff ; inc dword ptr [rcx + 0xf] ; mov esi, 0x3d8d48c7 ; outsb dx, byte ptr [rsi] ; retf
0x000000000048413c : sal esi, cl ; adc dword ptr [rip + 0x20000003], 0x75 ; retf 0x5f6
0x000000000042e90e : sal qword ptr [rdx - 0x10f0992d], cl ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042ea4e : sal qword ptr [rdx - 0x10f0992f], 1 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b0a90 : sar bh, 0xf8 ; call qword ptr [rax]
0x0000000000404330 : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret
0x000000000044a803 : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000048a053 : sar bh, 0xff ; lcall [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x00000000004978c0 : sar bh, 0xff ; mov eax, 1 ; ret
0x000000000049787d : sar bh, 0xff ; sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000044c7bb : sar bh, cl ; dec dword ptr [rax + 0x39] ; ret
0x00000000004b0a84 : sar bl, 1 ; clc ; jmp qword ptr [rax]
0x0000000000403a62 : sar byte ptr [rax + 0x5b], 0x85 ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000485f91 : sar byte ptr [rax + 0xe], 0x5b ; ret
0x00000000004afe68 : sar byte ptr [rax + rdi*8], 1 ; call rax
0x000000000044b742 : sar byte ptr [rax - 0x21], 0x48 ; add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000004069f5 : sar byte ptr [rcx - 0x38], 0x4d ; mov edi, esp ; jmp 0x4069ce
0x0000000000447e4e : sar byte ptr [rcx], 0xc8 ; jle 0x447e90 ; movsxd rax, ecx ; ret
0x000000000044ee9d : sar byte ptr [rcx], cl ; ret
0x0000000000463c07 : sar byte ptr [rcx], cl ; retf 0x147f
0x00000000004af9b4 : sar byte ptr [rdx - 9], 0xff ; loopne 0x4afa40 ; idiv edi ; add byte ptr [rbp - 9], bh ; jmp qword ptr [rax]
0x000000000045a316 : sar byte ptr [rdx], 0xf ; ret 0xc083
0x00000000004afe64 : sar byte ptr [rdx], 1 ; clc ; call rax
0x00000000004c411f : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004b203d : sar cl, cl ; call qword ptr [rax]
0x00000000004b201d : sar cl, cl ; call qword ptr [rdi]
0x00000000004c7aa4 : sar dh, 1 ; std ; call rax
0x00000000004c7a78 : sar dh, 1 ; std ; call rcx
0x00000000004397b3 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x4397be ; ret
0x00000000004494a2 : sar dword ptr [rax], 1 ; and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x00000000004343d9 : sar dword ptr [rbp + 0x63490007], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004346d9 : sar dword ptr [rdx + 0x63490007], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000448789 : sar dword ptr [rsi + 0x7f], 0x23 ; vzeroupper ; ret
0x000000000047bc4c : sar eax, 2 ; lea eax, [r8 - 1] ; ret
0x00000000004a3f1e : sar eax, 3 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004b1fe5 : sar ecx, 1 ; jmp rdx
0x00000000004c3e83 : sar ecx, 1 ; jnp 0x4c3e44 ; ret
0x00000000004b1fe1 : sar ecx, 1 ; ljmp [rdx] ; sar ecx, 1 ; jmp rdx
0x00000000004b1fdd : sar ecx, cl ; lcall [rdi - 0x2f] ; stc ; ljmp [rdx] ; sar ecx, 1 ; jmp rdx
0x000000000044c862 : sar edi, 1 ; dec dword ptr [rax + 0x39] ; ret
0x00000000004c7a7c : sar edi, 1 ; std ; call rcx
0x00000000004c7cb0 : sar edi, 1 ; std ; push qword ptr [rax] ; add dh, bh ; call rcx
0x000000000047bd52 : sar edx, 2 ; sub eax, edx ; ret
0x000000000042ce47 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000441d38 : sar edx, cl ; test rdx, rdx ; je 0x441d5a ; bsf rax, rdx ; ret
0x0000000000441d38 : sar edx, cl ; test rdx, rdx ; je 0x441d5b ; bsf rax, rdx ; ret
0x000000000047d8c7 : sar edx, cl ; test rdx, rdx ; je 0x47d8fa ; bsf rax, rdx ; ret
0x000000000047d8c7 : sar edx, cl ; test rdx, rdx ; je 0x47d8fb ; bsf rax, rdx ; ret
0x0000000000448c43 : sar esi, 1 ; jg 0x448c73 ; vzeroupper ; ret
0x0000000000448ddc : sar esi, 1 ; jg 0x448e0c ; vzeroupper ; ret
0x00000000004d1d09 : sar esp, cl ; call qword ptr [rax]
0x000000000047bc4b : sar r8, 2 ; lea eax, [r8 - 1] ; ret
0x00000000004b201c : sar r9b, cl ; call qword ptr [rdi]
0x00000000004a3f1d : sar rax, 3 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047bd51 : sar rdx, 2 ; sub eax, edx ; ret
0x000000000042ce46 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000441d37 : sar rdx, cl ; test rdx, rdx ; je 0x441d5b ; bsf rax, rdx ; ret
0x0000000000441d37 : sar rdx, cl ; test rdx, rdx ; je 0x441d5c ; bsf rax, rdx ; ret
0x000000000047d8c6 : sar rdx, cl ; test rdx, rdx ; je 0x47d8fb ; bsf rax, rdx ; ret
0x000000000047d8c6 : sar rdx, cl ; test rdx, rdx ; je 0x47d8fc ; bsf rax, rdx ; ret
0x0000000000464e55 : sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x00000000004d0e70 : sbb al, 0 ; add byte ptr [rax], al ; cmp byte ptr [rdi - 0x5d180000], cl ; sti ; jmp qword ptr [rsi]
0x00000000004c81ec : sbb al, 0 ; add byte ptr [rax], al ; mov ah, 2 ; add byte ptr [rax], al ; jno 0x4c8190 ; call qword ptr [rbx]
0x000000000044b961 : sbb al, 0 ; add byte ptr [rax], al ; syscall
0x00000000004c80cc : sbb al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; add dword ptr [rax], eax ; add byte ptr [rsi - 0x67], bl ; call qword ptr [rcx]
0x000000000049d43a : sbb al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049d393 : sbb al, 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x00000000004159d0 : sbb al, 0x1b ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004682cd : sbb al, 0x29 ; ret 0xe683
0x00000000004cda58 : sbb al, 0x5b ; add byte ptr [rax], al ; and al, 0x65 ; clc ; call rcx
0x0000000000469207 : sbb al, 0x85 ; ror byte ptr [rdi], 0x8f ; ret 7
0x00000000004c5182 : sbb al, 0x8c ; retf
0x00000000004bfc74 : sbb al, 0x92 ; sti ; call rsp
0x00000000004cdff4 : sbb al, 0xc2 ; clc ; jmp rax
0x00000000004cab45 : sbb al, 0xf5 ; call qword ptr [rax]
0x00000000004cd26d : sbb al, 0xf8 ; jmp qword ptr [rdx]
0x0000000000486be2 : sbb al, 2 ; add byte ptr [rax], al ; call 0x402e16
0x000000000040f352 : sbb al, 7 ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000042de9e : sbb al, 8 ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00000000004c9a39 : sbb al, byte ptr [rax] ; add ah, al ; ret
0x00000000004761db : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000465936 : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004a8825 : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, 1 ; call r14
0x000000000049d61a : sbb al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000408203 : sbb al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000046e621 : sbb al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000046b3db : sbb al, byte ptr fs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000049d619 : sbb al, byte ptr fs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000040c398 : sbb al, ch ; ret 0xffaf
0x000000000040a767 : sbb al, ch ; retf
0x00000000004d2225 : sbb bh, ch ; jmp qword ptr [rdx]
0x00000000004c3f12 : sbb bl, byte ptr [rip + 0x30565c9] ; in eax, dx ; retf
0x000000000042dc92 : sbb bl, byte ptr [rsi] ; or byte ptr [rax], al ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00000000004c2c05 : sbb bl, byte ptr [rsi] ; ret
0x00000000004456aa : sbb bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000004b1fdc : sbb bl, dl ; stc ; lcall [rdi - 0x2f] ; stc ; ljmp [rdx] ; sar ecx, 1 ; jmp rdx
0x000000000048bf34 : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000004177e0 : sbb byte ptr [r8 - 0x77], r9b ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x00000000004a14d4 : sbb byte ptr [r8], al ; add byte ptr [rax], al ; add bl, ch ; ret
0x0000000000459b41 : sbb byte ptr [r9 + 1], r9b ; fadd qword ptr [rax - 0x7bf0ffc2] ; retf
0x000000000047add9 : sbb byte ptr [r9 + rcx*4 - 0x1a], r8b ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000498029 : sbb byte ptr [r9], sil ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000047fa31 : sbb byte ptr [rax + 0x101], bh ; syscall
0x0000000000488571 : sbb byte ptr [rax + 0x29], cl ; ret 0x394c
0x000000000041a491 : sbb byte ptr [rax + 0x39], cl ; ret
0x000000000045f7a4 : sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000041ca65 : sbb byte ptr [rax + 0x39], cl ; retf 0x850f
0x000000000048bf35 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x000000000047035e : sbb byte ptr [rax + 1], cl ; ret 0x14c
0x000000000046ace2 : sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x00000000004a962a : sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x00000000004a0eaf : sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; retf 0xc148
0x000000000041a3ff : sbb byte ptr [rax - 0x75], cl ; push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x000000000048c917 : sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x000000000047c506 : sbb byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000004206ed : sbb byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x00000000004a980c : sbb byte ptr [rax - 0x77], cl ; fucomip st(0) ; retf
0x0000000000489a75 : sbb byte ptr [rax - 0x77], cl ; or r9b, bpl ; retf 0xfffd
0x000000000047e590 : sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov r9, r14 ; call rbx
0x0000000000489cec : sbb byte ptr [rax - 0x77], cl ; push rbx ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004177e1 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000041b43b : sbb byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004a11df : sbb byte ptr [rax - 0x77], cl ; ret
0x000000000048e099 : sbb byte ptr [rax - 0x77], cl ; ret 0xf748
0x000000000041265e : sbb byte ptr [rax - 0x77], cl ; retf
0x000000000041ac53 : sbb byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000000004a14d5 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add bl, ch ; ret
0x00000000004d221c : sbb byte ptr [rax], al ; add byte ptr [rax], al ; in al, 0xa2 ; add byte ptr [rax], al ; sbb r15b, bpl ; jmp qword ptr [rdx]
0x000000000044a841 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000043418a : sbb byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x1d], cl ; pop rsp ; ret 7
0x000000000049b7ee : sbb byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000040b84a : sbb byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x00000000004ac875 : sbb byte ptr [rax], al ; je 0x4ac86d ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004a60a5 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000420d08 : sbb byte ptr [rbx + 0x5d], bl ; jmp rax
0x0000000000422818 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000041015e : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000044ec7c : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000401370 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000419677 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000042df2c : sbb byte ptr [rbx], 8 ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00000000004a6431 : sbb byte ptr [rcx + 0x21], cl ; ror dword ptr [rax - 0x3f], cl ; out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x000000000047ba6a : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000004c9ac8 : sbb byte ptr [rcx + 0xe], al ; adc byte ptr [rdx + 0xe], al ; or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rbx + 0xa] ; ret
0x0000000000459b42 : sbb byte ptr [rcx + 1], cl ; fadd qword ptr [rax - 0x7bf0ffc2] ; retf
0x000000000041ab6e : sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x000000000047bf7e : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000047adda : sbb byte ptr [rcx + rcx*4 - 0x1a], al ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000004789b6 : sbb byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004ab91f : sbb byte ptr [rcx + rdi + 0x6d], cl ; js 0x4ab9a2 ; ret 0x8b48
0x0000000000455dc8 : sbb byte ptr [rcx - 0x77], al ; ret
0x000000000048e4db : sbb byte ptr [rcx - 0x77], cl ; ret
0x00000000004740da : sbb byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x000000000040ef00 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000047c520 : sbb byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000042073b : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000049802a : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000044daa3 : sbb byte ptr [rdi + 0x10], dh ; mov qword ptr [rax + 0x20], rcx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000044daa2 : sbb byte ptr [rdi + 0x10], sil ; mov qword ptr [rax + 0x20], rcx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000044dad1 : sbb byte ptr [rdi - 0x1e], bh ; mov qword ptr [rax + 0x20], rcx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000044dad0 : sbb byte ptr [rdi - 0x1e], dil ; mov qword ptr [rax + 0x20], rcx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000049b12d : sbb byte ptr [rdi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000405283 : sbb byte ptr [rdi], cl ; retf 0xd289
0x00000000004a29bb : sbb byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004a0a24 : sbb byte ptr [rip + 0xc8b0001], dh ; mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x000000000044ad71 : sbb byte ptr [rsi + 0x10], bh ; mov eax, 0x48 ; syscall
0x00000000004792a1 : sbb byte ptr [rsi], ah ; add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x000000000041ef3d : sbb cl, byte ptr [rax + 0x29480614] ; ror byte ptr [rax + 0x39], 1 ; ret
0x000000000045954d : sbb cl, byte ptr [rdi] ; mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x00000000004524fa : sbb cl, byte ptr [rdi] ; mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x000000000043f13d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000440d8a : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x00000000004405aa : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000044099a : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004401ba : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043fc9d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043f47d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000043ec5d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x0000000000440359 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043f7bd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043ef9d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e77d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000043f95d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000044084a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044006a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044117a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043eabd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043ebf3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f8f3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f413 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044074b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000044107b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043fc33 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ef33 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000043ea53 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f753 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000044089b : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004400bb : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004c7ea5 : sbb dh, bh ; call rax
0x00000000004c7ea9 : sbb dh, bh ; jmp rax
0x00000000004c7ea1 : sbb dh, bh ; ljmp [rax - 0x2f0001e8] ; sbb dh, bh ; jmp rax
0x00000000004a9955 : sbb dh, bl ; ret
0x000000000048abd7 : sbb dl, dh ; jmp r11
0x000000000049d738 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000492f1b : sbb dword ptr [rax - 0x39], ecx ; ret 0xffff
0x00000000004a3efb : sbb dword ptr [rax - 0x7d], ecx ; ret
0x00000000004a9849 : sbb dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x000000000046b475 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; test dword ptr [rax], esi ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0x8c20
0x000000000049d6c1 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049d739 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000044d774 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000004991de : sbb dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000481d44 : sbb dword ptr [rbp + rcx*4 + 0x78], ecx ; add eax, ebp ; ret 0xf9ed
0x0000000000422edb : sbb dword ptr [rbx + 0x2b], edx ; add byte ptr [rdi], cl ; test ebx, edi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000462c91 : sbb dword ptr [rbx - 0x52743], eax ; call qword ptr [rax]
0x00000000004c54bd : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004c2d12 : sbb dword ptr [rcx], ebp ; jb 0x4c2d4d ; pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000467bb0 : sbb dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf
0x0000000000447867 : sbb eax, -1 ; ret
0x00000000004a89a2 : sbb eax, 0x18c48348 ; ret
0x00000000004aff39 : sbb eax, 0x1ec0fff8 ; clc ; call qword ptr [rax]
0x00000000004bf95d : sbb eax, 0x2144fffb ; sti ; jmp rcx
0x00000000004ab9e0 : sbb eax, 0x22e42b ; jne 0x4ab9d0 ; pop rbx ; ret
0x00000000004a3156 : sbb eax, 0x233e ; jne 0x4a3167 ; pop rbx ; ret
0x00000000004c3f13 : sbb eax, 0x30565c9 ; in eax, dx ; retf
0x0000000000405193 : sbb eax, 0x548b4304 ; sbb eax, 0xfc80f00 ; retf 0xc089
0x00000000004c3020 : sbb eax, 0x663cfe49 ; movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x000000000042dfa5 : sbb eax, 0x81b06 ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000042df2b : sbb eax, 0x81b80 ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000042de9c : sbb eax, 0x81c0f ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000042dc91 : sbb eax, 0x81e1a ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000042db5f : sbb eax, 0x81f4c ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000042da99 : sbb eax, 0x82012 ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000042da1b : sbb eax, 0x82090 ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000042d984 : sbb eax, 0x82127 ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000042d788 : sbb eax, 0x82323 ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000042d657 : sbb eax, 0x82454 ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000042d548 : sbb eax, 0x82563 ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000477eb8 : sbb eax, 0x89000002 ; ret 0x348
0x000000000049b36e : sbb eax, 0x894d0000 ; retf
0x000000000046283a : sbb eax, 0x8b480027 ; add al, 0xf8 ; jmp rax
0x0000000000405198 : sbb eax, 0xfc80f00 ; retf 0xc089
0x00000000004159d1 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000045f632 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000049d4e1 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049d559 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000498f8e : sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000408f7a : sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe02], al ; ret 0x1b
0x000000000040839c : sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe07], al ; retf 0x1b
0x00000000004c44dd : sbb eax, dword ptr [rdx + 0x2ff463c7] ; hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00000000004a9d06 : sbb eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000495a2a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x000000000042d2a7 : sbb eax, eax ; or eax, 1 ; ret
0x00000000004a952f : sbb eax, eax ; ret
0x0000000000447865 : sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000481b47 : sbb eax, ebp ; ret
0x00000000004aff31 : sbb eax, edi ; jmp qword ptr [rax]
0x0000000000425821 : sbb ebp, dword ptr [rip + 0xf480002] ; ret 0x66c3
0x00000000004c5028 : sbb ebp, ebx ; retf
0x000000000042df2d : sbb ecx, dword ptr [rax] ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000047cae9 : sbb ecx, dword ptr [rbp + 0x29] ; ret 0x8948
0x00000000004524fe : sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x00000000004051dd : sbb ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000004d22c1 : sbb edi, ebp ; jmp qword ptr [rcx]
0x00000000004d22f5 : sbb edi, ebp ; jmp rsp
0x00000000004c4db9 : sbb edi, ebp ; retf
0x0000000000497631 : sbb edx, ebx ; mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000477f71 : sbb esp, dword ptr [rdx] ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x0000000000497630 : sbb r10, r11 ; mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x00000000004d2224 : sbb r15b, bpl ; jmp qword ptr [rdx]
0x000000000049f97f : scasb al, byte ptr [rdi] ; adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049f67f : scasb al, byte ptr [rdi] ; adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004a057f : scasb al, byte ptr [rdi] ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042c342 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a087f : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000440dde : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x000000000044fc19 : scasb al, byte ptr [rdi] ; call 0x45c6b3
0x00000000004b09cd : scasb al, byte ptr [rdi] ; clc ; jmp qword ptr [rax]
0x000000000044a25e : scasb al, byte ptr [rdi] ; mov edi, ebx ; jmp qword ptr [rsi + 0xf]
0x000000000049ff7f : scasb al, byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000403262 : scasb al, byte ptr [rdi] ; or al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000004c5469 : scasb al, byte ptr [rdi] ; or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x000000000049fc7f : scasb al, byte ptr [rdi] ; or eax, 0x894d0000 ; retf
0x000000000045635e : scasb al, byte ptr [rdi] ; retf 0xfffa
0x0000000000440edd : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004d2e6d : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; and byte ptr [rdi - 3], bh ; call qword ptr [rdx]
0x000000000047f9a2 : scasd eax, dword ptr [rdi] ; and eax, 0x75c08500 ; pop rbp ; mov eax, 0x101 ; syscall
0x0000000000415ace : scasd eax, dword ptr [rdi] ; nop ; xor eax, eax ; ret
0x000000000040f709 : scasd eax, dword ptr [rdi] ; ret
0x000000000045ca4e : scasd eax, dword ptr [rdi] ; ret 0x148
0x0000000000412746 : scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000041ab69 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000000000449753 : scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x0000000000474771 : scasd eax, dword ptr [rdi] ; retf
0x0000000000488abd : scasd eax, dword ptr [rdi] ; retf 0x14c
0x00000000004a354d : scasd eax, dword ptr [rdi] ; retf 0xffb5
0x00000000004c4194 : scasd eax, dword ptr [rdi] ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x00000000004c340f : scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x000000000044d80c : setae al ; ret
0x000000000045c77a : sete dh ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x000000000045c779 : sete sil ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x00000000004a3c85 : setne al ; add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x0000000000419afc : setne al ; neg eax ; ret
0x000000000044eea0 : setne dl ; jmp 0x44ee88
0x0000000000441f84 : shl byte ptr [rax + 0x48], 1 ; clc ; sub rax, rdx ; vzeroupper ; ret
0x000000000042cb8b : shl byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x0000000000441f16 : shl byte ptr [rax], 0x48 ; add eax, edi ; sub rax, rdx ; vzeroupper ; ret
0x000000000042cb4b : shl byte ptr [rax], 0x48 ; add eax, edi ; vzeroupper ; ret
0x00000000004b09b8 : shl byte ptr [rbx - 0x5a2f0008], 0xf8 ; jmp rax
0x00000000004ce2fc : shl byte ptr [rbx], 0 ; jrcxz 0x4ce302 ; call qword ptr [rcx]
0x000000000049aeed : shl byte ptr [rcx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000048cfb6 : shl byte ptr [rdi + rax*8], 0x22 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000045abdc : shl byte ptr [rdi], 0 ; mov rax, qword ptr [rax + rbp*8] ; test rax, rax ; je 0x45abf6 ; call rax
0x00000000004d1a60 : shl byte ptr [rdx - 4], 1 ; jmp qword ptr [rdx]
0x0000000000435b62 : shl byte ptr [rip + 0x3948002a], cl ; retf 0x377
0x0000000000449509 : shl byte ptr [rip + 0x3fffc00], cl ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000447aaf : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x0000000000425b5b : shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x0000000000445e53 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000441605 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000042eabb : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042ead2 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000047d466 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000047d477 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000439f10 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000042e9b1 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004cfb30 : shl cl, 1 ; cli ; jmp qword ptr [rbx]
0x00000000004bba90 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004c3d1d : shl dword ptr [rax - 0x6a5aa279], 1 ; retf 0x33e6
0x0000000000466c17 : shl dword ptr [rax], 0x8c ; insd dword ptr [rdi], dx ; add byte ptr [rax - 0x39], cl ; ret 0x92c8
0x000000000047fd52 : shl dword ptr [rbx], 0x4e ; adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000041e96b : shl dword ptr [rcx], 1 ; retf 0xf989
0x00000000004c427a : shl dword ptr [rdi - 0x3ad6d59f], cl ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000004c4008 : shl dword ptr [rdi - 5], 1 ; ret
0x0000000000447a92 : shl dword ptr [rsi + 0x44], 0xf ; out dx, eax ; retf 0x4466
0x0000000000425b5f : shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000047d462 : shl dword ptr [rsi + 0xf], 0xd7 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000044790b : shl dword ptr [rsi + 0xf], 0xda ; ret
0x000000000042ea36 : shl dword ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042eaed : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042ead6 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042eabf : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042d57b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043e28e : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000042ea51 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042c4dc : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000042e911 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044fb31 : shl eax, cl ; pop rbp ; pop r12 ; ret
0x000000000044fb2d : shl ecx, 3 ; pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x00000000004960fc : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000496087 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000496056 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004a2ac0 : shl edx, 5 ; add rdx, rax ; jmp 0x4a2ad6
0x0000000000489c94 : shl esi, 4 ; cmp rcx, qword ptr [rdi + rsi] ; jae 0x489c4c ; xor eax, eax ; ret
0x0000000000497803 : shl esi, cl ; mov qword ptr [rdi], rsi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000004960fb : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000496086 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000496055 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004a2abf : shl rdx, 5 ; add rdx, rax ; jmp 0x4a2ad7
0x0000000000489c93 : shl rsi, 4 ; cmp rcx, qword ptr [rdi + rsi] ; jae 0x489c4d ; xor eax, eax ; ret
0x000000000044d081 : shr al, 0x99 ; and byte ptr [rbx], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004c35c4 : shr al, cl ; add al, 0x3d ; retf
0x0000000000419037 : shr al, cl ; ret
0x000000000044b75b : shr bl, 0xb4 ; nop ; mov eax, 0x10 ; syscall
0x00000000004aff1c : shr byte ptr [rax], 1 ; clc ; jmp qword ptr [rax]
0x00000000004a835c : shr byte ptr [rbx - 0xa], 1 ; dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x000000000041a51a : shr byte ptr [rbx], cl ; add bl, dh ; ret
0x000000000042720f : shr byte ptr [rcx], 0xc8 ; ret
0x00000000004257ba : shr byte ptr [rcx], cl ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004592f8 : shr byte ptr [rcx], cl ; ret
0x000000000042ce4b : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000004c53c7 : shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x000000000047e2c2 : shr byte ptr [rdx], 0x48 ; lea ecx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x000000000047560e : shr cl, 0x50 ; ret 0xffff
0x0000000000474517 : shr cl, 0xcb ; retf
0x00000000004a8482 : shr cl, 1 ; ret 0xfffe
0x0000000000469c9c : shr cl, cl ; jrcxz 0x469ca8 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x00000000004a7f8f : shr cl, cl ; ret
0x000000000045ae5f : shr cl, cl ; retf
0x00000000004358d9 : shr dword ptr [rax + 0x63490007], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000445e9e : shr dword ptr [rax - 0x267af0e0], 1 ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000044d6f3 : shr dword ptr [rax], cl ; add byte ptr [rdx + 0x64], bh ; test eax, eax ; cmove eax, edx ; ret
0x00000000004355d9 : shr dword ptr [rbx + 0x63490007], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000041aff8 : shr dword ptr [rbx], 1 ; add byte ptr [rax - 0x7d], cl ; retf
0x000000000041a48b : shr dword ptr [rbx], cl ; add byte ptr [rcx + rax + 0x57], al ; sbb byte ptr [rax + 0x39], cl ; ret
0x00000000004352d9 : shr dword ptr [rsi + 0x63490007], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000497977 : shr eax, 0x20 ; mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x000000000044942a : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x000000000047e76b : shr eax, 2 ; ret
0x000000000047ec73 : shr eax, 2 ; vzeroupper ; ret
0x0000000000449475 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000041fffe : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000049620c : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000496191 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000496160 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000047097f : shr ecx, cl ; ret
0x000000000049620b : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000496190 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000049615f : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000497976 : shr rax, 0x20 ; mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x000000000047e76a : shr rax, 2 ; ret
0x000000000047ec72 : shr rax, 2 ; vzeroupper ; ret
0x00000000004bac61 : sldt word ptr [rax] ; mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x00000000004bac69 : sldt word ptr [rax] ; ret
0x00000000004908ab : stc ; adc byte ptr [rbx - 0x7af067fc], cl ; retf 1
0x000000000048d959 : stc ; adc byte ptr [rdi], cl ; test ah, ah ; or byte ptr [rax], al ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00000000004555b8 : stc ; add al, 0x74 ; and eax, 0x833fe283 ; retf 0x4180
0x000000000047dd66 : stc ; add byte ptr [rax + rax], cl ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x000000000042c2f7 : stc ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000455c80 : stc ; add dword ptr [rdi], ecx ; xchg byte ptr [rdi], dl ; or eax, 0xea810000 ; ret 0
0x000000000042f5f3 : stc ; add eax, 0x63490008 ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004790a7 : stc ; add eax, eax ; cmp eax, r9d ; jg 0x4790cc ; add eax, edi ; mov rdx, r8 ; jmp 0x47908b
0x00000000004b0ac2 : stc ; call qword ptr [rax]
0x00000000004b201e : stc ; call qword ptr [rdi]
0x00000000004ce7ce : stc ; call qword ptr [rsi]
0x00000000004b0ab2 : stc ; call rax
0x00000000004b2002 : stc ; call rbx
0x00000000004b11aa : stc ; call rdx
0x00000000004b0c7e : stc ; call rsi
0x00000000004b0a7d : stc ; clc ; inc dword ptr [rax - 0x2f000706] ; sti ; clc ; jmp qword ptr [rax]
0x0000000000464c5e : stc ; dec dword ptr [rax + 0x29] ; ret
0x00000000004b1a4e : stc ; dec dword ptr [rax - 0x36] ; stc ; jmp qword ptr [rax]
0x000000000046a415 : stc ; dec dword ptr [rax - 0x39] ; ret 0xffa0
0x0000000000463b09 : stc ; dec dword ptr [rax - 0x73] ; jo 0x463b1b ; mov rdi, r12 ; call 0x47fd6b
0x00000000004897f0 : stc ; dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000047bb77 : stc ; dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x00000000004b2036 : stc ; dec dword ptr [rdi + rcx*8 - 0x2d360007] ; stc ; call qword ptr [rax]
0x00000000004b201a : stc ; dec dword ptr [rdi - 0x2e] ; stc ; call qword ptr [rdi]
0x00000000004b11da : stc ; dec eax ; xchg eax, ebp ; stc ; jmp qword ptr [rdx]
0x00000000004b203a : stc ; dec ecx ; sar cl, cl ; call qword ptr [rax]
0x00000000004323b3 : stc ; fld dword ptr [rdi] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004b2016 : stc ; inc dword ptr [rax + 0x4ffff9d4] ; sar cl, cl ; call qword ptr [rdi]
0x00000000004b0c32 : stc ; inc dword ptr [rax - 0x67000678] ; mov cl, bh ; call rax
0x00000000004b0b52 : stc ; inc dword ptr [rax] ; push rax ; stc ; jmp qword ptr [rax]
0x00000000004b0b76 : stc ; inc dword ptr [rax] ; push rcx ; stc ; jmp qword ptr [rax]
0x00000000004b0b96 : stc ; inc dword ptr [rax] ; push rdx ; stc ; jmp qword ptr [rax]
0x00000000004b1a56 : stc ; inc dword ptr [rax] ; retf 0xfff9
0x00000000004b0abe : stc ; inc dword ptr [rax] ; stc ; call qword ptr [rax]
0x000000000046c25b : stc ; inc dword ptr [rbx + rcx*4 - 0x63] ; idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000004b1376 : stc ; inc dword ptr [rcx - 0x500066b] ; xchg eax, ebp ; stc ; jmp rsi
0x00000000004b11a2 : stc ; inc dword ptr [rcx - 0x7e00066b] ; xchg eax, ebp ; stc ; call rdx
0x00000000004b0b6a : stc ; inc eax ; push rax ; stc ; call rax
0x00000000004b0b8e : stc ; inc eax ; push rcx ; stc ; jmp rax
0x00000000004b0aee : stc ; inc eax ; stc ; call rax
0x000000000043fe92 : stc ; je 0x43fe5e ; lea r10, [r10 + r9] ; jmp r10
0x000000000049f1c2 : stc ; je 0x49f18e ; lea r10, [r10 + r9] ; jmp r10
0x00000000004b0ac6 : stc ; jmp qword ptr [rax]
0x00000000004b11de : stc ; jmp qword ptr [rdx]
0x00000000004abeb0 : stc ; jmp qword ptr [rsi + 0xf]
0x00000000004b0ab6 : stc ; jmp rax
0x00000000004b1fe6 : stc ; jmp rdx
0x00000000004b10ca : stc ; jmp rsi
0x00000000004c3e84 : stc ; jnp 0x4c3e43 ; ret
0x00000000004b121a : stc ; lcall [rax + 0x6afff996] ; xchg eax, esi ; stc ; jmp qword ptr [rdx]
0x00000000004b1fde : stc ; lcall [rdi - 0x2f] ; stc ; ljmp [rdx] ; sar ecx, 1 ; jmp rdx
0x00000000004b0c76 : stc ; ljmp [rax + rcx*4 - 0x77760007] ; stc ; call rsi
0x00000000004b121e : stc ; ljmp [rdx - 0x6a] ; stc ; jmp qword ptr [rdx]
0x00000000004b1fe2 : stc ; ljmp [rdx] ; sar ecx, 1 ; jmp rdx
0x0000000000431398 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431392 : stc ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004563c6 : stc ; or byte ptr [rdi], 0x85 ; rol dword ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042aa17 : stc ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004b1a3a : stc ; push qword ptr [rax + rcx*8] ; stc ; call rax
0x00000000004b1a36 : stc ; push qword ptr [rax + rcx*8] ; stc ; push qword ptr [rax + rcx*8] ; stc ; call rax
0x00000000004b1a22 : stc ; push qword ptr [rax + rcx*8] ; stc ; push rax ; retf 0xfff9
0x00000000004b0b42 : stc ; push qword ptr [rax - 0x2f0006b1] ; stc ; jmp rax
0x00000000004b1a4a : stc ; push qword ptr [rax - 0x36] ; stc ; dec dword ptr [rax - 0x36] ; stc ; jmp qword ptr [rax]
0x00000000004b0aea : stc ; push qword ptr [rax - 0x3f0006b6] ; stc ; call rax
0x00000000004b1a42 : stc ; push qword ptr [rax - 0x6f000636] ; retf 0xfff9
0x00000000004b0aaa : stc ; push qword ptr [rax] ; hlt ; clc ; inc eax ; stc ; call rax
0x00000000004b12aa : stc ; push qword ptr [rbp + rdx*4 - 0x6a050007] ; stc ; jmp rsi
0x00000000004b10c6 : stc ; push qword ptr [rsi - 0x69] ; stc ; jmp rsi
0x00000000004b1a26 : stc ; push rax ; retf 0xfff9
0x00000000004b0b1a : stc ; push rax ; stc ; call qword ptr [rax]
0x00000000004b0b4e : stc ; push rax ; stc ; inc dword ptr [rax] ; push rax ; stc ; jmp qword ptr [rax]
0x00000000004b0aba : stc ; push rax ; stc ; inc dword ptr [rax] ; stc ; call qword ptr [rax]
0x000000000041ac83 : stc ; retf
0x000000000044fb2c : stc ; shl ecx, 3 ; pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x000000000041a547 : stc ; sub eax, dword ptr [rax] ; ret
0x0000000000439cb4 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000042d327 : stc ; xlatb ; ret 0xff2d
0x0000000000403a56 : std ; add al, 0x48 ; add esi, dword ptr [rbp - 0x68] ; call 0x4004b8
0x00000000004c79f2 : std ; call qword ptr [rax]
0x00000000004d2aea : std ; call qword ptr [rbx]
0x00000000004d257a : std ; call qword ptr [rdx]
0x00000000004c7a76 : std ; call rax
0x00000000004c7a7a : std ; call rcx
0x00000000004ce4b2 : std ; call rdx
0x000000000048c90a : std ; cld ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x00000000004a5ce6 : std ; dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000044b57e : std ; dec dword ptr [rax - 0x77] ; ret
0x000000000046b422 : std ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000425352 : std ; dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x00000000004ca6e1 : std ; hlt ; call qword ptr [rsi]
0x000000000048bdbe : std ; jbe 0x48bdcc ; ret
0x00000000004d3052 : std ; jmp qword ptr [rax]
0x00000000004d22c2 : std ; jmp qword ptr [rcx]
0x00000000004cdfba : std ; jmp qword ptr [rdi]
0x00000000004cd6da : std ; jmp qword ptr [rdx]
0x00000000004c79d2 : std ; jmp rax
0x00000000004d22f6 : std ; jmp rsp
0x00000000004c79ea : std ; lcall [rax - 0x2700020d] ; std ; call qword ptr [rax]
0x0000000000430bbb : std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000412d9a : std ; or dh, byte ptr [rdx + rbp*2 + 0x48] ; add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000040e57b : std ; or dword ptr [rax], eax ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x00000000004c7cb2 : std ; push qword ptr [rax] ; add dh, bh ; call rcx
0x00000000004c7a72 : std ; push rax ; idiv ch ; call rax
0x000000000044c5be : std ; push rbx ; ret
0x0000000000448213 : std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000004c4dba : std ; retf
0x000000000044abf3 : std ; sub byte ptr [rax], al ; test eax, eax ; jne 0x44ac1c ; mov eax, 1 ; syscall
0x0000000000448c41 : std ; vmovdqu64 zmmword ptr [r11], zmm4 ; vzeroupper ; ret
0x0000000000448b2a : std ; vmovdqu64 zmmword ptr [rdi + rdx - 0x100], zmm7 ; vzeroupper ; ret
0x000000000042cbf1 : std ; xlatb ; ret
0x000000000042cbe9 : std ; xlatb ; ret 0xc085
0x000000000042d163 : std ; xlatb ; ret 0xe883
0x000000000047d741 : std ; xlatb ; retf 0xc985
0x000000000047d614 : std ; xlatb ; retf 0xfdc5
0x000000000047d674 : std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000042cb1e : std ; xlatb ; rol dword ptr [rbp + 0x311b75c0], 0xc0 ; vzeroupper ; ret
0x000000000042cbe1 : std ; xlatb ; rol dword ptr [rbp - 0x3a378a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000441a31 : std ; xlatb ; rol dword ptr [rbp - 0x3a678a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000422ee1 : sti ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000412823 : sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x00000000004bfa32 : sti ; call qword ptr [rax]
0x00000000004d12a6 : sti ; call qword ptr [rdx]
0x00000000004d0dae : sti ; call rdx
0x00000000004bfc76 : sti ; call rsp
0x00000000004b0a85 : sti ; clc ; jmp qword ptr [rax]
0x000000000044a39f : sti ; dec dword ptr [rax - 0x77] ; ret
0x00000000004ca569 : sti ; hlt ; call qword ptr [rsi]
0x00000000004bf95e : sti ; inc dword ptr [rcx - 5] ; jmp rcx
0x00000000004bf95a : sti ; inc dword ptr [rdx + 0x44fffb1d] ; and ebx, edi ; jmp rcx
0x0000000000449485 : sti ; ja 0x449496 ; add cl, al ; call 0xffffffff84071da3
0x00000000004bfa2a : sti ; jmp qword ptr [rax]
0x00000000004d0d9a : sti ; jmp qword ptr [rcx]
0x00000000004bf786 : sti ; jmp qword ptr [rdi]
0x000000000044a260 : sti ; jmp qword ptr [rsi + 0xf]
0x00000000004d0e7a : sti ; jmp qword ptr [rsi]
0x00000000004bf8d2 : sti ; jmp rcx
0x00000000004bfc72 : sti ; lcall [rdx + rdx*4] ; sti ; call rsp
0x0000000000430f98 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430f92 : sti ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004bf8ce : sti ; push qword ptr [rcx] ; sub bh, bl ; jmp rcx
0x00000000004bf8ca : sti ; push qword ptr [rcx] ; sub bh, bl ; push qword ptr [rcx] ; sub bh, bl ; jmp rcx
0x00000000004ae15c : sti ; push rcx ; cmc ; jmp rcx
0x00000000004c400a : sti ; ret
0x000000000041b499 : sti ; ret 0x2b
0x0000000000492da8 : sti ; ret 0xffbf
0x00000000004c5461 : sti ; ror bh, cl ; mov ecx, dword ptr [rsi + rdi*2 + 0xaaed8a9] ; jne 0x4c549c ; retf 0x32dd
0x000000000045bfe7 : sti ; test rax, rax ; je 0x45bff5 ; call rax
0x00000000004c44e4 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x000000000046365c : stosb byte ptr [rdi], al ; mov ebx, 0xb9e90005 ; out 0xff, eax ; dec dword ptr [rbp + 0x63] ; ret 0x20be
0x0000000000448f3b : stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000004a68e3 : stosb byte ptr [rdi], al ; or byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; add al, 0x87 ; add rax, r15 ; jmp rax
0x000000000044d74c : stosb byte ptr [rdi], al ; sub byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004c44db : stosb byte ptr [rdi], al ; xchg eax, esi ; sbb eax, dword ptr [rdx + 0x2ff463c7] ; hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00000000004d2ae5 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; cmp byte ptr [rdx - 3], ch ; call qword ptr [rbx]
0x00000000004256d1 : stosd dword ptr [rdi], eax ; and dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000047d974 : stosd dword ptr [rdi], eax ; fimul dword ptr [rax + 0xf] ; mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x000000000048a038 : stosd dword ptr [rdi], eax ; loope 0x48a065 ; add byte ptr [rcx], al ; pop rbx ; ret
0x000000000046a0de : stosd dword ptr [rdi], eax ; mov eax, 1 ; ret
0x00000000004c3409 : stosd dword ptr [rdi], eax ; mov esi, 0x6a25743d ; scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x0000000000420003 : stosd dword ptr [rdi], eax ; pop rbx ; ret
0x00000000004c55ec : stosd dword ptr [rdi], eax ; ret
0x00000000004c54ea : stosd dword ptr [rdi], eax ; retf 0xa2fe
0x0000000000425981 : stosd dword ptr [rdi], eax ; sub eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000420002 : stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004c59d1 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004cc63c : sub al, 0 ; add byte ptr [rax], al ; add al, 0x47 ; add byte ptr [rax], al ; fcom st(0), st(4) ; idiv edi ; retf
0x0000000000419a80 : sub al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004d1690 : sub al, 0 ; add byte ptr [rax], al ; pop rax ; xchg eax, edi ; add byte ptr [rax], al ; or byte ptr [rcx - 4], al ; call rdi
0x00000000004d17a0 : sub al, 0 ; add byte ptr [rax], al ; push 0x78000098 ; cld ; jmp qword ptr [rcx]
0x0000000000413bc5 : sub al, 0 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x00000000004cab41 : sub al, 0 ; add byte ptr [rsp + rbx - 0xb], bl ; call qword ptr [rax]
0x0000000000419a16 : sub al, 0 ; add dword ptr [rip + 0x2c0415], 1 ; ret
0x0000000000417560 : sub al, 0 ; jne 0x417578 ; jmp 0x417592
0x000000000047d2d2 : sub al, 0x24 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047c09b : sub al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000048c0b6 : sub al, 0x48 ; add esp, 0x38 ; ret
0x00000000004cd268 : sub al, 0x53 ; add byte ptr [rax], al ; push rsp ; sbb al, 0xf8 ; jmp qword ptr [rdx]
0x0000000000449172 : sub al, 0x72 ; add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x000000000044ee88 : sub al, 0x7c ; sub byte ptr [rax], al ; pop rbx ; ret
0x000000000044df80 : sub al, 0x85 ; ror byte ptr [rdi], 0x84 ; retf 0
0x0000000000477903 : sub al, 0x89 ; ret 0x348
0x00000000004b052c : sub al, 0x8c ; clc ; call rdx
0x000000000042e103 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004645ba : sub al, 0xac ; add eax, 0x3d8d4800 ; retf
0x00000000004aff29 : sub al, 0xf8 ; call qword ptr [rax]
0x00000000004bf785 : sub al, 0xfb ; jmp qword ptr [rdi]
0x000000000047d3e0 : sub al, 1 ; add byte ptr [rax], al ; bsr rsi, rsi ; lea rax, [rdi + rsi] ; ret
0x00000000004cd351 : sub al, bh ; call qword ptr [rax]
0x00000000004aff1d : sub al, bh ; jmp qword ptr [rax]
0x0000000000461b5d : sub al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000042577a : sub al, byte ptr [rdx] ; add bh, dh ; ret 0
0x0000000000425ac2 : sub al, byte ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000494357 : sub al, ch ; ret
0x000000000042d4c5 : sub al, ch ; std ; xlatb ; ret
0x00000000004b0a54 : sub bh, 0xf8 ; jmp qword ptr [rax]
0x00000000004aff61 : sub bh, al ; jmp rax
0x00000000004aff21 : sub bh, al ; push qword ptr [rax + 0x2b] ; clc ; inc eax ; sub al, 0xf8 ; call qword ptr [rax]
0x00000000004c7cc4 : sub bh, bh ; std ; call rcx
0x00000000004bf959 : sub bh, bl ; inc dword ptr [rdx + 0x44fffb1d] ; and ebx, edi ; jmp rcx
0x00000000004bf8d1 : sub bh, bl ; jmp rcx
0x00000000004bf8cd : sub bh, bl ; push qword ptr [rcx] ; sub bh, bl ; jmp rcx
0x00000000004bf8c9 : sub bh, bl ; push qword ptr [rcx] ; sub bh, bl ; push qword ptr [rcx] ; sub bh, bl ; jmp rcx
0x00000000004ce2d8 : sub bl, ah ; clc ; call qword ptr [rcx]
0x00000000004b0370 : sub bl, byte ptr [rbx - 8] ; call rax
0x00000000004650bb : sub bl, cl ; in eax, 0xdf ; loopne 0x465050 ; ret
0x00000000004c79e8 : sub bl, dh ; std ; lcall [rax - 0x2700020d] ; std ; call qword ptr [rax]
0x000000000048158c : sub byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000041735c : sub byte ptr [rax + 0x39], cl ; retf
0x000000000048158b : sub byte ptr [rax + 0x39], r9b ; ret 0x870f
0x0000000000496bf3 : sub byte ptr [rax + 1], cl ; ret 0x1474
0x000000000041755f : sub byte ptr [rax + rax], ch ; jne 0x417579 ; jmp 0x417593
0x0000000000459d4b : sub byte ptr [rax - 0x3f], cl ; retf
0x00000000004582f8 : sub byte ptr [rax - 0x73], cl ; add al, 0xf ; mov dh, 0x40 ; add ecx, dword ptr [rax + 0x39] ; retf
0x0000000000452f02 : sub byte ptr [rax - 0x75], cl ; je 0x452f36 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00000000004539ac : sub byte ptr [rax - 0x75], cl ; je 0x4539e1 ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x0000000000453f33 : sub byte ptr [rax - 0x75], cl ; je 0x453f68 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000004578df : sub byte ptr [rax - 0x75], cl ; je 0x457913 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000458b1f : sub byte ptr [rax - 0x75], cl ; je 0x458b53 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000004527ee : sub byte ptr [rax - 0x75], cl ; jl 0x452822 ; and byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000423bb4 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000047ba66 : sub byte ptr [rax - 0x77], cl ; push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000004a7a8c : sub byte ptr [rax - 0x77], cl ; ret
0x0000000000479704 : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000405d23 : sub byte ptr [rax - 0x7d], cl ; ret
0x0000000000471423 : sub byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000040eb39 : sub byte ptr [rax - 0x7d], cl ; retf 0x4805
0x000000000040eba4 : sub byte ptr [rax - 0x7d], cl ; retf 0x4806
0x000000000040ec59 : sub byte ptr [rax - 0x7d], cl ; retf 0x480d
0x000000000040ebd6 : sub byte ptr [rax - 0x7d], cl ; retf 0xe903
0x000000000040eb8f : sub byte ptr [rax - 0x7d], cl ; retf 0xeb04
0x000000000040ebee : sub byte ptr [rax - 0x7d], cl ; retf 0xeb07
0x000000000040ec8f : sub byte ptr [rax - 0x7d], cl ; retf 0xeb0c
0x00000000004d1a58 : sub byte ptr [rax], al ; add byte ptr [rax], al ; and byte ptr [rbx + 0x62d00000], bl ; cld ; jmp qword ptr [rdx]
0x0000000000417704 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x417760 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000449aeb : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x449b1f ; add rsp, 0x20 ; pop rbx ; ret
0x000000000044a8a3 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x44a8c3 ; add rsp, 0x28 ; ret
0x000000000044aad3 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x44ab25 ; add rsp, 0x58 ; ret
0x000000000044ae63 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x44aebd ; add rsp, 0x68 ; ret
0x000000000044b802 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x44b821 ; add rsp, 0x28 ; ret
0x000000000045c6eb : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x45c700 ; add rsp, 0x18 ; ret
0x000000000047fad8 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x47fb2d ; add rsp, 0x58 ; ret
0x000000000047fc0a : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x47fc35 ; add rsp, 0x38 ; ret
0x000000000048bfb6 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x48bfcd ; add rsp, 0x20 ; pop rbx ; ret
0x000000000048c0b1 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x48c0ed ; add rsp, 0x38 ; ret
0x000000000048c171 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x48c1a8 ; add rsp, 0x68 ; ret
0x000000000048c2d2 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x48c318 ; add rsp, 0x78 ; ret
0x000000000048c5a1 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x48c5d8 ; add rsp, 0x68 ; ret
0x000000000049574e : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x495799 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004957fe : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x49587e ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004958dc : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x495948 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000049758d : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x4975d5 ; leave ; ret
0x00000000004982d9 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x4982ee ; add rsp, 0x38 ; ret
0x00000000004983bc : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x4983de ; add rsp, 0x38 ; ret
0x00000000004a3c37 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x4a3c56 ; add rsp, 0x38 ; ret
0x00000000004ce4a8 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jo 0x4ce51e ; add byte ptr [rax], al ; xor dl, ah ; std ; call rdx
0x0000000000461c3a : sub byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000046d656 : sub byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000044eca7 : sub byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044d74d : sub byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044fc16 : sub byte ptr [rax], al ; je 0x44fbce ; call 0x45c6b6
0x000000000045119a : sub byte ptr [rax], al ; jne 0x4511b0 ; jmp 0x4511ca
0x000000000044d6f4 : sub byte ptr [rax], al ; mov edx, 0x64 ; test eax, eax ; cmove eax, edx ; ret
0x000000000044e336 : sub byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000044ee8a : sub byte ptr [rax], al ; pop rbx ; ret
0x000000000044ee55 : sub byte ptr [rax], al ; ret
0x000000000044ee64 : sub byte ptr [rax], al ; test eax, eax ; je 0x44ee77 ; ret
0x000000000044ab24 : sub byte ptr [rax], al ; test eax, eax ; jne 0x44ab48 ; xor eax, eax ; syscall
0x000000000044abf4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x44ac1b ; mov eax, 1 ; syscall
0x000000000044ad31 : sub byte ptr [rax], al ; test eax, eax ; jne 0x44ada3 ; mov eax, 0x48 ; syscall
0x000000000044aec4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x44aeeb ; mov eax, 3 ; syscall
0x000000000044b795 : sub byte ptr [rax], al ; test rax, rax ; je 0x44b7a6 ; ret
0x00000000004aa8e2 : sub byte ptr [rbp + 1], cl ; retf
0x00000000004aae81 : sub byte ptr [rbx + 0x22f64005], cl ; add byte ptr [rbp - 0xcfb8b40], al ; ret
0x00000000004aad71 : sub byte ptr [rbx + 0x22f75005], cl ; add byte ptr [rbp - 0xcfb8b40], al ; ret
0x0000000000402b95 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000449f34 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000470372 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000495757 : sub byte ptr [rbx + 0x5d], bl ; ret
0x00000000004a3a53 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x00000000004a3a52 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x000000000041beec : sub byte ptr [rcx + 0x148002b], bh ; ret
0x000000000048ca36 : sub byte ptr [rcx - 0x3b76b310], cl ; mov rbp, r9 ; nop ; jmp rdx
0x000000000040524b : sub byte ptr [rcx - 0x75], al ; push rdi ; or al, 0xf ; retf 0xd289
0x000000000040527f : sub byte ptr [rcx - 0x75], al ; push rdi ; sbb byte ptr [rdi], cl ; retf 0xd289
0x000000000044daac : sub byte ptr [rcx], al ; ret
0x00000000004229d6 : sub byte ptr [rdi], cl ; test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004258da : sub byte ptr [rdx], al ; add bh, dh ; ret 0
0x000000000042591b : sub byte ptr [rdx], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000469b06 : sub cl, bpl ; ret 0xffe8
0x000000000040fe6d : sub cl, byte ptr [rax - 0x77] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000469b07 : sub cl, ch ; ret 0xffe8
0x000000000045fbb4 : sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000044c935 : sub dh, al ; add byte ptr [rdx], cl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000472158 : sub dh, byte ptr [rbp - 0x68] ; mov rdx, rax ; jmp 0x472112
0x00000000004b1fe4 : sub dl, cl ; stc ; jmp rdx
0x000000000048a3ea : sub dl, dh ; call r11
0x000000000047fabe : sub dword ptr [rax + 0x101], edi ; syscall
0x00000000004c438d : sub dword ptr [rax + 0x1e], eax ; cli ; test bh, dl ; retf 0xdf7f
0x000000000044af07 : sub dword ptr [rax], eax ; add byte ptr [rbx + 0x480c2444], cl ; add esp, 0x10 ; pop rbx ; ret
0x000000000044aee9 : sub dword ptr [rax], eax ; add byte ptr [rcx - 0x473d7621], cl ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000046d442 : sub dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x00000000004c5022 : sub dword ptr [rbx + 0x5c347ebb], edx ; sbb ebp, ebx ; retf
0x000000000042f1e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42f1fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f337 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42f34d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f487 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42f49d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f5d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42f5ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f727 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42f73d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f877 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42f88d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f9c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42f9dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042fb17 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42fb2d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042fc67 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42fc7d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042fdb7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42fdcd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ff07 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42ff1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430057 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43006d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004301a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4301bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004302f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43030d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430447 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43045d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431bb7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x431bcd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431d07 : sub dword ptr [rdi + 0x10], ebx ; jb 0x431d1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431e57 : sub dword ptr [rdi + 0x10], ebx ; jb 0x431e6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431fa7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x431fbd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004320f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43210d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000432247 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43225d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000432397 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4323ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004324e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4324fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000432637 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43264d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000432787 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43279d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004328d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4328ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000432a27 : sub dword ptr [rdi + 0x10], ebx ; jb 0x432a3d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000432b77 : sub dword ptr [rdi + 0x10], ebx ; jb 0x432b8d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000432cc7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x432cdd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000432e17 : sub dword ptr [rdi + 0x10], ebx ; jb 0x432e2d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f143 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f13f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000478636 : sub dword ptr [rdi], ecx ; mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000004c4e9a : sub dword ptr [rdi], ecx ; push rbx ; xchg eax, edx ; jae 0x4c4e7d ; push rsi ; pop rdx ; je 0x4c4e72 ; ret 0xacfc
0x000000000042f1ed : sub dword ptr [rdi], esp ; jmp r9
0x00000000004c2d13 : sub dword ptr [rdx + 0x2b], esi ; pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004ae14c : sub dword ptr [rdx - 0xb], edx ; jmp qword ptr [rax]
0x00000000004257bb : sub dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000040116d : sub dword ptr [rip + 0xd51e800], 0x5d900000 ; ret
0x000000000042b6c7 : sub dword ptr [rip - 0x76b30000], ecx ; retf
0x000000000042e8e6 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000042b581 : sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x00000000004c58da : sub dword ptr [rsi], 0x76 ; retf
0x000000000045deb3 : sub dword ptr [rsi], esp ; cli ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x000000000040ee9d : sub dword ptr [rsp + 0xf0], eax ; syscall
0x000000000042d257 : sub eax, -1 ; jne 0x42d268 ; vzeroupper ; ret
0x000000000042d49c : sub eax, -1 ; jne 0x42d26c ; vzeroupper ; ret
0x000000000042412a : sub eax, 0x10 ; ret
0x0000000000402330 : sub eax, 0x34840f00 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x00000000004627ef : sub eax, 0x48002723 ; mov eax, dword ptr [rax + rdi*8] ; jmp rax
0x0000000000400bfe : sub eax, 0x5d5e800 ; add byte ptr [rax], al ; nop ; pop rbp ; ret
0x00000000004020ed : sub eax, 0x810c7400 ; retf 0x440
0x000000000046afb4 : sub eax, 0x83000000 ; ret
0x0000000000468385 : sub eax, 0x83000000 ; ret 0x8b01
0x0000000000404b5d : sub eax, 0x89480000 ; ret
0x00000000004c5c5a : sub eax, 0x8acc8c6 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000049f30f : sub eax, 0x8b00014c ; add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000400b2a : sub eax, 0xc35d0100 ; nop ; ret
0x00000000004020af : sub eax, 0xc4814800 ; mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000040116e : sub eax, 0xd51e800 ; add byte ptr [rax], al ; nop ; pop rbp ; ret
0x00000000004020e6 : sub eax, 0xd892000 ; pop rbp ; jle 0x402127 ; add byte ptr [rsp + rcx - 0x7f], dh ; retf 0x440
0x00000000004c3026 : sub eax, 0xea4ca798 ; retf
0x0000000000404eb0 : sub eax, 0xeb0b7500 ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; ret
0x0000000000425822 : sub eax, 0xf480002 ; ret 0x66c3
0x00000000004004e4 : sub eax, 0xff906600 ; and eax, 0x2d6be2 ; nop ; ret
0x000000000042d34f : sub eax, 0xffff ; jne 0x42d26b ; ret
0x000000000045a1e4 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000447ce4 : sub eax, 1 ; ret
0x000000000048be06 : sub eax, dword ptr [0] ; ret
0x00000000004a0c56 : sub eax, dword ptr [r8 + r9*4] ; je 0x4a0c3f ; ret
0x00000000004a0c57 : sub eax, dword ptr [rax + rcx*4] ; je 0x4a0c3e ; ret
0x000000000041a9d4 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042579c : sub eax, dword ptr [rax] ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x000000000041a528 : sub eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov dword ptr [rip + 0x2bd2d8], eax ; ret
0x000000000041b436 : sub eax, dword ptr [rax] ; add rsp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000422b5d : sub eax, dword ptr [rax] ; add rsp, 0x20 ; call 0x41133c
0x0000000000419985 : sub eax, dword ptr [rax] ; ret
0x0000000000402ebf : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045fb56 : sub eax, dword ptr [rcx + 0xf] ; mov dh, 0x47 ; or al, 0x83 ; ret
0x0000000000470344 : sub eax, dword ptr [rdi + 0x10] ; lea rdi, [rdi + 0x10] ; mov r12, rax ; call 0x47c56c
0x000000000041a33e : sub eax, dword ptr [rdi + 0x18] ; ret
0x0000000000449a0a : sub eax, dword ptr [rdx + rcx*4] ; je 0x4499f6 ; ret
0x0000000000425982 : sub eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000419653 : sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000447e4d : sub eax, eax ; cmp eax, ecx ; jle 0x447e91 ; movsxd rax, ecx ; ret
0x000000000048b254 : sub eax, eax ; ret
0x00000000004a3f1a : sub eax, ebp ; pop rbx ; sar rax, 3 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000042d2a3 : sub eax, ecx ; je 0x42d2b9 ; sbb eax, eax ; or eax, 1 ; ret
0x0000000000418d29 : sub eax, ecx ; lea eax, [r8 - 1] ; ret
0x0000000000497880 : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000426f4c : sub eax, ecx ; ret
0x000000000047bc49 : sub eax, ecx ; sar r8, 2 ; lea eax, [r8 - 1] ; ret
0x00000000004aff5d : sub eax, edi ; call qword ptr [rax - 0x1f0007d6]
0x0000000000441df9 : sub eax, edi ; ret
0x000000000047e87e : sub eax, edi ; shr rax, 2 ; ret
0x0000000000497a23 : sub eax, edx ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x000000000041967b : sub eax, edx ; ret
0x000000000047ec70 : sub eax, edx ; shr rax, 2 ; vzeroupper ; ret
0x000000000042d26c : sub eax, edx ; vzeroupper ; ret
0x0000000000447ead : sub eax, esi ; ret
0x0000000000497a22 : sub eax, r10d ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x0000000000447e4c : sub eax, r8d ; cmp eax, ecx ; jle 0x447e92 ; movsxd rax, ecx ; ret
0x000000000048b253 : sub eax, r8d ; ret
0x00000000004c427e : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x0000000000415070 : sub ebp, eax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004661ef : sub ebp, ecx ; retf
0x0000000000413c46 : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004c2d15 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004bf8e5 : sub ebx, edi ; jmp rcx
0x000000000044e918 : sub ecx, dword ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x8902
0x000000000047efc4 : sub ecx, dword ptr [rcx + rcx*4 - 0x40] ; shr rax, 2 ; vzeroupper ; ret
0x000000000047dbc4 : sub ecx, dword ptr [rcx + rcx*4 - 0x40] ; vzeroupper ; ret
0x000000000044fb2b : sub ecx, edi ; shl ecx, 3 ; pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x00000000004977c6 : sub edi, eax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000004aff25 : sub edi, eax ; inc eax ; sub al, 0xf8 ; call qword ptr [rax]
0x0000000000419680 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000419675 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000047bd4b : sub edx, dword ptr [rcx + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sar rdx, 2 ; sub eax, edx ; ret
0x000000000047bd61 : sub edx, dword ptr [rcx + 8] ; mov eax, dword ptr [rdi + 0x10] ; sar rdx, 2 ; sub eax, edx ; ret
0x000000000042c6f4 : sub edx, eax ; jbe 0x42c737 ; add rax, rdi ; ret
0x000000000042c704 : sub edx, eax ; jbe 0x42c739 ; lea rax, [rdi + rax + 0x10] ; ret
0x000000000042c714 : sub edx, eax ; jbe 0x42c739 ; lea rax, [rdi + rax + 0x20] ; ret
0x000000000042c724 : sub edx, eax ; jbe 0x42c739 ; lea rax, [rdi + rax + 0x30] ; ret
0x0000000000424b21 : sub edx, esi ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x00000000004123bb : sub edx, esi ; mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x000000000041461f : sub edx, esi ; mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x0000000000445a01 : sub esi, dword ptr [rcx + 0x63490006] ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000004a60a3 : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000489da6 : sub esp, 0x1000 ; mov rbx, rsp ; mov rsi, rbx ; syscall
0x000000000044e567 : sub esp, 0x18 ; call 0x489d9b
0x0000000000420d60 : sub esp, 0x80 ; call 0x44d818
0x0000000000420da4 : sub esp, 0x80 ; call 0x44d848
0x00000000004039b5 : sub esp, 1 ; mov r14, r13 ; call 0x4004b8
0x00000000004add61 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000047f713 : sub esp, 8 ; syscall
0x0000000000424af1 : sub esp, dword ptr [rdi] ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000004ab9e1 : sub esp, esp ; and al, byte ptr [rax] ; jne 0x4ab9cf ; pop rbx ; ret
0x00000000004039b4 : sub r12, 1 ; mov r14, r13 ; call 0x4004b9
0x0000000000418d28 : sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x000000000047bc48 : sub r8, rcx ; sar r8, 2 ; lea eax, [r8 - 1] ; ret
0x000000000042579b : sub r8d, dword ptr [r8] ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004258fb : sub r8d, dword ptr [rax] ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x0000000000404eaf : sub rax, -0x14f48b00 ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; ret
0x0000000000424129 : sub rax, 0x10 ; ret
0x0000000000447ce3 : sub rax, 1 ; ret
0x000000000048be05 : sub rax, qword ptr [0] ; ret
0x000000000041a33d : sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000048be04 : sub rax, qword ptr fs:[0] ; ret
0x00000000004a0bb2 : sub rax, r8 ; ret
0x000000000042d2a2 : sub rax, rcx ; je 0x42d2ba ; sbb eax, eax ; or eax, 1 ; ret
0x0000000000441df8 : sub rax, rdi ; ret
0x000000000047e87d : sub rax, rdi ; shr rax, 2 ; ret
0x0000000000447db3 : sub rax, rdx ; ret
0x000000000047ec6f : sub rax, rdx ; shr rax, 2 ; vzeroupper ; ret
0x0000000000441e4f : sub rax, rdx ; vzeroupper ; ret
0x0000000000447eac : sub rax, rsi ; ret
0x000000000041506f : sub rbp, rax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042c6f3 : sub rdx, rax ; jbe 0x42c738 ; add rax, rdi ; ret
0x000000000042c703 : sub rdx, rax ; jbe 0x42c73a ; lea rax, [rdi + rax + 0x10] ; ret
0x000000000042c713 : sub rdx, rax ; jbe 0x42c73a ; lea rax, [rdi + rax + 0x20] ; ret
0x000000000042c723 : sub rdx, rax ; jbe 0x42c73a ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000004123ba : sub rdx, rsi ; mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x000000000041461e : sub rdx, rsi ; mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x00000000004a60a2 : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044e566 : sub rsp, 0x18 ; call 0x489d9c
0x0000000000420d5f : sub rsp, 0x80 ; call 0x44d819
0x0000000000420da3 : sub rsp, 0x80 ; call 0x44d849
0x00000000004add60 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000047f712 : sub rsp, 8 ; syscall
0x00000000004858cf : syscall
0x000000000048d95c : test ah, ah ; or byte ptr [rax], al ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000049dd88 : test ah, dh ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049ec88 : test ah, dh ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049dba8 : test ah, dl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049eaa8 : test ah, dl ; add eax, 0x894d0000 ; retf
0x0000000000418594 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000415501 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047f815 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004a6833 : test al, 0 ; add byte ptr [rax], al ; ret
0x000000000047b947 : test al, 0x28 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000445fc4 : test al, 0x40 ; jne 0x44609c ; lea rax, [rdi + 7] ; ret
0x000000000044bf7e : test al, 0x45 ; mov esp, esi ; call r15
0x000000000044b014 : test al, 0x49 ; mov esp, edi ; mov rdi, r12 ; mov eax, 0x4f ; syscall
0x00000000004c8c78 : test al, 0x74 ; hlt ; jmp qword ptr [rax]
0x00000000004c35d7 : test al, 0x97 ; xchg eax, esp ; ret
0x00000000004c2fbe : test al, 0xa7 ; mov bx, 0xf32d ; retf
0x00000000004d2ae4 : test al, 0xab ; add byte ptr [rax], al ; cmp byte ptr [rdx - 3], ch ; call qword ptr [rbx]
0x00000000004d1d08 : test al, 0xd3 ; cld ; call qword ptr [rax]
0x00000000004b2014 : test al, 0xd4 ; stc ; inc dword ptr [rax + 0x4ffff9d4] ; sar cl, cl ; call qword ptr [rdi]
0x00000000004c411b : test al, 0xe0 ; sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000045192d : test al, 0xe8 ; pop rbp ; retf
0x00000000004afa3d : test al, 0xf7 ; jmp rax
0x0000000000435697 : test al, 7 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000040eab1 : test al, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0xeb08
0x0000000000499d6c : test al, ah ; or eax, 0x894d0000 ; retf
0x000000000049aeec : test al, al ; and dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000488ad5 : test al, al ; cmove rcx, rax ; mov rax, rcx ; ret
0x000000000042720a : test al, al ; jne 0x4271f8 ; xor eax, eax ; sub eax, ecx ; ret
0x00000000004497c0 : test al, al ; jne 0x4496f9 ; jmp 0x44979e
0x000000000049b7ec : test al, al ; sbb byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000498f8c : test al, al ; sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049130a : test al, bh ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x0000000000482283 : test al, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004b0759 : test al, bh ; call qword ptr [rdx]
0x00000000004b08d9 : test al, bh ; call rax
0x00000000004b0899 : test al, bh ; jmp rax
0x00000000004b0819 : test al, bh ; push rsp ; cmp eax, -1 ; je 0x4b07af ; clc ; jmp rsp
0x000000000049967c : test al, dl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000048d207 : test al, dl ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0x7501
0x00000000004a6811 : test bh, bh ; je 0x4a6827 ; cmp dil, 0x10 ; jne 0x4a6844 ; xor eax, eax ; ret
0x00000000004a99b1 : test bh, bh ; je 0x4a99c7 ; cmp dil, 0x10 ; jne 0x4a99da ; xor eax, eax ; ret
0x00000000004aa811 : test bh, bh ; je 0x4aa827 ; cmp dil, 0x10 ; jne 0x4aa83a ; xor eax, eax ; ret
0x00000000004ab281 : test bh, bh ; je 0x4ab297 ; cmp dil, 0x10 ; jne 0x4ab2b4 ; xor eax, eax ; ret
0x00000000004a66ec : test bh, bh ; jns 0x4a66fd ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x00000000004a970c : test bh, bh ; jns 0x4a971d ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x00000000004ab30c : test bh, bh ; jns 0x4ab31d ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x0000000000408201 : test bh, bl ; sbb al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000040b848 : test bh, bl ; sbb byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x00000000004c5ee4 : test bh, ch ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x000000000047cc7c : test bh, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004af9d9 : test bh, dh ; inc dword ptr [rax] ; xchg bh, dh ; jmp qword ptr [rax]
0x00000000004c4391 : test bh, dl ; retf 0xdf7f
0x000000000041ac58 : test bl, al ; add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x0000000000493328 : test bl, dh ; or dword ptr [rax], eax ; add byte ptr [rax], bh ; ret
0x0000000000437b76 : test byte ptr [rax + 0x63490007], 0x14 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000403a9f : test byte ptr [rax + 3], 0x75 ; cwde ; call 0x4004b7
0x000000000041150f : test byte ptr [rax + rax - 0x76b80000], ch ; ret
0x000000000049d7f8 : test byte ptr [rax + rbx - 0x76b30000], al ; retf
0x0000000000459372 : test byte ptr [rax + rsi*4], ah ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x000000000045a8d1 : test byte ptr [rax - 0x76b80000], ch ; ret 0x2948
0x000000000046c619 : test byte ptr [rax - 0x7c000019], ah ; ret
0x000000000049beac : test byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000047eb8a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000485a6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040fd8a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000041b01a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000004a120a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rbx
0x00000000004460ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x00000000004460ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x00000000004460da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x00000000004460ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x00000000004460fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x000000000044603a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 1] ; ret
0x000000000044604a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x000000000044605a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x000000000044606a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x000000000044607a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x000000000044608a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x000000000044609a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x00000000004460aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x000000000044602a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x0000000000413c6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x0000000000445a8a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x000000000044546a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000044547a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000047f89a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x000000000047f88a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x000000000047f8aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x000000000044b8fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x000000000041992a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000004a995a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000044a30a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov edi, edx ; mov eax, esi ; syscall
0x000000000043634a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000044daba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rax + 0x20], rsi ; ret
0x000000000048bdea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000041999a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000047dc4a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, r8 ; vzeroupper ; ret
0x00000000004199aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000042482a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rax ; call rcx
0x000000000048b26a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movsx eax, dl ; sub eax, ecx ; ret
0x0000000000413f2a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000044d9d5 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x000000000041295a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000041996a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042cb9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x00000000004188aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000047d7aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x0000000000445e6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004c8708 : test byte ptr [rax], al ; add byte ptr [rax], al ; rol byte ptr [rdi], 1 ; add byte ptr [rax], al ; and bl, ah ; call rax
0x000000000049c7ac : test byte ptr [rax], al ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049b5ac : test byte ptr [rax], al ; sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004792a0 : test byte ptr [rax], bl ; add byte ptr es:[rax + 0x63], cl ; ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x0000000000499b1c : test byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000437e76 : test byte ptr [rbp + 0x63490007], 0x14 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000450a42 : test byte ptr [rbp + rcx*4 + 0x3c], cl ; ret
0x000000000049e328 : test byte ptr [rbp + rcx], dl ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004b04dc : test byte ptr [rbp - 0x72790008], 0xf8 ; call qword ptr [rsi]
0x000000000046c51c : test byte ptr [rbp - 0x7c000018], bl ; ret
0x0000000000437876 : test byte ptr [rbx + 0x63490007], 0x14 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000049e508 : test byte ptr [rbx + rcx], dh ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000045ae14 : test byte ptr [rbx + rdi*8 - 0x7cb70001], bh ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x0000000000447492 : test byte ptr [rbx], bl ; add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x000000000047cb0f : test byte ptr [rcx + 0xf], 0x45 ; retf 0x148
0x00000000004a793b : test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x000000000049e6e8 : test byte ptr [rcx + rcx - 0x76b30000], dl ; retf
0x00000000004a94d2 : test byte ptr [rcx + rcx*4 - 0x19], 0x41 ; call rdi
0x000000000041a236 : test byte ptr [rcx + rcx*4 - 0x19], 0xe8 ; or dword ptr [rdx - 2], esp ; dec dword ptr [rax - 0x77] ; ret
0x000000000042afd6 : test byte ptr [rcx], bh ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042b7b6 : test byte ptr [rcx], bh ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042a2e6 : test byte ptr [rcx], ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042b6c6 : test byte ptr [rcx], ch ; or eax, 0x894d0000 ; retf
0x000000000042a006 : test byte ptr [rcx], cl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000457e34 : test byte ptr [rdi + 0x48000001], bl ; mov edx, eax ; jmp 0x457df7
0x000000000049e8c8 : test byte ptr [rdi + rax - 0x76b30000], dh ; retf
0x000000000044d184 : test byte ptr [rdi - 0x7d000000], bl ; ret
0x0000000000479b99 : test byte ptr [rdi], 0x84 ; popfq ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000425356 : test byte ptr [rdi], 0x84 ; ret
0x000000000044b52f : test byte ptr [rdi], 0x94 ; ret 0xc221
0x000000000044b046 : test byte ptr [rdi], 0x94 ; ret 0xca21
0x0000000000471291 : test byte ptr [rdi], 0x9f ; ret 0xd629
0x0000000000437ff7 : test byte ptr [rdi], al ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000047d004 : test byte ptr [rdi], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004727d4 : test byte ptr [rdi], bl ; loop 0x4727de ; dec dword ptr [rax - 0x39] ; ret
0x0000000000456bc6 : test byte ptr [rdi], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x000000000041c054 : test byte ptr [rdi], dh ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000047d01c : test byte ptr [rdi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000047d351 : test byte ptr [rdx + 0x48000001], bh ; bsr eax, eax ; add rax, rdi ; ret
0x0000000000458239 : test byte ptr [rdx + 0x48fffffd], bl ; mov edx, eax ; jmp 0x4581fc
0x0000000000438176 : test byte ptr [rdx + 0x63490007], 0x14 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000049d618 : test byte ptr [rdx + rbx], ah ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042109e : test byte ptr [rdx], ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000047cc64 : test byte ptr [rdx], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000422b9e : test byte ptr [rdx], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000042309e : test byte ptr [rdx], dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000004a309f : test byte ptr [rip + 0x2378f2], 0x40 ; jne 0x4a30d7 ; ret
0x000000000046b0a4 : test byte ptr [rip - 0x7c000003], dl ; ret
0x0000000000460ab4 : test byte ptr [rip - 0x7c000011], al ; ret
0x000000000047d85d : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x0000000000437576 : test byte ptr [rsi + 0x63490007], 0x14 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000412c74 : test byte ptr [rsi + rdi*8 - 0x76b30001], dh ; retf 0x8948
0x000000000049d9c8 : test byte ptr [rsi + rdx - 0x76b30000], dh ; retf
0x0000000000454c31 : test byte ptr [rsi - 0x8fffffc], cl ; ret 0
0x00000000004650b5 : test byte ptr [rsi], ah ; add al, byte ptr [rax] ; add bl, bl ; sub bl, cl ; in eax, 0xdf ; loopne 0x465056 ; ret
0x0000000000441cdd : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000049f7fe : test byte ptr [rsi], ch ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049f4fe : test byte ptr [rsi], ch ; adc eax, 0x894d0000 ; retf
0x00000000004a06fe : test byte ptr [rsi], ch ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049fdfe : test byte ptr [rsi], ch ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004a00fe : test byte ptr [rsi], ch ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049d438 : test byte ptr [rsp + rbx], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000471461 : test ch, dh ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x000000000040bf32 : test ch, dl ; add al, 0 ; add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x000000000049d29b : test cl, ah ; sbb eax, 0x894d0000 ; retf
0x000000000042c2f6 : test cl, bh ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042aa16 : test cl, bh ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042c116 : test cl, bl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004a572a : test cl, bl ; add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000042a736 : test cl, bl ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004287c6 : test cl, ch ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000428ac6 : test cl, ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004299c6 : test cl, ch ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042c206 : test cl, ch ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004296c6 : test cl, ch ; add eax, 0x894d0000 ; retf
0x00000000004293c6 : test cl, ch ; or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004290c6 : test cl, ch ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044e0c1 : test cl, ch ; retf 0xfffe
0x000000000042b146 : test cl, cl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042c026 : test cl, cl ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044796f : test cl, cl ; jne 0x447964 ; ret
0x0000000000447a1f : test cl, cl ; jne 0x447a14 ; ret
0x0000000000447cdf : test cl, cl ; jne 0x447cd8 ; sub rax, 1 ; ret
0x00000000004755c7 : test dh, bh ; retf
0x00000000004525c5 : test dh, dh ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x00000000004a66eb : test dil, dil ; jns 0x4a66fe ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x00000000004a970b : test dil, dil ; jns 0x4a971e ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x00000000004ab30b : test dil, dil ; jns 0x4ab31e ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x0000000000445eb4 : test dl, 0x40 ; jne 0x445e79 ; lea rax, [rdi + 7] ; ret
0x0000000000445ee2 : test dl, 4 ; jne 0x445e79 ; lea rax, [rdi + 3] ; ret
0x000000000047eb57 : test dl, dl ; je 0x47eb7b ; mov cl, dl ; and cl, 0xf ; je 0x47eb8b ; ret
0x000000000040ee06 : test dl, dl ; jne 0x40ede8 ; ret
0x0000000000447b8f : test dl, dl ; jne 0x447b88 ; lea rax, [rcx - 1] ; ret
0x000000000048b1c7 : test dl, dl ; jne 0x48b1a3 ; movsx eax, cl ; neg eax ; ret
0x000000000044c666 : test dword ptr [rax + 0x49000000], edx ; mov edi, dword ptr [rbp] ; call r12
0x000000000047db8b : test dword ptr [rax + 0x4c000000], esp ; mov eax, eax ; vzeroupper ; ret
0x00000000004a8a9a : test dword ptr [rax + 0x7508313c], 0x10894804 ; ret
0x00000000004ad423 : test dword ptr [rax + 0xf000008], ecx ; xchg eax, ebx ; ret 0x3d83
0x000000000042cae7 : test dword ptr [rax + rax - 0x3fcf0000], edx ; vzeroupper ; ret
0x000000000044c636 : test dword ptr [rax + rax - 0x74b70000], ebx ; jge 0x44c649 ; call r12
0x000000000047cc7d : test dword ptr [rax], 0x83480000 ; ret 0xe901
0x0000000000498482 : test dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000046a586 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004034d1 : test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0x000000000044efd1 : test dword ptr [rax], eax ; add rax, rbp ; jmp rax
0x000000000044fc15 : test dword ptr [rax], ebp ; add byte ptr [rsi + rbp*4 - 0x18], dh ; xchg eax, ecx ; retf 0
0x0000000000460529 : test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x000000000046ac96 : test dword ptr [rax], esi ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0x8c20
0x00000000004034d0 : test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x000000000044efd0 : test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x00000000004c5290 : test dword ptr [rbp - 0x9aff276], esp ; mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x000000000042c678 : test dword ptr [rbx + 0x31000000], esp ; rol bl, 0x83 ; ret 0x6620
0x000000000044ad59 : test dword ptr [rbx + 0x48000000], ebp ; add esp, 0x78 ; ret
0x000000000042e3e7 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042e836 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d4b8 : test dword ptr [rbx - 0x3a000003], esp ; std ; xlatb ; ret 0xe883
0x00000000004307e3 : test dword ptr [rbx - 0x76b703aa], 0x5789f74f ; cld ; ret
0x00000000004360d3 : test dword ptr [rbx - 0x76b703b2], 0x4f89f757 ; cld ; ret
0x0000000000498777 : test dword ptr [rbx - 0x7cb70000], edx ; jmp 0x49879b
0x000000000042f7f5 : test dword ptr [rbx], 0x63490008 ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000420ed8 : test dword ptr [rbx], edx ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000473a73 : test dword ptr [rbx], esp ; retf
0x0000000000412a1f : test dword ptr [rcx + 0x48000000], ebp ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000417428 : test dword ptr [rcx + 0x48000000], edi ; add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000047f9cb : test dword ptr [rcx + 0x48000000], edi ; add esp, 0x78 ; ret
0x000000000042e3bd : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042e2cd : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042e1dd : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041e2d2 : test dword ptr [rcx + rcx*4 + 0x54], 0x93e80824 ; ret 0xffff
0x0000000000412238 : test dword ptr [rcx - 0x16000002], esi ; retf 0xfffe
0x00000000004822a2 : test dword ptr [rcx], esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; dec dword ptr [rax - 0x7d] ; ret
0x000000000041892a : test dword ptr [rdi + 0x48000002], esp ; add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004a98b4 : test dword ptr [rdi + rdi*8 - 1], esi ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000430464 : test dword ptr [rdi], 0x14634900 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000437e77 : test dword ptr [rdi], eax ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000041e26c : test dword ptr [rdi], eax ; add eax, 0x39480000 ; ret 0xf275
0x000000000042e102 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004c5179 : test dword ptr [rdx - 0x69], edi ; xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x0000000000402349 : test dword ptr [rdx], edx ; add al, byte ptr [rax] ; add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000004021f9 : test dword ptr [rdx], esi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000047d643 : test dword ptr [rip - 0x76ffffff], edi ; ret 0x8948
0x000000000044a9c6 : test dword ptr [rsi + 0x48000000], ebp ; add esp, 0x68 ; ret
0x0000000000497c19 : test dword ptr [rsi + 0x48000000], esi ; add esp, 0x30 ; pop rbx ; ret
0x00000000004476f2 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000497dd2 : test dword ptr [rsi + 1], esi ; add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004613f1 : test dword ptr [rsi - 0x16000007], esi ; ret
0x00000000004110ad : test dword ptr [rsi - 0x77000000], esp ; ret 0xe281
0x000000000042e608 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x00000000004c446d : test eax, 0x35eea9cd ; outsb dx, byte ptr [rsi] ; retf
0x0000000000412a20 : test eax, 0x48000000 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000432503 : test eax, 0x490007d8 ; movsxd rdx, dword ptr [rbx + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000042f743 : test eax, 0x49000804 ; movsxd rdx, dword ptr [rbx + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000048643a : test eax, 0x634a0003 ; add al, 0xa1 ; add rax, rcx ; jmp rax
0x00000000004c52c0 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000434286 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000405acf : test eax, 0x8949ffff ; ret 0x149
0x0000000000405af7 : test eax, 0x8c8bffff ; and al, 0x8c ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x00000000004b09c5 : test eax, 0xac00fff8 ; clc ; call qword ptr [rax]
0x000000000044d6fb : test eax, eax ; cmove eax, edx ; ret
0x0000000000400424 : test eax, eax ; je 0x40042e ; call rax
0x0000000000400aa7 : test eax, eax ; je 0x400ac2 ; pop rbp ; mov edi, 0x6d8bd0 ; jmp rax
0x0000000000400ae9 : test eax, eax ; je 0x400b02 ; pop rbp ; mov edi, 0x6d8bd0 ; jmp rax
0x00000000004240a1 : test eax, eax ; je 0x4240b8 ; lea rax, [rdx - 0x10] ; ret
0x000000000042c3c8 : test eax, eax ; je 0x42c3d4 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000044166f : test eax, eax ; je 0x44168b ; bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x000000000044b798 : test eax, eax ; je 0x44b7a3 ; ret
0x000000000044ee66 : test eax, eax ; je 0x44ee75 ; ret
0x000000000045abe4 : test eax, eax ; je 0x45abee ; call rax
0x000000000045bfe9 : test eax, eax ; je 0x45bff3 ; call rax
0x00000000004983f0 : test eax, eax ; je 0x498408 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a9475 : test eax, eax ; je 0x4a9494 ; mov rsi, rdi ; mov edi, 1 ; jmp rax
0x00000000004aad78 : test eax, eax ; je 0x4aad85 ; ret
0x00000000004aae88 : test eax, eax ; je 0x4aae95 ; ret
0x00000000004ac621 : test eax, eax ; je 0x4ac630 ; call rax
0x000000000045a1e0 : test eax, eax ; jle 0x45a1f7 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000004070da : test eax, eax ; jne 0x4070f2 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000041869c : test eax, eax ; jne 0x418695 ; ret
0x0000000000419634 : test eax, eax ; jne 0x41962d ; ret
0x000000000042c6a5 : test eax, eax ; jne 0x42c706 ; xor eax, eax ; ret
0x000000000042c675 : test eax, eax ; jne 0x42c72a ; xor eax, eax ; ret
0x000000000042cb21 : test eax, eax ; jne 0x42cb49 ; xor eax, eax ; vzeroupper ; ret
0x000000000044ab26 : test eax, eax ; jne 0x44ab46 ; xor eax, eax ; syscall
0x000000000044abf6 : test eax, eax ; jne 0x44ac19 ; mov eax, 1 ; syscall
0x000000000044ad33 : test eax, eax ; jne 0x44ada1 ; mov eax, 0x48 ; syscall
0x000000000044aec6 : test eax, eax ; jne 0x44aee9 ; mov eax, 3 ; syscall
0x000000000044d830 : test eax, eax ; jne 0x44d82b ; pop rdx ; pop r10 ; ret
0x000000000047dbc1 : test eax, eax ; jne 0x47dbfa ; mov rax, r8 ; vzeroupper ; ret
0x000000000047f9a5 : test eax, eax ; jne 0x47fa0f ; mov eax, 0x101 ; syscall
0x00000000004aadb7 : test eax, eax ; jne 0x4aadc5 ; ret
0x00000000004aadd2 : test eax, eax ; jne 0x4aade5 ; ret
0x00000000004ab002 : test eax, eax ; jne 0x4ab015 ; ret
0x00000000004069f4 : test eax, eax ; jns 0x4069c8 ; mov r15, r12 ; jmp 0x4069cf
0x0000000000485f90 : test eax, eax ; js 0x485fa7 ; pop rbx ; ret
0x000000000047475b : test eax, eax ; retf
0x000000000045c777 : test eax, eax ; sete sil ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x00000000004882ad : test eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x000000000046b685 : test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x000000000047a23a : test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x00000000004b0755 : test eax, edi ; call qword ptr [rdx + 0x12fff884]
0x00000000004b0751 : test eax, edi ; call qword ptr [rdx]
0x00000000004b08d1 : test eax, edi ; call rax
0x00000000004607a2 : test eax, edi ; idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x00000000004b0891 : test eax, edi ; jmp rax
0x000000000044ba39 : test ebp, ebp ; jne 0x44ba58 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044c5a4 : test ebp, ebp ; jne 0x44c5d0 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044c5d7 : test ebp, ebp ; jne 0x44c629 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044c603 : test ebp, ebp ; jne 0x44c689 ; mov rdi, qword ptr [rbp] ; call r12
0x00000000004ab89e : test ebp, ebp ; jne 0x4ab882 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004abaf1 : test ebp, ebp ; jne 0x4abae0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004ac6ab : test ebp, ebp ; jne 0x4ac698 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a4e3e : test ebp, edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x3901
0x000000000041c1d8 : test ebx, ebp ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000042c5e0 : test ebx, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000004ac82f : test ebx, ebx ; jne 0x4ac84a ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004ab9dc : test ebx, ebx ; mov qword ptr [rip + 0x22e42b], rbx ; jne 0x4ab9d4 ; pop rbx ; ret
0x0000000000422ee0 : test ebx, edi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004229d8 : test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004563c9 : test ecx, eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004822d8 : test ecx, eax ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x0000000000445ea2 : test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000047e959 : test ecx, ecx ; jne 0x47e918 ; mov rax, rdx ; ret
0x0000000000411d24 : test edi, eax ; add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fd08], al ; ret
0x00000000004c4190 : test edi, ebx ; hlt ; jp 0x4c4150 ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x00000000004aadb1 : test edi, edi ; je 0x4aadc6 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x4aadcb ; ret
0x000000000044ba5f : test edi, edi ; jne 0x44baa9 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044ba87 : test edi, edi ; jne 0x44bac9 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044c68f : test edi, edi ; jne 0x44c6fa ; mov rdi, qword ptr [r13] ; call r12
0x000000000044c6bf : test edi, edi ; jne 0x44c72b ; mov rdi, qword ptr [r13] ; call r12
0x000000000048970a : test edi, edi ; jne 0x4896e5 ; ret
0x00000000004a635e : test edi, edi ; jne 0x4a629c ; add rsp, 0x38 ; ret
0x0000000000497aed : test edi, edi ; mov byte ptr [rsi], al ; jne 0x497ae1 ; mov rax, rsi ; ret
0x0000000000441c92 : test edx, edx ; je 0x441ca0 ; bsf eax, edx ; ret
0x0000000000441c92 : test edx, edx ; je 0x441ca1 ; bsf eax, edx ; ret
0x0000000000441d3b : test edx, edx ; je 0x441d57 ; bsf rax, rdx ; ret
0x0000000000441d3b : test edx, edx ; je 0x441d58 ; bsf rax, rdx ; ret
0x0000000000441cda : test edx, edx ; je 0x441d6b ; bsf rax, rdx ; ret
0x0000000000441cda : test edx, edx ; je 0x441d6c ; bsf rax, rdx ; ret
0x000000000044e13a : test edx, edx ; je 0x44e151 ; lea rdi, [rcx + rax + 0x20] ; jmp rdx
0x000000000047d8ca : test edx, edx ; je 0x47d8f7 ; bsf rax, rdx ; ret
0x000000000047d8ca : test edx, edx ; je 0x47d8f8 ; bsf rax, rdx ; ret
0x000000000047d85a : test edx, edx ; je 0x47d90b ; bsf rax, rdx ; ret
0x000000000047d85a : test edx, edx ; je 0x47d90c ; bsf rax, rdx ; ret
0x000000000047e7ca : test edx, edx ; je 0x47e7fc ; bsf rax, rdx ; shr rax, 2 ; ret
0x00000000004a260a : test edx, edx ; je 0x4a2624 ; mov rax, qword ptr [r12] ; add rax, qword ptr [rdx + 8] ; call rax
0x00000000004a2abb : test edx, edx ; je 0x4a2b04 ; shl rdx, 5 ; add rdx, rax ; jmp 0x4a2adb
0x0000000000415ae3 : test edx, edx ; jne 0x415af5 ; ret
0x000000000041777f : test edx, edx ; jne 0x417775 ; ret
0x000000000047a9ef : test edx, edx ; jne 0x47a9e5 ; ret
0x000000000047e6ba : test edx, edx ; jne 0x47e6b5 ; ret
0x00000000004a0f8e : test edx, edx ; jne 0x4a0fa1 ; mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000445e95 : test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000045a190 : test esi, esi ; je 0x45a1aa ; cmp esi, 3 ; je 0x45a1aa ; ret
0x000000000045aae8 : test esi, esi ; je 0x45aaf2 ; call rsi
0x0000000000488a74 : test esi, esi ; je 0x488a85 ; mov qword ptr [rsi], rdi ; mov rax, rcx ; ret
0x000000000047d7c1 : test esi, esi ; jne 0x47d7d0 ; xor rax, rax ; ret
0x000000000047e6c1 : test esi, esi ; jne 0x47e6d0 ; xor rax, rax ; ret
0x00000000004602b4 : test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x0000000000445eaf : test esp, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000041a3b7 : test esp, edx ; sub eax, dword ptr [rax] ; ret
0x00000000004307e2 : test qword ptr [rbx - 0x76b703aa], 0x5789f74f ; cld ; ret
0x000000000044c5d6 : test r13, r13 ; jne 0x44c62a ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044c602 : test r13, r13 ; jne 0x44c68a ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000488ad4 : test r8b, r8b ; cmove rcx, rax ; mov rax, rcx ; ret
0x000000000042c3c7 : test r8d, r8d ; je 0x42c3d5 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000047e958 : test r9d, r9d ; jne 0x47e919 ; mov rax, rdx ; ret
0x0000000000400423 : test rax, rax ; je 0x40042f ; call rax
0x0000000000400aa6 : test rax, rax ; je 0x400ac3 ; pop rbp ; mov edi, 0x6d8bd0 ; jmp rax
0x0000000000400ae8 : test rax, rax ; je 0x400b03 ; pop rbp ; mov edi, 0x6d8bd0 ; jmp rax
0x00000000004240a0 : test rax, rax ; je 0x4240b9 ; lea rax, [rdx - 0x10] ; ret
0x000000000044b797 : test rax, rax ; je 0x44b7a4 ; ret
0x000000000045abe3 : test rax, rax ; je 0x45abef ; call rax
0x000000000045bfe8 : test rax, rax ; je 0x45bff4 ; call rax
0x00000000004983ef : test rax, rax ; je 0x498409 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004ac620 : test rax, rax ; je 0x4ac631 ; call rax
0x00000000004070d9 : test rax, rax ; jne 0x4070f3 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000041869b : test rax, rax ; jne 0x418696 ; ret
0x0000000000419633 : test rax, rax ; jne 0x41962e ; ret
0x000000000044ba38 : test rbp, rbp ; jne 0x44ba59 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044c5a3 : test rbp, rbp ; jne 0x44c5d1 ; mov rdi, qword ptr [rbx] ; call r12
0x00000000004ab89d : test rbp, rbp ; jne 0x4ab883 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004abaf0 : test rbp, rbp ; jne 0x4abae1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004ac6aa : test rbp, rbp ; jne 0x4ac699 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004ac82e : test rbx, rbx ; jne 0x4ac84b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004aadb0 : test rdi, rdi ; je 0x4aadc7 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x4aadcc ; ret
0x000000000044ba5e : test rdi, rdi ; jne 0x44baaa ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044ba86 : test rdi, rdi ; jne 0x44baca ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044c68e : test rdi, rdi ; jne 0x44c6fb ; mov rdi, qword ptr [r13] ; call r12
0x000000000044c6be : test rdi, rdi ; jne 0x44c72c ; mov rdi, qword ptr [r13] ; call r12
0x0000000000489709 : test rdi, rdi ; jne 0x4896e6 ; ret
0x0000000000497aec : test rdi, rdi ; mov byte ptr [rsi], al ; jne 0x497ae2 ; mov rax, rsi ; ret
0x0000000000441d3a : test rdx, rdx ; je 0x441d58 ; bsf rax, rdx ; ret
0x0000000000441d3a : test rdx, rdx ; je 0x441d59 ; bsf rax, rdx ; ret
0x0000000000441cd9 : test rdx, rdx ; je 0x441d6c ; bsf rax, rdx ; ret
0x000000000044e139 : test rdx, rdx ; je 0x44e152 ; lea rdi, [rcx + rax + 0x20] ; jmp rdx
0x000000000047d8c9 : test rdx, rdx ; je 0x47d8f8 ; bsf rax, rdx ; ret
0x000000000047d8c9 : test rdx, rdx ; je 0x47d8f9 ; bsf rax, rdx ; ret
0x000000000047d859 : test rdx, rdx ; je 0x47d90c ; bsf rax, rdx ; ret
0x00000000004a2aba : test rdx, rdx ; je 0x4a2b05 ; shl rdx, 5 ; add rdx, rax ; jmp 0x4a2adc
0x0000000000415ae2 : test rdx, rdx ; jne 0x415af6 ; ret
0x000000000041777e : test rdx, rdx ; jne 0x417776 ; ret
0x000000000047a9ee : test rdx, rdx ; jne 0x47a9e6 ; ret
0x000000000045aae7 : test rsi, rsi ; je 0x45aaf3 ; call rsi
0x0000000000488a73 : test rsi, rsi ; je 0x488a86 ; mov qword ptr [rsi], rdi ; mov rax, rcx ; ret
0x000000000047d7c0 : test rsi, rsi ; jne 0x47d7d1 ; xor rax, rax ; ret
0x000000000047e6c0 : test rsi, rsi ; jne 0x47e6d1 ; xor rax, rax ; ret
0x00000000004525c4 : test sil, sil ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000042cbb0 : tzcnt eax, eax ; add rax, rdi ; vzeroupper ; ret
0x000000000044820c : ud0 ; lea rsi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000416833 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x000000000043984a : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000004485fc : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000439846 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000004485f8 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000447fc5 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000449181 : vmovdqu xmmword ptr [rdi], xmm0 ; vzeroupper ; ret
0x0000000000447fc9 : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000448788 : vmovdqu ymmword ptr [r11], ymm4 ; vzeroupper ; ret
0x000000000044882f : vmovdqu ymmword ptr [r11], ymm8 ; vzeroupper ; ret
0x0000000000439836 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000043981d : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x0000000000439817 : vmovdqu ymmword ptr [r9 - 0x40], ymm2 ; vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x0000000000448565 : vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1 ; vzeroupper ; ret
0x00000000004490eb : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0 ; vzeroupper ; ret
0x00000000004486d3 : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3 ; vzeroupper ; ret
0x00000000004486a5 : vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7 ; vzeroupper ; ret
0x0000000000439832 : vmovdqu ymmword ptr [rdi], ymm0 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x0000000000449072 : vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x0000000000447fbb : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000447fbf : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000448c42 : vmovdqu64 zmmword ptr [r11], zmm4 ; vzeroupper ; ret
0x0000000000448d08 : vmovdqu64 zmmword ptr [r11], zmm8 ; vzeroupper ; ret
0x0000000000448b2b : vmovdqu64 zmmword ptr [rdi + rdx - 0x100], zmm7 ; vzeroupper ; ret
0x000000000044899e : vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm1 ; vzeroupper ; ret
0x000000000044928e : vmovdqu64 zmmword ptr [rdi + rdx - 0x80], zmm0 ; vzeroupper ; ret
0x0000000000448b69 : vmovdqu64 zmmword ptr [rdi + rdx - 0x80], zmm3 ; vzeroupper ; ret
0x00000000004491fd : vmovdqu64 zmmword ptr [rdi], zmm0 ; vzeroupper ; ret
0x0000000000447fd4 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000447fd8 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000439b53 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x00000000004399ec : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00000000004397ee : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x00000000004397b2 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x0000000000439cb5 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000448178 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x00000000004480db : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x0000000000447f7a : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000043fe91 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x000000000042d253 : vpmovmskb eax, ymm2 ; sub eax, -1 ; jne 0x42d26c ; vzeroupper ; ret
0x000000000042c9c8 : vzeroupper ; ret
0x000000000042cba0 : vzeroupper ; xor eax, eax ; ret
0x00000000004c59cc : wait ; adc byte ptr [rdi], dl ; pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000042c491 : wait ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000004d1b1d : wait ; add byte ptr [rax], al ; push rax ; cld ; jmp qword ptr [rdx]
0x00000000004d1a5d : wait ; add byte ptr [rax], al ; shl byte ptr [rdx - 4], 1 ; jmp qword ptr [rdx]
0x00000000004a0e73 : wait ; and eax, dword ptr [rax] ; ret
0x000000000046c861 : wait ; fadd qword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000467ba9 : wait ; or dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf
0x0000000000450f54 : wait ; sub byte ptr [rax], al ; ret
0x00000000004b09fd : xbegin 0xfffffffff9146b0a ; jmp qword ptr [rax - 0x35]
0x000000000042ba13 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043f13f : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042bb03 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042b923 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004c8fb5 : xchg ah, dh ; call qword ptr [rdi]
0x00000000004b074d : xchg al, bh ; call qword ptr [rdx + 0x12fff885]
0x00000000004b0749 : xchg al, bh ; call qword ptr [rdx]
0x00000000004b08c9 : xchg al, bh ; call rax
0x00000000004b0889 : xchg al, bh ; jmp rax
0x0000000000461b62 : xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x0000000000440d8c : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x00000000004405ac : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000044099c : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004401bc : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000487b0c : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004a095d : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004af9dd : xchg bh, dh ; jmp qword ptr [rax]
0x000000000049f461 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x00000000004a0661 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049fd61 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004a0061 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049f759 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000449402 : xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x000000000042c36b : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000043fc9f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043f47f : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000043ec5f : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x0000000000450aa8 : xchg byte ptr [rax - 0x75], cl ; ret
0x000000000042bec3 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000044035b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043f7bf : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b653 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000043ef9f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e77f : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000049f457 : xchg byte ptr [rbp + rdx], dh ; add byte ptr [rcx - 0x7d], cl ; jmp 0x49f47b
0x0000000000420b02 : xchg byte ptr [rbx + 0x2b], dl ; add byte ptr [rax], al ; ret
0x000000000042c490 : xchg byte ptr [rbx + 0x48000002], bl ; add eax, edi ; add rax, rcx ; ret
0x000000000043f95f : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000042c0a3 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004a0657 : xchg byte ptr [rbx + rax], dh ; add byte ptr [rcx - 0x7d], cl ; jmp 0x4a067b
0x000000000042b833 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000048b1aa : xchg byte ptr [rcx + 0x38000000], dh ; retf 0x850f
0x00000000004a823c : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x000000000042c283 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004a0057 : xchg byte ptr [rcx + rcx], dh ; add byte ptr [rcx - 0x7d], cl ; jmp 0x4a007b
0x0000000000489f46 : xchg byte ptr [rcx + rdi*8 - 1], dh ; add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000049fa57 : xchg byte ptr [rdi + rcx], dh ; add byte ptr [rcx - 0x7d], cl ; jmp 0x49fa7b
0x00000000004c4195 : xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x000000000044084c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044006c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044117c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000455c83 : xchg byte ptr [rdi], dl ; or eax, 0xea810000 ; ret 0
0x000000000042c193 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043eabf : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000402d96 : xchg byte ptr [rdx - 0x7cb7fffc], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000461b79 : xchg byte ptr [rdx], ah ; and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000042bad5 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042bbc5 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b9e5 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a0357 : xchg byte ptr [rsi + rax], dh ; add byte ptr [rcx - 0x7d], cl ; jmp 0x4a037b
0x000000000041bfd5 : xchg byte ptr [rsi - 0x9fffffd], dh ; ret 0xf08
0x00000000004affe8 : xchg byte ptr [rsi - 8], ah ; call qword ptr [rsi]
0x000000000049fa06 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ebf5 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f8f5 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a0906 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a0006 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049fd06 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000043f415 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044074d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000456d75 : xchg byte ptr [rsi], bl ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000049f6fe : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044107d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b743 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x000000000049fd57 : xchg byte ptr [rsp + rcx], dh ; add byte ptr [rcx - 0x7d], cl ; jmp 0x49fd7b
0x00000000004d3051 : xchg ch, bh ; jmp qword ptr [rax]
0x000000000049e78f : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049e5af : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049ef87 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049dea7 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049eda7 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004384bf : xchg cl, al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000043fc35 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ef35 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000043ea55 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f755 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000044089d : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004400bd : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b8f5 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b715 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b805 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b625 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000478dd9 : xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x000000000046fecf : xchg dword ptr [rax - 0x77000000], ecx ; ret 0x349
0x0000000000403ff3 : xchg dword ptr [rax - 0x7d], ecx ; ret
0x00000000004859a6 : xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x000000000042729e : xchg dword ptr [rax], ecx ; add byte ptr [rdi + 0x63], cl ; or al, 0x8a ; lea r10, [r10 + r9] ; jmp r10
0x00000000004c4198 : xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x00000000004033e5 : xchg dword ptr [rbp + 0x6348000a], ebp ; add al, 0x82 ; add rax, rdx ; jmp rax
0x0000000000450b94 : xchg dword ptr [rbp + rcx*4 + 0x34], ecx ; ret
0x00000000004c3d1f : xchg dword ptr [rbp - 0x5b], ebx ; xchg eax, ebp ; retf 0x33e6
0x0000000000475c2b : xchg dword ptr [rbp - 0x7cffffe1], esi ; ret 0xbe08
0x0000000000475695 : xchg dword ptr [rbp - 0x7cffffe3], edx ; ret 0xbe08
0x0000000000463a6c : xchg dword ptr [rbx - 0x76fffff4], ebp ; ret 0x349
0x00000000004c2f8c : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x000000000045bdda : xchg dword ptr [rcx + 1], eax ; add byte ptr [rax], al ; movsxd rdi, dword ptr [r11 + rsi*4] ; add rdi, r11 ; jmp rdi
0x00000000004a68ea : xchg dword ptr [rcx + rax - 8], ecx ; jmp rax
0x000000000047777d : xchg dword ptr [rcx - 0x77000000], ecx ; ret 0x348
0x0000000000445325 : xchg dword ptr [rdi + 0x63490006], esi ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000473cdc : xchg dword ptr [rdi - 0x76ffffc4], esi ; retf 0x348
0x0000000000474998 : xchg dword ptr [rdi - 0x76ffffd8], eax ; retf 0x348
0x00000000004758b2 : xchg dword ptr [rdi - 0x76ffffea], ecx ; retf 0x348
0x0000000000474d24 : xchg dword ptr [rdi - 0x7cffffd3], esp ; ret 0xbf08
0x0000000000437cf7 : xchg dword ptr [rdi], eax ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000044d82e : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x44d82d ; pop rdx ; pop r10 ; ret
0x0000000000478fc4 : xchg dword ptr [rdi], esi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x0000000000478dd1 : xchg dword ptr [rdx + 0x48000000], ecx ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00000000004a68e2 : xchg dword ptr [rdx + 0x49000008], ebp ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, r15 ; jmp rax
0x000000000046b3da : xchg dword ptr [rdx + rbx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004645e4 : xchg dword ptr [rdx - 0x77000000], edx ; ret 0x349
0x00000000004751bd : xchg dword ptr [rdx - 0x7cffffe2], edx ; ret 0xbf08
0x000000000042f165 : xchg dword ptr [rdx], ecx ; or byte ptr [rax], al ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000400bfd : xchg dword ptr [rip + 0x5d5e800], ebp ; add byte ptr [rax], al ; nop ; pop rbp ; ret
0x0000000000400b29 : xchg dword ptr [rip - 0x3ca2ff00], ebp ; nop ; ret
0x0000000000482ff0 : xchg dword ptr [rip - 0x76fffffd], edx ; ret 0xe8c0
0x0000000000477eb7 : xchg dword ptr [rip - 0x76fffffe], ebx ; ret 0x348
0x0000000000474562 : xchg dword ptr [rip - 0x7cffffc7], esp ; ret 0xbf08
0x0000000000411595 : xchg dword ptr [rsi + 0x2c], esi ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000046e08c : xchg dword ptr [rsi - 0x76ffffe1], ecx ; ret 0x349
0x00000000004c312b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x000000000049dae8 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x00000000004a0cc7 : xchg eax, ebp ; and eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000004c3469 : xchg eax, ebp ; jge 0x4c344c ; push r8 ; xor byte ptr [rcx], ah ; retf
0x0000000000464e87 : xchg eax, ebp ; movsd dword ptr [rdi], dword ptr [rsi] ; add eax, 0x6f0f6600 ; ret 0x290f
0x000000000045a04b : xchg eax, ebp ; push 0x4cffffff ; mov edi, esi ; call rdx
0x00000000004517bf : xchg eax, ebp ; ret
0x00000000004a64d0 : xchg eax, ebp ; ret 0x145
0x000000000048202a : xchg eax, ebp ; ret 0x2041
0x00000000004820ea : xchg eax, ebp ; ret 0x2044
0x000000000044b13c : xchg eax, ebp ; ret 0x3948
0x000000000041f02b : xchg eax, ebp ; ret 0x8348
0x0000000000483cb0 : xchg eax, ebp ; ret 0xc283
0x00000000004221ed : xchg eax, ebp ; ret 0xd020
0x000000000040f1e5 : xchg eax, ebp ; ret 0xd021
0x0000000000465c6a : xchg eax, ebp ; ret 0xd120
0x00000000004113d2 : xchg eax, ebp ; ret 0xdaf7
0x000000000044eea1 : xchg eax, ebp ; ret 0xe1eb
0x00000000004a804a : xchg eax, ebp ; ret 0xf45
0x0000000000456927 : xchg eax, ebp ; ret 5
0x000000000041deb3 : xchg eax, ebp ; retf 0x2b
0x00000000004c3d22 : xchg eax, ebp ; retf 0x33e6
0x00000000004a3c86 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000498034 : xchg eax, ebp ; ror byte ptr [rcx - 0x49f0fbad], 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000419afd : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x00000000004b11a9 : xchg eax, ebp ; stc ; call rdx
0x00000000004b1375 : xchg eax, ebp ; stc ; inc dword ptr [rcx - 0x500066b] ; xchg eax, ebp ; stc ; jmp rsi
0x00000000004b11a1 : xchg eax, ebp ; stc ; inc dword ptr [rcx - 0x7e00066b] ; xchg eax, ebp ; stc ; call rdx
0x00000000004b1205 : xchg eax, ebp ; stc ; jmp qword ptr [rax]
0x00000000004b11dd : xchg eax, ebp ; stc ; jmp qword ptr [rdx]
0x00000000004b12b1 : xchg eax, ebp ; stc ; jmp rsi
0x00000000004b1219 : xchg eax, ebp ; stc ; lcall [rax + 0x6afff996] ; xchg eax, esi ; stc ; jmp qword ptr [rdx]
0x00000000004b12a9 : xchg eax, ebp ; stc ; push qword ptr [rbp + rdx*4 - 0x6a050007] ; stc ; jmp rsi
0x00000000004c517c : xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x0000000000412392 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000046d447 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000049ab45 : xchg eax, ebx ; add dword ptr [rax], eax ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000042d550 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x000000000042ebb3 : xchg eax, ebx ; add rsi, rdx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000004c5b0c : xchg eax, ebx ; in al, dx ; retf 0xae32
0x00000000004c5a3c : xchg eax, ebx ; in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4c59d3 ; ret 0x48f
0x00000000004c8015 : xchg eax, ebx ; jmp qword ptr [rsi]
0x000000000044532c : xchg eax, ebx ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000042ecf2 : xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004c5023 : xchg eax, ebx ; mov ebx, 0x1b5c347e ; jmp 0x4c4ffd
0x0000000000486d61 : xchg eax, ebx ; movabs al, byte ptr [0x148a704634a0003] ; clc ; jmp rax
0x000000000045cc28 : xchg eax, ebx ; ret 0x3948
0x000000000041318c : xchg eax, ebx ; ret 0x3949
0x0000000000421940 : xchg eax, ebx ; ret 0x3d83
0x000000000047b295 : xchg eax, ebx ; ret 0x840
0x000000000045d70d : xchg eax, ebx ; ret 0x854d
0x000000000041e2d9 : xchg eax, ebx ; ret 0xffff
0x0000000000420b03 : xchg eax, ebx ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004b04c1 : xchg eax, ecx ; clc ; call qword ptr [rsi + 0x26fff890]
0x00000000004b05fd : xchg eax, ecx ; clc ; call rsp
0x00000000004b05f9 : xchg eax, ecx ; clc ; inc dword ptr [rcx + rdx*4 - 8] ; call rsp
0x00000000004b04bd : xchg eax, ecx ; clc ; inc dword ptr [rsi] ; xchg eax, ecx ; clc ; call qword ptr [rsi + 0x26fff890]
0x00000000004b047d : xchg eax, ecx ; clc ; jmp qword ptr [rax]
0x00000000004b0481 : xchg eax, ecx ; clc ; push qword ptr [rax + 0x40fff890] ; nop ; clc ; call rax
0x000000000043fd41 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000044fc1b : xchg eax, ecx ; retf 0
0x0000000000420dab : xchg eax, ecx ; retf 2
0x00000000004bfc71 : xchg eax, ecx ; sti ; lcall [rdx + rdx*4] ; sti ; call rsp
0x000000000043e46f : xchg eax, ecx ; sub eax, edx ; ret
0x00000000004114d2 : xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000004a7a3c : xchg eax, edi ; add al, 0 ; add byte ptr [rax - 0x7bf0df06], al ; retf 4
0x0000000000415b54 : xchg eax, edi ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000004d1695 : xchg eax, edi ; add byte ptr [rax], al ; or byte ptr [rcx - 4], al ; call rdi
0x000000000040e581 : xchg eax, edi ; add rdx, rdi ; jmp rdx
0x00000000004b0745 : xchg eax, edi ; call qword ptr [rdx + 0x12fff886]
0x00000000004b0741 : xchg eax, edi ; call qword ptr [rdx]
0x00000000004b08c1 : xchg eax, edi ; call rax
0x00000000004c34d5 : xchg eax, edi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4c34a3 ; mov ecx, 0x5b92ac50 ; retf
0x0000000000432315 : xchg eax, edi ; fiadd dword ptr [rdi] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000449f55 : xchg eax, edi ; je 0x449f64 ; add byte ptr [rax + 1], bh ; jmp 0x449f2d
0x00000000004b0881 : xchg eax, edi ; jmp rax
0x00000000004a529e : xchg eax, edi ; mov eax, 0x89000003 ; fmul dword ptr [rbx + rcx*4 + 0x34] ; ret 0xf41
0x0000000000425a75 : xchg eax, edi ; out 0, al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000042016b : xchg eax, edi ; ret 0x394c
0x0000000000420651 : xchg eax, edi ; ret 0xfae9
0x0000000000420c39 : xchg eax, edi ; ret 0xfbe9
0x00000000004c3e3d : xchg eax, edi ; retf 0xe152
0x000000000044d45b : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000004b10c9 : xchg eax, edi ; stc ; jmp rsi
0x000000000047e957 : xchg eax, edi ; test r9d, r9d ; jne 0x47e91a ; mov rax, rdx ; ret
0x00000000004c517b : xchg eax, edi ; xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000004c35d8 : xchg eax, edi ; xchg eax, esp ; ret
0x000000000048529f : xchg eax, edx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0xed75
0x0000000000498335 : xchg eax, edx ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000004b0479 : xchg eax, edx ; clc ; call qword ptr [rax + 0x20fff891]
0x00000000004b0535 : xchg eax, edx ; clc ; call rdx
0x00000000004b0475 : xchg eax, edx ; clc ; inc dword ptr [rax] ; xchg eax, edx ; clc ; call qword ptr [rax + 0x20fff891]
0x00000000004b04b5 : xchg eax, edx ; clc ; jmp rsi
0x00000000004b05f5 : xchg eax, edx ; clc ; push qword ptr [rcx + rdx*4 - 0x6ebb0008] ; clc ; call rsp
0x00000000004b0760 : xchg eax, edx ; cmp eax, -1 ; add al, byte ptr [rbx - 0x7d8d0008] ; clc ; jmp rdx
0x000000000040fd6d : xchg eax, edx ; insd dword ptr [rdi], dx ; add byte ptr [rax + 0x39], cl ; ret
0x000000000040fd66 : xchg eax, edx ; insd dword ptr [rdi], dx ; add byte ptr [rax - 0x39], cl ; rcl al, 0x92 ; insd dword ptr [rdi], dx ; add byte ptr [rax + 0x39], cl ; ret
0x000000000047a365 : xchg eax, edx ; insd dword ptr [rdi], dx ; add byte ptr [rax - 0x39], cl ; ret 0x8c20
0x0000000000414a72 : xchg eax, edx ; insd dword ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000004143f8 : xchg eax, edx ; insd dword ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; ret 0x294d
0x00000000004c4e9d : xchg eax, edx ; jae 0x4c4e7a ; push rsi ; pop rdx ; je 0x4c4e6f ; ret 0xacfc
0x0000000000420964 : xchg eax, edx ; jo 0x42097a ; add byte ptr [rax], al ; cmp rdx, r8 ; jne 0x42093b ; ret
0x00000000004c34dc : xchg eax, edx ; pop rbx ; retf
0x000000000048eaa6 : xchg eax, edx ; ret 0x2948
0x0000000000495bbe : xchg eax, edx ; ret 0x294c
0x0000000000406f18 : xchg eax, edx ; ret 0x8548
0x00000000004963c5 : xchg eax, edx ; ret 0x8949
0x000000000044d45e : xchg eax, edx ; ret 0xd029
0x00000000004c2f8f : xchg eax, edx ; ret 0xf869
0x000000000048a01a : xchg eax, edx ; retf 0x24
0x0000000000447e9d : xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000044b75a : xchg eax, edx ; shr bl, 0xb4 ; nop ; mov eax, 0x10 ; syscall
0x00000000004bfc75 : xchg eax, edx ; sti ; call rsp
0x000000000042c3cc : xchg eax, edx ; sub eax, edx ; ret
0x00000000004b0758 : xchg eax, edx ; test al, bh ; call qword ptr [rdx]
0x00000000004b0750 : xchg eax, edx ; test eax, edi ; call qword ptr [rdx]
0x00000000004b0748 : xchg eax, edx ; xchg al, bh ; call qword ptr [rdx]
0x00000000004b0740 : xchg eax, edx ; xchg eax, edi ; call qword ptr [rdx]
0x00000000004c377a : xchg eax, esi ; add al, 0x44 ; mov r10d, 0xcac982a4 ; call 0xffffffffaf0ed602
0x000000000042d850 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000435a83 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004d1545 : xchg eax, esi ; add byte ptr [rax], al ; fcom dword ptr [rsp + rdi*8] ; call qword ptr [rdx]
0x0000000000457a91 : xchg eax, esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000449494 : xchg eax, esi ; add rax, rsi ; jmp rax
0x00000000004a0e66 : xchg eax, esi ; call 0x44d933
0x000000000047c93e : xchg eax, esi ; cmp edi, eax ; dec dword ptr [rax + 1] ; ret
0x00000000004c5288 : xchg eax, esi ; jnp 0x4c52d7 ; retf 0x99e0
0x0000000000450b26 : xchg eax, esi ; jrcxz 0x450b33 ; dec dword ptr [rcx + rcx*4 - 1] ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x000000000042d90d : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042d86b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b04c4 : xchg eax, esi ; nop ; clc ; jmp qword ptr [rsi]
0x00000000004afb38 : xchg eax, esi ; out 0xf7, eax ; call qword ptr [rsi - 0x69000818]
0x000000000048f0fe : xchg eax, esi ; ret 0x8348
0x000000000044a0f1 : xchg eax, esi ; ret 0xc085
0x00000000004c582c : xchg eax, esi ; ret 0xcd11
0x000000000044a14f : xchg eax, esi ; ret 0xd284
0x00000000004011ee : xchg eax, esi ; retf
0x000000000042d8bc : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004c44dc : xchg eax, esi ; sbb eax, dword ptr [rdx + 0x2ff463c7] ; hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00000000004b11e1 : xchg eax, esi ; stc ; call rdx
0x00000000004b11d9 : xchg eax, esi ; stc ; dec eax ; xchg eax, ebp ; stc ; jmp qword ptr [rdx]
0x00000000004b1221 : xchg eax, esi ; stc ; jmp qword ptr [rdx]
0x00000000004b121d : xchg eax, esi ; stc ; ljmp [rdx - 0x6a] ; stc ; jmp qword ptr [rdx]
0x00000000004b10c5 : xchg eax, esi ; stc ; push qword ptr [rsi - 0x69] ; stc ; jmp rsi
0x000000000041be80 : xchg eax, esi ; xor edi, edi ; pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x000000000045b8db : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rbx + 0x63], cl ; xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x000000000046e267 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x00000000004c80d0 : xchg eax, esp ; add dword ptr [rax], eax ; add byte ptr [rsi - 0x67], bl ; call qword ptr [rcx]
0x0000000000487af4 : xchg eax, esp ; add eax, dword ptr [rax] ; mov eax, 0x15 ; syscall
0x0000000000458d48 : xchg eax, esp ; and al, 0x84 ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], r9d ; ret
0x0000000000458d66 : xchg eax, esp ; and al, 0x85 ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r9b, byte ptr [rax + 0x39] ; ret
0x0000000000458d84 : xchg eax, esp ; and al, 0x86 ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [rax + 0x39] ; ret
0x0000000000498778 : xchg eax, esp ; and eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; jmp 0x49879a
0x00000000004c941c : xchg eax, esp ; movsb byte ptr [rdi], byte ptr [rsi] ; hlt ; jmp rdi
0x000000000049e6e9 : xchg eax, esp ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004c5a3f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4c59d0 ; ret 0x48f
0x00000000004680c2 : xchg eax, esp ; ret
0x000000000045285b : xchg eax, esp ; ret 0x1f0f
0x000000000044b20b : xchg eax, esp ; ret 0x2044
0x000000000048b35c : xchg eax, esp ; ret 0x3d
0x000000000041dc9e : xchg eax, esp ; ret 0x3de9
0x000000000046f41f : xchg eax, esp ; ret 0x7f3c
0x0000000000498031 : xchg eax, esp ; ret 0x950f
0x0000000000403f44 : xchg eax, esp ; ret 0xb60f
0x0000000000447ea0 : xchg eax, esp ; ret 0xc085
0x000000000044b531 : xchg eax, esp ; ret 0xc221
0x0000000000480b45 : xchg eax, esp ; ret 0xc283
0x000000000044b048 : xchg eax, esp ; ret 0xca21
0x0000000000402523 : xchg eax, esp ; ret 0xd284
0x00000000004512e6 : xchg eax, esp ; ret 0xd5e9
0x00000000004a7feb : xchg eax, esp ; ret 0xf45
0x00000000004008dd : xchg eax, esp ; rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x00000000004240ea : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x000000000044ee54 : xchg eax, esp ; sub byte ptr [rax], al ; ret
0x0000000000420a99 : xchg eax, esp ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004b11cc : xchg eax, esp ; xchg eax, ebp ; stc ; call rdx
0x00000000004b1204 : xchg eax, esp ; xchg eax, ebp ; stc ; jmp qword ptr [rax]
0x00000000004c3463 : xchg eax, esp ; xlatb ; retf 0xa1eb
0x000000000046e512 : xchg ecx, esp ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x000000000041c0a4 : xchg edi, esp ; add al, byte ptr [rax] ; add dh, dh ; ret
0x00000000004c5656 : xchg esp, eax ; jb 0x4c56b4 ; call 0x4c168019
0x000000000041a3a5 : xchg esp, edx ; sub eax, dword ptr [rax] ; ret
0x00000000004c8fb4 : xchg spl, r14b ; call qword ptr [rdi]
0x00000000004bdab9 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000042ebb9 : xlatb ; add r9, r11 ; jmp r9
0x0000000000431dd5 : xlatb ; fild word ptr [rdi] ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000047fc4f : xlatb ; ja 0x47fc7c ; ret
0x0000000000448203 : xlatb ; jb 0x44820e ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000040e86d : xlatb ; jmp rdi
0x00000000004c4003 : xlatb ; jo 0x4c407f ; mov ebp, 0xfb67d10d ; ret
0x0000000000497b72 : xlatb ; mov byte ptr [rsi], al ; jne 0x497b58 ; mov rax, rsi ; ret
0x000000000044a311 : xlatb ; mov eax, esi ; syscall
0x000000000044a320 : xlatb ; mov eax, r8d ; syscall
0x00000000004040f5 : xlatb ; mov qword ptr [rbp - 0x78], rdx ; call 0x420b17
0x00000000004c3410 : xlatb ; out 0xb3, al ; retf 0xe80
0x000000000042c4f4 : xlatb ; ret
0x00000000004c54a6 : xlatb ; ret 0x4e27
0x000000000047d4c7 : xlatb ; ret 0x94c
0x000000000042c4df : xlatb ; ret 0xc085
0x0000000000427000 : xlatb ; ret 0xc148
0x000000000042d164 : xlatb ; ret 0xe883
0x0000000000441cb4 : xlatb ; ret 0xf66
0x000000000042d328 : xlatb ; ret 0xff2d
0x00000000004415ed : xlatb ; retf
0x00000000004c3464 : xlatb ; retf 0xa1eb
0x000000000047d5a4 : xlatb ; retf 0xc148
0x000000000047d742 : xlatb ; retf 0xc985
0x00000000004c4392 : xlatb ; retf 0xdf7f
0x0000000000425c80 : xlatb ; retf 0xead3
0x000000000047d615 : xlatb ; retf 0xfdc5
0x000000000042c8c1 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000047d675 : xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000042cb1f : xlatb ; rol dword ptr [rbp + 0x311b75c0], 0xc0 ; vzeroupper ; ret
0x000000000042c6a3 : xlatb ; rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x000000000042cbe2 : xlatb ; rol dword ptr [rbp - 0x3a378a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000441a32 : xlatb ; rol dword ptr [rbp - 0x3a678a40], 0xfd ; xlatb ; ret 0xc085
0x000000000042c673 : xlatb ; rol dword ptr [rbp - 0x5c7af040], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000442322 : xlatb ; ror byte ptr [rax - 0x73], 0x76 ; adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x000000000044235e : xlatb ; ror byte ptr [rax - 0x73], 0x76 ; adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000445e56 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000426ee6 : xlatb ; sal bh, 1 ; ret 0x8000
0x0000000000426da6 : xlatb ; sal bh, 1 ; ret 0xc000
0x0000000000426c66 : xlatb ; sal bh, 1 ; ret 0xe000
0x0000000000426b26 : xlatb ; sal bh, 1 ; ret 0xf000
0x00000000004269e6 : xlatb ; sal bh, 1 ; ret 0xf800
0x00000000004268a6 : xlatb ; sal bh, 1 ; ret 0xfc00
0x0000000000426766 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000426626 : xlatb ; sal bh, 1 ; ret 0xff00
0x00000000004264e6 : xlatb ; sal bh, 1 ; ret 0xff80
0x00000000004263a6 : xlatb ; sal bh, 1 ; ret 0xffc0
0x0000000000426266 : xlatb ; sal bh, 1 ; ret 0xffe0
0x0000000000426126 : xlatb ; sal bh, 1 ; ret 0xfff0
0x0000000000425fe6 : xlatb ; sal bh, 1 ; ret 0xfff8
0x0000000000425ea6 : xlatb ; sal bh, 1 ; ret 0xfffc
0x0000000000425d66 : xlatb ; sal bh, 1 ; ret 0xfffe
0x0000000000445e52 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x000000000047d465 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000047d476 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000419984 : xlatb ; sub eax, dword ptr [rax] ; ret
0x0000000000425a5a : xor ah, byte ptr [rdi] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004b0aac : xor ah, dh ; clc ; inc eax ; stc ; call rax
0x00000000004d2570 : xor al, 0 ; add byte ptr [rax], al ; cmp byte ptr [rsi + 0x3e780000], ah ; std ; call qword ptr [rdx]
0x00000000004c2f8a : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00000000004c5026 : xor al, 0x5c ; sbb ebp, ebx ; retf
0x000000000045b8e2 : xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x00000000004c34d2 : xor al, 0xb5 ; mov dl, 0x97 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4c34a6 ; mov ecx, 0x5b92ac50 ; retf
0x0000000000478c1b : xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000476318 : xor al, 0xc5 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x4225d8
0x00000000004b1a3c : xor al, 0xc8 ; stc ; call rax
0x00000000004b1a38 : xor al, 0xc8 ; stc ; push qword ptr [rax + rcx*8] ; stc ; call rax
0x00000000004b1a34 : xor al, 0xc8 ; stc ; push qword ptr [rax + rcx*8] ; stc ; push qword ptr [rax + rcx*8] ; stc ; call rax
0x00000000004b1a24 : xor al, 0xc8 ; stc ; push rax ; retf 0xfff9
0x00000000004a9582 : xor al, 0xcb ; mov rsi, qword ptr [r14] ; call r12
0x00000000004c416a : xor al, 0xd8 ; ret
0x00000000004ce2ec : xor al, 0xe3 ; clc ; call qword ptr [rcx]
0x000000000045aae5 : xor al, 0xf0 ; test rsi, rsi ; je 0x45aaf5 ; call rsi
0x000000000045aae1 : xor al, 0xf3 ; mov rsi, qword ptr [rax + r14*8] ; test rsi, rsi ; je 0x45aaf9 ; call rsi
0x000000000045465e : xor al, 0xf6 ; ret
0x00000000004afdd5 : xor al, 0xf8 ; jmp rax
0x00000000004615cc : xor al, 1 ; jmp 0x45f826
0x000000000048f2af : xor al, 3 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004cfad0 : xor al, bl ; cli ; jmp rdx
0x000000000044ea5a : xor al, byte ptr [rsi] ; add byte ptr [rax + 0xf], cl ; ret
0x000000000044ea9d : xor al, byte ptr cs:[rsi] ; add byte ptr [rax + 0xf], cl ; ret
0x000000000047f340 : xor al, ch ; retf 0xfa17
0x00000000004afdb1 : xor bh, al ; call qword ptr [rax]
0x00000000004afdd1 : xor bh, al ; inc dword ptr [rax] ; xor al, 0xf8 ; jmp rax
0x00000000004afed5 : xor bh, al ; jmp qword ptr [rax]
0x00000000004afdf1 : xor bh, al ; jmp rax
0x00000000004c7aa0 : xor bh, bh ; std ; call rax
0x000000000042c72c : xor bl, al ; nop ; xor eax, eax ; ret
0x00000000004cd4d1 : xor bl, dh ; jmp qword ptr [rbx]
0x000000000042c5fd : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x00000000004125f2 : xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x0000000000448fe4 : xor byte ptr [r8 - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x000000000045d388 : xor byte ptr [rax + 0x39], cl ; ret 0x8d48
0x0000000000441461 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x00000000004418c2 : xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x00000000004125f3 : xor byte ptr [rax + 1], cl ; ret 0x8b49
0x0000000000480404 : xor byte ptr [rax + 1], cl ; retf
0x00000000004cc36c : xor byte ptr [rax + rax], al ; ror bl, 0xf7 ; call qword ptr [rax]
0x00000000004561bf : xor byte ptr [rax - 0x75], cl ; je 0x4561f4 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000044bf7a : xor byte ptr [rax - 0x75], cl ; jge 0x44bf30 ; mov r12d, r14d ; call r15
0x000000000047a237 : xor byte ptr [rax - 0x75], cl ; test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000044201f : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000047e43f : xor byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x00000000004a6438 : xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x000000000047b9d2 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x000000000044ec6f : xor byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000404228 : xor byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000448fe5 : xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x000000000041294b : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040fc99 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000040fbd3 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000047e68c : xor byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000040fcbf : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x00000000004494e3 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004c8b88 : xor byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; or al, 0 ; add byte ptr [rax + 0x72], al ; hlt ; jmp qword ptr [rax]
0x000000000047b90a : xor byte ptr [rax], al ; je 0x47b915 ; ret
0x00000000004a999e : xor byte ptr [rbp + 0x27], dh ; mov rax, qword ptr [rsi + 0x10] ; ret
0x00000000004a6800 : xor byte ptr [rbp + 0x35], dh ; mov rax, qword ptr [rsi + 0xb0] ; ret
0x0000000000448455 : xor byte ptr [rbp + 0xf], al ; adc dword ptr [rbx], eax ; ret
0x00000000004b03e0 : xor byte ptr [rbp - 8], bl ; jmp qword ptr [rax + 0x10fff85c]
0x00000000004682c9 : xor byte ptr [rbx + 0x291c2454], cl ; ret 0xe683
0x0000000000415e66 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000045103a : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000418ccd : xor byte ptr [rbx - 0x438a0008], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000462c39 : xor byte ptr [rbx - 0x78f0f608], al ; lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x000000000046e20e : xor byte ptr [rbx - 0x79f0f608], al ; ret
0x00000000004b06e4 : xor byte ptr [rbx - 0x7d5f0008], al ; clc ; call qword ptr [rax]
0x00000000004a722c : xor byte ptr [rbx], ah ; add byte ptr [rax], cl ; mov byte ptr [rip + 0x2330b9], 8 ; ret
0x00000000004a7233 : xor byte ptr [rbx], ah ; add byte ptr [rax], cl ; ret
0x00000000004a6255 : xor byte ptr [rcx + 0x21], cl ; ror byte ptr [rax + 0x21], cl ; ret 0xc148
0x0000000000482903 : xor byte ptr [rcx + 0x29], cl ; ret
0x0000000000436d7c : xor byte ptr [rcx + 0x63490007], bl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000047b95c : xor byte ptr [rcx + rcx*4 + 0x60], cl ; cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000040525b : xor byte ptr [rcx - 0x75], al ; push rdi ; adc byte ptr [rdi], cl ; retf 0xd289
0x00000000004c346e : xor byte ptr [rcx], ah ; retf
0x000000000041294c : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000413dc7 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004114d3 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000004afd9c : xor byte ptr [rcx], al ; clc ; inc dword ptr [rax - 0x2f0007fe] ; add edi, eax ; jmp qword ptr [rax]
0x00000000004afe40 : xor byte ptr [rcx], bh ; clc ; call qword ptr [rax]
0x00000000004d2e6c : xor byte ptr [rdi + 0x7f200000], ch ; std ; call qword ptr [rdx]
0x000000000047aab0 : xor byte ptr [rdi], cl ; ret 0x4389
0x00000000004b09d4 : xor byte ptr [rdx - 0x4bbf0008], dh ; clc ; jmp rax
0x00000000004b08e8 : xor byte ptr [rdx - 0x7e5f0008], al ; clc ; inc dword ptr [rax] ; clc ; jmp qword ptr [rax]
0x00000000004b0184 : xor byte ptr [rdx - 8], ch ; inc eax ; imul edi, eax, 0xf86950ff ; jmp rax
0x00000000004afc10 : xor byte ptr [rdx], cl ; clc ; push rax ; or edi, eax ; call rax
0x00000000004cd18f : xor byte ptr [rsi + 0x380e4106], al ; add dword ptr [rdi], 3 ; ret 0xa01
0x00000000004c5ff6 : xor byte ptr [rsi + 0x4ce2e5dd], 0x67 ; add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x000000000042d5ff : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042d5fa : xor byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047d42c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042c5fe : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000004c517e : xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000004aff14 : xor byte ptr [rsi], ah ; clc ; inc dword ptr [rax - 0x2f0007d9] ; sub al, bh ; jmp qword ptr [rax]
0x00000000004c345f : xor byte ptr [rsi], cl ; or eax, 0xcad7947e ; jmp 0x4c340f
0x00000000004a3de0 : xor byte ptr [rsp + rcx + 0x48], dh ; lea edi, [rip + 0x2343d6] ; call 0xc
0x00000000004b0a7c : xor cl, bh ; clc ; inc dword ptr [rax - 0x2f000706] ; sti ; clc ; jmp qword ptr [rax]
0x000000000041337d : xor cl, byte ptr [rax - 0x77] ; ret 0x2948
0x0000000000488003 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000000000045cef7 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x00000000004a8a2e : xor cl, byte ptr [rax] ; jne 0x4a8a53 ; mov rax, qword ptr [rax] ; ret
0x0000000000406f40 : xor cl, ch ; ret
0x000000000045bd49 : xor dh, dh ; ret 0x4002
0x00000000004afdb0 : xor dil, al ; call qword ptr [rax]
0x00000000004afdd0 : xor dil, al ; inc dword ptr [rax] ; xor al, 0xf8 ; jmp rax
0x00000000004ce4b0 : xor dl, ah ; std ; call rdx
0x00000000004afd48 : xor dl, bh ; idiv edi ; cmp bl, 0xf7 ; call rax
0x0000000000424aba : xor dl, byte ptr [rbx] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000048a3be : xor dl, dh ; jmp r11
0x000000000048a4d0 : xor dl, dh ; ret
0x0000000000470356 : xor dword ptr [rax - 0x75], ecx ; adc byte ptr [r8 - 0x75], cl ; push rbx ; sbb byte ptr [rax + 1], cl ; ret 0x14c
0x000000000046789d : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0xe7e9
0x00000000004c4416 : xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x000000000044dc3f : xor dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000004a8a9d : xor dword ptr [rax], ecx ; jne 0x4a8aac ; mov qword ptr [rax], rdx ; ret
0x000000000041d1b9 : xor dword ptr [rbx - 0x76b7f020], eax ; ret 0x8948
0x000000000044a916 : xor dword ptr [rcx - 0x2976b739], ecx ; mov eax, 5 ; syscall
0x0000000000424b42 : xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000425801 : xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000004bf958 : xor dword ptr [rdx], ebp ; sti ; inc dword ptr [rdx + 0x44fffb1d] ; and ebx, edi ; jmp rcx
0x00000000004bf8d0 : xor dword ptr [rdx], ebp ; sti ; jmp rcx
0x00000000004bf8cc : xor dword ptr [rdx], ebp ; sti ; push qword ptr [rcx] ; sub bh, bl ; jmp rcx
0x00000000004bf8c8 : xor dword ptr [rdx], ebp ; sti ; push qword ptr [rcx] ; sub bh, bl ; push qword ptr [rcx] ; sub bh, bl ; jmp rcx
0x000000000044c963 : xor dword ptr [rsi - 0x38b7ffd8], ebp ; ret
0x00000000004a09f1 : xor eax, 0x148b0001 ; xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000046d21e : xor eax, 0x267bfd ; jmp rax
0x0000000000462f33 : xor eax, 0x2717e8 ; mov rax, qword ptr [rsi + rax*8] ; xor esi, esi ; jmp rax
0x000000000041755d : xor eax, 0x2c28ce ; jne 0x41757b ; jmp 0x417595
0x0000000000404ead : xor eax, 0x2d4ace ; jne 0x404ecb ; jmp 0x404ee5
0x00000000004afe59 : xor eax, 0x3720fff8 ; clc ; inc dword ptr [rax] ; cmp eax, edi ; call rax
0x00000000004afe39 : xor eax, 0x3750fff8 ; clc ; push qword ptr [rax] ; cmp eax, edi ; call qword ptr [rax]
0x00000000004c411a : xor eax, 0x444be0a8 ; sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000448a13 : xor eax, 0x48000002 ; mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000046e1e7 : xor eax, 0x48002670 ; mov eax, dword ptr [rax + rdi*8] ; jmp rax
0x00000000004493d2 : xor eax, 0x67849 ; movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x000000000044ba8a : xor eax, 0x7d8b48 ; call r12
0x00000000004671aa : xor eax, 0x89ffffe6 ; ret
0x00000000004a0a25 : xor eax, 0xc8b0001 ; mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x000000000049758a : xor eax, dword ptr [0x28] ; jne 0x4975d8 ; leave ; ret
0x000000000040fc96 : xor eax, dword ptr [0x30] ; call rax
0x0000000000416a80 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004247f4 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000417864 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045e439 : xor eax, eax ; add rsp, 8 ; ret
0x00000000004ad2bf : xor eax, eax ; call 0x410d9a
0x0000000000419af7 : xor eax, eax ; cmp esi, -1 ; setne al ; neg eax ; ret
0x000000000047fc4b : xor eax, eax ; cmp rdi, rdx ; ja 0x47fc80 ; ret
0x000000000044d807 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x0000000000415a10 : xor eax, eax ; jmp 0x4159da
0x000000000045eb1c : xor eax, eax ; jmp 0x45eae4
0x000000000045eb1b : xor eax, eax ; jmp 0x45eae5
0x000000000047560d : xor eax, eax ; jmp 0x471868
0x0000000000480038 : xor eax, eax ; leave ; ret
0x000000000046a177 : xor eax, eax ; mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047fb8a : xor eax, eax ; mov rdx, rsp ; mov esi, 0x5401 ; mov eax, ecx ; syscall
0x000000000046e829 : xor eax, eax ; movzx eax, byte ptr [rdi + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x000000000047d212 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004070df : xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000048b3fc : xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000407abc : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004514f1 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000415abb : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040ffa5 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000424b8c : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000414132 : xor eax, eax ; pop rbx ; ret
0x000000000040feed : xor eax, eax ; ret
0x000000000042720e : xor eax, eax ; sub eax, ecx ; ret
0x000000000044ab2a : xor eax, eax ; syscall
0x0000000000415ae0 : xor eax, eax ; test rdx, rdx ; jne 0x415af8 ; ret
0x000000000042caec : xor eax, eax ; vzeroupper ; ret
0x000000000047e247 : xor eax, eax ; xor ecx, ecx ; xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x00000000004afe71 : xor eax, edi ; jmp qword ptr [rax]
0x00000000004afe91 : xor eax, edi ; jmp rax
0x000000000040ee01 : xor eax, edx ; movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x40eded ; ret
0x0000000000413bc4 : xor ebp, dword ptr [rax + rax] ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000045a6a8 : xor ebp, ecx ; ret 0xfffd
0x00000000004a1533 : xor ebx, ebx ; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000484510 : xor ebx, ebx ; jmp 0x4844d9
0x00000000004a127d : xor ebx, ebx ; lea rdx, [rax + 8] ; lea rcx, [rdx + rcx*8] ; jmp 0x4a129d
0x000000000047c521 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000045a3a6 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044bb3f : xor ecx, dword ptr [rax - 0x75] ; jl 0x44bb73 ; or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x000000000042f0b9 : xor ecx, dword ptr [rbx] ; or byte ptr [rax], al ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000046613c : xor ecx, dword ptr [rdi] ; mov esi, 0xc08349c8 ; add dword ptr [rcx], edi ; retf
0x0000000000402347 : xor ecx, dword ptr [rdi] ; test dword ptr [rdx], edx ; add al, byte ptr [rax] ; add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000459379 : xor ecx, ecx ; call r15
0x0000000000494fb8 : xor ecx, ecx ; mov rdi, rbx ; call 0x492d4b
0x00000000004502be : xor ecx, ecx ; movzx eax, al ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x000000000046d738 : xor ecx, ecx ; movzx eax, byte ptr [rdi + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x000000000047e249 : xor ecx, ecx ; xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x000000000044dc1c : xor edi, dword ptr [rax] ; ret 0x2f75
0x00000000004afe55 : xor edi, eax ; inc dword ptr [rax + 0x35] ; clc ; jmp qword ptr [rax]
0x0000000000402558 : xor edi, edi ; mov eax, edx ; syscall
0x000000000044b8b6 : xor edi, edi ; or r10d, 0x40 ; mov eax, ecx ; syscall
0x000000000041be81 : xor edi, edi ; pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x000000000044b69c : xor edi, edi ; syscall
0x00000000004ad2bd : xor edi, edi ; xor eax, eax ; call 0x410d9c
0x000000000040fbd0 : xor edx, dword ptr [0x30] ; call rdx
0x000000000040fcbc : xor edx, dword ptr [0x30] ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x00000000004502c3 : xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x0000000000488980 : xor edx, edx ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000449508 : xor edx, edx ; and eax, 0x3fffc00 ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000044ee9c : xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x44ee8c
0x0000000000479b13 : xor edx, edx ; div r13 ; mov rbp, rax ; jmp 0x479ae8
0x00000000004678f3 : xor edx, edx ; div r8d ; add r9d, eax ; mov eax, r9d ; ret
0x0000000000418433 : xor edx, edx ; jmp rax
0x000000000047e24b : xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x000000000044b693 : xor edx, edx ; mov esi, edi ; mov eax, 0x12e ; xor edi, edi ; syscall
0x000000000042073c : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000449520 : xor edx, edx ; pop rbx ; and eax, 0x7ff80000 ; div ecx ; mov eax, eax ; ret
0x0000000000482da6 : xor esi, esi ; call 0x4004a9
0x000000000049540f : xor esi, esi ; jmp 0x494ed0
0x0000000000462f3c : xor esi, esi ; jmp rax
0x000000000041ef77 : xor esi, esi ; mov dword ptr fs:[rax], 0xc ; mov rax, rsi ; ret
0x000000000049540e : xor r14d, r14d ; jmp 0x494ed1
0x000000000046e828 : xor r8d, r8d ; movzx eax, byte ptr [rdi + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x000000000047e246 : xor r8d, r8d ; xor ecx, ecx ; xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000459378 : xor r9d, r9d ; call r15
0x00000000004a09f0 : xor rax, 0x148b0001 ; xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000497589 : xor rax, qword ptr [0x28] ; jne 0x4975d9 ; leave ; ret
0x000000000040fc95 : xor rax, qword ptr [0x30] ; call rax
0x0000000000497588 : xor rax, qword ptr fs:[0x28] ; jne 0x4975da ; leave ; ret
0x000000000040fc94 : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000445e70 : xor rax, rax ; ret
0x000000000040ee00 : xor rax, rdx ; movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x40edee ; ret
0x000000000040fbcf : xor rdx, qword ptr [0x30] ; call rdx
0x000000000040fcbb : xor rdx, qword ptr [0x30] ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000040fbce : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 16125
