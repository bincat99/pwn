Gadgets information
============================================================
0x00000000000802ca : adc ah, byte ptr [rcx + 0x63480012] ; add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000008f121 : adc al, 0 ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000cb119 : adc al, 0 ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000017dd1f : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017dd89 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000009abc4 : adc al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rip + 0x14ca48]
0x00000000000989ca : adc al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000101bef : adc al, 0 ; add byte ptr [rax], al ; add dword ptr [rdx + 2], edi ; cmove eax, edx ; ret
0x000000000013cc34 : adc al, 0 ; add byte ptr [rax], al ; add edx, 1 ; syscall
0x0000000000113220 : adc al, 0 ; add byte ptr [rax], al ; sub edx, eax ; test eax, eax ; cmovns eax, edx ; ret
0x00000000001134ee : adc al, 0 ; add byte ptr [rax], al ; syscall
0x00000000000a8ff8 : adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000009a1db : adc al, 0 ; add dword ptr [rax - 0x77], ecx ; ret 0x4574
0x000000000009b5cb : adc al, 0 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x00000000000437fa : adc al, 0 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000436cc : adc al, 0 ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004396c : adc al, 0 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000009d4f8 : adc al, 0 ; add rsp, 8 ; ret
0x000000000009c1b5 : adc al, 0 ; call qword ptr [rax]
0x000000000009a1f6 : adc al, 0 ; jae 0x9a220 ; lea rax, [rax - 8] ; ret
0x00000000000642d1 : adc al, 0 ; jmp 0x6429b
0x00000000000642d0 : adc al, 0 ; jmp 0x6429c
0x0000000000094f9d : adc al, 0 ; jne 0x94f95 ; pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x0000000000094f9c : adc al, 0 ; jne 0x94f96 ; pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x0000000000098034 : adc al, 0 ; jne 0x9804d ; jmp 0x98067
0x00000000000980db : adc al, 0 ; jne 0x980f2 ; jmp 0x9810c
0x00000000000642ca : adc al, 0 ; lea rsi, [rip + 0x144ded] ; jmp 0x642a2
0x00000000000642c9 : adc al, 0 ; lea rsi, [rip + 0x144ded] ; jmp 0x642a3
0x00000000000999dd : adc al, 0 ; mov dword ptr fs:[rax], 0xc ; xor eax, eax ; pop rbx ; ret
0x000000000009c605 : adc al, 0 ; mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x0000000000098a39 : adc al, 0 ; mov qword ptr [rax], rdi ; ret
0x000000000009d4af : adc al, 0 ; mov qword ptr [rip + 0x14a1f0], rax ; ret
0x0000000000096520 : adc al, 0 ; mov qword ptr [rsp + 8], rdx ; xor edi, edi ; call qword ptr [rax]
0x0000000000094119 : adc al, 0 ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x94132 ; call rax
0x000000000006406b : adc al, 0 ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x0000000000064bd2 : adc al, 0 ; movzx eax, al ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000065ce8 : adc al, 0 ; movzx eax, al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000009d4b6 : adc al, 0 ; ret
0x000000000009bfa2 : adc al, 0 ; test eax, eax ; je 0x9bffc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e2984 : adc al, 0x10 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000d2994 : adc al, 0x11 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000005c2a1 : adc al, 0x11 ; mov byte ptr [rsi], dl ; cmp rdi, r8 ; jae 0x5c29c ; mov rax, rsi ; ret
0x0000000000121b0b : adc al, 0x11 ; test edx, edx ; jne 0x121b1e ; ret
0x000000000012236b : adc al, 0x11 ; test edx, edx ; jne 0x12237e ; ret
0x0000000000034deb : adc al, 0x11 ; test edx, edx ; jne 0x34dfe ; ret
0x0000000000076bfc : adc al, 0x13 ; add al, ch ; retf
0x0000000000163a15 : adc al, 0x13 ; jmp rdx
0x00000000000b991c : adc al, 0x16 ; str word ptr [rbx + 0x63] ; or al, 0x83 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000a8a45 : adc al, 0x16 ; sub eax, edx ; ret
0x000000000018160c : adc al, 0x16 ; sub eax, edx ; vzeroupper ; ret
0x000000000017c630 : adc al, 0x16 ; test r8d, r8d ; je 0x17c642 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000017d615 : adc al, 0x16 ; test r8d, r8d ; je 0x17d627 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000108884 : adc al, 0x24 ; call 0x2531c
0x000000000003d3bd : adc al, 0x24 ; call 0x39ec4
0x0000000000030f94 : adc al, 0x24 ; jmp 0x30f5d
0x0000000000095b22 : adc al, 0x24 ; jmp 0x95971
0x0000000000055aab : adc al, 0x24 ; lea r10, [rip + 0x159f58] ; jmp 0x55a83
0x000000000014f515 : adc al, 0x24 ; mov rcx, qword ptr [rsp + 8] ; call 0x13b789
0x000000000010c2d1 : adc al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x10c2f5 ; add rsp, 0x28 ; ret
0x000000000010c598 : adc al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x10c5b1 ; add rsp, 0x18 ; ret
0x0000000000135813 : adc al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x13584c ; add rsp, 0x38 ; ret
0x000000000013d93a : adc al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x13d953 ; add rsp, 0x18 ; ret
0x000000000015af78 : adc al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x15afb8 ; add rsp, 0x18 ; ret
0x000000000006397d : adc al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x639a3 ; add rsp, 0x18 ; ret
0x00000000000d2a1b : adc al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xd2a49 ; add rsp, 0x28 ; ret
0x00000000000d8c92 : adc al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xd8cab ; add rsp, 0x18 ; ret
0x00000000000dba62 : adc al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xdba7b ; add rsp, 0x18 ; ret
0x00000000000472e1 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x00000000000472a0 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x00000000000b96b3 : adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x000000000008c190 : adc al, 0x31 ; ror byte ptr [rax - 0x7d], 0x7f ; sbb byte ptr [rax], al ; setne al ; ret
0x0000000000181c2d : adc al, 0x3a ; sub eax, edx ; vzeroupper ; ret
0x00000000001505fb : adc al, 0x41 ; call qword ptr [rdx]
0x0000000000044f9e : adc al, 0x44 ; mov edi, esp ; mov eax, 0x81 ; syscall
0x000000000008d758 : adc al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b6c20 : adc al, 0x48 ; lea eax, [rdi + 0x14] ; ret
0x00000000000b7a83 : adc al, 0x48 ; lea eax, [rdi + 0x15] ; ret
0x00000000000aad0b : adc al, 0x48 ; lea eax, [rdi + rax + 0x30] ; ret
0x0000000000084d0b : adc al, 0x48 ; lea ecx, [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x00000000001023e2 : adc al, 0x48 ; lea edi, [rbp - 0x14] ; call 0x2519c
0x00000000000b5ee1 : adc al, 0x48 ; lea edi, [rdi + 0x14] ; jne 0xb653b ; ret
0x00000000000b75f5 : adc al, 0x48 ; lea edi, [rdi + 0x14] ; jne 0xb7d5b ; ret
0x0000000000090bfb : adc al, 0x48 ; mov eax, dword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000026b60 : adc al, 0x48 ; mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000012c883 : adc al, 0x74 ; adc byte ptr [rbx + 0x31], bl ; rol byte ptr [rcx + 0x5c], 0x5d ; ret
0x000000000013fe5d : adc al, 0x83 ; ret
0x00000000001825ab : adc al, 0x83 ; shl byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x0000000000147080 : adc al, 0x88 ; add rdx, r8 ; jmp rdx
0x0000000000110e28 : adc al, 0x8b ; jge 0x110e5a ; call 0x10d896
0x0000000000141f44 : adc al, 0x8b ; jl 0x141f76 ; adc byte ptr [rax + 0x81], bh ; syscall
0x00000000001473a6 : adc al, 0x8b ; push rbx ; xor byte ptr [rdi], cl ; retf 0x5089
0x00000000000a7184 : adc al, 0x90 ; add rdx, r8 ; jmp rdx
0x00000000000a70b3 : adc al, 0x90 ; add rdx, rax ; jmp rdx
0x0000000000087451 : adc al, 0x90 ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000017f1b0 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000017d8de : adc al, 0x91 ; sub eax, edx ; ret
0x0000000000163a11 : adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000055f7c : adc al, 0x96 ; add rdx, rsi ; cmp ecx, 0x2f ; jmp rdx
0x0000000000041797 : adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x00000000000a7647 : adc al, 0xa ; jmp r10
0x00000000000a8bb3 : adc al, 0xa ; sub eax, edx ; ret
0x000000000018178d : adc al, 0xa ; sub eax, edx ; vzeroupper ; ret
0x00000000001218f7 : adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000000562b1 : adc al, 0xc0 ; mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; ret
0x00000000000562b5 : adc al, 0xc6 ; xor eax, eax ; ret
0x000000000018c628 : adc al, 0xc7 ; add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000015e764 : adc al, 0xc7 ; setne al ; movzx eax, al ; ret
0x000000000015e784 : adc al, 0xc7 ; xor eax, eax ; ret
0x0000000000056521 : adc al, 0xc8 ; mov qword ptr [rax + rcx*8], rdx ; xor eax, eax ; ret
0x0000000000056525 : adc al, 0xc8 ; xor eax, eax ; ret
0x0000000000196121 : adc al, 0xd8 ; test rdx, rdx ; je 0x196131 ; call rdx
0x00000000000ba064 : adc al, 0xe ; cmp rdi, rdx ; jb 0xba077 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000017b9f1 : adc al, 0xe ; sub eax, edx ; ret
0x00000000001827ba : adc al, 0xe ; sub eax, edx ; vzeroupper ; ret
0x00000000000cdb10 : adc al, 0xe ; test edx, edx ; jne 0xcdb0d ; ret
0x00000000000cdb10 : adc al, 0xe ; test edx, edx ; jne 0xcdb0e ; ret
0x0000000000037890 : adc al, 0xf ; retf 0x5589
0x00000000001471e6 : adc al, 0xf ; retf 0xd189
0x000000000016478b : adc al, 0xf ; sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000000b75f9 : adc al, 0xf ; test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x0000000000049c17 : adc al, 0xf ; test ecx, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000049737 : adc al, 0xf ; test esi, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000c8688 : adc al, 0xf ; xchg eax, ebx ; ret 0x3948
0x00000000000f3d5b : adc al, 0xf3 ; call rcx
0x00000000000b6259 : adc al, 0xf3 ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x0000000000084eeb : adc al, 0xf6 ; ret 0x7420
0x000000000012c65d : adc al, 0xfd ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, edx ; syscall
0x00000000000dbea2 : adc al, 0xff ; pop rbx ; pop rbp ; lea rax, [rax + rdx*8] ; ret
0x000000000004968f : adc al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000190438 : adc al, 1 ; add byte ptr [rax], al ; ret
0x000000000011dea1 : adc al, 1 ; add byte ptr [rax], al ; syscall
0x000000000009a282 : adc al, 1 ; cmp dl, r8b ; jne 0x9a27b ; sub rax, 0x10 ; ret
0x0000000000119257 : adc al, 2 ; add byte ptr [rax], al ; mov rdi, qword ptr [r14] ; call r12
0x0000000000167b54 : adc al, 5 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000a6e86 : adc al, 7 ; cmp edx, esi ; je 0xa6e86 ; ret
0x00000000000a6db2 : adc al, 7 ; test dl, dl ; jne 0xa6dae ; ret
0x00000000000bb479 : adc al, 8 ; add rax, 4 ; mov dword ptr [rax], edx ; test edx, edx ; jne 0xbb484 ; ret
0x0000000000052ae1 : adc al, 9 ; ret 0x8d74
0x0000000000181823 : adc al, ah ; movabs eax, dword ptr [0xdafdc520124c7465] ; ret 0xf5c5
0x00000000001288c8 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; mov ebp, 0xffffff78 ; call 0x25324
0x0000000000082b61 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000017dec7 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017df31 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000010b3c1 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000a2578 : adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; ret
0x00000000000ae7de : adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000006f573 : adc al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0x4904
0x00000000000884f9 : adc al, byte ptr [rax] ; call 0x34fd4
0x00000000000bbd3a : adc al, byte ptr [rax] ; jmp 0xbbc02
0x00000000000884f2 : adc al, byte ptr [rax] ; lea rdi, [rip + 0x128415] ; call 0x34fdb
0x00000000000314ef : adc al, byte ptr [rax] ; mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x000000000007e160 : adc al, byte ptr [rax] ; mov r9, rsi ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdx ; jmp rax
0x0000000000030ca7 : adc al, byte ptr [rax] ; mov rdi, rbx ; call r12
0x000000000007e1ad : adc al, byte ptr [rax] ; movsxd rax, dword ptr [rax + rcx*4] ; add rax, rdx ; jmp rax
0x0000000000080a3f : adc al, byte ptr [rax] ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00000000000802cc : adc al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000080213 : adc al, byte ptr [rax] ; movzx eax, al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000f05fd : adc al, byte ptr [rbx + 0x557403f8] ; xor eax, eax ; pop rbx ; ret
0x000000000014c4d1 : adc al, byte ptr [rbx - 0x7bf0fb06] ; ret 0xfffe
0x0000000000168d2a : adc al, byte ptr [rbx] ; add eax, 0x14634900 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000011ac2a : adc al, byte ptr [rcx] ; add byte ptr [rax], al ; call rax
0x00000000000b1f54 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x0000000000187e9a : adc al, byte ptr [rdx] ; add byte ptr [rax], al ; vzeroupper ; ret
0x000000000018483f : adc al, byte ptr cs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000f88f0 : adc al, ch ; and cl, dl ; dec dword ptr [rcx - 0x75] ; jg 0xf891e ; call 0x25324
0x000000000009187f : adc al, ch ; cmp dword ptr [rdx], -7 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e1307 : adc al, ch ; ret
0x00000000000fec37 : adc al, ch ; retf
0x00000000000f8864 : adc al, ch ; scasb al, byte ptr [rdi] ; retf 0xfff2
0x0000000000058637 : adc bh, al ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x000000000014f2f3 : adc bh, byte ptr [rax + 1] ; movups xmmword ptr [r8 + 0x20], xmm2 ; ret
0x0000000000128e98 : adc bh, dh ; ret 0x8080
0x0000000000042ab8 : adc bl, bl ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x00000000000a00f5 : adc bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000150716 : adc bl, byte ptr [rdx + 0x31] ; rcr byte ptr [rcx - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x3d83
0x00000000000b50c5 : adc bl, ch ; call 0xffffffffc3dbda1a
0x00000000000b4fe5 : adc bl, ch ; call 0xffffffffc403d93a
0x00000000000b80b5 : adc bl, ch ; call 0xffffffffc4040a0a
0x0000000000056fb2 : adc bl, ch ; jno 0x57008 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000092730 : adc bl, ch ; ret
0x00000000000b79f6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; lea rax, [rdi + 0x11] ; ret
0x00000000000b6206 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000b6bf6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000000b7a56 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x14] ; ret
0x00000000000b5586 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000b5576 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000b5607 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000b55e7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000b5547 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000b56e8 : adc bl, dh ; movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000121a46 : adc bl, dl ; call 0xffffffffc313fad6
0x00000000001222b6 : adc bl, dl ; call 0xffffffffc3140346
0x00000000000b6205 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000b5585 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000b5575 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000b55e6 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000b5546 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000008ea06 : adc byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x0000000000087f0d : adc byte ptr [r11 + r9*4 - 0x59], r9b ; cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000140166 : adc byte ptr [r13 + 0x5b0c75c0], al ; pop rbp ; pop r12 ; ret
0x00000000000aa78f : adc byte ptr [r14 + 0xf], r12b ; xlatb ; rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x0000000000045f58 : adc byte ptr [r15], cl ; sahf ; ret 0x3949
0x0000000000045b70 : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3949
0x00000000000ba1b2 : adc byte ptr [r15], r9b ; adc dword ptr [rdi + rdx - 0x10], edx ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x00000000000579b6 : adc byte ptr [r15], r9b ; sahf ; ret 0x3948
0x00000000000577ba : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3948
0x00000000000458e9 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3949
0x000000000013cc31 : adc byte ptr [r8 + 0x14], dil ; add edx, 1 ; syscall
0x000000000005636e : adc byte ptr [r8 + 0x39], cl ; ret 0x8d48
0x00000000000effa4 : adc byte ptr [r8 + 0x39], r9b ; retf
0x0000000000135f7a : adc byte ptr [r8 + 0x39], r9b ; retf 0x830f
0x000000000015da57 : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000008bb50 : adc byte ptr [r8 + 1], cl ; ret 0x3948
0x000000000008b73b : adc byte ptr [r8 + 1], cl ; retf 0x3948
0x00000000000e64d2 : adc byte ptr [r8 + 1], r9b ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000088bc2 : adc byte ptr [r8 + 1], r9b ; ret
0x00000000000b96af : adc byte ptr [r8 - 0x12cfeba9], r9b ; mov byte ptr [rdi + 0x15], ch ; ret
0x0000000000047912 : adc byte ptr [r8 - 0x3f], cl ; retf 0x6411
0x000000000013b97e : adc byte ptr [r8 - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000012618c : adc byte ptr [r8 - 0x77], cl ; imul edx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001762da : adc byte ptr [r8 - 0x77], cl ; retf 0x8348
0x0000000000092a6f : adc byte ptr [r8 - 0x77], r9b ; ret 0xf8b
0x0000000000045f51 : adc byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rax - 0x73], 0x41 ; adc byte ptr [rdi], cl ; sahf ; ret 0x3949
0x00000000001195ef : adc byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x85 ; ret 2
0x0000000000119647 : adc byte ptr [r8 - 0x7b], r9b ; sal byte ptr [rbp + 0x41], 0x49 ; mov edi, dword ptr [rdi] ; call r12
0x0000000000140a19 : adc byte ptr [r8 - 0x7d], r9b ; cli ; add ecx, dword ptr [rax + 0xf] ; ret 0xdb31
0x00000000001188e6 : adc byte ptr [r8 - 9], cl ; ret 0xfffe
0x00000000000b962c : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000b964e : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000b968c : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000b970e : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x0000000000088854 : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ror dword ptr [rax + 0x29], cl ; ret
0x000000000011883a : adc byte ptr [r9 + 9], cl ; ror dword ptr [rcx + rcx*4 + 0x48], 1 ; or bl, ch ; ret 0x1f0f
0x000000000009a5c6 : adc byte ptr [r9 - 0x7d], al ; ret
0x00000000000926c4 : adc byte ptr [r9], r13b ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x00000000000cfb51 : adc byte ptr [r9], r13b ; ror byte ptr [rbp + 0x480f0750], 1 ; ret 0xfd83
0x000000000011dfff : adc byte ptr [rax + 0x113], bh ; syscall
0x000000000011de9f : adc byte ptr [rax + 0x114], bh ; syscall
0x00000000001122bf : adc byte ptr [rax + 0x115], bh ; syscall
0x000000000011df4f : adc byte ptr [rax + 0x116], bh ; syscall
0x000000000010b30f : adc byte ptr [rax + 0x11], bh ; syscall
0x000000000011235f : adc byte ptr [rax + 0x11d], bh ; syscall
0x000000000011f44f : adc byte ptr [rax + 0x120], bh ; syscall
0x000000000010b3bf : adc byte ptr [rax + 0x12], bh ; syscall
0x000000000011f4ef : adc byte ptr [rax + 0x12b], bh ; syscall
0x000000000011f59f : adc byte ptr [rax + 0x133], bh ; syscall
0x000000000013cc32 : adc byte ptr [rax + 0x14], bh ; add edx, 1 ; syscall
0x0000000000113fff : adc byte ptr [rax + 0x17], bh ; syscall
0x000000000005f3cb : adc byte ptr [rax + 0x29], cl ; ret 0xc148
0x00000000000b5b7a : adc byte ptr [rax + 0x29], cl ; retf 0x394c
0x00000000000aa596 : adc byte ptr [rax + 0x29], cl ; retf 0x860f
0x00000000000b539a : adc byte ptr [rax + 0x29], cl ; retf 0x8d4c
0x00000000000cf400 : adc byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000011efff : adc byte ptr [rax + 0x2c], bh ; syscall
0x000000000011ed3f : adc byte ptr [rax + 0x2d], bh ; syscall
0x00000000001493b8 : adc byte ptr [rax + 0x31], cl ; ret 0xb70f
0x0000000000055459 : adc byte ptr [rax + 0x39], cl ; call 0xffffffffff71d77c
0x00000000000c7a88 : adc byte ptr [rax + 0x39], cl ; fisttp word ptr [rdi] ; xchg eax, ebx ; ret
0x0000000000096a6e : adc byte ptr [rax + 0x39], cl ; ret
0x000000000005636f : adc byte ptr [rax + 0x39], cl ; ret 0x8d48
0x0000000000045b17 : adc byte ptr [rax + 0x39], cl ; ret 0x8e0f
0x00000000000fa697 : adc byte ptr [rax + 0x39], cl ; ret 0x974
0x000000000012e091 : adc byte ptr [rax + 0x39], cl ; ret 0x977
0x00000000000c6a0f : adc byte ptr [rax + 0x39], cl ; ret 0xeb75
0x000000000005755d : adc byte ptr [rax + 0x39], cl ; ret 0xed75
0x00000000000f7e27 : adc byte ptr [rax + 0x39], cl ; ret 0xf375
0x000000000009d8f6 : adc byte ptr [rax + 0x39], cl ; ret 0xf475
0x00000000000effa5 : adc byte ptr [rax + 0x39], cl ; retf
0x0000000000135f7b : adc byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000015d94f : adc byte ptr [rax + 0x3b], cl ; sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x000000000011f71f : adc byte ptr [rax + 0x45], bh ; syscall
0x000000000011f7bf : adc byte ptr [rax + 0x46], bh ; syscall
0x000000000015da58 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000140a16 : adc byte ptr [rax + 0x63], cl ; adc byte ptr [r8 - 0x7d], r9b ; cli ; add ecx, dword ptr [rax + 0xf] ; ret 0xdb31
0x0000000000141f48 : adc byte ptr [rax + 0x81], bh ; syscall
0x000000000011ddff : adc byte ptr [rax + 0xe8], bh ; syscall
0x00000000000281fb : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000056456 : adc byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014f3ae : adc byte ptr [rax + 1], bh ; ret
0x00000000000cdc8e : adc byte ptr [rax + 1], cl ; clc ; ret
0x00000000000e64d3 : adc byte ptr [rax + 1], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000194d0e : adc byte ptr [rax + 1], cl ; out dx, eax ; call r12
0x000000000005767e : adc byte ptr [rax + 1], cl ; ret
0x00000000000aad06 : adc byte ptr [rax + 1], cl ; ret 0x147c
0x0000000000087f95 : adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000008bb51 : adc byte ptr [rax + 1], cl ; ret 0x3948
0x000000000012a4d8 : adc byte ptr [rax + 1], cl ; ret 0x8948
0x000000000008b73c : adc byte ptr [rax + 1], cl ; retf 0x3948
0x000000000014f3ad : adc byte ptr [rax + 1], dil ; ret
0x0000000000062f54 : adc byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000b9834 : adc byte ptr [rax - 0x12cfdfb1], cl ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000b9732 : adc byte ptr [rax - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000b96b0 : adc byte ptr [rax - 0x12cfeba9], cl ; mov byte ptr [rdi + 0x15], ch ; ret
0x000000000015a61b : adc byte ptr [rax - 0x39], cl ; ret
0x0000000000047913 : adc byte ptr [rax - 0x3f], cl ; retf 0x6411
0x00000000001218f4 : adc byte ptr [rax - 0x73], cl ; adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000001188e3 : adc byte ptr [rax - 0x73], cl ; adc byte ptr [r8 - 9], cl ; ret 0xfffe
0x0000000000175d74 : adc byte ptr [rax - 0x73], cl ; adc byte ptr [rdi], cl ; test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x0000000000034dfa : adc byte ptr [rax - 0x73], cl ; add al, 0xb7 ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000009e0e4 : adc byte ptr [rax - 0x73], cl ; add eax, 0x1b854 ; cmove rax, rdx ; ret
0x000000000009d731 : adc byte ptr [rax - 0x73], cl ; add eax, 0x1c7e7 ; cmovne rax, rdx ; ret
0x000000000009d491 : adc byte ptr [rax - 0x73], cl ; add eax, 0x1c9e7 ; cmovne rax, rdx ; ret
0x000000000009ceb1 : adc byte ptr [rax - 0x73], cl ; add eax, 0x1cf27 ; cmovne rax, rdx ; ret
0x0000000000117826 : adc byte ptr [rax - 0x73], cl ; add eax, 0xd0802 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b5e5b : adc byte ptr [rax - 0x73], cl ; jg 0xb5e7b ; jne 0xb653b ; ret
0x00000000000b754f : adc byte ptr [rax - 0x73], cl ; jg 0xb756f ; jne 0xb7d5b ; ret
0x0000000000085897 : adc byte ptr [rax - 0x73], cl ; jno 0x858a9 ; mov qword ptr [rdx + 0x28], rsi ; mov byte ptr [rcx], dil ; ret
0x0000000000121b1c : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000121b1b : adc byte ptr [rax - 0x73], r9b ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000091377 : adc byte ptr [rax - 0x75], cl ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000026b63 : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000111819 : adc byte ptr [rax - 0x75], cl ; jl 0x11184d ; or byte ptr [rax + 0x10f], bh ; syscall
0x00000000000913a5 : adc byte ptr [rax - 0x75], cl ; jl 0x913d5 ; or bl, ch ; retf
0x0000000000147f13 : adc byte ptr [rax - 0x75], cl ; or byte ptr [r9 + r9*4 - 0x1a], cl ; mov rdi, rbx ; call qword ptr [rax]
0x000000000014739d : adc byte ptr [rax - 0x75], cl ; push rbx ; sub byte ptr [rdi], cl ; retf 0x5089
0x0000000000086354 : adc byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000003d3b5 : adc byte ptr [rax - 0x77], cl ; and al, 8 ; mov qword ptr [rsp], rdx ; call 0x39ecc
0x00000000000b4d9c : adc byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000015a5e6 : adc byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000031648 : adc byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000148c94 : adc byte ptr [rax - 0x77], cl ; fimul dword ptr [rcx + rcx*4 - 0xa] ; mov rdi, r13 ; call rax
0x000000000012618d : adc byte ptr [rax - 0x77], cl ; imul edx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008748b : adc byte ptr [rax - 0x77], cl ; jo 0x874da ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000109497 : adc byte ptr [rax - 0x77], cl ; or byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000bc24e : adc byte ptr [rax - 0x77], cl ; out dx, eax ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x0000000000086357 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000086399 : adc byte ptr [rax - 0x77], cl ; push rax ; movups xmmword ptr [rax], xmm0 ; ret
0x000000000008635b : adc byte ptr [rax - 0x77], cl ; ret
0x0000000000096296 : adc byte ptr [rax - 0x77], cl ; ret 0x4890
0x00000000000c3d73 : adc byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000009266c : adc byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000097e1e : adc byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000012cb35 : adc byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000112f2c : adc byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000092a70 : adc byte ptr [rax - 0x77], cl ; ret 0xf8b
0x0000000000126302 : adc byte ptr [rax - 0x77], cl ; ret 0xff41
0x00000000000def86 : adc byte ptr [rax - 0x77], cl ; retf
0x0000000000086be3 : adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x00000000000874fc : adc byte ptr [rax - 0x77], cl ; retf 0x8948
0x00000000001190e6 : adc byte ptr [rax - 0x7b], cl ; in eax, dx ; jne 0x119122 ; mov rdi, qword ptr [rbx] ; call r12
0x00000000000887cc : adc byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rcx - 0x18] ; retf
0x0000000000045f52 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rax - 0x73], 0x41 ; adc byte ptr [rdi], cl ; sahf ; ret 0x3949
0x00000000001424c4 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0
0x0000000000172c97 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000172cd3 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000b0b44 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0x13
0x00000000001195f0 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 2
0x0000000000119648 : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 0x41], 0x49 ; mov edi, dword ptr [rdi] ; call r12
0x0000000000140a1a : adc byte ptr [rax - 0x7d], cl ; cli ; add ecx, dword ptr [rax + 0xf] ; ret 0xdb31
0x0000000000065861 : adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000939fb : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000aaa70 : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000001564b8 : adc byte ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000011884b : adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x00000000001019d3 : adc byte ptr [rax - 1], bh ; ret
0x00000000001188e7 : adc byte ptr [rax - 9], cl ; ret 0xfffe
0x000000000017d972 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x000000000017ba40 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x2e66
0x000000000017f58c : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x6666
0x000000000017bbe0 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8349
0x000000000007e7e9 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x0000000000182cf8 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x00000000000f14d1 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c742c : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000180141 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017e0d1 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000120252 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000010fb94 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000139009 : adc byte ptr [rax], al ; add byte ptr [rax], al ; call 0x2530e
0x000000000013583a : adc byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x1357fb
0x0000000000112486 : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x48 ; syscall
0x000000000004892c : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000014700e : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x0000000000145705 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000ba6e1 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000063ba1 : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000011290b : adc byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000000f7059 : adc byte ptr [rax], al ; add byte ptr [rbp - 0x76df8b40], al ; ret 0xe283
0x00000000000a9478 : adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000c2aca : adc byte ptr [rax], al ; add byte ptr [rbp - 0x7b], al ; dec dword ptr [rcx - 0x77] ; out dx, al ; setne dl ; jmp 0xc2af2
0x000000000010e046 : adc byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000063199 : adc byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000006f7f3 : adc byte ptr [rax], al ; add byte ptr [rbx + rcx*4 - 0x5b], cl ; cmp bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0x4804
0x0000000000060668 : adc byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf 0x894c
0x000000000006f812 : adc byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4904
0x0000000000027079 : adc byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg dword ptr [rcx], ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007a885 : adc byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg edx, esp ; and dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000110d62 : adc byte ptr [rax], al ; add cl, ch ; ret
0x000000000016e888 : adc byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x00000000000a7362 : adc byte ptr [rax], al ; call 0x34fdb
0x00000000000a6fd9 : adc byte ptr [rax], al ; mov ecx, eax ; movsxd rcx, dword ptr [r9 + rcx*4] ; add rcx, r9 ; jmp rcx
0x00000000000a717e : adc byte ptr [rax], al ; mov edx, eax ; movsxd rdx, dword ptr [r8 + rdx*4] ; add rdx, r8 ; jmp rdx
0x00000000000a763f : adc byte ptr [rax], al ; movsxd r9, dword ptr [r10 + r9*4] ; lea r10, [r10 + r9] ; jmp r10
0x000000000009a862 : adc byte ptr [rax], al ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000a70af : adc byte ptr [rax], al ; movsxd rdx, dword ptr [rax + rdx*4] ; add rdx, rax ; jmp rdx
0x00000000000e1255 : adc byte ptr [rax], al ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000e134d : adc byte ptr [rax], al ; neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000536e0 : adc byte ptr [rax], al ; ret
0x00000000000ddab8 : adc byte ptr [rax], al ; test eax, eax ; jne 0xddaf3 ; mov eax, 0x74 ; syscall
0x00000000000e2788 : adc byte ptr [rax], al ; test eax, eax ; jne 0xe27c3 ; mov eax, 0x69 ; syscall
0x00000000000e2818 : adc byte ptr [rax], al ; test eax, eax ; jne 0xe2853 ; mov eax, 0x6a ; syscall
0x00000000000e2aa8 : adc byte ptr [rax], al ; test eax, eax ; jne 0xe2ae3 ; mov eax, 0x75 ; syscall
0x00000000000e2b48 : adc byte ptr [rax], al ; test eax, eax ; jne 0xe2b83 ; mov eax, 0x77 ; syscall
0x000000000018ff2e : adc byte ptr [rax], bh ; enter 0x275, 0x39 ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000000b962d : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000b964f : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000b968d : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000b970f : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000b9811 : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000b7ddc : adc byte ptr [rax], dh ; str word ptr [rbx + 0x63] ; or al, 0x83 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000010e045 : adc byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000063368 : adc byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000115a60 : adc byte ptr [rbp + 0x31], al ; sal byte ptr [rcx], cl ; idiv byte ptr [rax + 0x118] ; syscall
0x0000000000149295 : adc byte ptr [rbp + 0x31], cl ; ret 0x314d
0x0000000000140bd9 : adc byte ptr [rbp + 0x33], cl ; or byte ptr [rbp + 0x33], cl ; push rax ; adc byte ptr [rbp + 9], cl ; retf 0x850f
0x0000000000140b80 : adc byte ptr [rbp + 0x33], cl ; or byte ptr [rbp + 0x33], cl ; push rax ; adc byte ptr [rbp + 9], cl ; retf 0xa375
0x00000000000a54b8 : adc byte ptr [rbp + 0x39], cl ; ror byte ptr [rbp - 0x73], 1 ; push rsp ; adc byte ptr ss:[rcx + 0xf], al ; xchg eax, ebx ; ret
0x0000000000140167 : adc byte ptr [rbp + 0x5b0c75c0], al ; pop rbp ; pop r12 ; ret
0x0000000000147ac8 : adc byte ptr [rbp + 0x840fc0], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x0000000000140be1 : adc byte ptr [rbp + 9], cl ; retf 0x850f
0x0000000000140b88 : adc byte ptr [rbp + 9], cl ; retf 0xa375
0x0000000000055f45 : adc byte ptr [rbp - 0x6d71f02e], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000bbfae : adc byte ptr [rbp - 0x77], cl ; int1 ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000002d788 : adc byte ptr [rbp - 0x77], cl ; retf 0x149
0x000000000011921d : adc byte ptr [rbp - 0x7b], cl ; div byte ptr [rbp + 0x1d] ; mov rdi, qword ptr [r13] ; call r12
0x0000000000119129 : adc byte ptr [rbp - 0x7b], cl ; in eax, dx ; jne 0x11918b ; mov rdi, qword ptr [rbp] ; call r12
0x000000000011936d : adc byte ptr [rbp - 0x7b], cl ; push qword ptr [rbp + 0x47] ; mov rdi, qword ptr [r14] ; call r12
0x00000000001193a1 : adc byte ptr [rbp - 0x7b], cl ; push qword ptr [rbp + 0x6c] ; mov rdi, qword ptr [r14] ; call r12
0x0000000000038714 : adc byte ptr [rbp - 0x7cfeecac], cl ; ret
0x0000000000063aa1 : adc byte ptr [rbx + 0x1f7426fa], al ; mov eax, 0xffffffff ; ret
0x000000000012c885 : adc byte ptr [rbx + 0x31], bl ; rol byte ptr [rcx + 0x5c], 0x5d ; ret
0x000000000019053f : adc byte ptr [rbx + 0x463bfc47], cl ; cld ; jne 0x19055b ; xor eax, eax ; ret
0x000000000008e9c2 : adc byte ptr [rbx + 0x48], bl ; sub eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000105e5f : adc byte ptr [rbx + 0x4c], bl ; mov eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008ea29 : adc byte ptr [rbx + 0x4c], dh ; movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000080529 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000031625 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000476e2 : adc byte ptr [rbx + 0x5d], bl ; pop r14 ; ret
0x000000000008ea07 : adc byte ptr [rbx + 6], dh ; movzx eax, byte ptr [rax] ; ret
0x0000000000087f0e : adc byte ptr [rbx + rcx*4 - 0x59], cl ; cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x00000000000926c2 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000000a2867 : adc byte ptr [rbx - 0x307cc019], al ; add byte ptr [rax - 0x78], 0x7d ; ret 0x8944
0x0000000000086c66 : adc byte ptr [rbx - 0x3b7cb7ff], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000196db0 : adc byte ptr [rbx - 0x3d], bl ; nop dword ptr [rax + rax] ; ret
0x000000000010ced8 : adc byte ptr [rbx - 0x47e7db84], cl ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x000000000013b14a : adc byte ptr [rbx - 0x73], al ; add dword ptr [rdx], r8d ; pop rbx ; ret
0x00000000000f7263 : adc byte ptr [rbx - 0x7bf00008], al ; ret
0x00000000000bb4cf : adc byte ptr [rbx - 0x7cb703ba], cl ; ret
0x000000000012c880 : adc byte ptr [rbx], bh ; push rbx ; adc al, 0x74 ; adc byte ptr [rbx + 0x31], bl ; rol byte ptr [rcx + 0x5c], 0x5d ; ret
0x0000000000097526 : adc byte ptr [rcx + 0x29], cl ; fisttp qword ptr [rcx + rcx*4 + 0x44] ; and al, 8 ; call 0x9376b
0x0000000000088855 : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ror dword ptr [rax + 0x29], cl ; ret
0x000000000014940a : adc byte ptr [rcx + 0x31], cl ; retf 0x3149
0x00000000001493c5 : adc byte ptr [rcx + 0x31], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x00000000000a34a9 : adc byte ptr [rcx + 0x39], cl ; fisttp dword ptr [rdi] ; xchg eax, ebx ; ret
0x00000000000c8680 : adc byte ptr [rcx + 0x39], cl ; ror byte ptr [rcx - 0x73], cl ; jl 0xc86cc ; adc al, 0xf ; xchg eax, ebx ; ret 0x3948
0x0000000000055cbd : adc byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; ret
0x00000000000a2adb : adc byte ptr [rcx + 0xf], al ; xchg eax, ebx ; ret
0x0000000000087080 : adc byte ptr [rcx + 0xf], al ; xchg eax, ebx ; ret 0x394c
0x000000000008707f : adc byte ptr [rcx + 0xf], r8b ; xchg eax, ebx ; ret 0x394c
0x000000000011883b : adc byte ptr [rcx + 9], cl ; ror dword ptr [rcx + rcx*4 + 0x48], 1 ; or bl, ch ; ret 0x1f0f
0x00000000000df48c : adc byte ptr [rcx + rcx*4 + 0x34], cl ; sbb byte ptr [rax - 0x7d], cl ; ret
0x0000000000097dcd : adc byte ptr [rcx + rcx*4 - 0x10], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000088713 : adc byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000126686 : adc byte ptr [rcx + rcx*4 - 0x12], cl ; xor r15d, r15d ; call rax
0x0000000000045d45 : adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000008055e : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000462d4 : adc byte ptr [rcx + rcx*4 - 2], cl ; mov rdi, rbx ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000000b9792 : adc byte ptr [rcx - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000b9772 : adc byte ptr [rcx - 0x12cfe8b1], cl ; mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000010fb57 : adc byte ptr [rcx - 0x75], cl ; add byte ptr [rax - 0x77], cl ; ret 0xfd83
0x0000000000030f91 : adc byte ptr [rcx - 0x77], al ; adc al, 0x24 ; jmp 0x30f60
0x000000000003040b : adc byte ptr [rcx - 0x77], al ; add ecx, dword ptr [rax + 0x39] ; retf
0x000000000011872b : adc byte ptr [rcx - 0x77], cl ; ret
0x0000000000041644 : adc byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x00000000000f8df5 : adc byte ptr [rcx - 0x77], cl ; xor byte ptr [r8 - 0x7f], r9b ; retf 0
0x000000000013b13c : adc byte ptr [rcx - 0x78], al ; sbb cl, byte ptr [rcx - 0x7d] ; ret 0x4502
0x000000000009a5c7 : adc byte ptr [rcx - 0x7d], al ; ret
0x000000000017ba73 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000017f617 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000010c136 : adc byte ptr [rcx - 0xa], al ; ret 0x4901
0x00000000001510ca : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015e60a : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000011e7b1 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000000c8f39 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000281f8 : adc byte ptr [rcx], bh ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000bc6b5 : adc byte ptr [rcx], bh ; bnd je 0xbc6c6 ; test edx, edx ; jne 0xbc6b8 ; ret
0x00000000000bc6b5 : adc byte ptr [rcx], bh ; bnd je 0xbc6c7 ; test edx, edx ; jne 0xbc6b9 ; ret
0x00000000001485e9 : adc byte ptr [rcx], bh ; ret
0x00000000000481ee : adc byte ptr [rcx], ch ; ret 0xc269
0x00000000000926c5 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x00000000000cfb52 : adc byte ptr [rcx], ch ; ror byte ptr [rbp + 0x480f0750], 1 ; ret 0xfd83
0x0000000000152e64 : adc byte ptr [rcx], cl ; add byte ptr [rbx + rax*4 + 0x38], ah ; add al, 0x75 ; ret
0x0000000000052adb : adc byte ptr [rcx], cl ; retf 0x5489
0x00000000000316c5 : adc byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000126407 : adc byte ptr [rcx], dh ; idiv byte ptr [rdi + 0x2000004] ; call rcx
0x0000000000089540 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000012a503 : adc byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000001351b3 : adc byte ptr [rcx], dh ; shr al, 0xe5 ; ret 0xfff4
0x00000000000281f7 : adc byte ptr [rcx], dil ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000fdaf3 : adc byte ptr [rdi + 0x12], dh ; movzx edx, cl ; movsxd rdx, dword ptr [r8 + rdx*4] ; add rdx, r8 ; jmp rdx
0x00000000000f7ccc : adc byte ptr [rdi + rdi*8 + 0xfc084ff], 0x85 ; retf
0x00000000000dbd86 : adc byte ptr [rdi - 0x3a], bh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000077bee : adc byte ptr [rdi], 0 ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x0000000000077dac : adc byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, r14 ; jmp rax
0x00000000000ba1b3 : adc byte ptr [rdi], cl ; adc dword ptr [rdi + rdx - 0x10], edx ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x00000000000351f5 : adc byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000012f332 : adc byte ptr [rdi], cl ; mov bh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x000000000008d3d8 : adc byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; neg eax ; ret
0x0000000000147159 : adc byte ptr [rdi], cl ; retf 0x5089
0x0000000000147262 : adc byte ptr [rdi], cl ; retf 0x5389
0x00000000001471aa : adc byte ptr [rdi], cl ; retf 0xd189
0x0000000000038419 : adc byte ptr [rdi], cl ; retf 0xd289
0x000000000014756c : adc byte ptr [rdi], cl ; retf 0xd789
0x00000000000579b7 : adc byte ptr [rdi], cl ; sahf ; ret 0x3948
0x0000000000045f59 : adc byte ptr [rdi], cl ; sahf ; ret 0x3949
0x0000000000043700 : adc byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000127116 : adc byte ptr [rdi], cl ; test byte ptr [rbx - 0x7d000000], ch ; ret 0x8801
0x000000000010bd28 : adc byte ptr [rdi], cl ; test byte ptr [rdi - 0x9fffffd], bl ; ret 0xf20
0x000000000004b970 : adc byte ptr [rdi], cl ; test dh, ch ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x0000000000175d78 : adc byte ptr [rdi], cl ; test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x000000000018e563 : adc byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000017cc61 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000017cd51 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000017cb71 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000018599b : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018449f : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x000000000018569f : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000184d9f : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018509f : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000184797 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017d5b9 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000017d111 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000017c8a1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000017d2f1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000017ca81 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000017d4d1 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000017d3e1 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000017cd23 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017ce13 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017cc33 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000184a44 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000185644 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000185944 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000185044 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000184d44 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000018473c : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017c991 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x00000000001808bd : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001806dd : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001810b5 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017ffd5 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000180ed5 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017cb43 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017c963 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017ca53 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017c873 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x000000000005752a : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x00000000000455ff : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x000000000010307f : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8944
0x0000000000057fc7 : adc byte ptr [rdi], r9b ; sahf ; ret 0x3948
0x0000000000057529 : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x00000000000455fe : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3949
0x000000000008c773 : adc byte ptr [rdx + 0x2a], dh ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000008cba3 : adc byte ptr [rdx + 0x3a], dh ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000000bbcc6 : adc byte ptr [rdx + 1], ch ; xor edx, edx ; push 1 ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000163f09 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000120852 : adc byte ptr [rdx + 8], dh ; seta al ; movzx eax, al ; neg eax ; ret
0x00000000001019ea : adc byte ptr [rdx + 8], dh ; setne al ; movzx eax, al ; neg eax ; ret
0x00000000000ae7dd : adc byte ptr [rdx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000017a4fc : adc byte ptr [rdx], al ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x0000000000064252 : adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000018bacb : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000042a93 : adc byte ptr [rip - 0x8000], cl ; inc eax ; shr eax, 0x1f ; ret
0x000000000018b97a : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x000000000018af75 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018b375 : adc byte ptr [rsi + 0xf], ah ; jmp 0x18b349
0x000000000018b3f3 : adc byte ptr [rsi + 0xf], ah ; jmp 0x18b3c7
0x000000000018b885 : adc byte ptr [rsi + 0xf], ah ; jmp 0x18b859
0x000000000018b903 : adc byte ptr [rsi + 0xf], ah ; jmp 0x18b8d7
0x000000000018c9a5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x18c979
0x000000000018ca23 : adc byte ptr [rsi + 0xf], ah ; jmp 0x18c9f7
0x000000000018ceb5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x18ce89
0x000000000018cf33 : adc byte ptr [rsi + 0xf], ah ; jmp 0x18cf07
0x000000000018b370 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18b34e
0x000000000018b3ee : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18b3cc
0x000000000018b880 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18b85e
0x000000000018b8fe : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18b8dc
0x000000000018c9a0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18c97e
0x000000000018ca1e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18c9fc
0x000000000018ceb0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18ce8e
0x000000000018cf2e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18cf0c
0x000000000018af70 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000a7795 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000000ab5cb : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000aa790 : adc byte ptr [rsi + 0xf], ah ; xlatb ; rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x00000000000b575b : adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000b575a : adc byte ptr [rsi + 0xf], r12b ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000ba00b : adc byte ptr [rsi + rdx - 0x10], cl ; movups xmmword ptr [rdi], xmm0 ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000000b9753 : adc byte ptr [rsi - 0x77], ah ; sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x000000000017140d : adc byte ptr [rsi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000cebda : adc byte ptr [rsp - 0x10], al ; ret
0x0000000000043400 : adc byte ptr [rsp - 4], al ; mov dword ptr [rdi], edx ; ret
0x00000000000432f0 : adc byte ptr [rsp - 4], al ; ret
0x0000000000042f24 : adc byte ptr [rsp - 8], al ; ret
0x0000000000184a47 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000a717d : adc byte ptr ss:[rax], al ; mov edx, eax ; movsxd rdx, dword ptr [r8 + rdx*4] ; add rdx, r8 ; jmp rdx
0x00000000000a54bf : adc byte ptr ss:[rcx + 0xf], al ; xchg eax, ebx ; ret
0x0000000000114375 : adc ch, byte ptr [rax] ; mov edi, 0xfee1dead ; mov eax, 0xa9 ; syscall
0x0000000000145385 : adc ch, byte ptr [rcx] ; retf 0xc8d
0x000000000012f32f : adc cl, al ; out 0x10, eax ; movzx eax, si ; or eax, edi ; bswap eax ; ret
0x00000000000cf8d8 : adc cl, byte ptr [rax + 0x29] ; ret 0x148
0x00000000000cf99f : adc cl, byte ptr [rax + 0x69] ; rol byte ptr [rax + 0x42], cl ; str word ptr [rax + 0x29] ; retf 0x8948
0x00000000000b5ea3 : adc cl, byte ptr [rax - 0x73] ; jg 0xb5ec5 ; jne 0xb653b ; ret
0x00000000000b7597 : adc cl, byte ptr [rax - 0x73] ; jg 0xb75b9 ; jne 0xb7d5b ; ret
0x000000000003524e : adc cl, byte ptr [rax - 0x75] ; push rdx ; mov rax, qword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000003521e : adc cl, byte ptr [rax - 0x75] ; push rdx ; pop rax ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000011509e : adc cl, byte ptr [rax - 0x77] ; ret 0x8348
0x000000000007e702 : adc cl, byte ptr [rax - 0x77] ; ret 0xc148
0x0000000000096d09 : adc cl, byte ptr [rax - 0x7d] ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0xc083
0x000000000008c560 : adc cl, byte ptr [rax - 0x7d] ; ret
0x00000000000c86c9 : adc cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x00000000000a19ab : adc cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x0000000000038798 : adc cl, byte ptr [rax - 0x7d] ; ret 0x8b08
0x000000000012b6e5 : adc cl, byte ptr [rax - 0x7d] ; ror byte ptr [rax + 0x48], 0x39 ; sal byte ptr [rdx - 0xf], 1 ; xor eax, eax ; ret
0x000000000015e905 : adc cl, byte ptr [rax - 0x7d] ; ror byte ptr [rax], 0x48 ; cmp edx, eax ; ja 0x15e90c ; xor eax, eax ; ret
0x000000000002cced : adc cl, byte ptr [rax - 0x7d] ; stc ; add al, 0x74 ; and eax, 0x833fe283 ; retf 0x4180
0x00000000000b4fd5 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000000baf1d : adc cl, byte ptr [rbx + 0x4889410e] ; add al, 0x85 ; leave ; jne 0xbaefb ; ret
0x00000000000b211f : adc cl, byte ptr [rcx + 5] ; movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000b213f : adc cl, byte ptr [rcx + 6] ; movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000b215f : adc cl, byte ptr [rcx + 7] ; movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000b4caf : adc cl, byte ptr [rcx + 8] ; movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000535f0 : adc cl, byte ptr [rcx] ; retf 0xbe0f
0x00000000000fdaf5 : adc cl, byte ptr [rdi] ; mov dh, 0xd1 ; movsxd rdx, dword ptr [r8 + rdx*4] ; add rdx, r8 ; jmp rdx
0x00000000000dc4f2 : adc cl, byte ptr [rsi - 0x76b7000c] ; ret
0x0000000000088ce8 : adc cl, ch ; ret 0xfff9
0x00000000000e8489 : adc cl, ch ; retf
0x0000000000088c28 : adc cl, ch ; retf 0xfffa
0x00000000000e26cf : adc dh, bh ; jmp 0xe260b
0x0000000000181599 : adc dh, byte ptr [rbx - 0xc] ; movsxd rcx, ecx ; add rax, rcx ; sub rax, rdi ; ret
0x00000000001580bd : adc dh, byte ptr [rcx] ; fisttp dword ptr [rcx + 0x415d5bd8] ; pop rsp ; ret
0x00000000000ed2e5 : adc dh, byte ptr [rcx] ; rol byte ptr [rax + 0xf00657b], cl ; xchg eax, ebp ; ret 0xd201
0x000000000002fbe0 : adc dh, dh ; ret
0x0000000000095ff6 : adc dh, dh ; ret 0xf0f
0x0000000000082c15 : adc dl, byte ptr [rsi] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000f8904 : adc dl, cl ; dec dword ptr [rcx - 0x75] ; jg 0xf893e ; call 0x25322
0x00000000000cf874 : adc dword ptr [r8], r8d ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000014f2fb : adc dword ptr [rax + 0x20], edx ; ret
0x0000000000086a1c : adc dword ptr [rax + 0x30], eax ; mov dword ptr [rbx + 0x74], edx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000014f2c0 : adc dword ptr [rax + 0x30], eax ; ret
0x000000000010b6f6 : adc dword ptr [rax + 0x39], ecx ; ret
0x0000000000082f23 : adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x00000000000871d6 : adc dword ptr [rax + 0x40], eax ; pop rbx ; ret
0x0000000000120396 : adc dword ptr [rax + 0x63], ecx ; fisttp dword ptr [rax - 0x77] ; sbb eax, 0xc3fbf ; pop rbx ; ret
0x0000000000155d76 : adc dword ptr [rax + 1], edi ; cmp esi, 2 ; je 0x155d6b ; jmp 0x155d52
0x000000000014bd00 : adc dword ptr [rax + 8], eax ; ret
0x00000000000472dd : adc dword ptr [rax + rcx*2 + 0x33], esp ; adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000026b98 : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000029b62 : adc dword ptr [rax + rcx*2 + 0x33], esp ; add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000014263a : adc dword ptr [rax + rcx*2 + 0x33], esp ; cmp al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000005c2a2 : adc dword ptr [rax - 0x38c6b3ea], ecx ; jae 0x5c29b ; mov rax, rsi ; ret
0x00000000000b5e7e : adc dword ptr [rax - 0x73], ecx ; jg 0xb5e9f ; jne 0xb653b ; ret
0x00000000000b7572 : adc dword ptr [rax - 0x73], ecx ; jg 0xb7593 ; jne 0xb7d5b ; ret
0x000000000002641a : adc dword ptr [rax - 0x77], ecx ; add eax, 0x1c3d26 ; ret
0x0000000000159e98 : adc dword ptr [rax - 0x77], ecx ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bbffb : adc dword ptr [rax - 0x77], ecx ; fucomip st(0) ; pop rsp ; retf
0x00000000001762d3 : adc dword ptr [rax - 0x77], ecx ; push rcx ; or byte ptr [rax - 0x73], cl ; adc byte ptr [r8 - 0x77], cl ; retf 0x8348
0x000000000008cc7b : adc dword ptr [rax - 0x77], ecx ; retf
0x00000000000bace7 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4504
0x00000000000a696b : adc dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000a11fb : adc dword ptr [rax - 0x7d], ecx ; ret 0x8301
0x0000000000182feb : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x000000000006dd55 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000017e067 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017ffd9 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000019669b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; ret
0x000000000010b311 : adc dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000a92f8 : adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000cea71 : adc dword ptr [rax], eax ; add rsp, 8 ; ret
0x00000000000e1703 : adc dword ptr [rax], eax ; and byte ptr [rcx], al ; mov eax, 0x38 ; syscall
0x000000000009bdf8 : adc dword ptr [rax], eax ; call 0x62779
0x00000000000d1d4b : adc dword ptr [rax], eax ; jmp 0xd1d65
0x00000000000ceab5 : adc dword ptr [rax], eax ; mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x000000000009b73d : adc dword ptr [rax], eax ; mov rdx, rcx ; jmp 0x9b6da
0x000000000009b73c : adc dword ptr [rax], eax ; mov rdx, rcx ; jmp 0x9b6db
0x00000000000d056c : adc dword ptr [rax], eax ; movaps xmmword ptr [rax], xmm0 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000d0797 : adc dword ptr [rax], eax ; movaps xmmword ptr [rax], xmm0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000cf875 : adc dword ptr [rax], eax ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000cf795 : adc dword ptr [rax], eax ; neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000d04ce : adc dword ptr [rax], eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008639f : adc dword ptr [rax], eax ; ret
0x0000000000182766 : adc dword ptr [rbp + 0x31000002], -0x40 ; vzeroupper ; ret
0x00000000000918ca : adc dword ptr [rbp + 0x38], eax ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012ac41 : adc dword ptr [rbp - 0x78], ebp ; call rax
0x000000000012ad5d : adc dword ptr [rbp - 0x78], ebx ; call r8
0x000000000012aa13 : adc dword ptr [rbp - 0x78], ecx ; call rax
0x000000000012b246 : adc dword ptr [rbp - 0x78], edi ; call rax
0x000000000012ae31 : adc dword ptr [rbp - 0x78], edi ; call rcx
0x000000000012abb5 : adc dword ptr [rbp - 0x78], edx ; call r8
0x000000000012b174 : adc dword ptr [rbp - 0x78], esi ; call rax
0x000000000012acac : adc dword ptr [rbp - 0x78], esp ; call rax
0x000000000009c5aa : adc dword ptr [rbx + 0x18], eax ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008d91f : adc dword ptr [rbx + 0x18], eax ; movups xmmword ptr [rbx + 0x28], xmm0 ; pop rbx ; ret
0x000000000008d923 : adc dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x00000000000910ef : adc dword ptr [rbx + 0x38], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000009102a : adc dword ptr [rbx + 0x38], eax ; mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000009c138 : adc dword ptr [rbx + 0x38], eax ; mov qword ptr [rbx], rdi ; call rcx
0x000000000009c20f : adc dword ptr [rbx + 0x38], eax ; mov qword ptr [rbx], rsi ; call rcx
0x000000000011e175 : adc dword ptr [rbx + 0x407426fa], eax ; ret
0x0000000000090ba2 : adc dword ptr [rbx + 0x48], eax ; pop rbx ; ret
0x000000000008d91b : adc dword ptr [rbx + 8], eax ; movups xmmword ptr [rbx + 0x18], xmm0 ; movups xmmword ptr [rbx + 0x28], xmm0 ; pop rbx ; ret
0x000000000008dc72 : adc dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000014e6eb : adc dword ptr [rbx - 0x12], esi ; dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x00000000000d069b : adc dword ptr [rbx - 9], esp ; dec dword ptr [rax - 0x77] ; ret
0x000000000009ca85 : adc dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000048902 : adc dword ptr [rbx], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000ba2d8 : adc dword ptr [rbx], eax ; ret
0x000000000014dd64 : adc dword ptr [rbx], ecx ; mov qword ptr [rbx + 0x10], rax ; jmp 0x14dd36
0x00000000000ba251 : adc dword ptr [rbx], esp ; ret
0x000000000018d7a0 : adc dword ptr [rcx + 6], esi ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000018d7a7 : adc dword ptr [rcx + 7], edi ; ret
0x0000000000196929 : adc dword ptr [rcx + rdi*8 - 1], 0x48 ; add esp, 0x80 ; pop rbx ; ret
0x00000000000ba247 : adc dword ptr [rcx - 0x20], edi ; movups xmmword ptr [rcx - 0x30], xmm8 ; movups xmmword ptr [r11], xmm4 ; ret
0x00000000000ba24c : adc dword ptr [rcx - 0x30], eax ; movups xmmword ptr [r11], xmm4 ; ret
0x000000000010410f : adc dword ptr [rcx - 0x77], ecx ; ret 0xdb31
0x00000000000a33e9 : adc dword ptr [rcx - 0x7d], ecx ; ret 0x4c01
0x000000000018d442 : adc dword ptr [rcx - 1], ebx ; ret
0x000000000018d406 : adc dword ptr [rcx - 1], edi ; ret
0x000000000018d43b : adc dword ptr [rcx - 2], edx ; vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x000000000018d639 : adc dword ptr [rcx - 2], esi ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000018d3ff : adc dword ptr [rcx - 2], esi ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00000000000efcbc : adc dword ptr [rcx], eax ; ret 0x428d
0x000000000005633e : adc dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000155d1d : adc dword ptr [rdi + 0x18], eax ; mov dword ptr [rdi + 0x28], edx ; ret
0x000000000010b4be : adc dword ptr [rdi + 0x20], eax ; movups xmmword ptr [rdi + 0x30], xmm0 ; movups xmmword ptr [rdi + 0x40], xmm0 ; ret
0x00000000000ba2cf : adc dword ptr [rdi + 0x20], esi ; movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000010b4c2 : adc dword ptr [rdi + 0x30], eax ; movups xmmword ptr [rdi + 0x40], xmm0 ; ret
0x00000000000ba2d3 : adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000010b4c6 : adc dword ptr [rdi + 0x40], eax ; ret
0x00000000000448cc : adc dword ptr [rdi + 0x50], eax ; movups xmmword ptr [rdi + 0x60], xmm0 ; movups xmmword ptr [rdi + 0x70], xmm0 ; ret
0x00000000000448d0 : adc dword ptr [rdi + 0x60], eax ; movups xmmword ptr [rdi + 0x70], xmm0 ; ret
0x000000000010b8bd : adc dword ptr [rdi + 0x68], esi ; movdqu xmm7, xmmword ptr [rsi + 0x70] ; movups xmmword ptr [rdi + 0x78], xmm7 ; ret
0x00000000000448d4 : adc dword ptr [rdi + 0x70], eax ; ret
0x000000000010b8c6 : adc dword ptr [rdi + 0x78], edi ; ret
0x000000000010c23b : adc dword ptr [rdi + 0xf8], edi ; ret
0x0000000000090ad8 : adc dword ptr [rdi + 8], eax ; ret
0x000000000013b4d0 : adc dword ptr [rdi + rdx + 8], eax ; ret
0x00000000000ba013 : adc dword ptr [rdi + rdx - 0x10], ecx ; ret
0x00000000000ba1b5 : adc dword ptr [rdi + rdx - 0x10], edx ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x00000000000ba1ba : adc dword ptr [rdi + rdx - 0x20], ebx ; ret
0x00000000000ba192 : adc dword ptr [rdi + rdx - 0x30], esi ; movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x00000000000ba197 : adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000018d902 : adc dword ptr [rdi - 7], esi ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000018d909 : adc dword ptr [rdi - 8], edi ; ret
0x000000000005880d : adc dword ptr [rdi], eax ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x000000000004321d : adc dword ptr [rdi], eax ; mov dword ptr [rsp - 4], edx ; movd xmm0, dword ptr [rsp - 4] ; ret
0x00000000000ba010 : adc dword ptr [rdi], eax ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000044c72 : adc dword ptr [rdi], eax ; ret
0x000000000002a428 : adc dword ptr [rdi], ecx ; retf 0xd285
0x0000000000042e9b : adc dword ptr [rdi], ecx ; subsd xmm0, xmm1 ; ret
0x0000000000043240 : adc dword ptr [rdi], ecx ; subss xmm0, xmm1 ; ret
0x000000000018fb60 : adc dword ptr [rdi], ecx ; test byte ptr [rbx], bl ; add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000000a255d : adc dword ptr [rdi], ecx ; xchg eax, ebx ; ret
0x000000000018db5c : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x0000000000150d2b : adc dword ptr [rdi], esi ; add byte ptr [rax], al ; call qword ptr [rax]
0x000000000011321e : adc dword ptr [rdx + 0x14], edi ; sub edx, eax ; test eax, eax ; cmovns eax, edx ; ret
0x0000000000029db1 : adc dword ptr [rdx + 0x48], eax ; add rsp, 0x18 ; ret
0x00000000000a6d43 : adc dword ptr [rdx + rdx*8 + 0x38442874], eax ; retf 0xf41
0x00000000000a6cd8 : adc dword ptr [rdx + rdx*8 - 0x2dce148b], eax ; mov qword ptr [rdi], rdx ; ret
0x000000000014f30c : adc dword ptr [rdx], ebx ; ret
0x000000000014bd14 : adc dword ptr [rdx], ecx ; ret
0x000000000014e9fc : adc dword ptr [rdx], edx ; ret
0x000000000014f2ec : adc dword ptr [rdx], esp ; ret
0x000000000010b86d : adc dword ptr [rsi + 0x60], esi ; movdqu xmm7, xmmword ptr [rdi + 0x78] ; movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x000000000010b876 : adc dword ptr [rsi + 0x70], edi ; ret
0x00000000001016d3 : adc dword ptr [rsi + 0xe], esp ; add byte ptr [rcx + 0x5b595a0a], cl ; ret
0x0000000000061d3b : adc dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf 0xf66
0x000000000018dc88 : adc dword ptr [rsi + 2], edx ; vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x000000000018dc8f : adc dword ptr [rsi + 3], edx ; ret
0x000000000018dd25 : adc dword ptr [rsi + 6], edx ; vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x000000000018dd2c : adc dword ptr [rsi + 7], edx ; ret
0x000000000014709c : adc dword ptr [rsi + 8], eax ; ret
0x000000000014706c : adc dword ptr [rsi + 8], ecx ; ret
0x000000000018db2e : adc dword ptr [rsi - 1], edx ; ret
0x000000000018db27 : adc dword ptr [rsi - 2], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x0000000000048299 : adc dword ptr [rsi], eax ; cmp edx, -1 ; jne 0x4825d ; xor eax, eax ; ret
0x000000000014e8fa : adc dword ptr [rsi], eax ; mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000014f23a : adc dword ptr [rsi], eax ; mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000001560a3 : adc dword ptr [rsp + 0x28], eax ; call rdx
0x0000000000194ca6 : adc dword ptr [rsp - 0x28], eax ; ret
0x0000000000043310 : adc dword ptr [rsp - 4], eax ; movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000042f4a : adc dword ptr [rsp - 8], eax ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000017e066 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000d0796 : adc dword ptr ss:[rax], eax ; movaps xmmword ptr [rax], xmm0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000093608 : adc eax, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000009048a : adc eax, 0 ; add byte ptr [rbx + 0x158901ea], al ; retf
0x00000000000fac0f : adc eax, 0x105c8d00 ; add dword ptr [rax + 0x63], ecx ; ret
0x000000000009389f : adc eax, 0x10894800 ; ret
0x0000000000150e71 : adc eax, 0x10c48348 ; pop rbx ; ret
0x00000000000cdc8a : adc eax, 0x10ef8348 ; add rax, rdi ; ret
0x000000000009a85f : adc eax, 0x10ff3c ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000bc68b : adc eax, 0x11930 ; cmovne rax, rdx ; ret
0x0000000000080b1e : adc eax, 0x129b01 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000802c9 : adc eax, 0x12a112 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000009cd6b : adc eax, 0x13800 ; cmovne rax, rdx ; ret
0x000000000009d36b : adc eax, 0x14e20 ; cmovne rax, rdx ; ret
0x0000000000093294 : adc eax, 0x151037 ; ret
0x00000000000929e3 : adc eax, 0x154b80 ; add dword ptr [rip + 0x154b75], 1 ; ret
0x00000000000b5f04 : adc eax, 0x157f8d48 ; jne 0xb653b ; ret
0x00000000000b7628 : adc eax, 0x157f8d48 ; jne 0xb7d5b ; ret
0x0000000000055aaf : adc eax, 0x159f58 ; jmp 0x55a7f
0x0000000000035ae8 : adc eax, 0x16f093 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000044e0d : adc eax, 0x19f39a ; ret
0x0000000000033970 : adc eax, 0x1b2f28 ; ret
0x000000000009e79d : adc eax, 0x1b84e ; cmove rax, rdx ; ret
0x000000000009e44d : adc eax, 0x1bb7e ; cmove rax, rdx ; ret
0x000000000009e2ed : adc eax, 0x1bcfe ; cmove rax, rdx ; ret
0x000000000002539f : adc eax, 0x1c4c0c ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000019621b : adc eax, 0x20478b48 ; test rax, rax ; je 0x196236 ; call rax
0x00000000001926f2 : adc eax, 0x275c9 ; movsxd r12, dword ptr [rdx + r12*4] ; add rdx, r12 ; jmp rdx
0x0000000000150d2a : adc eax, 0x3711 ; call qword ptr [rax]
0x00000000000cd9ba : adc eax, 0x3b30478b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x000000000012d2b7 : adc eax, 0x3bb44 ; cmovne rax, rdx ; ret
0x000000000012d137 : adc eax, 0x3bce4 ; cmovne rax, rdx ; ret
0x000000000005bb11 : adc eax, 0x3d8d4800 ; retf 0x153f
0x000000000012d1f7 : adc eax, 0x3e6f4 ; cmovne rax, rdx ; ret
0x00000000000e756a : adc eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000094e45 : adc eax, 0x48927600 ; add esp, 8 ; ret
0x000000000018c527 : adc eax, 0x490002c8 ; movsxd rcx, dword ptr [rbx + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000008e8fd : adc eax, 0x58d4800 ; ret 0x157d
0x000000000012d292 : adc eax, 0x5bd59 ; cmove rax, rdx ; ret
0x000000000012d1d2 : adc eax, 0x5be39 ; cmove rax, rdx ; ret
0x000000000012d112 : adc eax, 0x5bef9 ; cmove rax, rdx ; ret
0x000000000012d2e1 : adc eax, 0x60a4a ; cmove rax, rdx ; ret
0x000000000012d221 : adc eax, 0x60b2a ; cmove rax, rdx ; ret
0x000000000012d161 : adc eax, 0x60bea ; cmove rax, rdx ; ret
0x000000000014e36f : adc eax, 0x60c4c ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000012d3a1 : adc eax, 0x60f3a ; cmove rax, rdx ; ret
0x00000000000b5f08 : adc eax, 0x621850f ; add byte ptr [rax], al ; ret
0x0000000000167ab6 : adc eax, 0x63490005 ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000cd8aa : adc eax, 0x63b078b ; jne 0xcda0b ; ret
0x0000000000061d9b : adc eax, 0x6f0f6600 ; ret
0x000000000005ca80 : adc eax, 0x6f0f6600 ; ret 0x25e8
0x000000000005ca57 : adc eax, 0x6f0f6600 ; ret 0x290f
0x000000000005f8e2 : adc eax, 0x6f0f6600 ; ret 0xc3e8
0x00000000000b762c : adc eax, 0x71d850f ; add byte ptr [rax], al ; ret
0x000000000010ca61 : adc eax, 0x80ec8348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000017dbf1 : adc eax, 0x83480000 ; ret 0xe910
0x0000000000184499 : adc eax, 0x83490000 ; jmp 0x1844b9
0x000000000015b115 : adc eax, 0x88606 ; test eax, eax ; jne 0x15b134 ; xor eax, eax ; pop rbx ; ret
0x00000000000d977d : adc eax, 0x89480000 ; ret 0x894c
0x00000000000e49a6 : adc eax, 0x89480000 ; retf
0x0000000000077d82 : adc eax, 0x89490000 ; ret 0x3145
0x00000000001622f8 : adc eax, 0x894d0000 ; retf
0x000000000015afd7 : adc eax, 0x8a574 ; add rsp, 8 ; ret
0x0000000000151879 : adc eax, 0x983c2 ; mov qword ptr fs:[rax], rdx ; ret
0x0000000000044579 : adc eax, 0x98c48148 ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000001474ea : adc eax, 0x9c671 ; jmp qword ptr [rdx + rax*8]
0x0000000000109822 : adc eax, 0xa4081 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000001095f6 : adc eax, 0xa41ed ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000e8b6b : adc eax, 0xc3784 ; movsxd rax, dword ptr [rdx + r15*4] ; add rax, rdx ; jmp rax
0x000000000009ce1b : adc eax, 0xc40b0 ; cmovne rax, rdx ; ret
0x0000000000094349 : adc eax, 0xc4834800 ; sbb byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000009d3d5 : adc eax, 0xc4d56 ; cmovne rax, rdx ; ret
0x00000000000e7057 : adc eax, 0xc51a8 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000e6a73 : adc eax, 0xc570c ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000001205b5 : adc eax, 0xc7c3e ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000000e39fe : adc eax, 0xc8351 ; movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x0000000000049fe3 : adc eax, 0xc8b4800 ; ret 0x8b49
0x000000000009e757 : adc eax, 0xca6d4 ; cmovne rax, rdx ; ret
0x000000000009e407 : adc eax, 0xcaa04 ; cmovne rax, rdx ; ret
0x000000000009e2a7 : adc eax, 0xcd654 ; cmovne rax, rdx ; ret
0x000000000009e63e : adc eax, 0xcfddd ; cmovne rax, rdx ; ret
0x000000000009e59e : adc eax, 0xcfe6d ; cmovne rax, rdx ; ret
0x00000000001164d9 : adc eax, 0xd1a52 ; add rsp, 8 ; ret
0x00000000001164aa : adc eax, 0xd1a81 ; ret
0x000000000009e68e : adc eax, 0xd1edd ; cmovne rax, rdx ; ret
0x000000000009e5ee : adc eax, 0xd1f6d ; cmovne rax, rdx ; ret
0x00000000000bb3ac : adc eax, 0xd4b9f ; cmovne rax, rdx ; ret
0x000000000009ce8b : adc eax, 0xd5c30 ; cmovne rax, rdx ; ret
0x000000000009d42b : adc eax, 0xd6e40 ; cmovne rax, rdx ; ret
0x000000000009e4eb : adc eax, 0xd8900 ; cmovne rax, rdx ; ret
0x00000000000e2954 : adc eax, 0xd8f70010 ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000009e54b : adc eax, 0xda0b0 ; cmovne rax, rdx ; ret
0x0000000000061d70 : adc eax, 0xdb0f6600 ; fisub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x00000000000ce45a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000146236 : adc eax, 0xe205 ; lea r9, [rsp + 0x20] ; call qword ptr [rax]
0x00000000000fe752 : adc eax, 0xe5861 ; mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x00000000000941e4 : adc eax, 0xe8834800 ; add dword ptr [rax + 0x39], ecx ; ret 0x860f
0x000000000009e732 : adc eax, 0xea8e9 ; cmove rax, rdx ; ret
0x000000000009e3e2 : adc eax, 0xeac19 ; cmove rax, rdx ; ret
0x000000000009e282 : adc eax, 0xead99 ; cmove rax, rdx ; ret
0x000000000009e781 : adc eax, 0xef5da ; cmove rax, rdx ; ret
0x000000000009e431 : adc eax, 0xef90a ; cmove rax, rdx ; ret
0x000000000009e2d1 : adc eax, 0xefa8a ; cmove rax, rdx ; ret
0x000000000009e391 : adc eax, 0xeff5a ; cmove rax, rdx ; ret
0x000000000009e20c : adc eax, 0xf05cf ; cmovne rax, rdx ; ret
0x000000000009cdbe : adc eax, 0xf16fd ; cmovne rax, rdx ; ret
0x00000000000ba544 : adc eax, 0xf880272 ; ret
0x000000000012d2fd : adc eax, 0xfff8ccbe ; cmove rax, rdx ; ret
0x000000000012d23d : adc eax, 0xfff8cd9e ; cmove rax, rdx ; ret
0x000000000012d17d : adc eax, 0xfff8ce5e ; cmove rax, rdx ; ret
0x0000000000075001 : adc eax, 0xfffffbb7 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rdx ; jmp rax
0x000000000007ad40 : adc eax, 0xfffffbbf ; add rax, rdx ; jmp rax
0x00000000000ba53f : adc eax, dword ptr [rax + 0x157701fa] ; jb 0xba553 ; mov byte ptr [rdi], cl ; ret
0x00000000000d99bd : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000182d4e : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017fdf9 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011344e : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000507f6 : adc eax, dword ptr [rax] ; add byte ptr [rbp + 0x29], cl ; ret
0x00000000000a9178 : adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000773d2 : adc eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0xbe01
0x00000000000e3522 : adc eax, dword ptr [rax] ; add byte ptr [rdx + 0x7f], bh ; cmovne rax, rdx ; ret
0x0000000000028363 : adc eax, dword ptr [rax] ; mov rdi, r12 ; mov rcx, qword ptr [rbp - 0x70] ; call rcx
0x0000000000028415 : adc eax, dword ptr [rax] ; mov rdi, r14 ; mov rax, qword ptr [rbp - 0x68] ; call rax
0x0000000000027d39 : adc eax, dword ptr [rax] ; mov rdi, rbx ; call r12
0x0000000000028cd6 : adc eax, dword ptr [rax] ; mov rdi, rbx ; call r14
0x00000000000777be : adc eax, dword ptr [rax] ; movsxd rax, dword ptr [rax + rcx*4] ; add rax, r14 ; jmp rax
0x0000000000077dae : adc eax, dword ptr [rax] ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, r14 ; jmp rax
0x000000000006cb30 : adc eax, dword ptr [rax] ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000006d956 : adc eax, dword ptr [rax] ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000e137c : adc eax, dword ptr [rbp + 0x31] ; sar byte ptr [rax + 0x3d], cl ; syscall
0x00000000001811c9 : adc eax, dword ptr [rbx + 0xc8b0001] ; mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x00000000000b693d : adc eax, dword ptr [rbx + 0xf] ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000a6e42 : adc eax, dword ptr [rcx + 0x39] ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0x3941
0x00000000000fcd2f : adc eax, dword ptr [rcx + rcx*4 + 0x5b] ; cmp cl, ch ; retf 0xfffa
0x000000000009162f : adc eax, dword ptr [rcx - 0x78] ; je 0x91660 ; adc ecx, dword ptr [rax - 0x7d] ; ret 0x4901
0x000000000011e001 : adc eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000000b209b : adc eax, dword ptr [rdx] ; mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x00000000000b20db : adc eax, dword ptr [rdx] ; mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000000b20fb : adc eax, dword ptr [rdx] ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000000b1f58 : adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x00000000000b1faa : adc eax, dword ptr [rdx] ; movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000b4d2c : adc eax, dword ptr [rdx] ; xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x000000000014e6af : adc eax, dword ptr [rsi] ; add al, ch ; jae 0x14e6ae ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x000000000018473f : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000056759 : adc eax, eax ; ret
0x00000000000cd9ec : adc eax, ebx ; nop ; mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xcda0c ; ret
0x000000000014caec : adc eax, edi ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000056896 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x0000000000079ff4 : adc ebx, dword ptr [rbx + 0x4c] ; mov eax, ecx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009c664 : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000018aee9 : adc ebx, ebp ; add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000012fd2e : adc ebx, ebp ; ret 0x8b48
0x00000000000e183d : adc ebx, edi ; dec dword ptr [rax + 0x39] ; ret
0x00000000000e1827 : adc ebx, edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000000b7f8c : adc ecx, dword ptr [rax + 0x31] ; retf 0x94c
0x000000000008886c : adc ecx, dword ptr [rax + 1] ; ret
0x000000000015d811 : adc ecx, dword ptr [rax + 1] ; ret 0x3949
0x00000000001204ec : adc ecx, dword ptr [rax - 0x39] ; add eax, 0xc3e68 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000b5ec1 : adc ecx, dword ptr [rax - 0x73] ; jg 0xb5ee4 ; jne 0xb653b ; ret
0x00000000000b75c5 : adc ecx, dword ptr [rax - 0x73] ; jg 0xb75e8 ; jne 0xb7d5b ; ret
0x00000000000339bb : adc ecx, dword ptr [rax - 0x75] ; cli ; ret
0x000000000007bb91 : adc ecx, dword ptr [rax - 0x77] ; ret 0xc148
0x0000000000127424 : adc ecx, dword ptr [rax - 0x77] ; ror dword ptr [rdi], 0x84 ; ret 0
0x00000000000c87d1 : adc ecx, dword ptr [rax - 0x7d] ; mov byte ptr [rcx + rcx*2], 0x83 ; ret
0x000000000002a54d : adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000091634 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4901
0x00000000000c6bf9 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4910
0x00000000000a1433 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x8301
0x000000000002a415 : adc ecx, dword ptr [rax - 0x7d] ; rol dword ptr [rax + rcx*2], 0x83 ; ret
0x00000000000309fc : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000126f10 : adc ecx, dword ptr [rcx - 0x7d] ; ret
0x0000000000147143 : adc ecx, dword ptr [rdi] ; retf 0x1089
0x00000000000b2124 : adc ecx, dword ptr [rdx + 5] ; mov rax, rdi ; ret
0x00000000000b2144 : adc ecx, dword ptr [rdx + 6] ; mov rax, rdi ; ret
0x00000000000b2164 : adc ecx, dword ptr [rdx + 7] ; mov rax, rdi ; ret
0x00000000000b1fae : adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000000b4d95 : adc ecx, dword ptr [rdx + 8] ; xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x00000000000f28cd : adc ecx, edx ; call 0xc4aeb61
0x000000000011e0bc : adc edi, dword ptr [rax + 0x130] ; syscall
0x000000000011344c : adc edi, dword ptr [rax + 0x13] ; syscall
0x0000000000048aec : adc edi, dword ptr [rax + 0x13e] ; syscall
0x00000000001134ec : adc edi, dword ptr [rax + 0x14] ; syscall
0x00000000001175cc : adc edi, dword ptr [rax + 0x1a] ; syscall
0x00000000000e15bc : adc edi, dword ptr [rax + 0x22] ; syscall
0x00000000000e163c : adc edi, dword ptr [rax + 0x23] ; syscall
0x000000000011eb1c : adc edi, dword ptr [rax + 0x2a] ; syscall
0x000000000011ea4c : adc edi, dword ptr [rax + 0x2b] ; syscall
0x000000000011ef5c : adc edi, dword ptr [rax + 0x2e] ; syscall
0x000000000011edfc : adc edi, dword ptr [rax + 0x2f] ; syscall
0x000000000011421c : adc edi, dword ptr [rax + 0x4a] ; syscall
0x00000000001142cc : adc edi, dword ptr [rax + 0x4b] ; syscall
0x000000000010d7dc : adc edi, dword ptr [rax + 0x55] ; syscall
0x000000000010d01c : adc edi, dword ptr [rax + 1] ; syscall
0x000000000010d66c : adc edi, dword ptr [rax + 3] ; syscall
0x00000000001116ec : adc edi, dword ptr [rax + 7] ; syscall
0x0000000000033ffa : adc edi, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000047afb : adc edi, edx ; std ; dec dword ptr [rax - 0x77] ; sub byte ptr [rax - 0x77], cl ; ret
0x00000000000e2a74 : adc edx, dword ptr [rax] ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000056751 : adc edx, ebx ; mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x000000000011db15 : adc esi, dword ptr [rcx + rax - 0x3d] ; xor ebp, ebp ; pop rax ; pop rdi ; call rax
0x0000000000083420 : adc esi, esi ; ret 0x7520
0x000000000009bdf7 : adc qword ptr [r8], r8 ; call 0x6277a
0x0000000000184922 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018d79f : adc qword ptr [rcx + 6], rsi ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000018d7a6 : adc qword ptr [rcx + 7], rdi ; ret
0x000000000018d441 : adc qword ptr [rcx - 1], rbx ; ret
0x000000000018d405 : adc qword ptr [rcx - 1], rdi ; ret
0x000000000018d43a : adc qword ptr [rcx - 2], rdx ; vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x000000000018d638 : adc qword ptr [rcx - 2], rsi ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000018d3fe : adc qword ptr [rcx - 2], rsi ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000018d901 : adc qword ptr [rdi - 7], rsi ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000018d908 : adc qword ptr [rdi - 8], rdi ; ret
0x000000000018db5b : adc qword ptr [rdi], rdx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000018dc87 : adc qword ptr [rsi + 2], rdx ; vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x000000000018dc8e : adc qword ptr [rsi + 3], rdx ; ret
0x000000000018dd24 : adc qword ptr [rsi + 6], rdx ; vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x000000000018dd2b : adc qword ptr [rsi + 7], rdx ; ret
0x000000000018db2d : adc qword ptr [rsi - 1], rdx ; ret
0x000000000018db26 : adc qword ptr [rsi - 2], rdx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x0000000000056750 : adc r10, r11 ; mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x000000000014dd68 : adc r11b, bpl ; ret
0x000000000009272f : adc r11b, r13b ; ret
0x0000000000033ff9 : adc r15d, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000028cd5 : adc r8, qword ptr [rax] ; mov rdi, rbx ; call r14
0x000000000017ff60 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000507f5 : adc r8d, dword ptr [r8] ; add byte ptr [rbp + 0x29], cl ; ret
0x0000000000056895 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000000e26ce : adc sil, r15b ; jmp 0xe260c
0x00000000000ba61f : add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000000f0545 : add ah, bh ; dec dword ptr [rcx] ; ret 0x5189
0x00000000000fd9e0 : add ah, bh ; dec dword ptr [rcx] ; retf 0x5089
0x00000000000ba735 : add ah, bh ; inc dword ptr [rbx] ; div ecx ; mov eax, eax ; ret
0x00000000000ba66a : add ah, bh ; inc dword ptr [rbx] ; ret
0x000000000018dc8a : add ah, byte ptr [rdx - 0xf] ; jl 0x18dcdf ; adc dword ptr [rsi + 3], edx ; ret
0x00000000000b1fab : add ah, byte ptr [rsi + 0xf] ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000000b2038 : add ah, byte ptr [rsi - 0x75] ; add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000000b1fd4 : add ah, byte ptr [rsi - 0x75] ; add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000b20bc : add ah, byte ptr [rsi - 0x75] ; or byte ptr [r14 - 0x77], spl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000b94b5 : add ah, byte ptr [rsi - 0x77] ; js 0xffffffffed3b9721 ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000dd2dd : add al, 0 ; add al, ch ; and eax, dword ptr [rax - 0x76b7000c] ; ret 0x8948
0x00000000001317da : add al, 0 ; add al, ch ; cmp ebp, edi ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000122995 : add al, 0 ; add al, ch ; imul ebp, dword ptr [rcx], -0x10 ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000124472 : add al, 0 ; add al, ch ; mov cs, word ptr [rsi] ; lock dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000df975 : add al, 0 ; add al, ch ; mov ebx, dword ptr [rcx - 0xc] ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000122772 : add al, 0 ; add al, ch ; mov gs, word ptr [rbx] ; lock dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000ddd62 : add al, 0 ; add al, ch ; sahf ; jne 0xddd67 ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000124855 : add al, 0 ; add al, ch ; stosd dword ptr [rdi], eax ; or dh, al ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000001328c2 : add al, 0 ; add al, ch ; sub ch, bh ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000001225c2 : add al, 0 ; add al, ch ; sub eax, 0x8948fff0 ; ret 0x8948
0x00000000001320d2 : add al, 0 ; add al, ch ; xor ch, bh ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000002c473 : add al, 0 ; add bh, dh ; ret 0
0x000000000002c467 : add al, 0 ; add bh, dh ; ret 0xf800
0x000000000002bbc9 : add al, 0 ; add byte ptr [rax + 0x29], cl ; retf 0xe083
0x00000000000c5bd1 : add al, 0 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000119a24 : add al, 0 ; add byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call r12
0x000000000014d6e5 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000003798b : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x0000000000126a54 : add al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 4
0x00000000000ee134 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000017c1ad : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000180cf9 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017c1d1 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014bda3 : add al, 0 ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x000000000014fc37 : add al, 0 ; add byte ptr [rax], al ; jmp 0x14f819
0x000000000014fc36 : add al, 0 ; add byte ptr [rax], al ; jmp 0x14f81a
0x000000000014fc35 : add al, 0 ; add byte ptr [rax], al ; jmp 0x14f81b
0x00000000000a6a64 : add al, 0 ; add byte ptr [rax], al ; jmp 0xa2d64
0x0000000000146173 : add al, 0 ; add byte ptr [rax], al ; mov rdi, rbp ; lea r9, [rsp + 0x20] ; call qword ptr [rax]
0x00000000000ce4e3 : add al, 0 ; add byte ptr [rax], al ; ret
0x000000000010c5bf : add al, 0 ; add byte ptr [rax], al ; syscall
0x000000000002c45f : add al, 0 ; add byte ptr [rbp + 0x36880fd2], al ; add al, 0 ; add bh, dh ; ret 0xf800
0x00000000000aa078 : add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001144bd : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000014e403 : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000062f55 : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000133c0b : add al, 0 ; add byte ptr [rcx + rcx*4 - 6], cl ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00000000001939b5 : add al, 0 ; add byte ptr [rcx - 0x47], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894d
0x000000000003785b : add al, 0 ; add byte ptr [rcx - 0x75], al ; push rbp ; or byte ptr [rcx - 0x75], al ; or al, 0xf ; retf 0x5589
0x00000000001045ee : add al, 0 ; add byte ptr [rcx], dh ; fild dword ptr [rbx - 0x6bf0fb08] ; ret
0x000000000004dde7 : add al, 0 ; add byte ptr [rdi], cl ; ret 0xc101
0x000000000012640b : add al, 0 ; add byte ptr [rdx], al ; call rcx
0x000000000008083b : add al, 0 ; add cl, ch ; ret 0xfffc
0x00000000000dc910 : add al, 0 ; add rsp, 0x80 ; pop rbx ; ret
0x00000000000e1336 : add al, 0 ; mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e1681 : add al, 0 ; mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e15f1 : add al, 0 ; mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00000000000e15d7 : add al, 0 ; mov edi, eax ; mov eax, 0x22 ; syscall
0x0000000000160f4f : add al, 0 ; movsxd r9, dword ptr [r10 + r9*4] ; lea r10, [r10 + r9] ; jmp r10
0x000000000007763c : add al, 0 ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, r14 ; jmp rax
0x0000000000169338 : add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000e26d9 : add al, 0 ; nop dword ptr [rax + rax] ; mov eax, 0x27 ; syscall
0x00000000000e7f9c : add al, 0 ; or byte ptr [rax + 0xf], 0xa3 ; ret 0x830f
0x0000000000149ca0 : add al, 0x10 ; mov byte ptr [rdi + 7], al ; ret
0x0000000000034e00 : add al, 0x10 ; ret
0x0000000000121a45 : add al, 0x10 ; shr eax, cl ; and eax, 1 ; ret
0x00000000000bace6 : add al, 0x11 ; add rdx, 4 ; test r8d, r8d ; jne 0xbaceb ; ret
0x0000000000121b22 : add al, 0x11 ; ret
0x00000000000ba6b4 : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000017c43b : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000017c02b : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x000000000017bb37 : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017c347 : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017bdbb : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000017c0fb : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x000000000017c417 : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017c4e7 : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017c29b : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000017ba8b : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000017be8b : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000017c36b : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000017bb5b : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000017bbfd : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017bf5b : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x000000000017c1cb : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000017bc21 : add al, 0x16 ; sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000009f32b : add al, 0x17 ; mov byte ptr [rsi + rdx], cl ; mov byte ptr [rsi + rdx + 1], al ; jne 0x9f32b ; ret
0x00000000000a8a41 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000181608 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; vzeroupper ; ret
0x00000000000a89da : add al, 0x17 ; sub eax, ecx ; ret
0x00000000001885ee : add al, 0x17 ; vzeroupper ; ret
0x0000000000101ba9 : add al, 0x21 ; int1 ; cmp ecx, dword ptr [rax - 0xc] ; jne 0x101bab ; mov eax, dword ptr [rdx + 8] ; ret
0x0000000000101ba8 : add al, 0x21 ; int1 ; cmp ecx, dword ptr [rax - 0xc] ; jne 0x101bac ; mov eax, dword ptr [rdx + 8] ; ret
0x0000000000115d08 : add al, 0x22 ; or eax, 0x40c64100 ; inc dword ptr [rax] ; ret
0x000000000015441b : add al, 0x24 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call rdx
0x000000000013ba38 : add al, 0x24 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000a003a : add al, 0x24 ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0xa0014
0x00000000000bb1e5 : add al, 0x24 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000043636 : add al, 0x24 ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000043955 : add al, 0x24 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000121114 : add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000121175 : add al, 0x24 ; add rsp, 0x40 ; ret
0x00000000001254cb : add al, 0x24 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000014d245 : add al, 0x24 ; jne 0x14d25a ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000147e87 : add al, 0x24 ; mov dword ptr [rbx], eax ; mov eax, 1 ; jmp 0x147e66
0x00000000001544a7 : add al, 0x24 ; mov dword ptr [rbx], eax ; mov eax, 1 ; jmp 0x154486
0x0000000000154527 : add al, 0x24 ; mov dword ptr [rbx], eax ; mov eax, 1 ; jmp 0x154506
0x0000000000154cf7 : add al, 0x24 ; mov dword ptr [rbx], eax ; mov eax, 1 ; jmp 0x154cd6
0x00000000001545e6 : add al, 0x24 ; mov qword ptr [rbx], rax ; mov eax, 1 ; jmp 0x1545c7
0x0000000000118917 : add al, 0x24 ; mov qword ptr [rsp + 8], rbx ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000013b740 : add al, 0x24 ; mov qword ptr [rsp + 8], rdx ; jmp 0x13b703
0x00000000000bb1b3 : add al, 0x24 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008e14b : add al, 0x24 ; mov rdi, rbx ; call rax
0x000000000009cc6e : add al, 0x24 ; mov rdx, qword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000f4d1a : add al, 0x24 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009afda : add al, 0x24 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009acab : add al, 0x24 ; test rax, rax ; je 0x9ad93 ; call rax
0x000000000012c383 : add al, 0x25 ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000026eca : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000152181 : add al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x15219a ; add rsp, 0x78 ; ret
0x00000000001521f1 : add al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x15220a ; add rsp, 0x78 ; ret
0x0000000000152261 : add al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x15227a ; add rsp, 0x78 ; ret
0x00000000001522c2 : add al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x1522db ; add rsp, 0x78 ; ret
0x0000000000152326 : add al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x15233f ; add rsp, 0x78 ; ret
0x0000000000152391 : add al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x1523aa ; add rsp, 0x78 ; ret
0x000000000015240b : add al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x152424 ; add rsp, 0x78 ; ret
0x0000000000152949 : add al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x152984 ; add rsp, 0x28 ; ret
0x000000000015442b : add al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x154444 ; add rsp, 0x48 ; ret
0x0000000000043ad9 : add al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x43af2 ; add rsp, 0x18 ; ret
0x00000000000486a3 : add al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x486bc ; add rsp, 0x18 ; ret
0x00000000000486f0 : add al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x48709 ; add rsp, 0x18 ; ret
0x000000000005836b : add al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x583b7 ; leave ; ret
0x000000000008cfce : add al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x8cff3 ; add rsp, 0x48 ; ret
0x0000000000026eab : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x0000000000026b9c : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000029b66 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000055995 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov edi, dword ptr [rsp + 0x24] ; call rax
0x00000000000835e7 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rbp ; call rax
0x00000000000dbb74 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; pop r13 ; pop r14 ; jmp rax
0x000000000012fd25 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; rol rax, 0x11 ; jmp 0x12fcfe
0x000000000012c6d9 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x12c71b ; call rax
0x00000000000d2d13 : add al, 0x28 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000013b301 : add al, 0x2b ; pop rbx ; pop rbp ; ret
0x0000000000151548 : add al, 0x2c ; add byte ptr [rbx - 0x48], bl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000538c2 : add al, 0x30 ; add byte ptr [rax], al ; add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0x1de8
0x000000000012ef4f : add al, 0x30 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; and al, 0x10 ; call 0x8b1cc
0x00000000000b94e9 : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000b94fb : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000b00ae : add al, 0x31 ; ret
0x00000000000affaa : add al, 0x37 ; ret
0x0000000000181c29 : add al, 0x38 ; movzx edx, byte ptr [rdx + rdi] ; sub eax, edx ; vzeroupper ; ret
0x0000000000140c2c : add al, 0x39 ; pop rdi ; cmp byte ptr [rdi], cl ; mov bh, 0x40 ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x00000000000f4df2 : add al, 0x39 ; retf 0x197f
0x000000000008731f : add al, 0x3a ; ret
0x00000000000cd8c2 : add al, 0x3b ; add al, 0xf ; test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x000000000008a3fa : add al, 0x41 ; mov ecx, dword ptr [rax + 4] ; and eax, 1 ; mov edx, eax ; jmp 0x8a3b3
0x00000000000f4dff : add al, 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000baceb : add al, 0x45 ; test eax, eax ; jne 0xbace6 ; ret
0x000000000010b7ba : add al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x0000000000151e79 : add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010b74c : add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bb456 : add al, 0x48 ; cmovne eax, edx ; ret
0x000000000005c2c9 : add al, 0x48 ; cmp edi, 0xf ; ja 0x5c2ba ; mov rax, rsi ; ret
0x00000000000b6a8b : add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x00000000000b78cb : add al, 0x48 ; lea eax, [rdi + 6] ; ret
0x000000000013b5f1 : add al, 0x48 ; lea eax, [rdi + rsi + 8] ; ret
0x00000000001784e9 : add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x00000000001784fb : add al, 0x48 ; lea eax, [rdx + 5] ; ret
0x0000000000175fca : add al, 0x48 ; lea ecx, [rdx + 4] ; jne 0x1762cb ; ret
0x00000000000b5cd7 : add al, 0x48 ; lea edi, [rdi + 4] ; jne 0xb653b ; ret
0x00000000000b738b : add al, 0x48 ; lea edi, [rdi + 4] ; jne 0xb7d5b ; ret
0x000000000009328d : add al, 0x48 ; lea edx, [rax + 1] ; mov qword ptr [rip + 0x151037], rdx ; ret
0x0000000000084bd8 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x0000000000086c63 : add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rcx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000016b41a : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x000000000008561c : add al, 0x48 ; mov dword ptr [rdx + 0x20], eax ; mov eax, edi ; mov dword ptr [rcx], edi ; ret
0x0000000000085765 : add al, 0x48 ; mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x00000000000a711d : add al, 0x48 ; mov eax, edi ; ret
0x000000000016b413 : add al, 0x48 ; mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000b0354 : add al, 0x48 ; xor eax, eax ; ret
0x00000000001493df : add al, 0x48 ; xor eax, edx ; mov qword ptr [rdi], r8 ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000bb1b0 : add al, 0x49 ; mov dword ptr [rsp], eax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001484a8 : add al, 0x4c ; cld ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x000000000005c040 : add al, 0x4c ; cmp edi, eax ; jbe 0x5c03f ; pop rbx ; ret
0x00000000000bbc54 : add al, 0x4c ; lea ecx, [rsp + 0x20] ; call rbx
0x00000000000bb8a0 : add al, 0x4c ; lea ecx, [rsp + 0x28] ; call rbx
0x000000000012b744 : add al, 0x50 ; shr ax, 0xe ; and eax, 1 ; ret
0x000000000010b624 : add al, 0x5b ; mov eax, ecx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010b6a9 : add al, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000001784f7 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x00000000000b203c : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000000309fa : add al, 0x72 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x00000000000ba53d : add al, 0x73 ; adc eax, dword ptr [rax + 0x157701fa] ; jb 0xba555 ; mov byte ptr [rdi], cl ; ret
0x0000000000034dca : add al, 0x73 ; and al, 0x83 ; ret 0x8b05
0x000000000002ccf1 : add al, 0x74 ; and eax, 0x833fe283 ; retf 0x4180
0x000000000010c284 : add al, 0x74 ; or dword ptr [rax + 0x1c], edi ; syscall
0x00000000000eaac2 : add al, 0x74 ; xchg eax, edi ; mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x000000000002b1a9 : add al, 0x74 ; xor cl, byte ptr [rcx - 0x73] ; add cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000110e26 : add al, 0x75 ; adc al, 0x8b ; jge 0x110e5c ; call 0x10d898
0x0000000000110e25 : add al, 0x75 ; adc al, 0x8b ; jge 0x110e5d ; call 0x10d899
0x0000000000110e24 : add al, 0x75 ; adc al, 0x8b ; jge 0x110e5e ; call 0x10d89a
0x000000000004817a : add al, 0x75 ; add eax, 0x18c48348 ; ret
0x00000000000f5fd4 : add al, 0x75 ; mov edi, 0xf708588b ; ret
0x00000000000ed62a : add al, 0x75 ; push rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014cdfa : add al, 0x75 ; ret
0x0000000000159b2b : add al, 0x75 ; retf 0xbd49
0x0000000000111572 : add al, 0x77 ; or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x00000000000351d0 : add al, 0x78 ; and ax, 0x100 ; movzx eax, ax ; ret
0x00000000000351f0 : add al, 0x78 ; and ax, 0x1000 ; movzx eax, ax ; ret
0x0000000000035130 : add al, 0x78 ; and ax, 0x200 ; movzx eax, ax ; ret
0x00000000000351b0 : add al, 0x78 ; and ax, 0x2000 ; movzx eax, ax ; ret
0x00000000000350d0 : add al, 0x78 ; and ax, 0x400 ; movzx eax, ax ; ret
0x0000000000035170 : add al, 0x78 ; and ax, 0x4000 ; movzx eax, ax ; ret
0x0000000000035110 : add al, 0x78 ; and ax, 0x800 ; movzx eax, ax ; ret
0x0000000000035150 : add al, 0x78 ; and ax, 0x8000 ; movzx eax, ax ; ret
0x0000000000035270 : add al, 0x78 ; and eax, 1 ; ret
0x00000000000350f0 : add al, 0x78 ; and eax, 2 ; movzx eax, ax ; ret
0x0000000000035190 : add al, 0x78 ; and eax, 4 ; movzx eax, ax ; ret
0x00000000000350b0 : add al, 0x78 ; and eax, 8 ; movzx eax, ax ; ret
0x000000000009f539 : add al, 0x80 ; jb 0x9f551 ; sub al, bl ; ret
0x00000000000ecc7f : add al, 0x80 ; jnp 0xeccf0 ; add byte ptr [rcx - 0x7af0b3bd], cl ; retf
0x00000000000baca4 : add al, 0x80 ; sub eax, dword ptr [r8 + r9*4] ; je 0xbac90 ; ret
0x000000000006406f : add al, 0x81 ; add rax, rcx ; jmp rax
0x0000000000191a68 : add al, 0x81 ; add rcx, rax ; jmp rcx
0x00000000000bac5a : add al, 0x81 ; je 0xbac44 ; ret
0x000000000017d8db : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000048531 : add al, 0x81 ; mov qword ptr [rsi + 0x10], r9 ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x00000000000bac56 : add al, 0x81 ; sub eax, dword ptr [rcx + r8*4] ; je 0xbac48 ; ret
0x000000000017f1b3 : add al, 0x81 ; sub eax, edx ; ret
0x0000000000027298 : add al, 0x82 ; add rax, rdx ; jmp rax
0x00000000001211e4 : add al, 0x82 ; mov eax, dword ptr [rax + rcx] ; mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x00000000000ad417 : add al, 0x82 ; sub eax, ecx ; ret
0x00000000000c8f36 : add al, 0x83 ; adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f93db : add al, 0x83 ; add rax, rbx ; jmp rax
0x000000000006deec : add al, 0x83 ; clc ; pop rbp ; cmove r9, rdx ; jmp 0x6df13
0x00000000000a430c : add al, 0x83 ; cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4006
0x000000000013b5c0 : add al, 0x83 ; loopne 0x13b647 ; ret
0x000000000008a3ea : add al, 0x83 ; loopne 0x8a3f7 ; mov edx, eax ; mov eax, edx ; ret
0x000000000008a3fe : add al, 0x83 ; loopne 0x8a408 ; mov edx, eax ; jmp 0x8a3af
0x000000000008a3fd : add al, 0x83 ; loopne 0x8a409 ; mov edx, eax ; jmp 0x8a3b0
0x000000000008a4ee : add al, 0x83 ; loopne 0x8a4f8 ; mov edx, eax ; jmp 0x8a49f
0x000000000008a4ed : add al, 0x83 ; loopne 0x8a4f9 ; mov edx, eax ; jmp 0x8a4a0
0x000000000008d2f4 : add al, 0x83 ; loopne 0x8d2fd ; ret
0x00000000000601c7 : add al, 0x83 ; ret
0x000000000013b46f : add al, 0x83 ; ret 0x3908
0x0000000000060cad : add al, 0x83 ; ret 0x4802
0x000000000013b44a : add al, 0x83 ; ret 0x8108
0x000000000004464f : add al, 0x83 ; ret 0xf701
0x000000000010b9ea : add al, 0x83 ; retf 0xe803
0x00000000000e8090 : add al, 0x85 ; fstp xword ptr [rcx - 0x17] ; lea rax, [rdx + rax*8] ; jmp 0xe8078
0x00000000000e808f : add al, 0x85 ; fstp xword ptr [rcx - 0x17] ; lea rax, [rdx + rax*8] ; jmp 0xe8079
0x00000000000baf23 : add al, 0x85 ; leave ; jne 0xbaef5 ; ret
0x00000000000baf22 : add al, 0x85 ; leave ; jne 0xbaef6 ; ret
0x00000000000bb22d : add al, 0x85 ; leave ; jne 0xbb22a ; xor edi, edi ; mov rax, rdi ; ret
0x00000000000bb4b5 : add al, 0x85 ; ror byte ptr [rdi], 0x84 ; retf 0
0x00000000000e661f : add al, 0x85 ; sal byte ptr [rbp - 0x2d], cl ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bc6b9 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x0000000000075008 : add al, 0x86 ; add rax, rdx ; jmp rax
0x0000000000065cef : add al, 0x86 ; add rax, rsi ; jmp rax
0x0000000000121a42 : add al, 0x86 ; mov eax, dword ptr [rax + rdx] ; shr eax, cl ; and eax, 1 ; ret
0x000000000006cd24 : add al, 0x86 ; mov r11d, dword ptr [rbp - 0x5a8] ; add rax, rsi ; jmp rax
0x0000000000077640 : add al, 0x87 ; add rax, r14 ; jmp rax
0x0000000000080a43 : add al, 0x87 ; add rax, rdi ; jmp rax
0x000000000007de5f : add al, 0x87 ; add rax, rdx ; jmp rax
0x00000000001784e6 : add al, 0x88 ; add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x00000000000b201b : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x00000000000777c2 : add al, 0x88 ; add rax, r14 ; jmp rax
0x000000000007de1e : add al, 0x88 ; add rax, rdx ; jmp rax
0x00000000000baca8 : add al, 0x88 ; je 0xbac8c ; ret
0x00000000000bb4b2 : add al, 0x89 ; add al, 0x85 ; ror byte ptr [rdi], 0x84 ; retf 0
0x00000000000482b1 : add al, 0x89 ; cmp dword ptr [rcx + 0x39], ecx ; retf 0x850f
0x0000000000048210 : add al, 0x89 ; cmp dword ptr [rcx + 0x39], ecx ; retf 0xc875
0x00000000000ca4dd : add al, 0x89 ; fucomip st(0) ; retf
0x00000000000b94e4 : add al, 0x89 ; js 0xffffffffed3b994e ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000b94f5 : add al, 0x89 ; pcmpgtd mm1, qword ptr [rcx - 0x12cffba9] ; mov byte ptr [rdi + 6], ch ; ret
0x0000000000155bf0 : add al, 0x89 ; push rdi ; sub byte ptr [rbx - 0x3f7cb7f0], cl ; add al, 0xf ; retf 0x1689
0x000000000010f3f0 : add al, 0x89 ; ret
0x00000000000fe6f0 : add al, 0x89 ; ret 0xb60f
0x000000000014aa7f : add al, 0x89 ; retf 0x3941
0x0000000000120c49 : add al, 0x89 ; retf 0x8d4d
0x00000000000bc6b3 : add al, 0x8b ; adc byte ptr [rcx], bh ; bnd je 0xbc6c8 ; test edx, edx ; jne 0xbc6ba ; ret
0x00000000000bc6b3 : add al, 0x8b ; adc byte ptr [rcx], bh ; bnd je 0xbc6c9 ; test edx, edx ; jne 0xbc6bb ; ret
0x00000000000b2004 : add al, 0x8b ; add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x00000000000eaf67 : add al, 0x8b ; or eax, 0xe03944fc ; jg 0xeaf6b ; jmp 0xeaf48
0x00000000000ec902 : add al, 0x8b ; push rbp ; add al, 1 ; ret 0x341
0x00000000000cdb0b : add al, 0x8b ; push rsi ; cld ; mov dword ptr [rsi + rcx], edx ; test edx, edx ; jne 0xcdb12 ; ret
0x00000000000cdb0b : add al, 0x8b ; push rsi ; cld ; mov dword ptr [rsi + rcx], edx ; test edx, edx ; jne 0xcdb13 ; ret
0x000000000014bcd8 : add al, 0x8f ; add rax, rdi ; jmp rax
0x0000000000077db2 : add al, 0x90 ; add rax, r14 ; jmp rax
0x000000000007ad3c : add al, 0x90 ; lea rdx, [rip - 0x441] ; add rax, rdx ; jmp rax
0x00000000000ba683 : add al, 0x96 ; add rax, rsi ; jmp rax
0x00000000000f8a50 : add al, 0x96 ; mov r11, rdi ; add rax, rsi ; jmp rax
0x00000000000e3a05 : add al, 0x9a ; add rax, rdx ; jmp rax
0x00000000001218fa : add al, 0xa ; ret
0x0000000000181333 : add al, 0xa ; sub rax, rdi ; ret
0x00000000000ee747 : add al, 0xa1 ; add rax, rcx ; jmp rax
0x0000000000091007 : add al, 0xa8 ; add dword ptr [rsp + rbp - 0x77], esi ; ret 0x8948
0x00000000000ee83e : add al, 0xaa ; add rax, rdx ; jmp rax
0x000000000009e408 : add al, 0xaa ; or al, 0 ; cmovne rax, rdx ; ret
0x00000000000fc7de : add al, 0xaf ; add rax, rdi ; jmp rax
0x0000000000144e97 : add al, 0xb1 ; shr rdx, 3 ; add rax, rcx ; jmp rax
0x00000000000e2ffd : add al, 0xb2 ; add rax, rdx ; jmp rax
0x00000000000fa0c5 : add al, 0xb3 ; add rax, rbx ; jmp rax
0x00000000000d8e59 : add al, 0xb7 ; add rax, rdi ; jmp rax
0x0000000000034dfd : add al, 0xb7 ; mov eax, dword ptr [rax + rdx] ; ret
0x0000000000155ea3 : add al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000035458 : add al, 0xb8 ; ret
0x00000000000e8b72 : add al, 0xba ; add rax, rdx ; jmp rax
0x0000000000135838 : add al, 0xbe ; adc byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x1357fd
0x00000000000ba5bb : add al, 0xbe ; add rax, rsi ; jmp rax
0x000000000006d954 : add al, 0xc0 ; adc eax, dword ptr [rax] ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000e8097 : add al, 0xc2 ; jmp 0xe8071
0x0000000000151eb3 : add al, 0xd0 ; cmp qword ptr [rax], rbp ; je 0x151ecb ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dbea8 : add al, 0xd0 ; ret
0x000000000005c5b9 : add al, 0xd1 ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000015e7a7 : add al, 0xd7 ; xor eax, eax ; ret
0x000000000018aff8 : add al, 0xdc ; add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00000000000567ed : add al, 0xde ; lea r9, [rdx] ; jmp 0x56849
0x00000000000584ad : add al, 0xde ; lea r9, [rdx] ; jmp 0x58509
0x0000000000031ec3 : add al, 0xe0 ; test rax, rax ; je 0x31ed3 ; call rax
0x00000000000bb51e : add al, 0xe8 ; cld ; pushfq ; idiv bh ; mov rax, rbx ; pop rbx ; ret
0x0000000000155e47 : add al, 0xe8 ; ret
0x0000000000064f65 : add al, 0xe9 ; ret
0x0000000000038796 : add al, 0xeb ; adc cl, byte ptr [rax - 0x7d] ; ret 0x8b08
0x0000000000153d8e : add al, 0xeb ; xchg eax, esp ; nop dword ptr [rax] ; ret
0x00000000001485df : add al, 0xf ; enter 0x289, -0x77 ; fiadd dword ptr [rcx - 1] ; push rbp ; adc byte ptr [rcx], bh ; ret
0x00000000000350d5 : add al, 0xf ; mov bh, 0xc0 ; ret
0x00000000000a714e : add al, 0xf ; mov dh, 0x44 ; and al, 0xe ; mov byte ptr [rdi + 6], al ; mov rax, rdi ; ret
0x00000000000a7081 : add al, 0xf ; mov dh, 0x54 ; and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x00000000000a7233 : add al, 0xf ; mov dh, 0x54 ; and al, 0xe ; mov byte ptr [rdi + 6], dl ; ret
0x000000000017b9ed : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x00000000001827b6 : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; vzeroupper ; ret
0x0000000000155bf9 : add al, 0xf ; retf 0x1689
0x0000000000155bc9 : add al, 0xf ; retf 0x5089
0x000000000006f61c : add al, 0xf ; test byte ptr [rip - 0x7cfffffb], ah ; ret 0x3901
0x00000000000a56c3 : add al, 0xf ; test byte ptr [rsp + rdi*8 - 1], cl ; dec dword ptr [rax + 0x63] ; dec dword ptr [rcx - 0x77] ; retf 0x8d44
0x00000000000cd8c5 : add al, 0xf ; test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x00000000000b5cdb : add al, 0xf ; test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x000000000009724d : add al, 0xf ; test ecx, eax ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x00000000001045f5 : add al, 0xf ; xchg eax, esp ; ret
0x000000000016b783 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000014bd93 : add al, 1 ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x000000000013acae : add al, 1 ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000000cd8f8 : add al, 1 ; add byte ptr [rax], al ; ret
0x000000000010e1e4 : add al, 1 ; add byte ptr [rax], al ; syscall
0x00000000000661a8 : add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000000eaeb5 : add al, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000063b40 : add al, 1 ; ret
0x00000000000ec905 : add al, 1 ; ret 0x341
0x0000000000063bb2 : add al, 1 ; xor eax, eax ; ret
0x00000000000c5245 : add al, 2 ; cmp eax, 0xff ; je 0xc5258 ; ret
0x00000000000a74ef : add al, 3 ; add byte ptr [rax - 0x77], cl ; ret 0x96e8
0x000000000017a408 : add al, 3 ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000018c1d7 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000168b75 : add al, 5 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000b5e28 : add al, 7 ; add byte ptr [rax], al ; ret
0x00000000000afadd : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000018a62e : add al, 7 ; cmp esi, dword ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x0000000000185b1e : add al, 7 ; cmp sil, byte ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x00000000000afcf8 : add al, 7 ; ret
0x0000000000188ca4 : add al, 7 ; vzeroupper ; ret
0x0000000000194418 : add al, 8 ; add byte ptr [rax], al ; mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000008c1b3 : add al, 8 ; add byte ptr [rax], al ; ret
0x00000000000dd511 : add al, 8 ; add byte ptr [rcx + rcx*4 - 0x10], cl ; call rax
0x00000000001211e7 : add al, 8 ; mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x00000000000a8baf : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x0000000000181789 : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; vzeroupper ; ret
0x000000000012f2f3 : add al, al ; cmp edx, 0x80000000 ; cmovne eax, edi ; ret
0x00000000000b6a5c : add al, bl ; nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x000000000008c27c : add al, bl ; nop ; mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000008c16c : add al, bl ; nop ; mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x00000000000ce47a : add al, bl ; nop dword ptr [rax] ; add rax, 1 ; ret
0x00000000000a7032 : add al, bl ; nop dword ptr [rax] ; mov dword ptr [rdi], r8d ; add rax, rdi ; ret
0x00000000000b612b : add al, bl ; nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000b5458 : add al, bl ; nop word ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000011826f : add al, bl ; retf 0xeb83
0x000000000010f186 : add al, bpl ; jae 0x10f16c ; cld ; dec dword ptr [rax - 0x77] ; ret
0x0000000000113906 : add al, bpl ; ret
0x0000000000185822 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000b4fd1 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x00000000000352b9 : add al, byte ptr [rax] ; add bl, al ; nop dword ptr [rax] ; mov eax, edi ; and eax, 0x7f ; ret
0x00000000000951c7 : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; retf
0x0000000000097c4d : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x00000000000eedf2 : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000fe323 : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; retf 0x8b4c
0x00000000000aa582 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000015d93e : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret 0x3a83
0x00000000000424cc : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; retf 0xdeb
0x00000000000feaf3 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ror dword ptr [rcx + 0x39], 1 ; retf
0x0000000000181b6a : add al, byte ptr [rax] ; add byte ptr [rax + 5], cl ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000058f4b : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000119b74 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call r12
0x0000000000160706 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000014970f : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xb45
0x0000000000082e8d : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x000000000018de24 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000017a43b : add al, byte ptr [rax] ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x00000000000eff36 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c776c : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000ef8df : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000002b4ad : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x000000000017c34d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017ef71 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017c371 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000034cd2 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0x200
0x00000000000585d1 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000000587bd : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x000000000015b568 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdx - 1], bh ; mov eax, edx ; ret
0x000000000014c82f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x000000000014f25f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x000000000014e91f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x000000000014bc42 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0xc8 ; jmp rcx
0x000000000014785e : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rcx
0x000000000011bffd : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000152633 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call rax
0x000000000015441d : add al, byte ptr [rax] ; add byte ptr [rax], al ; call rdx
0x0000000000101bf5 : add al, byte ptr [rax] ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x000000000011cf86 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x11c00d
0x00000000001458e2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x1458b7
0x00000000000a6af1 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0xa2df3
0x0000000000043ecc : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x000000000011663a : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, eax ; call 0x1128e8
0x000000000012c65f : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, edx ; syscall
0x00000000000587c3 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000013b089 : add al, byte ptr [rax] ; add byte ptr [rax], al ; sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x0000000000146f7d : add al, byte ptr [rax] ; add byte ptr [rax], al ; test eax, eax ; je 0x146f9a ; xor eax, eax ; ret
0x000000000011ba4a : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000129eb9 : add al, byte ptr [rax] ; add byte ptr [rbp + 0x32], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000632cc : add al, byte ptr [rax] ; add byte ptr [rbp + 0x480d75c0], al ; mov eax, ebx ; pop rbx ; ret
0x00000000000aa1f8 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000064253 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000004528e : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000124119 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000010dae7 : add al, byte ptr [rax] ; add byte ptr [rbx + rdi + 0x34], cl ; and al, 0xf ; xchg eax, esp ; ret 0x2044
0x000000000018fb64 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000080ccb : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 - 0x28], al ; jmp 0x80c9c
0x00000000000378a9 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], al ; push rbp ; sbb byte ptr [rdi], cl ; retf 0xd289
0x0000000000119258 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; call r12
0x000000000019262c : add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0x8166
0x00000000000e9efe : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000a27a2 : add al, byte ptr [rax] ; add byte ptr [rcx - 9], al ; ret 0xf800
0x00000000000d6402 : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov bh, 0x15 ; retf 0xd4f
0x00000000000ffdfa : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; test dword ptr [rbx], esi ; add dword ptr [rax], eax ; add al, ch ; pop rax ; retf 0xfffd
0x0000000000060aed : add al, byte ptr [rax] ; cmp eax, -1 ; sete al ; jmp 0x60ac3
0x0000000000060d3d : add al, byte ptr [rax] ; cmp eax, -1 ; sete al ; jmp 0x60d13
0x00000000001885b8 : add al, byte ptr [rax] ; lea rax, [rdi + 2] ; vzeroupper ; ret
0x0000000000170531 : add al, byte ptr [rax] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000001376a8 : add al, byte ptr [rax] ; mov rax, qword ptr [rsp + 8] ; mov rdi, rbx ; call rax
0x000000000011b68f : add al, byte ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x00000000001369c9 : add al, byte ptr [rax] ; mov rdi, rbx ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000194ca2 : add al, byte ptr [rax] ; movss dword ptr [rsp - 0x28], xmm0 ; ret
0x00000000001926f5 : add al, byte ptr [rax] ; movsxd r12, dword ptr [rdx + r12*4] ; add rdx, r12 ; jmp rdx
0x0000000000191a64 : add al, byte ptr [rax] ; movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x000000000018aeeb : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000010e99c : add al, byte ptr [rax] ; nop ; mov eax, 0x56 ; syscall
0x000000000010caea : add al, byte ptr [rax] ; nop dword ptr [rax] ; mov eax, 0x5f ; syscall
0x0000000000133e7a : add al, byte ptr [rax] ; pop r12 ; pop r13 ; ret
0x000000000013df9b : add al, byte ptr [rax] ; ret
0x000000000013b48a : add al, byte ptr [rax] ; shr rcx, 3 ; mov byte ptr [rax + 1], cl ; pop rbx ; ret
0x0000000000186b28 : add al, byte ptr [rax] ; vzeroupper ; ret
0x0000000000120805 : add al, byte ptr [rbx + 0x574fff8] ; add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x000000000002a69f : add al, byte ptr [rbx + 0x941f8e0] ; ret 0x8944
0x00000000000ecaa2 : add al, byte ptr [rbx - 0x3fe6fe06] ; and eax, 2 ; add eax, 8 ; ret
0x00000000000ecaaa : add al, byte ptr [rbx - 0x6f3cf740] ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x00000000000e5569 : add al, byte ptr [rbx - 0x7cb7fd37] ; ret 0xeb02
0x000000000013b3aa : add al, byte ptr [rcx + 0x38] ; retf
0x000000000012bdde : add al, byte ptr [rcx + 0x39] ; ret
0x0000000000142f2e : add al, byte ptr [rcx + 0x5e] ; sub eax, 1 ; ret
0x00000000000d0aa4 : add al, byte ptr [rcx + 1] ; ret
0x000000000008732e : add al, byte ptr [rcx - 0x73] ; inc ebx ; xor eax, eax ; ret
0x000000000013b35c : add al, byte ptr [rcx - 0x77] ; add byte ptr [rcx + 0x11894dd0], cl ; ret
0x000000000005417f : add al, byte ptr [rcx - 0x77] ; ret
0x000000000013acd8 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; cmovne eax, edx ; ret
0x000000000010cc21 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000001181df : add al, byte ptr [rcx] ; pop rbp ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000075aaa : add al, byte ptr [rcx] ; retf
0x0000000000117ca4 : add al, byte ptr [rcx] ; sub esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000ce456 : add al, byte ptr [rdx + rdx*8 - 0x2e77ea8c] ; and cl, 0xf ; je 0xce48c ; ret
0x00000000000586a3 : add al, byte ptr [rdx] ; sar bh, 0xff ; ret
0x0000000000168de8 : add al, byte ptr [rip + 0x14634900] ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000b5f2a : add al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x00000000000d0699 : add al, ch ; adc dword ptr [rbx - 9], esp ; dec dword ptr [rax - 0x77] ; ret
0x000000000014d1f9 : add al, ch ; and dword ptr [rdi + 0x3d83ffef], esi ; retf 0x9d1
0x00000000000dd2df : add al, ch ; and eax, dword ptr [rax - 0x76b7000c] ; ret 0x8948
0x0000000000113ccb : add al, ch ; call qword ptr [rdx]
0x000000000018ae06 : add al, ch ; clc ; ja 0x18adda ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000009717e : add al, ch ; cld ; ret
0x000000000013adcd : add al, ch ; cmp eax, 0x89fffe3e ; ret
0x000000000013280f : add al, ch ; cmp ebp, dword ptr [rax] ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000012250f : add al, ch ; cmp ebp, dword ptr [rbx] ; lock dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000001317dc : add al, ch ; cmp ebp, edi ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000001226b2 : add al, ch ; cwde ; sub eax, esi ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000011004c : add al, ch ; ficom word ptr [rax - 0xf] ; dec dword ptr [rax - 0x77] ; ret 0x3b48
0x0000000000122997 : add al, ch ; imul ebp, dword ptr [rcx], -0x10 ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000001108c2 : add al, ch ; int1 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000028e49 : add al, ch ; int1 ; ret 0xffff
0x0000000000147a19 : add al, ch ; int1 ; xlatb ; in eax, dx ; dec dword ptr [rax - 0x77] ; ret
0x000000000010f187 : add al, ch ; jae 0x10f16b ; cld ; dec dword ptr [rax - 0x77] ; ret
0x000000000014e6b1 : add al, ch ; jae 0x14e6ac ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x0000000000106a56 : add al, ch ; je 0x106ac7 ; stc ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000090b6f : add al, ch ; jmp 0x90b39
0x00000000000644bb : add al, ch ; jmp rdi
0x00000000000e2dbd : add al, ch ; lodsd eax, dword ptr [rsi] ; and al, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000012964d : add al, ch ; lodsd eax, dword ptr [rsi] ; ret
0x00000000000fe397 : add al, ch ; mov bl, 0x6c ; dec dword ptr [rax - 0x77] ; ret
0x0000000000124474 : add al, ch ; mov cs, word ptr [rsi] ; lock dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000043824 : add al, ch ; mov dh, 0xed ; adc al, 0 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000df977 : add al, ch ; mov ebx, dword ptr [rcx - 0xc] ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000001243bf : add al, ch ; mov ecx, dword ptr [rax + rsi*8] ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000122774 : add al, ch ; mov gs, word ptr [rbx] ; lock dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000098d57 : add al, ch ; movsxd rdi, dword ptr [rbp - 0x76b70001] ; ret
0x00000000001293b7 : add al, ch ; or esi, 0xffffffff ; dec dword ptr [rcx] ; ret
0x000000000004386c : add al, ch ; outsb dx, byte ptr [rsi] ; in eax, dx ; adc al, 0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012fedb : add al, ch ; outsd dx, dword ptr [rsi] ; push rcx ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000ffe02 : add al, ch ; pop rax ; retf 0xfffd
0x0000000000028d70 : add al, ch ; pop rdx ; ret 0
0x00000000001160fd : add al, ch ; popfq ; ret 0xfff6
0x0000000000092727 : add al, ch ; push rbx ; jrcxz 0x92736 ; dec dword ptr [rax + 0x63] ; adc r11b, r13b ; ret
0x00000000000df253 : add al, ch ; push rdi ; retf
0x0000000000112f44 : add al, ch ; push rsi ; or ebp, edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000004b947 : add al, ch ; ret
0x0000000000136a56 : add al, ch ; ret 0
0x0000000000131c78 : add al, ch ; ret 0x112
0x000000000008bad8 : add al, ch ; ret 0x5e
0x00000000000880b8 : add al, ch ; ret 0xa3c
0x00000000000c9a08 : add al, ch ; ret 0xf6b5
0x00000000000bfa08 : add al, ch ; ret 0xf755
0x00000000001505b8 : add al, ch ; ret 0xfdb7
0x00000000001390cf : add al, ch ; ret 0xffee
0x0000000000116150 : add al, ch ; ret 0xfff6
0x0000000000025fdf : add al, ch ; retf
0x0000000000059110 : add al, ch ; retf 0x1374
0x0000000000085dd0 : add al, ch ; retf 0x3e
0x0000000000029100 : add al, ch ; retf 0xbe
0x0000000000136b00 : add al, ch ; retf 0xefe4
0x0000000000133470 : add al, ch ; retf 0xfa
0x000000000008bc00 : add al, ch ; retf 0xfa93
0x00000000000450a0 : add al, ch ; retf 0xfff0
0x00000000000ddd64 : add al, ch ; sahf ; jne 0xddd65 ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000015ca5d : add al, ch ; sbb eax, 0x89fffb02 ; ret
0x00000000000dff2f : add al, ch ; sbb edx, dword ptr [rcx - 0xc] ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000dde4f : add al, ch ; sti ; jno 0xdde50 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000124857 : add al, ch ; stosd dword ptr [rdi], eax ; or dh, al ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000001328c4 : add al, ch ; sub ch, bh ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000001225c4 : add al, ch ; sub eax, 0x8948fff0 ; ret 0x8948
0x0000000000160a7d : add al, ch ; sub eax, 0x89fffabb ; ret 0xc085
0x000000000013201f : add al, ch ; sub esi, dword ptr [rax] ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000ddcaf : add al, ch ; wait ; jae 0xddcb0 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000028ea9 : add al, ch ; xchg eax, ecx ; ret 0xffff
0x0000000000041ebe : add al, ch ; xor al, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x00000000001320d4 : add al, ch ; xor ch, bh ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000010a0df : add al, ch ; xor esi, dword ptr [rdx - 0x7cb7000f] ; ret
0x00000000000585cf : add bh, al ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000000586a1 : add bh, al ; add al, byte ptr [rdx] ; sar bh, 0xff ; ret
0x000000000014d47f : add bh, al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add ecx, dword ptr [rbx + 0xf0c2454] ; retf 0x5089
0x000000000014cb1f : add bh, al ; pop r8 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000047397 : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000192151 : add bh, bh ; dec dword ptr [rax + 0x21] ; ror dword ptr [rax + 9], cl ; retf
0x000000000010467f : add bh, bh ; dec dword ptr [rbx - 0x76b6ebb0] ; ret 0xc748
0x0000000000192db7 : add bh, bh ; dec dword ptr [rcx + 0x21] ; ret 0x949
0x00000000000a2d1d : add bh, bh ; dec dword ptr [rdi] ; test byte ptr [rbx], bl ; cmp eax, 0xf7410000 ; ret 0
0x00000000000a3fdd : add bh, bh ; dec dword ptr [rdi] ; test byte ptr [rip - 0x8ffffd6], cl ; ret
0x000000000004354e : add bh, bh ; jg 0x435a4 ; sub eax, edx ; shr rax, 0x3f ; ret
0x000000000010b8e8 : add bh, bh ; jne 0x10b8fa ; mov word ptr [rdi], si ; xor eax, eax ; ret
0x000000000014bc4c : add bh, bh ; loope 0x14bbe4 ; ret
0x000000000012b7fd : add bh, bh ; loopne 0x12b7c1 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000824bf : add bh, bh ; loopne 0x82515 ; mov eax, 0xffffffff ; ret
0x000000000008258f : add bh, bh ; loopne 0x82604 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000015dc4e : add bh, bh ; push rax ; or bl, ch ; retf
0x00000000000cc9d2 : add bh, bh ; ret
0x000000000012c2e6 : add bh, bh ; ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000001460c3 : add bh, bh ; xor eax, 0x72156 ; lea r9, [rsp + 0x2c] ; call qword ptr [rax]
0x0000000000145f83 : add bh, bh ; xor eax, 0x72296 ; lea r9, [rsp + 0x2c] ; call qword ptr [rax]
0x00000000000585c0 : add bh, byte ptr [rax + 1] ; ret
0x0000000000058810 : add bh, byte ptr [rax + 2] ; ret
0x000000000010c4b2 : add bh, byte ptr [rax - 1] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000112613 : add bh, byte ptr [rax - 1] ; jmp 0x1125d3
0x00000000001126ab : add bh, byte ptr [rax - 1] ; jmp 0x112668
0x00000000001159d3 : add bh, byte ptr [rax - 1] ; jmp 0x1159ad
0x0000000000115aa3 : add bh, byte ptr [rax - 1] ; jmp 0x115a7c
0x000000000004419b : add bh, byte ptr [rax - 1] ; ret
0x000000000018ff32 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000000c5246 : add bh, byte ptr [rip + 0xff] ; je 0xc5257 ; ret
0x0000000000028ea4 : add bh, byte ptr [rsi + 0x3a] ; call 0x25148
0x0000000000053730 : add bh, dh ; dec dword ptr [rax - 0x77] ; ret
0x000000000012c7b5 : add bh, dh ; fadd dword ptr [rcx - 0xfff05] ; dec dword ptr [rdi] ; ret 0x8348
0x00000000001019ce : add bh, dh ; fisub dword ptr [rcx + rcx*4 + 0x10] ; mov eax, 0xffffffff ; ret
0x0000000000192ed1 : add bh, dh ; fisub dword ptr [rsi - 0x7f] ; ret 0x7fff
0x000000000010d6d0 : add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; mov eax, 0xffffffff ; jmp 0x10d6ab
0x0000000000114280 : add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; mov eax, 0xffffffff ; jmp 0x11425b
0x0000000000114330 : add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; mov eax, 0xffffffff ; jmp 0x11430b
0x00000000000e16a8 : add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; mov eax, 0xffffffff ; jmp 0xe1684
0x00000000000441c6 : add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001159ce : add bh, dh ; fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; jmp 0x1159b2
0x0000000000115a9e : add bh, dh ; fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; jmp 0x115a81
0x0000000000044196 : add bh, dh ; fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000000a3fcd : add bh, dh ; ret
0x000000000002c475 : add bh, dh ; ret 0
0x000000000002c469 : add bh, dh ; ret 0xf800
0x00000000001168d7 : add bh, dh ; ret 0xfc07
0x0000000000049637 : add bh, dh ; ret 0xffef
0x00000000000e404c : add bl, al ; mov eax, 0xffffffff ; ret
0x00000000000ce270 : add bl, al ; mov eax, 2 ; ret
0x00000000000339ce : add bl, al ; mov rax, qword ptr [rsi + rax*8 + 0x80] ; ret
0x000000000011b69f : add bl, al ; mov rdx, rcx ; jmp 0x11b692
0x0000000000154dcc : add bl, al ; nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000eaa2d : add bl, al ; nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x000000000013b09c : add bl, al ; nop ; mov eax, 0xffffffff ; ret
0x000000000013df9c : add bl, al ; nop ; mov r10, rax ; mov byte ptr [r10], 0 ; ret
0x000000000014f3cd : add bl, al ; nop ; xor eax, eax ; ret
0x000000000008a2e9 : add bl, al ; nop dword ptr [rax + rax] ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x0000000000044e11 : add bl, al ; nop dword ptr [rax + rax] ; mov eax, 0xffffffff ; ret
0x0000000000092956 : add bl, al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000155eb7 : add bl, al ; nop dword ptr [rax] ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000352bb : add bl, al ; nop dword ptr [rax] ; mov eax, edi ; and eax, 0x7f ; ret
0x0000000000153d97 : add bl, al ; nop dword ptr [rax] ; ret
0x00000000000932ba : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000147814 : add bl, al ; nop word ptr cs:[rax + rax] ; ret
0x000000000009c504 : add bl, al ; ret
0x00000000000a6dbf : add bl, al ; xor eax, eax ; ret
0x00000000000a6d7f : add bl, al ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x0000000000042b63 : add bl, bl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x0000000000042cb7 : add bl, bl ; insb byte ptr [rdi], dx ; and al, 8 ; fadd st(0) ; ret
0x00000000000e67b2 : add bl, byte ptr [r11 + 0x5d] ; pop r12 ; ret
0x0000000000115791 : add bl, byte ptr [rax + rsi + 0x31] ; xor cl, byte ptr [rax - 0x7d] ; ret 0xe904
0x0000000000115751 : add bl, byte ptr [rax + rsi + 0x31] ; xor dword ptr [rax - 0x7d], ecx ; ret 0xe904
0x0000000000115496 : add bl, byte ptr [rax + rsi + 0x34] ; xor byte ptr [rax - 0x7d], cl ; ret 0x4104
0x00000000000e67b3 : add bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000d1d4c : add bl, ch ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000015809e : add bl, ch ; fidivr dword ptr [rax - 1] ; ret
0x000000000013a7d6 : add bl, ch ; lahf ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000013583d : add bl, ch ; mov ah, 0xe8 ; retf
0x000000000011729e : add bl, ch ; mov word ptr [rax - 0x77], cs ; ret 0xb9e9
0x00000000001132ec : add bl, ch ; out 0x90, al ; mov eax, 0xc ; syscall
0x0000000000055ab3 : add bl, ch ; ret
0x0000000000148532 : add bl, ch ; ret 0x1f0f
0x0000000000147bd8 : add bl, ch ; ret 0x5b8b
0x0000000000109d5b : add bl, ch ; ret 0x9066
0x00000000000e1a2d : add bl, ch ; ret 0xc389
0x00000000000a003f : add bl, ch ; retf
0x00000000001458e5 : add bl, ch ; retf 0x1f0f
0x000000000010e05f : add bl, ch ; retf 0xf66
0x000000000018218f : add bl, dh ; bsf eax, eax ; add rax, rdi ; vzeroupper ; ret
0x000000000014f2b7 : add bl, dh ; movq mm0, qword ptr [rdx] ; mov eax, esi ; movups xmmword ptr [r8 + 0x30], xmm0 ; ret
0x000000000014bcf7 : add bl, dh ; movq mm0, qword ptr [rdx] ; mov eax, esi ; movups xmmword ptr [r8 + 8], xmm0 ; ret
0x00000000000b552f : add bl, dh ; movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000ba427 : add bl, dh ; movq qword ptr [rdi + rdx - 0x10], mm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000b64df : add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000b64ef : add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x0000000000194ca3 : add bl, dh ; movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x000000000011ae87 : add byte ptr [r11 + rcx*4 + 0x7d], r9b ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000056bc3 : add byte ptr [r13 + 0x39], r9b ; ret 0x860f
0x0000000000056c2c : add byte ptr [r13 + 0x39], r9b ; ret 0xcd74
0x0000000000109492 : add byte ptr [r8 - 0x75], r9b ; push rbp ; adc byte ptr [rax - 0x77], cl ; or byte ptr [r8 - 0x7d], r9b ; ret
0x000000000009e156 : add byte ptr [r8 - 0x77], r9b ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000925aa : add byte ptr [r8 - 0x77], r9b ; imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x000000000013f737 : add byte ptr [r8 - 0x77], r9b ; ret
0x00000000000a0321 : add byte ptr [r8 - 0x77], r9b ; ret 0x1beb
0x0000000000029957 : add byte ptr [r8 - 0x77], r9b ; ret 0xf641
0x000000000009add5 : add byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; enter 0, 0 ; call rax
0x000000000012ae2a : add byte ptr [r8], 0 ; add byte ptr [rax], al ; movups xmmword ptr [rbp - 0x78], xmm7 ; call rcx
0x00000000000ce811 : add byte ptr [r8], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x0000000000106750 : add byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a0158 : add byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000a0113 : add byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000011264b : add byte ptr [r9 + rbp - 0x48], sil ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000000489bb : add byte ptr [r9], r14b ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000013acd6 : add byte ptr [rax + 0x102], bh ; cmovne eax, edx ; ret
0x000000000010cc1f : add byte ptr [rax + 0x102], bh ; syscall
0x000000000010eaef : add byte ptr [rax + 0x107], bh ; syscall
0x00000000000ba6df : add byte ptr [rax + 0x10], bh ; pop rbx ; ret
0x0000000000063b9f : add byte ptr [rax + 0x10], bh ; ret
0x0000000000112c06 : add byte ptr [rax + 0x10], bh ; syscall
0x000000000010ea2f : add byte ptr [rax + 0x10a], bh ; syscall
0x000000000011e7af : add byte ptr [rax + 0x110], bh ; syscall
0x000000000011dc25 : add byte ptr [rax + 0x119], bh ; syscall
0x000000000011e80f : add byte ptr [rax + 0x11b], bh ; syscall
0x000000000011dd0f : add byte ptr [rax + 0x122], bh ; syscall
0x000000000011dd0e : add byte ptr [rax + 0x122], dil ; syscall
0x000000000011e47f : add byte ptr [rax + 0x123], bh ; syscall
0x000000000010d73f : add byte ptr [rax + 0x124], bh ; syscall
0x000000000010d79f : add byte ptr [rax + 0x125], bh ; syscall
0x000000000011e59f : add byte ptr [rax + 0x126], bh ; syscall
0x000000000011e89f : add byte ptr [rax + 0x12c], bh ; syscall
0x000000000011e3bf : add byte ptr [rax + 0x131], bh ; syscall
0x000000000011433f : add byte ptr [rax + 0x132], bh ; syscall
0x00000000000e19d1 : add byte ptr [rax + 0x142], bh ; syscall
0x0000000000168fbc : add byte ptr [rax + 0x14634900], 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000018e70e : add byte ptr [rax + 0x1478d48], dl ; ret
0x000000000017c61e : add byte ptr [rax + 0x1483d73], dl ; retf 0x8d4a
0x000000000011e9bf : add byte ptr [rax + 0x14a], bh ; syscall
0x000000000011e9ef : add byte ptr [rax + 0x14b], bh ; syscall
0x000000000009aa2f : add byte ptr [rax + 0x16], bh ; ret
0x000000000010d76f : add byte ptr [rax + 0x16], bh ; syscall
0x000000000009aa2e : add byte ptr [rax + 0x16], dil ; ret
0x00000000000b785e : add byte ptr [rax + 0x1788168a], dl ; lea rax, [rdi + 1] ; ret
0x000000000010185f : add byte ptr [rax + 0x18], bh ; syscall
0x000000000011768f : add byte ptr [rax + 0x1b], bh ; syscall
0x000000000011f9ef : add byte ptr [rax + 0x1e], bh ; syscall
0x000000000011fa7f : add byte ptr [rax + 0x1f], bh ; syscall
0x00000000000431bb : add byte ptr [rax + 0x1fe8c17f], al ; ret
0x00000000000ba6ff : add byte ptr [rax + 0x20], bh ; pop rbx ; ret
0x000000000010d6df : add byte ptr [rax + 0x20], bh ; syscall
0x000000000010d70f : add byte ptr [rax + 0x21], bh ; syscall
0x0000000000193328 : add byte ptr [rax + 0x21], cl ; ret 0x8545
0x00000000001931f2 : add byte ptr [rax + 0x21], cl ; ret 0x8548
0x00000000000529ea : add byte ptr [rax + 0x21], cl ; ret 0x8948
0x0000000000191d76 : add byte ptr [rax + 0x21], cl ; retf 0xb948
0x00000000001126bf : add byte ptr [rax + 0x22], bh ; syscall
0x000000000011254f : add byte ptr [rax + 0x23], bh ; syscall
0x00000000000d297f : add byte ptr [rax + 0x24], bh ; syscall
0x00000000000d29af : add byte ptr [rax + 0x26], bh ; syscall
0x00000000000e26df : add byte ptr [rax + 0x27], bh ; syscall
0x000000000011f10f : add byte ptr [rax + 0x29], bh ; syscall
0x000000000007a2da : add byte ptr [rax + 0x29], cl ; ret
0x000000000013c167 : add byte ptr [rax + 0x29], cl ; ret 0x149
0x00000000000d37cd : add byte ptr [rax + 0x29], cl ; ret 0x2948
0x000000000002c71c : add byte ptr [rax + 0x29], cl ; ret 0x8348
0x00000000000520d1 : add byte ptr [rax + 0x29], cl ; retf
0x0000000000125f86 : add byte ptr [rax + 0x29], cl ; retf 0x11e8
0x00000000000983d1 : add byte ptr [rax + 0x29], cl ; retf 0x3948
0x0000000000081d22 : add byte ptr [rax + 0x29], cl ; retf 0x8948
0x0000000000125dbc : add byte ptr [rax + 0x29], cl ; retf 0xdbe8
0x000000000002bbcb : add byte ptr [rax + 0x29], cl ; retf 0xe083
0x0000000000125cb3 : add byte ptr [rax + 0x29], cl ; retf 0xe4e8
0x000000000002d781 : add byte ptr [rax + 0x29], cl ; rol byte ptr [rbp - 0x75], 1 ; pop rbp ; adc byte ptr [rbp - 0x77], cl ; retf 0x149
0x00000000000cf152 : add byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000005b7a1 : add byte ptr [rax + 0x29], cl ; ror dword ptr [rax - 0x77], 1 ; retf 0x8b48
0x00000000000ba6ef : add byte ptr [rax + 0x30], bh ; pop rbx ; ret
0x000000000011ebdf : add byte ptr [rax + 0x33], bh ; syscall
0x000000000012fc72 : add byte ptr [rax + 0x33], cl ; push rbx ; or byte ptr [rax + 0x33], cl ; add ecx, dword ptr [rax + 9] ; ret 0x850f
0x00000000000a6ece : add byte ptr [rax + 0x3907be0f], dl ; ret 0xf41
0x0000000000097c46 : add byte ptr [rax + 0x39], cl ; dec byte ptr [rdi] ; xchg byte ptr [rax], dl ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000002a02c : add byte ptr [rax + 0x39], cl ; ret
0x0000000000107886 : add byte ptr [rax + 0x39], cl ; ret 0x2d74
0x0000000000096d5c : add byte ptr [rax + 0x39], cl ; ret 0x4e72
0x0000000000106ae1 : add byte ptr [rax + 0x39], cl ; ret 0x7976
0x0000000000094518 : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000008dfc7 : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000097253 : add byte ptr [rax + 0x39], cl ; ret 0x860f
0x00000000000e9ae3 : add byte ptr [rax + 0x39], cl ; ret 0xdd75
0x00000000000569c6 : add byte ptr [rax + 0x39], cl ; retf
0x00000000000e35c8 : add byte ptr [rax + 0x39], cl ; retf 0x1f74
0x000000000012dfff : add byte ptr [rax + 0x39], cl ; retf 0x2777
0x0000000000163df6 : add byte ptr [rax + 0x39], cl ; retf 0x280f
0x000000000016a6ef : add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000012ec3f : add byte ptr [rax + 0x39], cl ; retf 0x577
0x0000000000096d6f : add byte ptr [rax + 0x39], cl ; retf 0x820f
0x0000000000087f15 : add byte ptr [rax + 0x39], cl ; retf 0x830f
0x00000000000942c2 : add byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000018dbb8 : add byte ptr [rax + 0x39], cl ; retf 0x870f
0x0000000000163916 : add byte ptr [rax + 0x39], cl ; retf 0x8949
0x000000000018e443 : add byte ptr [rax + 0x39], cl ; retf 0xd975
0x00000000001895b0 : add byte ptr [rax + 0x39], cl ; retf 0xe175
0x00000000001519f7 : add byte ptr [rax + 0x39], cl ; ror byte ptr [rdi], 1 ; test byte ptr [rdi + 0x5b000000], cl ; ret
0x0000000000030008 : add byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], 1 ; lea ebp, [rdx] ; add eax, 0x29480000 ; retf 0xe083
0x000000000002edd4 : add byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], 1 ; lea ebp, [rsi] ; add eax, 0x29480000 ; retf 0xe083
0x00000000000e194f : add byte ptr [rax + 0x3b], bh ; syscall
0x00000000000441af : add byte ptr [rax + 0x3e], bh ; syscall
0x00000000000441ae : add byte ptr [rax + 0x3e], dil ; syscall
0x00000000000e123f : add byte ptr [rax + 0x3f], bh ; syscall
0x00000000000ba71f : add byte ptr [rax + 0x40], bh ; pop rbx ; ret
0x00000000000e35e7 : add byte ptr [rax + 0x40], bh ; ret
0x000000000011f8ef : add byte ptr [rax + 0x40], bh ; syscall
0x000000000011f8ee : add byte ptr [rax + 0x40], dil ; syscall
0x000000000011f8bf : add byte ptr [rax + 0x41], bh ; syscall
0x000000000011f8be : add byte ptr [rax + 0x41], dil ; syscall
0x0000000000033844 : add byte ptr [rax + 0x440ffff9], al ; retf 0xd88
0x000000000011f85f : add byte ptr [rax + 0x44], bh ; syscall
0x000000000011f88f : add byte ptr [rax + 0x47], bh ; syscall
0x000000000011f88e : add byte ptr [rax + 0x47], dil ; syscall
0x00000000000ba697 : add byte ptr [rax + 0x485bf0e5], al ; cmovne eax, edx ; ret
0x0000000000112489 : add byte ptr [rax + 0x48], bh ; syscall
0x0000000000042eb0 : add byte ptr [rax + 0x48c22148], al ; mov dword ptr [rdi], edx ; ret
0x000000000010d50f : add byte ptr [rax + 0x49], bh ; syscall
0x0000000000115b0f : add byte ptr [rax + 0x4c], bh ; syscall
0x0000000000115b3f : add byte ptr [rax + 0x4d], bh ; syscall
0x0000000000115b3e : add byte ptr [rax + 0x4d], dil ; syscall
0x000000000010d88f : add byte ptr [rax + 0x51], bh ; syscall
0x0000000000063a0f : add byte ptr [rax + 0x52], bh ; syscall
0x000000000010eb1f : add byte ptr [rax + 0x54], bh ; syscall
0x000000000010ea5f : add byte ptr [rax + 0x59], bh ; syscall
0x000000000010caff : add byte ptr [rax + 0x5a], bh ; syscall
0x000000000010cb2f : add byte ptr [rax + 0x5b], bh ; syscall
0x00000000000253a3 : add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x000000000010e17f : add byte ptr [rax + 0x5d], bh ; syscall
0x000000000010e1af : add byte ptr [rax + 0x5e], bh ; syscall
0x000000000010caef : add byte ptr [rax + 0x5f], bh ; syscall
0x000000000010caee : add byte ptr [rax + 0x5f], dil ; syscall
0x00000000000ba70f : add byte ptr [rax + 0x60], bh ; pop rbx ; ret
0x00000000000cf77f : add byte ptr [rax + 0x60], bh ; syscall
0x0000000000112e5f : add byte ptr [rax + 0x62], bh ; syscall
0x0000000000112e5e : add byte ptr [rax + 0x62], dil ; syscall
0x00000000000a70b0 : add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rdx, rax ; jmp rdx
0x0000000000041794 : add byte ptr [rax + 0x63], cl ; adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x000000000006406c : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rcx ; jmp rax
0x0000000000191a65 : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rcx, rax ; jmp rcx
0x0000000000035aec : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x00000000000f93d8 : add byte ptr [rax + 0x63], cl ; add al, 0x83 ; add rax, rbx ; jmp rax
0x000000000007ef18 : add byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rdx ; jmp rax
0x000000000006d957 : add byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000007763d : add byte ptr [rax + 0x63], cl ; add al, 0x87 ; add rax, r14 ; jmp rax
0x0000000000080a40 : add byte ptr [rax + 0x63], cl ; add al, 0x87 ; add rax, rdi ; jmp rax
0x000000000007de5c : add byte ptr [rax + 0x63], cl ; add al, 0x87 ; add rax, rdx ; jmp rax
0x00000000000777bf : add byte ptr [rax + 0x63], cl ; add al, 0x88 ; add rax, r14 ; jmp rax
0x000000000007e1ae : add byte ptr [rax + 0x63], cl ; add al, 0x88 ; add rax, rdx ; jmp rax
0x0000000000077daf : add byte ptr [rax + 0x63], cl ; add al, 0x90 ; add rax, r14 ; jmp rax
0x00000000000e3a02 : add byte ptr [rax + 0x63], cl ; add al, 0x9a ; add rax, rdx ; jmp rax
0x00000000000ba5b8 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rax, rsi ; jmp rax
0x00000000000f667c : add byte ptr [rax + 0x63], cl ; add cl, byte ptr [rax - 0x77] ; ret
0x0000000000048175 : add byte ptr [rax + 0x63], cl ; and al, 4 ; jne 0x4818e ; add rsp, 0x18 ; ret
0x000000000013a750 : add byte ptr [rax + 0x63], cl ; fisttp dword ptr [rax + 1] ; ret
0x00000000001012e7 : add byte ptr [rax + 0x63], cl ; push rbx ; xor byte ptr [rcx], bh ; retf 0x840f
0x000000000005ac97 : add byte ptr [rax + 0x63], cl ; ret
0x00000000001284ed : add byte ptr [rax + 0x63], cl ; ret 0x4864
0x0000000000181397 : add byte ptr [rax + 0x63], cl ; ret 0x8348
0x00000000000a5a7b : add byte ptr [rax + 0x63], cl ; ret 0x8d41
0x000000000005a513 : add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x000000000004a016 : add byte ptr [rax + 0x63], cl ; ret 0xc748
0x00000000001960fb : add byte ptr [rax + 0x63], cl ; retf
0x00000000000c56ad : add byte ptr [rax + 0x63], cl ; retf 0x830f
0x00000000000c5f33 : add byte ptr [rax + 0x63], cl ; retf 0x8348
0x00000000000c5863 : add byte ptr [rax + 0x63], cl ; retf 0x860f
0x0000000000061c05 : add byte ptr [rax + 0x63], cl ; retf 0x8948
0x00000000000c5f0a : add byte ptr [rax + 0x63], cl ; retf 0x894c
0x00000000000f49cd : add byte ptr [rax + 0x63], cl ; retf 0x8b48
0x00000000000ed341 : add byte ptr [rax + 0x63], cl ; retf 0x8b4c
0x000000000004afdd : add byte ptr [rax + 0x63], cl ; retf 0x8d44
0x000000000004e05d : add byte ptr [rax + 0x63], cl ; retf 0x8d4a
0x00000000000872df : add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x000000000013b3e8 : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 1], 1 ; xlatb ; mov qword ptr [r9], rdi ; ret
0x000000000010117f : add byte ptr [rax + 0x63], cl ; ror byte ptr [rbp + rcx*4 + 5], 1 ; ret
0x00000000000efcb5 : add byte ptr [rax + 0x63], cl ; ror byte ptr [rdi], 1 ; mov dh, 0x14 ; adc dword ptr [rcx], eax ; ret 0x428d
0x0000000000074b6c : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x00000000000e126f : add byte ptr [rax + 0x64], bh ; syscall
0x00000000000e26ff : add byte ptr [rax + 0x66], bh ; syscall
0x000000000011e5ff : add byte ptr [rax + 0x67], bh ; syscall
0x00000000000e271f : add byte ptr [rax + 0x68], bh ; syscall
0x00000000000ba5d3 : add byte ptr [rax + 0x6b8f176], al ; add byte ptr [rax], al ; or byte ptr [rdi], 0xa2 ; jmp 0xba5af
0x00000000000e270f : add byte ptr [rax + 0x6b], bh ; syscall
0x00000000000e272f : add byte ptr [rax + 0x6c], bh ; syscall
0x00000000000e296f : add byte ptr [rax + 0x6d], bh ; syscall
0x00000000000e26ef : add byte ptr [rax + 0x6e], bh ; syscall
0x00000000000e299f : add byte ptr [rax + 0x6f], bh ; syscall
0x00000000000e29ff : add byte ptr [rax + 0x70], bh ; syscall
0x00000000000e273f : add byte ptr [rax + 0x73], bh ; syscall
0x000000000012a58e : add byte ptr [rax + 0x7456ff83], dl ; or edi, dword ptr [rax + 7] ; ret
0x00000000000b4fcf : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000000e2a2f : add byte ptr [rax + 0x76], bh ; syscall
0x000000000018801f : add byte ptr [rax + 0x77f8c517], cl ; ret
0x00000000000e2a5f : add byte ptr [rax + 0x78], bh ; syscall
0x00000000000b6a2f : add byte ptr [rax + 0x78d4837], cl ; ret
0x000000000011dbdf : add byte ptr [rax + 0x7b], bh ; syscall
0x00000000000e29cf : add byte ptr [rax + 0x7c], bh ; syscall
0x000000000011e35f : add byte ptr [rax + 0x7d], bh ; syscall
0x00000000000e356f : add byte ptr [rax + 0x7e], bh ; ret
0x000000000011e38f : add byte ptr [rax + 0x7e], bh ; syscall
0x00000000000441e4 : add byte ptr [rax + 0x7f], bh ; syscall
0x000000000013b86f : add byte ptr [rax + 0x7fffffff], bh ; ret
0x00000000000ba6bf : add byte ptr [rax + 0x80], bh ; pop rbx ; ret
0x0000000000044221 : add byte ptr [rax + 0x82], bh ; syscall
0x000000000004475f : add byte ptr [rax + 0x83], bh ; syscall
0x000000000011e7df : add byte ptr [rax + 0x86], bh ; syscall
0x000000000010c9df : add byte ptr [rax + 0x8a], bh ; syscall
0x000000000011320f : add byte ptr [rax + 0x8c], bh ; syscall
0x000000000011324f : add byte ptr [rax + 0x8d], bh ; syscall
0x000000000011324e : add byte ptr [rax + 0x8d], dil ; syscall
0x000000000010179f : add byte ptr [rax + 0x8e], bh ; syscall
0x00000000001017cf : add byte ptr [rax + 0x8f], bh ; syscall
0x00000000001017ff : add byte ptr [rax + 0x90], bh ; syscall
0x000000000010182f : add byte ptr [rax + 0x91], bh ; syscall
0x000000000010188f : add byte ptr [rax + 0x92], bh ; syscall
0x00000000001018bf : add byte ptr [rax + 0x93], bh ; syscall
0x00000000001018ef : add byte ptr [rax + 0x94], bh ; syscall
0x000000000011e17f : add byte ptr [rax + 0x95], bh ; syscall
0x000000000011e17e : add byte ptr [rax + 0x95], dil ; syscall
0x000000000011771f : add byte ptr [rax + 0x96], bh ; syscall
0x000000000011774f : add byte ptr [rax + 0x97], bh ; syscall
0x000000000011777f : add byte ptr [rax + 0x98], bh ; syscall
0x000000000011e2bf : add byte ptr [rax + 0x9a], bh ; syscall
0x000000000011e6bf : add byte ptr [rax + 0x9b], bh ; syscall
0x000000000011e28f : add byte ptr [rax + 0x9e], bh ; syscall
0x000000000011e28e : add byte ptr [rax + 0x9e], dil ; syscall
0x00000000001141df : add byte ptr [rax + 0xa1], bh ; syscall
0x000000000011428f : add byte ptr [rax + 0xa2], bh ; syscall
0x00000000000cf85f : add byte ptr [rax + 0xa4], bh ; syscall
0x000000000011db4f : add byte ptr [rax + 0xa6], bh ; syscall
0x000000000011469f : add byte ptr [rax + 0xa7], bh ; syscall
0x00000000001146cf : add byte ptr [rax + 0xa8], bh ; syscall
0x000000000011758f : add byte ptr [rax + 0xa], bh ; syscall
0x0000000000113e6f : add byte ptr [rax + 0xaa], bh ; syscall
0x0000000000113fbf : add byte ptr [rax + 0xab], bh ; syscall
0x0000000000113fbe : add byte ptr [rax + 0xab], dil ; syscall
0x000000000011da0f : add byte ptr [rax + 0xac], bh ; syscall
0x000000000011d9df : add byte ptr [rax + 0xad], bh ; syscall
0x000000000011e3ef : add byte ptr [rax + 0xae], bh ; syscall
0x000000000011e41f : add byte ptr [rax + 0xb0], bh ; syscall
0x00000000000f6e48 : add byte ptr [rax + 0xb], cl ; test byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe2c1
0x000000000011db7f : add byte ptr [rax + 0xbb], bh ; syscall
0x000000000011b93f : add byte ptr [rax + 0xc6], bh ; syscall
0x000000000011b81f : add byte ptr [rax + 0xc7], bh ; syscall
0x000000000012bdc1 : add byte ptr [rax + 0xca], bh ; syscall
0x000000000011e44f : add byte ptr [rax + 0xd5], bh ; syscall
0x000000000011e2ef : add byte ptr [rax + 0xe4], bh ; syscall
0x00000000000e3902 : add byte ptr [rax + 0xe5], bh ; syscall
0x0000000000043ecf : add byte ptr [rax + 0xe], bh ; syscall
0x00000000001158ef : add byte ptr [rax + 0xeb], bh ; syscall
0x00000000001158ee : add byte ptr [rax + 0xeb], dil ; syscall
0x0000000000035174 : add byte ptr [rax + 0xf], al ; mov bh, 0xc0 ; ret
0x00000000000fa0be : add byte ptr [rax + 0xf], al ; mov dh, 0xf6 ; movsxd rax, dword ptr [rbx + rsi*4] ; add rax, rbx ; jmp rax
0x00000000000fca59 : add byte ptr [rax + 0xf], al ; mov dh, 0xf6 ; movsxd rax, dword ptr [rdi + rsi*4] ; add rax, rdi ; jmp rax
0x00000000000aff15 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x0000000000193626 : add byte ptr [rax + 0xf], cl ; mov edx, 0x21482fea ; ret 0x41e9
0x00000000000292df : add byte ptr [rax + 0xf], cl ; mov esi, 0x83480147 ; ret
0x0000000000102b23 : add byte ptr [rax + 0xf], cl ; mov esi, 0x894d024e ; ret 0x8d4c
0x00000000000df1b9 : add byte ptr [rax + 0xf], cl ; mov esi, 0x8b486408 ; xor cl, byte ptr [rax - 0x77] ; retf 0x44f6
0x00000000000dd9cc : add byte ptr [rax + 0xf], cl ; ret
0x000000000008da76 : add byte ptr [rax + 0xf], cl ; ret 0x110f
0x00000000001576b6 : add byte ptr [rax + 0xf], cl ; ret 0x3145
0x000000000011f68a : add byte ptr [rax + 0xf], cl ; ret 0x31c3
0x00000000000e32f0 : add byte ptr [rax + 0xf], cl ; ret 0x56e9
0x000000000009cd6f : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000015aad4 : add byte ptr [rax + 0xf], cl ; ret 0x8348
0x00000000000e31c2 : add byte ptr [rax + 0xf], cl ; ret 0x84e9
0x000000000002c283 : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000010f69a : add byte ptr [rax + 0xf], cl ; ret 0x894c
0x000000000015d29b : add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x00000000000d141a : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x000000000009d3d9 : add byte ptr [rax + 0xf], cl ; ret 0x90c3
0x00000000000e3291 : add byte ptr [rax + 0xf], cl ; ret 0xb5e9
0x00000000000e350a : add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x00000000000a08b4 : add byte ptr [rax + 0xf], cl ; ret 0xc3c3
0x00000000000e324d : add byte ptr [rax + 0xf], cl ; ret 0xf9e9
0x000000000009cdc2 : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000013df22 : add byte ptr [rax + 0xf], cl ; ret 0xff81
0x0000000000054a71 : add byte ptr [rax + 0xf], cl ; ror byte ptr [r9 - 0x76a7dbac], 1 ; ret 0x31e9
0x00000000000e355f : add byte ptr [rax + 0xfc17], bh ; ret
0x000000000011e56f : add byte ptr [rax + 0xfd], bh ; syscall
0x00000000000e34d0 : add byte ptr [rax + 0xfde8], bh ; cmovne rax, rdx ; ret
0x00000000000e35da : add byte ptr [rax + 0xff], bh ; cmovne rax, rdx ; ret
0x000000000011e5cf : add byte ptr [rax + 0xff], bh ; syscall
0x00000000000e349a : add byte ptr [rax + 0xfffa], bh ; cmovne rax, rdx ; ret
0x00000000000e357f : add byte ptr [rax + 0xfffa], bh ; ret
0x0000000000082c96 : add byte ptr [rax + 1], bh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000114b06 : add byte ptr [rax + 1], bh ; add rsp, 8 ; ret
0x000000000019054f : add byte ptr [rax + 1], bh ; jg 0x19056a ; neg eax ; ret
0x00000000000cd9ff : add byte ptr [rax + 1], bh ; jg 0xcda13 ; neg eax ; ret
0x000000000005869c : add byte ptr [rax + 1], bh ; mov dword ptr [rdx], 0xffffc002 ; ret
0x000000000010b707 : add byte ptr [rax + 1], bh ; pop rbx ; ret
0x00000000000585d5 : add byte ptr [rax + 1], bh ; ret
0x000000000011274f : add byte ptr [rax + 1], bh ; syscall
0x00000000000e375f : add byte ptr [rax + 1], bh ; test edi, edi ; js 0xe377a ; ret
0x00000000000aa584 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000181fa1 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; vzeroupper ; ret
0x00000000001824d9 : add byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x0000000000055539 : add byte ptr [rax + 1], cl ; ret
0x000000000015d940 : add byte ptr [rax + 1], cl ; ret 0x3a83
0x00000000000578d8 : add byte ptr [rax + 1], cl ; ret 0x8948
0x00000000001824d0 : add byte ptr [rax + 1], cl ; ret 0x8c0f
0x00000000000fc886 : add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000fd493 : add byte ptr [rax + 1], cl ; ret 0x8d4a
0x000000000013a0dd : add byte ptr [rax + 1], cl ; ret 0xe183
0x00000000000ebd36 : add byte ptr [rax + 1], cl ; ret 0xf66
0x00000000000efcea : add byte ptr [rax + 1], cl ; retf 0x11eb
0x000000000009f8df : add byte ptr [rax + 1], cl ; retf 0x394c
0x000000000016a7ad : add byte ptr [rax + 1], cl ; retf 0x8148
0x0000000000036838 : add byte ptr [rax + 1], cl ; retf 0x8948
0x00000000000424ce : add byte ptr [rax + 1], cl ; retf 0xdeb
0x00000000000feaf5 : add byte ptr [rax + 1], cl ; ror dword ptr [rcx + 0x39], 1 ; retf
0x000000000010b706 : add byte ptr [rax + 1], dil ; pop rbx ; ret
0x000000000008c19e : add byte ptr [rax + 1], dil ; ret
0x00000000000587c1 : add byte ptr [rax + 2], bh ; ret
0x0000000000152a4e : add byte ptr [rax + 2], dil ; ret
0x0000000000181b6c : add byte ptr [rax + 5], cl ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000035534 : add byte ptr [rax + 5], cl ; add byte ptr [rdx], al ; add byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x0000000000151c80 : add byte ptr [rax + 5], cl ; test al, 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000ba6cf : add byte ptr [rax + 8], bh ; pop rbx ; ret
0x000000000010d0af : add byte ptr [rax + 8], bh ; syscall
0x000000000014968b : add byte ptr [rax + 9], cl ; retf 0x894c
0x000000000012531f : add byte ptr [rax + rax*8 - 0x76b7f08c], al ; retf 0xb60f
0x00000000000b60ac : add byte ptr [rax + rax], 0 ; ret
0x00000000000dd2dc : add byte ptr [rax + rax], al ; add al, ch ; and eax, dword ptr [rax - 0x76b7000c] ; ret 0x8948
0x00000000001317d9 : add byte ptr [rax + rax], al ; add al, ch ; cmp ebp, edi ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000122994 : add byte ptr [rax + rax], al ; add al, ch ; imul ebp, dword ptr [rcx], -0x10 ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000124471 : add byte ptr [rax + rax], al ; add al, ch ; mov cs, word ptr [rsi] ; lock dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000df974 : add byte ptr [rax + rax], al ; add al, ch ; mov ebx, dword ptr [rcx - 0xc] ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000122771 : add byte ptr [rax + rax], al ; add al, ch ; mov gs, word ptr [rbx] ; lock dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000ddd61 : add byte ptr [rax + rax], al ; add al, ch ; sahf ; jne 0xddd68 ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000124854 : add byte ptr [rax + rax], al ; add al, ch ; stosd dword ptr [rdi], eax ; or dh, al ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000001328c1 : add byte ptr [rax + rax], al ; add al, ch ; sub ch, bh ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000001225c1 : add byte ptr [rax + rax], al ; add al, ch ; sub eax, 0x8948fff0 ; ret 0x8948
0x00000000001320d1 : add byte ptr [rax + rax], al ; add al, ch ; xor ch, bh ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000009c7ff : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000008083a : add byte ptr [rax + rax], al ; add cl, ch ; ret 0xfffc
0x000000000008ccf9 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000113341 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000009799b : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x0000000000098f8b : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x000000000009c7e5 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000999e1 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000009c609 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000501ab : add byte ptr [rax + rax], cl ; add cl, ch ; ret 0xfffd
0x00000000000cdf45 : add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, [rdi - 0x10] ; ret
0x0000000000026ec6 : add byte ptr [rax + rcx*2 + 3], ah ; add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000019618b : add byte ptr [rax + rcx*2 - 0x75], ah ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000012c38f : add byte ptr [rax + rcx*2 - 0x75], ah ; add al, 0x25 ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000538c6 : add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0x1de8
0x0000000000047bd3 : add byte ptr [rax + rcx*2 - 0x77], ah ; push rbp ; add byte ptr [rax - 0x75], cl ; jnp 0x47bef ; call rax
0x000000000014d741 : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0xeac1
0x0000000000128e8e : add byte ptr [rax - 0x178b7f80], 0x89 ; rol ecx, 1 ; jmp 0xffffffff80d585b8
0x000000000015104c : add byte ptr [rax - 0x178b7f80], 0x89 ; rol ecx, 1 ; jmp 0xffffffff80d80776
0x0000000000134fe0 : add byte ptr [rax - 0x2976178c], 0xc1 ; out dx, al ; adc bh, dh ; ret 0x8080
0x0000000000044909 : add byte ptr [rax - 0x2d], cl ; loopne 0x4495f ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000128e90 : add byte ptr [rax - 0x2e76178c], 0xc1 ; jmp 0xffffffff80d585b6
0x000000000015104e : add byte ptr [rax - 0x2e76178c], 0xc1 ; jmp 0xffffffff80d80774
0x000000000013ba35 : add byte ptr [rax - 0x39], cl ; add al, 0x24 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000092a4a : add byte ptr [rax - 0x39], cl ; add eax, 0x154b12 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000120546 : add byte ptr [rax - 0x39], cl ; add eax, 0xc3e0e ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000012051d : add byte ptr [rax - 0x39], cl ; add eax, 0xc3e37 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001204c6 : add byte ptr [rax - 0x39], cl ; add eax, 0xc3e8e ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000004200f : add byte ptr [rax - 0x39], cl ; ret
0x0000000000058f87 : add byte ptr [rax - 0x39], cl ; ret 0xc001
0x0000000000043d8a : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000ce4cf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000000ce50f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000ce4bf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000000ce4ff : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x0000000000043f5f : add byte ptr [rax - 0x39], cl ; ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x00000000000296ba : add byte ptr [rax - 0x39], cl ; test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000012f37a : add byte ptr [rax - 0x3c38baf1], al ; mov eax, edi ; shr eax, 0x18 ; ret
0x0000000000043284 : add byte ptr [rax - 0x3dbab77], al ; movd xmm0, dword ptr [rsp - 4] ; ret
0x000000000004953c : add byte ptr [rax - 0x3dbbf0b8], al ; jmp 0x4955d
0x0000000000042a95 : add byte ptr [rax - 0x3f000001], al ; shr eax, 0x1f ; ret
0x0000000000026416 : add byte ptr [rax - 0x3f], cl ; rcl byte ptr [rcx], 0x48 ; mov dword ptr [rip + 0x1c3d26], eax ; ret
0x000000000012fd2a : add byte ptr [rax - 0x3f], cl ; rcl byte ptr [rcx], 0xeb ; ret 0x8b48
0x0000000000025391 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000315f0 : add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x0000000000130731 : add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x0000000000043c55 : add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000011282c : add byte ptr [rax - 0x3fcef877], al ; ret
0x00000000001202cf : add byte ptr [rax - 0x41], cl ; ret
0x000000000004b976 : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000004ec50 : add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x000000000007868f : add byte ptr [rax - 0x50f43], al ; jmp qword ptr [rax]
0x000000000011641f : add byte ptr [rax - 0x6af0dc06], al ; ret 0xc084
0x00000000000bc688 : add byte ptr [rax - 0x73], cl ; adc eax, 0x11930 ; cmovne rax, rdx ; ret
0x000000000009cd68 : add byte ptr [rax - 0x73], cl ; adc eax, 0x13800 ; cmovne rax, rdx ; ret
0x000000000009d368 : add byte ptr [rax - 0x73], cl ; adc eax, 0x14e20 ; cmovne rax, rdx ; ret
0x000000000009e79a : add byte ptr [rax - 0x73], cl ; adc eax, 0x1b84e ; cmove rax, rdx ; ret
0x000000000009e44a : add byte ptr [rax - 0x73], cl ; adc eax, 0x1bb7e ; cmove rax, rdx ; ret
0x000000000009e2ea : add byte ptr [rax - 0x73], cl ; adc eax, 0x1bcfe ; cmove rax, rdx ; ret
0x000000000012d2b4 : add byte ptr [rax - 0x73], cl ; adc eax, 0x3bb44 ; cmovne rax, rdx ; ret
0x000000000012d134 : add byte ptr [rax - 0x73], cl ; adc eax, 0x3bce4 ; cmovne rax, rdx ; ret
0x000000000012d1f4 : add byte ptr [rax - 0x73], cl ; adc eax, 0x3e6f4 ; cmovne rax, rdx ; ret
0x000000000012d28f : add byte ptr [rax - 0x73], cl ; adc eax, 0x5bd59 ; cmove rax, rdx ; ret
0x000000000012d1cf : add byte ptr [rax - 0x73], cl ; adc eax, 0x5be39 ; cmove rax, rdx ; ret
0x000000000012d10f : add byte ptr [rax - 0x73], cl ; adc eax, 0x5bef9 ; cmove rax, rdx ; ret
0x000000000012d2de : add byte ptr [rax - 0x73], cl ; adc eax, 0x60a4a ; cmove rax, rdx ; ret
0x000000000012d21e : add byte ptr [rax - 0x73], cl ; adc eax, 0x60b2a ; cmove rax, rdx ; ret
0x000000000012d15e : add byte ptr [rax - 0x73], cl ; adc eax, 0x60bea ; cmove rax, rdx ; ret
0x000000000012d39e : add byte ptr [rax - 0x73], cl ; adc eax, 0x60f3a ; cmove rax, rdx ; ret
0x0000000000151876 : add byte ptr [rax - 0x73], cl ; adc eax, 0x983c2 ; mov qword ptr fs:[rax], rdx ; ret
0x00000000001474e7 : add byte ptr [rax - 0x73], cl ; adc eax, 0x9c671 ; jmp qword ptr [rdx + rax*8]
0x000000000009ce18 : add byte ptr [rax - 0x73], cl ; adc eax, 0xc40b0 ; cmovne rax, rdx ; ret
0x000000000009d3d2 : add byte ptr [rax - 0x73], cl ; adc eax, 0xc4d56 ; cmovne rax, rdx ; ret
0x000000000009e754 : add byte ptr [rax - 0x73], cl ; adc eax, 0xca6d4 ; cmovne rax, rdx ; ret
0x000000000009e404 : add byte ptr [rax - 0x73], cl ; adc eax, 0xcaa04 ; cmovne rax, rdx ; ret
0x000000000009e2a4 : add byte ptr [rax - 0x73], cl ; adc eax, 0xcd654 ; cmovne rax, rdx ; ret
0x000000000009e63b : add byte ptr [rax - 0x73], cl ; adc eax, 0xcfddd ; cmovne rax, rdx ; ret
0x000000000009e59b : add byte ptr [rax - 0x73], cl ; adc eax, 0xcfe6d ; cmovne rax, rdx ; ret
0x000000000009e68b : add byte ptr [rax - 0x73], cl ; adc eax, 0xd1edd ; cmovne rax, rdx ; ret
0x000000000009e5eb : add byte ptr [rax - 0x73], cl ; adc eax, 0xd1f6d ; cmovne rax, rdx ; ret
0x00000000000bb3a9 : add byte ptr [rax - 0x73], cl ; adc eax, 0xd4b9f ; cmovne rax, rdx ; ret
0x000000000009ce88 : add byte ptr [rax - 0x73], cl ; adc eax, 0xd5c30 ; cmovne rax, rdx ; ret
0x000000000009d428 : add byte ptr [rax - 0x73], cl ; adc eax, 0xd6e40 ; cmovne rax, rdx ; ret
0x000000000009e4e8 : add byte ptr [rax - 0x73], cl ; adc eax, 0xd8900 ; cmovne rax, rdx ; ret
0x000000000009e548 : add byte ptr [rax - 0x73], cl ; adc eax, 0xda0b0 ; cmovne rax, rdx ; ret
0x000000000009e72f : add byte ptr [rax - 0x73], cl ; adc eax, 0xea8e9 ; cmove rax, rdx ; ret
0x000000000009e3df : add byte ptr [rax - 0x73], cl ; adc eax, 0xeac19 ; cmove rax, rdx ; ret
0x000000000009e27f : add byte ptr [rax - 0x73], cl ; adc eax, 0xead99 ; cmove rax, rdx ; ret
0x000000000009e77e : add byte ptr [rax - 0x73], cl ; adc eax, 0xef5da ; cmove rax, rdx ; ret
0x000000000009e42e : add byte ptr [rax - 0x73], cl ; adc eax, 0xef90a ; cmove rax, rdx ; ret
0x000000000009e2ce : add byte ptr [rax - 0x73], cl ; adc eax, 0xefa8a ; cmove rax, rdx ; ret
0x000000000009e38e : add byte ptr [rax - 0x73], cl ; adc eax, 0xeff5a ; cmove rax, rdx ; ret
0x000000000009e209 : add byte ptr [rax - 0x73], cl ; adc eax, 0xf05cf ; cmovne rax, rdx ; ret
0x000000000009cdbb : add byte ptr [rax - 0x73], cl ; adc eax, 0xf16fd ; cmovne rax, rdx ; ret
0x00000000000bbc50 : add byte ptr [rax - 0x73], cl ; add al, 0x4c ; lea ecx, [rsp + 0x20] ; call rbx
0x00000000000bb89c : add byte ptr [rax - 0x73], cl ; add al, 0x4c ; lea ecx, [rsp + 0x28] ; call rbx
0x00000000000afada : add byte ptr [rax - 0x73], cl ; add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000bb35b : add byte ptr [rax - 0x73], cl ; add eax, 0x116bd ; cmove rax, rdx ; ret
0x00000000000bad6b : add byte ptr [rax - 0x73], cl ; add eax, 0x11fdd ; cmove rax, rdx ; ret
0x000000000009d46b : add byte ptr [rax - 0x73], cl ; add eax, 0x12a4d ; cmove rax, rdx ; ret
0x00000000000baf7b : add byte ptr [rax - 0x73], cl ; add eax, 0x12a9d ; cmove rax, rdx ; ret
0x00000000000bb0fb : add byte ptr [rax - 0x73], cl ; add eax, 0x12bad ; cmove rax, rdx ; ret
0x00000000000bad2b : add byte ptr [rax - 0x73], cl ; add eax, 0x12ded ; cmove rax, rdx ; ret
0x000000000009d2cb : add byte ptr [rax - 0x73], cl ; add eax, 0x12edd ; cmove rax, rdx ; ret
0x000000000009d30b : add byte ptr [rax - 0x73], cl ; add eax, 0x1303d ; cmove rax, rdx ; ret
0x00000000000bae5b : add byte ptr [rax - 0x73], cl ; add eax, 0x1341d ; cmove rax, rdx ; ret
0x00000000000339c7 : add byte ptr [rax - 0x73], cl ; add eax, 0x17bf7d ; ret
0x0000000000026c5f : add byte ptr [rax - 0x73], cl ; add eax, 0x188824 ; ret
0x0000000000026c6f : add byte ptr [rax - 0x73], cl ; add eax, 0x18a6ae ; ret
0x00000000000536d6 : add byte ptr [rax - 0x73], cl ; add eax, 0x193d22 ; mov byte ptr [rax + rdx], 0 ; ret
0x000000000004886f : add byte ptr [rax - 0x73], cl ; add eax, 0x1a18af ; add rsp, 8 ; ret
0x000000000009e368 : add byte ptr [rax - 0x73], cl ; add eax, 0x1c090 ; cmovne rax, rdx ; ret
0x00000000000a726b : add byte ptr [rax - 0x73], cl ; add eax, 0x37bd ; cmove rax, rdx ; ret
0x000000000012d359 : add byte ptr [rax - 0x73], cl ; add eax, 0x5c18f ; cmove rax, rdx ; ret
0x0000000000151d27 : add byte ptr [rax - 0x73], cl ; add eax, 0x97c51 ; pop rbx ; ret
0x0000000000151c47 : add byte ptr [rax - 0x73], cl ; add eax, 0x97d39 ; pop rbx ; ret
0x0000000000151b67 : add byte ptr [rax - 0x73], cl ; add eax, 0x97e31 ; pop rbx ; ret
0x000000000009fd3b : add byte ptr [rax - 0x73], cl ; add eax, 0xaaed ; cmove rax, rdx ; ret
0x000000000009e1bb : add byte ptr [rax - 0x73], cl ; add eax, 0xc33d ; cmove rax, rdx ; ret
0x0000000000117dfd : add byte ptr [rax - 0x73], cl ; add eax, 0xd025b ; add rsp, 0x18 ; ret
0x0000000000117885 : add byte ptr [rax - 0x73], cl ; add eax, 0xd0783 ; add rsp, 8 ; ret
0x0000000000114bb3 : add byte ptr [rax - 0x73], cl ; add eax, 0xd321d ; add rsp, 8 ; ret
0x000000000009e349 : add byte ptr [rax - 0x73], cl ; add eax, 0xeb1af ; cmove rax, rdx ; ret
0x000000000009fd7b : add byte ptr [rax - 0x73], cl ; add eax, 0xff2d ; cmove rax, rdx ; ret
0x00000000000bb734 : add byte ptr [rax - 0x73], cl ; add qword ptr [rbp + rcx*4 + 0x4c], rcx ; and al, 0x38 ; call rbx
0x000000000013e8f7 : add byte ptr [rax - 0x73], cl ; and byte ptr [r8 - 0x7d], cl ; ret
0x00000000000cdf8f : add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000cdf9f : add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000884f3 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x128415 ; call 0x34fda
0x0000000000058da7 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x156d06 ; call 0x34fda
0x0000000000028d69 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x1867a4 ; call 0x34fda
0x0000000000116149 : add byte ptr [rax - 0x73], cl ; cmp eax, 0x9b45c ; call 0x823aa
0x00000000000cdf7f : add byte ptr [rax - 0x73], cl ; hlt ; ret
0x0000000000056ba7 : add byte ptr [rax - 0x73], cl ; insb byte ptr [rdi], dx ; retf 0x4df0
0x00000000000807b4 : add byte ptr [rax - 0x73], cl ; mov rdi, rbx ; call rax
0x000000000009b737 : add byte ptr [rax - 0x73], cl ; or eax, 0x11420d ; mov rdx, rcx ; jmp 0x9b6e0
0x0000000000133b6f : add byte ptr [rax - 0x73], cl ; pop rdi ; add ebx, ebp ; cwde ; xor eax, eax ; ret
0x000000000014249d : add byte ptr [rax - 0x73], cl ; pop rdi ; xor byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x0000000000095ff2 : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x0000000000047231 : add byte ptr [rax - 0x73], cl ; push rax ; dec dword ptr [rbx + rcx*4 + 0x2d] ; ret
0x0000000000114fe8 : add byte ptr [rax - 0x73], cl ; push rsi ; add dword ptr [rbp - 0x2f], esi ; ret
0x0000000000140c52 : add byte ptr [rax - 0x73], cl ; xchg dword ptr [rax + 0x31000000], eax ; fisttp dword ptr [rax + 0x39] ; ret 0x850f
0x00000000000642cb : add byte ptr [rax - 0x73], cl ; xor eax, 0x144ded ; jmp 0x642a1
0x0000000000052e5d : add byte ptr [rax - 0x73], cl ; xor eax, 0x7b ; call rax
0x0000000000136a4f : add byte ptr [rax - 0x73], cl ; xor eax, 0x7bfdd ; call 0x142caa
0x00000000001160f6 : add byte ptr [rax - 0x73], cl ; xor eax, 0x99464 ; call 0x823aa
0x00000000000e64cf : add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 + 1], r9b ; fmul dword ptr [rax - 0x7d] ; ret
0x00000000000939f7 : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000019441b : add byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x00000000000567ea : add byte ptr [rax - 0x75], cl ; add al, 0xde ; lea r9, [rdx] ; jmp 0x5684c
0x00000000000584aa : add byte ptr [rax - 0x75], cl ; add al, 0xde ; lea r9, [rdx] ; jmp 0x5850c
0x00000000001164ca : add byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x0000000000047cf1 : add byte ptr [rax - 0x75], cl ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000001740ef : add byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000009c28f : add byte ptr [rax - 0x75], cl ; add eax, 0x147cb9 ; call qword ptr [rax]
0x000000000009c1af : add byte ptr [rax - 0x75], cl ; add eax, 0x147d99 ; call qword ptr [rax]
0x000000000009294f : add byte ptr [rax - 0x75], cl ; add eax, 0x152d09 ; ret
0x0000000000034d5f : add byte ptr [rax - 0x75], cl ; add eax, 0x1af081 ; mov qword ptr [rax], rdx ; ret
0x0000000000030cef : add byte ptr [rax - 0x75], cl ; add eax, 0x1b5a11 ; ret
0x00000000000287ff : add byte ptr [rax - 0x75], cl ; add eax, 0x1c17b1 ; ret
0x00000000000287ef : add byte ptr [rax - 0x75], cl ; add eax, 0x1c17d1 ; ret
0x000000000015b182 : add byte ptr [rax - 0x75], cl ; add eax, 0x8a3c6 ; call qword ptr [rax]
0x000000000015abb5 : add byte ptr [rax - 0x75], cl ; add eax, 0x8a993 ; call qword ptr [rax]
0x000000000015db4f : add byte ptr [rax - 0x75], cl ; add eax, 0x8c431 ; call qword ptr [rax]
0x00000000001210af : add byte ptr [rax - 0x75], cl ; add eax, 0xc2da9 ; mov eax, dword ptr [rax + 0x38] ; ret
0x0000000000094969 : add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x29] ; ret
0x00000000000a70bf : add byte ptr [rax - 0x75], cl ; and al, 0x10 ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x0000000000146d21 : add byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x00000000001376a9 : add byte ptr [rax - 0x75], cl ; and al, 8 ; mov rdi, rbx ; call rax
0x0000000000088b26 : add byte ptr [rax - 0x75], cl ; and byte ptr [r11 + rcx*4 + 0x75], r9b ; sbb byte ptr [rax - 0x77], cl ; retf
0x0000000000044eb3 : add byte ptr [rax - 0x75], cl ; cmp al, 0x24 ; mov eax, ecx ; syscall
0x00000000001196a9 : add byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call r12
0x0000000000129b57 : add byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; ret
0x00000000001504f7 : add byte ptr [rax - 0x75], cl ; cmp ebp, ebx ; ret
0x00000000001480e5 : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax + 0x29] ; retf 0x2948
0x00000000000f15e7 : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000108e0f : add byte ptr [rax - 0x75], cl ; je 0x108e43 ; sub byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x250bb
0x00000000001947d8 : add byte ptr [rax - 0x75], cl ; je 0x194809 ; adc byte ptr [rcx - 0x77], cl ; ret
0x00000000000cf23a : add byte ptr [rax - 0x75], cl ; je 0xcf26e ; or byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x000000000014ca8f : add byte ptr [rax - 0x75], cl ; jg 0x14cadf ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x14caab ; ret
0x000000000014ca8e : add byte ptr [rax - 0x75], cl ; jg 0x14cae0 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x14caac ; ret
0x0000000000152cbf : add byte ptr [rax - 0x75], cl ; jg 0x152d0f ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x152cdb ; ret
0x0000000000152cbe : add byte ptr [rax - 0x75], cl ; jg 0x152d10 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x152cdc ; ret
0x000000000009c2e7 : add byte ptr [rax - 0x75], cl ; jg 0x9c33c ; mov rsi, rbp ; call rax
0x000000000011915a : add byte ptr [rax - 0x75], cl ; jge 0x119165 ; call r12
0x00000000000cf3fb : add byte ptr [rax - 0x75], cl ; jl 0xcf42f ; adc byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x00000000000cf617 : add byte ptr [rax - 0x75], cl ; jl 0xcf64b ; adc byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000047bd8 : add byte ptr [rax - 0x75], cl ; jnp 0x47bea ; call rax
0x000000000009c52f : add byte ptr [rax - 0x75], cl ; jnp 0x9c581 ; call rax
0x000000000003545f : add byte ptr [rax - 0x75], cl ; js 0x354b8 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000472a5 : add byte ptr [rax - 0x75], cl ; js 0x472cf ; call rdx
0x00000000001288ca : add byte ptr [rax - 0x75], cl ; mov ebp, 0xffffff78 ; call 0x25322
0x00000000000352b0 : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + rdi*4 + 0x200] ; ret
0x00000000000ecadf : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 + 0x63], r9b ; ret 0xb60f
0x000000000011885f : add byte ptr [rax - 0x75], cl ; or byte ptr [rbx + 0x94901e1], al ; retf 0x894c
0x00000000000ff0db : add byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x77] ; ret 0x69e8
0x00000000000ecdfc : add byte ptr [rax - 0x75], cl ; or ecx, dword ptr [rax + 0x63] ; ret 0x634c
0x0000000000035290 : add byte ptr [rax - 0x75], cl ; pop rax ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000011ba57 : add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x00000000001288a7 : add byte ptr [rax - 0x75], cl ; pop rdi ; sub al, ch ; retf 0xffef
0x0000000000118847 : add byte ptr [rax - 0x75], cl ; push rax ; adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x0000000000087536 : add byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax - 0x75], cl ; or byte ptr [rax + 0x39], cl ; retf 0x776
0x0000000000109493 : add byte ptr [rax - 0x75], cl ; push rbp ; adc byte ptr [rax - 0x77], cl ; or byte ptr [r8 - 0x7d], r9b ; ret
0x00000000001188df : add byte ptr [rax - 0x75], cl ; push rbx ; adc byte ptr [rax - 0x73], cl ; adc byte ptr [r8 - 9], cl ; ret 0xfffe
0x000000000008dc51 : add byte ptr [rax - 0x75], cl ; push rbx ; or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x0000000000147387 : add byte ptr [rax - 0x75], cl ; push rbx ; sbb byte ptr [rax - 0x73], cl ; and byte ptr [rdi], cl ; retf 0x5089
0x0000000000097246 : add byte ptr [rax - 0x75], cl ; push rdi ; or dh, dh ; ret 0xf04
0x000000000010b9c2 : add byte ptr [rax - 0x75], cl ; push rdx ; sbb byte ptr [rax - 0x73], cl ; pushfq ; ret 0x8207
0x000000000016533f : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000a6fef : add byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x18 ; mov qword ptr [rdi], rdx ; add rax, rdi ; ret
0x000000000009cc04 : add byte ptr [rax - 0x75], cl ; push rsp ; and al, 8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000056b02 : add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x48f8
0x0000000000121916 : add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x8b40
0x00000000000de05f : add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000012091e : add byte ptr [rax - 0x75], cl ; sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x000000000005c212 : add byte ptr [rax - 0x75], cl ; xor byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xfc90
0x000000000002e1fe : add byte ptr [rax - 0x76b2a8bf], dl ; ret 0x3145
0x0000000000115e7f : add byte ptr [rax - 0x76b7ffc8], al ; ret
0x000000000015da54 : add byte ptr [rax - 0x77], cl ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000000fb8bd : add byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000086be0 : add byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x000000000002539c : add byte ptr [rax - 0x77], cl ; adc eax, 0x1c4c0c ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000015afd4 : add byte ptr [rax - 0x77], cl ; adc eax, 0x8a574 ; add rsp, 8 ; ret
0x000000000009d4f2 : add byte ptr [rax - 0x77], cl ; add eax, 0x14a1ae ; add rsp, 8 ; ret
0x000000000009d4b0 : add byte ptr [rax - 0x77], cl ; add eax, 0x14a1f0 ; ret
0x000000000009353a : add byte ptr [rax - 0x77], cl ; add eax, 0x150d4e ; ret
0x000000000009350d : add byte ptr [rax - 0x77], cl ; add eax, 0x150d73 ; ret
0x00000000000934ed : add byte ptr [rax - 0x77], cl ; add eax, 0x150d8b ; ret
0x000000000015df0f : add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000012ef53 : add byte ptr [rax - 0x77], cl ; and al, 0x10 ; call 0x8b1c8
0x00000000001586c7 : add byte ptr [rax - 0x77], cl ; and al, 0x48 ; xor eax, eax ; call 0x2513a
0x0000000000063262 : add byte ptr [rax - 0x77], cl ; call 0xffffffff834e5feb
0x0000000000047c6f : add byte ptr [rax - 0x77], cl ; clc ; cqo ; idiv rsi ; ret
0x000000000009297f : add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000188fdf : add byte ptr [rax - 0x77], cl ; clc ; vzeroupper ; ret
0x00000000000d0467 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008269a : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000008c39a : add byte ptr [rax - 0x77], cl ; fiadd word ptr [rcx + rcx*4 - 0x11] ; mov eax, r9d ; syscall
0x00000000001117bf : add byte ptr [rax - 0x77], cl ; fidivr dword ptr [rax + 0x10f] ; syscall
0x000000000009b835 : add byte ptr [rax - 0x77], cl ; fimul dword ptr [rcx + rcx*4 - 0xa] ; mov rdi, r13 ; call rax
0x00000000000ca299 : add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x77] ; fucomip st(0) ; retf
0x000000000009bc3f : add byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 0x19] ; call rax
0x000000000011869e : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, ebp ; pop rbp ; pop r12 ; jmp rax
0x000000000004201f : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x39] ; ret
0x000000000015d54c : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x00000000001369ca : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 8 ; call rax
0x0000000000044249 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + 0x82b8c2] ; add byte ptr [rax], al ; syscall
0x00000000000f0008 : add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x00000000001236d7 : add byte ptr [rax - 0x77], cl ; fsubr st(1) ; sar ch, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x000000000003956f : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; pop rax ; cmp al, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000115e3c : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; sti ; lock dec dword ptr [rax - 0x77] ; ret 0x8d48
0x0000000000097f1c : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; wait ; out 0xff, eax ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000002578d : add byte ptr [rax - 0x77], cl ; imul eax ; retf 0x16
0x000000000009c65d : add byte ptr [rax - 0x77], cl ; imul ecx, dword ptr [rax], 0x48 ; mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000925ab : add byte ptr [rax - 0x77], cl ; imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x000000000011831f : add byte ptr [rax - 0x77], cl ; je 0x118337 ; pop rbx ; ret
0x000000000015d3cd : add byte ptr [rax - 0x77], cl ; mov cl, 0xe9 ; add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000007cf30 : add byte ptr [rax - 0x77], cl ; mov ebp, 0xfffffb10 ; jmp rax
0x000000000006a7d5 : add byte ptr [rax - 0x77], cl ; mov ebp, ds ; sar dl, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x000000000008d983 : add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x0000000000160634 : add byte ptr [rax - 0x77], cl ; mov esi, 0x80 ; mov eax, ecx ; syscall
0x000000000012c714 : add byte ptr [rax - 0x77], cl ; out dx, al ; mov edi, ebx ; mov eax, ecx ; syscall
0x000000000009ba97 : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x000000000014c0c8 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x148b96
0x0000000000148ee8 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x1551a6
0x0000000000147ad0 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x00000000000835ec : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000146176 : add byte ptr [rax - 0x77], cl ; out dx, eax ; lea r9, [rsp + 0x20] ; call qword ptr [rax]
0x000000000010246f : add byte ptr [rax - 0x77], cl ; push rdx ; fmul dword ptr [rax - 0x7d] ; ret 0x4c28
0x0000000000096521 : add byte ptr [rax - 0x77], cl ; push rsp ; and al, 8 ; xor edi, edi ; call qword ptr [rax]
0x000000000002535c : add byte ptr [rax - 0x77], cl ; ret
0x000000000013fa7f : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x00000000000a0322 : add byte ptr [rax - 0x77], cl ; ret 0x1beb
0x00000000000538ca : add byte ptr [rax - 0x77], cl ; ret 0x1de8
0x0000000000055671 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000031d8d : add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000028f96 : add byte ptr [rax - 0x77], cl ; ret 0x2b48
0x0000000000082b63 : add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000004251e : add byte ptr [rax - 0x77], cl ; ret 0x394d
0x00000000000e3bda : add byte ptr [rax - 0x77], cl ; ret 0x3de9
0x0000000000082936 : add byte ptr [rax - 0x77], cl ; ret 0x45f7
0x0000000000191516 : add byte ptr [rax - 0x77], cl ; ret 0x4de9
0x00000000000e3bac : add byte ptr [rax - 0x77], cl ; ret 0x6be9
0x00000000000ee46f : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000001933ff : add byte ptr [rax - 0x77], cl ; ret 0x850f
0x00000000000358ce : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000129d3b : add byte ptr [rax - 0x77], cl ; ret 0x85e9
0x0000000000030c4c : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000011b31c : add byte ptr [rax - 0x77], cl ; ret 0x8949
0x00000000000a0679 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001939bd : add byte ptr [rax - 0x77], cl ; ret 0x894d
0x000000000003798d : add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x0000000000067feb : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000193705 : add byte ptr [rax - 0x77], cl ; ret 0x94c
0x00000000000a74f1 : add byte ptr [rax - 0x77], cl ; ret 0x96e8
0x00000000000fe437 : add byte ptr [rax - 0x77], cl ; ret 0xa0e9
0x000000000011aedb : add byte ptr [rax - 0x77], cl ; ret 0xabe
0x0000000000116f7e : add byte ptr [rax - 0x77], cl ; ret 0xb1e9
0x0000000000149711 : add byte ptr [rax - 0x77], cl ; ret 0xb45
0x000000000009c0d4 : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000000e3c57 : add byte ptr [rax - 0x77], cl ; ret 0xc0e9
0x00000000000e4b22 : add byte ptr [rax - 0x77], cl ; ret 0xc0eb
0x0000000000052aba : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000001935ef : add byte ptr [rax - 0x77], cl ; ret 0xc149
0x000000000009c91f : add byte ptr [rax - 0x77], cl ; ret 0xd148
0x000000000012d43f : add byte ptr [rax - 0x77], cl ; ret 0xf44
0x0000000000029958 : add byte ptr [rax - 0x77], cl ; ret 0xf641
0x00000000000c6f16 : add byte ptr [rax - 0x77], cl ; ret 0xf748
0x000000000010fb5a : add byte ptr [rax - 0x77], cl ; ret 0xfd83
0x000000000008fbf8 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000002e343 : add byte ptr [rax - 0x77], cl ; retf
0x000000000009dd3f : add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x000000000017ba42 : add byte ptr [rax - 0x77], cl ; retf 0x2e66
0x00000000000e7c9f : add byte ptr [rax - 0x77], cl ; retf 0x428b
0x000000000017b9a0 : add byte ptr [rax - 0x77], cl ; retf 0x6666
0x000000000017bbe2 : add byte ptr [rax - 0x77], cl ; retf 0x8349
0x000000000003333c : add byte ptr [rax - 0x77], cl ; retf 0x850f
0x00000000000752ea : add byte ptr [rax - 0x77], cl ; retf 0x8948
0x00000000000909ff : add byte ptr [rax - 0x77], cl ; retf 0x894c
0x00000000000f7dfb : add byte ptr [rax - 0x77], cl ; retf 0x8b48
0x000000000017c78a : add byte ptr [rax - 0x77], cl ; retf 0x9066
0x000000000009b73e : add byte ptr [rax - 0x77], cl ; retf 0x92eb
0x00000000000355f9 : add byte ptr [rax - 0x77], cl ; retf 0xc085
0x0000000000193f93 : add byte ptr [rax - 0x77], cl ; retf 0xc149
0x0000000000153f37 : add byte ptr [rax - 0x77], cl ; retf 0xf41
0x000000000004b415 : add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000008081f : add byte ptr [rax - 0x77], cl ; retf 0xf883
0x0000000000182bdc : add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x000000000019107f : add byte ptr [rax - 0x77], cl ; retf 0xff31
0x00000000000603af : add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x8349
0x000000000011711f : add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; retf 0xc931
0x00000000000fdaaf : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x75], 1 ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x974
0x00000000000ceb34 : add byte ptr [rax - 0x77], cl ; sal byte ptr [rbp + 5], 1 ; add rsp, 0x28 ; ret
0x00000000000a6c27 : add byte ptr [rax - 0x77], cl ; sal dword ptr [rcx], 0xc0 ; mov qword ptr [rdx], rcx ; ret
0x00000000000ba0f0 : add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000015da0c : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000052ee5 : add byte ptr [rax - 0x77], cl ; sti ; mov eax, 0x3e ; mov edi, dword ptr [rdi + 0x10] ; syscall
0x0000000000111aae : add byte ptr [rax - 0x77], cl ; xor esi, esi ; syscall
0x00000000000a438b : add byte ptr [rax - 0x78], 0x75 ; ret 0xde89
0x00000000000a6aeb : add byte ptr [rax - 0x78], 0x7d ; ret 0x2bf
0x00000000000a286d : add byte ptr [rax - 0x78], 0x7d ; ret 0x8944
0x0000000000194af0 : add byte ptr [rax - 0x7ab70000], al ; ret 0x7775
0x0000000000194bde : add byte ptr [rax - 0x7ab80000], al ; ret
0x0000000000037a49 : add byte ptr [rax - 0x7af0cc07], al ; ret 5
0x00000000000b034f : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x00000000001161e6 : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + 0xc] ; mov eax, 1 ; ret
0x0000000000194be1 : add byte ptr [rax - 0x7b], cl ; ret
0x0000000000042e5d : add byte ptr [rax - 0x7b], cl ; ret 0x574
0x00000000000269d6 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x4864
0x000000000011ac24 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; adc al, byte ptr [rcx] ; add byte ptr [rax], al ; call rax
0x000000000009add6 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; enter 0, 0 ; call rax
0x000000000011aa99 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; lea eax, [rax] ; add byte ptr [rax], al ; call rax
0x0000000000156a0a : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000000000009adec : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0
0x000000000007bc51 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0xe
0x000000000006d7ca : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 0x33
0x0000000000126a56 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 4
0x00000000000b2813 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x000000000008e927 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x88 ; ret
0x000000000010e3be : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x2141
0x0000000000193b79 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], cl ; test byte ptr [rax], dh ; add eax, 0x89480000 ; ret 0xc148
0x00000000000ba44f : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 4], cl ; mov rax, rdi ; ret
0x000000000009aa1f : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], cl ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x0000000000114d36 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x2c], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000114e27 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x2d], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000114f68 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x30], cl ; xor eax, eax ; pop rbx ; ret
0x0000000000061c65 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x7c], 0x83 ; retf 0xebff
0x000000000010c48f : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbx + rbp + 0x31], 0xd2 ; call rax
0x00000000000ff15f : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbx + rcx + 0x31], 0xc0 ; ret
0x00000000001164cd : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x000000000009d07e : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x00000000000a0097 : add byte ptr [rax - 0x7b], cl ; test byte ptr [rax - 0x77], 0xd0 ; cmovne rax, rdi ; ret
0x000000000004848c : add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x000000000010a863 : add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x84 ; retf 6
0x0000000000082e86 : add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x84 ; xchg eax, ecx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000044e3f : add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x95 ; ret
0x000000000017428b : add byte ptr [rax - 0x7bf0ffc7], al ; retf
0x0000000000108e5b : add byte ptr [rax - 0x7c], al ; test byte ptr [rdi], 0x84 ; retf
0x000000000017a0a7 : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x000000000013a46e : add byte ptr [rax - 0x7cf6b873], dl ; loopne 0x13a479 ; add eax, 0x10 ; ret
0x00000000000941e5 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc24289f5
0x00000000000985bf : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000009aa9d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000106670 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; test byte ptr [rip - 0x76fffffd], dh ; ret 0xc085
0x00000000000d4c2d : add byte ptr [rax - 0x7d], cl ; clc ; movsxd rcx, dword ptr [rdi] ; xchg eax, ecx ; jmp 0xffffffffc2974c45
0x0000000000106d0d : add byte ptr [rax - 0x7d], cl ; clc ; push qword ptr [rsp + rbx*8 - 0x77] ; ret 0xc085
0x00000000001419d4 : add byte ptr [rax - 0x7d], cl ; cli ; or cl, byte ptr [rax + 0xf] ; retf 0x8548
0x0000000000082bd1 : add byte ptr [rax - 0x7d], cl ; cli ; push qword ptr [rcx + rdi + 0x48] ; mov eax, edx ; pop rbx ; ret
0x0000000000098784 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000002a547 : add byte ptr [rax - 0x7d], cl ; mov dword ptr [rcx], 0x83481389 ; ret
0x0000000000147c6e : add byte ptr [rax - 0x7d], cl ; mov eax, 0x100 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000027007 : add byte ptr [rax - 0x7d], cl ; ret
0x0000000000107dc3 : add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x00000000000b9a1f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000a62af : add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x00000000000bac3f : add byte ptr [rax - 0x7d], cl ; ret 0x4501
0x0000000000027ad5 : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000002f18d : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000000e20b6 : add byte ptr [rax - 0x7d], cl ; ret 0x480f
0x0000000000074b4f : add byte ptr [rax - 0x7d], cl ; ret 0x4817
0x0000000000036378 : add byte ptr [rax - 0x7d], cl ; ret 0x481a
0x00000000000299f9 : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000002b4af : add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x000000000017ba6f : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000967c0 : add byte ptr [rax - 0x7d], cl ; ret 0x4a10
0x0000000000157b28 : add byte ptr [rax - 0x7d], cl ; ret 0x4d02
0x00000000001157d4 : add byte ptr [rax - 0x7d], cl ; ret 0x6602
0x0000000000181288 : add byte ptr [rax - 0x7d], cl ; ret 0x6610
0x000000000009cf97 : add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x0000000000127cb7 : add byte ptr [rax - 0x7d], cl ; ret 0x8330
0x00000000000f7227 : add byte ptr [rax - 0x7d], cl ; ret 0x8908
0x00000000000809a7 : add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x0000000000038597 : add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x00000000000e0cd3 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000017da53 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000158952 : add byte ptr [rax - 0x7d], cl ; ret 0xeb01
0x000000000017ba93 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000038fd5 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000093e7a : add byte ptr [rax - 0x7d], cl ; retf
0x0000000000097a7e : add byte ptr [rax - 0x7d], cl ; retf 0x4c01
0x00000000000255a8 : add byte ptr [rax - 0x7d], cl ; retf 0xc7ff
0x00000000000a8aef : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00000000000b048f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x000000000008341a : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0x7520
0x0000000000053b77 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x000000000004b90f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rdx], 0x4d ; add edx, eax ; jmp 0x4b935
0x000000000004e84f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rdx], 0x4d ; add edx, eax ; jmp 0x4e875
0x000000000005159f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rdx], 0x4d ; add edx, eax ; jmp 0x515c5
0x00000000000bb452 : add byte ptr [rax - 0x7d], cl ; stc ; add al, 0x48 ; cmovne eax, edx ; ret
0x00000000001505b1 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xfdb7
0x0000000000083ad8 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf
0x00000000001479f3 : add byte ptr [rax - 0x7f], cl ; ret
0x0000000000034cd4 : add byte ptr [rax - 0x7f], cl ; ret 0x200
0x000000000009af08 : add byte ptr [rax - 0x7f], cl ; ret 0x6be2
0x0000000000168fab : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000008378f : add byte ptr [rax - 0x7f], cl ; ret 0xe8
0x000000000013ac91 : add byte ptr [rax - 1], bh ; cmove eax, edx ; ret
0x000000000014cc89 : add byte ptr [rax - 1], bh ; jmp 0x14cc63
0x00000000000474b7 : add byte ptr [rax - 1], bh ; jmp 0x47490
0x0000000000046f4d : add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004216d : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000043f3d : add byte ptr [rax - 1], bh ; ret
0x000000000013a9e6 : add byte ptr [rax - 1], dil ; ret
0x000000000005b10a : add byte ptr [rax - 9], cl ; fisttp word ptr [rcx - 0x39] ; ret 0xffff
0x00000000000df250 : add byte ptr [rax], 0 ; add al, ch ; push rdi ; retf
0x00000000000880b5 : add byte ptr [rax], 0 ; add al, ch ; ret 0xa3c
0x00000000001505b5 : add byte ptr [rax], 0 ; add al, ch ; ret 0xfdb7
0x0000000000025fdc : add byte ptr [rax], 0 ; add al, ch ; retf
0x000000000005b79e : add byte ptr [rax], 0 ; add byte ptr [rax + 0x29], cl ; ror dword ptr [rax - 0x77], 1 ; retf 0x8b48
0x00000000000c5bbe : add byte ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000001895ad : add byte ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0xe175
0x00000000000f4ad6 : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret
0x00000000001824cd : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret 0x8c0f
0x00000000000fc883 : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000fd490 : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret 0x8d4a
0x000000000016a7aa : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; retf 0x8148
0x000000000013e8f4 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x73], cl ; and byte ptr [r8 - 0x7d], cl ; ret
0x000000000015b17f : add byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; add eax, 0x8a3c6 ; call qword ptr [rax]
0x000000000015abb2 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; add eax, 0x8a993 ; call qword ptr [rax]
0x0000000000097243 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; push rdi ; or dh, dh ; ret 0xf04
0x00000000000833d0 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000002578a : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; imul eax ; retf 0x16
0x000000000008fbf5 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000008e924 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x88 ; ret
0x0000000000181712 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000000474b4 : add byte ptr [rax], 0 ; add byte ptr [rax - 1], bh ; jmp 0x47493
0x0000000000196dbb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000000aa7ab : add byte ptr [rax], 0 ; add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x00000000001297f3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call 0x35a07
0x000000000009a213 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; lea rax, [rdx - 0x10] ; ret
0x00000000000e123b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, 0x3f ; syscall
0x000000000011f85b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, 0x44 ; syscall
0x00000000000e29cb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, 0x7c ; syscall
0x000000000013a4a3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000010d0ab : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, 8 ; syscall
0x0000000000155ebb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000008c1db : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x0000000000044dcb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x19f3d6] ; ret
0x000000000016b78b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000078bf3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov r10, rdx ; jmp r11
0x000000000011ba53 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x0000000000155173 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x00000000000287eb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x1c17d1] ; ret
0x000000000009c52b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rdi, qword ptr [rbx + 0x48] ; call rax
0x000000000016b5cb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000018133b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movsxd rax, ecx ; ret
0x000000000012ae2b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movups xmmword ptr [rbp - 0x78], xmm7 ; call rcx
0x00000000000ba64b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x000000000016b8db : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000016b86b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000008f14b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000032b13 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x00000000000ff15b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; test rax, rax ; je 0xff17c ; xor eax, eax ; ret
0x00000000001874bd : add byte ptr [rax], 0 ; add byte ptr [rax], al ; vzeroupper ; ret
0x000000000015b41b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; jmp 0x15b3ef
0x000000000015b49b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; jmp 0x15b46f
0x000000000009ca1b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000084f2b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor edi, edi ; mov rax, rdi ; ret
0x000000000012df2b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor esi, esi ; mov rax, rsi ; ret
0x0000000000098849 : add byte ptr [rax], 0 ; add byte ptr [rbp + rcx*4 + 5], cl ; in al, dx ; ret
0x00000000000821fb : add byte ptr [rax], 0 ; add byte ptr [rbx + 0x48], bl ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000993f7 : add byte ptr [rax], 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000005f519 : add byte ptr [rax], 0 ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000000fc521 : add byte ptr [rax], 0 ; add byte ptr [rbx - 0x7bf0f002], al ; ret 0
0x000000000015c7ae : add byte ptr [rax], 0 ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x000000000013e5f3 : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x1f0f
0x000000000013efb7 : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x33e9
0x000000000013e4ef : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0xf41
0x000000000013f0f5 : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0xfee9
0x000000000013ee8d : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x8944
0x000000000013f08b : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x93e9
0x00000000000de29e : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x00000000000de368 : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x000000000013f00f : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x43e9
0x000000000008a602 : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x30], al ; pop rbx ; ret
0x000000000008571a : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x0000000000044e4d : add byte ptr [rax], 0 ; add byte ptr [rcx - 0x46], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000005b020 : add byte ptr [rax], 0 ; add byte ptr [rcx - 0x7d], al ; ret 0x4840
0x000000000005490a : add byte ptr [rax], 0 ; add byte ptr [rcx], al ; ret 0x8b44
0x00000000000547ac : add byte ptr [rax], 0 ; add byte ptr [rcx], al ; ret 0x8b4c
0x0000000000140c56 : add byte ptr [rax], 0 ; add byte ptr [rcx], dh ; fisttp dword ptr [rax + 0x39] ; ret 0x850f
0x0000000000047483 : add byte ptr [rax], 0 ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000168eb7 : add byte ptr [rax], 0 ; add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000016a833 : add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000000ecb84 : add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; ret 0xc35b
0x000000000013b450 : add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; ret 0xfc3
0x000000000018b1f1 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000097269 : add byte ptr [rax], 0 ; add dh, dh ; ret 0x7504
0x00000000001161c7 : add byte ptr [rax], 0 ; mov eax, 1 ; add rsp, 8 ; ret
0x00000000000e3b93 : add byte ptr [rax], ah ; add byte ptr [rax], al ; jmp 0xe392b
0x0000000000101b67 : add byte ptr [rax], ah ; add byte ptr [rax], al ; ret
0x00000000000e1704 : add byte ptr [rax], ah ; add dword ptr [rax + 0x38], edi ; syscall
0x00000000000351b4 : add byte ptr [rax], ah ; movzx eax, ax ; ret
0x00000000001317d8 : add byte ptr [rax], al ; add al, 0 ; add al, ch ; cmp ebp, edi ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000124470 : add byte ptr [rax], al ; add al, 0 ; add al, ch ; mov cs, word ptr [rsi] ; lock dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000122770 : add byte ptr [rax], al ; add al, 0 ; add al, ch ; mov gs, word ptr [rbx] ; lock dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000ddd60 : add byte ptr [rax], al ; add al, 0 ; add al, ch ; sahf ; jne 0xddd69 ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000001328c0 : add byte ptr [rax], al ; add al, 0 ; add al, ch ; sub ch, bh ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000001225c0 : add byte ptr [rax], al ; add al, 0 ; add al, ch ; sub eax, 0x8948fff0 ; ret 0x8948
0x00000000001320d0 : add byte ptr [rax], al ; add al, 0 ; add al, ch ; xor ch, bh ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000152631 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call rax
0x00000000000d0697 : add byte ptr [rax], al ; add al, ch ; adc dword ptr [rbx - 9], esp ; dec dword ptr [rax - 0x77] ; ret
0x000000000013adcb : add byte ptr [rax], al ; add al, ch ; cmp eax, 0x89fffe3e ; ret
0x000000000011004a : add byte ptr [rax], al ; add al, ch ; ficom word ptr [rax - 0xf] ; dec dword ptr [rax - 0x77] ; ret 0x3b48
0x00000000001108c0 : add byte ptr [rax], al ; add al, ch ; int1 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000028e47 : add byte ptr [rax], al ; add al, ch ; int1 ; ret 0xffff
0x0000000000147a17 : add byte ptr [rax], al ; add al, ch ; int1 ; xlatb ; in eax, dx ; dec dword ptr [rax - 0x77] ; ret
0x00000000000fe395 : add byte ptr [rax], al ; add al, ch ; mov bl, 0x6c ; dec dword ptr [rax - 0x77] ; ret
0x00000000001293b5 : add byte ptr [rax], al ; add al, ch ; or esi, 0xffffffff ; dec dword ptr [rcx] ; ret
0x00000000000df251 : add byte ptr [rax], al ; add al, ch ; push rdi ; retf
0x0000000000112f42 : add byte ptr [rax], al ; add al, ch ; push rsi ; or ebp, edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000004b945 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000008bad6 : add byte ptr [rax], al ; add al, ch ; ret 0x5e
0x00000000000880b6 : add byte ptr [rax], al ; add al, ch ; ret 0xa3c
0x00000000001505b6 : add byte ptr [rax], al ; add al, ch ; ret 0xfdb7
0x0000000000025fdd : add byte ptr [rax], al ; add al, ch ; retf
0x0000000000085dce : add byte ptr [rax], al ; add al, ch ; retf 0x3e
0x000000000004509e : add byte ptr [rax], al ; add al, ch ; retf 0xfff0
0x0000000000028ea7 : add byte ptr [rax], al ; add al, ch ; xchg eax, ecx ; ret 0xffff
0x0000000000041ebc : add byte ptr [rax], al ; add al, ch ; xor al, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x000000000010a0dd : add byte ptr [rax], al ; add al, ch ; xor esi, dword ptr [rdx - 0x7cb7000f] ; ret
0x000000000005869f : add byte ptr [rax], al ; add bh, al ; add al, byte ptr [rdx] ; sar bh, 0xff ; ret
0x000000000019214f : add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rax + 0x21] ; ror dword ptr [rax + 9], cl ; retf
0x000000000010467d : add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rbx - 0x76b6ebb0] ; ret 0xc748
0x0000000000192db5 : add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rcx + 0x21] ; ret 0x949
0x000000000004354c : add byte ptr [rax], al ; add bh, bh ; jg 0x435a6 ; sub eax, edx ; shr rax, 0x3f ; ret
0x000000000014bc4a : add byte ptr [rax], al ; add bh, bh ; loope 0x14bbe6 ; ret
0x000000000012b7fb : add byte ptr [rax], al ; add bh, bh ; loopne 0x12b7c3 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000824bd : add byte ptr [rax], al ; add bh, bh ; loopne 0x82517 ; mov eax, 0xffffffff ; ret
0x00000000000ecb38 : add byte ptr [rax], al ; add bh, dh ; ret
0x0000000000049635 : add byte ptr [rax], al ; add bh, dh ; ret 0xffef
0x00000000000e404a : add byte ptr [rax], al ; add bl, al ; mov eax, 0xffffffff ; ret
0x00000000000ce26e : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x000000000011b69d : add byte ptr [rax], al ; add bl, al ; mov rdx, rcx ; jmp 0x11b694
0x00000000000eaa2b : add byte ptr [rax], al ; add bl, al ; nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x000000000013b09a : add byte ptr [rax], al ; add bl, al ; nop ; mov eax, 0xffffffff ; ret
0x000000000014f3cb : add byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x0000000000153d95 : add byte ptr [rax], al ; add bl, al ; nop dword ptr [rax] ; ret
0x000000000014be20 : add byte ptr [rax], al ; add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000009c502 : add byte ptr [rax], al ; add bl, al ; ret
0x00000000000a6dbd : add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x0000000000042b61 : add byte ptr [rax], al ; add bl, bl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x000000000015809c : add byte ptr [rax], al ; add bl, ch ; fidivr dword ptr [rax - 1] ; ret
0x000000000013583b : add byte ptr [rax], al ; add bl, ch ; mov ah, 0xe8 ; retf
0x000000000011729c : add byte ptr [rax], al ; add bl, ch ; mov word ptr [rax - 0x77], cs ; ret 0xb9e9
0x00000000001132ea : add byte ptr [rax], al ; add bl, ch ; out 0x90, al ; mov eax, 0xc ; syscall
0x0000000000148530 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x0000000000109d59 : add byte ptr [rax], al ; add bl, ch ; ret 0x9066
0x00000000000e1a2b : add byte ptr [rax], al ; add bl, ch ; ret 0xc389
0x00000000000a003d : add byte ptr [rax], al ; add bl, ch ; retf
0x00000000001458e3 : add byte ptr [rax], al ; add bl, ch ; retf 0x1f0f
0x000000000010e05d : add byte ptr [rax], al ; add bl, ch ; retf 0xf66
0x00000000000b64dd : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000b64ed : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x0000000000112649 : add byte ptr [rax], al ; add byte ptr [r9 + rbp - 0x48], sil ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x000000000013acd4 : add byte ptr [rax], al ; add byte ptr [rax + 0x102], bh ; cmovne eax, edx ; ret
0x00000000000ba6dd : add byte ptr [rax], al ; add byte ptr [rax + 0x10], bh ; pop rbx ; ret
0x0000000000063b9d : add byte ptr [rax], al ; add byte ptr [rax + 0x10], bh ; ret
0x000000000011340d : add byte ptr [rax], al ; add byte ptr [rax + 0x10], bh ; syscall
0x000000000011dc23 : add byte ptr [rax], al ; add byte ptr [rax + 0x119], bh ; syscall
0x000000000018e70c : add byte ptr [rax], al ; add byte ptr [rax + 0x1478d48], dl ; ret
0x000000000017c61c : add byte ptr [rax], al ; add byte ptr [rax + 0x1483d73], dl ; retf 0x8d4a
0x000000000012c7cd : add byte ptr [rax], al ; add byte ptr [rax + 0x16], bh ; ret
0x00000000000b785c : add byte ptr [rax], al ; add byte ptr [rax + 0x1788168a], dl ; lea rax, [rdi + 1] ; ret
0x000000000012c41d : add byte ptr [rax], al ; add byte ptr [rax + 0x18], bh ; syscall
0x00000000000ba6fd : add byte ptr [rax], al ; add byte ptr [rax + 0x20], bh ; pop rbx ; ret
0x0000000000191d74 : add byte ptr [rax], al ; add byte ptr [rax + 0x21], cl ; retf 0xb948
0x00000000001126bd : add byte ptr [rax], al ; add byte ptr [rax + 0x22], bh ; syscall
0x000000000007a2d8 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000d37cb : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x2948
0x00000000000520cf : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf
0x00000000000cf150 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000005b79f : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ror dword ptr [rax - 0x77], 1 ; retf 0x8b48
0x00000000000ba6ed : add byte ptr [rax], al ; add byte ptr [rax + 0x30], bh ; pop rbx ; ret
0x00000000000a6ecc : add byte ptr [rax], al ; add byte ptr [rax + 0x3907be0f], dl ; ret 0xf41
0x00000000000c5bbf : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000e81bd : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000008dfc5 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000000569c4 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf
0x000000000012dffd : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x2777
0x0000000000163df4 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x000000000016d1e1 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000012ec3d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x577
0x0000000000096d6d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x820f
0x0000000000087f13 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x00000000000942c0 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x840f
0x00000000001895ae : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0xe175
0x00000000000e194d : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], bh ; syscall
0x00000000000e123d : add byte ptr [rax], al ; add byte ptr [rax + 0x3f], bh ; syscall
0x00000000000ba71d : add byte ptr [rax], al ; add byte ptr [rax + 0x40], bh ; pop rbx ; ret
0x0000000000033842 : add byte ptr [rax], al ; add byte ptr [rax + 0x440ffff9], al ; retf 0xd88
0x000000000011f85d : add byte ptr [rax], al ; add byte ptr [rax + 0x44], bh ; syscall
0x00000000000ba695 : add byte ptr [rax], al ; add byte ptr [rax + 0x485bf0e5], al ; cmovne eax, edx ; ret
0x0000000000112487 : add byte ptr [rax], al ; add byte ptr [rax + 0x48], bh ; syscall
0x0000000000042eae : add byte ptr [rax], al ; add byte ptr [rax + 0x48c22148], al ; mov dword ptr [rdi], edx ; ret
0x0000000000115b0d : add byte ptr [rax], al ; add byte ptr [rax + 0x4c], bh ; syscall
0x0000000000063a0d : add byte ptr [rax], al ; add byte ptr [rax + 0x52], bh ; syscall
0x000000000010cafd : add byte ptr [rax], al ; add byte ptr [rax + 0x5a], bh ; syscall
0x00000000000ba70d : add byte ptr [rax], al ; add byte ptr [rax + 0x60], bh ; pop rbx ; ret
0x00000000000cf77d : add byte ptr [rax], al ; add byte ptr [rax + 0x60], bh ; syscall
0x000000000007ef16 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rdx ; jmp rax
0x000000000007de5a : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; add al, 0x87 ; add rax, rdx ; jmp rax
0x000000000007e262 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; add al, 0x88 ; add rax, rdx ; jmp rax
0x00000000000f667a : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; add cl, byte ptr [rax - 0x77] ; ret
0x000000000013a74e : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; fisttp dword ptr [rax + 1] ; ret
0x000000000005ac95 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000a5a79 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d41
0x00000000000c56ab : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x830f
0x00000000000c5f31 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8348
0x00000000000c5861 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x860f
0x00000000000c5e8f : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8948
0x00000000000c5f08 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x894c
0x000000000004afdb : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d44
0x000000000004e05b : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4a
0x00000000000872dd : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x000000000013b3e6 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 1], 1 ; xlatb ; mov qword ptr [r9], rdi ; ret
0x00000000000e26fd : add byte ptr [rax], al ; add byte ptr [rax + 0x66], bh ; syscall
0x00000000000e271d : add byte ptr [rax], al ; add byte ptr [rax + 0x68], bh ; syscall
0x00000000000e270d : add byte ptr [rax], al ; add byte ptr [rax + 0x6b], bh ; syscall
0x00000000000e272d : add byte ptr [rax], al ; add byte ptr [rax + 0x6c], bh ; syscall
0x00000000000e26ed : add byte ptr [rax], al ; add byte ptr [rax + 0x6e], bh ; syscall
0x00000000000e273d : add byte ptr [rax], al ; add byte ptr [rax + 0x73], bh ; syscall
0x00000000000b6a2d : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000000e29cd : add byte ptr [rax], al ; add byte ptr [rax + 0x7c], bh ; syscall
0x00000000000e356d : add byte ptr [rax], al ; add byte ptr [rax + 0x7e], bh ; ret
0x00000000000441e2 : add byte ptr [rax], al ; add byte ptr [rax + 0x7f], bh ; syscall
0x000000000013b86d : add byte ptr [rax], al ; add byte ptr [rax + 0x7fffffff], bh ; ret
0x000000000004421f : add byte ptr [rax], al ; add byte ptr [rax + 0x82], bh ; syscall
0x000000000004475d : add byte ptr [rax], al ; add byte ptr [rax + 0x83], bh ; syscall
0x000000000011320d : add byte ptr [rax], al ; add byte ptr [rax + 0x8c], bh ; syscall
0x000000000010179d : add byte ptr [rax], al ; add byte ptr [rax + 0x8e], bh ; syscall
0x00000000000cf85d : add byte ptr [rax], al ; add byte ptr [rax + 0xa4], bh ; syscall
0x000000000011db4d : add byte ptr [rax], al ; add byte ptr [rax + 0xa6], bh ; syscall
0x0000000000113e6d : add byte ptr [rax], al ; add byte ptr [rax + 0xaa], bh ; syscall
0x000000000012bdbf : add byte ptr [rax], al ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000000e3900 : add byte ptr [rax], al ; add byte ptr [rax + 0xe5], bh ; syscall
0x0000000000043ecd : add byte ptr [rax], al ; add byte ptr [rax + 0xe], bh ; syscall
0x00000000000292dd : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; mov esi, 0x83480147 ; ret
0x00000000000dd9ca : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x000000000008da74 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x110f
0x00000000001576b4 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x3145
0x000000000011f688 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x31c3
0x00000000000e32ee : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x56e9
0x00000000000e363f : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000015aad2 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x00000000000e31c0 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x84e9
0x000000000002c281 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000e3527 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x90c3
0x00000000000e328f : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xb5e9
0x00000000000e3508 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x00000000000a08b2 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3c3
0x00000000000e324b : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xf9e9
0x00000000000e3544 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000013df20 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xff81
0x0000000000054a6f : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ror byte ptr [r9 - 0x76a7dbac], 1 ; ret 0x31e9
0x00000000000e34ce : add byte ptr [rax], al ; add byte ptr [rax + 0xfde8], bh ; cmovne rax, rdx ; ret
0x00000000000e35d8 : add byte ptr [rax], al ; add byte ptr [rax + 0xff], bh ; cmovne rax, rdx ; ret
0x00000000000e3498 : add byte ptr [rax], al ; add byte ptr [rax + 0xfffa], bh ; cmovne rax, rdx ; ret
0x00000000000e357d : add byte ptr [rax], al ; add byte ptr [rax + 0xfffa], bh ; ret
0x00000000000cd9fd : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; jg 0xcda15 ; neg eax ; ret
0x00000000000585d3 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000000e375d : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; test edi, edi ; js 0xe377c ; ret
0x00000000000cdbc0 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000001824d7 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x0000000000055537 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x00000000000578d6 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x00000000001824ce : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8c0f
0x00000000000fc884 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000fd491 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8d4a
0x00000000000efce8 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0x11eb
0x000000000016a7ab : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0x8148
0x00000000000587bf : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x0000000000189d8d : add byte ptr [rax], al ; add byte ptr [rax + 5], cl ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000151c7e : add byte ptr [rax], al ; add byte ptr [rax + 5], cl ; test al, 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000ba6cd : add byte ptr [rax], al ; add byte ptr [rax + 8], bh ; pop rbx ; ret
0x000000000010d0ad : add byte ptr [rax], al ; add byte ptr [rax + 8], bh ; syscall
0x000000000012531d : add byte ptr [rax], al ; add byte ptr [rax + rax*8 - 0x76b7f08c], al ; retf 0xb60f
0x00000000000cdf43 : add byte ptr [rax], al ; add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, [rdi - 0x10] ; ret
0x00000000000538c4 : add byte ptr [rax], al ; add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0x1de8
0x0000000000047bd1 : add byte ptr [rax], al ; add byte ptr [rax + rcx*2 - 0x77], ah ; push rbp ; add byte ptr [rax - 0x75], cl ; jnp 0x47bf1 ; call rax
0x0000000000044907 : add byte ptr [rax], al ; add byte ptr [rax - 0x2d], cl ; loopne 0x44961 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000013ba33 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; add al, 0x24 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000004200d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000050124 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000ce4cd : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000000ce50d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000ce4bd : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000000ce4fd : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000004953a : add byte ptr [rax], al ; add byte ptr [rax - 0x3dbbf0b8], al ; jmp 0x4955f
0x000000000012fd28 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; rcl byte ptr [rcx], 0xeb ; ret 0x8b48
0x000000000002538f : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000315ee : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x000000000013072f : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x0000000000043c53 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000011282a : add byte ptr [rax], al ; add byte ptr [rax - 0x3fcef877], al ; ret
0x0000000000026c5d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add eax, 0x188824 ; ret
0x0000000000026c6d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add eax, 0x18a6ae ; ret
0x0000000000151d25 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add eax, 0x97c51 ; pop rbx ; ret
0x0000000000151c45 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add eax, 0x97d39 ; pop rbx ; ret
0x0000000000151b65 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add eax, 0x97e31 ; pop rbx ; ret
0x000000000013e8f5 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; and byte ptr [r8 - 0x7d], cl ; ret
0x00000000000cdf8d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000cdf9d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000cdf7d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x00000000000807b2 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; mov rdi, rbx ; call rax
0x000000000009b735 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; or eax, 0x11420d ; mov rdx, rcx ; jmp 0x9b6e2
0x0000000000133b6d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; pop rdi ; add ebx, ebp ; cwde ; xor eax, eax ; ret
0x0000000000095ff0 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000004722f : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; push rax ; dec dword ptr [rbx + rcx*4 + 0x2d] ; ret
0x0000000000052e5b : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor eax, 0x7b ; call rax
0x0000000000136a4d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; xor eax, 0x7bfdd ; call 0x142cac
0x0000000000047cef : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x000000000017b88d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000009c28d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add eax, 0x147cb9 ; call qword ptr [rax]
0x000000000009c1ad : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add eax, 0x147d99 ; call qword ptr [rax]
0x0000000000030ced : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add eax, 0x1b5a11 ; ret
0x00000000000287fd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add eax, 0x1c17b1 ; ret
0x00000000000287ed : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add eax, 0x1c17d1 ; ret
0x000000000015b180 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add eax, 0x8a3c6 ; call qword ptr [rax]
0x000000000015abb3 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add eax, 0x8a993 ; call qword ptr [rax]
0x0000000000094967 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x29] ; ret
0x0000000000044eb1 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; cmp al, 0x24 ; mov eax, ecx ; syscall
0x00000000001480e3 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax + 0x29] ; retf 0x2948
0x00000000000f1b9d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000119158 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0x119167 ; call r12
0x000000000009c52d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jnp 0x9c583 ; call rax
0x00000000000472a3 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; js 0x472d1 ; call rdx
0x000000000011ba55 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x0000000000147385 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbx ; sbb byte ptr [rax - 0x73], cl ; and byte ptr [rdi], cl ; retf 0x5089
0x0000000000097244 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rdi ; or dh, dh ; ret 0xf04
0x0000000000121914 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x8b40
0x00000000000de05d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000002e1fc : add byte ptr [rax], al ; add byte ptr [rax - 0x76b2a8bf], dl ; ret 0x3145
0x00000000000fb8bb : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000086bde : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x0000000000093538 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add eax, 0x150d4e ; ret
0x000000000009350b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add eax, 0x150d73 ; ret
0x00000000000934eb : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add eax, 0x150d8b ; ret
0x000000000012ef51 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; and al, 0x10 ; call 0x8b1ca
0x00000000001586c5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; and al, 0x48 ; xor eax, eax ; call 0x2513c
0x0000000000047c7d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; cqo ; idiv rsi ; ret
0x000000000009297d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000188fdd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; vzeroupper ; ret
0x0000000000082698 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000008c398 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fiadd word ptr [rcx + rcx*4 - 0x11] ; mov eax, r9d ; syscall
0x00000000001117bd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fidivr dword ptr [rax + 0x10f] ; syscall
0x00000000000ca297 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x77] ; fucomip st(0) ; retf
0x000000000009bc3d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 0x19] ; call rax
0x000000000015d54a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x00000000000f0006 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x000000000002578b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; imul eax ; retf 0x16
0x000000000007cf2e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; mov ebp, 0xfffffb10 ; jmp rax
0x000000000008d981 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x000000000012c712 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov edi, ebx ; mov eax, ecx ; syscall
0x000000000009ba95 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x000000000014c0c6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x148b98
0x0000000000148ee6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x1551a8
0x00000000000835ea : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000146174 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; lea r9, [rsp + 0x20] ; call qword ptr [rax]
0x000000000010246d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; push rdx ; fmul dword ptr [rax - 0x7d] ; ret 0x4c28
0x00000000000296c0 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000013fa7d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000075bcf : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000008350c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000077353 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2b48
0x00000000000ee46d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000151f77 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000000fd78d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000011b31a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8949
0x00000000000a0677 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001939bb : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894d
0x00000000000ff567 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000001935ed : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc149
0x000000000009c91d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xd148
0x000000000008fbf6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000002f54d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x000000000009dd3d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x00000000000e7c9d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x428b
0x000000000017b99e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x6666
0x00000000000752e8 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x00000000000909fd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x894c
0x000000000017c788 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x000000000017d7f4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000008081d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf883
0x0000000000182bda : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x000000000007e74d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x8349
0x000000000012da1d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; retf 0xc931
0x00000000000fdaad : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x75], 1 ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x974
0x00000000000ceb32 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; sal byte ptr [rbp + 5], 1 ; add rsp, 0x28 ; ret
0x0000000000194aee : add byte ptr [rax], al ; add byte ptr [rax - 0x7ab70000], al ; ret 0x7775
0x0000000000194bdc : add byte ptr [rax], al ; add byte ptr [rax - 0x7ab80000], al ; ret
0x000000000007bc4f : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0xe
0x000000000006d7c8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 0x33
0x000000000008e925 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x88 ; ret
0x00000000000ba44d : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 4], cl ; mov rax, rdi ; ret
0x000000000010c48d : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbx + rbp + 0x31], 0xd2 ; call rax
0x00000000000ff15d : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbx + rcx + 0x31], 0xc0 ; ret
0x000000000009d07c : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x000000000004848a : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x000000000010a861 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x84 ; retf 6
0x00000000000985bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000009aa9b : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x00000000001419d2 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; cli ; or cl, byte ptr [rax + 0xf] ; retf 0x8548
0x0000000000098782 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000002de1c : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000b9a1d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000a62ad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x0000000000027ad3 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000f666d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000000e20b4 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x480f
0x00000000000d28cd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000017d593 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000157b26 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4d02
0x0000000000181286 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6610
0x00000000000e1d10 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x0000000000038595 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x000000000017f111 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000158950 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb01
0x000000000017d5bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000838a3 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000097a7c : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf 0x4c01
0x00000000000255a6 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf 0xc7ff
0x00000000000a8aed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000016a7a4 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000008378d : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0xe8
0x000000000014cc87 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; jmp 0x14cc65
0x00000000000474b5 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; jmp 0x47492
0x0000000000046f4b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004216b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000043f3b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000005b108 : add byte ptr [rax], al ; add byte ptr [rax - 9], cl ; fisttp word ptr [rcx - 0x39] ; ret 0xffff
0x000000000012fd63 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000008bad4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0x5e
0x0000000000090bab : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf
0x000000000010a0db : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; xor esi, dword ptr [rdx - 0x7cb7000f] ; ret
0x000000000019214d : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rax + 0x21] ; ror dword ptr [rax + 9], cl ; retf
0x000000000010467b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rbx - 0x76b6ebb0] ; ret 0xc748
0x0000000000192db3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rcx + 0x21] ; ret 0x949
0x0000000000049b3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, dh ; ret 0xffef
0x000000000011b69b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, al ; mov rdx, rcx ; jmp 0x11b696
0x0000000000196967 : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, al ; nop dword ptr [rax] ; ret
0x000000000011729a : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, ch ; mov word ptr [rax - 0x77], cs ; ret 0xb9e9
0x00000000000b64db : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000b64eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x00000000000ba6db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x10], bh ; pop rbx ; ret
0x0000000000063b9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x10], bh ; ret
0x000000000011340b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x10], bh ; syscall
0x000000000018e70a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x1478d48], dl ; ret
0x000000000017c61a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x1483d73], dl ; retf 0x8d4a
0x000000000012c7cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x16], bh ; ret
0x000000000012c41b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x18], bh ; syscall
0x00000000000ba6fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x20], bh ; pop rbx ; ret
0x00000000001126bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x22], bh ; syscall
0x00000000000ba6eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x30], bh ; pop rbx ; ret
0x00000000000a6eca : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x3907be0f], dl ; ret 0xf41
0x000000000012dffb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x2777
0x00000000000e194b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], bh ; syscall
0x00000000000ba71b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x40], bh ; pop rbx ; ret
0x0000000000042eac : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x48c22148], al ; mov dword ptr [rdi], edx ; ret
0x0000000000115b0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x4c], bh ; syscall
0x0000000000063a0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x52], bh ; syscall
0x000000000010cafb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x5a], bh ; syscall
0x00000000000ba70b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x60], bh ; pop rbx ; ret
0x00000000000cf77b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x60], bh ; syscall
0x00000000000872db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x00000000000e26fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x66], bh ; syscall
0x00000000000e271b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x68], bh ; syscall
0x00000000000e270b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x6b], bh ; syscall
0x00000000000e272b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x6c], bh ; syscall
0x00000000000e26eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x6e], bh ; syscall
0x00000000000e273b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x73], bh ; syscall
0x00000000000b6a2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000000e356b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x7e], bh ; ret
0x000000000013b86b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x7fffffff], bh ; ret
0x000000000004475b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x83], bh ; syscall
0x000000000011320b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x8c], bh ; syscall
0x000000000010179b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x8e], bh ; syscall
0x00000000000cf85b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xa4], bh ; syscall
0x000000000011db4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xa6], bh ; syscall
0x0000000000113e6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xaa], bh ; syscall
0x000000000012c68b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xe5], bh ; syscall
0x00000000000292db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; mov esi, 0x83480147 ; ret
0x00000000000e357b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xfffa], bh ; ret
0x000000000009c4fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x000000000014780b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x00000000000ba6cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 8], bh ; pop rbx ; ret
0x000000000012531b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax*8 - 0x76b7f08c], al ; retf 0xb60f
0x000000000004200b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000ce4cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000000ce50b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000ce4bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000000ce4fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x0000000000049538 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x3dbbf0b8], al ; jmp 0x49561
0x0000000000026c5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add eax, 0x188824 ; ret
0x0000000000026c6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add eax, 0x18a6ae ; ret
0x00000000000cdf8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000cdf9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000cdf7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x0000000000047ced : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x000000000009c28b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add eax, 0x147cb9 ; call qword ptr [rax]
0x000000000009c1ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add eax, 0x147d99 ; call qword ptr [rax]
0x0000000000030ceb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add eax, 0x1b5a11 ; ret
0x00000000000287fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add eax, 0x1c17b1 ; ret
0x00000000000de05b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000002e1fa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x76b2a8bf], dl ; ret 0x3145
0x000000000009297b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000188fdb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; vzeroupper ; ret
0x00000000001160e0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000093609 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000ee46b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000fd78b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000009c91b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xd148
0x000000000002f54b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x000000000009dd3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x000000000010e86b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x00000000000909fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x894c
0x000000000007e74b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x8349
0x000000000012da1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; retf 0xc931
0x0000000000194aec : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7ab70000], al ; ret 0x7775
0x0000000000194bda : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7ab80000], al ; ret
0x00000000000985bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000004b6eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000b9a1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000a62ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000004985b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000f666b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000000d28cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x00000000000a8aeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000008378b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0xe8
0x000000000014cc85 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; jmp 0x14cc67
0x000000000008749b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000008bad2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0x5e
0x0000000000049536 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x3dbbf0b8], al ; jmp 0x49563
0x0000000000049537 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rax + 0xf], 0x44 ; ret 0x14eb
0x00000000001019bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000193322 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rax + 0x21], cl ; ret 0x8545
0x00000000000a60cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x38], al ; retf 0x1b76
0x00000000000ec4c7 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000a0159 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000f29eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x52], al ; add dword ptr [rbp + 0x39], eax ; retf 0x820f
0x0000000000056afb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x48f8
0x000000000009048b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x158901ea], al ; retf
0x00000000000bcb6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x39082444], cl ; ret 0x840f
0x00000000000b546b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000017b87b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x48028901], cl ; mov eax, edi ; ret
0x00000000000a0114 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000008c1ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x8042507], cl ; add byte ptr [rax], al ; ret
0x000000000013b36b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x548afe06], al ; jmp 0x13b344
0x0000000000190f9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7c017], al ; ret 0xd348
0x000000000008fe8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7c2e76ed], cl ; retf 0x8320
0x000000000017618b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3518911], cl ; ret
0x0000000000158111 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x00000000000600bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x50 ; or al, 0xf6 ; ret 0xf01
0x00000000000b9c5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000018648b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x000000000010b90b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x000000000013b37b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; retf
0x000000000011e1cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; retf 0xf983
0x000000000007eedb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; int1 ; jmp rax
0x000000000009d76b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf
0x000000000011e2fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf 0x2db8
0x00000000000be83b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000c07db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4104
0x00000000000ea14b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x000000000016105b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000000a774b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000108a8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdx]
0x000000000008d6cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; clc ; ret
0x000000000012dfcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; leave ; mov rax, rcx ; ret
0x00000000000a6d6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x48], cl ; mov dword ptr [rdi], edx ; ret
0x00000000000a46cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr cl, cl ; ret 0xfffa
0x0000000000049adb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000093f9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000176169 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x00000000000b6439 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000011e869 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x11f ; syscall
0x000000000011e8f9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x134 ; syscall
0x000000000011e989 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x13f ; syscall
0x000000000010d0d9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x15 ; syscall
0x000000000011f0d9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x30 ; syscall
0x000000000011ec39 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x32 ; syscall
0x000000000011fa19 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x43 ; syscall
0x000000000010cbe9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x53 ; syscall
0x000000000010eab9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x57 ; syscall
0x000000000010e9f9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x58 ; syscall
0x000000000011e779 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x63 ; syscall
0x00000000000e2939 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x79 ; syscall
0x000000000011dba9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x7a ; syscall
0x000000000011ddb9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x87 ; syscall
0x000000000010c9a9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x89 ; syscall
0x00000000001176e9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x95 ; syscall
0x0000000000114669 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x99 ; syscall
0x000000000011e329 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x9f ; syscall
0x000000000011e4d9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0xb1 ; syscall
0x000000000011e689 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0xb4 ; syscall
0x000000000011b8a9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0xc2 ; syscall
0x000000000011b909 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0xc3 ; syscall
0x000000000011b7e9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0xc4 ; syscall
0x000000000011b999 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0xc5 ; syscall
0x000000000011e539 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0xfe ; syscall
0x0000000000092929 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0xffffffff ; ret
0x00000000001477f9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 2 ; ret
0x00000000000dc9e9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rdi] ; ret
0x0000000000092969 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov rax, qword ptr [rdi + 0x68] ; ret
0x0000000000176139 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov word ptr [rcx], dx ; ret
0x00000000000b6409 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov word ptr [rdi], dx ; ret
0x0000000000144fc9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; ret
0x00000000000b9479 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x0000000000155ed9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; xor eax, eax ; ret
0x00000000000cdc99 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; xor rax, rax ; ret
0x00000000001174fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x000000000012defb : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x000000000010cddb : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7540
0x000000000006027b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0xf50
0x00000000000e52fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; test dword ptr [rbx + rdi*8 - 1], ecx ; call qword ptr [rax]
0x0000000000063bac : add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x000000000014d442 : add byte ptr [rax], al ; add byte ptr [rax], al ; add ecx, dword ptr [rbx + 0xf0c2454] ; retf 0x5089
0x00000000000ce48c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000009925c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000196dbc : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000044e83 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000028855 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000114ecc : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000009d05c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000ba694 : add byte ptr [rax], al ; add byte ptr [rax], al ; and ch, 0xf0 ; pop rbx ; cmovne rax, rdx ; ret
0x000000000004324c : add byte ptr [rax], al ; add byte ptr [rax], al ; and edx, 0x80000000 ; mov dword ptr [rdi], edx ; ret
0x00000000000aa7ac : add byte ptr [rax], al ; add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x00000000000aa7bc : add byte ptr [rax], al ; add byte ptr [rax], al ; bsf eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x00000000000aa7cc : add byte ptr [rax], al ; add byte ptr [rax], al ; bsf eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x00000000000aac7c : add byte ptr [rax], al ; add byte ptr [rax], al ; bsr eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x00000000000aac8c : add byte ptr [rax], al ; add byte ptr [rax], al ; bsr eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x00000000000aac9c : add byte ptr [rax], al ; add byte ptr [rax], al ; bsr eax, eax ; lea rax, [rax + rdi + 0x30] ; ret
0x000000000010a0dc : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x25323
0x00000000001297f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x35a06
0x000000000009abc6 : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rip + 0x14ca48]
0x000000000013ba3a : add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000111884 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmova eax, edx ; ret
0x000000000011f687 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovb rax, rdx ; ret
0x0000000000114745 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x000000000015aad1 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; add rsp, 8 ; ret
0x00000000000a08b1 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000e128d : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rdx, rax ; mov rax, rdx ; ret
0x0000000000126228 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x000000000013b36c : add byte ptr [rax], al ; add byte ptr [rax], al ; cmp edx, 1 ; jne 0x13b32a ; jmp 0x13b343
0x000000000012dffc : add byte ptr [rax], al ; add byte ptr [rax], al ; cmp rdx, rcx ; ja 0x12e037 ; xor eax, eax ; syscall
0x0000000000042b60 : add byte ptr [rax], al ; add byte ptr [rax], al ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000a003c : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0xa0012
0x000000000007d14e : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000000ecb93 : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xecbb2 ; cmp byte ptr [rsi], cl ; je 0xecb3c ; ret
0x000000000018e78c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x000000000018e79c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x000000000018e7ac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x000000000018e7bc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x000000000018e7cc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x000000000018e71c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x000000000018e72c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x000000000018e73c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x000000000018e74c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x000000000018e75c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x000000000018e76c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x000000000018e77c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x00000000000cdf7c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi - 0xc] ; ret
0x00000000000cdf9c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi - 4] ; ret
0x00000000000cdf8c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi - 8] ; ret
0x000000000009a214 : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdx - 0x10] ; ret
0x0000000000026c5c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rip + 0x188824] ; ret
0x0000000000026c6c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rip + 0x18a6ae] ; ret
0x0000000000151d24 : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rip + 0x97c51] ; pop rbx ; ret
0x0000000000151c44 : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rip + 0x97d39] ; pop rbx ; ret
0x0000000000151b64 : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rip + 0x97e31] ; pop rbx ; ret
0x00000000000b6a2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x00000000000b542c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000017618c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000017617c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x000000000017615c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x000000000010b90c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000a71dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; lea rax, [rdi + rax - 1] ; ret
0x00000000000b644c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000001470ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rsi], 0xa ; ret
0x00000000001470cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rsi], 0xc ; ret
0x00000000001470bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rsi], 8 ; ret
0x00000000000b610c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000ba6dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x10 ; pop rbx ; ret
0x0000000000063b9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x10 ; ret
0x000000000011340c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x10 ; syscall
0x000000000013acd3 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x102 ; cmovne eax, edx ; ret
0x000000000012c7cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x000000000012c41c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x18 ; syscall
0x00000000000ba6fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x20 ; pop rbx ; ret
0x00000000001126bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x22 ; syscall
0x00000000000ba6ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x30 ; pop rbx ; ret
0x00000000000e194c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x3b ; syscall
0x00000000000e123c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x3f ; syscall
0x00000000000ba71c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x40 ; pop rbx ; ret
0x000000000011f85c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x44 ; syscall
0x0000000000115b0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x4c ; syscall
0x0000000000063a0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x52 ; syscall
0x000000000010cafc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5a ; syscall
0x00000000000ba70c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x60 ; pop rbx ; ret
0x00000000000cf77c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x60 ; syscall
0x00000000000e26fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x66 ; syscall
0x00000000000e271c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x00000000000e270c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x00000000000e272c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x00000000000e26ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6e ; syscall
0x00000000000e273c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x73 ; syscall
0x00000000000e29cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x7c ; syscall
0x00000000000e356c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x7e ; ret
0x000000000013b86c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x7fffffff ; ret
0x000000000004475c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x83 ; syscall
0x000000000011320c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x8c ; syscall
0x000000000010179c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x8e ; syscall
0x00000000000cf85c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xa4 ; syscall
0x000000000011db4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xa6 ; syscall
0x0000000000113e6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xaa ; syscall
0x000000000012c68c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x00000000000e357c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xfffa ; ret
0x000000000014cc86 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; jmp 0x14cc66
0x000000000008749c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000585d2 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000000587be : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x00000000000ba6cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 8 ; pop rbx ; ret
0x000000000010d0ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 8 ; syscall
0x0000000000047eab : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000017b87c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000000cd97c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x24] ; cmp eax, dword ptr [rsi + 0x24] ; jne 0xcda0c ; ret
0x0000000000155ebc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000008c1dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x000000000008c1ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x000000000008d2fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x0000000000044ddc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x19f3c2] ; ret
0x0000000000044dcc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x19f3d6] ; ret
0x0000000000158112 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012422c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; ret
0x00000000000b546c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000e190c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edi, edx ; mov eax, esi ; syscall
0x000000000015b569 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, 0xffffffff ; mov eax, edx ; ret
0x000000000016b78c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000009198c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rax + 8], 0 ; ret
0x00000000001761cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x00000000001761dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x00000000001761ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x00000000001761fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000017620c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000017621c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x00000000001761bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x000000000017619c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x0000000000156384 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x20], 0 ; ret
0x00000000000b645c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000b649c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000b64ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000b64bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000b64cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000b648c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000b646c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x00000000001470ea : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000ff53e : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 8], 0 ; ret
0x000000000011e2fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov r10, rcx ; mov eax, 0x12d ; syscall
0x000000000011dd8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov r10, rcx ; mov eax, 0x12e ; syscall
0x000000000011f0ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov r10, rcx ; mov eax, 0x36 ; syscall
0x0000000000078bf4 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov r10, rdx ; jmp r11
0x000000000007eedc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov r9, rsi ; jmp rax
0x00000000000928ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, -1 ; ret
0x00000000000ce4bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, 2 ; ret
0x00000000000ce4cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, 3 ; ret
0x00000000000ce4dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, 4 ; ret
0x00000000000ce4ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, 5 ; ret
0x00000000000ce4fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, 6 ; ret
0x00000000000ce50c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, 7 ; ret
0x000000000011ba54 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x0000000000047cee : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000155174 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000009c28c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x147cb9] ; call qword ptr [rax]
0x000000000009c1ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x147d99] ; call qword ptr [rax]
0x0000000000030cec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x1b5a11] ; ret
0x00000000000287fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x1c17b1] ; ret
0x00000000000287ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x1c17d1] ; ret
0x000000000018648c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, r8 ; vzeroupper ; ret
0x00000000000bb1f6 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000047c7c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; cqo ; idiv rsi ; ret
0x000000000009297c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000188fdc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; vzeroupper ; ret
0x000000000009c52c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rbx + 0x48] ; call rax
0x000000000016b5cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000a700c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; add rax, rdi ; ret
0x000000000018802c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; vzeroupper ; ret
0x00000000000a71ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], si ; lea rax, [rdi + rax - 1] ; ret
0x00000000000a70dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], si ; mov rax, rdi ; ret
0x00000000000b64dc : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000b64ec : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000018133c : add byte ptr [rax], al ; add byte ptr [rax], al ; movsxd rax, ecx ; ret
0x00000000000871d1 : add byte ptr [rax], al ; add byte ptr [rax], al ; movups xmmword ptr [rax + 0x40], xmm0 ; pop rbx ; ret
0x000000000012ae2c : add byte ptr [rax], al ; add byte ptr [rax], al ; movups xmmword ptr [rbp - 0x78], xmm7 ; call rcx
0x0000000000090b9d : add byte ptr [rax], al ; add byte ptr [rax], al ; movups xmmword ptr [rbx + 0x48], xmm0 ; pop rbx ; ret
0x000000000014dd5f : add byte ptr [rax], al ; add byte ptr [rax], al ; movups xmmword ptr [rbx], xmm1 ; mov qword ptr [rbx + 0x10], rax ; jmp 0x14dd3b
0x000000000018aefc : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000ba64c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x00000000000aa4ec : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000016b8dc : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000016b86c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000018e70b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; lea rax, [rdi + 1] ; ret
0x000000000018e6fb : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; lea rax, [rdi] ; ret
0x000000000017616a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x00000000000b641b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000b643a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000b642b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov dword ptr [rdi], edx ; ret
0x00000000000b543a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000011e86a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0x11f ; syscall
0x000000000011e8fa : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0x134 ; syscall
0x000000000011e98a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0x13f ; syscall
0x000000000010d0da : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0x15 ; syscall
0x000000000011765b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0x1c ; syscall
0x00000000000e150b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0x25 ; syscall
0x000000000011f0da : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0x30 ; syscall
0x000000000011eadb : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0x31 ; syscall
0x000000000011ec3a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0x32 ; syscall
0x000000000011ebab : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0x34 ; syscall
0x000000000011fa1a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0x43 ; syscall
0x000000000010d85b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0x50 ; syscall
0x000000000010cbea : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0x53 ; syscall
0x000000000010eaba : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0x57 ; syscall
0x000000000010e9fa : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0x58 ; syscall
0x000000000010e14b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0x5c ; syscall
0x000000000011e77a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0x63 ; syscall
0x00000000000e293a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0x79 ; syscall
0x000000000011dbaa : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0x7a ; syscall
0x000000000011ddba : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0x87 ; syscall
0x000000000010c9aa : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0x89 ; syscall
0x00000000001176ea : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0x95 ; syscall
0x000000000011466a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0x99 ; syscall
0x000000000011e32a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0x9f ; syscall
0x000000000011e4da : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0xb1 ; syscall
0x000000000011e68a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0xb4 ; syscall
0x000000000011b8aa : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0xc2 ; syscall
0x000000000011b90a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0xc3 ; syscall
0x000000000011b7ea : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0xc4 ; syscall
0x000000000011b99a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0xc5 ; syscall
0x00000000000dc9bb : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0xd9 ; syscall
0x000000000011e53a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0xfe ; syscall
0x000000000009292a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0xffffffff ; ret
0x00000000001477fa : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 2 ; ret
0x00000000001123eb : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 3 ; syscall
0x000000000009268b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000000dc9ea : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, dword ptr [rdi] ; ret
0x000000000012f2cb : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, edi ; rol ax, 8 ; ret
0x00000000001761ab : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x00000000000b647b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000ce4ab : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov rax, 1 ; ret
0x000000000009296a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000018829b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov rax, rdi ; vzeroupper ; ret
0x000000000017614b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000017613a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov word ptr [rcx], dx ; ret
0x00000000000b640a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov word ptr [rdi], dx ; ret
0x000000000004397a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; movmskps eax, xmm0 ; and eax, 8 ; ret
0x000000000009be8b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x000000000018217b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; vzeroupper ; xor eax, eax ; ret
0x00000000000b947a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x0000000000155ecb : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; xor eax, eax ; ret
0x00000000000cdc9a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; xor rax, rax ; ret
0x00000000001560e7 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000176128 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; mov byte ptr [rcx], dl ; ret
0x00000000000b63f8 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; mov byte ptr [rdi], dl ; ret
0x00000000000b60f8 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000091139 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x00000000000b4da8 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; mov rax, rdi ; ret
0x000000000008c2b8 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x00000000000aad19 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000001126e8 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; syscall
0x0000000000186079 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; vzeroupper ; ret
0x0000000000042ead : add byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rax + 0x21], 0xc2 ; mov qword ptr [rdi], rdx ; ret
0x0000000000049539 : add byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rax + 0xf], 0x44 ; ret 0x14eb
0x00000000000ec4c8 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a015a : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000ba607 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; cmove rax, rdx ; ret
0x000000000009ffa1 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a0115 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000314f5 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000008f14c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000026ecc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000a0995 : add byte ptr [rax], al ; add byte ptr [rax], al ; test dl, dl ; cmovne rax, rdi ; ret
0x00000000000ff15c : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0xff17b ; xor eax, eax ; ret
0x00000000000ba44c : add byte ptr [rax], al ; add byte ptr [rax], al ; test rdx, rdx ; jne 0xba465 ; mov rax, rdi ; ret
0x00000000001874be : add byte ptr [rax], al ; add byte ptr [rax], al ; vzeroupper ; ret
0x00000000001825bc : add byte ptr [rax], al ; add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x00000000000352cc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
0x000000000015b41c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; jmp 0x15b3ee
0x000000000015b49c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; jmp 0x15b46e
0x000000000018973c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; mov edx, dword ptr [rdi] ; cmp edx, dword ptr [rsi] ; jne 0x189738 ; ret
0x000000000009cb8e : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x000000000009291c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000008c1bc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x000000000008c1cc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x00000000000632dc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; ret
0x000000000012dfcc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor ecx, ecx ; mov rax, rcx ; ret
0x0000000000026bcc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor edi, edi ; mov eax, edx ; syscall
0x0000000000084f2c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor edi, edi ; mov rax, rdi ; ret
0x00000000000a6d6c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor edx, edx ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x000000000012df2c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; mov rax, rsi ; ret
0x00000000000bc5cc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor r15d, r15d ; jmp 0xbc5a8
0x00000000000cdfac : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000193324 : add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rax + 0x21], cl ; ret 0x8545
0x000000000015065a : add byte ptr [rax], al ; add byte ptr [rbp + 0x10], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000010c2d4 : add byte ptr [rax], al ; add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; ret
0x000000000015cfc1 : add byte ptr [rax], al ; add byte ptr [rbp + 0x11], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000008cfd1 : add byte ptr [rax], al ; add byte ptr [rbp + 0x11], dh ; add rsp, 0x48 ; ret
0x000000000012d817 : add byte ptr [rax], al ; add byte ptr [rbp + 0x11], dh ; add rsp, 0xd8 ; ret
0x0000000000063980 : add byte ptr [rax], al ; add byte ptr [rbp + 0x12], dh ; add rsp, 0x18 ; ret
0x00000000000e158e : add byte ptr [rax], al ; add byte ptr [rbp + 0x12], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000150890 : add byte ptr [rax], al ; add byte ptr [rbp + 0x12], dh ; add rsp, 0x30 ; pop rbx ; ret
0x000000000014910c : add byte ptr [rax], al ; add byte ptr [rbp + 0x16], dh ; add rsp, 0x40 ; pop rbx ; ret
0x00000000000d2a1e : add byte ptr [rax], al ; add byte ptr [rbp + 0x1a], dh ; add rsp, 0x28 ; ret
0x0000000000112b5b : add byte ptr [rax], al ; add byte ptr [rbp + 0x1b], dh ; add rsp, 0x38 ; ret
0x00000000001502e8 : add byte ptr [rax], al ; add byte ptr [rbp + 0x1c], dh ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000145e62 : add byte ptr [rax], al ; add byte ptr [rbp + 0x1d], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000011dab9 : add byte ptr [rax], al ; add byte ptr [rbp + 0x1d], dh ; add rsp, 0x78 ; ret
0x0000000000139624 : add byte ptr [rax], al ; add byte ptr [rbp + 0x1e], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000004472f : add byte ptr [rax], al ; add byte ptr [rbp + 0x1e], dh ; add rsp, 0x40 ; pop rbx ; ret
0x00000000000c8b2c : add byte ptr [rax], al ; add byte ptr [rbp + 0x23], dh ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000135816 : add byte ptr [rax], al ; add byte ptr [rbp + 0x25], dh ; add rsp, 0x38 ; ret
0x000000000015294c : add byte ptr [rax], al ; add byte ptr [rbp + 0x27], dh ; add rsp, 0x28 ; ret
0x00000000000d0df2 : add byte ptr [rax], al ; add byte ptr [rbp + 0x29], al ; ret
0x00000000000d0b1d : add byte ptr [rax], al ; add byte ptr [rbp + 0x29], al ; ret 0x8d46
0x00000000000be1ae : add byte ptr [rax], al ; add byte ptr [rbp + 0x29], al ; retf 0x850f
0x000000000004aa16 : add byte ptr [rax], al ; add byte ptr [rbp + 0x29], cl ; ret
0x000000000015af7b : add byte ptr [rax], al ; add byte ptr [rbp + 0x2c], dh ; add rsp, 0x18 ; ret
0x000000000015b3f2 : add byte ptr [rax], al ; add byte ptr [rbp + 0x2d], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001483ad : add byte ptr [rax], al ; add byte ptr [rbp + 0x30], dh ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000146448 : add byte ptr [rax], al ; add byte ptr [rbp + 0x30], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000008df28 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x0000000000190f3d : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx + 9], cl ; fld dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x3145
0x000000000009e8b4 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x000000000014844b : add byte ptr [rax], al ; add byte ptr [rbp + 0x35], dh ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000150aed : add byte ptr [rax], al ; add byte ptr [rbp + 0x35], dh ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000a60cd : add byte ptr [rax], al ; add byte ptr [rbp + 0x38], al ; retf 0x1b76
0x00000000000528ff : add byte ptr [rax], al ; add byte ptr [rbp + 0x39], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000011496d : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], dh ; add rsp, 0x68 ; ret
0x000000000005836e : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], dh ; leave ; ret
0x000000000015de93 : add byte ptr [rax], al ; add byte ptr [rbp + 0x3c], dh ; add rsp, 0x38 ; ret
0x000000000015db2d : add byte ptr [rax], al ; add byte ptr [rbp + 0x3c], dh ; add rsp, 0x58 ; ret
0x0000000000154507 : add byte ptr [rax], al ; add byte ptr [rbp + 0x3e], dh ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000114602 : add byte ptr [rax], al ; add byte ptr [rbp + 0x3e], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000147e67 : add byte ptr [rax], al ; add byte ptr [rbp + 0x3f], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000440f7 : add byte ptr [rax], al ; add byte ptr [rbp + 0x3f], dh ; add rsp, 0x148 ; ret
0x00000000001159b1 : add byte ptr [rax], al ; add byte ptr [rbp + 0x3f], dh ; add rsp, 0x38 ; ret
0x0000000000154a17 : add byte ptr [rax], al ; add byte ptr [rbp + 0x40], dh ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000115a80 : add byte ptr [rax], al ; add byte ptr [rbp + 0x40], dh ; add rsp, 0x38 ; ret
0x0000000000061abd : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000061b8f : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000000a015b : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000001545c7 : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013b676 : add byte ptr [rax], al ; add byte ptr [rbp + 0x42], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001125d4 : add byte ptr [rax], al ; add byte ptr [rbp + 0x42], dh ; add rsp, 0x58 ; ret
0x0000000000112503 : add byte ptr [rax], al ; add byte ptr [rbp + 0x43], dh ; add rsp, 0x18 ; ret
0x000000000009413d : add byte ptr [rax], al ; add byte ptr [rbp + 0x43], dh ; add rsp, 0x50 ; pop rbx ; ret
0x00000000000e1dcc : add byte ptr [rax], al ; add byte ptr [rbp + 0x43], dh ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x0000000000112669 : add byte ptr [rax], al ; add byte ptr [rbp + 0x45], dh ; add rsp, 0x58 ; ret
0x000000000015dc2a : add byte ptr [rax], al ; add byte ptr [rbp + 0x45], dh ; add rsp, 0x68 ; ret
0x0000000000194aae : add byte ptr [rax], al ; add byte ptr [rbp + 0x484c75ff], al ; add esp, 0x30 ; pop rbx ; ret
0x0000000000155917 : add byte ptr [rax], al ; add byte ptr [rbp + 0x49], dh ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000154b29 : add byte ptr [rax], al ; add byte ptr [rbp + 0x4a], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000011f96c : add byte ptr [rax], al ; add byte ptr [rbp + 0x4a], dh ; add rsp, 0x58 ; ret
0x0000000000112474 : add byte ptr [rax], al ; add byte ptr [rbp + 0x4a], dh ; add rsp, 0x68 ; ret
0x000000000013ba59 : add byte ptr [rax], al ; add byte ptr [rbp + 0x4b], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000154c47 : add byte ptr [rax], al ; add byte ptr [rbp + 0x4d], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ddad8 : add byte ptr [rax], al ; add byte ptr [rbp + 0x4e], dh ; add rsp, 0x38 ; ret
0x000000000015ddd1 : add byte ptr [rax], al ; add byte ptr [rbp + 0x4e], dh ; add rsp, 0x78 ; ret
0x000000000008dd07 : add byte ptr [rax], al ; add byte ptr [rbp + 0x4f0f48c9], al ; ret 0x8948
0x000000000005bc8f : add byte ptr [rax], al ; add byte ptr [rbp + 0x51], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000101afc : add byte ptr [rax], al ; add byte ptr [rbp + 0x55], dh ; add rsp, 0x38 ; ret
0x00000000000e2ac8 : add byte ptr [rax], al ; add byte ptr [rbp + 0x56], dh ; add rsp, 0x38 ; ret
0x000000000013bb14 : add byte ptr [rax], al ; add byte ptr [rbp + 0x58], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000052a8d : add byte ptr [rax], al ; add byte ptr [rbp + 0x5a], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000907eb : add byte ptr [rax], al ; add byte ptr [rbp + 0x5c], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000010d5e4 : add byte ptr [rax], al ; add byte ptr [rbp + 0x63], dh ; add rsp, 0x30 ; pop rbx ; ret
0x000000000010fc2e : add byte ptr [rax], al ; add byte ptr [rbp + 0x65], dh ; call 0x10c657
0x00000000001139d8 : add byte ptr [rax], al ; add byte ptr [rbp + 0x66], dh ; add rsp, 0x48 ; ret
0x00000000000529af : add byte ptr [rax], al ; add byte ptr [rbp + 0x6e], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000113b4a : add byte ptr [rax], al ; add byte ptr [rbp + 0x6e], dh ; add rsp, 0x38 ; ret
0x00000000000dfb8c : add byte ptr [rax], al ; add byte ptr [rbp + 0x76], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001461db : add byte ptr [rax], al ; add byte ptr [rbp + 0x77], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000014d2d8 : add byte ptr [rax], al ; add byte ptr [rbp + 0x7e], dh ; add rsp, 0x20 ; pop rbx ; ret
0x000000000015e3c6 : add byte ptr [rax], al ; add byte ptr [rbp + 0xb], dh ; add rsp, 0x28 ; ret
0x0000000000112bb6 : add byte ptr [rax], al ; add byte ptr [rbp + 0xc], dh ; add rsp, 0x18 ; ret
0x00000000000d2b4f : add byte ptr [rax], al ; add byte ptr [rbp + 0xd], dh ; add rsp, 0x30 ; pop rbx ; ret
0x000000000012d721 : add byte ptr [rax], al ; add byte ptr [rbp + 0xd], dh ; add rsp, 0xd8 ; ret
0x0000000000150d5c : add byte ptr [rax], al ; add byte ptr [rbp + 0xe], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000004437c : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; add rsp, 0x118 ; ret
0x0000000000150f83 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000012ed61 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; ret
0x00000000000ecb94 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; cmp byte ptr [rsi], cl ; je 0xecb3b ; ret
0x00000000000f300b : add byte ptr [rax], al ; add byte ptr [rbp + 1], cl ; retf 0x8b44
0x0000000000043adc : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x0000000000047d6c : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x28 ; ret
0x000000000011489f : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x000000000015442e : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x48 ; ret
0x000000000015211e : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x78 ; ret
0x000000000010c45f : add byte ptr [rax], al ; add byte ptr [rbp + 6], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ceba6 : add byte ptr [rax], al ; add byte ptr [rbp + 6], dh ; add rsp, 0x40 ; pop rbx ; ret
0x000000000011a928 : add byte ptr [rax], al ; add byte ptr [rbp + 8], dh ; add rsp, 0x418 ; ret
0x000000000004450a : add byte ptr [rax], al ; add byte ptr [rbp + 8], dh ; add rsp, 0x98 ; ret
0x000000000004513a : add byte ptr [rax], al ; add byte ptr [rbp + 8], dh ; add rsp, 0xa8 ; ret
0x00000000000538de : add byte ptr [rax], al ; add byte ptr [rbp + 8], dh ; add rsp, 0xd8 ; ret
0x0000000000156146 : add byte ptr [rax], al ; add byte ptr [rbp + 8], dh ; movzx eax, al ; add rsp, 0x18 ; ret
0x000000000010e98c : add byte ptr [rax], al ; add byte ptr [rbp + 8], dh ; movzx eax, al ; add rsp, 0x58 ; ret
0x000000000016b9ec : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x1d], cl ; retf 0x4e1
0x00000000000bb585 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x43], cl ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000000f29ed : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x52], al ; add dword ptr [rbp + 0x39], eax ; retf 0x820f
0x000000000011fee5 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x52], cl ; add dword ptr [rcx - 0x77], ecx ; ror dword ptr [rax - 0x7d], cl ; ret 0x4c02
0x00000000000dacfd : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x68], cl ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf
0x000000000009884a : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 5], cl ; in al, dx ; ret
0x000000000002643e : add byte ptr [rax], al ; add byte ptr [rbp - 0x3c], dh ; ret
0x0000000000163ded : add byte ptr [rax], al ; add byte ptr [rbp - 0x73], cl ; mov dword ptr [rdi], esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x0000000000056afd : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x48f8
0x00000000000e1bc7 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; ret
0x000000000010572d : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; hlt ; cmp r14, rbx ; ja 0x1056d4 ; jmp 0x105711
0x000000000004e5f5 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret 0x1fe9
0x0000000000051345 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret 0x2fe9
0x00000000000e8182 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret 0x8948
0x0000000000191ff3 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret 0x8949
0x000000000012d774 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret 0x894c
0x000000000004b6b5 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret 0xdfe9
0x000000000005f9a0 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001906d5 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf 0x8949
0x00000000000f3129 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf 0x8b48
0x000000000010131d : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7feba], cl ; ret 0x8901
0x0000000000182528 : add byte ptr [rax], al ; add byte ptr [rbx + 0x14840c0], al ; clc ; vzeroupper ; ret
0x000000000009048d : add byte ptr [rax], al ; add byte ptr [rbx + 0x158901ea], al ; retf
0x000000000008c1dd : add byte ptr [rax], al ; add byte ptr [rbx + 0x2002507], cl ; add byte ptr [rax], al ; ret
0x000000000008f14d : add byte ptr [rax], al ; add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000bcb6d : add byte ptr [rax], al ; add byte ptr [rbx + 0x39082444], cl ; ret 0x840f
0x0000000000030e49 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x00000000000a69b6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x458880c8], al ; ret 0xd889
0x00000000000b546d : add byte ptr [rax], al ; add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000017b87d : add byte ptr [rax], al ; add byte ptr [rbx + 0x48028901], cl ; mov eax, edi ; ret
0x00000000000ba608 : add byte ptr [rax], al ; add byte ptr [rbx + 0x48], bl ; cmove eax, edx ; ret
0x00000000000821fc : add byte ptr [rax], al ; add byte ptr [rbx + 0x48], bl ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000d94f3 : add byte ptr [rax], al ; add byte ptr [rbx + 0x490f01ea], al ; ret 0xc083
0x00000000000eaeb0 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5b010447], al ; pop rbp ; pop r12 ; ret
0x000000000008a818 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000044fc8 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000044310 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000004447f : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000008d2fd : add byte ptr [rax], al ; add byte ptr [rbx + 0x5e8c107], cl ; and eax, 1 ; ret
0x000000000002d770 : add byte ptr [rax], al ; add byte ptr [rbx + 0x634807e2], al ; ror byte ptr [rax + 0x39], cl ; ret 0x8d0f
0x0000000000032c73 : add byte ptr [rax], al ; add byte ptr [rbx + 0x63], cl ; xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x000000000008c1ad : add byte ptr [rax], al ; add byte ptr [rbx + 0x8042507], cl ; add byte ptr [rax], al ; ret
0x000000000002a1bf : add byte ptr [rax], al ; add byte ptr [rbx + 0x941f8e0], al ; ret 0x8944
0x000000000018d328 : add byte ptr [rax], al ; add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x000000000004790d : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x4b], cl ; adc byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000054903 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 - 0x7c], cl ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x8b44
0x00000000000ec68b : add byte ptr [rax], al ; add byte ptr [rbx - 0x157cfe15], al ; add dword ptr [rax + 0x63], ecx ; retf
0x00000000000f3cdd : add byte ptr [rax], al ; add byte ptr [rbx - 0x16f7dbb4], cl ; ret 0xfffe
0x0000000000155d79 : add byte ptr [rax], al ; add byte ptr [rbx - 0x218bfd02], al ; jmp 0x155d4f
0x00000000000a6a77 : add byte ptr [rax], al ; add byte ptr [rbx - 0x307cc019], al ; add byte ptr [rax - 0x78], 0x7d ; ret 0x8944
0x0000000000155f19 : add byte ptr [rax], al ; add byte ptr [rbx - 0x3d], bl ; nop ; ret
0x000000000011b7a9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x3f7ac7c0], cl ; cmove eax, edx ; ret
0x0000000000155e9d : add byte ptr [rax], al ; add byte ptr [rbx - 0x47fbd7b9], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000121199 : add byte ptr [rax], al ; add byte ptr [rbx - 0x48f0f440], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x0000000000121659 : add byte ptr [rax], al ; add byte ptr [rbx - 0x48f0f540], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x0000000000121359 : add byte ptr [rax], al ; add byte ptr [rbx - 0x48f0f640], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000001212c9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x48f0f740], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x0000000000121519 : add byte ptr [rax], al ; add byte ptr [rbx - 0x48f0f840], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000001215b9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x48f0f940], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000001216e9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x48f0fa40], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x0000000000121819 : add byte ptr [rax], al ; add byte ptr [rbx - 0x48f0fb40], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000001213e9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x48f0fc40], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x0000000000121229 : add byte ptr [rax], al ; add byte ptr [rbx - 0x48f0fd40], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x0000000000121479 : add byte ptr [rax], al ; add byte ptr [rbx - 0x48f0fe40], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000007e3a5 : add byte ptr [rax], al ; add byte ptr [rbx - 0x4ff43], al ; call qword ptr [rax]
0x000000000013b36d : add byte ptr [rax], al ; add byte ptr [rbx - 0x548afe06], al ; jmp 0x13b342
0x0000000000065287 : add byte ptr [rax], al ; add byte ptr [rbx - 0x61f43], al ; call qword ptr [rax]
0x0000000000122138 : add byte ptr [rax], al ; add byte ptr [rbx - 0x74b7fe3f], al ; push rsp ; retf 0x8b40
0x0000000000089fdb : add byte ptr [rax], al ; add byte ptr [rbx - 0x760e76cd], cl ; ret 0xe181
0x0000000000190f9d : add byte ptr [rax], al ; add byte ptr [rbx - 0x76b7c017], al ; ret 0xd348
0x000000000005f51a : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000013b0fb : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], dl ; retf
0x000000000013b08a : add byte ptr [rax], al ; add byte ptr [rbx - 0x77bffe12], al ; ja 0x13b09f ; ret
0x00000000000aac52 : add byte ptr [rax], al ; add byte ptr [rbx - 0x79f0ef06], al ; ret 0
0x00000000000fc522 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0f002], al ; ret 0
0x000000000008fe8d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7c2e76ed], cl ; retf 0x8320
0x00000000000ef38a : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fd16], al ; ret 0xeb02
0x0000000000186a71 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cf0fb06], al ; ret
0x000000000009d779 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; ret
0x00000000000b573f : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; retf 0x394d
0x000000000017618d : add byte ptr [rax], al ; add byte ptr [rcx + 0x3518911], cl ; ret
0x00000000000f8011 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret
0x00000000000f0892 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret 0x2f73
0x00000000000f6f89 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret 0x8f0f
0x000000000009f22d : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret
0x000000000014fbfa : add byte ptr [rax], al ; add byte ptr [rcx + 0x3b84843], cl ; add byte ptr [rax], al ; add cl, ch ; ret 0xfff8
0x0000000000160dda : add byte ptr [rax], al ; add byte ptr [rcx + 0x3eb8c7], cl ; add byte ptr [rax], al ; syscall
0x0000000000158113 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x0000000000114822 : add byte ptr [rax], al ; add byte ptr [rcx + 0x480575d0], cl ; add esp, 0x58 ; ret
0x0000000000156210 : add byte ptr [rax], al ; add byte ptr [rcx + 0x480675d0], cl ; add esp, 0x10 ; pop rbx ; ret
0x0000000000150778 : add byte ptr [rax], al ; add byte ptr [rcx + 0x480675d0], cl ; sub esp, -0x80 ; pop rbx ; ret
0x0000000000113d13 : add byte ptr [rax], al ; add byte ptr [rcx + 0x480d75d0], cl ; add esp, 0x28 ; ret
0x0000000000150e6b : add byte ptr [rax], al ; add byte ptr [rcx + 0x481575d0], cl ; add esp, 0x10 ; pop rbx ; ret
0x00000000000356cb : add byte ptr [rax], al ; add byte ptr [rcx + 0x5c], al ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000000ce8a6 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5c], al ; pop r14 ; mov dword ptr [r11 + 0xc], r8d ; ret
0x000000000012c899 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5c], al ; pop rbp ; ret
0x00000000000dbb77 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; pop r14 ; jmp rax
0x00000000000610d6 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8d49
0x000000000005b5c0 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0xf631
0x000000000014f2f6 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; adc dword ptr [rax + 0x20], edx ; ret
0x000000000014e9cb : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; adc dword ptr [rax + 8], eax ; ret
0x00000000000600bd : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x50 ; or al, 0xf6 ; ret 0xf01
0x000000000007a9ea : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0x83 ; ret
0x000000000007a97e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x00000000000a10ee : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x3948
0x00000000000b9c5d : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00000000000c5249 : add byte ptr [rax], al ; add byte ptr [rcx + rax - 0x3d], dh ; or eax, 0xffffffff ; ret
0x000000000013e5f4 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x1f0f
0x000000000013efb8 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x33e9
0x000000000013e4f0 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0xf41
0x000000000013f0f6 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0xfee9
0x000000000013ee8e : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x8944
0x000000000013f08c : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x93e9
0x00000000000de29f : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x00000000000de369 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x000000000013f010 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x43e9
0x000000000012913d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x1257ec
0x000000000008a603 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x30], al ; pop rbx ; ret
0x000000000008571b : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x0000000000094d5c : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001863cd : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x000000000009bdb3 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; mov rdx, rbx ; mov rsi, r12 ; call rax
0x0000000000129b25 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call 0x125d88
0x0000000000038f1a : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call 0x25148
0x0000000000038e5f : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; mov rbx, r14 ; call 0x2514b
0x000000000009d7cb : add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x000000000010b90d : add byte ptr [rax], al ; add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x000000000013d30e : add byte ptr [rax], al ; add byte ptr [rcx - 0x41], al ; add eax, 0x83000000 ; ret
0x0000000000044023 : add byte ptr [rax], al ; add byte ptr [rcx - 0x46], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x00000000001191f8 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x119207 ; call r12
0x0000000000091202 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000013a497 : add byte ptr [rax], al ; add byte ptr [rcx - 0x76b7f3a9], cl ; ret
0x00000000000bdfea : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x4489
0x00000000000a1c89 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x8348
0x00000000000a112c : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x860f
0x00000000000a197d : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x8b48
0x000000000013b37d : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; retf
0x00000000000c5fe4 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; retf 0x8945
0x000000000011e1cd : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; retf 0xf983
0x000000000013b0ad : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; rol dword ptr [rax - 0x69f0fe07], cl ; ret 0x8341
0x000000000007edc7 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; int1 ; jmp rax
0x0000000000055f4b : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000051f0b : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x1f0f
0x000000000002ae1f : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0xf685
0x000000000009d76d : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf
0x000000000007e575 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf 0x2948
0x000000000011e2fd : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf 0x2db8
0x000000000011dd8d : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf 0x2eb8
0x000000000011f0ad : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf 0x36b8
0x0000000000078c07 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; rol byte ptr [rcx - 1], cl ; jrcxz 0x78ba4 ; ret 0xc083
0x000000000012d674 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], cl ; retf 0x894c
0x00000000000fc9d5 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x000000000004b224 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret 0x4418
0x000000000005b021 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret 0x4840
0x000000000002674a : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x00000000000be83d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000009e8ff : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x00000000000c07dd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4104
0x00000000000ea14d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x00000000000e73b5 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c04
0x000000000016105d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000009e88d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xbd01
0x00000000000a774d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000000932fc : add byte ptr [rax], al ; add byte ptr [rcx - 0x80], al ; clc ; add dword ptr [rdi + rcx + 0x44], eax ; ret 0xf641
0x0000000000108a8d : add byte ptr [rax], al ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdx]
0x000000000008fbef : add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000000c1a51 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; fmul dword ptr [rcx - 0x39] ; ret 0xffff
0x00000000000aae20 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x00000000000aae46 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x000000000011c158 : add byte ptr [rax], al ; add byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009e232 : add byte ptr [rax], al ; add byte ptr [rcx], al ; je 0x9e1f7 ; ret
0x00000000000bb3d2 : add byte ptr [rax], al ; add byte ptr [rcx], al ; je 0xbb397 ; ret
0x0000000000101bf0 : add byte ptr [rax], al ; add byte ptr [rcx], al ; mov edx, 2 ; cmove eax, edx ; ret
0x000000000005490b : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x8b44
0x00000000000547ad : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x8b4c
0x00000000000c88e5 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x00000000000f54e9 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x2476
0x00000000000eaef5 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x840f
0x00000000000f5309 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; retf 0x3076
0x0000000000181dad : add byte ptr [rax], al ; add byte ptr [rcx], ch ; enter 0x2275, -0x7d ; ret 0x8101
0x00000000000d5c7e : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x2941
0x00000000000d7ccb : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x448d
0x00000000000d3292 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x858b
0x00000000000da346 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8944
0x00000000000d9db4 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8948
0x00000000000d7daf : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x894c
0x00000000000da4f4 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x00000000000da3f5 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8d41
0x00000000000d83b6 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8d44
0x00000000000db08d : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8d45
0x0000000000113221 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xc085
0x00000000000d5d05 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xc889
0x00000000000d6f42 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x00000000000d31b8 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd129
0x000000000005497f : add byte ptr [rax], al ; add byte ptr [rcx], cl ; retf 0x7c83
0x0000000000084f2d : add byte ptr [rax], al ; add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; clc ; ret
0x0000000000140c57 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; fisttp dword ptr [rax + 0x39] ; ret 0x850f
0x000000000005edcd : add byte ptr [rax], al ; add byte ptr [rcx], dh ; fucomi st(1) ; retf
0x000000000011751a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x000000000012dfcd : add byte ptr [rax], al ; add byte ptr [rcx], dh ; leave ; mov rax, rcx ; ret
0x00000000000a6d6d : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x48], cl ; mov dword ptr [rdi], edx ; ret
0x00000000000ce812 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x0000000000047484 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000098fad : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], cl ; mov rax, rdx ; pop r12 ; ret
0x00000000000aa76a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x00000000000352cd : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x000000000009cb8f : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], 0x37 ; ret
0x000000000018973d : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rbx + 0x75163b17], 0xe4 ; ret
0x00000000001569d0 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, 0x86 ; cmp eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000a46cd : add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr cl, cl ; ret 0xfffa
0x000000000012df2d : add byte ptr [rax], al ; add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xf0 ; ret
0x00000000000f6487 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; test byte ptr [rcx + 0x442c244c], 0x29 ; ret 0x8944
0x0000000000168eb8 : add byte ptr [rax], al ; add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x0000000000025622 : add byte ptr [rax], al ; add byte ptr [rdi + 0x7f], bh ; call 0xe18fa
0x00000000000cda02 : add byte ptr [rax], al ; add byte ptr [rdi + 2], bh ; neg eax ; ret
0x0000000000190552 : add byte ptr [rax], al ; add byte ptr [rdi + 9], bh ; neg eax ; ret
0x0000000000191544 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x44], al ; ret 0x8548
0x000000000015e437 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x44], cl ; retf 0x8548
0x0000000000097e2e : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x45], cl ; call 0x48d3878a
0x0000000000097dec : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x45], cl ; jmp 0x4ccb8748
0x00000000000871d2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rax + 0x40], eax ; pop rbx ; ret
0x000000000012ae2d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rbp - 0x78], edi ; call rcx
0x0000000000090b9e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rbx + 0x48], eax ; pop rbx ; ret
0x000000000014dd60 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rbx], ecx ; mov qword ptr [rbx + 0x10], rax ; jmp 0x14dd3a
0x000000000014f308 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdx], ebx ; ret
0x000000000014bd10 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdx], ecx ; ret
0x000000000014e9f8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdx], edx ; ret
0x000000000014f2e8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdx], esp ; ret
0x000000000010c1aa : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rsi + 0x70], edi ; ret
0x0000000000147098 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rsi + 8], eax ; ret
0x0000000000147068 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rsi + 8], ecx ; ret
0x0000000000043ea4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x8944c689 ; ret 0xeab8
0x000000000012c405 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x8948d789 ; ret
0x000000000016a834 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000016b86d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000186b0d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; vzeroupper ; ret
0x0000000000090d25 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000016b8dd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000049add : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000fbf0d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xbc ; and al, 0x18 ; add dword ptr [rax], eax ; add al, ch ; ret
0x00000000000ba64d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x00000000000aa4ed : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000018aefd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000aac8d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000aac9d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x00000000000aac7d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000018259d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x147c
0x000000000018253d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov ebp, 0xf80148c0 ; vzeroupper ; ret
0x00000000000aa7cd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000aa7bd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000000aa7ad : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000000f6e85 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x00000000000dfb7b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret
0x0000000000054b68 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x13e9
0x00000000000d6fda : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x144
0x0000000000044b2b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x31c3
0x000000000012c677 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x66c3
0x0000000000055f06 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8d49
0x0000000000031639 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc083
0x000000000004ad5f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc101
0x00000000000ecb85 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc35b
0x0000000000101bf6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xfc3
0x000000000010bac5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sub dword ptr [rsp + 0xa0], eax ; syscall
0x0000000000043e89 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; sub dword ptr [rsp + 0xf0], eax ; syscall
0x0000000000101d4b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test dword ptr [rbx - 0x7efffffc], ebx ; ret 0xffe0
0x000000000012c9c1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test ebx, edx ; add byte ptr [rax], al ; add cl, cl ; ret
0x000000000014e008 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret
0x00000000001813d7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x0000000000140f95 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000054e39 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x4e9
0x00000000001914e2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8441
0x00000000000f6e4e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe2c1
0x00000000000e3616 : add byte ptr [rax], al ; add byte ptr [rdx + 0x20], bh ; cmovne rax, rdx ; ret
0x00000000000b948d : add byte ptr [rax], al ; add byte ptr [rdx + 0x30178816], cl ; in eax, dx ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a0996 : add byte ptr [rax], al ; add byte ptr [rdx + rdx*8 - 0x38baf0b8], al ; ret
0x00000000000d2d0e : add byte ptr [rax], al ; add byte ptr [rdx - 0x3a], al ; add al, 0x28 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000015b56a : add byte ptr [rax], al ; add byte ptr [rdx - 1], bh ; mov eax, edx ; ret
0x0000000000093525 : add byte ptr [rax], al ; add byte ptr [rdx], al ; jbe 0x93536 ; ret
0x0000000000151525 : add byte ptr [rax], al ; add byte ptr [rsi + 0xe], bh ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001813ff : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp ah, byte ptr [rbx + 0x27] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x000000000018123b : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp ah, byte ptr [rbx - 0x2e] ; cmp cl, byte ptr [rax - 0x7d] ; ret 0x2910
0x000000000018b1f2 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000015609b : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; out dx, eax ; ror byte ptr [rdi], 0x11 ; and al, 0x28 ; call rdx
0x0000000000117bd6 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; out dx, eax ; shl byte ptr [rsi + 0xf], cl ; ret 0x67a
0x0000000000093f9d : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000011fc30 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; retf
0x00000000000aabaa : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000aa6d2 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000000dba7b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; cmp esi, 1 ; je 0xdba9c ; xor eax, eax ; ret
0x000000000009105b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; cmp qword ptr [rdi + 0x38], 0 ; je 0x9107c ; ret
0x000000000017848b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x000000000017616b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x00000000000b643b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000b543b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000011e86b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x11f ; syscall
0x000000000011e8fb : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x134 ; syscall
0x000000000011e98b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x13f ; syscall
0x000000000010d0db : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x15 ; syscall
0x000000000011f0db : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x30 ; syscall
0x000000000011ec3b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x32 ; syscall
0x000000000011fa1b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x43 ; syscall
0x000000000010cbeb : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x53 ; syscall
0x000000000010eabb : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x57 ; syscall
0x000000000010e9fb : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x58 ; syscall
0x000000000011e77b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x63 ; syscall
0x00000000000e293b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x79 ; syscall
0x000000000011dbab : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x7a ; syscall
0x000000000011ddbb : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x87 ; syscall
0x000000000010c9ab : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x89 ; syscall
0x00000000001176eb : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x95 ; syscall
0x000000000011466b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x99 ; syscall
0x000000000011e32b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x9f ; syscall
0x000000000011e4db : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0xb1 ; syscall
0x000000000011e68b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0xb4 ; syscall
0x000000000011b8ab : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0xc2 ; syscall
0x000000000011b90b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0xc3 ; syscall
0x000000000011b7eb : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0xc4 ; syscall
0x000000000011b99b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0xc5 ; syscall
0x000000000011e53b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0xfe ; syscall
0x000000000009292b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0xffffffff ; ret
0x00000000001477fb : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 2 ; ret
0x00000000000dc9eb : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rdi] ; ret
0x00000000000898cb : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000009296b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000017613b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov word ptr [rcx], dx ; ret
0x00000000000b640b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov word ptr [rdi], dx ; ret
0x000000000004397b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; movmskps eax, xmm0 ; and eax, 8 ; ret
0x0000000000144fcb : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; ret
0x00000000000b947b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x0000000000155edb : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; xor eax, eax ; ret
0x00000000000cdc9b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; xor rax, rax ; ret
0x000000000017416d : add byte ptr [rax], al ; add byte ptr [rsi - 0x75], ah ; add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000014bd72 : add byte ptr [rax], al ; add byte ptr [rsi - 0x77], ah ; insb byte ptr [rdi], dx ; mov eax, 1 ; ret
0x000000000011132c : add byte ptr [rax], al ; add byte ptr [rsi - 0x77], ah ; jmp 0x1208
0x000000000018249a : add byte ptr [rax], al ; add ch, al ; std ; je 0x18250b ; and ch, al ; std ; xlatb ; ret
0x0000000000127674 : add byte ptr [rax], al ; add cl, byte ptr [rax - 0x77] ; ret 0x53ff
0x0000000000127015 : add byte ptr [rax], al ; add cl, byte ptr [rax - 0x77] ; ret 0x55ff
0x000000000012872d : add byte ptr [rax], al ; add cl, byte ptr [rax - 0x77] ; ret 0xff41
0x000000000019187e : add byte ptr [rax], al ; add cl, ch ; int 0xf6
0x00000000000a6a65 : add byte ptr [rax], al ; add cl, ch ; int1 ; ret 0xffff
0x000000000014fc02 : add byte ptr [rax], al ; add cl, ch ; ret 0xfff8
0x0000000000056f04 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffc
0x0000000000030a2b : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x000000000002f914 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x00000000000a6af2 : add byte ptr [rax], al ; add cl, ch ; ret 0xffff
0x000000000002dd6c : add byte ptr [rax], al ; add cl, ch ; retf
0x00000000000fe60e : add byte ptr [rax], al ; add cl, ch ; retf 0xffeb
0x00000000000cc202 : add byte ptr [rax], al ; add cl, ch ; retf 0xffed
0x000000000010ee95 : add byte ptr [rax], al ; add cl, ch ; retf 0xfffd
0x00000000000f336e : add byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x000000000012c9c7 : add byte ptr [rax], al ; add cl, cl ; ret
0x00000000000eaa9d : add byte ptr [rax], al ; add dh, al ; or byte ptr [r10], r11b ; mov eax, 2 ; ret
0x000000000007bf54 : add byte ptr [rax], al ; add dh, al ; test eax, esi ; idiv bh ; jmp qword ptr [rax]
0x0000000000093526 : add byte ptr [rax], al ; add dh, byte ptr [rsi + 5] ; ret
0x000000000002b7e1 : add byte ptr [rax], al ; add dh, dh ; ret
0x000000000012747d : add byte ptr [rax], al ; add dh, dh ; ret 0x4c04
0x00000000001174fd : add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x000000000012defd : add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x000000000018f9c1 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x000000000009726a : add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x00000000001490ba : add byte ptr [rax], al ; add dh, dh ; ret 0x7507
0x000000000010cddd : add byte ptr [rax], al ; add dh, dh ; ret 0x7540
0x0000000000032f8e : add byte ptr [rax], al ; add dh, dh ; ret 0xf04
0x00000000000b07f0 : add byte ptr [rax], al ; add dh, dh ; ret 0xf20
0x00000000000b07f9 : add byte ptr [rax], al ; add dh, dh ; ret 0xf40
0x000000000006027d : add byte ptr [rax], al ; add dh, dh ; ret 0xf50
0x00000000000e52fd : add byte ptr [rax], al ; add dh, dh ; test dword ptr [rbx + rdi*8 - 1], ecx ; call qword ptr [rax]
0x00000000001526cb : add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x0000000000155e9e : add byte ptr [rax], al ; add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x0000000000155eae : add byte ptr [rax], al ; add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x00000000000eaeb1 : add byte ptr [rax], al ; add dword ptr [rdi + 4], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000101bf1 : add byte ptr [rax], al ; add dword ptr [rdx + 2], edi ; cmove eax, edx ; ret
0x0000000000063bae : add byte ptr [rax], al ; add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x0000000000182529 : add byte ptr [rax], al ; add eax, 0x40 ; add rax, rdi ; vzeroupper ; ret
0x000000000014d444 : add byte ptr [rax], al ; add ecx, dword ptr [rbx + 0xf0c2454] ; retf 0x5089
0x000000000013cc36 : add byte ptr [rax], al ; add edx, 1 ; syscall
0x0000000000151b9f : add byte ptr [rax], al ; add rax, 0xa0 ; pop rbx ; ret
0x0000000000151c7f : add byte ptr [rax], al ; add rax, 0xa8 ; pop rbx ; ret
0x000000000004b90e : add byte ptr [rax], al ; add rax, 2 ; add r10, r8 ; jmp 0x4b936
0x000000000004e84e : add byte ptr [rax], al ; add rax, 2 ; add r10, r8 ; jmp 0x4e876
0x000000000005159e : add byte ptr [rax], al ; add rax, 2 ; add r10, r8 ; jmp 0x515c6
0x00000000000ce48e : add byte ptr [rax], al ; add rax, 3 ; ret
0x00000000000aa583 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x0000000000181fa0 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; vzeroupper ; ret
0x00000000001824d8 : add byte ptr [rax], al ; add rax, rdi ; vzeroupper ; ret
0x000000000014c831 : add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x000000000014f261 : add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x000000000014e921 : add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x000000000014bc44 : add byte ptr [rax], al ; add rdi, 0xc8 ; jmp rcx
0x00000000000424cd : add byte ptr [rax], al ; add rdx, rcx ; jmp 0x424e5
0x00000000000efce9 : add byte ptr [rax], al ; add rdx, rcx ; jmp 0xefd05
0x000000000014da42 : add byte ptr [rax], al ; add rsi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000055cb8 : add byte ptr [rax], al ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000630b2 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009925e : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001404ae : add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000196dbe : add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000013716d : add byte ptr [rax], al ; add rsp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000009ae97 : add byte ptr [rax], al ; add rsp, 0x18 ; mov rax, rcx ; pop rbx ; pop rbp ; ret
0x0000000000087a8f : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000044e85 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000009b4bf : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000000d11b4 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000043a98 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000026eaf : add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x000000000008a201 : add byte ptr [rax], al ; add rsp, 0x28 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000026a1b : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000154661 : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000009baf3 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005c3dd : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000288df : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009050d : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000089cdf : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001117e4 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbx ; ret
0x00000000000e3935 : add byte ptr [rax], al ; add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000014d4e4 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000055ff2 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbx ; ret
0x000000000013cc4f : add byte ptr [rax], al ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000100222 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000145ee3 : add byte ptr [rax], al ; add rsp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000114113 : add byte ptr [rax], al ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000010ccec : add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x00000000000bb681 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000112f06 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbx ; ret
0x000000000010ce71 : add byte ptr [rax], al ; add rsp, 0x78 ; ret
0x000000000015c958 : add byte ptr [rax], al ; add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000026cfc : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x000000000008dd3a : add byte ptr [rax], al ; add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000030e43 : add byte ptr [rax], al ; add rsp, 0xb8 ; pop rbx ; pop r12 ; ret
0x00000000001504e9 : add byte ptr [rax], al ; add rsp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000000000005c585 : add byte ptr [rax], al ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000081f3b : add byte ptr [rax], al ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000008206f : add byte ptr [rax], al ; add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000009d617 : add byte ptr [rax], al ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000009e7f6 : add byte ptr [rax], al ; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000084067 : add byte ptr [rax], al ; add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x0000000000147860 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rcx
0x000000000008439c : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000028857 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000042d36 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000009d006 : add byte ptr [rax], al ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000ba696 : add byte ptr [rax], al ; and ch, 0xf0 ; pop rbx ; cmovne rax, rdx ; ret
0x000000000011d8b4 : add byte ptr [rax], al ; and eax, 0xfffff000 ; or eax, edx ; ret
0x000000000003548b : add byte ptr [rax], al ; and eax, esi ; ret
0x00000000000485e2 : add byte ptr [rax], al ; and ecx, 0x7fffffff ; mov dword ptr [rdx], ecx ; mov dword ptr [rsi], ecx ; ret
0x000000000018c503 : add byte ptr [rax], al ; and ecx, 0xff ; sub eax, ecx ; ret
0x000000000018bc36 : add byte ptr [rax], al ; and ecx, 0xffff ; sub eax, ecx ; ret
0x000000000008a2ee : add byte ptr [rax], al ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x000000000004324e : add byte ptr [rax], al ; and edx, 0x80000000 ; mov dword ptr [rdi], edx ; ret
0x0000000000034df6 : add byte ptr [rax], al ; and esi, dword ptr [rdi + 0x10] ; lea rax, [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x00000000000aa7ae : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x00000000000aa7be : add byte ptr [rax], al ; bsf eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x00000000000aa7ce : add byte ptr [rax], al ; bsf eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x0000000000186aae : add byte ptr [rax], al ; bsf edx, edx ; add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x186a65
0x00000000001871ce : add byte ptr [rax], al ; bsf edx, edx ; add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x187185
0x000000000018784e : add byte ptr [rax], al ; bsf edx, edx ; add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x187805
0x000000000018853e : add byte ptr [rax], al ; bsf edx, edx ; add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x1884f5
0x00000000000b0230 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000000ce064 : add byte ptr [rax], al ; bsf rax, rdx ; shr rax, 2 ; ret
0x000000000018253e : add byte ptr [rax], al ; bsr eax, eax ; add rax, rdi ; vzeroupper ; ret
0x00000000000aac7e : add byte ptr [rax], al ; bsr eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x00000000000aac8e : add byte ptr [rax], al ; bsr eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x00000000000aac9e : add byte ptr [rax], al ; bsr eax, eax ; lea rax, [rax + rdi + 0x30] ; ret
0x00000000000aff14 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x00000000000affa2 : add byte ptr [rax], al ; bsr rsi, rsi ; lea rax, [rdi + rsi] ; ret
0x000000000014f3a8 : add byte ptr [rax], al ; bswap eax ; mov dword ptr [rdx + 0x10], eax ; mov eax, 1 ; ret
0x000000000014f2a8 : add byte ptr [rax], al ; bswap eax ; mov dword ptr [rdx + 0xc], eax ; mov eax, 1 ; ret
0x000000000010ed5e : add byte ptr [rax], al ; call 0x10c5b8
0x00000000000df2c4 : add byte ptr [rax], al ; call 0x12bdb4
0x0000000000103ae7 : add byte ptr [rax], al ; call 0x140594
0x0000000000028e48 : add byte ptr [rax], al ; call 0x25144
0x000000000013900b : add byte ptr [rax], al ; call 0x2530c
0x000000000010a0de : add byte ptr [rax], al ; call 0x25321
0x00000000001297f6 : add byte ptr [rax], al ; call 0x35a04
0x000000000012964c : add byte ptr [rax], al ; call 0x35a09
0x0000000000043d84 : add byte ptr [rax], al ; call 0x44149
0x0000000000082400 : add byte ptr [rax], al ; call 0x8ee14
0x00000000000ffe01 : add byte ptr [rax], al ; call 0xdc864
0x0000000000025628 : add byte ptr [rax], al ; call 0xe18f4
0x0000000000150712 : add byte ptr [rax], al ; call qword ptr [r10]
0x0000000000150d2d : add byte ptr [rax], al ; call qword ptr [rax]
0x000000000009abc8 : add byte ptr [rax], al ; call qword ptr [rip + 0x14ca48]
0x0000000000030aa2 : add byte ptr [rax], al ; call r14
0x0000000000026ba0 : add byte ptr [rax], al ; call rax
0x00000000000472e5 : add byte ptr [rax], al ; call rdx
0x0000000000111886 : add byte ptr [rax], al ; cmova eax, edx ; ret
0x000000000013b452 : add byte ptr [rax], al ; cmovb eax, edx ; ret
0x000000000011f689 : add byte ptr [rax], al ; cmovb rax, rdx ; ret
0x0000000000044b2c : add byte ptr [rax], al ; cmove eax, edx ; ret
0x0000000000114747 : add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00000000000ba642 : add byte ptr [rax], al ; cmove rax, rcx ; ret
0x000000000009e1c1 : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000ecb86 : add byte ptr [rax], al ; cmovne eax, edx ; pop rbx ; ret
0x000000000012c678 : add byte ptr [rax], al ; cmovne eax, edx ; ret
0x000000000015aad3 : add byte ptr [rax], al ; cmovne rax, rdx ; add rsp, 8 ; ret
0x00000000000a08b3 : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000e128f : add byte ptr [rax], al ; cmovne rdx, rax ; mov rax, rdx ; ret
0x000000000012622a : add byte ptr [rax], al ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x000000000017a0a6 : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000000431b5 : add byte ptr [rax], al ; cmp byte ptr [rdi + 0x2d], 0 ; add byte ptr [rax + 0x1fe8c17f], al ; ret
0x0000000000101b7c : add byte ptr [rax], al ; cmp dx, 2 ; je 0x101b90 ; ret
0x000000000015456e : add byte ptr [rax], al ; cmp eax, 1 ; jne 0x15456c ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000018fe78 : add byte ptr [rax], al ; cmp eax, ecx ; jne 0x18ff41 ; xor eax, eax ; ret
0x000000000012bd8e : add byte ptr [rax], al ; cmp eax, edx ; jne 0x12bda8 ; nop ; mov eax, 0xca ; syscall
0x00000000000d2a8b : add byte ptr [rax], al ; cmp edi, edx ; sete al ; add eax, 0x16d ; ret
0x000000000013b36e : add byte ptr [rax], al ; cmp edx, 1 ; jne 0x13b328 ; jmp 0x13b341
0x000000000013b3f6 : add byte ptr [rax], al ; cmp edx, 1 ; jne 0x13b398 ; mov eax, 0xffffffff ; ret
0x0000000000155d7a : add byte ptr [rax], al ; cmp esi, 2 ; je 0x155d67 ; jmp 0x155d4e
0x00000000000869b5 : add byte ptr [rax], al ; cmp qword ptr [rax + 0x30], 0 ; je 0x869c9 ; ret
0x0000000000082bd0 : add byte ptr [rax], al ; cmp rdx, -1 ; je 0x82c1d ; mov rax, rdx ; pop rbx ; ret
0x000000000008be20 : add byte ptr [rax], al ; cmp rdx, -1 ; je 0x8be6d ; mov rax, rdx ; pop rbx ; ret
0x0000000000098897 : add byte ptr [rax], al ; cmp rdx, r8 ; jne 0x98867 ; ret
0x000000000012dffe : add byte ptr [rax], al ; cmp rdx, rcx ; ja 0x12e035 ; xor eax, eax ; syscall
0x00000000001895af : add byte ptr [rax], al ; cmp rdx, rcx ; jne 0x1895a1 ; vzeroupper ; ret
0x000000000018e442 : add byte ptr [rax], al ; cmp rdx, rcx ; jne 0x18e42c ; vzeroupper ; ret
0x0000000000042cb6 : add byte ptr [rax], al ; fld xword ptr [rsp + 8] ; fadd st(0) ; ret
0x0000000000042b62 : add byte ptr [rax], al ; fld xword ptr [rsp - 0x18] ; ret
0x000000000012f185 : add byte ptr [rax], al ; ja 0x12f19c ; mov rax, rdi ; sar rax, 6 ; ret
0x0000000000186a8d : add byte ptr [rax], al ; je 0x186b1a ; mov byte ptr [rdi], 0 ; vzeroupper ; ret
0x000000000018782d : add byte ptr [rax], al ; je 0x1878ba ; mov byte ptr [rdi], 0 ; vzeroupper ; ret
0x000000000008a504 : add byte ptr [rax], al ; je 0x8a51b ; mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x8a51b ; ret
0x000000000009bea6 : add byte ptr [rax], al ; je 0x9beb4 ; ret
0x00000000000c524a : add byte ptr [rax], al ; je 0xc5253 ; ret
0x00000000000cde94 : add byte ptr [rax], al ; je 0xcde01 ; lea rax, [rdi - 0x10] ; ret
0x00000000000cdf44 : add byte ptr [rax], al ; je 0xcdfb8 ; lea rax, [rdi - 0x10] ; ret
0x0000000000190553 : add byte ptr [rax], al ; jg 0x190566 ; neg eax ; ret
0x00000000000cda03 : add byte ptr [rax], al ; jg 0xcda0f ; neg eax ; ret
0x000000000018d329 : add byte ptr [rax], al ; jl 0x18d336 ; neg eax ; ret
0x0000000000151526 : add byte ptr [rax], al ; jle 0x151542 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000010e05e : add byte ptr [rax], al ; jmp 0x10e02f
0x000000000011cf88 : add byte ptr [rax], al ; jmp 0x11c00b
0x000000000013071b : add byte ptr [rax], al ; jmp 0x1304c0
0x0000000000130c4b : add byte ptr [rax], al ; jmp 0x130a07
0x000000000013583c : add byte ptr [rax], al ; jmp 0x1357f9
0x0000000000135e31 : add byte ptr [rax], al ; jmp 0x135adf
0x00000000001458e4 : add byte ptr [rax], al ; jmp 0x1458b5
0x0000000000147bd7 : add byte ptr [rax], al ; jmp 0x147ba0
0x0000000000147e8e : add byte ptr [rax], al ; jmp 0x147e5f
0x0000000000148531 : add byte ptr [rax], al ; jmp 0x1484fa
0x000000000014fc39 : add byte ptr [rax], al ; jmp 0x14f817
0x00000000001544ae : add byte ptr [rax], al ; jmp 0x15447f
0x000000000015452e : add byte ptr [rax], al ; jmp 0x1544ff
0x00000000001545ee : add byte ptr [rax], al ; jmp 0x1545bf
0x0000000000154b4f : add byte ptr [rax], al ; jmp 0x154b21
0x0000000000154bdf : add byte ptr [rax], al ; jmp 0x154bb1
0x0000000000154cfe : add byte ptr [rax], al ; jmp 0x154ccf
0x0000000000025089 : add byte ptr [rax], al ; jmp 0x25009
0x0000000000069d97 : add byte ptr [rax], al ; jmp 0x64892
0x0000000000066796 : add byte ptr [rax], al ; jmp 0x66785
0x00000000000a003e : add byte ptr [rax], al ; jmp 0xa0010
0x00000000000a6a66 : add byte ptr [rax], al ; jmp 0xa2d62
0x00000000000a6af3 : add byte ptr [rax], al ; jmp 0xa2df1
0x00000000000e3b37 : add byte ptr [rax], al ; jmp 0xe3929
0x0000000000029b6a : add byte ptr [rax], al ; jmp rax
0x000000000014bc4b : add byte ptr [rax], al ; jmp rcx
0x0000000000101afd : add byte ptr [rax], al ; jne 0x101b5e ; add rsp, 0x38 ; ret
0x000000000010c2d5 : add byte ptr [rax], al ; jne 0x10c2f1 ; add rsp, 0x28 ; ret
0x000000000010c460 : add byte ptr [rax], al ; jne 0x10c473 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000010c54a : add byte ptr [rax], al ; jne 0x10c55b ; add rsp, 0x18 ; ret
0x000000000010c59c : add byte ptr [rax], al ; jne 0x10c5ad ; add rsp, 0x18 ; ret
0x000000000010ca5e : add byte ptr [rax], al ; jne 0x10ca83 ; sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010cac9 : add byte ptr [rax], al ; jne 0x10caf3 ; sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010cce6 : add byte ptr [rax], al ; jne 0x10cdb5 ; add rsp, 0x68 ; ret
0x000000000010ce6b : add byte ptr [rax], al ; jne 0x10cf3d ; add rsp, 0x78 ; ret
0x000000000010d470 : add byte ptr [rax], al ; jne 0x10d511 ; add rsp, 0x68 ; ret
0x000000000010d5e5 : add byte ptr [rax], al ; jne 0x10d655 ; add rsp, 0x30 ; pop rbx ; ret
0x000000000010e0ef : add byte ptr [rax], al ; jne 0x10e14c ; add rsp, 0x130 ; pop rbx ; ret
0x000000000010e98d : add byte ptr [rax], al ; jne 0x10e9a4 ; movzx eax, al ; add rsp, 0x58 ; ret
0x000000000010fc2f : add byte ptr [rax], al ; jne 0x10fc9e ; call 0x10c656
0x0000000000112475 : add byte ptr [rax], al ; jne 0x1124cb ; add rsp, 0x68 ; ret
0x0000000000112504 : add byte ptr [rax], al ; jne 0x112553 ; add rsp, 0x18 ; ret
0x00000000001125d5 : add byte ptr [rax], al ; jne 0x112623 ; add rsp, 0x58 ; ret
0x000000000011266a : add byte ptr [rax], al ; jne 0x1126bb ; add rsp, 0x58 ; ret
0x0000000000112b5c : add byte ptr [rax], al ; jne 0x112b83 ; add rsp, 0x38 ; ret
0x0000000000112bb7 : add byte ptr [rax], al ; jne 0x112bcf ; add rsp, 0x18 ; ret
0x0000000000112d6c : add byte ptr [rax], al ; jne 0x112de5 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001139d9 : add byte ptr [rax], al ; jne 0x113a4b ; add rsp, 0x48 ; ret
0x0000000000113a89 : add byte ptr [rax], al ; jne 0x113afb ; add rsp, 0x48 ; ret
0x0000000000113b4b : add byte ptr [rax], al ; jne 0x113bc5 ; add rsp, 0x38 ; ret
0x0000000000113c1b : add byte ptr [rax], al ; jne 0x113c95 ; add rsp, 0x38 ; ret
0x0000000000114603 : add byte ptr [rax], al ; jne 0x11464f ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001148a0 : add byte ptr [rax], al ; jne 0x1148b1 ; add rsp, 0x38 ; ret
0x000000000011496e : add byte ptr [rax], al ; jne 0x1149b5 ; add rsp, 0x68 ; ret
0x00000000001150de : add byte ptr [rax], al ; jne 0x1150f7 ; lea rsp, [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000001159b2 : add byte ptr [rax], al ; jne 0x1159fd ; add rsp, 0x38 ; ret
0x0000000000115a81 : add byte ptr [rax], al ; jne 0x115acd ; add rsp, 0x38 ; ret
0x0000000000117032 : add byte ptr [rax], al ; jne 0x117049 ; add rsp, 0xd8 ; ret
0x000000000011710a : add byte ptr [rax], al ; jne 0x117121 ; add rsp, 0xd8 ; ret
0x00000000001182e3 : add byte ptr [rax], al ; jne 0x1182f4 ; add rsp, 0x18 ; ret
0x000000000011a929 : add byte ptr [rax], al ; jne 0x11a940 ; add rsp, 0x418 ; ret
0x000000000011daba : add byte ptr [rax], al ; jne 0x11dae3 ; add rsp, 0x78 ; ret
0x000000000011f428 : add byte ptr [rax], al ; jne 0x11f439 ; add rsp, 0x18 ; ret
0x000000000011f6f7 : add byte ptr [rax], al ; jne 0x11f717 ; add rsp, 0xa0 ; pop rbx ; ret
0x000000000011f96d : add byte ptr [rax], al ; jne 0x11f9c3 ; add rsp, 0x58 ; ret
0x0000000000129eba : add byte ptr [rax], al ; jne 0x129efa ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012c9c2 : add byte ptr [rax], al ; jne 0x12caa6 ; leave ; ret
0x000000000012d722 : add byte ptr [rax], al ; jne 0x12d73e ; add rsp, 0xd8 ; ret
0x000000000012d818 : add byte ptr [rax], al ; jne 0x12d838 ; add rsp, 0xd8 ; ret
0x000000000012d923 : add byte ptr [rax], al ; jne 0x12d93a ; add rsp, 0xd8 ; ret
0x000000000012d9ea : add byte ptr [rax], al ; jne 0x12da01 ; add rsp, 0xd8 ; ret
0x000000000012e798 : add byte ptr [rax], al ; jne 0x12e7b8 ; add rsp, 0xd8 ; ret
0x000000000012e8a3 : add byte ptr [rax], al ; jne 0x12e8ba ; add rsp, 0xd8 ; ret
0x000000000012e96a : add byte ptr [rax], al ; jne 0x12e981 ; add rsp, 0xd8 ; ret
0x000000000012ed62 : add byte ptr [rax], al ; jne 0x12ed7d ; add rsp, 0x28 ; ret
0x000000000012edc2 : add byte ptr [rax], al ; jne 0x12eddd ; add rsp, 0x28 ; ret
0x000000000012ee8a : add byte ptr [rax], al ; jne 0x12eea1 ; add rsp, 0xd8 ; ret
0x000000000012ef6a : add byte ptr [rax], al ; jne 0x12ef81 ; add rsp, 0xd8 ; ret
0x000000000012f04a : add byte ptr [rax], al ; jne 0x12f061 ; add rsp, 0xd8 ; ret
0x0000000000135817 : add byte ptr [rax], al ; jne 0x135848 ; add rsp, 0x38 ; ret
0x00000000001358b5 : add byte ptr [rax], al ; jne 0x1358c6 ; add rsp, 0x38 ; ret
0x0000000000135932 : add byte ptr [rax], al ; jne 0x135943 ; add rsp, 0x28 ; ret
0x0000000000138ce2 : add byte ptr [rax], al ; jne 0x138d6b ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000139625 : add byte ptr [rax], al ; jne 0x139651 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000013b590 : add byte ptr [rax], al ; jne 0x13b5a8 ; add rsp, 0x18 ; ret
0x000000000013b677 : add byte ptr [rax], al ; jne 0x13b6c7 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013ba5a : add byte ptr [rax], al ; jne 0x13bab3 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013bb15 : add byte ptr [rax], al ; jne 0x13bb7b ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013d93e : add byte ptr [rax], al ; jne 0x13d94f ; add rsp, 0x18 ; ret
0x00000000001431c3 : add byte ptr [rax], al ; jne 0x1431d6 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001450b5 : add byte ptr [rax], al ; jne 0x1450c8 ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000145e63 : add byte ptr [rax], al ; jne 0x145e8e ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001461dc : add byte ptr [rax], al ; jne 0x146261 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000146449 : add byte ptr [rax], al ; jne 0x146487 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000147e68 : add byte ptr [rax], al ; jne 0x147eb4 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001483ae : add byte ptr [rax], al ; jne 0x1483eb ; add rsp, 0x10 ; pop rbx ; ret
0x000000000014844c : add byte ptr [rax], al ; jne 0x14848e ; add rsp, 0x10 ; pop rbx ; ret
0x000000000014910d : add byte ptr [rax], al ; jne 0x149130 ; add rsp, 0x40 ; pop rbx ; ret
0x000000000014d2d9 : add byte ptr [rax], al ; jne 0x14d364 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000014db39 : add byte ptr [rax], al ; jne 0x14db71 ; add rsp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001502e9 : add byte ptr [rax], al ; jne 0x150312 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015065b : add byte ptr [rax], al ; jne 0x150678 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000150891 : add byte ptr [rax], al ; jne 0x1508b0 ; add rsp, 0x30 ; pop rbx ; ret
0x00000000001509b1 : add byte ptr [rax], al ; jne 0x1509d0 ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000150aee : add byte ptr [rax], al ; jne 0x150b31 ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000150c4e : add byte ptr [rax], al ; jne 0x150c91 ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000150d5d : add byte ptr [rax], al ; jne 0x150d79 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000150f84 : add byte ptr [rax], al ; jne 0x150fa1 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000015211f : add byte ptr [rax], al ; jne 0x152130 ; add rsp, 0x78 ; ret
0x0000000000152185 : add byte ptr [rax], al ; jne 0x152196 ; add rsp, 0x78 ; ret
0x00000000001521f5 : add byte ptr [rax], al ; jne 0x152206 ; add rsp, 0x78 ; ret
0x0000000000152265 : add byte ptr [rax], al ; jne 0x152276 ; add rsp, 0x78 ; ret
0x00000000001522c6 : add byte ptr [rax], al ; jne 0x1522d7 ; add rsp, 0x78 ; ret
0x000000000015232a : add byte ptr [rax], al ; jne 0x15233b ; add rsp, 0x78 ; ret
0x0000000000152395 : add byte ptr [rax], al ; jne 0x1523a6 ; add rsp, 0x78 ; ret
0x000000000015240f : add byte ptr [rax], al ; jne 0x152420 ; add rsp, 0x78 ; ret
0x000000000015294d : add byte ptr [rax], al ; jne 0x152980 ; add rsp, 0x28 ; ret
0x000000000015442f : add byte ptr [rax], al ; jne 0x154440 ; add rsp, 0x48 ; ret
0x0000000000154488 : add byte ptr [rax], al ; jne 0x1544d4 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000154508 : add byte ptr [rax], al ; jne 0x154553 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001545c8 : add byte ptr [rax], al ; jne 0x154616 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000154a18 : add byte ptr [rax], al ; jne 0x154a65 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000154aa8 : add byte ptr [rax], al ; jne 0x154af4 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000154b2a : add byte ptr [rax], al ; jne 0x154b82 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000154bba : add byte ptr [rax], al ; jne 0x154c12 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000154c48 : add byte ptr [rax], al ; jne 0x154ca2 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000154cd8 : add byte ptr [rax], al ; jne 0x154d24 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000155918 : add byte ptr [rax], al ; jne 0x15596e ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001559a8 : add byte ptr [rax], al ; jne 0x1559fe ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000155a38 : add byte ptr [rax], al ; jne 0x155a86 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000155ac8 : add byte ptr [rax], al ; jne 0x155b16 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001560cf : add byte ptr [rax], al ; jne 0x1560e8 ; add rsp, 0xa0 ; pop rbx ; ret
0x0000000000156147 : add byte ptr [rax], al ; jne 0x15615e ; movzx eax, al ; add rsp, 0x18 ; ret
0x00000000001561a8 : add byte ptr [rax], al ; jne 0x1561bf ; movzx eax, al ; add rsp, 0x18 ; ret
0x000000000015af7c : add byte ptr [rax], al ; jne 0x15afb4 ; add rsp, 0x18 ; ret
0x000000000015b3f3 : add byte ptr [rax], al ; jne 0x15b42d ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015b473 : add byte ptr [rax], al ; jne 0x15b4ad ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015c15c : add byte ptr [rax], al ; jne 0x15c1a8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000015cfc2 : add byte ptr [rax], al ; jne 0x15cfe1 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000015d2af : add byte ptr [rax], al ; jne 0x15d2c6 ; add rsp, 0xa8 ; ret
0x000000000015d2f1 : add byte ptr [rax], al ; jne 0x15d308 ; add rsp, 0xa8 ; ret
0x000000000015db2e : add byte ptr [rax], al ; jne 0x15db76 ; add rsp, 0x58 ; ret
0x000000000015dc2b : add byte ptr [rax], al ; jne 0x15dc7c ; add rsp, 0x68 ; ret
0x000000000015ddd2 : add byte ptr [rax], al ; jne 0x15de2c ; add rsp, 0x78 ; ret
0x000000000015de94 : add byte ptr [rax], al ; jne 0x15dedc ; add rsp, 0x38 ; ret
0x000000000015e3c7 : add byte ptr [rax], al ; jne 0x15e3de ; add rsp, 0x28 ; ret
0x000000000015e684 : add byte ptr [rax], al ; jne 0x15e69d ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001828a2 : add byte ptr [rax], al ; jne 0x1827b8 ; ret
0x00000000001897a0 : add byte ptr [rax], al ; jne 0x189728 ; ret
0x000000000002643f : add byte ptr [rax], al ; jne 0x2640b ; ret
0x0000000000030f66 : add byte ptr [rax], al ; jne 0x30fab ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000043270 : add byte ptr [rax], al ; jne 0x4328c ; test edx, 0x7fffff ; je 0x4328c ; ret
0x0000000000043add : add byte ptr [rax], al ; jne 0x43aee ; add rsp, 0x18 ; ret
0x00000000000440f8 : add byte ptr [rax], al ; jne 0x44146 ; add rsp, 0x148 ; ret
0x000000000004437d : add byte ptr [rax], al ; jne 0x4439b ; add rsp, 0x118 ; ret
0x0000000000044400 : add byte ptr [rax], al ; jne 0x4441e ; add rsp, 0x118 ; ret
0x000000000004450b : add byte ptr [rax], al ; jne 0x44522 ; add rsp, 0x98 ; ret
0x000000000004468b : add byte ptr [rax], al ; jne 0x446c2 ; add rsp, 0x140 ; pop rbx ; ret
0x0000000000044730 : add byte ptr [rax], al ; jne 0x4475b ; add rsp, 0x40 ; pop rbx ; ret
0x000000000004513b : add byte ptr [rax], al ; jne 0x45152 ; add rsp, 0xa8 ; ret
0x0000000000047d6d : add byte ptr [rax], al ; jne 0x47d7e ; add rsp, 0x28 ; ret
0x0000000000047e5d : add byte ptr [rax], al ; jne 0x47e6e ; add rsp, 0x28 ; ret
0x00000000000486a7 : add byte ptr [rax], al ; jne 0x486b8 ; add rsp, 0x18 ; ret
0x00000000000486f4 : add byte ptr [rax], al ; jne 0x48705 ; add rsp, 0x18 ; ret
0x0000000000048746 : add byte ptr [rax], al ; jne 0x48757 ; add rsp, 0x18 ; ret
0x0000000000048793 : add byte ptr [rax], al ; jne 0x487a4 ; add rsp, 0x18 ; ret
0x00000000000487e6 : add byte ptr [rax], al ; jne 0x487f7 ; add rsp, 0x18 ; ret
0x0000000000048833 : add byte ptr [rax], al ; jne 0x48844 ; add rsp, 0x18 ; ret
0x0000000000052900 : add byte ptr [rax], al ; jne 0x52947 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000529b0 : add byte ptr [rax], al ; jne 0x52a2c ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000052a8e : add byte ptr [rax], al ; jne 0x52af6 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000538df : add byte ptr [rax], al ; jne 0x538f6 ; add rsp, 0xd8 ; ret
0x0000000000055049 : add byte ptr [rax], al ; jne 0x55060 ; add rsp, 0xd8 ; ret
0x000000000005836f : add byte ptr [rax], al ; jne 0x583b3 ; leave ; ret
0x000000000005bc90 : add byte ptr [rax], al ; jne 0x5bcef ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000005c22d : add byte ptr [rax], al ; jne 0x5c25b ; add rsp, 0x450 ; pop rbx ; ret
0x0000000000062812 : add byte ptr [rax], al ; jne 0x62829 ; add rsp, 0xd8 ; ret
0x00000000000628e4 : add byte ptr [rax], al ; jne 0x628fb ; add rsp, 0xd8 ; ret
0x000000000006299e : add byte ptr [rax], al ; jne 0x629b5 ; add rsp, 0xd8 ; ret
0x0000000000062a5d : add byte ptr [rax], al ; jne 0x62a74 ; add rsp, 0xd8 ; ret
0x0000000000062b12 : add byte ptr [rax], al ; jne 0x62b29 ; add rsp, 0xd8 ; ret
0x0000000000062bd2 : add byte ptr [rax], al ; jne 0x62be9 ; add rsp, 0xd8 ; ret
0x0000000000062cc0 : add byte ptr [rax], al ; jne 0x62cd7 ; add rsp, 0xd8 ; ret
0x0000000000062d94 : add byte ptr [rax], al ; jne 0x62dab ; add rsp, 0xd8 ; ret
0x0000000000063361 : add byte ptr [rax], al ; jne 0x6337a ; add rsp, 0x1010 ; pop rbx ; ret
0x0000000000063981 : add byte ptr [rax], al ; jne 0x6399f ; add rsp, 0x18 ; ret
0x0000000000063cb7 : add byte ptr [rax], al ; jne 0x63cce ; add rsp, 0xd8 ; ret
0x0000000000063d95 : add byte ptr [rax], al ; jne 0x63dac ; add rsp, 0xd8 ; ret
0x0000000000085962 : add byte ptr [rax], al ; jne 0x85979 ; add rsp, 0xd8 ; ret
0x0000000000085a1e : add byte ptr [rax], al ; jne 0x85a35 ; add rsp, 0xd8 ; ret
0x0000000000085b04 : add byte ptr [rax], al ; jne 0x85b1b ; add rsp, 0xd8 ; ret
0x0000000000085bd4 : add byte ptr [rax], al ; jne 0x85beb ; add rsp, 0xd8 ; ret
0x0000000000085c90 : add byte ptr [rax], al ; jne 0x85ca7 ; add rsp, 0xd8 ; ret
0x0000000000087e8f : add byte ptr [rax], al ; jne 0x87ec2 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008cfd2 : add byte ptr [rax], al ; jne 0x8cfef ; add rsp, 0x48 ; ret
0x00000000000907ec : add byte ptr [rax], al ; jne 0x90856 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000926b1 : add byte ptr [rax], al ; jne 0x926cc ; sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000009413e : add byte ptr [rax], al ; jne 0x9418e ; add rsp, 0x50 ; pop rbx ; ret
0x000000000009b4b9 : add byte ptr [rax], al ; jne 0x9b57e ; add rsp, 0x18 ; ret
0x00000000000c4fd1 : add byte ptr [rax], al ; jne 0xc504d ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000c50af : add byte ptr [rax], al ; jne 0xc5117 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000c5181 : add byte ptr [rax], al ; jne 0xc51c8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000c8b2d : add byte ptr [rax], al ; jne 0xc8b5d ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000c9497 : add byte ptr [rax], al ; jne 0xc94ae ; add rsp, 0xd8 ; ret
0x00000000000c9575 : add byte ptr [rax], al ; jne 0xc958c ; add rsp, 0xd8 ; ret
0x00000000000cc921 : add byte ptr [rax], al ; jne 0xcc980 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000ceba7 : add byte ptr [rax], al ; jne 0xcebba ; add rsp, 0x40 ; pop rbx ; ret
0x00000000000d2a1f : add byte ptr [rax], al ; jne 0xd2a45 ; add rsp, 0x28 ; ret
0x00000000000d2b50 : add byte ptr [rax], al ; jne 0xd2b6a ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000d8c96 : add byte ptr [rax], al ; jne 0xd8ca7 ; add rsp, 0x18 ; ret
0x00000000000dba66 : add byte ptr [rax], al ; jne 0xdba77 ; add rsp, 0x18 ; ret
0x00000000000dc3a7 : add byte ptr [rax], al ; jne 0xdc3c0 ; add rsp, 0xe0 ; pop rbx ; ret
0x00000000000dc443 : add byte ptr [rax], al ; jne 0xdc45c ; add rsp, 0xe0 ; pop rbx ; ret
0x00000000000dda69 : add byte ptr [rax], al ; jne 0xdda9b ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ddad9 : add byte ptr [rax], al ; jne 0xddb33 ; add rsp, 0x38 ; ret
0x00000000000dfa44 : add byte ptr [rax], al ; jne 0xdfa80 ; lea rsp, [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000dfb8d : add byte ptr [rax], al ; jne 0xdfc11 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e158f : add byte ptr [rax], al ; jne 0xe15af ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000e1dcd : add byte ptr [rax], al ; jne 0xe1e1d ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000e1f5d : add byte ptr [rax], al ; jne 0xe1fad ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000e27a9 : add byte ptr [rax], al ; jne 0xe2803 ; add rsp, 0x38 ; ret
0x00000000000e2839 : add byte ptr [rax], al ; jne 0xe2893 ; add rsp, 0x38 ; ret
0x00000000000e2ac9 : add byte ptr [rax], al ; jne 0xe2b2b ; add rsp, 0x38 ; ret
0x00000000000e2b69 : add byte ptr [rax], al ; jne 0xe2bcb ; add rsp, 0x38 ; ret
0x00000000000ecbfa : add byte ptr [rax], al ; jne 0xecb3b ; ret
0x00000000000ecb95 : add byte ptr [rax], al ; jne 0xecbb0 ; cmp byte ptr [rsi], cl ; je 0xecb3a ; ret
0x00000000000ffdfb : add byte ptr [rax], al ; jne 0xfff40 ; call 0xdc86a
0x0000000000028e77 : add byte ptr [rax], al ; lea r12d, [r15 + 2] ; call 0x25148
0x0000000000146239 : add byte ptr [rax], al ; lea r9, [rsp + 0x20] ; call qword ptr [rax]
0x000000000018e78e : add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x000000000018e79e : add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x000000000018e7ae : add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x000000000018e7be : add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x000000000018e7ce : add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x000000000018e6ed : add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x000000000018e71e : add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x000000000018e72e : add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x000000000018e73e : add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x000000000018e74e : add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x000000000018e75e : add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x000000000018e69a : add byte ptr [rax], al ; lea rax, [rdi + 7] ; ret
0x000000000018e76e : add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x000000000018e77e : add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x00000000000afbf7 : add byte ptr [rax], al ; lea rax, [rdi + rax] ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000cde1b : add byte ptr [rax], al ; lea rax, [rdi - 0x10] ; ret
0x00000000000cdf7e : add byte ptr [rax], al ; lea rax, [rdi - 0xc] ; ret
0x00000000000cdf9e : add byte ptr [rax], al ; lea rax, [rdi - 4] ; ret
0x00000000000cdf8e : add byte ptr [rax], al ; lea rax, [rdi - 8] ; ret
0x000000000009a216 : add byte ptr [rax], al ; lea rax, [rdx - 0x10] ; ret
0x00000000000339c6 : add byte ptr [rax], al ; lea rax, [rip + 0x17bf7d] ; ret
0x0000000000026c5e : add byte ptr [rax], al ; lea rax, [rip + 0x188824] ; ret
0x0000000000026c6e : add byte ptr [rax], al ; lea rax, [rip + 0x18a6ae] ; ret
0x0000000000151d26 : add byte ptr [rax], al ; lea rax, [rip + 0x97c51] ; pop rbx ; ret
0x0000000000151c46 : add byte ptr [rax], al ; lea rax, [rip + 0x97d39] ; pop rbx ; ret
0x0000000000151b66 : add byte ptr [rax], al ; lea rax, [rip + 0x97e31] ; pop rbx ; ret
0x00000000000807b3 : add byte ptr [rax], al ; lea rcx, [rbx + 0x40] ; mov rdi, rbx ; call rax
0x000000000009b736 : add byte ptr [rax], al ; lea rcx, [rip + 0x11420d] ; mov rdx, rcx ; jmp 0x9b6e1
0x000000000009d367 : add byte ptr [rax], al ; lea rdx, [rip + 0x14e20] ; cmovne rax, rdx ; ret
0x000000000009ce17 : add byte ptr [rax], al ; lea rdx, [rip + 0xc40b0] ; cmovne rax, rdx ; ret
0x000000000009e63a : add byte ptr [rax], al ; lea rdx, [rip + 0xcfddd] ; cmovne rax, rdx ; ret
0x000000000009e59a : add byte ptr [rax], al ; lea rdx, [rip + 0xcfe6d] ; cmovne rax, rdx ; ret
0x000000000009e68a : add byte ptr [rax], al ; lea rdx, [rip + 0xd1edd] ; cmovne rax, rdx ; ret
0x000000000009e5ea : add byte ptr [rax], al ; lea rdx, [rip + 0xd1f6d] ; cmovne rax, rdx ; ret
0x000000000009d427 : add byte ptr [rax], al ; lea rdx, [rip + 0xd6e40] ; cmovne rax, rdx ; ret
0x000000000009e547 : add byte ptr [rax], al ; lea rdx, [rip + 0xda0b0] ; cmovne rax, rdx ; ret
0x000000000009e208 : add byte ptr [rax], al ; lea rdx, [rip + 0xf05cf] ; cmovne rax, rdx ; ret
0x0000000000052e5c : add byte ptr [rax], al ; lea rsi, [rip + 0x7b] ; call rax
0x0000000000136a4e : add byte ptr [rax], al ; lea rsi, [rip + 0x7bfdd] ; call 0x142cab
0x000000000012c9c8 : add byte ptr [rax], al ; leave ; ret
0x000000000017849e : add byte ptr [rax], al ; mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x000000000017416e : add byte ptr [rax], al ; mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000000eaa6e : add byte ptr [rax], al ; mov byte ptr [rdi + 8], 0x15 ; mov eax, 1 ; ret
0x00000000000eaa9e : add byte ptr [rax], al ; mov byte ptr [rdi + 8], 0x1a ; mov eax, 2 ; ret
0x00000000000eaaae : add byte ptr [rax], al ; mov byte ptr [rdi + 8], 0x1c ; mov eax, 2 ; ret
0x00000000001871b3 : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; vzeroupper ; ret
0x00000000000eaa63 : add byte ptr [rax], al ; mov byte ptr [rdi], 0x5b ; ret
0x00000000000b6a2e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x00000000000b542e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000b544e : add byte ptr [rax], al ; mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000b948e : add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x000000000014cb1e : add byte ptr [rax], al ; mov dword ptr [rbp + 0x58], 0x28 ; pop rbp ; pop r12 ; ret
0x0000000000077777 : add byte ptr [rax], al ; mov dword ptr [rbp - 0x4f0], 1 ; jmp rax
0x000000000008ee30 : add byte ptr [rax], al ; mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000017618e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000017617e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x000000000017615e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x0000000000155b70 : add byte ptr [rax], al ; mov dword ptr [rdi + 0x28], edx ; ret
0x000000000013a498 : add byte ptr [rax], al ; mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x000000000010b90e : add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000a71de : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; lea rax, [rdi + rax - 1] ; ret
0x00000000000b644e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000586a0 : add byte ptr [rax], al ; mov dword ptr [rdx], 0xffffc002 ; ret
0x000000000009355c : add byte ptr [rax], al ; mov dword ptr [rip + 0x150d48], eax ; ret
0x0000000000147057 : add byte ptr [rax], al ; mov dword ptr [rsi + 8], eax ; ret
0x00000000001470ae : add byte ptr [rax], al ; mov dword ptr [rsi], 0xa ; ret
0x00000000001470ce : add byte ptr [rax], al ; mov dword ptr [rsi], 0xc ; ret
0x00000000001470be : add byte ptr [rax], al ; mov dword ptr [rsi], 8 ; ret
0x000000000010c1c4 : add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000fa446 : add byte ptr [rax], al ; mov dword ptr [rsp], ebp ; jmp 0xfa416
0x00000000000de2a0 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00000000000de36a : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x00000000000de449 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], r8d ; mov eax, esi ; add rsp, 0x48 ; ret
0x00000000000b6a3e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x00000000000b786e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 2] ; ret
0x00000000000b610e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000ba6de : add byte ptr [rax], al ; mov eax, 0x10 ; pop rbx ; ret
0x0000000000063b9e : add byte ptr [rax], al ; mov eax, 0x10 ; ret
0x0000000000112c05 : add byte ptr [rax], al ; mov eax, 0x10 ; syscall
0x000000000013acd5 : add byte ptr [rax], al ; mov eax, 0x102 ; cmovne eax, edx ; ret
0x000000000010cc1e : add byte ptr [rax], al ; mov eax, 0x102 ; syscall
0x000000000010eaee : add byte ptr [rax], al ; mov eax, 0x107 ; syscall
0x000000000010ea2e : add byte ptr [rax], al ; mov eax, 0x10a ; syscall
0x000000000011e7ae : add byte ptr [rax], al ; mov eax, 0x110 ; syscall
0x000000000011dc24 : add byte ptr [rax], al ; mov eax, 0x119 ; syscall
0x000000000011e80e : add byte ptr [rax], al ; mov eax, 0x11b ; syscall
0x000000000011e47e : add byte ptr [rax], al ; mov eax, 0x123 ; syscall
0x000000000010d73e : add byte ptr [rax], al ; mov eax, 0x124 ; syscall
0x000000000010d79e : add byte ptr [rax], al ; mov eax, 0x125 ; syscall
0x000000000011e59e : add byte ptr [rax], al ; mov eax, 0x126 ; syscall
0x000000000011e89e : add byte ptr [rax], al ; mov eax, 0x12c ; syscall
0x000000000011e3be : add byte ptr [rax], al ; mov eax, 0x131 ; syscall
0x000000000011e9be : add byte ptr [rax], al ; mov eax, 0x14a ; syscall
0x000000000011e9ee : add byte ptr [rax], al ; mov eax, 0x14b ; syscall
0x000000000009aa6e : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x000000000010d76e : add byte ptr [rax], al ; mov eax, 0x16 ; syscall
0x000000000010185e : add byte ptr [rax], al ; mov eax, 0x18 ; syscall
0x000000000011768e : add byte ptr [rax], al ; mov eax, 0x1b ; syscall
0x000000000011f9ee : add byte ptr [rax], al ; mov eax, 0x1e ; syscall
0x000000000011fa7e : add byte ptr [rax], al ; mov eax, 0x1f ; syscall
0x00000000000ba6fe : add byte ptr [rax], al ; mov eax, 0x20 ; pop rbx ; ret
0x000000000010d70e : add byte ptr [rax], al ; mov eax, 0x21 ; syscall
0x00000000001126be : add byte ptr [rax], al ; mov eax, 0x22 ; syscall
0x00000000000d297e : add byte ptr [rax], al ; mov eax, 0x24 ; syscall
0x00000000000d29ae : add byte ptr [rax], al ; mov eax, 0x26 ; syscall
0x00000000000e26de : add byte ptr [rax], al ; mov eax, 0x27 ; syscall
0x000000000011f10e : add byte ptr [rax], al ; mov eax, 0x29 ; syscall
0x00000000000ba6ee : add byte ptr [rax], al ; mov eax, 0x30 ; pop rbx ; ret
0x000000000011ebde : add byte ptr [rax], al ; mov eax, 0x33 ; syscall
0x00000000000e194e : add byte ptr [rax], al ; mov eax, 0x3b ; syscall
0x00000000000e123e : add byte ptr [rax], al ; mov eax, 0x3f ; syscall
0x00000000000ba71e : add byte ptr [rax], al ; mov eax, 0x40 ; pop rbx ; ret
0x000000000011f85e : add byte ptr [rax], al ; mov eax, 0x44 ; syscall
0x0000000000112488 : add byte ptr [rax], al ; mov eax, 0x48 ; syscall
0x000000000010d50e : add byte ptr [rax], al ; mov eax, 0x49 ; syscall
0x0000000000115b0e : add byte ptr [rax], al ; mov eax, 0x4c ; syscall
0x000000000010d88e : add byte ptr [rax], al ; mov eax, 0x51 ; syscall
0x0000000000063a0e : add byte ptr [rax], al ; mov eax, 0x52 ; syscall
0x000000000010eb1e : add byte ptr [rax], al ; mov eax, 0x54 ; syscall
0x000000000010ea5e : add byte ptr [rax], al ; mov eax, 0x59 ; syscall
0x000000000010cafe : add byte ptr [rax], al ; mov eax, 0x5a ; syscall
0x000000000010cb2e : add byte ptr [rax], al ; mov eax, 0x5b ; syscall
0x000000000010e17e : add byte ptr [rax], al ; mov eax, 0x5d ; syscall
0x000000000010e1ae : add byte ptr [rax], al ; mov eax, 0x5e ; syscall
0x00000000000ba70e : add byte ptr [rax], al ; mov eax, 0x60 ; pop rbx ; ret
0x00000000000cf77e : add byte ptr [rax], al ; mov eax, 0x60 ; syscall
0x00000000000e126e : add byte ptr [rax], al ; mov eax, 0x64 ; syscall
0x00000000000e26fe : add byte ptr [rax], al ; mov eax, 0x66 ; syscall
0x000000000011e5fe : add byte ptr [rax], al ; mov eax, 0x67 ; syscall
0x00000000000e271e : add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x00000000000e270e : add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x00000000000e272e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x00000000000e296e : add byte ptr [rax], al ; mov eax, 0x6d ; syscall
0x00000000000e26ee : add byte ptr [rax], al ; mov eax, 0x6e ; syscall
0x00000000000e299e : add byte ptr [rax], al ; mov eax, 0x6f ; syscall
0x00000000000e29fe : add byte ptr [rax], al ; mov eax, 0x70 ; syscall
0x00000000000e273e : add byte ptr [rax], al ; mov eax, 0x73 ; syscall
0x00000000000e2a2e : add byte ptr [rax], al ; mov eax, 0x76 ; syscall
0x00000000000e2a5e : add byte ptr [rax], al ; mov eax, 0x78 ; syscall
0x000000000011dbde : add byte ptr [rax], al ; mov eax, 0x7b ; syscall
0x00000000000e29ce : add byte ptr [rax], al ; mov eax, 0x7c ; syscall
0x000000000011e35e : add byte ptr [rax], al ; mov eax, 0x7d ; syscall
0x00000000000e356e : add byte ptr [rax], al ; mov eax, 0x7e ; ret
0x000000000011e38e : add byte ptr [rax], al ; mov eax, 0x7e ; syscall
0x00000000000441e3 : add byte ptr [rax], al ; mov eax, 0x7f ; syscall
0x000000000013b86e : add byte ptr [rax], al ; mov eax, 0x7fffffff ; ret
0x0000000000044220 : add byte ptr [rax], al ; mov eax, 0x82 ; syscall
0x000000000004475e : add byte ptr [rax], al ; mov eax, 0x83 ; syscall
0x000000000011e7de : add byte ptr [rax], al ; mov eax, 0x86 ; syscall
0x000000000010c9de : add byte ptr [rax], al ; mov eax, 0x8a ; syscall
0x000000000011320e : add byte ptr [rax], al ; mov eax, 0x8c ; syscall
0x000000000010179e : add byte ptr [rax], al ; mov eax, 0x8e ; syscall
0x00000000001017ce : add byte ptr [rax], al ; mov eax, 0x8f ; syscall
0x00000000001017fe : add byte ptr [rax], al ; mov eax, 0x90 ; syscall
0x000000000010182e : add byte ptr [rax], al ; mov eax, 0x91 ; syscall
0x000000000010188e : add byte ptr [rax], al ; mov eax, 0x92 ; syscall
0x00000000001018be : add byte ptr [rax], al ; mov eax, 0x93 ; syscall
0x00000000001018ee : add byte ptr [rax], al ; mov eax, 0x94 ; syscall
0x000000000011771e : add byte ptr [rax], al ; mov eax, 0x96 ; syscall
0x000000000011774e : add byte ptr [rax], al ; mov eax, 0x97 ; syscall
0x000000000011777e : add byte ptr [rax], al ; mov eax, 0x98 ; syscall
0x000000000011e2be : add byte ptr [rax], al ; mov eax, 0x9a ; syscall
0x000000000011e6be : add byte ptr [rax], al ; mov eax, 0x9b ; syscall
0x000000000011758e : add byte ptr [rax], al ; mov eax, 0xa ; syscall
0x00000000001141de : add byte ptr [rax], al ; mov eax, 0xa1 ; syscall
0x00000000000cf85e : add byte ptr [rax], al ; mov eax, 0xa4 ; syscall
0x000000000011db4e : add byte ptr [rax], al ; mov eax, 0xa6 ; syscall
0x000000000011469e : add byte ptr [rax], al ; mov eax, 0xa7 ; syscall
0x00000000001146ce : add byte ptr [rax], al ; mov eax, 0xa8 ; syscall
0x0000000000113e6e : add byte ptr [rax], al ; mov eax, 0xaa ; syscall
0x000000000011da0e : add byte ptr [rax], al ; mov eax, 0xac ; syscall
0x000000000011d9de : add byte ptr [rax], al ; mov eax, 0xad ; syscall
0x000000000011e3ee : add byte ptr [rax], al ; mov eax, 0xae ; syscall
0x000000000011e41e : add byte ptr [rax], al ; mov eax, 0xb0 ; syscall
0x000000000011db7e : add byte ptr [rax], al ; mov eax, 0xbb ; syscall
0x000000000011b93e : add byte ptr [rax], al ; mov eax, 0xc6 ; syscall
0x000000000011b81e : add byte ptr [rax], al ; mov eax, 0xc7 ; syscall
0x000000000012bdc0 : add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x000000000011e44e : add byte ptr [rax], al ; mov eax, 0xd5 ; syscall
0x0000000000043ece : add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x000000000011e2ee : add byte ptr [rax], al ; mov eax, 0xe4 ; syscall
0x00000000000e3901 : add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x00000000000e355e : add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x000000000011e56e : add byte ptr [rax], al ; mov eax, 0xfd ; syscall
0x00000000000e34cf : add byte ptr [rax], al ; mov eax, 0xfde8 ; cmovne rax, rdx ; ret
0x00000000000e35d9 : add byte ptr [rax], al ; mov eax, 0xff ; cmovne rax, rdx ; ret
0x000000000011e5ce : add byte ptr [rax], al ; mov eax, 0xff ; syscall
0x00000000000e3499 : add byte ptr [rax], al ; mov eax, 0xfffa ; cmovne rax, rdx ; ret
0x00000000000e357e : add byte ptr [rax], al ; mov eax, 0xfffa ; ret
0x000000000013ac90 : add byte ptr [rax], al ; mov eax, 0xffffffff ; cmove eax, edx ; ret
0x000000000014cc88 : add byte ptr [rax], al ; mov eax, 0xffffffff ; jmp 0x14cc64
0x00000000000474b6 : add byte ptr [rax], al ; mov eax, 0xffffffff ; jmp 0x47491
0x0000000000046f4c : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004216c : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000043f3c : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000001161c8 : add byte ptr [rax], al ; mov eax, 1 ; add rsp, 8 ; ret
0x000000000019054e : add byte ptr [rax], al ; mov eax, 1 ; jg 0x19056b ; neg eax ; ret
0x00000000000cd9fe : add byte ptr [rax], al ; mov eax, 1 ; jg 0xcda14 ; neg eax ; ret
0x00000000000585d4 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000011274e : add byte ptr [rax], al ; mov eax, 1 ; syscall
0x00000000000e375e : add byte ptr [rax], al ; mov eax, 1 ; test edi, edi ; js 0xe377b ; ret
0x00000000000587c0 : add byte ptr [rax], al ; mov eax, 2 ; ret
0x00000000000ba6ce : add byte ptr [rax], al ; mov eax, 8 ; pop rbx ; ret
0x000000000010d0ae : add byte ptr [rax], al ; mov eax, 8 ; syscall
0x000000000011b7aa : add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x0000000000047ead : add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000017b87e : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000010c1ce : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x108] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000cd97e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x24] ; cmp eax, dword ptr [rsi + 0x24] ; jne 0xcda0a ; ret
0x0000000000155ebe : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000008c1de : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x000000000008c1ae : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x000000000008d2fe : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x0000000000044dde : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x19f3c2] ; ret
0x0000000000044dce : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x19f3d6] ; ret
0x00000000001515cd : add byte ptr [rax], al ; mov eax, ebx ; jne 0x151603 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000083e0e : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000158114 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009b5cf : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x0000000000043e99 : add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000012f2be : add byte ptr [rax], al ; mov eax, edi ; bswap eax ; ret
0x000000000002741c : add byte ptr [rax], al ; mov eax, edi ; ret
0x000000000012421d : add byte ptr [rax], al ; mov eax, edx ; add rsp, 8 ; ret
0x0000000000113d14 : add byte ptr [rax], al ; mov eax, edx ; jne 0x113d31 ; add rsp, 0x28 ; ret
0x0000000000114823 : add byte ptr [rax], al ; mov eax, edx ; jne 0x114838 ; add rsp, 0x58 ; ret
0x0000000000150779 : add byte ptr [rax], al ; mov eax, edx ; jne 0x150790 ; sub rsp, -0x80 ; pop rbx ; ret
0x0000000000150e6c : add byte ptr [rax], al ; mov eax, edx ; jne 0x150e92 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000156211 : add byte ptr [rax], al ; mov eax, edx ; jne 0x156228 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000156284 : add byte ptr [rax], al ; mov eax, edx ; jne 0x15629b ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000160c01 : add byte ptr [rax], al ; mov eax, edx ; jne 0x160c18 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000160c87 : add byte ptr [rax], al ; mov eax, edx ; jne 0x160c9e ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000de1a1 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000061c42 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x000000000005f571 : add byte ptr [rax], al ; mov eax, edx ; ret
0x0000000000081484 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x00000000001129aa : add byte ptr [rax], al ; mov eax, r10d ; mov r12d, dword ptr fs:[r8] ; syscall
0x000000000008a604 : add byte ptr [rax], al ; mov eax, r10d ; pop rbx ; ret
0x0000000000080ccc : add byte ptr [rax], al ; mov eax, r11d ; jmp 0x80c9b
0x000000000008571c : add byte ptr [rax], al ; mov eax, r8d ; pop rbx ; ret
0x0000000000155c6e : add byte ptr [rax], al ; mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jae 0x155c8b ; xor eax, eax ; ret
0x00000000000b546e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000b613e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x0000000000025623 : add byte ptr [rax], al ; mov edi, 0x7f ; call 0xe18f9
0x0000000000115990 : add byte ptr [rax], al ; mov edi, 0xffffff9c ; mov eax, 0x118 ; syscall
0x0000000000139847 : add byte ptr [rax], al ; mov edi, dword ptr [rbp - 0x60] ; syscall
0x0000000000111378 : add byte ptr [rax], al ; mov edi, dword ptr [rbx + 0x3c] ; call 0x10d667
0x0000000000052eec : add byte ptr [rax], al ; mov edi, dword ptr [rdi + 0x10] ; syscall
0x0000000000114159 : add byte ptr [rax], al ; mov edi, dword ptr [rsp + 0x14] ; syscall
0x0000000000055999 : add byte ptr [rax], al ; mov edi, dword ptr [rsp + 0x24] ; call rax
0x000000000011663c : add byte ptr [rax], al ; mov edi, eax ; call 0x1128e6
0x0000000000160ddb : add byte ptr [rax], al ; mov edi, eax ; mov eax, 0x3e ; syscall
0x0000000000112c34 : add byte ptr [rax], al ; mov edi, ebx ; mov r8d, eax ; mov eax, 0x10 ; syscall
0x00000000000e190e : add byte ptr [rax], al ; mov edi, edx ; mov eax, esi ; syscall
0x0000000000113b31 : add byte ptr [rax], al ; mov edi, edx ; syscall
0x00000000000e3617 : add byte ptr [rax], al ; mov edx, 0x20 ; cmovne rax, rdx ; ret
0x00000000000e3523 : add byte ptr [rax], al ; mov edx, 0x7f ; cmovne rax, rdx ; ret
0x000000000015b56b : add byte ptr [rax], al ; mov edx, 0xffffffff ; mov eax, edx ; ret
0x000000000012bdbb : add byte ptr [rax], al ; mov edx, 1 ; mov eax, 0xca ; syscall
0x000000000011dcd6 : add byte ptr [rax], al ; mov edx, 8 ; syscall
0x000000000016b71e : add byte ptr [rax], al ; mov edx, dword ptr [rsi + 1] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000016b6ae : add byte ptr [rax], al ; mov edx, dword ptr [rsi + 2] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000016b63e : add byte ptr [rax], al ; mov edx, dword ptr [rsi + 3] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000000b545e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000084a48 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x849e0
0x000000000008ab06 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x8aa98
0x000000000008ac23 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x8abb3
0x000000000010cd4b : add byte ptr [rax], al ; mov edx, esi ; mov rsi, rdi ; mov edi, 0xffffff9c ; syscall
0x0000000000112c00 : add byte ptr [rax], al ; mov esi, 0x5409 ; mov eax, 0x10 ; syscall
0x000000000012be76 : add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x000000000015e2bc : add byte ptr [rax], al ; mov esi, 0x81 ; mov eax, 0xca ; syscall
0x0000000000038f16 : add byte ptr [rax], al ; mov esi, 0xa ; mov rdi, r14 ; call 0x2514c
0x0000000000088419 : add byte ptr [rax], al ; mov esi, 0xffffffff ; call qword ptr [r13 + 0x18]
0x000000000014c0c2 : add byte ptr [rax], al ; mov esi, 1 ; mov rdi, rbp ; call 0x148b9c
0x00000000000441de : add byte ptr [rax], al ; mov esi, 8 ; mov eax, 0x7f ; syscall
0x000000000009198e : add byte ptr [rax], al ; mov qword ptr [rax + 8], 0 ; ret
0x000000000007cf2f : add byte ptr [rax], al ; mov qword ptr [rbp - 0x4f0], rdi ; jmp rax
0x000000000015da53 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000015da0b : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000011c1fa : add byte ptr [rax], al ; mov qword ptr [rbx + 0x38], rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000015df0e : add byte ptr [rax], al ; mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000001761ce : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x00000000001761de : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x00000000001761ee : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x00000000001761fe : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000017620e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000017621e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x00000000001761be : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x000000000017619e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x0000000000155c64 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x18], rdx ; ret
0x0000000000156386 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x20], 0 ; ret
0x00000000000b645e : add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000b649e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000b64ae : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000b64be : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000b64ce : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000b648e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000b646e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x00000000000585e8 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000082294 : add byte ptr [rax], al ; mov qword ptr [rdx + 0x130], rcx ; ret
0x000000000008d982 : add byte ptr [rax], al ; mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x0000000000063b38 : add byte ptr [rax], al ; mov qword ptr [rdx + 8], r9 ; add dword ptr [rdx + 4], 1 ; ret
0x0000000000093539 : add byte ptr [rax], al ; mov qword ptr [rip + 0x150d4e], rax ; ret
0x000000000009350c : add byte ptr [rax], al ; mov qword ptr [rip + 0x150d73], rax ; ret
0x00000000000934ec : add byte ptr [rax], al ; mov qword ptr [rip + 0x150d8b], rax ; ret
0x0000000000147048 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000048a32 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x00000000000ff540 : add byte ptr [rax], al ; mov qword ptr [rsi + 8], 0 ; ret
0x0000000000147010 : add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x000000000012ef52 : add byte ptr [rax], al ; mov qword ptr [rsp + 0x10], rax ; call 0x8b1c9
0x0000000000146694 : add byte ptr [rax], al ; mov qword ptr [rsp + 0x18], r10 ; lea r9, [rsp + 0x40] ; call qword ptr [rax]
0x00000000001586c6 : add byte ptr [rax], al ; mov qword ptr [rsp + 0x48], rax ; xor eax, eax ; call 0x2513b
0x000000000013ba34 : add byte ptr [rax], al ; mov qword ptr [rsp], 0 ; call rax
0x0000000000108880 : add byte ptr [rax], al ; mov qword ptr [rsp], r10 ; call 0x25320
0x0000000000047bd2 : add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; mov rdi, qword ptr [rbx + 8] ; call rax
0x0000000000035539 : add byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x000000000010e1de : add byte ptr [rax], al ; mov r10, rcx ; mov eax, 0x104 ; syscall
0x000000000010e9ce : add byte ptr [rax], al ; mov r10, rcx ; mov eax, 0x109 ; syscall
0x000000000010ea8e : add byte ptr [rax], al ; mov r10, rcx ; mov eax, 0x10b ; syscall
0x000000000011e83e : add byte ptr [rax], al ; mov r10, rcx ; mov eax, 0x11e ; syscall
0x000000000011e2fe : add byte ptr [rax], al ; mov r10, rcx ; mov eax, 0x12d ; syscall
0x000000000011dd8e : add byte ptr [rax], al ; mov r10, rcx ; mov eax, 0x12e ; syscall
0x000000000011e8ce : add byte ptr [rax], al ; mov r10, rcx ; mov eax, 0x12f ; syscall
0x000000000011e92e : add byte ptr [rax], al ; mov r10, rcx ; mov eax, 0x136 ; syscall
0x000000000011f13e : add byte ptr [rax], al ; mov r10, rcx ; mov eax, 0x35 ; syscall
0x000000000011f0ae : add byte ptr [rax], al ; mov r10, rcx ; mov eax, 0x36 ; syscall
0x000000000011ec0e : add byte ptr [rax], al ; mov r10, rcx ; mov eax, 0x37 ; syscall
0x000000000011e6ee : add byte ptr [rax], al ; mov r10, rcx ; mov eax, 0x9d ; syscall
0x000000000011e62e : add byte ptr [rax], al ; mov r10, rcx ; mov eax, 0xa5 ; syscall
0x000000000011e50e : add byte ptr [rax], al ; mov r10, rcx ; mov eax, 0xaf ; syscall
0x000000000011b9ce : add byte ptr [rax], al ; mov r10, rcx ; mov eax, 0xbc ; syscall
0x000000000011b96e : add byte ptr [rax], al ; mov r10, rcx ; mov eax, 0xbd ; syscall
0x000000000011b84e : add byte ptr [rax], al ; mov r10, rcx ; mov eax, 0xbe ; syscall
0x000000000011b8de : add byte ptr [rax], al ; mov r10, rcx ; mov eax, 0xc0 ; syscall
0x00000000001176be : add byte ptr [rax], al ; mov r10, rcx ; mov eax, 0xd8 ; syscall
0x000000000011f9be : add byte ptr [rax], al ; mov r10, rcx ; mov eax, 0xdc ; syscall
0x000000000011e4ae : add byte ptr [rax], al ; mov r10, rcx ; mov eax, 0xe9 ; syscall
0x0000000000078ae8 : add byte ptr [rax], al ; mov r10, rdx ; jmp r11
0x0000000000077199 : add byte ptr [rax], al ; mov r10, rdx ; xor esi, esi ; jmp rax
0x0000000000044024 : add byte ptr [rax], al ; mov r10d, 8 ; mov eax, ecx ; syscall
0x000000000010572e : add byte ptr [rax], al ; mov r12, r14 ; cmp r14, rbx ; ja 0x1056d3 ; jmp 0x105710
0x000000000002669e : add byte ptr [rax], al ; mov r13, rax ; call 0xba57b
0x0000000000026566 : add byte ptr [rax], al ; mov r13, rax ; call 0xbaa9b
0x0000000000115c96 : add byte ptr [rax], al ; mov r8, rsi ; mov byte ptr [r8 - 1], 0 ; ret
0x000000000007edc8 : add byte ptr [rax], al ; mov r9, rsi ; jmp rax
0x000000000013b7e6 : add byte ptr [rax], al ; mov rax, -1 ; mov rdx, rax ; ret
0x0000000000043dfc : add byte ptr [rax], al ; mov rax, -1 ; ret
0x00000000000ce4be : add byte ptr [rax], al ; mov rax, 2 ; ret
0x00000000000ce4ce : add byte ptr [rax], al ; mov rax, 3 ; ret
0x00000000000ce4de : add byte ptr [rax], al ; mov rax, 4 ; ret
0x00000000000ce4ee : add byte ptr [rax], al ; mov rax, 5 ; ret
0x00000000000ce4fe : add byte ptr [rax], al ; mov rax, 6 ; ret
0x00000000000ce50e : add byte ptr [rax], al ; mov rax, 7 ; ret
0x0000000000152509 : add byte ptr [rax], al ; mov rax, qword ptr [r15 + 8] ; mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x0000000000088dce : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000012b6f6 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x30] ; ret
0x000000000011ba56 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x0000000000091915 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x68] ; test rax, rax ; jne 0x9191b ; ret
0x0000000000047cf0 : add byte ptr [rax], al ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000017b88e : add byte ptr [rax], al ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000154e8e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; lea rsi, [rsp + 0x10] ; call qword ptr [rax]
0x000000000015466e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; lea rsi, [rsp + 8] ; call qword ptr [rax]
0x0000000000147e76 : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000009356e : add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; nop ; mov dword ptr [rip + 0x154072], eax ; ret
0x000000000009c28e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x147cb9] ; call qword ptr [rax]
0x000000000009c1ae : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x147d99] ; call qword ptr [rax]
0x0000000000034d5e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x1af081] ; mov qword ptr [rax], rdx ; ret
0x0000000000030cee : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x1b5a11] ; ret
0x00000000000287fe : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x1c17b1] ; ret
0x00000000000287ee : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x1c17d1] ; ret
0x000000000015b181 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x8a3c6] ; call qword ptr [rax]
0x000000000015abb4 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x8a993] ; call qword ptr [rax]
0x000000000015db4e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x8c431] ; call qword ptr [rax]
0x00000000001210ae : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0xc2da9] ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000003545e : add byte ptr [rax], al ; mov rax, qword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000146d20 : add byte ptr [rax], al ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000019441a : add byte ptr [rax], al ; mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000012c38e : add byte ptr [rax], al ; mov rax, qword ptr fs:[0x10] ; ret
0x0000000000094d5d : add byte ptr [rax], al ; mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000018ad41 : add byte ptr [rax], al ; mov rax, r8 ; shr rax, 2 ; vzeroupper ; ret
0x00000000001863ce : add byte ptr [rax], al ; mov rax, r8 ; vzeroupper ; ret
0x00000000001236d6 : add byte ptr [rax], al ; mov rax, rbx ; jmp 0x1234ac
0x0000000000082699 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000480bc : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x000000000004210c : add byte ptr [rax], al ; mov rax, rcx ; ret
0x0000000000047c7e : add byte ptr [rax], al ; mov rax, rdi ; cqo ; idiv rsi ; ret
0x000000000009297e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000188fde : add byte ptr [rax], al ; mov rax, rdi ; vzeroupper ; ret
0x000000000015b2fa : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000ceb33 : add byte ptr [rax], al ; mov rax, rdx ; jne 0xceb4a ; add rsp, 0x28 ; ret
0x000000000015e732 : add byte ptr [rax], al ; mov rax, rsi ; jne 0x15e74f ; add rsp, 0x38 ; ret
0x000000000009799e : add byte ptr [rax], al ; mov rax, rsi ; ret
0x00000000001288a6 : add byte ptr [rax], al ; mov rbx, qword ptr [rdi + 0x28] ; call 0x25320
0x000000000008d55e : add byte ptr [rax], al ; mov rbx, r12 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b54ae : add byte ptr [rax], al ; mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000000ba0ef : add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000119199 : add byte ptr [rax], al ; mov rdi, qword ptr [r13] ; call r12
0x0000000000119259 : add byte ptr [rax], al ; mov rdi, qword ptr [r14] ; call r12
0x000000000003dbdb : add byte ptr [rax], al ; mov rdi, qword ptr [r15 + 0x18] ; call 0x39ec8
0x00000000001193d3 : add byte ptr [rax], al ; mov rdi, qword ptr [r15] ; call r12
0x00000000000472a4 : add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x00000000001196a8 : add byte ptr [rax], al ; mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call r12
0x00000000001288c9 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x88] ; call 0x25323
0x0000000000119159 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp] ; call r12
0x000000000009c52e : add byte ptr [rax], al ; mov rdi, qword ptr [rbx + 0x48] ; call rax
0x000000000009c2e6 : add byte ptr [rax], al ; mov rdi, qword ptr [rdi + 0x48] ; mov rsi, rbp ; call rax
0x0000000000044eb2 : add byte ptr [rax], al ; mov rdi, qword ptr [rsp] ; mov eax, ecx ; syscall
0x000000000012913e : add byte ptr [rax], al ; mov rdi, r13 ; call 0x1257eb
0x0000000000129b26 : add byte ptr [rax], al ; mov rdi, r14 ; call 0x125d87
0x000000000015ece8 : add byte ptr [rax], al ; mov rdi, r14 ; call 0x12b797
0x0000000000038f1b : add byte ptr [rax], al ; mov rdi, r14 ; call 0x25147
0x0000000000038e60 : add byte ptr [rax], al ; mov rdi, r14 ; mov rbx, r14 ; call 0x2514a
0x000000000009bdb4 : add byte ptr [rax], al ; mov rdi, r15 ; mov rdx, rbx ; mov rsi, r12 ; call rax
0x0000000000150823 : add byte ptr [rax], al ; mov rdi, rax ; lea r9, [rsp + 0x14] ; call qword ptr [r10]
0x0000000000150f16 : add byte ptr [rax], al ; mov rdi, rax ; lea r9, [rsp + 0x1c] ; call qword ptr [r10]
0x000000000014c0c7 : add byte ptr [rax], al ; mov rdi, rbp ; call 0x148b97
0x0000000000148ee7 : add byte ptr [rax], al ; mov rdi, rbp ; call 0x1551a7
0x0000000000147acf : add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x00000000000835eb : add byte ptr [rax], al ; mov rdi, rbp ; call rax
0x0000000000146175 : add byte ptr [rax], al ; mov rdi, rbp ; lea r9, [rsp + 0x20] ; call qword ptr [rax]
0x00000000000f8846 : add byte ptr [rax], al ; mov rdi, rbx ; call 0x2531f
0x00000000000d0655 : add byte ptr [rax], al ; mov rdi, rbx ; call 0xd00ab
0x00000000000f88ce : add byte ptr [rax], al ; mov rdi, rbx ; mov dword ptr [rsp + 8], eax ; call 0x25323
0x0000000000044248 : add byte ptr [rax], al ; mov rdi, rbx ; mov edx, eax ; mov eax, 0x82 ; syscall
0x000000000015d54b : add byte ptr [rax], al ; mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000011869d : add byte ptr [rax], al ; mov rdi, rbx ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; jmp rax
0x00000000000b549e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000009b19c : add byte ptr [rax], al ; mov rdx, r15 ; mov rdi, r13 ; call rax
0x0000000000133c0c : add byte ptr [rax], al ; mov rdx, r15 ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000015ec21 : add byte ptr [rax], al ; mov rdx, rax ; jmp 0x15ebec
0x00000000000e4b21 : add byte ptr [rax], al ; mov rdx, rax ; jmp 0xe4aec
0x00000000000454de : add byte ptr [rax], al ; mov rdx, rbp ; mov rsi, r12 ; mov rdi, r13 ; call rbx
0x00000000001117be : add byte ptr [rax], al ; mov rdx, rbx ; mov eax, 0x10f ; syscall
0x000000000009b834 : add byte ptr [rax], al ; mov rdx, rbx ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000160633 : add byte ptr [rax], al ; mov rdx, rsi ; mov esi, 0x80 ; mov eax, ecx ; syscall
0x0000000000111aad : add byte ptr [rax], al ; mov rdx, rsi ; xor esi, esi ; syscall
0x000000000009926e : add byte ptr [rax], al ; mov rsi, qword ptr [rsp + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000108e0e : add byte ptr [rax], al ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, r13 ; call 0x250bc
0x00000000000cf239 : add byte ptr [rax], al ; mov rsi, qword ptr [rsp + 8] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x000000000011fd9b : add byte ptr [rax], al ; mov rsi, r8 ; mov edi, ebx ; mov eax, 0x14 ; syscall
0x000000000011ff24 : add byte ptr [rax], al ; mov rsi, r8 ; mov edi, ebx ; mov eax, r14d ; syscall
0x000000000002e39c : add byte ptr [rax], al ; mov rsi, rax ; jmp 0x2e36b
0x000000000015d3cc : add byte ptr [rax], al ; mov rsi, rax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000012c713 : add byte ptr [rax], al ; mov rsi, rbp ; mov edi, ebx ; mov eax, ecx ; syscall
0x000000000009ba96 : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000008c399 : add byte ptr [rax], al ; mov rsi, rbx ; mov edi, r13d ; mov eax, r9d ; syscall
0x000000000009bc3e : add byte ptr [rax], al ; mov rsi, rbx ; mov rdi, r12 ; call rax
0x000000000010ccc2 : add byte ptr [rax], al ; mov rsi, rdi ; mov edi, 0xffffff9c ; syscall
0x0000000000112d05 : add byte ptr [rax], al ; mov word ptr [rdi + 0x16], ax ; ret
0x00000000000a700e : add byte ptr [rax], al ; mov word ptr [rdi], dx ; add rax, rdi ; ret
0x000000000018802e : add byte ptr [rax], al ; mov word ptr [rdi], dx ; vzeroupper ; ret
0x00000000000a71ae : add byte ptr [rax], al ; mov word ptr [rdi], si ; lea rax, [rdi + rax - 1] ; ret
0x00000000000a70de : add byte ptr [rax], al ; mov word ptr [rdi], si ; mov rax, rdi ; ret
0x000000000014bd73 : add byte ptr [rax], al ; mov word ptr [rdx + 0x6c], ax ; mov eax, 1 ; ret
0x0000000000048a74 : add byte ptr [rax], al ; mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x000000000010bac6 : add byte ptr [rax], al ; movaps xmmword ptr [rsp + 0xa0], xmm0 ; syscall
0x0000000000043e8a : add byte ptr [rax], al ; movaps xmmword ptr [rsp + 0xf0], xmm0 ; syscall
0x00000000000ba426 : add byte ptr [rax], al ; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000b64de : add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000b64ee : add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000168eb9 : add byte ptr [rax], al ; movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000007e263 : add byte ptr [rax], al ; movsxd rax, dword ptr [rax + rcx*4] ; add rax, rdx ; jmp rax
0x000000000007de5b : add byte ptr [rax], al ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdx ; jmp rax
0x000000000007ef17 : add byte ptr [rax], al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rdx ; jmp rax
0x000000000008098c : add byte ptr [rax], al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000018133e : add byte ptr [rax], al ; movsxd rax, ecx ; ret
0x000000000013b3e7 : add byte ptr [rax], al ; movsxd rdx, eax ; add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x0000000000032c74 : add byte ptr [rax], al ; movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x000000000014f2f7 : add byte ptr [rax], al ; movups xmmword ptr [r8 + 0x20], xmm2 ; ret
0x000000000014e9cc : add byte ptr [rax], al ; movups xmmword ptr [r8 + 8], xmm0 ; ret
0x00000000000871d3 : add byte ptr [rax], al ; movups xmmword ptr [rax + 0x40], xmm0 ; pop rbx ; ret
0x000000000012ae2e : add byte ptr [rax], al ; movups xmmword ptr [rbp - 0x78], xmm7 ; call rcx
0x0000000000090b9f : add byte ptr [rax], al ; movups xmmword ptr [rbx + 0x48], xmm0 ; pop rbx ; ret
0x000000000014dd61 : add byte ptr [rax], al ; movups xmmword ptr [rbx], xmm1 ; mov qword ptr [rbx + 0x10], rax ; jmp 0x14dd39
0x000000000014bd11 : add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm1 ; ret
0x000000000014e9f9 : add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm2 ; ret
0x000000000014f309 : add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm3 ; ret
0x000000000014f2e9 : add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm4 ; ret
0x000000000010c1ab : add byte ptr [rax], al ; movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x0000000000147099 : add byte ptr [rax], al ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x0000000000147069 : add byte ptr [rax], al ; movups xmmword ptr [rsi + 8], xmm1 ; ret
0x0000000000090d26 : add byte ptr [rax], al ; movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000018fa5e : add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 0xa] ; movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x000000000018fa4e : add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 0xb] ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000018fa3e : add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 0xc] ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000018fa2e : add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 0xd] ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000018fa1e : add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 0xe] ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000018fa0e : add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 0xf] ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000018bd9e : add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 1] ; movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x000000000018bb51 : add byte ptr [rax], al ; movzx eax, byte ptr [rdi - 1] ; movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000018282e : add byte ptr [rax], al ; movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000196da6 : add byte ptr [rax], al ; movzx eax, byte ptr [rsp + 0xf] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ba64e : add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x000000000010b8ce : add byte ptr [rax], al ; movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000000aa4ee : add byte ptr [rax], al ; movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000016b8de : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000187f3e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; vzeroupper ; ret
0x000000000016b86e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000186b0e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; vzeroupper ; ret
0x00000000000dba7c : add byte ptr [rax], al ; nop ; cmp esi, 1 ; je 0xdba9b ; xor eax, eax ; ret
0x000000000009105c : add byte ptr [rax], al ; nop ; cmp qword ptr [rdi + 0x38], 0 ; je 0x9107b ; ret
0x000000000013a46d : add byte ptr [rax], al ; nop ; lea eax, [rdi + 9] ; and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x000000000018e70d : add byte ptr [rax], al ; nop ; lea rax, [rdi + 1] ; ret
0x000000000018e6fd : add byte ptr [rax], al ; nop ; lea rax, [rdi] ; ret
0x000000000017848c : add byte ptr [rax], al ; nop ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x00000000000b785d : add byte ptr [rax], al ; nop ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, [rdi + 1] ; ret
0x000000000017616c : add byte ptr [rax], al ; nop ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x00000000000b641d : add byte ptr [rax], al ; nop ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000b643c : add byte ptr [rax], al ; nop ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000b642d : add byte ptr [rax], al ; nop ; mov dword ptr [rdi], edx ; ret
0x00000000000b543c : add byte ptr [rax], al ; nop ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000011e86c : add byte ptr [rax], al ; nop ; mov eax, 0x11f ; syscall
0x000000000011e8fc : add byte ptr [rax], al ; nop ; mov eax, 0x134 ; syscall
0x000000000011e98c : add byte ptr [rax], al ; nop ; mov eax, 0x13f ; syscall
0x000000000010d0dc : add byte ptr [rax], al ; nop ; mov eax, 0x15 ; syscall
0x000000000011765d : add byte ptr [rax], al ; nop ; mov eax, 0x1c ; syscall
0x00000000000e150d : add byte ptr [rax], al ; nop ; mov eax, 0x25 ; syscall
0x000000000011f0dc : add byte ptr [rax], al ; nop ; mov eax, 0x30 ; syscall
0x000000000011eadd : add byte ptr [rax], al ; nop ; mov eax, 0x31 ; syscall
0x000000000011ec3c : add byte ptr [rax], al ; nop ; mov eax, 0x32 ; syscall
0x000000000011ebad : add byte ptr [rax], al ; nop ; mov eax, 0x34 ; syscall
0x000000000011fa1c : add byte ptr [rax], al ; nop ; mov eax, 0x43 ; syscall
0x000000000010d85d : add byte ptr [rax], al ; nop ; mov eax, 0x50 ; syscall
0x000000000010cbec : add byte ptr [rax], al ; nop ; mov eax, 0x53 ; syscall
0x000000000010eabc : add byte ptr [rax], al ; nop ; mov eax, 0x57 ; syscall
0x000000000010e9fc : add byte ptr [rax], al ; nop ; mov eax, 0x58 ; syscall
0x000000000010e14d : add byte ptr [rax], al ; nop ; mov eax, 0x5c ; syscall
0x000000000011e77c : add byte ptr [rax], al ; nop ; mov eax, 0x63 ; syscall
0x00000000000e293c : add byte ptr [rax], al ; nop ; mov eax, 0x79 ; syscall
0x000000000011dbac : add byte ptr [rax], al ; nop ; mov eax, 0x7a ; syscall
0x000000000011ddbc : add byte ptr [rax], al ; nop ; mov eax, 0x87 ; syscall
0x000000000010c9ac : add byte ptr [rax], al ; nop ; mov eax, 0x89 ; syscall
0x00000000001176ec : add byte ptr [rax], al ; nop ; mov eax, 0x95 ; syscall
0x000000000011466c : add byte ptr [rax], al ; nop ; mov eax, 0x99 ; syscall
0x000000000011e32c : add byte ptr [rax], al ; nop ; mov eax, 0x9f ; syscall
0x000000000011e4dc : add byte ptr [rax], al ; nop ; mov eax, 0xb1 ; syscall
0x000000000011e68c : add byte ptr [rax], al ; nop ; mov eax, 0xb4 ; syscall
0x000000000011b8ac : add byte ptr [rax], al ; nop ; mov eax, 0xc2 ; syscall
0x000000000011b90c : add byte ptr [rax], al ; nop ; mov eax, 0xc3 ; syscall
0x000000000011b7ec : add byte ptr [rax], al ; nop ; mov eax, 0xc4 ; syscall
0x000000000011b99c : add byte ptr [rax], al ; nop ; mov eax, 0xc5 ; syscall
0x00000000000dc9bd : add byte ptr [rax], al ; nop ; mov eax, 0xd9 ; syscall
0x000000000011e53c : add byte ptr [rax], al ; nop ; mov eax, 0xfe ; syscall
0x000000000009292c : add byte ptr [rax], al ; nop ; mov eax, 0xffffffff ; ret
0x00000000001477fc : add byte ptr [rax], al ; nop ; mov eax, 2 ; ret
0x00000000001123ed : add byte ptr [rax], al ; nop ; mov eax, 3 ; syscall
0x000000000009268d : add byte ptr [rax], al ; nop ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000000cd9cd : add byte ptr [rax], al ; nop ; mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0xcda0b ; ret
0x000000000011277c : add byte ptr [rax], al ; nop ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x00000000000dc9ec : add byte ptr [rax], al ; nop ; mov eax, dword ptr [rdi] ; ret
0x000000000008d2ec : add byte ptr [rax], al ; nop ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x000000000012f2cd : add byte ptr [rax], al ; nop ; mov eax, edi ; rol ax, 8 ; ret
0x00000000001761ad : add byte ptr [rax], al ; nop ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x00000000000b647d : add byte ptr [rax], al ; nop ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000011e95c : add byte ptr [rax], al ; nop ; mov r10, rcx ; mov eax, 0x137 ; syscall
0x000000000011e65c : add byte ptr [rax], al ; nop ; mov r10, rcx ; mov eax, 0x19 ; syscall
0x0000000000111d4c : add byte ptr [rax], al ; nop ; mov r10, rcx ; mov eax, 0x28 ; syscall
0x000000000011e71c : add byte ptr [rax], al ; nop ; mov r10, rcx ; mov eax, 0xb2 ; syscall
0x000000000011e74c : add byte ptr [rax], al ; nop ; mov r10, rcx ; mov eax, 0xb3 ; syscall
0x000000000015a8ec : add byte ptr [rax], al ; nop ; mov r10, rcx ; mov eax, 0xb5 ; syscall
0x000000000015a93c : add byte ptr [rax], al ; nop ; mov r10, rcx ; mov eax, 0xb6 ; syscall
0x000000000011b87c : add byte ptr [rax], al ; nop ; mov r10, rcx ; mov eax, 0xbf ; syscall
0x000000000011b7bd : add byte ptr [rax], al ; nop ; mov r10, rcx ; mov eax, 0xc1 ; syscall
0x00000000000ce4ad : add byte ptr [rax], al ; nop ; mov rax, 1 ; ret
0x00000000000898cc : add byte ptr [rax], al ; nop ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000009296c : add byte ptr [rax], al ; nop ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000018829d : add byte ptr [rax], al ; nop ; mov rax, rdi ; vzeroupper ; ret
0x000000000017614d : add byte ptr [rax], al ; nop ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000017613c : add byte ptr [rax], al ; nop ; mov word ptr [rcx], dx ; ret
0x00000000000b640c : add byte ptr [rax], al ; nop ; mov word ptr [rdi], dx ; ret
0x000000000004397c : add byte ptr [rax], al ; nop ; movmskps eax, xmm0 ; and eax, 8 ; ret
0x000000000009be8d : add byte ptr [rax], al ; nop ; ret
0x00000000000cdfbc : add byte ptr [rax], al ; nop ; test rsi, rsi ; jne 0xcdfd5 ; xor rax, rax ; ret
0x000000000018217d : add byte ptr [rax], al ; nop ; vzeroupper ; xor eax, eax ; ret
0x00000000000b947c : add byte ptr [rax], al ; nop ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x0000000000155ecd : add byte ptr [rax], al ; nop ; xor eax, eax ; ret
0x000000000011271c : add byte ptr [rax], al ; nop ; xor r10d, r10d ; mov eax, 0x3d ; syscall
0x00000000000cdc9c : add byte ptr [rax], al ; nop ; xor rax, rax ; ret
0x000000000010cc19 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x102 ; syscall
0x000000000010eae9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x107 ; syscall
0x000000000010ea29 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x10a ; syscall
0x000000000011e7a9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x110 ; syscall
0x000000000011e809 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x11b ; syscall
0x000000000011e479 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x123 ; syscall
0x000000000010d739 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x124 ; syscall
0x000000000010d799 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x125 ; syscall
0x000000000011e599 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x126 ; syscall
0x000000000011e899 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x12c ; syscall
0x000000000011e3b9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x131 ; syscall
0x000000000011e9b9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x14a ; syscall
0x000000000011e9e9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x14b ; syscall
0x000000000010d769 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x16 ; syscall
0x0000000000101859 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x18 ; syscall
0x0000000000117689 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x1b ; syscall
0x000000000010d709 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x21 ; syscall
0x00000000000d29a9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x26 ; syscall
0x000000000011f109 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x29 ; syscall
0x000000000011ebd9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x33 ; syscall
0x000000000010d889 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x51 ; syscall
0x000000000010eb19 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x54 ; syscall
0x000000000010ea59 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x59 ; syscall
0x000000000010cb29 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x5b ; syscall
0x000000000010e179 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x5d ; syscall
0x000000000010e1a9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x5e ; syscall
0x00000000000e1269 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x64 ; syscall
0x000000000011e5f9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x67 ; syscall
0x00000000000e2969 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x6d ; syscall
0x00000000000e2999 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x6f ; syscall
0x00000000000e29f9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x70 ; syscall
0x00000000000e2a29 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x76 ; syscall
0x00000000000e2a59 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x78 ; syscall
0x000000000011dbd9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x7b ; syscall
0x000000000011e359 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x7d ; syscall
0x000000000011e389 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x7e ; syscall
0x000000000011e7d9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x86 ; syscall
0x000000000010c9d9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x8a ; syscall
0x00000000001017c9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x8f ; syscall
0x00000000001017f9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x90 ; syscall
0x0000000000101829 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x91 ; syscall
0x0000000000101889 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x92 ; syscall
0x00000000001018b9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x93 ; syscall
0x00000000001018e9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x94 ; syscall
0x0000000000117719 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x96 ; syscall
0x0000000000117749 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x97 ; syscall
0x0000000000117779 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x98 ; syscall
0x000000000011e2b9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x9a ; syscall
0x000000000011e6b9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0x9b ; syscall
0x0000000000117589 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0xa ; syscall
0x00000000001141d9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0xa1 ; syscall
0x0000000000114699 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0xa7 ; syscall
0x00000000001146c9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0xa8 ; syscall
0x000000000011da09 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0xac ; syscall
0x000000000011d9d9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0xad ; syscall
0x000000000011e3e9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0xae ; syscall
0x000000000011e419 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0xb0 ; syscall
0x000000000011db79 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0xbb ; syscall
0x000000000011b939 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0xc6 ; syscall
0x000000000011b819 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0xc7 ; syscall
0x000000000011e449 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0xd5 ; syscall
0x000000000011e2e9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0xe4 ; syscall
0x000000000011e569 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0xfd ; syscall
0x000000000011e5c9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, 0xff ; syscall
0x000000000012f2b9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov eax, edi ; bswap eax ; ret
0x000000000012d461 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000001560e9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000017415b : add byte ptr [rax], al ; nop dword ptr [rax] ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000017612a : add byte ptr [rax], al ; nop dword ptr [rax] ; mov byte ptr [rcx], dl ; ret
0x00000000000b63fa : add byte ptr [rax], al ; nop dword ptr [rax] ; mov byte ptr [rdi], dl ; ret
0x00000000000b60fa : add byte ptr [rax], al ; nop dword ptr [rax] ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000011dd0a : add byte ptr [rax], al ; nop dword ptr [rax] ; mov eax, 0x122 ; syscall
0x00000000000441aa : add byte ptr [rax], al ; nop dword ptr [rax] ; mov eax, 0x3e ; syscall
0x000000000011f8ea : add byte ptr [rax], al ; nop dword ptr [rax] ; mov eax, 0x40 ; syscall
0x000000000011f8ba : add byte ptr [rax], al ; nop dword ptr [rax] ; mov eax, 0x41 ; syscall
0x000000000011f88a : add byte ptr [rax], al ; nop dword ptr [rax] ; mov eax, 0x47 ; syscall
0x0000000000115b3a : add byte ptr [rax], al ; nop dword ptr [rax] ; mov eax, 0x4d ; syscall
0x0000000000112e5a : add byte ptr [rax], al ; nop dword ptr [rax] ; mov eax, 0x62 ; syscall
0x000000000011324a : add byte ptr [rax], al ; nop dword ptr [rax] ; mov eax, 0x8d ; syscall
0x000000000009113b : add byte ptr [rax], al ; nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x0000000000144fda : add byte ptr [rax], al ; nop dword ptr [rax] ; mov eax, 1 ; ret
0x0000000000152a4a : add byte ptr [rax], al ; nop dword ptr [rax] ; mov eax, 2 ; ret
0x000000000016b06a : add byte ptr [rax], al ; nop dword ptr [rax] ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000d692b : add byte ptr [rax], al ; nop dword ptr [rax] ; mov r8, rcx ; xor ecx, ecx ; jmp 0xd337c
0x00000000000b4daa : add byte ptr [rax], al ; nop dword ptr [rax] ; mov rax, rdi ; ret
0x0000000000032b0f : add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x00000000000aad1b : add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000001126ea : add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; syscall
0x000000000018607b : add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; vzeroupper ; ret
0x000000000012d0b5 : add byte ptr [rax], al ; nop word ptr [rax + rax] ; ret
0x0000000000042eaf : add byte ptr [rax], al ; or byte ptr [rax + 0x21], 0xc2 ; mov qword ptr [rdi], rdx ; ret
0x000000000004953b : add byte ptr [rax], al ; or byte ptr [rax + 0xf], 0x44 ; ret 0x14eb
0x00000000000ba5d9 : add byte ptr [rax], al ; or byte ptr [rdi], 0xa2 ; jmp 0xba5a9
0x000000000008dc7e : add byte ptr [rax], al ; or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000006275f : add byte ptr [rax], al ; or eax, 7 ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000042ab1 : add byte ptr [rax], al ; or eax, edx ; mov dword ptr [rsp + 0x10], eax ; fld xword ptr [rsp + 8] ; ret
0x000000000004344e : add byte ptr [rax], al ; pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x00000000000aabd0 : add byte ptr [rax], al ; pmovmskb eax, xmm1 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000356cc : add byte ptr [rax], al ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000000ce8a7 : add byte ptr [rax], al ; pop r12 ; pop r14 ; mov dword ptr [r11 + 0xc], r8d ; ret
0x000000000012c89a : add byte ptr [rax], al ; pop r12 ; pop rbp ; ret
0x00000000000dbb78 : add byte ptr [rax], al ; pop r13 ; pop r14 ; jmp rax
0x00000000001478af : add byte ptr [rax], al ; pop rbp ; jmp rcx
0x0000000000061abe : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000061b90 : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000a015c : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000ba609 : add byte ptr [rax], al ; pop rbx ; cmove rax, rdx ; ret
0x00000000000de17e : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000005f51b : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000821fd : add byte ptr [rax], al ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x0000000000030e4a : add byte ptr [rax], al ; pop rbx ; pop r12 ; ret
0x000000000002b9ed : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000064254 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000044fc9 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000044311 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000044480 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000314f7 : add byte ptr [rax], al ; pop rbx ; ret
0x000000000013a5a6 : add byte ptr [rax], al ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008f14e : add byte ptr [rax], al ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000e18be : add byte ptr [rax], al ; pop rdi ; mov eax, 0x3a ; syscall
0x000000000015609c : add byte ptr [rax], al ; pxor xmm0, xmm0 ; movups xmmword ptr [rsp + 0x28], xmm0 ; call rdx
0x00000000000268ee : add byte ptr [rax], al ; ret
0x000000000012f2f2 : add byte ptr [rax], al ; rol byte ptr [rcx + 0xfa], 0x80 ; cmovne eax, edi ; ret
0x000000000012fd29 : add byte ptr [rax], al ; rol rax, 0x11 ; jmp 0x12fcfa
0x0000000000042a36 : add byte ptr [rax], al ; sar eax, 0x1f ; sub ecx, edx ; not eax ; and eax, ecx ; ret
0x00000000000cdae0 : add byte ptr [rax], al ; setl al ; neg eax ; cmp ecx, r8d ; cmovg eax, edx ; ret
0x0000000000101c16 : add byte ptr [rax], al ; setne al ; lea eax, [rax + rax*8 + 5] ; ret
0x00000000000e371d : add byte ptr [rax], al ; setne al ; ret
0x0000000000044908 : add byte ptr [rax], al ; shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000097f8e : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000010b816 : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000018bc3c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000042a84 : add byte ptr [rax], al ; sub eax, edx ; sar eax, 0x10 ; ret
0x0000000000113222 : add byte ptr [rax], al ; sub edx, eax ; test eax, eax ; cmovns eax, edx ; ret
0x000000000013b08b : add byte ptr [rax], al ; sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x0000000000091c36 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x0000000000151abf : add byte ptr [rax], al ; sub rax, -0x80 ; pop rbx ; ret
0x00000000000b9e71 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x0000000000043e92 : add byte ptr [rax], al ; syscall
0x000000000018e582 : add byte ptr [rax], al ; test dl, 0x40 ; jne 0x18e54b ; lea rax, [rdi + 7] ; ret
0x000000000018e5b0 : add byte ptr [rax], al ; test dl, 4 ; jne 0x18e54b ; lea rax, [rdi + 3] ; ret
0x00000000000a0997 : add byte ptr [rax], al ; test dl, dl ; cmovne rax, rdi ; ret
0x0000000000146f7f : add byte ptr [rax], al ; test eax, eax ; je 0x146f98 ; xor eax, eax ; ret
0x00000000000632cd : add byte ptr [rax], al ; test eax, eax ; jne 0x632ea ; mov rax, rbx ; pop rbx ; ret
0x0000000000194aaf : add byte ptr [rax], al ; test edi, edi ; jne 0x194b0c ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000e3763 : add byte ptr [rax], al ; test edi, edi ; js 0xe3776 ; ret
0x0000000000149dca : add byte ptr [rax], al ; test edx, edx ; je 0x149dec ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000149e8a : add byte ptr [rax], al ; test edx, edx ; je 0x149eac ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000149f7a : add byte ptr [rax], al ; test edx, edx ; je 0x149f9c ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000015632e : add byte ptr [rax], al ; test edx, edx ; jne 0x15634b ; mov eax, 1 ; ret
0x00000000000314ae : add byte ptr [rax], al ; test esi, esi ; je 0x314cb ; cmp esi, 3 ; je 0x314cb ; ret
0x00000000000bd8ea : add byte ptr [rax], al ; test r15d, r15d ; mov r14, rbp ; setne dl ; jmp 0xbd911
0x00000000000c2acb : add byte ptr [rax], al ; test r15d, r15d ; mov r14, rbp ; setne dl ; jmp 0xc2af1
0x00000000000ca52b : add byte ptr [rax], al ; test r15d, r15d ; mov r14, rbp ; setne dl ; jmp 0xca551
0x000000000010c48e : add byte ptr [rax], al ; test rax, rax ; je 0x10c4c9 ; xor edx, edx ; call rax
0x000000000012c6dd : add byte ptr [rax], al ; test rax, rax ; je 0x12c717 ; call rax
0x0000000000136a5a : add byte ptr [rax], al ; test rax, rax ; je 0x136a70 ; mov rdi, rbx ; call rax
0x0000000000136d4a : add byte ptr [rax], al ; test rax, rax ; je 0x136d60 ; mov rdi, rbx ; call rax
0x000000000009d07d : add byte ptr [rax], al ; test rax, rax ; je 0x9d09b ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dbaa6 : add byte ptr [rax], al ; test rax, rax ; je 0xdbace ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000ff15e : add byte ptr [rax], al ; test rax, rax ; je 0xff179 ; xor eax, eax ; ret
0x00000000000ba44e : add byte ptr [rax], al ; test rdx, rdx ; jne 0xba463 ; mov rax, rdi ; ret
0x0000000000115ace : add byte ptr [rax], al ; test rsi, rsi ; je 0x115b0c ; mov eax, 0x105 ; syscall
0x00000000000a0096 : add byte ptr [rax], al ; test rsi, rsi ; mov rax, rdx ; cmovne rax, rdi ; ret
0x000000000018218e : add byte ptr [rax], al ; tzcnt eax, eax ; add rax, rdi ; vzeroupper ; ret
0x00000000001874c0 : add byte ptr [rax], al ; vzeroupper ; ret
0x00000000001825be : add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x00000000000476db : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r14 ; ret
0x00000000000cea9c : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x00000000000352ce : add byte ptr [rax], al ; xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
0x0000000000092c3e : add byte ptr [rax], al ; xor eax, eax ; cmp esi, -1 ; setne al ; neg eax ; ret
0x000000000012c39e : add byte ptr [rax], al ; xor eax, eax ; cmp rdi, rsi ; sete al ; ret
0x00000000000e3726 : add byte ptr [rax], al ; xor eax, eax ; cmp rdx, 0x2f ; setne al ; ret
0x000000000015b41e : add byte ptr [rax], al ; xor eax, eax ; jmp 0x15b3ec
0x000000000015b49e : add byte ptr [rax], al ; xor eax, eax ; jmp 0x15b46c
0x000000000009c696 : add byte ptr [rax], al ; xor eax, eax ; jmp 0x9c663
0x000000000010c6c8 : add byte ptr [rax], al ; xor eax, eax ; mov eax, 0x14c ; syscall
0x000000000018973e : add byte ptr [rax], al ; xor eax, eax ; mov edx, dword ptr [rdi] ; cmp edx, dword ptr [rsi] ; jne 0x189736 ; ret
0x000000000009cb90 : add byte ptr [rax], al ; xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x0000000000028d39 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ce813 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000047485 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000047123 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000047166 : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000008c1be : add byte ptr [rax], al ; xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x000000000008c1ce : add byte ptr [rax], al ; xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x0000000000181dde : add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x0000000000048666 : add byte ptr [rax], al ; xor eax, ecx ; ret
0x00000000000632de : add byte ptr [rax], al ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; ret
0x0000000000143d56 : add byte ptr [rax], al ; xor ebx, ebx ; mov rdi, r14 ; call 0x140839
0x000000000014f483 : add byte ptr [rax], al ; xor ecx, ecx ; call 0x13b6d6
0x000000000012dfce : add byte ptr [rax], al ; xor ecx, ecx ; mov rax, rcx ; ret
0x0000000000026bce : add byte ptr [rax], al ; xor edi, edi ; mov eax, edx ; syscall
0x0000000000084f2e : add byte ptr [rax], al ; xor edi, edi ; mov rax, rdi ; ret
0x000000000011751b : add byte ptr [rax], al ; xor edi, edi ; or r10d, 0x40 ; mov eax, ecx ; syscall
0x0000000000112dea : add byte ptr [rax], al ; xor edi, edi ; syscall
0x0000000000089abe : add byte ptr [rax], al ; xor edx, edx ; jmp 0x89a93
0x000000000008223e : add byte ptr [rax], al ; xor edx, edx ; mov rax, rdx ; ret
0x000000000010c4c3 : add byte ptr [rax], al ; xor edx, edx ; mov rsi, rbp ; mov rdi, rbx ; mov eax, ecx ; syscall
0x00000000000b9f11 : add byte ptr [rax], al ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x00000000000a6d6e : add byte ptr [rax], al ; xor edx, edx ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x0000000000098fae : add byte ptr [rax], al ; xor edx, edx ; pop rbx ; pop rbp ; mov rax, rdx ; pop r12 ; ret
0x000000000012df2e : add byte ptr [rax], al ; xor esi, esi ; mov rax, rsi ; ret
0x000000000004794e : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r9 ; call rdx
0x0000000000039d76 : add byte ptr [rax], al ; xor r12d, r12d ; jmp 0x39d46
0x000000000010c366 : add byte ptr [rax], al ; xor r12d, r12d ; pop rbx ; pop rbp ; mov eax, r12d ; pop r12 ; ret
0x000000000009feae : add byte ptr [rax], al ; xor r12d, r12d ; pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x00000000000bc5ce : add byte ptr [rax], al ; xor r15d, r15d ; jmp 0xbc5a6
0x00000000000cda0e : add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000009cd6c : add byte ptr [rax], bh ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x0000000000126226 : add byte ptr [rax], bh ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x0000000000193326 : add byte ptr [rax], cl ; add byte ptr [rax + 0x21], cl ; ret 0x8545
0x0000000000035114 : add byte ptr [rax], cl ; movzx eax, ax ; ret
0x000000000009e0e3 : add byte ptr [rax], dl ; lea rax, [rip + 0x1b854] ; cmove rax, rdx ; ret
0x00000000000351f4 : add byte ptr [rax], dl ; movzx eax, ax ; ret
0x0000000000155ead : add byte ptr [rax], r8b ; add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000009d005 : add byte ptr [rax], r8b ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000008a2ed : add byte ptr [rax], r8b ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x000000000010ed5d : add byte ptr [rax], r8b ; call 0x10c5b9
0x0000000000093e8d : add byte ptr [rax], r8b ; call rax
0x000000000015456d : add byte ptr [rax], r8b ; cmp eax, 1 ; jne 0x15456d ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x0000000000042cb5 : add byte ptr [rax], r8b ; fld xword ptr [rsp + 8] ; fadd st(0) ; ret
0x0000000000098fbd : add byte ptr [rax], r8b ; jmp rax
0x00000000000339c5 : add byte ptr [rax], r8b ; lea rax, [rip + 0x17bf7d] ; ret
0x00000000000eaaad : add byte ptr [rax], r8b ; mov byte ptr [rdi + 8], 0x1c ; mov eax, 2 ; ret
0x000000000010cc1d : add byte ptr [rax], r8b ; mov eax, 0x102 ; syscall
0x000000000010eaed : add byte ptr [rax], r8b ; mov eax, 0x107 ; syscall
0x000000000010ea2d : add byte ptr [rax], r8b ; mov eax, 0x10a ; syscall
0x000000000011e7ad : add byte ptr [rax], r8b ; mov eax, 0x110 ; syscall
0x000000000011e80d : add byte ptr [rax], r8b ; mov eax, 0x11b ; syscall
0x000000000011e47d : add byte ptr [rax], r8b ; mov eax, 0x123 ; syscall
0x000000000010d73d : add byte ptr [rax], r8b ; mov eax, 0x124 ; syscall
0x000000000010d79d : add byte ptr [rax], r8b ; mov eax, 0x125 ; syscall
0x000000000011e59d : add byte ptr [rax], r8b ; mov eax, 0x126 ; syscall
0x000000000011e89d : add byte ptr [rax], r8b ; mov eax, 0x12c ; syscall
0x000000000011e3bd : add byte ptr [rax], r8b ; mov eax, 0x131 ; syscall
0x000000000011e9bd : add byte ptr [rax], r8b ; mov eax, 0x14a ; syscall
0x000000000011e9ed : add byte ptr [rax], r8b ; mov eax, 0x14b ; syscall
0x000000000009aa6d : add byte ptr [rax], r8b ; mov eax, 0x16 ; ret
0x000000000010d76d : add byte ptr [rax], r8b ; mov eax, 0x16 ; syscall
0x000000000010185d : add byte ptr [rax], r8b ; mov eax, 0x18 ; syscall
0x000000000011768d : add byte ptr [rax], r8b ; mov eax, 0x1b ; syscall
0x000000000011f9ed : add byte ptr [rax], r8b ; mov eax, 0x1e ; syscall
0x000000000011fa7d : add byte ptr [rax], r8b ; mov eax, 0x1f ; syscall
0x000000000010d70d : add byte ptr [rax], r8b ; mov eax, 0x21 ; syscall
0x00000000000d297d : add byte ptr [rax], r8b ; mov eax, 0x24 ; syscall
0x00000000000d29ad : add byte ptr [rax], r8b ; mov eax, 0x26 ; syscall
0x00000000000e26dd : add byte ptr [rax], r8b ; mov eax, 0x27 ; syscall
0x000000000011f10d : add byte ptr [rax], r8b ; mov eax, 0x29 ; syscall
0x000000000011ebdd : add byte ptr [rax], r8b ; mov eax, 0x33 ; syscall
0x000000000010d50d : add byte ptr [rax], r8b ; mov eax, 0x49 ; syscall
0x000000000010d88d : add byte ptr [rax], r8b ; mov eax, 0x51 ; syscall
0x000000000010eb1d : add byte ptr [rax], r8b ; mov eax, 0x54 ; syscall
0x000000000010ea5d : add byte ptr [rax], r8b ; mov eax, 0x59 ; syscall
0x000000000010cb2d : add byte ptr [rax], r8b ; mov eax, 0x5b ; syscall
0x000000000010e17d : add byte ptr [rax], r8b ; mov eax, 0x5d ; syscall
0x000000000010e1ad : add byte ptr [rax], r8b ; mov eax, 0x5e ; syscall
0x00000000000e126d : add byte ptr [rax], r8b ; mov eax, 0x64 ; syscall
0x000000000011e5fd : add byte ptr [rax], r8b ; mov eax, 0x67 ; syscall
0x00000000000e296d : add byte ptr [rax], r8b ; mov eax, 0x6d ; syscall
0x00000000000e299d : add byte ptr [rax], r8b ; mov eax, 0x6f ; syscall
0x00000000000e29fd : add byte ptr [rax], r8b ; mov eax, 0x70 ; syscall
0x00000000000e2a2d : add byte ptr [rax], r8b ; mov eax, 0x76 ; syscall
0x00000000000e2a5d : add byte ptr [rax], r8b ; mov eax, 0x78 ; syscall
0x000000000011dbdd : add byte ptr [rax], r8b ; mov eax, 0x7b ; syscall
0x000000000011e35d : add byte ptr [rax], r8b ; mov eax, 0x7d ; syscall
0x000000000011e38d : add byte ptr [rax], r8b ; mov eax, 0x7e ; syscall
0x000000000011e7dd : add byte ptr [rax], r8b ; mov eax, 0x86 ; syscall
0x000000000010c9dd : add byte ptr [rax], r8b ; mov eax, 0x8a ; syscall
0x00000000001017cd : add byte ptr [rax], r8b ; mov eax, 0x8f ; syscall
0x00000000001017fd : add byte ptr [rax], r8b ; mov eax, 0x90 ; syscall
0x000000000010182d : add byte ptr [rax], r8b ; mov eax, 0x91 ; syscall
0x000000000010188d : add byte ptr [rax], r8b ; mov eax, 0x92 ; syscall
0x00000000001018bd : add byte ptr [rax], r8b ; mov eax, 0x93 ; syscall
0x00000000001018ed : add byte ptr [rax], r8b ; mov eax, 0x94 ; syscall
0x000000000011771d : add byte ptr [rax], r8b ; mov eax, 0x96 ; syscall
0x000000000011774d : add byte ptr [rax], r8b ; mov eax, 0x97 ; syscall
0x000000000011777d : add byte ptr [rax], r8b ; mov eax, 0x98 ; syscall
0x000000000011e2bd : add byte ptr [rax], r8b ; mov eax, 0x9a ; syscall
0x000000000011e6bd : add byte ptr [rax], r8b ; mov eax, 0x9b ; syscall
0x000000000011758d : add byte ptr [rax], r8b ; mov eax, 0xa ; syscall
0x00000000001141dd : add byte ptr [rax], r8b ; mov eax, 0xa1 ; syscall
0x000000000011469d : add byte ptr [rax], r8b ; mov eax, 0xa7 ; syscall
0x00000000001146cd : add byte ptr [rax], r8b ; mov eax, 0xa8 ; syscall
0x000000000011da0d : add byte ptr [rax], r8b ; mov eax, 0xac ; syscall
0x000000000011d9dd : add byte ptr [rax], r8b ; mov eax, 0xad ; syscall
0x000000000011e3ed : add byte ptr [rax], r8b ; mov eax, 0xae ; syscall
0x000000000011e41d : add byte ptr [rax], r8b ; mov eax, 0xb0 ; syscall
0x000000000011db7d : add byte ptr [rax], r8b ; mov eax, 0xbb ; syscall
0x000000000011b93d : add byte ptr [rax], r8b ; mov eax, 0xc6 ; syscall
0x000000000011b81d : add byte ptr [rax], r8b ; mov eax, 0xc7 ; syscall
0x000000000011e44d : add byte ptr [rax], r8b ; mov eax, 0xd5 ; syscall
0x000000000011e2ed : add byte ptr [rax], r8b ; mov eax, 0xe4 ; syscall
0x00000000000e355d : add byte ptr [rax], r8b ; mov eax, 0xfc17 ; ret
0x000000000011e56d : add byte ptr [rax], r8b ; mov eax, 0xfd ; syscall
0x000000000011e5cd : add byte ptr [rax], r8b ; mov eax, 0xff ; syscall
0x0000000000044e15 : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x000000000019054d : add byte ptr [rax], r8b ; mov eax, 1 ; jg 0x19056c ; neg eax ; ret
0x00000000000e4045 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x000000000011274d : add byte ptr [rax], r8b ; mov eax, 1 ; syscall
0x000000000014c7ed : add byte ptr [rax], r8b ; mov eax, 2 ; ret
0x000000000012f2bd : add byte ptr [rax], r8b ; mov eax, edi ; bswap eax ; ret
0x0000000000155c6d : add byte ptr [rax], r8b ; mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jae 0x155c8c ; xor eax, eax ; ret
0x00000000000b545d : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000010e1dd : add byte ptr [rax], r8b ; mov r10, rcx ; mov eax, 0x104 ; syscall
0x000000000010e9cd : add byte ptr [rax], r8b ; mov r10, rcx ; mov eax, 0x109 ; syscall
0x000000000010ea8d : add byte ptr [rax], r8b ; mov r10, rcx ; mov eax, 0x10b ; syscall
0x000000000011e83d : add byte ptr [rax], r8b ; mov r10, rcx ; mov eax, 0x11e ; syscall
0x000000000011e8cd : add byte ptr [rax], r8b ; mov r10, rcx ; mov eax, 0x12f ; syscall
0x000000000011e92d : add byte ptr [rax], r8b ; mov r10, rcx ; mov eax, 0x136 ; syscall
0x000000000011f13d : add byte ptr [rax], r8b ; mov r10, rcx ; mov eax, 0x35 ; syscall
0x000000000011ec0d : add byte ptr [rax], r8b ; mov r10, rcx ; mov eax, 0x37 ; syscall
0x000000000011e6ed : add byte ptr [rax], r8b ; mov r10, rcx ; mov eax, 0x9d ; syscall
0x000000000011e62d : add byte ptr [rax], r8b ; mov r10, rcx ; mov eax, 0xa5 ; syscall
0x000000000011e50d : add byte ptr [rax], r8b ; mov r10, rcx ; mov eax, 0xaf ; syscall
0x000000000011b9cd : add byte ptr [rax], r8b ; mov r10, rcx ; mov eax, 0xbc ; syscall
0x000000000011b96d : add byte ptr [rax], r8b ; mov r10, rcx ; mov eax, 0xbd ; syscall
0x000000000011b84d : add byte ptr [rax], r8b ; mov r10, rcx ; mov eax, 0xbe ; syscall
0x000000000011b8dd : add byte ptr [rax], r8b ; mov r10, rcx ; mov eax, 0xc0 ; syscall
0x00000000001176bd : add byte ptr [rax], r8b ; mov r10, rcx ; mov eax, 0xd8 ; syscall
0x000000000011e4ad : add byte ptr [rax], r8b ; mov r10, rcx ; mov eax, 0xe9 ; syscall
0x0000000000115c95 : add byte ptr [rax], r8b ; mov r8, rsi ; mov byte ptr [r8 - 1], 0 ; ret
0x000000000012b6f5 : add byte ptr [rax], r8b ; mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000154fed : add byte ptr [rax], r8b ; mov rax, qword ptr [rdi + 8] ; lea rsi, [rsp + 0x10] ; call qword ptr [rax]
0x000000000015466d : add byte ptr [rax], r8b ; mov rax, qword ptr [rdi + 8] ; lea rsi, [rsp + 8] ; call qword ptr [rax]
0x0000000000147e75 : add byte ptr [rax], r8b ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000015db4d : add byte ptr [rax], r8b ; mov rax, qword ptr [rip + 0x8c431] ; call qword ptr [rax]
0x000000000012c38d : add byte ptr [rax], r8b ; mov rax, qword ptr fs:[0x10] ; ret
0x00000000000b66cd : add byte ptr [rax], r8b ; mov rax, rdi ; ret
0x00000000001288a5 : add byte ptr [rax], r8b ; mov rbx, qword ptr [rdi + 0x28] ; call 0x25321
0x00000000000f8845 : add byte ptr [rax], r8b ; mov rdi, rbx ; call 0x25320
0x00000000000f88cd : add byte ptr [rax], r8b ; mov rdi, rbx ; mov dword ptr [rsp + 8], eax ; call 0x25324
0x00000000000b549d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000454dd : add byte ptr [rax], r8b ; mov rdx, rbp ; mov rsi, r12 ; mov rdi, r13 ; call rbx
0x000000000018282d : add byte ptr [rax], r8b ; movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000010b8cd : add byte ptr [rax], r8b ; movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x0000000000187f3d : add byte ptr [rax], r8b ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; vzeroupper ; ret
0x000000000004344d : add byte ptr [rax], r8b ; pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x0000000000145d0d : add byte ptr [rax], r8b ; pop rbx ; ret
0x00000000000e18bd : add byte ptr [rax], r8b ; pop rdi ; mov eax, 0x3a ; syscall
0x00000000000268ed : add byte ptr [rax], r8b ; ret
0x0000000000091c35 : add byte ptr [rax], r8b ; sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x000000000015632d : add byte ptr [rax], r8b ; test edx, edx ; jne 0x15634c ; mov eax, 1 ; ret
0x00000000000314ad : add byte ptr [rax], r8b ; test esi, esi ; je 0x314cc ; cmp esi, 3 ; je 0x314cc ; ret
0x00000000000fe73d : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 8 ; ret
0x000000000012c39d : add byte ptr [rax], r8b ; xor eax, eax ; cmp rdi, rsi ; sete al ; ret
0x00000000000e3725 : add byte ptr [rax], r8b ; xor eax, eax ; cmp rdx, 0x2f ; setne al ; ret
0x000000000014716d : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ba5c5 : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; ret
0x0000000000047165 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x0000000000181ddd : add byte ptr [rax], r8b ; xor eax, eax ; vzeroupper ; ret
0x0000000000143d55 : add byte ptr [rax], r8b ; xor ebx, ebx ; mov rdi, r14 ; call 0x14083a
0x000000000012ebad : add byte ptr [rax], r8b ; xor ecx, ecx ; mov rax, rcx ; ret
0x0000000000089abd : add byte ptr [rax], r8b ; xor edx, edx ; jmp 0x89a94
0x000000000008223d : add byte ptr [rax], r8b ; xor edx, edx ; mov rax, rdx ; ret
0x0000000000039d75 : add byte ptr [rax], r8b ; xor r12d, r12d ; jmp 0x39d47
0x00000000000cda0d : add byte ptr [rax], r8b ; xor rax, rax ; ret
0x00000000000dff2c : add byte ptr [rbp + 0x10], bh ; add al, ch ; sbb edx, dword ptr [rcx - 0xc] ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000015065c : add byte ptr [rbp + 0x10], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000010c2d6 : add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; ret
0x000000000011f6f8 : add byte ptr [rbp + 0x10], dh ; add rsp, 0xa0 ; pop rbx ; ret
0x000000000015cfc3 : add byte ptr [rbp + 0x11], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000008cfd3 : add byte ptr [rbp + 0x11], dh ; add rsp, 0x48 ; ret
0x0000000000045043 : add byte ptr [rbp + 0x11], dh ; add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000012d819 : add byte ptr [rbp + 0x11], dh ; add rsp, 0xd8 ; ret
0x0000000000063982 : add byte ptr [rbp + 0x12], dh ; add rsp, 0x18 ; ret
0x00000000000e1590 : add byte ptr [rbp + 0x12], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000150892 : add byte ptr [rbp + 0x12], dh ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000044577 : add byte ptr [rbp + 0x15], dh ; add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000010ca5f : add byte ptr [rbp + 0x15], dh ; sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014910e : add byte ptr [rbp + 0x16], dh ; add rsp, 0x40 ; pop rbx ; ret
0x00000000000450b6 : add byte ptr [rbp + 0x16], dh ; add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000d2a20 : add byte ptr [rbp + 0x1a], dh ; add rsp, 0x28 ; ret
0x000000000010caca : add byte ptr [rbp + 0x1a], dh ; sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000112b5d : add byte ptr [rbp + 0x1b], dh ; add rsp, 0x38 ; ret
0x00000000001502ea : add byte ptr [rbp + 0x1c], dh ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000145e64 : add byte ptr [rbp + 0x1d], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000011dabb : add byte ptr [rbp + 0x1d], dh ; add rsp, 0x78 ; ret
0x0000000000139626 : add byte ptr [rbp + 0x1e], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000044731 : add byte ptr [rbp + 0x1e], dh ; add rsp, 0x40 ; pop rbx ; ret
0x000000000005c22e : add byte ptr [rbp + 0x1e], dh ; add rsp, 0x450 ; pop rbx ; ret
0x00000000000dda6a : add byte ptr [rbp + 0x22], dh ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000087e90 : add byte ptr [rbp + 0x23], dh ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c8b2e : add byte ptr [rbp + 0x23], dh ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000135818 : add byte ptr [rbp + 0x25], dh ; add rsp, 0x38 ; ret
0x000000000004468c : add byte ptr [rbp + 0x27], dh ; add rsp, 0x140 ; pop rbx ; ret
0x000000000015294e : add byte ptr [rbp + 0x27], dh ; add rsp, 0x28 ; ret
0x000000000014db3a : add byte ptr [rbp + 0x28], dh ; add rsp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d0df4 : add byte ptr [rbp + 0x29], al ; ret
0x00000000000d0b1f : add byte ptr [rbp + 0x29], al ; ret 0x8d46
0x00000000000be1b0 : add byte ptr [rbp + 0x29], al ; retf 0x850f
0x000000000004aa18 : add byte ptr [rbp + 0x29], cl ; ret
0x000000000005c12f : add byte ptr [rbp + 0x29], cl ; ret 0xc149
0x0000000000120bcf : add byte ptr [rbp + 0x29], cl ; retf 0xd231
0x00000000000c8907 : add byte ptr [rbp + 0x29dc75db], al ; ret
0x000000000015af7d : add byte ptr [rbp + 0x2c], dh ; add rsp, 0x18 ; ret
0x00000000000dfa45 : add byte ptr [rbp + 0x2c], dh ; lea rsp, [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000015b3f4 : add byte ptr [rbp + 0x2d], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000011f94f : add byte ptr [rbp + 0x2e], dh ; mov eax, 0x42 ; syscall
0x00000000001483af : add byte ptr [rbp + 0x30], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000014644a : add byte ptr [rbp + 0x30], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000d5e82 : add byte ptr [rbp + 0x310875db], al ; rol byte ptr [rbp - 0x7b], cl ; fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0x8d48
0x000000000008df2a : add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x000000000010c367 : add byte ptr [rbp + 0x31], al ; in al, 0x5b ; pop rbp ; mov eax, r12d ; pop r12 ; ret
0x000000000009feaf : add byte ptr [rbp + 0x31], al ; in al, 0x5b ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x0000000000039d77 : add byte ptr [rbp + 0x31], al ; in al, 0xeb ; ret
0x0000000000062277 : add byte ptr [rbp + 0x31], al ; push rsi ; ret 0x7540
0x00000000001817ff : add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x77], cl ; rol dword ptr [rbx + 0x29497fe1], 1 ; retf 0xf983
0x0000000000190d5f : add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx + 9], cl ; fld dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x3145
0x0000000000089a57 : add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx + rcx*4 - 0x19], 0x4c ; lea ecx, [rsp + 0x20] ; call rbx
0x0000000000089b59 : add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx + rcx*4 - 0x19], 0x4c ; lea ecx, [rsp + 0x28] ; call rbx
0x000000000009e8b6 : add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x000000000011fa4f : add byte ptr [rbp + 0x31], al ; sar byte ptr [rax + 0x1d], cl ; syscall
0x0000000000129ebb : add byte ptr [rbp + 0x32], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014844d : add byte ptr [rbp + 0x35], dh ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000030f67 : add byte ptr [rbp + 0x35], dh ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000150aef : add byte ptr [rbp + 0x35], dh ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000044478 : add byte ptr [rbp + 0x35], dh ; add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000002c461 : add byte ptr [rbp + 0x36880fd2], al ; add al, 0 ; add bh, dh ; ret 0xf800
0x00000000000a60cf : add byte ptr [rbp + 0x38], al ; retf 0x1b76
0x00000000000a4484 : add byte ptr [rbp + 0x38], al ; retf 0x7675
0x00000000000dce0f : add byte ptr [rbp + 0x38], dh ; add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x00000000000c8a51 : add byte ptr [rbp + 0x391a74db], al ; ret
0x00000000000c895b : add byte ptr [rbp + 0x392074db], al ; ret
0x000000000013a51e : add byte ptr [rbp + 0x39850fdb], al ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000e77d1 : add byte ptr [rbp + 0x39], al ; ret 0xf45
0x000000000013df3f : add byte ptr [rbp + 0x39], al ; retf
0x0000000000056bc4 : add byte ptr [rbp + 0x39], cl ; ret 0x860f
0x0000000000056c2d : add byte ptr [rbp + 0x39], cl ; ret 0xcd74
0x0000000000056cca : add byte ptr [rbp + 0x39], cl ; ret 0xd074
0x0000000000052901 : add byte ptr [rbp + 0x39], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000011496f : add byte ptr [rbp + 0x3b], dh ; add rsp, 0x68 ; ret
0x0000000000058370 : add byte ptr [rbp + 0x3b], dh ; leave ; ret
0x000000000015de95 : add byte ptr [rbp + 0x3c], dh ; add rsp, 0x38 ; ret
0x000000000015db2f : add byte ptr [rbp + 0x3c], dh ; add rsp, 0x58 ; ret
0x0000000000154509 : add byte ptr [rbp + 0x3e], dh ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000114604 : add byte ptr [rbp + 0x3e], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000147e69 : add byte ptr [rbp + 0x3f], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000440f9 : add byte ptr [rbp + 0x3f], dh ; add rsp, 0x148 ; ret
0x00000000001159b3 : add byte ptr [rbp + 0x3f], dh ; add rsp, 0x38 ; ret
0x0000000000154a19 : add byte ptr [rbp + 0x40], dh ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000115a82 : add byte ptr [rbp + 0x40], dh ; add rsp, 0x38 ; ret
0x0000000000061abf : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000061b91 : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000000a015d : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000001545c9 : add byte ptr [rbp + 0x41], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013b678 : add byte ptr [rbp + 0x42], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001125d6 : add byte ptr [rbp + 0x42], dh ; add rsp, 0x58 ; ret
0x0000000000112505 : add byte ptr [rbp + 0x43], dh ; add rsp, 0x18 ; ret
0x000000000009413f : add byte ptr [rbp + 0x43], dh ; add rsp, 0x50 ; pop rbx ; ret
0x00000000000e1dce : add byte ptr [rbp + 0x43], dh ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000011266b : add byte ptr [rbp + 0x45], dh ; add rsp, 0x58 ; ret
0x000000000015dc2c : add byte ptr [rbp + 0x45], dh ; add rsp, 0x68 ; ret
0x00000000000632ce : add byte ptr [rbp + 0x480d75c0], al ; mov eax, ebx ; pop rbx ; ret
0x00000000000d3326 : add byte ptr [rbp + 0x480d75c0], al ; mov eax, edx ; add rsp, 8 ; ret
0x0000000000149dcb : add byte ptr [rbp + 0x481074d2], al ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009bfa3 : add byte ptr [rbp + 0x484874c0], al ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000194ab0 : add byte ptr [rbp + 0x484c75ff], al ; add esp, 0x30 ; pop rbx ; ret
0x0000000000155919 : add byte ptr [rbp + 0x49], dh ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000154b2b : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000011f96e : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x58 ; ret
0x0000000000112476 : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x68 ; ret
0x000000000013ba5b : add byte ptr [rbp + 0x4b], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000154c49 : add byte ptr [rbp + 0x4d], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000010e0f0 : add byte ptr [rbp + 0x4d], dh ; add rsp, 0x130 ; pop rbx ; ret
0x00000000000ddada : add byte ptr [rbp + 0x4e], dh ; add rsp, 0x38 ; ret
0x000000000015ddd3 : add byte ptr [rbp + 0x4e], dh ; add rsp, 0x78 ; ret
0x000000000008233c : add byte ptr [rbp + 0x4f0f48c9], al ; ret 0x8948
0x000000000005bc91 : add byte ptr [rbp + 0x51], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000101afe : add byte ptr [rbp + 0x55], dh ; add rsp, 0x38 ; ret
0x00000000000e2aca : add byte ptr [rbp + 0x56], dh ; add rsp, 0x38 ; ret
0x000000000013bb16 : add byte ptr [rbp + 0x58], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000052a8f : add byte ptr [rbp + 0x5a], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000907ed : add byte ptr [rbp + 0x5c], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000010d5e6 : add byte ptr [rbp + 0x63], dh ; add rsp, 0x30 ; pop rbx ; ret
0x000000000010fc30 : add byte ptr [rbp + 0x65], dh ; call 0x10c655
0x00000000001139da : add byte ptr [rbp + 0x66], dh ; add rsp, 0x48 ; ret
0x0000000000112d6d : add byte ptr [rbp + 0x69], dh ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000529b1 : add byte ptr [rbp + 0x6e], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000113b4c : add byte ptr [rbp + 0x6e], dh ; add rsp, 0x38 ; ret
0x00000000000dfb8e : add byte ptr [rbp + 0x76], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001461dd : add byte ptr [rbp + 0x77], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000138ce3 : add byte ptr [rbp + 0x79], dh ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014d2da : add byte ptr [rbp + 0x7e], dh ; add rsp, 0x20 ; pop rbx ; ret
0x000000000011b549 : add byte ptr [rbp + 0xa], dh ; add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x000000000011a749 : add byte ptr [rbp + 0xa], dh ; add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x00000000000980dc : add byte ptr [rbp + 0xa], dh ; jmp 0x9810b
0x000000000015e3c8 : add byte ptr [rbp + 0xb], dh ; add rsp, 0x28 ; ret
0x000000000012c267 : add byte ptr [rbp + 0xb], dh ; jmp 0x12c298
0x0000000000098035 : add byte ptr [rbp + 0xb], dh ; jmp 0x98066
0x00000000000926b2 : add byte ptr [rbp + 0xb], dh ; sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000112bb8 : add byte ptr [rbp + 0xc], dh ; add rsp, 0x18 ; ret
0x0000000000043271 : add byte ptr [rbp + 0xc], dh ; test edx, 0x7fffff ; je 0x4328b ; ret
0x00000000000d2b51 : add byte ptr [rbp + 0xd], dh ; add rsp, 0x30 ; pop rbx ; ret
0x000000000012d723 : add byte ptr [rbp + 0xd], dh ; add rsp, 0xd8 ; ret
0x0000000000150d5e : add byte ptr [rbp + 0xe], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000ee740 : add byte ptr [rbp + 0xf], al ; mov dh, 0xe4 ; movsxd rax, dword ptr [rcx + r12*4] ; add rax, rcx ; jmp rax
0x00000000000fc7d7 : add byte ptr [rbp + 0xf], al ; mov dh, 0xed ; movsxd rax, dword ptr [rdi + r13*4] ; add rax, rdi ; jmp rax
0x00000000000ee837 : add byte ptr [rbp + 0xf], al ; mov dh, 0xed ; movsxd rax, dword ptr [rdx + r13*4] ; add rax, rdx ; jmp rax
0x000000000005711f : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x000000000005700f : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000004437e : add byte ptr [rbp + 0xf], dh ; add rsp, 0x118 ; ret
0x0000000000150f85 : add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000012ed63 : add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; ret
0x00000000000ecb96 : add byte ptr [rbp + 0xf], dh ; cmp byte ptr [rsi], cl ; je 0xecb39 ; ret
0x00000000000f300d : add byte ptr [rbp + 1], cl ; retf 0x8b44
0x000000000009e94f : add byte ptr [rbp + 1], cl ; retf 0xb941
0x0000000000047c9a : add byte ptr [rbp + 3], dh ; pop rbx ; ret
0x0000000000043ade : add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x0000000000047d6e : add byte ptr [rbp + 5], dh ; add rsp, 0x28 ; ret
0x00000000001148a1 : add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x0000000000154430 : add byte ptr [rbp + 5], dh ; add rsp, 0x48 ; ret
0x0000000000152120 : add byte ptr [rbp + 5], dh ; add rsp, 0x78 ; ret
0x000000000010c461 : add byte ptr [rbp + 6], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ceba8 : add byte ptr [rbp + 6], dh ; add rsp, 0x40 ; pop rbx ; ret
0x000000000011a92a : add byte ptr [rbp + 8], dh ; add rsp, 0x418 ; ret
0x000000000004450c : add byte ptr [rbp + 8], dh ; add rsp, 0x98 ; ret
0x000000000004513c : add byte ptr [rbp + 8], dh ; add rsp, 0xa8 ; ret
0x00000000000538e0 : add byte ptr [rbp + 8], dh ; add rsp, 0xd8 ; ret
0x0000000000156148 : add byte ptr [rbp + 8], dh ; movzx eax, al ; add rsp, 0x18 ; ret
0x000000000010e98e : add byte ptr [rbp + 8], dh ; movzx eax, al ; add rsp, 0x58 ; ret
0x0000000000063362 : add byte ptr [rbp + 9], dh ; add rsp, 0x1010 ; pop rbx ; ret
0x000000000015e685 : add byte ptr [rbp + 9], dh ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001560d0 : add byte ptr [rbp + 9], dh ; add rsp, 0xa0 ; pop rbx ; ret
0x00000000000dc3a8 : add byte ptr [rbp + 9], dh ; add rsp, 0xe0 ; pop rbx ; ret
0x00000000001150df : add byte ptr [rbp + 9], dh ; lea rsp, [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000001647b6 : add byte ptr [rbp + rcx*4 + 0x1d], cl ; ret 0x546
0x000000000016b9ee : add byte ptr [rbp + rcx*4 + 0x1d], cl ; retf 0x4e1
0x000000000007a2d2 : add byte ptr [rbp + rcx*4 + 0x2c], cl ; test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000bb587 : add byte ptr [rbp + rcx*4 + 0x43], cl ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000014623a : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call qword ptr [rax]
0x00000000000bba27 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x28 ; call r12
0x0000000000145f89 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x2c ; call qword ptr [rax]
0x00000000000c9881 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call r12
0x00000000000f29ef : add byte ptr [rbp + rcx*4 + 0x52], al ; add dword ptr [rbp + 0x39], eax ; retf 0x820f
0x000000000011fee7 : add byte ptr [rbp + rcx*4 + 0x52], cl ; add dword ptr [rcx - 0x77], ecx ; ror dword ptr [rax - 0x7d], cl ; ret 0x4c02
0x00000000000dacff : add byte ptr [rbp + rcx*4 + 0x68], cl ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf
0x000000000009884c : add byte ptr [rbp + rcx*4 + 5], cl ; in al, dx ; ret
0x00000000000dcbc8 : add byte ptr [rbp + rsi*4 - 0x77], dh ; rol dword ptr [rbx - 0x7df0f706], 1 ; retf 0
0x0000000000094f9e : add byte ptr [rbp - 0x17], dh ; pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x0000000000026440 : add byte ptr [rbp - 0x3c], dh ; ret
0x00000000000639f1 : add byte ptr [rbp - 0x3f6af040], al ; movzx eax, al ; neg eax ; pop rbx ; ret
0x000000000010ce47 : add byte ptr [rbp - 0x479a8a40], al ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x000000000012c7a0 : add byte ptr [rbp - 0x47c48a40], al ; out 0, al ; add byte ptr [rax], al ; syscall
0x000000000012c3be : add byte ptr [rbp - 0x47d28a40], al ; and eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000e2b49 : add byte ptr [rbp - 0x47d58a40], al ; ja 0xe2b5b ; add byte ptr [rax], al ; syscall
0x0000000000113a69 : add byte ptr [rbp - 0x47d58a40], al ; jb 0x113a7b ; add byte ptr [rax], al ; syscall
0x00000000000ddab9 : add byte ptr [rbp - 0x47d58a40], al ; je 0xddacb ; add byte ptr [rax], al ; syscall
0x00000000000e2aa9 : add byte ptr [rbp - 0x47d58a40], al ; jne 0xe2abb ; add byte ptr [rax], al ; syscall
0x00000000001139b9 : add byte ptr [rbp - 0x47d58a40], al ; jno 0x1139cb ; add byte ptr [rax], al ; syscall
0x00000000000e2819 : add byte ptr [rbp - 0x47d58a40], al ; push 0 ; add byte ptr [rax], al ; syscall
0x00000000001134e8 : add byte ptr [rbp - 0x47ec8a40], al ; adc al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000113448 : add byte ptr [rbp - 0x47ec8a40], al ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000010d018 : add byte ptr [rbp - 0x47ec8a40], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000010d668 : add byte ptr [rbp - 0x47ec8a40], al ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000e15b8 : add byte ptr [rbp - 0x47ec8a40], al ; and al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000e1638 : add byte ptr [rbp - 0x47ec8a40], al ; and eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001175c8 : add byte ptr [rbp - 0x47ec8a40], al ; sbb al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000011eb18 : add byte ptr [rbp - 0x47ec8a40], al ; sub al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000011ea48 : add byte ptr [rbp - 0x47ec8a40], al ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000011e0b8 : add byte ptr [rbp - 0x47ec8a40], al ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x000000000011de9b : add byte ptr [rbp - 0x47ef8a40], al ; adc al, 1 ; add byte ptr [rax], al ; syscall
0x000000000010b3bb : add byte ptr [rbp - 0x47ef8a40], al ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000010b30b : add byte ptr [rbp - 0x47ef8a40], al ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000011dffb : add byte ptr [rbp - 0x47ef8a40], al ; adc eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000011f44b : add byte ptr [rbp - 0x47ef8a40], al ; and byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x000000000011ddfb : add byte ptr [rbp - 0x47ef8a40], al ; call 0xf11de10
0x000000000011effb : add byte ptr [rbp - 0x47ef8a40], al ; sub al, 0 ; add byte ptr [rax], al ; syscall
0x000000000011f4eb : add byte ptr [rbp - 0x47ef8a40], al ; sub eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000011f59b : add byte ptr [rbp - 0x47ef8a40], al ; xor eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000001562ef : add byte ptr [rbp - 0x47f38a2e], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000c5fde : add byte ptr [rbp - 0x4f71f037], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; retf 0x8945
0x00000000000c923f : add byte ptr [rbp - 0x57c03b0], cl ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x0000000000163def : add byte ptr [rbp - 0x73], cl ; mov dword ptr [rdi], esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x00000000000ec059 : add byte ptr [rbp - 0x73], cl ; pop rdx ; dec dword ptr [rcx + 0x29] ; ret
0x0000000000056aff : add byte ptr [rbp - 0x75], cl ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x48f8
0x000000000009727d : add byte ptr [rbp - 0x75], cl ; and byte ptr [r9 - 0x75], cl ; push rcx ; or dh, dh ; ret 0x7404
0x000000000006dcd2 : add byte ptr [rbp - 0x76b70088], cl ; ret
0x00000000000eccbd : add byte ptr [rbp - 0x76bb008b], cl ; retf 0x8948
0x0000000000080e77 : add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xc001
0x00000000000f705b : add byte ptr [rbp - 0x76df8b40], al ; ret 0xe283
0x00000000001172b5 : add byte ptr [rbp - 0x76f98b01], al ; cmp eax, 0xcd088 ; ret
0x00000000000e1bc9 : add byte ptr [rbp - 0x77], al ; ret
0x00000000000a18df : add byte ptr [rbp - 0x77], al ; retf 0xc141
0x000000000010572f : add byte ptr [rbp - 0x77], cl ; hlt ; cmp r14, rbx ; ja 0x1056d2 ; jmp 0x10570f
0x000000000006cdb7 : add byte ptr [rbp - 0x77], cl ; imul ecx ; ret
0x0000000000027a41 : add byte ptr [rbp - 0x77], cl ; int1 ; mov rsi, qword ptr [rsp + 0x10] ; xor r8d, r8d ; call rbx
0x0000000000193288 : add byte ptr [rbp - 0x77], cl ; mov dword ptr [rcx - 0x7d], 0x894c07e7 ; ret 0x8d4f
0x00000000000a257a : add byte ptr [rbp - 0x77], cl ; ret
0x000000000004e5f7 : add byte ptr [rbp - 0x77], cl ; ret 0x1fe9
0x0000000000051347 : add byte ptr [rbp - 0x77], cl ; ret 0x2fe9
0x00000000000e8184 : add byte ptr [rbp - 0x77], cl ; ret 0x8948
0x0000000000191ff5 : add byte ptr [rbp - 0x77], cl ; ret 0x8949
0x000000000012d776 : add byte ptr [rbp - 0x77], cl ; ret 0x894c
0x000000000019305b : add byte ptr [rbp - 0x77], cl ; ret 0x894d
0x000000000004b6b7 : add byte ptr [rbp - 0x77], cl ; ret 0xdfe9
0x000000000005f9a2 : add byte ptr [rbp - 0x77], cl ; retf
0x0000000000108d34 : add byte ptr [rbp - 0x77], cl ; retf 0x1f0f
0x000000000010950e : add byte ptr [rbp - 0x77], cl ; retf 0x35e9
0x00000000001906d7 : add byte ptr [rbp - 0x77], cl ; retf 0x8949
0x00000000001082df : add byte ptr [rbp - 0x77], cl ; retf 0x8b44
0x00000000000f312b : add byte ptr [rbp - 0x77], cl ; retf 0x8b48
0x000000000009b385 : add byte ptr [rbp - 0x7ad98140], al ; fisttp dword ptr [rdi] ; xchg eax, esp ; ret
0x00000000000bd8eb : add byte ptr [rbp - 0x7b], al ; dec dword ptr [rcx - 0x77] ; out dx, al ; setne dl ; jmp 0xbd910
0x00000000000c2acc : add byte ptr [rbp - 0x7b], al ; dec dword ptr [rcx - 0x77] ; out dx, al ; setne dl ; jmp 0xc2af0
0x00000000000ca52c : add byte ptr [rbp - 0x7b], al ; dec dword ptr [rcx - 0x77] ; out dx, al ; setne dl ; jmp 0xca550
0x000000000005913f : add byte ptr [rbp - 0x7b], al ; in al, 0x74 ; out 0xe8, al ; retf 0xfcc2
0x000000000018127f : add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x85 ; lahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6610
0x0000000000063a6f : add byte ptr [rbp - 0x7b], al ; sal byte ptr [rbx + rdi + 0x49], 0x89 ; retf 0x3cb9
0x0000000000026b07 : add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x85 ; retf
0x0000000000193423 : add byte ptr [rbp - 0x7b], cl ; dec dword ptr [rdi] ; test byte ptr [rbx], al ; or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000a6d0b : add byte ptr [rbp - 0x7c], al ; sal byte ptr [rax + rsi*2 + 0x44], 0x38 ; ret 0x4153
0x000000000010131f : add byte ptr [rbp - 0x7cb7feba], cl ; ret 0x8901
0x000000000011b73f : add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x0000000000107cdf : add byte ptr [rbp - 0x7cdb8b25], al ; sti ; add dword ptr [rdi], ecx ; xchg eax, ebp ; ret
0x00000000000ec6c7 : add byte ptr [rbp - 0x7cde872e], al ; ret 0x4801
0x00000000000f2367 : add byte ptr [rbp - 0x7ce7872e], al ; ret 0x2901
0x00000000000314af : add byte ptr [rbp - 0x7cf38b0a], al ; inc byte ptr [rbx] ; je 0x314ca ; ret
0x0000000000146b7e : add byte ptr [rbp - 0x7ed28a40], al ; ret
0x0000000000064b82 : add byte ptr [rbp - 0x7fbf2688], cl ; jmp qword ptr [rdx]
0x00000000000551f7 : add byte ptr [rbp - 0xa], dh ; pop rbx ; ret
0x00000000000e32d8 : add byte ptr [rbp], bh ; add byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000018252a : add byte ptr [rbx + 0x14840c0], al ; clc ; vzeroupper ; ret
0x000000000017d8d9 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x00000000000929e7 : add byte ptr [rbx + 0x154b7505], al ; add byte ptr [rcx], al ; ret
0x000000000009048f : add byte ptr [rbx + 0x158901ea], al ; retf
0x000000000010ee8f : add byte ptr [rbx + 0x18b802e2], al ; add byte ptr [rax], al ; add cl, ch ; retf 0xfffd
0x000000000009a1f7 : add byte ptr [rbx + 0x1e], dh ; lea rax, [rax - 8] ; ret
0x000000000008c1df : add byte ptr [rbx + 0x2002507], cl ; add byte ptr [rax], al ; ret
0x0000000000062760 : add byte ptr [rbx + 0x28907c8], al ; mov eax, 1 ; ret
0x00000000000b94cf : add byte ptr [rbx + 0x30178916], cl ; in eax, dx ; mov byte ptr [rdi + 4], ch ; ret
0x000000000013a5a7 : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x000000000008f14f : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000b548f : add byte ptr [rbx + 0x3568b0e], cl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000000bcb6f : add byte ptr [rbx + 0x39082444], cl ; ret 0x840f
0x0000000000026f9b : add byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x0000000000030e4b : add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x000000000008198f : add byte ptr [rbx + 0x42894c03], cl ; or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x00000000000dbc8f : add byte ptr [rbx + 0x43391843], cl ; or al, 0x7c ; ret 0x850f
0x00000000000bb4af : add byte ptr [rbx + 0x43890446], cl ; add al, 0x85 ; ror byte ptr [rdi], 0x84 ; retf 0
0x000000000008c2a8 : add byte ptr [rbx + 0x440f02fe], 0xd1 ; mov dword ptr [rdi], edx ; ret
0x0000000000085026 : add byte ptr [rbx + 0x44], bl ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b613f : add byte ptr [rbx + 0x4568a0e], cl ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a69b8 : add byte ptr [rbx + 0x458880c8], al ; ret 0xd889
0x00000000000b6a6f : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x00000000000b546f : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x00000000001784cf : add byte ptr [rbx + 0x48028901], cl ; lea eax, [rdx + 3] ; ret
0x000000000017b87f : add byte ptr [rbx + 0x48028901], cl ; mov eax, edi ; ret
0x000000000013616c : add byte ptr [rbx + 0x4804c244], cl ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000044268 : add byte ptr [rbx + 0x480c2444], cl ; add esp, 0x10 ; pop rbx ; ret
0x00000000000e1682 : add byte ptr [rbx + 0x480c2444], cl ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e15f2 : add byte ptr [rbx + 0x480c2444], cl ; add esp, 0x18 ; ret
0x00000000001885cf : add byte ptr [rbx + 0x48178916], cl ; lea eax, [rdi + 3] ; vzeroupper ; ret
0x00000000000b789f : add byte ptr [rbx + 0x48178916], cl ; lea eax, [rdi + 4] ; ret
0x00000000000ba60a : add byte ptr [rbx + 0x48], bl ; cmove eax, edx ; ret
0x00000000000a6d61 : add byte ptr [rbx + 0x48], bl ; mov dword ptr [rdi], edx ; ret
0x0000000000082357 : add byte ptr [rbx + 0x48], bl ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000821fe : add byte ptr [rbx + 0x48], bl ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000d94f5 : add byte ptr [rbx + 0x490f01ea], al ; ret 0xc083
0x00000000000c026c : add byte ptr [rbx + 0x49182444], cl ; mov edx, ebp ; test eax, eax ; setne dl ; jmp 0xc0293
0x0000000000099aaf : add byte ptr [rbx + 0x4c], bl ; mov eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008fa17 : add byte ptr [rbx + 0x4d8901c9], al ; je 0x8fa10 ; retf 0xfff8
0x000000000016b06f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00000000000eaeb2 : add byte ptr [rbx + 0x5b010447], al ; pop rbp ; pop r12 ; ret
0x000000000002b9ee : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000064255 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000044fca : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000039c48 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000044481 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000008d2ff : add byte ptr [rbx + 0x5e8c107], cl ; and eax, 1 ; ret
0x000000000002d772 : add byte ptr [rbx + 0x634807e2], al ; ror byte ptr [rax + 0x39], cl ; ret 0x8d0f
0x00000000000b5b59 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000032c75 : add byte ptr [rbx + 0x63], cl ; xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x000000000010b8ff : add byte ptr [rbx + 0x6890447], cl ; xor eax, eax ; ret
0x000000000011e0b6 : add byte ptr [rbx + 0x75c08500], cl ; adc edi, dword ptr [rax + 0x130] ; syscall
0x0000000000113446 : add byte ptr [rbx + 0x75c08500], cl ; adc edi, dword ptr [rax + 0x13] ; syscall
0x0000000000048ae6 : add byte ptr [rbx + 0x75c08500], cl ; adc edi, dword ptr [rax + 0x13e] ; syscall
0x00000000001134e6 : add byte ptr [rbx + 0x75c08500], cl ; adc edi, dword ptr [rax + 0x14] ; syscall
0x00000000001175c6 : add byte ptr [rbx + 0x75c08500], cl ; adc edi, dword ptr [rax + 0x1a] ; syscall
0x00000000000e15b6 : add byte ptr [rbx + 0x75c08500], cl ; adc edi, dword ptr [rax + 0x22] ; syscall
0x00000000000e1636 : add byte ptr [rbx + 0x75c08500], cl ; adc edi, dword ptr [rax + 0x23] ; syscall
0x000000000011eb16 : add byte ptr [rbx + 0x75c08500], cl ; adc edi, dword ptr [rax + 0x2a] ; syscall
0x000000000011ea46 : add byte ptr [rbx + 0x75c08500], cl ; adc edi, dword ptr [rax + 0x2b] ; syscall
0x000000000011ef56 : add byte ptr [rbx + 0x75c08500], cl ; adc edi, dword ptr [rax + 0x2e] ; syscall
0x000000000011edf6 : add byte ptr [rbx + 0x75c08500], cl ; adc edi, dword ptr [rax + 0x2f] ; syscall
0x0000000000114216 : add byte ptr [rbx + 0x75c08500], cl ; adc edi, dword ptr [rax + 0x4a] ; syscall
0x00000000001142c6 : add byte ptr [rbx + 0x75c08500], cl ; adc edi, dword ptr [rax + 0x4b] ; syscall
0x000000000010d7d6 : add byte ptr [rbx + 0x75c08500], cl ; adc edi, dword ptr [rax + 0x55] ; syscall
0x000000000010d016 : add byte ptr [rbx + 0x75c08500], cl ; adc edi, dword ptr [rax + 1] ; syscall
0x000000000010d666 : add byte ptr [rbx + 0x75c08500], cl ; adc edi, dword ptr [rax + 3] ; syscall
0x00000000001116e6 : add byte ptr [rbx + 0x75c08500], cl ; adc edi, dword ptr [rax + 7] ; syscall
0x000000000010d486 : add byte ptr [rbx + 0x75c08500], cl ; and edi, dword ptr [rax + 0x48] ; syscall
0x000000000012c79e : add byte ptr [rbx + 0x75c08500], cl ; cmp edi, dword ptr [rax + 0xe6] ; syscall
0x000000000010ce45 : add byte ptr [rbx + 0x75c08500], cl ; mov eax, 0x101 ; syscall
0x000000000008c1af : add byte ptr [rbx + 0x8042507], cl ; add byte ptr [rax], al ; ret
0x000000000002a1c1 : add byte ptr [rbx + 0x941f8e0], al ; ret 0x8944
0x00000000001189a4 : add byte ptr [rbx + 0x94801e2], al ; ret 0x8948
0x000000000008dd03 : add byte ptr [rbx + 0xc08b], cl ; add byte ptr [rbp + 0x4f0f48c9], al ; ret 0x8948
0x00000000001016d0 : add byte ptr [rbx + 0xe66110d], cl ; add byte ptr [rcx + 0x5b595a0a], cl ; ret
0x000000000016b71f : add byte ptr [rbx + 0xe8b0156], cl ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000016b6af : add byte ptr [rbx + 0xe8b0256], cl ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000016b63f : add byte ptr [rbx + 0xe8b0356], cl ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000008a2ef : add byte ptr [rbx + 0xf89cfe1], al ; ret
0x000000000018d32a : add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x000000000014cdf6 : add byte ptr [rbx + rax*4 + 0x38], ah ; add al, 0x75 ; ret
0x000000000012b76a : add byte ptr [rbx + rcx - 0x3d], dh ; nop ; xor eax, eax ; ret
0x000000000011e172 : add byte ptr [rbx + rcx*4 + 0x11], ah ; cmp edx, 0x26 ; je 0x11e1c4 ; ret
0x00000000000d2428 : add byte ptr [rbx + rcx*4 + 0x15], cl ; and byte ptr [rbp + 0x11], dl ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000013690a : add byte ptr [rbx + rcx*4 + 0x15], cl ; scasb al, byte ptr [rdi] ; sub byte ptr [rbx], cl ; add byte ptr [rcx - 0x3f], cl ; retf 0x6411
0x0000000000196109 : add byte ptr [rbx + rcx*4 + 0x3c], cl ; fmul dword ptr [rbx + rdi + 0x24] ; retf 0x3274
0x000000000009a607 : add byte ptr [rbx + rcx*4 + 0x41], cl ; or byte ptr [rax - 0x75], cl ; sbb byte ptr [r9 - 0x7d], al ; ret 0x4901
0x00000000000483f7 : add byte ptr [rbx + rcx*4 + 0x41], cl ; or byte ptr [rax - 0x77], cl ; retf
0x0000000000056bbc : add byte ptr [rbx + rcx*4 + 0x45], cl ; or byte ptr [rbx + rcx*4 + 0x4d], cl ; add byte ptr [rbp + 0x39], cl ; ret 0x860f
0x000000000004790f : add byte ptr [rbx + rcx*4 + 0x4b], cl ; adc byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000058547 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000056887 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000000f6918 : add byte ptr [rbx + rcx*4 + 0x72], cl ; cmp byte ptr [rax - 0x73], cl ; jl 0xf6951 ; and byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000095755 : add byte ptr [rbx + rcx*4 + 0x78], cl ; sbb byte ptr [rax - 0x73], cl ; and byte ptr [r9 + 0x39], cl ; ret 0x850f
0x000000000011ae88 : add byte ptr [rbx + rcx*4 + 0x7d], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000146065 : add byte ptr [rbx + rcx*4 + 5], cl ; retf
0x000000000006f7f5 : add byte ptr [rbx + rcx*4 - 0x5b], cl ; cmp bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0x4804
0x00000000001087af : add byte ptr [rbx + rcx*4 - 0x5c], cl ; and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000fbdff : add byte ptr [rbx + rcx*4 - 0x6c], cl ; and al, 8 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf
0x000000000006f4d2 : add byte ptr [rbx + rcx*4 - 0x6e], cl ; add qword ptr [rax], rax ; add byte ptr [rcx + 1], cl ; ret 0x3b45
0x0000000000054905 : add byte ptr [rbx + rcx*4 - 0x7c], cl ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x8b44
0x000000000010dae9 : add byte ptr [rbx + rdi + 0x34], cl ; and al, 0xf ; xchg eax, esp ; ret 0x2044
0x000000000015456f : add byte ptr [rbx - 0x138afe08], al ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x0000000000087258 : add byte ptr [rbx - 0x14f3db8c], cl ; ret 0x5590
0x00000000000ec68d : add byte ptr [rbx - 0x157cfe15], al ; add dword ptr [rax + 0x63], ecx ; retf
0x00000000000f3cdf : add byte ptr [rbx - 0x16f7dbb4], cl ; ret 0xfffe
0x000000000015639f : add byte ptr [rbx - 0x18], dl ; fidiv dword ptr [rdi - 0x74b70001] ; cmp byte ptr [rax - 0x77], cl ; ret
0x00000000000ecb7e : add byte ptr [rbx - 0x1e7efe1e], al ; add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; ret 0xc35b
0x0000000000111379 : add byte ptr [rbx - 0x2117c385], cl ; ret 0xffff
0x0000000000155d7b : add byte ptr [rbx - 0x218bfd02], al ; jmp 0x155d4d
0x00000000000e44f2 : add byte ptr [rbx - 0x2e74b], cl ; inc dword ptr [rbx - 0x30773] ; call qword ptr [rax]
0x0000000000155c6f : add byte ptr [rbx - 0x2ec6d7b1], cl ; jae 0x155c8a ; xor eax, eax ; ret
0x0000000000155caf : add byte ptr [rbx - 0x2ec6d7b1], cl ; jae 0x155cca ; xor eax, eax ; ret
0x0000000000155cae : add byte ptr [rbx - 0x2ec6d7b1], cl ; jae 0x155ccb ; xor eax, eax ; ret
0x00000000000a6a79 : add byte ptr [rbx - 0x307cc019], al ; add byte ptr [rax - 0x78], 0x7d ; ret 0x8944
0x0000000000151cb5 : add byte ptr [rbx - 0x39], bl ; add eax, 0x97f5f ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000151bd5 : add byte ptr [rbx - 0x39], bl ; add eax, 0x9803f ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000151af5 : add byte ptr [rbx - 0x39], bl ; add eax, 0x9811f ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000151a2d : add byte ptr [rbx - 0x39], bl ; add eax, 0x981e7 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000012befd : add byte ptr [rbx - 0x39], bl ; add eax, 0xbe4b7 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000086ddf : add byte ptr [rbx - 0x3b7cb7ff], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000155f1b : add byte ptr [rbx - 0x3d], bl ; nop ; ret
0x0000000000048bd9 : add byte ptr [rbx - 0x3e8bfb08], al ; mov eax, 0xffffffff ; ret
0x000000000011b7ab : add byte ptr [rbx - 0x3f7ac7c0], cl ; cmove eax, edx ; ret
0x0000000000140036 : add byte ptr [rbx - 0x3f7ae7c0], cl ; jne 0x140048 ; ret
0x00000000000ba96a : add byte ptr [rbx - 0x3f7cfe3e], al ; add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0x518d
0x0000000000121447 : add byte ptr [rbx - 0x3fcecf11], al ; cmp edi, 9 ; setbe al ; ret
0x0000000000155e9f : add byte ptr [rbx - 0x47fbd7b9], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000015154a : add byte ptr [rbx - 0x48], bl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000012119b : add byte ptr [rbx - 0x48f0f440], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000012165b : add byte ptr [rbx - 0x48f0f540], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000012135b : add byte ptr [rbx - 0x48f0f640], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000001212cb : add byte ptr [rbx - 0x48f0f740], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000012151b : add byte ptr [rbx - 0x48f0f840], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000001215bb : add byte ptr [rbx - 0x48f0f940], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000001216eb : add byte ptr [rbx - 0x48f0fa40], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000012181b : add byte ptr [rbx - 0x48f0fb40], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000001213eb : add byte ptr [rbx - 0x48f0fc40], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000012122b : add byte ptr [rbx - 0x48f0fd40], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000012147b : add byte ptr [rbx - 0x48f0fe40], al ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x000000000013e38a : add byte ptr [rbx - 0x49f0fe0d], al ; ret
0x000000000007e3a7 : add byte ptr [rbx - 0x4ff43], al ; call qword ptr [rax]
0x00000000000ba981 : add byte ptr [rbx - 0x50f0fe3e], al ; ret 0xe9e9
0x000000000013b36f : add byte ptr [rbx - 0x548afe06], al ; jmp 0x13b340
0x0000000000068f93 : add byte ptr [rbx - 0x5a773], cl ; inc dword ptr [rbx - 0x78f0d007] ; retf 0x14
0x0000000000066f52 : add byte ptr [rbx - 0x5a773], cl ; inc dword ptr [rbx - 0x78f0d007] ; retf 0x21
0x0000000000065289 : add byte ptr [rbx - 0x61f43], al ; call qword ptr [rax]
0x0000000000064f5e : add byte ptr [rbx - 0x63773], al ; inc dword ptr [rcx + rbp*8] ; ret
0x000000000013b3f7 : add byte ptr [rbx - 0x708afe06], al ; mov eax, 0xffffffff ; ret
0x00000000000ef354 : add byte ptr [rbx - 0x72bed3af], cl ; add dword ptr [rcx], edi ; ret 0x8e0f
0x000000000012213a : add byte ptr [rbx - 0x74b7fe3f], al ; push rsp ; retf 0x8b40
0x0000000000047cf4 : add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x0000000000089fdd : add byte ptr [rbx - 0x760e76cd], cl ; ret 0xe181
0x0000000000190f9f : add byte ptr [rbx - 0x76b7c017], al ; ret 0xd348
0x0000000000103e27 : add byte ptr [rbx - 0x76b7fd07], al ; ret 0x940f
0x000000000002e906 : add byte ptr [rbx - 0x76bef808], al ; ret
0x00000000000de17f : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000005f51c : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000013b0fd : add byte ptr [rbx - 0x77], dl ; retf
0x000000000013b08c : add byte ptr [rbx - 0x77bffe12], al ; ja 0x13b09d ; ret
0x00000000000aac54 : add byte ptr [rbx - 0x79f0ef06], al ; ret 0
0x00000000000c2bad : add byte ptr [rbx - 0x7af08f08], al ; retf 1
0x00000000000f0efc : add byte ptr [rbx - 0x7af7db84], cl ; push qword ptr [rbx - 0xa] ; ret
0x0000000000089014 : add byte ptr [rbx - 0x7bf00008], al ; retf 0
0x000000000018fb66 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000000fc524 : add byte ptr [rbx - 0x7bf0f002], al ; ret 0
0x00000000000f49c4 : add byte ptr [rbx - 0x7bf0f006], al ; cli ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; retf 0x8b48
0x00000000000f958e : add byte ptr [rbx - 0x7bf0f006], al ; int1 ; sbb al, 0 ; add byte ptr [rax + 0x63], cl ; retf 0x8b48
0x000000000003b159 : add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000003e0c8 : add byte ptr [rbx - 0x7bf0fc06], al ; retf
0x000000000003e8ff : add byte ptr [rbx - 0x7bf0fc07], al ; ret 0x29
0x000000000003c74b : add byte ptr [rbx - 0x7bf0fc07], al ; ret 0xe
0x000000000003e46c : add byte ptr [rbx - 0x7bf0fc08], al ; retf 0
0x000000000003a7e0 : add byte ptr [rbx - 0x7bf0fe07], al ; jmp qword ptr [rax]
0x00000000000401c4 : add byte ptr [rbx - 0x7bf0fe07], al ; ret
0x000000000008fe8f : add byte ptr [rbx - 0x7c2e76ed], cl ; retf 0x8320
0x00000000000ef38c : add byte ptr [rbx - 0x7cb7fd16], al ; ret 0xeb02
0x0000000000186a73 : add byte ptr [rbx - 0x7cf0fb06], al ; ret
0x000000000011789f : add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x0000000000034df7 : add byte ptr [rbx], ah ; ja 0x34e16 ; lea rax, [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x0000000000086045 : add byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000036836 : add byte ptr [rbx], bl ; add byte ptr [rax + 1], cl ; retf 0x8948
0x00000000000ce9ab : add byte ptr [rbx], cl ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x00000000000cea99 : add byte ptr [rbx], cl ; add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x000000000013b35f : add byte ptr [rcx + 0x11894dd0], cl ; ret
0x00000000000d8e99 : add byte ptr [rcx + 0x146348c2], cl ; xchg eax, edi ; add rdx, rdi ; jmp rdx
0x000000000014707b : add byte ptr [rcx + 0x146349c1], cl ; mov byte ptr [rcx + rax - 0x3e], cl ; jmp rdx
0x00000000000a717f : add byte ptr [rcx + 0x146349c2], cl ; nop ; add rdx, r8 ; jmp rdx
0x000000000014bd82 : add byte ptr [rcx + 0x1b802], cl ; add byte ptr [rax], al ; ret
0x00000000000e15d8 : add byte ptr [rcx + 0x22b8c7], cl ; add byte ptr [rax], al ; syscall
0x0000000000091c37 : add byte ptr [rcx + 0x29], cl ; enter -0x72bf, 0x40 ; inc ebx ; xor eax, eax ; ret
0x000000000007d8cc : add byte ptr [rcx + 0x29], cl ; ret
0x000000000017c7d5 : add byte ptr [rcx + 0x29], cl ; retf
0x00000000000b5741 : add byte ptr [rcx + 0x29], cl ; retf 0x394d
0x0000000000088bbf : add byte ptr [rcx + 0x2b], cl ; adc byte ptr [r8 + 1], r9b ; ret
0x000000000017618f : add byte ptr [rcx + 0x3518911], cl ; ret
0x00000000000f8013 : add byte ptr [rcx + 0x39], al ; ret
0x00000000000f0894 : add byte ptr [rcx + 0x39], al ; ret 0x2f73
0x0000000000139b20 : add byte ptr [rcx + 0x39], al ; ret 0x840f
0x00000000000f6f8b : add byte ptr [rcx + 0x39], al ; ret 0x8f0f
0x000000000008910f : add byte ptr [rcx + 0x39], cl ; jmp 0xfffffffffe991532
0x000000000009f22f : add byte ptr [rcx + 0x39], cl ; ret
0x0000000000093401 : add byte ptr [rcx + 0x39], cl ; ret 0x2977
0x000000000014fbfc : add byte ptr [rcx + 0x3b84843], cl ; add byte ptr [rax], al ; add cl, ch ; ret 0xfff8
0x0000000000160ddc : add byte ptr [rcx + 0x3eb8c7], cl ; add byte ptr [rax], al ; syscall
0x00000000000de1a2 : add byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000083e0f : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000158115 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x00000000000d8e54 : add byte ptr [rcx + 0x46348ce], cl ; mov bh, 0x48 ; add eax, edi ; jmp rax
0x00000000000e2ff8 : add byte ptr [rcx + 0x46348f6], cl ; mov dl, 0x48 ; add eax, edx ; jmp rax
0x0000000000114824 : add byte ptr [rcx + 0x480575d0], cl ; add esp, 0x58 ; ret
0x0000000000156212 : add byte ptr [rcx + 0x480675d0], cl ; add esp, 0x10 ; pop rbx ; ret
0x000000000015077a : add byte ptr [rcx + 0x480675d0], cl ; sub esp, -0x80 ; pop rbx ; ret
0x0000000000113d15 : add byte ptr [rcx + 0x480d75d0], cl ; add esp, 0x28 ; ret
0x0000000000150e6d : add byte ptr [rcx + 0x481575d0], cl ; add esp, 0x10 ; pop rbx ; ret
0x00000000001515ce : add byte ptr [rcx + 0x482475d8], cl ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000d333e : add byte ptr [rcx + 0x48d23102], cl ; add esp, 8 ; mov rax, rdx ; ret
0x00000000001016d6 : add byte ptr [rcx + 0x5b595a0a], cl ; ret
0x0000000000117d7a : add byte ptr [rcx + 0x5b], bl ; pop rbp ; pop r12 ; ret
0x00000000000356cd : add byte ptr [rcx + 0x5c], al ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000000a0dab : add byte ptr [rcx + 0x5c], al ; pop r13 ; pop r14 ; ret
0x0000000000133e7b : add byte ptr [rcx + 0x5c], al ; pop r13 ; ret
0x00000000000ce8a8 : add byte ptr [rcx + 0x5c], al ; pop r14 ; mov dword ptr [r11 + 0xc], r8d ; ret
0x000000000012c89b : add byte ptr [rcx + 0x5c], al ; pop rbp ; ret
0x00000000000dbb79 : add byte ptr [rcx + 0x5d], al ; pop r14 ; jmp rax
0x0000000000163a0e : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000018aeec : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00000000000b52e8 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000013b157 : add byte ptr [rcx + 0x63], cl ; ret
0x00000000000610d8 : add byte ptr [rcx + 0x63], cl ; ret 0x8d49
0x000000000005b5c2 : add byte ptr [rcx + 0x63], cl ; ret 0xf631
0x0000000000075227 : add byte ptr [rcx + 0x63], cl ; ror dword ptr [rax - 0x7d], 1 ; ret 0xe920
0x00000000000e3a0f : add byte ptr [rcx + 0x71e9e8df], cl ; std ; dec dword ptr [rax - 0x77] ; ret 0x1e9
0x00000000000d08d2 : add byte ptr [rcx + 0x76bc2], al ; add byte ptr [rdi], cl ; ret 0xf8c1
0x00000000000352bf : add byte ptr [rcx + 0x7fe083f8], cl ; ret
0x00000000000a6fda : add byte ptr [rcx + 0xc6349c1], cl ; mov dword ptr [rcx + rax - 0x37], ecx ; jmp rcx
0x000000000010198f : add byte ptr [rcx + 0xcb], bh ; mov eax, ecx ; syscall
0x000000000010198e : add byte ptr [rcx + 0xcb], dil ; mov eax, ecx ; syscall
0x000000000009e4ec : add byte ptr [rcx + 0xf48000d], cl ; ret 0x66c3
0x000000000014f2f8 : add byte ptr [rcx + 0xf], al ; adc dword ptr [rax + 0x20], edx ; ret
0x000000000014e9cd : add byte ptr [rcx + 0xf], al ; adc dword ptr [rax + 8], eax ; ret
0x00000000000600bf : add byte ptr [rcx + 0xf], al ; mov dh, 0x50 ; or al, 0xf6 ; ret 0xf01
0x000000000007a9ec : add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0x83 ; ret
0x000000000007a980 : add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x00000000000293e9 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; mov byte ptr [rcx + 0xf], 0x95 ; ret
0x00000000000a10f0 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x3948
0x0000000000190de8 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000000b9c5f : add byte ptr [rcx + 1], cl ; ret
0x000000000006f4d9 : add byte ptr [rcx + 1], cl ; ret 0x3b45
0x000000000010bd9a : add byte ptr [rcx + rax - 0x18], cl ; jmp rax
0x00000000000c524b : add byte ptr [rcx + rax - 0x3d], dh ; or eax, 0xffffffff ; ret
0x000000000011264c : add byte ptr [rcx + rbp - 0x48], dh ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x000000000013e5f6 : add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x1f0f
0x000000000013efba : add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x33e9
0x000000000013e4f2 : add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0xf41
0x000000000013f0f8 : add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0xfee9
0x0000000000033752 : add byte ptr [rcx + rcx*4 + 0x25], al ; ret 0x1b30
0x000000000013ee90 : add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x8944
0x000000000013f08e : add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x93e9
0x00000000000de2a1 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x00000000000de36b : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x000000000013f012 : add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x43e9
0x0000000000146695 : add byte ptr [rcx + rcx*4 + 0x54], cl ; and al, 0x18 ; lea r9, [rsp + 0x40] ; call qword ptr [rax]
0x00000000000ced0d : add byte ptr [rcx + rcx*4 + 0x64], cl ; and al, 0x50 ; mov rsi, r13 ; mov rdi, rbp ; call rbx
0x000000000008a8e0 : add byte ptr [rcx + rcx*4 + 0x6d], al ; jo 0x8a8d5 ; retf 0xfffe
0x00000000000a7037 : add byte ptr [rcx + rcx*4 + 7], al ; add rax, rdi ; ret
0x00000000000dd513 : add byte ptr [rcx + rcx*4 - 0x10], cl ; call rax
0x000000000012913f : add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x1257ea
0x0000000000108e47 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0x250b6
0x0000000000028364 : add byte ptr [rcx + rcx*4 - 0x19], cl ; mov rcx, qword ptr [rbp - 0x70] ; call rcx
0x000000000008d55f : add byte ptr [rcx + rcx*4 - 0x1d], cl ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010d35f : add byte ptr [rcx + rcx*4 - 0x1e], al ; mov eax, 0x10d ; syscall
0x000000000009c68f : add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov ebp, 0x400 ; xor eax, eax ; jmp 0x9c66a
0x0000000000080ccd : add byte ptr [rcx + rcx*4 - 0x28], al ; jmp 0x80c9a
0x00000000001129ab : add byte ptr [rcx + rcx*4 - 0x30], al ; mov r12d, dword ptr fs:[r8] ; syscall
0x000000000008a605 : add byte ptr [rcx + rcx*4 - 0x30], al ; pop rbx ; ret
0x000000000011fd9c : add byte ptr [rcx + rcx*4 - 0x3a], cl ; mov edi, ebx ; mov eax, 0x14 ; syscall
0x000000000011ff25 : add byte ptr [rcx + rcx*4 - 0x3a], cl ; mov edi, ebx ; mov eax, r14d ; syscall
0x000000000008571d : add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x0000000000094d5e : add byte ptr [rcx + rcx*4 - 0x40], cl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000018ad42 : add byte ptr [rcx + rcx*4 - 0x40], cl ; shr rax, 2 ; vzeroupper ; ret
0x00000000001863cf : add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x00000000000a1977 : add byte ptr [rcx + rcx*4 - 0x6c], al ; and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x8b48
0x0000000000089c62 : add byte ptr [rcx + rcx*4 - 1], cl ; lea r9, [rbp - 0x40] ; call r12
0x000000000009bdb5 : add byte ptr [rcx + rcx*4 - 1], cl ; mov rdx, rbx ; mov rsi, r12 ; call rax
0x000000000009b19d : add byte ptr [rcx + rcx*4 - 6], cl ; mov rdi, r13 ; call rax
0x0000000000133c0d : add byte ptr [rcx + rcx*4 - 6], cl ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000129b27 : add byte ptr [rcx + rcx*4 - 9], cl ; call 0x125d86
0x000000000015ece9 : add byte ptr [rcx + rcx*4 - 9], cl ; call 0x12b796
0x00000000001369b0 : add byte ptr [rcx + rcx*4 - 9], cl ; call 0x142ca6
0x0000000000038f1c : add byte ptr [rcx + rcx*4 - 9], cl ; call 0x25146
0x0000000000028416 : add byte ptr [rcx + rcx*4 - 9], cl ; mov rax, qword ptr [rbp - 0x68] ; call rax
0x0000000000038e61 : add byte ptr [rcx + rcx*4 - 9], cl ; mov rbx, r14 ; call 0x25149
0x00000000000dd636 : add byte ptr [rcx + rdi + 0x3d], cl ; ret 0x10
0x0000000000098898 : add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x98866 ; ret
0x000000000010cd4c : add byte ptr [rcx - 0x176b70e], cl ; mov edi, 0xffffff9c ; syscall
0x000000000010674d : add byte ptr [rcx - 0x39], cl ; add byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000005029e : add byte ptr [rcx - 0x39], cl ; ret 0xc001
0x000000000004d50e : add byte ptr [rcx - 0x39], cl ; ret 0xfc01
0x000000000004a48e : add byte ptr [rcx - 0x39], cl ; ret 0xff81
0x000000000009d7cd : add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x0000000000115d0b : add byte ptr [rcx - 0x3a], al ; inc dword ptr [rax] ; ret
0x0000000000112c35 : add byte ptr [rcx - 0x3f76be21], cl ; mov eax, 0x10 ; syscall
0x0000000000136911 : add byte ptr [rcx - 0x3f], cl ; retf 0x6411
0x000000000010b90f : add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x000000000013d310 : add byte ptr [rcx - 0x41], al ; add eax, 0x83000000 ; ret
0x00000000001906d1 : add byte ptr [rcx - 0x44], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf 0x8949
0x00000000000507f2 : add byte ptr [rcx - 0x45], al ; adc r8d, dword ptr [r8] ; add byte ptr [rbp + 0x29], cl ; ret
0x000000000004416f : add byte ptr [rcx - 0x46], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x0000000000044025 : add byte ptr [rcx - 0x46], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000010d68b : add byte ptr [rcx - 0x473d7621], cl ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000190776 : add byte ptr [rcx - 0x47], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001939b7 : add byte ptr [rcx - 0x47], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894d
0x000000000014537c : add byte ptr [rcx - 0x63e993f], cl ; xadd edx, edi ; adc ch, byte ptr [rcx] ; retf 0xc8d
0x000000000014216f : add byte ptr [rcx - 0x73], al ; ret
0x00000000000e8a70 : add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 - 0x6bf0a206], r8d ; ret 0xb60f
0x00000000001933f5 : add byte ptr [rcx - 0x73], cl ; push rcx ; add edi, esi ; ret 0x7ffe
0x0000000000111402 : add byte ptr [rcx - 0x74ba9b21], cl ; call 0x10d669
0x000000000003785d : add byte ptr [rcx - 0x75], al ; push rbp ; or byte ptr [rcx - 0x75], al ; or al, 0xf ; retf 0x5589
0x00000000000378ab : add byte ptr [rcx - 0x75], al ; push rbp ; sbb byte ptr [rdi], cl ; retf 0xd289
0x00000000001195ec : add byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x85 ; ret 2
0x000000000011925a : add byte ptr [rcx - 0x75], cl ; call r12
0x000000000003dbdc : add byte ptr [rcx - 0x75], cl ; jg 0x3dc00 ; call 0x39ec7
0x000000000011919a : add byte ptr [rcx - 0x75], cl ; jge 0x1191a5 ; call r12
0x00000000001191ca : add byte ptr [rcx - 0x75], cl ; jge 0x1191d5 ; call r12
0x00000000001191fa : add byte ptr [rcx - 0x75], cl ; jge 0x119205 ; call r12
0x000000000015250a : add byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x0000000000091204 : add byte ptr [rcx - 0x75], cl ; test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000008679f : add byte ptr [rcx - 0x75], cl ; xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000000920c8 : add byte ptr [rcx - 0x75], cl ; xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000000f5567 : add byte ptr [rcx - 0x762e7638], cl ; ret 0x9066
0x00000000000f317f : add byte ptr [rcx - 0x762f763f], cl ; retf 0x2e66
0x00000000000803b8 : add byte ptr [rcx - 0x76b3d395], cl ; retf 0x8348
0x00000000000806c8 : add byte ptr [rcx - 0x76b3d795], cl ; retf 0x8949
0x000000000013a499 : add byte ptr [rcx - 0x76b7f3a9], cl ; ret
0x00000000000a7107 : add byte ptr [rcx - 0x776b7f1], cl ; ret
0x0000000000026626 : add byte ptr [rcx - 0x77], al ; ret
0x00000000000bdfec : add byte ptr [rcx - 0x77], al ; ret 0x4489
0x000000000008a63a : add byte ptr [rcx - 0x77], al ; ret 0x7ce9
0x00000000000a1c8b : add byte ptr [rcx - 0x77], al ; ret 0x8348
0x00000000000a112e : add byte ptr [rcx - 0x77], al ; ret 0x860f
0x00000000000a197f : add byte ptr [rcx - 0x77], al ; ret 0x8b48
0x00000000000326e8 : add byte ptr [rcx - 0x77], al ; ret 0xf883
0x000000000013b37f : add byte ptr [rcx - 0x77], al ; retf
0x000000000011219f : add byte ptr [rcx - 0x77], al ; retf 0x8548
0x00000000000c5fe6 : add byte ptr [rcx - 0x77], al ; retf 0x8945
0x00000000000e1466 : add byte ptr [rcx - 0x77], al ; retf 0x8b
0x000000000011e1cf : add byte ptr [rcx - 0x77], al ; retf 0xf983
0x000000000013b0af : add byte ptr [rcx - 0x77], al ; rol dword ptr [rax - 0x69f0fe07], cl ; ret 0x8341
0x000000000011ae84 : add byte ptr [rcx - 0x77], cl ; add byte ptr [r11 + rcx*4 + 0x7d], r9b ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000ede85 : add byte ptr [rcx - 0x77], cl ; dec byte ptr [rax - 0x77] ; retf 0xd349
0x00000000000d692f : add byte ptr [rcx - 0x77], cl ; enter -0x36cf, -0x17 ; retf 0xffff
0x000000000007edc9 : add byte ptr [rcx - 0x77], cl ; int1 ; jmp rax
0x000000000007e161 : add byte ptr [rcx - 0x77], cl ; int1 ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdx ; jmp rax
0x000000000004bfb0 : add byte ptr [rcx - 0x77], cl ; ret
0x0000000000051f0d : add byte ptr [rcx - 0x77], cl ; ret 0x1f0f
0x0000000000077d84 : add byte ptr [rcx - 0x77], cl ; ret 0x3145
0x000000000019262e : add byte ptr [rcx - 0x77], cl ; ret 0x8166
0x000000000002ae21 : add byte ptr [rcx - 0x77], cl ; ret 0xf685
0x000000000009d76f : add byte ptr [rcx - 0x77], cl ; retf
0x000000000011e83f : add byte ptr [rcx - 0x77], cl ; retf 0x1eb8
0x000000000007e577 : add byte ptr [rcx - 0x77], cl ; retf 0x2948
0x000000000011e2ff : add byte ptr [rcx - 0x77], cl ; retf 0x2db8
0x000000000011dd8f : add byte ptr [rcx - 0x77], cl ; retf 0x2eb8
0x000000000011e8cf : add byte ptr [rcx - 0x77], cl ; retf 0x2fb8
0x000000000011f13f : add byte ptr [rcx - 0x77], cl ; retf 0x35b8
0x000000000011e92f : add byte ptr [rcx - 0x77], cl ; retf 0x36b8
0x000000000011ec0f : add byte ptr [rcx - 0x77], cl ; retf 0x37b8
0x00000000000e142f : add byte ptr [rcx - 0x77], cl ; retf 0x3db8
0x000000000010e1df : add byte ptr [rcx - 0x77], cl ; retf 0x4b8
0x000000000006066a : add byte ptr [rcx - 0x77], cl ; retf 0x894c
0x000000000010b306 : add byte ptr [rcx - 0x77], cl ; retf 0x8b
0x0000000000063a3f : add byte ptr [rcx - 0x77], cl ; retf 0x8b8
0x000000000010e9cf : add byte ptr [rcx - 0x77], cl ; retf 0x9b8
0x000000000011e6ef : add byte ptr [rcx - 0x77], cl ; retf 0x9db8
0x000000000011e62f : add byte ptr [rcx - 0x77], cl ; retf 0xa5b8
0x000000000011e50f : add byte ptr [rcx - 0x77], cl ; retf 0xafb8
0x000000000010ea8f : add byte ptr [rcx - 0x77], cl ; retf 0xbb8
0x000000000011b9cf : add byte ptr [rcx - 0x77], cl ; retf 0xbcb8
0x000000000011b96f : add byte ptr [rcx - 0x77], cl ; retf 0xbdb8
0x000000000011b84f : add byte ptr [rcx - 0x77], cl ; retf 0xbeb8
0x000000000011b8df : add byte ptr [rcx - 0x77], cl ; retf 0xc0b8
0x00000000001176bf : add byte ptr [rcx - 0x77], cl ; retf 0xd8b8
0x000000000011f9bf : add byte ptr [rcx - 0x77], cl ; retf 0xdcb8
0x000000000011e4af : add byte ptr [rcx - 0x77], cl ; retf 0xe9b8
0x0000000000078c09 : add byte ptr [rcx - 0x77], cl ; rol byte ptr [rcx - 1], cl ; jrcxz 0x78ba2 ; ret 0xc083
0x000000000012d676 : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], cl ; retf 0x894c
0x00000000000c0dd7 : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x00000000000ecc83 : add byte ptr [rcx - 0x7af0b3bd], cl ; retf
0x0000000000194af3 : add byte ptr [rcx - 0x7b], cl ; ret 0x7775
0x0000000000190abb : add byte ptr [rcx - 0x7d], al ; call 0xffffffffca9d19cb
0x0000000000077b0d : add byte ptr [rcx - 0x7d], al ; out dx, al ; add dword ptr [rax - 0x50f43], eax ; jmp qword ptr [rax]
0x000000000007b8f7 : add byte ptr [rcx - 0x7d], al ; out dx, al ; add dword ptr [rax - 0x90f43], eax ; jmp qword ptr [rax]
0x00000000000fc9d7 : add byte ptr [rcx - 0x7d], al ; ret
0x000000000004b226 : add byte ptr [rcx - 0x7d], al ; ret 0x4418
0x000000000004e26a : add byte ptr [rcx - 0x7d], al ; ret 0x4835
0x000000000005b023 : add byte ptr [rcx - 0x7d], al ; ret 0x4840
0x00000000000be3e0 : add byte ptr [rcx - 0x7d], al ; ret 0x4c35
0x0000000000194707 : add byte ptr [rcx - 0x7d], al ; retf 0x4801
0x000000000002674c : add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x00000000001914dc : add byte ptr [rcx - 0x7d], al ; test dword ptr [rcx], 0x40003d ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8441
0x000000000017c86f : add byte ptr [rcx - 0x7d], cl ; jmp 0x17c88b
0x000000000018449b : add byte ptr [rcx - 0x7d], cl ; jmp 0x1844b7
0x0000000000184a9b : add byte ptr [rcx - 0x7d], cl ; jmp 0x184ab7
0x0000000000184d9b : add byte ptr [rcx - 0x7d], cl ; jmp 0x184db7
0x000000000018509b : add byte ptr [rcx - 0x7d], cl ; jmp 0x1850b7
0x000000000018539b : add byte ptr [rcx - 0x7d], cl ; jmp 0x1853b7
0x000000000018569b : add byte ptr [rcx - 0x7d], cl ; jmp 0x1856b7
0x00000000000ad68b : add byte ptr [rcx - 0x7d], cl ; jmp 0xad6a7
0x000000000006f544 : add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000120b9c : add byte ptr [rcx - 0x7d], cl ; ret 0x3101
0x000000000009e901 : add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x00000000000c027f : add byte ptr [rcx - 0x7d], cl ; ret 0x4104
0x000000000006f575 : add byte ptr [rcx - 0x7d], cl ; ret 0x4904
0x00000000000ea14f : add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x00000000000e73b7 : add byte ptr [rcx - 0x7d], cl ; ret 0x4c04
0x000000000016105f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000009e88f : add byte ptr [rcx - 0x7d], cl ; ret 0xbd01
0x00000000000773d4 : add byte ptr [rcx - 0x7d], cl ; ret 0xbe01
0x00000000000a774f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000006f52d : add byte ptr [rcx - 0x7d], cl ; rol dword ptr [rcx + rcx*2], 1 ; ret
0x00000000000932fe : add byte ptr [rcx - 0x80], al ; clc ; add dword ptr [rdi + rcx + 0x44], eax ; ret 0xf641
0x000000000008f9af : add byte ptr [rcx - 0x80], al ; enter 0x4c80, -0x77 ; retf 0x7e9
0x000000000008f8ef : add byte ptr [rcx - 0x80], al ; enter 0x4c80, -0x77 ; retf 0x99e9
0x000000000008f927 : add byte ptr [rcx - 0x80], al ; enter 0x4c80, -0x77 ; retf 0xb9e9
0x000000000008f887 : add byte ptr [rcx - 0x80], al ; enter 0x4c80, -0x77 ; retf 0xd3e9
0x000000000008f937 : add byte ptr [rcx - 0x80], al ; enter 0x4c80, -0x77 ; retf 0xdce9
0x00000000001080f9 : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x0000000000108103 : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdx]
0x000000000012ad97 : add byte ptr [rcx - 0x877b], cl ; dec dword ptr [rax - 0x7d] ; ret
0x000000000002a6e9 : add byte ptr [rcx - 0xa], al ; ret
0x0000000000150713 : add byte ptr [rcx - 1], al ; adc bl, byte ptr [rdx + 0x31] ; rcr byte ptr [rcx - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x3d83
0x000000000008fbf1 : add byte ptr [rcx - 1], al ; xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000000a27b1 : add byte ptr [rcx - 9], al ; ret 0
0x00000000000a27a4 : add byte ptr [rcx - 9], al ; ret 0xf800
0x00000000000c1a53 : add byte ptr [rcx - 9], cl ; fmul dword ptr [rcx - 0x39] ; ret 0xffff
0x00000000000aae22 : add byte ptr [rcx - 9], cl ; ret 1
0x00000000000aae48 : add byte ptr [rcx - 9], cl ; ret 2
0x00000000000d0695 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add al, ch ; adc dword ptr [rbx - 9], esp ; dec dword ptr [rax - 0x77] ; ret
0x0000000000093536 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add eax, 0x150d4e ; ret
0x0000000000093509 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add eax, 0x150d73 ; ret
0x00000000000934e9 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add eax, 0x150d8b ; ret
0x0000000000147c72 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000035489 : add byte ptr [rcx], al ; add byte ptr [rax], al ; and eax, esi ; ret
0x000000000018e440 : add byte ptr [rcx], al ; add byte ptr [rax], al ; cmp rdx, rcx ; jne 0x18e42e ; vzeroupper ; ret
0x0000000000147acd : add byte ptr [rcx], al ; add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x0000000000112d03 : add byte ptr [rcx], al ; add byte ptr [rax], al ; mov word ptr [rdi + 0x16], ax ; ret
0x000000000013acea : add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000b9e6f : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x00000000000b9f0f : add byte ptr [rcx], al ; add byte ptr [rax], al ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x00000000001063e8 : add byte ptr [rcx], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000475b7 : add byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011264a : add byte ptr [rcx], al ; je 0x112682 ; mov eax, 0x101 ; syscall
0x000000000009e234 : add byte ptr [rcx], al ; je 0x9e1f5 ; ret
0x00000000000bb3d4 : add byte ptr [rcx], al ; je 0xbb395 ; ret
0x0000000000101bf2 : add byte ptr [rcx], al ; mov edx, 2 ; cmove eax, edx ; ret
0x00000000000351d4 : add byte ptr [rcx], al ; movzx eax, ax ; ret
0x0000000000155eaf : add byte ptr [rcx], al ; push rdi ; sub byte ptr [rax + 1], bh ; ret
0x00000000000929ed : add byte ptr [rcx], al ; ret
0x000000000005490d : add byte ptr [rcx], al ; ret 0x8b44
0x00000000000547af : add byte ptr [rcx], al ; ret 0x8b4c
0x0000000000042c71 : add byte ptr [rcx], al ; retf 0xfe0d
0x00000000000e32e8 : add byte ptr [rcx], al ; sbb dword ptr [rdx + rdi*4 + 0x7f], edx ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x56e9
0x00000000000e3502 : add byte ptr [rcx], al ; sbb dword ptr [rdx + rdi*4 + 0x7f], edx ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x0000000000189faf : add byte ptr [rcx], bh ; enter 0x2c75, -0x7d ; ret 0x8104
0x00000000000339b6 : add byte ptr [rcx], bh ; jp 0x339fd ; jbe 0x339da ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000000c88e7 : add byte ptr [rcx], bh ; ret
0x00000000000f54eb : add byte ptr [rcx], bh ; ret 0x2476
0x00000000000eaef7 : add byte ptr [rcx], bh ; ret 0x840f
0x00000000000f530b : add byte ptr [rcx], bh ; retf 0x3076
0x000000000012bd8f : add byte ptr [rcx], bh ; sal byte ptr [rbp + 8], 1 ; nop ; mov eax, 0xca ; syscall
0x00000000000d2a8c : add byte ptr [rcx], bh ; xlatb ; sete al ; add eax, 0x16d ; ret
0x0000000000192d64 : add byte ptr [rcx], bl ; sal bh, cl ; shl byte ptr [rsi - 0x7f], cl ; ret 0x7fff
0x0000000000192f02 : add byte ptr [rcx], bl ; shl byte ptr [rsi - 0x7f], cl ; ret 0x7fff
0x00000000001818ef : add byte ptr [rcx], ch ; enter 0x1d75, -0x7d ; ret 0x8101
0x0000000000181daf : add byte ptr [rcx], ch ; enter 0x2275, -0x7d ; ret 0x8101
0x000000000009d641 : add byte ptr [rcx], ch ; ret
0x00000000000d5c80 : add byte ptr [rcx], ch ; ret 0x2941
0x00000000000d7ccd : add byte ptr [rcx], ch ; ret 0x448d
0x00000000000d3294 : add byte ptr [rcx], ch ; ret 0x858b
0x00000000000fbd93 : add byte ptr [rcx], ch ; ret 0x8941
0x00000000000da348 : add byte ptr [rcx], ch ; ret 0x8944
0x00000000000d9db6 : add byte ptr [rcx], ch ; ret 0x8948
0x00000000000d7db1 : add byte ptr [rcx], ch ; ret 0x894c
0x00000000000da4f6 : add byte ptr [rcx], ch ; ret 0x8b48
0x00000000000da3f7 : add byte ptr [rcx], ch ; ret 0x8d41
0x00000000000d83b8 : add byte ptr [rcx], ch ; ret 0x8d44
0x00000000000db08f : add byte ptr [rcx], ch ; ret 0x8d45
0x0000000000113223 : add byte ptr [rcx], ch ; ret 0xc085
0x00000000000d5d07 : add byte ptr [rcx], ch ; ret 0xc889
0x00000000000d6f44 : add byte ptr [rcx], ch ; ret 0xd089
0x00000000000d31ba : add byte ptr [rcx], ch ; ret 0xd129
0x00000000000d0dac : add byte ptr [rcx], ch ; ror byte ptr [rbp + 0x480f0750], 1 ; ret 0x8341
0x0000000000042169 : add byte ptr [rcx], cl ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000089276 : add byte ptr [rcx], cl ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000012f31e : add byte ptr [rcx], cl ; clc ; bswap eax ; ret
0x0000000000054981 : add byte ptr [rcx], cl ; retf 0x7c83
0x000000000010e71c : add byte ptr [rcx], cl ; retf 0xea81
0x0000000000042ab2 : add byte ptr [rcx], cl ; ror byte ptr [rcx - 0x24efdbbc], 1 ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x00000000001919d5 : add byte ptr [rcx], dh ; dec dword ptr [rax + 9] ; ret
0x0000000000084f2f : add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; clc ; ret
0x0000000000134ca4 : add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000120101 : add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x0000000000194006 : add byte ptr [rcx], dh ; dec dword ptr [rcx - 0x7b] ; ret 0xf40
0x0000000000104b94 : add byte ptr [rcx], dh ; fild dword ptr [rbx - 0x6af0fd08] ; ret
0x00000000001045f0 : add byte ptr [rcx], dh ; fild dword ptr [rbx - 0x6bf0fb08] ; ret
0x000000000010474f : add byte ptr [rcx], dh ; fild dword ptr [rbx - 0x76b6f506] ; ret 0xf44
0x0000000000140c59 : add byte ptr [rcx], dh ; fisttp dword ptr [rax + 0x39] ; ret 0x850f
0x0000000000083c87 : add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000143d57 : add byte ptr [rcx], dh ; fisttp dword ptr [rcx + rcx*4 - 9] ; call 0x140838
0x000000000005edcf : add byte ptr [rcx], dh ; fucomi st(1) ; retf
0x00000000000452c8 : add byte ptr [rcx], dh ; imul al ; jo 0x4531a ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000009d67f : add byte ptr [rcx], dh ; in eax, dx ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000011751c : add byte ptr [rcx], dh ; inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x000000000014f484 : add byte ptr [rcx], dh ; leave ; call 0x13b6d5
0x000000000012dfcf : add byte ptr [rcx], dh ; leave ; mov rax, rcx ; ret
0x00000000000a0011 : add byte ptr [rcx], dh ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000000a6d6f : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x48], cl ; mov dword ptr [rdi], edx ; ret
0x0000000000028d3a : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000ce814 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x0000000000047486 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000098faf : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], cl ; mov rax, rdx ; pop r12 ; ret
0x00000000000aa76c : add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x00000000000720d5 : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x000000000008763f : add byte ptr [rcx], dh ; rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x000000000015e817 : add byte ptr [rcx], dh ; rol byte ptr [rbx - 0x6bf00008], cl ; ret 0x1389
0x00000000000352cf : add byte ptr [rcx], dh ; rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x000000000012c39f : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xf7 ; sete al ; ret
0x00000000001457c4 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x75], 0x74 ; and al, 0x18 ; mov rdi, rbp ; call r14
0x000000000013f65c : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x75], 5 ; ret 0xa47
0x000000000009cb91 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], 0x37 ; ret
0x000000000010c4c4 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; mov eax, ecx ; syscall
0x00000000000476dc : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r14 ; ret
0x00000000000489bc : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000b9f12 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000018973f : add byte ptr [rcx], dh ; ror byte ptr [rbx + 0x75163b17], 0xe4 ; ret
0x0000000000102b93 : add byte ptr [rcx], dh ; ror byte ptr [rdi], cl ; mov esi, 0xfc085c0 ; xchg eax, esp ; ret 0x1589
0x00000000001569d2 : add byte ptr [rcx], dh ; shr al, 0x86 ; cmp eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000089abf : add byte ptr [rcx], dh ; shr bl, cl ; retf 0x47e8
0x00000000000a46cf : add byte ptr [rcx], dh ; shr cl, cl ; ret 0xfffa
0x000000000012df2f : add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xf0 ; ret
0x00000000000f6489 : add byte ptr [rcx], dh ; test byte ptr [rcx + 0x442c244c], 0x29 ; ret 0x8944
0x000000000012eb0e : add byte ptr [rcx], sil ; test byte ptr [rax - 0x77], 0xf0 ; ret
0x0000000000139007 : add byte ptr [rdi + 0x10], bh ; call 0x25310
0x00000000000a7640 : add byte ptr [rdi + 0x63], cl ; or al, 0x8a ; lea r10, [r10 + r9] ; jmp r10
0x0000000000168eba : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000016393a : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; lea r9, [r11 + r9] ; jmp r9
0x0000000000025624 : add byte ptr [rdi + 0x7f], bh ; call 0xe18f8
0x00000000000cda04 : add byte ptr [rdi + 2], bh ; neg eax ; ret
0x000000000012f186 : add byte ptr [rdi + 8], dh ; mov rax, rdi ; sar rax, 6 ; ret
0x0000000000190554 : add byte ptr [rdi + 9], bh ; neg eax ; ret
0x000000000011ba46 : add byte ptr [rdi + rax*8], ah ; add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000042d30 : add byte ptr [rdi + rax*8], ah ; and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000999de : add byte ptr [rdi + rax*8], ah ; or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000009c606 : add byte ptr [rdi + rax*8], ah ; or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000027416 : add byte ptr [rdi + rax*8], ah ; or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edi ; ret
0x0000000000042106 : add byte ptr [rdi + rax*8], ah ; sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x0000000000191546 : add byte ptr [rdi + rcx + 0x44], al ; ret 0x8548
0x000000000015e439 : add byte ptr [rdi + rcx + 0x44], cl ; retf 0x8548
0x0000000000097e30 : add byte ptr [rdi + rcx + 0x45], cl ; call 0x48d38788
0x0000000000097dee : add byte ptr [rdi + rcx + 0x45], cl ; jmp 0x4ccb8746
0x00000000000350d4 : add byte ptr [rdi + rcx], al ; mov bh, 0xc0 ; ret
0x000000000002beac : add byte ptr [rdi + rsi - 0xa], dh ; ret
0x00000000000e18bf : add byte ptr [rdi - 0x48], bl ; cmp al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000115991 : add byte ptr [rdi - 0x64], bh ; mov eax, 0x118 ; syscall
0x000000000010cbd9 : add byte ptr [rdi], bl ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000026f93 : add byte ptr [rdi], ch ; lea rdi, [rax + 1] ; mov byte ptr [rdi], 0 ; pop rbx ; pop r14 ; ret
0x0000000000026fb1 : add byte ptr [rdi], ch ; mov byte ptr [rdi], 0 ; ret
0x00000000000871d4 : add byte ptr [rdi], cl ; adc dword ptr [rax + 0x40], eax ; pop rbx ; ret
0x000000000012ae2f : add byte ptr [rdi], cl ; adc dword ptr [rbp - 0x78], edi ; call rcx
0x0000000000090ba0 : add byte ptr [rdi], cl ; adc dword ptr [rbx + 0x48], eax ; pop rbx ; ret
0x000000000014dd62 : add byte ptr [rdi], cl ; adc dword ptr [rbx], ecx ; mov qword ptr [rbx + 0x10], rax ; jmp 0x14dd38
0x000000000014f30a : add byte ptr [rdi], cl ; adc dword ptr [rdx], ebx ; ret
0x000000000014bd12 : add byte ptr [rdi], cl ; adc dword ptr [rdx], ecx ; ret
0x000000000014e9fa : add byte ptr [rdi], cl ; adc dword ptr [rdx], edx ; ret
0x000000000014f2ea : add byte ptr [rdi], cl ; adc dword ptr [rdx], esp ; ret
0x000000000010c1ac : add byte ptr [rdi], cl ; adc dword ptr [rsi + 0x70], edi ; ret
0x000000000014709a : add byte ptr [rdi], cl ; adc dword ptr [rsi + 8], eax ; ret
0x000000000014706a : add byte ptr [rdi], cl ; adc dword ptr [rsi + 8], ecx ; ret
0x00000000000bfa06 : add byte ptr [rdi], cl ; add al, ch ; ret 0xf755
0x0000000000043ea6 : add byte ptr [rdi], cl ; add eax, 0x8944c689 ; ret 0xeab8
0x000000000012c407 : add byte ptr [rdi], cl ; add eax, 0x8948d789 ; ret
0x000000000016a836 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000035fe4 : add byte ptr [rdi], cl ; enter -0x3f77, 0xf ; retf 0x148
0x000000000014f3a9 : add byte ptr [rdi], cl ; enter 0x4289, 0x10 ; mov eax, 1 ; ret
0x000000000014f2a9 : add byte ptr [rdi], cl ; enter 0x4289, 0xc ; mov eax, 1 ; ret
0x00000000000d6404 : add byte ptr [rdi], cl ; mov bh, 0x15 ; retf 0xd4f
0x000000000016b86f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000186b0f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; vzeroupper ; ret
0x0000000000121204 : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x121198 ; loopne 0x12121f ; movzx eax, ax ; ret
0x0000000000121334 : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x1212c5 ; loopne 0x121345 ; ret
0x00000000001213c4 : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x121358 ; loopne 0x1213d9 ; movzx eax, ax ; ret
0x00000000001216c4 : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x121658 ; loopne 0x1216db ; movzx eax, ax ; ret
0x00000000000350ad : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x35041 ; loopne 0x350c8 ; movzx eax, ax ; ret
0x00000000000350ed : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x35081 ; loopne 0x35102 ; movzx eax, ax ; ret
0x000000000003518d : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x35121 ; loopne 0x351a4 ; movzx eax, ax ; ret
0x000000000003526d : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x351fe ; loopne 0x3527e ; ret
0x000000000012b741 : add byte ptr [rdi], cl ; mov bh, 4 ; push rax ; shr ax, 0xe ; and eax, 1 ; ret
0x000000000010b8cf : add byte ptr [rdi], cl ; mov bh, 7 ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x0000000000090d27 : add byte ptr [rdi], cl ; mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000016b8df : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000187f3f : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; vzeroupper ; ret
0x0000000000196da7 : add byte ptr [rdi], cl ; mov dh, 0x44 ; and al, 0xf ; add rsp, 0x10 ; pop rbx ; ret
0x000000000018fa4f : add byte ptr [rdi], cl ; mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000018fa3f : add byte ptr [rdi], cl ; mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000018fa0f : add byte ptr [rdi], cl ; mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000018fa2f : add byte ptr [rdi], cl ; mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000018fa1f : add byte ptr [rdi], cl ; mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x00000000000d6b6f : add byte ptr [rdi], cl ; mov dh, 0x4b ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000495a7 : add byte ptr [rdi], cl ; mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000a6287 : add byte ptr [rdi], cl ; mov dh, 0x74 ; syscall
0x00000000000fbf0f : add byte ptr [rdi], cl ; mov dh, 0xbc ; and al, 0x18 ; add dword ptr [rax], eax ; add al, ch ; ret
0x00000000000e910e : add byte ptr [rdi], cl ; mov dh, 0xc0 ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x0000000000064bd3 : add byte ptr [rdi], cl ; mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000065ce9 : add byte ptr [rdi], cl ; mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000d6af4 : add byte ptr [rdi], cl ; mov dh, 0xc1 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000ba64f : add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x00000000000a89ef : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000181def : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; vzeroupper ; ret
0x000000000004189c : add byte ptr [rdi], cl ; mov dh, 0xf8 ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x00000000000416a6 : add byte ptr [rdi], cl ; mov dh, 4 ; or byte ptr [rax - 0x77], cl ; ret 0xc085
0x000000000018282f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000aaecf : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000000aac8f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000aac9f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x00000000000aac7f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000018256f : add byte ptr [rdi], cl ; mov ebp, 0x60c083c0 ; add rax, rdi ; ret
0x00000000000aacff : add byte ptr [rdi], cl ; mov ebp, 0xea8348c0 ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x000000000018259f : add byte ptr [rdi], cl ; mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x147c
0x00000000000aacdf : add byte ptr [rdi], cl ; mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x347c
0x000000000018253f : add byte ptr [rdi], cl ; mov ebp, 0xf80148c0 ; vzeroupper ; ret
0x00000000000aa79f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x00000000000aa7cf : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000aa7bf : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000000aa7df : add byte ptr [rdi], cl ; mov esp, 0xc22948c0 ; jbe 0xaa82c ; add rax, rdi ; ret
0x00000000000cccff : add byte ptr [rdi], cl ; mov esp, 0xc22948c0 ; jbe 0xccd4c ; add rax, rdi ; ret
0x0000000000186aaf : add byte ptr [rdi], cl ; mov esp, 0xce0148d2 ; add edx, 0x20 ; sub edx, ecx ; jmp 0x186a64
0x00000000001871cf : add byte ptr [rdi], cl ; mov esp, 0xce0148d2 ; add edx, 0x20 ; sub edx, ecx ; jmp 0x187184
0x000000000018784f : add byte ptr [rdi], cl ; mov esp, 0xce0148d2 ; add edx, 0x20 ; sub edx, ecx ; jmp 0x187804
0x000000000018853f : add byte ptr [rdi], cl ; mov esp, 0xce0148d2 ; add edx, 0x20 ; sub edx, ecx ; jmp 0x1884f4
0x00000000000aa7af : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x000000000005f8b7 : add byte ptr [rdi], cl ; push rax ; fsub qword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x00000000000431d7 : add byte ptr [rdi], cl ; push rsp ; ret
0x00000000000f6e87 : add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x00000000000cdae1 : add byte ptr [rdi], cl ; pushfq ; sal bh, 0xd8 ; cmp ecx, r8d ; cmovg eax, edx ; ret
0x0000000000189fe4 : add byte ptr [rdi], cl ; pushfq ; sal bh, 0xd8 ; or eax, 1 ; vzeroupper ; ret
0x00000000000dfb7d : add byte ptr [rdi], cl ; ret
0x0000000000054b6a : add byte ptr [rdi], cl ; ret 0x13e9
0x00000000000d6fdc : add byte ptr [rdi], cl ; ret 0x144
0x0000000000044b2d : add byte ptr [rdi], cl ; ret 0x31c3
0x000000000012c679 : add byte ptr [rdi], cl ; ret 0x66c3
0x000000000014d750 : add byte ptr [rdi], cl ; ret 0x8d48
0x0000000000055f08 : add byte ptr [rdi], cl ; ret 0x8d49
0x000000000013acdb : add byte ptr [rdi], cl ; ret 0xb8c3
0x000000000003163b : add byte ptr [rdi], cl ; ret 0xc083
0x000000000004ad61 : add byte ptr [rdi], cl ; ret 0xc101
0x00000000000ecb87 : add byte ptr [rdi], cl ; ret 0xc35b
0x00000000000d08d8 : add byte ptr [rdi], cl ; ret 0xf8c1
0x0000000000101bf8 : add byte ptr [rdi], cl ; ret 0xfc3
0x0000000000037e51 : add byte ptr [rdi], cl ; retf 0xd289
0x00000000000d056d : add byte ptr [rdi], cl ; sub dword ptr [rax], eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000d0798 : add byte ptr [rdi], cl ; sub dword ptr [rax], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000017c7cf : add byte ptr [rdi], cl ; sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x000000000010bac7 : add byte ptr [rdi], cl ; sub dword ptr [rsp + 0xa0], eax ; syscall
0x0000000000043e8b : add byte ptr [rdi], cl ; sub dword ptr [rsp + 0xf0], eax ; syscall
0x000000000007111e : add byte ptr [rdi], cl ; test dword ptr [rax], ebx ; retf
0x000000000010d471 : add byte ptr [rdi], cl ; test dword ptr [rbp + 0x48000000], ecx ; add esp, 0x68 ; ret
0x00000000001117df : add byte ptr [rdi], cl ; test dword ptr [rbx + 0x48000000], eax ; add esp, 0x40 ; pop rbx ; ret
0x000000000010cce7 : add byte ptr [rdi], cl ; test dword ptr [rbx + 0x48000000], edi ; add esp, 0x68 ; ret
0x0000000000101d4d : add byte ptr [rdi], cl ; test dword ptr [rbx - 0x7efffffc], ebx ; ret 0xffe0
0x00000000000ffdfc : add byte ptr [rdi], cl ; test dword ptr [rbx], esi ; add dword ptr [rax], eax ; add al, ch ; pop rax ; retf 0xfffd
0x000000000009b4ba : add byte ptr [rdi], cl ; test dword ptr [rcx + 0x48000000], esi ; add esp, 0x18 ; ret
0x000000000010ce6c : add byte ptr [rdi], cl ; test dword ptr [rsi + 0x48000000], edi ; add esp, 0x78 ; ret
0x000000000012c9c3 : add byte ptr [rdi], cl ; test ebx, edx ; add byte ptr [rax], al ; add cl, cl ; ret
0x0000000000148fb9 : add byte ptr [rdi], cl ; xchg dword ptr [rax - 0x77000000], ebx ; retf 0xe183
0x000000000002707b : add byte ptr [rdi], cl ; xchg dword ptr [rcx], ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000055fff : add byte ptr [rdi], cl ; xchg dword ptr [rdx - 0x77000000], ebp ; retf 0xc183
0x000000000005601f : add byte ptr [rdi], cl ; xchg dword ptr [rdx - 0x77000000], ebx ; retf 0xc183
0x000000000005603f : add byte ptr [rdi], cl ; xchg dword ptr [rdx - 0x77000000], ecx ; retf 0xc183
0x0000000000150769 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b48
0x0000000000058fae : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x941
0x00000000000ed2eb : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd201
0x000000000014e00a : add byte ptr [rdi], cl ; xchg eax, edi ; ret
0x00000000001813d9 : add byte ptr [rdi], cl ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x0000000000140f74 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000190cc8 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2041
0x0000000000054e3b : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x4e9
0x00000000001914e5 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8441
0x00000000000fdf1f : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd020
0x00000000000f6e50 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe2c1
0x0000000000028b35 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf4e9
0x000000000007a887 : add byte ptr [rdi], cl ; xchg edx, esp ; and dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000e3618 : add byte ptr [rdx + 0x20], bh ; cmovne rax, rdx ; ret
0x00000000000b948f : add byte ptr [rdx + 0x30178816], cl ; in eax, dx ; mov byte ptr [rdi + 1], ch ; ret
0x000000000017415f : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x00000000000e8b6f : add byte ptr [rdx + 0x63], cl ; add al, 0xba ; add rax, rdx ; jmp rax
0x00000000000e3524 : add byte ptr [rdx + 0x7f], bh ; cmovne rax, rdx ; ret
0x00000000000cc6fc : add byte ptr [rdx + 0xe], dh ; add al, ch ; retf
0x000000000012bdbc : add byte ptr [rdx + 1], bh ; mov eax, 0xca ; syscall
0x000000000011dcd7 : add byte ptr [rdx + 8], bh ; syscall
0x00000000000e5563 : add byte ptr [rdx + rbp + 0xf], dh ; mov dh, 0x42 ; add al, byte ptr [rbx - 0x7cb7fd37] ; ret 0xeb02
0x00000000000a00f3 : add byte ptr [rdx + rdx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x00000000000a0998 : add byte ptr [rdx + rdx*8 - 0x38baf0b8], al ; ret
0x00000000000d2d10 : add byte ptr [rdx - 0x3a], al ; add al, 0x28 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000055d07 : add byte ptr [rdx - 1], bh ; mov eax, edx ; ret
0x0000000000047cbe : add byte ptr [rdx - 1], bh ; pop rbx ; test eax, eax ; cmovs eax, edx ; ret
0x0000000000114f87 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000129eb8 : add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x129efc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ffdf9 : add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0xfff42 ; call 0xdc86c
0x0000000000035537 : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x0000000000035226 : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x0000000000029b8e : add byte ptr [rdx], al ; add rsp, 8 ; ret
0x000000000012640d : add byte ptr [rdx], al ; call rcx
0x0000000000093527 : add byte ptr [rdx], al ; jbe 0x93534 ; ret
0x0000000000035134 : add byte ptr [rdx], al ; movzx eax, ax ; ret
0x00000000001691b7 : add byte ptr [rip + 0x14634900], al ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000001691b6 : add byte ptr [rip + 0x14634900], r8b ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000005a510 : add byte ptr [rip + 0x63480000], al ; ret 0x8d48
0x000000000011d8b5 : add byte ptr [rip - 0x1000], ah ; or eax, edx ; ret
0x000000000014978f : add byte ptr [rip - 0x76b70000], al ; retf
0x0000000000112c01 : add byte ptr [rsi + 0x5409], bh ; mov eax, 0x10 ; syscall
0x00000000001926f6 : add byte ptr [rsi + 0x63], cl ; and al, 0xa2 ; add rdx, r12 ; jmp rdx
0x000000000012be77 : add byte ptr [rsi + 0x80], bh ; syscall
0x000000000015e2bd : add byte ptr [rsi + 0x81], bh ; mov eax, 0xca ; syscall
0x0000000000038f17 : add byte ptr [rsi + 0xa], bh ; mov rdi, r14 ; call 0x2514b
0x0000000000151527 : add byte ptr [rsi + 0xe], bh ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000b1f51 : add byte ptr [rsi + 0xf], ah ; adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x0000000000181401 : add byte ptr [rsi + 0xf], ah ; cmp ah, byte ptr [rbx + 0x27] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x000000000018123d : add byte ptr [rsi + 0xf], ah ; cmp ah, byte ptr [rbx - 0x2e] ; cmp cl, byte ptr [rax - 0x7d] ; ret 0x2910
0x000000000018b1f4 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000b5756 : add byte ptr [rsi + 0xf], ah ; je 0xb57ad ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000b6de3 : add byte ptr [rsi + 0xf], ah ; je 0xb6e3a ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000b8cc7 : add byte ptr [rsi + 0xf], ah ; je 0xb8d1e ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000ebd31 : add byte ptr [rsi + 0xf], ah ; jo 0xebd22 ; add byte ptr [rax + 1], cl ; ret 0xf66
0x000000000015609d : add byte ptr [rsi + 0xf], ah ; out dx, eax ; ror byte ptr [rdi], 0x11 ; and al, 0x28 ; call rdx
0x0000000000117bd8 : add byte ptr [rsi + 0xf], ah ; out dx, eax ; shl byte ptr [rsi + 0xf], cl ; ret 0x67a
0x0000000000043a8e : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000005ca81 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x25e8
0x000000000005ca58 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x000000000009449f : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x4466
0x00000000000439cf : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x77e8
0x000000000005f8e3 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xc3e8
0x0000000000043a59 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xede8
0x000000000011fc32 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; retf
0x000000000005ca1f : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x00000000000aabac : add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000aa6d4 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000000cde2f : add byte ptr [rsi + 0xf], ah ; xlatb ; retf 0x8548
0x00000000000aabd1 : add byte ptr [rsi + 0xf], ah ; xlatb ; ror dword ptr [rdi], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000014c0c3 : add byte ptr [rsi + 1], bh ; mov rdi, rbp ; call 0x148b9b
0x00000000000441df : add byte ptr [rsi + 8], bh ; mov eax, 0x7f ; syscall
0x0000000000196697 : add byte ptr [rsi + rax - 0x17], dh ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; ret
0x000000000002f0ae : add byte ptr [rsi + rdx*2 - 0xa], dh ; ret
0x000000000002f0ad : add byte ptr [rsi + rdx*2 - 0xa], sil ; ret
0x0000000000134b89 : add byte ptr [rsi - 0x3f], ah ; ret
0x0000000000094e46 : add byte ptr [rsi - 0x6e], dh ; add rsp, 8 ; ret
0x00000000000dba7d : add byte ptr [rsi - 0x70], ah ; cmp esi, 1 ; je 0xdba9a ; xor eax, eax ; ret
0x000000000009105d : add byte ptr [rsi - 0x70], ah ; cmp qword ptr [rdi + 0x38], 0 ; je 0x9107a ; ret
0x000000000017848d : add byte ptr [rsi - 0x70], ah ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x000000000017616d : add byte ptr [rsi - 0x70], ah ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x00000000000b643d : add byte ptr [rsi - 0x70], ah ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000b543d : add byte ptr [rsi - 0x70], ah ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000011e86d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x11f ; syscall
0x000000000011e8fd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x134 ; syscall
0x000000000011e98d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x13f ; syscall
0x000000000010d0dd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x15 ; syscall
0x000000000011f0dd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x30 ; syscall
0x000000000011ec3d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x32 ; syscall
0x000000000011fa1d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x43 ; syscall
0x000000000010cbed : add byte ptr [rsi - 0x70], ah ; mov eax, 0x53 ; syscall
0x000000000010e99d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x56 ; syscall
0x000000000010eabd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x57 ; syscall
0x000000000010e9fd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x58 ; syscall
0x000000000011e77d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x63 ; syscall
0x00000000000e293d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x79 ; syscall
0x000000000011dbad : add byte ptr [rsi - 0x70], ah ; mov eax, 0x7a ; syscall
0x000000000011ddbd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x87 ; syscall
0x000000000010c9ad : add byte ptr [rsi - 0x70], ah ; mov eax, 0x89 ; syscall
0x00000000001176ed : add byte ptr [rsi - 0x70], ah ; mov eax, 0x95 ; syscall
0x000000000011466d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x99 ; syscall
0x000000000011e32d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x9f ; syscall
0x00000000001141ad : add byte ptr [rsi - 0x70], ah ; mov eax, 0xa3 ; syscall
0x000000000011e4dd : add byte ptr [rsi - 0x70], ah ; mov eax, 0xb1 ; syscall
0x000000000011e68d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xb4 ; syscall
0x000000000011b8ad : add byte ptr [rsi - 0x70], ah ; mov eax, 0xc2 ; syscall
0x000000000011b90d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xc3 ; syscall
0x000000000011b7ed : add byte ptr [rsi - 0x70], ah ; mov eax, 0xc4 ; syscall
0x000000000011b99d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xc5 ; syscall
0x000000000011e53d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xfe ; syscall
0x000000000009292d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xffffffff ; ret
0x00000000001477fd : add byte ptr [rsi - 0x70], ah ; mov eax, 2 ; ret
0x000000000011277d : add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x00000000000dc9ed : add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rdi] ; ret
0x000000000008d2ed : add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x000000000011e95d : add byte ptr [rsi - 0x70], ah ; mov r10, rcx ; mov eax, 0x137 ; syscall
0x000000000011e65d : add byte ptr [rsi - 0x70], ah ; mov r10, rcx ; mov eax, 0x19 ; syscall
0x0000000000111d4d : add byte ptr [rsi - 0x70], ah ; mov r10, rcx ; mov eax, 0x28 ; syscall
0x000000000011e71d : add byte ptr [rsi - 0x70], ah ; mov r10, rcx ; mov eax, 0xb2 ; syscall
0x000000000011e74d : add byte ptr [rsi - 0x70], ah ; mov r10, rcx ; mov eax, 0xb3 ; syscall
0x000000000015a8ed : add byte ptr [rsi - 0x70], ah ; mov r10, rcx ; mov eax, 0xb5 ; syscall
0x000000000015a93d : add byte ptr [rsi - 0x70], ah ; mov r10, rcx ; mov eax, 0xb6 ; syscall
0x000000000011b87d : add byte ptr [rsi - 0x70], ah ; mov r10, rcx ; mov eax, 0xbf ; syscall
0x000000000011186d : add byte ptr [rsi - 0x70], ah ; mov r10d, ecx ; mov eax, 0xdd ; syscall
0x00000000000898cd : add byte ptr [rsi - 0x70], ah ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000009296d : add byte ptr [rsi - 0x70], ah ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000017613d : add byte ptr [rsi - 0x70], ah ; mov word ptr [rcx], dx ; ret
0x00000000000b640d : add byte ptr [rsi - 0x70], ah ; mov word ptr [rdi], dx ; ret
0x000000000004397d : add byte ptr [rsi - 0x70], ah ; movmskps eax, xmm0 ; and eax, 8 ; ret
0x00000000000430cd : add byte ptr [rsi - 0x70], ah ; pmovmskb eax, xmm0 ; and eax, 0x80 ; ret
0x0000000000144fcd : add byte ptr [rsi - 0x70], ah ; ret
0x00000000000cdfbd : add byte ptr [rsi - 0x70], ah ; test rsi, rsi ; jne 0xcdfd4 ; xor rax, rax ; ret
0x00000000000b947d : add byte ptr [rsi - 0x70], ah ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x0000000000155edd : add byte ptr [rsi - 0x70], ah ; xor eax, eax ; ret
0x000000000011271d : add byte ptr [rsi - 0x70], ah ; xor r10d, r10d ; mov eax, 0x3d ; syscall
0x00000000000cdc9d : add byte ptr [rsi - 0x70], ah ; xor rax, rax ; ret
0x000000000017416f : add byte ptr [rsi - 0x75], ah ; add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000042b10 : add byte ptr [rsi - 0x77], ah ; and al, 0xf0 ; fstp xword ptr [rdi] ; fld xword ptr [rsp - 0x18] ; ret
0x000000000014bd74 : add byte ptr [rsi - 0x77], ah ; insb byte ptr [rdi], dx ; mov eax, 1 ; ret
0x000000000011132e : add byte ptr [rsi - 0x77], ah ; jmp 0x1206
0x000000000002eab2 : add byte ptr [rsi - 0x77], ah ; or ecx, dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000156590 : add byte ptr [rsi - 0x77], ah ; shl byte ptr [rsi + 0xf], 0xc5 ; retf
0x000000000008841a : add byte ptr [rsi - 1], bh ; call qword ptr [r13 + 0x18]
0x00000000000449b9 : add byte ptr [rsi], ah ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000025620 : add byte ptr [rsi], al ; add byte ptr [rax], al ; add byte ptr [rdi + 0x7f], bh ; call 0xe18fc
0x000000000017a10c : add byte ptr [rsi], al ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000001195c8 : add byte ptr [rsi], al ; add byte ptr [rax], al ; mov rdi, qword ptr [r15] ; call r12
0x00000000000e1a29 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add bl, ch ; ret 0xc389
0x000000000010e05b : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add bl, ch ; retf 0xf66
0x0000000000111589 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x0000000000112ee5 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000082696 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000043f39 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000de44a : add byte ptr [rsp + rax*2 - 0x77], ah ; add cl, byte ptr [rcx - 0x3b7cb710] ; ret
0x0000000000106250 : add byte ptr [rsp + rdx*2 + 0x5b], dh ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000005c65f : add byte ptr cs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000114fe7 : add byte ptr ds:[rax - 0x73], cl ; push rsi ; add dword ptr [rbp - 0x2f], esi ; ret
0x000000000011831e : add byte ptr ds:[rax - 0x77], cl ; je 0x118338 ; pop rbx ; ret
0x00000000000255a5 : add byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; retf 0xc7ff
0x00000000000449ba : add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000011b7a8 : add byte ptr fs:[rax], al ; add byte ptr [rbx - 0x3f7ac7c0], cl ; cmove eax, edx ; ret
0x00000000000654ed : add byte ptr gs:[rax - 0x7d], cl ; ret
0x0000000000139223 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000a0daa : add byte ptr gs:[rcx + 0x5c], al ; pop r13 ; pop r14 ; ret
0x00000000000a036e : add byte ptr gs:[rcx], dh ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000000ed2ea : add byte ptr gs:[rdi], cl ; xchg eax, ebp ; ret 0xd201
0x00000000001823ae : add ch, al ; std ; je 0x18241b ; and ch, al ; std ; xlatb ; ret
0x000000000018249c : add ch, al ; std ; je 0x182509 ; and ch, al ; std ; xlatb ; ret
0x0000000000186edf : add ch, al ; std ; je 0x186f46 ; and ch, al ; std ; xlatb ; ror byte ptr [rcx - 0x7d], cl ; ret 0x4d20
0x000000000018799e : add ch, al ; std ; je 0x187a05 ; and ch, al ; std ; xlatb ; ror byte ptr [rcx - 0x7d], cl ; ret 0x4d20
0x00000000001886ab : add ch, al ; std ; je 0x188712 ; and ch, al ; std ; xlatb ; ror byte ptr [rcx - 0x7d], cl ; ret 0x4d20
0x0000000000182442 : add ch, al ; std ; xlatb ; ret
0x000000000018244e : add ch, al ; std ; xlatb ; ret 0xc085
0x000000000018600f : add ch, al ; std ; xlatb ; retf 0xc985
0x0000000000185c8f : add ch, al ; std ; xlatb ; rol dword ptr [rbp - 0x3a678a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000061d35 : add ch, bl ; fsub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; adc dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf 0xf66
0x000000000007a9e8 : add ch, byte ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0x83 ; ret
0x00000000000cfb39 : add ch, byte ptr [rcx] ; ret 0x48d
0x00000000000873ea : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000009c5d1 : add ch, byte ptr [rcx] ; ror byte ptr [rax - 0x75], 1 ; push rdx ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x00000000000ceead : add ch, byte ptr [rcx] ; ror dword ptr [rcx + 0x1fe8c1c8], 0x29 ; ret
0x000000000007aa21 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000000c8dcb : add ch, cl ; ret
0x000000000012e3c8 : add ch, cl ; ret 0xef6d
0x0000000000062407 : add ch, cl ; retf
0x0000000000044876 : add cl, 0xe9 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x00000000000ba678 : add cl, al ; call 0xffffffff83ce2f90
0x0000000000117f87 : add cl, bl ; retf 0xc9d9
0x000000000011b685 : add cl, byte ptr [r8 + 0x39] ; retf 0xf48
0x00000000000b1fec : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x00000000000c8148 : add cl, byte ptr [rax + 0x29] ; ret
0x00000000000bb4fd : add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000d76cb : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x00000000000baffd : add cl, byte ptr [rax + 0x29] ; ret 0xf74
0x000000000013a906 : add cl, byte ptr [rax + 0x39] ; ret 0x1472
0x000000000008d226 : add cl, byte ptr [rax + 0x39] ; ret 0x870f
0x000000000013a914 : add cl, byte ptr [rax + 0x39] ; ret 0xc019
0x000000000013cf1b : add cl, byte ptr [rax + 0x39] ; retf
0x000000000013a8e0 : add cl, byte ptr [rax + 0x39] ; retf 0x3a72
0x000000000004c1d4 : add cl, byte ptr [rax + 0x39] ; retf 0x820f
0x000000000011b686 : add cl, byte ptr [rax + 0x39] ; retf 0xf48
0x0000000000072789 : add cl, byte ptr [rax + 0x63] ; ror byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000001895d4 : add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x0000000000096d0d : add cl, byte ptr [rax + 0xf] ; ret 0xc083
0x000000000014d9c9 : add cl, byte ptr [rax + 0xf] ; ret 0xea89
0x000000000014d757 : add cl, byte ptr [rax + 0xf] ; retf 0xc689
0x0000000000029fe4 : add cl, byte ptr [rax + 1] ; fimul word ptr [rax + 1] ; ret
0x00000000000970d3 : add cl, byte ptr [rax + 9] ; fimul dword ptr [rax - 0x7d] ; retf 0x4901
0x00000000000bad91 : add cl, byte ptr [rax - 0x73] ; add eax, 0x12d57 ; cmovne rax, rdx ; ret
0x00000000000b5c99 : add cl, byte ptr [rax - 0x73] ; jg 0xb5cab ; jne 0xb653b ; ret
0x00000000000b734d : add cl, byte ptr [rax - 0x73] ; jg 0xb735f ; jne 0xb7d5b ; ret
0x0000000000174215 : add cl, byte ptr [rax - 0x75] ; add eax, 0x5428948 ; mov rax, rdi ; ret
0x0000000000174145 : add cl, byte ptr [rax - 0x75] ; or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000126681 : add cl, byte ptr [rax - 0x75] ; push rsp ; and al, 0x10 ; mov rsi, r13 ; xor r15d, r15d ; call rax
0x00000000000b1fed : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x00000000000a70ff : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000087c65 : add cl, byte ptr [rax - 0x77] ; ret
0x0000000000127676 : add cl, byte ptr [rax - 0x77] ; ret 0x53ff
0x0000000000127017 : add cl, byte ptr [rax - 0x77] ; ret 0x55ff
0x0000000000103e2a : add cl, byte ptr [rax - 0x77] ; ret 0x940f
0x000000000012872f : add cl, byte ptr [rax - 0x77] ; ret 0xff41
0x00000000000719e3 : add cl, byte ptr [rax - 0x77] ; test dword ptr [rax - 0x16000006], edi ; retf
0x000000000011649e : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rsp + rcx + 0x48], 0x83 ; ret 0x4808
0x000000000002c606 : add cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x00000000000b4f60 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000115479 : add cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x000000000002ac01 : add cl, byte ptr [rax - 0x7d] ; ret 0x4d02
0x000000000009f483 : add cl, byte ptr [rax - 0x7d] ; ret 0x6610
0x00000000000e4ed2 : add cl, byte ptr [rax - 0x7d] ; ret 0x8401
0x00000000000b4fc3 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x00000000000e556c : add cl, byte ptr [rax - 0x7d] ; ret 0xeb02
0x0000000000155c55 : add cl, byte ptr [rax - 0x7d] ; ret 0xf04
0x00000000000ea466 : add cl, byte ptr [rax - 0x7d] ; rol byte ptr [rcx], 0xf ; mov esi, 0xc8dff50 ; retf 0x3948
0x000000000011782a : add cl, byte ptr [rax] ; or eax, 0x415d5b00 ; pop rsp ; ret
0x000000000009ebb8 : add cl, byte ptr [rbp + 0x29] ; ret 0x48b
0x000000000004b913 : add cl, byte ptr [rbp + 1] ; ret 0x15eb
0x0000000000102b28 : add cl, byte ptr [rbp - 0x77] ; ret 0x8d4c
0x000000000016b6b2 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000b2058 : add cl, byte ptr [rbx + 0x42890341] ; add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x0000000000178525 : add cl, byte ptr [rbx + 0x42890541] ; add eax, 0x8428d48 ; ret
0x00000000000b20fc : add cl, byte ptr [rbx + 0x42890841] ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000ebfd7 : add cl, byte ptr [rcx + 0x39] ; ret
0x00000000001485e3 : add cl, byte ptr [rcx + 0x55ff41da] ; adc byte ptr [rcx], bh ; ret
0x00000000001496aa : add cl, byte ptr [rcx + 9] ; ret
0x00000000000de44e : add cl, byte ptr [rcx - 0x3b7cb710] ; ret
0x000000000007239a : add cl, byte ptr [rcx - 0x55f43] ; dec dword ptr [rax - 0x77] ; retf
0x000000000002b1af : add cl, byte ptr [rcx - 0x7d] ; ret
0x00000000000e4182 : add cl, byte ptr [rcx] ; ret 0xf089
0x000000000014ea7a : add cl, byte ptr [rdi] ; enter -0x76bf, 0x40 ; pop rax ; mov eax, 1 ; ret
0x000000000014e9b2 : add cl, byte ptr [rdi] ; enter -0x76bf, 0x40 ; push rsp ; mov eax, 1 ; ret
0x00000000000350f4 : add cl, byte ptr [rdi] ; mov bh, 0xc0 ; ret
0x000000000005417b : add cl, byte ptr [rdi] ; mov esi, 0x89410252 ; ret
0x000000000003e466 : add cl, byte ptr [rdi] ; test byte ptr [rdx], al ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fc08], al ; retf 0
0x000000000003e8f9 : add cl, byte ptr [rdi] ; test dh, ah ; sub dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fc07], al ; ret 0x29
0x0000000000188b61 : add cl, byte ptr [rdi] ; test dword ptr [rax + 2], edi ; add byte ptr [rax], al ; vzeroupper ; ret
0x0000000000104b99 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000181407 : add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x0000000000140c33 : add cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x00000000000b1fea : add cl, byte ptr [rdx + 0x42880241] ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000001784e3 : add cl, byte ptr [rdx + 0x42880441] ; add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x00000000000b2018 : add cl, byte ptr [rdx + 0x42880441] ; add al, 0x48 ; mov eax, edi ; ret
0x00000000000b209c : add cl, byte ptr [rdx + 0x42880841] ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000012687e : add cl, byte ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000117dae : add cl, byte ptr [rip + 0x5c415d00] ; ret
0x0000000000191880 : add cl, ch ; int 0xf6
0x00000000000a6a67 : add cl, ch ; int1 ; ret 0xffff
0x00000000000bbd3b : add cl, ch ; mov ecx, 0xe8fffffe ; retf 0x734
0x0000000000038d8c : add cl, ch ; outsb dx, byte ptr [rsi] ; ret
0x00000000000b4207 : add cl, ch ; ret
0x000000000014fc04 : add cl, ch ; ret 0xfff8
0x00000000000760b8 : add cl, ch ; ret 0xfffa
0x0000000000056f06 : add cl, ch ; ret 0xfffc
0x0000000000030a2d : add cl, ch ; ret 0xfffd
0x000000000002f916 : add cl, ch ; ret 0xfffe
0x00000000000a6af4 : add cl, ch ; ret 0xffff
0x000000000002dd6e : add cl, ch ; retf
0x0000000000104e9e : add cl, ch ; retf 0xffe5
0x00000000000fe610 : add cl, ch ; retf 0xffeb
0x00000000000cc204 : add cl, ch ; retf 0xffed
0x00000000000389ad : add cl, ch ; retf 0xffef
0x000000000004d4a9 : add cl, ch ; retf 0xfffd
0x00000000000f3370 : add cl, ch ; retf 0xfffe
0x000000000019169d : add cl, ch ; xor esp, 0x894cffff ; retf 0x948
0x000000000012c9c9 : add cl, cl ; ret
0x0000000000115095 : add cl, dh ; dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8348
0x00000000000f4642 : add cl, dl ; jmp 0x344b10d6
0x00000000000a6c17 : add dh, al ; inc dword ptr [r8] ; mov qword ptr [rdx], rcx ; ret
0x0000000000125adf : add dh, al ; jmp qword ptr [rax]
0x00000000000eaa9f : add dh, al ; or byte ptr [r10], r11b ; mov eax, 2 ; ret
0x00000000000eaaaf : add dh, al ; or byte ptr [r8 + r15*4], r11b ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000007bf56 : add dh, al ; test eax, esi ; idiv bh ; jmp qword ptr [rax]
0x000000000016b863 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000010462d : add dh, byte ptr [rax + rcx + 0x31] ; fild dword ptr [rbx - 0x6bf0fb08] ; ret
0x00000000000b94bb : add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000b9a27 : add dh, byte ptr [rbp + 0x16] ; movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xb9a2c ; ret
0x00000000000b9ad7 : add dh, byte ptr [rbp + 0x16] ; movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xb9adc ; ret
0x00000000000baa44 : add dh, byte ptr [rbp - 0x2b] ; test al, al ; jne 0xba910 ; jmp 0xbaa28
0x00000000000f3d56 : add dh, byte ptr [rcx] ; imul al ; ret 0xf314
0x000000000010c257 : add dh, byte ptr [rdi + 8] ; mov dword ptr [rdi + 0x10c], esi ; xor eax, eax ; ret
0x000000000018db9f : add dh, byte ptr [rdx + 8] ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000093528 : add dh, byte ptr [rsi + 5] ; ret
0x0000000000155d7e : add dh, byte ptr [rsi + rbx*8 - 0x15] ; ret
0x00000000000289f7 : add dh, byte ptr [rsi - 0x77] ; ret 0x3d83
0x0000000000080834 : add dh, byte ptr [rsp + rcx - 0x39] ; xor al, 0 ; add al, 0 ; add cl, ch ; ret 0xfffc
0x000000000002b7e3 : add dh, dh ; ret
0x000000000012747f : add dh, dh ; ret 0x4c04
0x0000000000099bc8 : add dh, dh ; ret 0x7402
0x0000000000099ac6 : add dh, dh ; ret 0x7404
0x000000000012deff : add dh, dh ; ret 0x7420
0x000000000018e597 : add dh, dh ; ret 0x7501
0x000000000018e5a4 : add dh, dh ; ret 0x7502
0x000000000009726c : add dh, dh ; ret 0x7504
0x00000000001490bc : add dh, dh ; ret 0x7507
0x000000000018e569 : add dh, dh ; ret 0x7510
0x000000000018e576 : add dh, dh ; ret 0x7520
0x000000000010cddf : add dh, dh ; ret 0x7540
0x000000000010bd40 : add dh, dh ; ret 0xf02
0x0000000000032f90 : add dh, dh ; ret 0xf04
0x00000000000b07f2 : add dh, dh ; ret 0xf20
0x000000000007a9b7 : add dh, dh ; ret 0xf40
0x000000000006027f : add dh, dh ; ret 0xf50
0x000000000010bd37 : add dh, dh ; ret 0xf80
0x00000000000e52ff : add dh, dh ; test dword ptr [rbx + rdi*8 - 1], ecx ; call qword ptr [rax]
0x00000000001966f6 : add dil, dil ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000cc9d1 : add dil, r15b ; ret
0x00000000000e3c64 : add dl, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000b59fa : add dl, byte ptr [rcx + 0xf] ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000083cd4 : add dl, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000488ff : add dl, dh ; movups xmmword ptr [rbx], xmm0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000004adc7 : add dword ptr [ecx - 0x77], ecx ; ret 0x8944
0x00000000000c5fad : add dword ptr [r10 - 0x73], r8d ; jl 0xc5fbe ; add dword ptr [rbp - 0x77], eax ; ret
0x000000000012cc5b : add dword ptr [r8 + 0x3b], ecx ; pop rbp ; mov eax, 0x89483f74 ; ret
0x00000000000e8a73 : add dword ptr [r8 - 0x6bf0a206], r8d ; ret 0xb60f
0x0000000000082f1f : add dword ptr [r8 - 0x75], r9d ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x000000000011b741 : add dword ptr [r8 - 0x7d], ecx ; ret
0x00000000000292e3 : add dword ptr [r8 - 0x7d], r9d ; ret
0x00000000000e1b37 : add dword ptr [r8], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x0000000000111376 : add dword ptr [r8], eax ; add byte ptr [rbx - 0x2117c385], cl ; ret 0xffff
0x000000000009af05 : add dword ptr [r8], r8d ; add byte ptr [rax - 0x7f], cl ; ret 0x6be2
0x0000000000187396 : add dword ptr [r8], r8d ; vzeroupper ; ret
0x00000000000c8f37 : add dword ptr [rax + 0x10], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a430f : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4006
0x00000000000eaa8d : add dword ptr [rax + 0x1b807], ecx ; add byte ptr [rax], al ; ret
0x0000000000094e03 : add dword ptr [rax + 0x21], ecx ; ror byte ptr [rax + 0x21], 1 ; retf 0x8d48
0x0000000000178491 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x00000000000baff6 : add dword ptr [rax + 0x29], ecx ; fmul dword ptr [rax - 0x3f] ; clc ; add cl, byte ptr [rax + 0x29] ; ret 0xf74
0x00000000000e1706 : add dword ptr [rax + 0x38], edi ; syscall
0x000000000012c2ec : add dword ptr [rax + 0x39], ecx ; jmp 0x12c36f
0x0000000000055229 : add dword ptr [rax + 0x39], ecx ; ret
0x000000000012c1b2 : add dword ptr [rax + 0x39], ecx ; ret 0x1174
0x000000000010f643 : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x00000000000941e9 : add dword ptr [rax + 0x39], ecx ; ret 0x860f
0x000000000010f636 : add dword ptr [rax + 0x39], ecx ; ret 0xd72
0x000000000009f00c : add dword ptr [rax + 0x39], ecx ; ret 0xde75
0x0000000000196f4a : add dword ptr [rax + 0x39], ecx ; ret 0xe475
0x00000000000a5184 : add dword ptr [rax + 0x39], ecx ; ret 0xe675
0x00000000000a125b : add dword ptr [rax + 0x39], ecx ; ret 0xe775
0x00000000000a1632 : add dword ptr [rax + 0x39], ecx ; ret 0xe875
0x00000000000a13e7 : add dword ptr [rax + 0x39], ecx ; ret 0xeb75
0x00000000000a11b6 : add dword ptr [rax + 0x39], ecx ; ret 0xec75
0x000000000005630b : add dword ptr [rax + 0x39], ecx ; ret 0xef75
0x00000000000566eb : add dword ptr [rax + 0x39], ecx ; retf
0x00000000000f7e37 : add dword ptr [rax + 0x39], ecx ; retf 0x1074
0x00000000000bac90 : add dword ptr [rax + 0x39], ecx ; retf 0x1c74
0x00000000000a3d20 : add dword ptr [rax + 0x39], ecx ; retf 0xe275
0x00000000000a4714 : add dword ptr [rax + 0x39], ecx ; retf 0xe675
0x000000000012e4e3 : add dword ptr [rax + 0x39], ecx ; retf 0xe775
0x00000000000a3962 : add dword ptr [rax + 0x39], ecx ; retf 0xe875
0x00000000000c7c1e : add dword ptr [rax + 0x39], ecx ; retf 0xec72
0x000000000005657b : add dword ptr [rax + 0x39], ecx ; retf 0xef75
0x000000000012cc5c : add dword ptr [rax + 0x3b], ecx ; pop rbp ; mov eax, 0x89483f74 ; ret
0x00000000000fac14 : add dword ptr [rax + 0x63], ecx ; ret
0x00000000000ec693 : add dword ptr [rax + 0x63], ecx ; retf
0x00000000000c5555 : add dword ptr [rax + 0x63], ecx ; retf 0xc283
0x0000000000116343 : add dword ptr [rax + 0xf], ecx ; mov esi, 0xf233c03 ; xchg eax, ebp ; ret 0xd189
0x000000000009a20b : add dword ptr [rax + 0xf], ecx ; ret 0xfc3
0x00000000001905d0 : add dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0xc148
0x00000000001542f7 : add dword ptr [rax + 1], ecx ; ret
0x000000000002697f : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000041e5f : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000000eaa5f : add dword ptr [rax + 1], edi ; mov byte ptr [rdi], 0x5b ; ret
0x00000000000eaa10 : add dword ptr [rax + 1], edi ; ret
0x00000000001189a7 : add dword ptr [rax + 9], ecx ; ret 0x8948
0x0000000000071f01 : add dword ptr [rax + rax*2 - 0x77], esi ; ret 0x3145
0x00000000000e6546 : add dword ptr [rax + rax*8 - 0x3fce298b], eax ; ret
0x00000000000e7f9b : add dword ptr [rax + rax], eax ; or byte ptr [rax + 0xf], 0xa3 ; ret 0x830f
0x00000000001129a8 : add dword ptr [rax + rax], edx ; mov eax, r10d ; mov r12d, dword ptr fs:[r8] ; syscall
0x0000000000069870 : add dword ptr [rax + rcx*2 - 0x77], esi ; ret 0x8948
0x0000000000108ad4 : add dword ptr [rax + rcx*4 + 0x3c], eax ; sbb cl, byte ptr [rax - 0x7d] ; ret
0x00000000000ef5b5 : add dword ptr [rax + rdi + 0x6c], eax ; sbb al, byte ptr [rip - 0x7cb7ac8b] ; ret
0x000000000009a283 : add dword ptr [rax + rdi - 0x3e], eax ; jne 0x9a27a ; sub rax, 0x10 ; ret
0x0000000000146dbd : add dword ptr [rax + rdx + 0x48], esi ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000190f79 : add dword ptr [rax - 0x2f], ecx ; jmp 0x48e318cf
0x00000000000c6903 : add dword ptr [rax - 0x39], ecx ; ret 0xffff
0x0000000000077b11 : add dword ptr [rax - 0x50f43], eax ; jmp qword ptr [rax]
0x00000000000e5ae9 : add dword ptr [rax - 0x6bf08406], eax ; ret 0xb60f
0x00000000000e8a74 : add dword ptr [rax - 0x6bf0a206], eax ; ret 0xb60f
0x000000000011b682 : add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; retf 0xf48
0x0000000000175f6a : add dword ptr [rax - 0x73], ecx ; add qword ptr [rdi], rcx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00000000000b5c75 : add dword ptr [rax - 0x73], ecx ; jg 0xb5c86 ; jne 0xb653b ; ret
0x00000000000b7328 : add dword ptr [rax - 0x73], ecx ; jg 0xb7339 ; jne 0xb7d5b ; ret
0x0000000000082f20 : add dword ptr [rax - 0x75], ecx ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x0000000000127421 : add dword ptr [rax - 0x75], ecx ; adc ecx, dword ptr [rax - 0x77] ; ror dword ptr [rdi], 0x84 ; ret 0
0x000000000007347d : add dword ptr [rax - 0x75], ecx ; cmp byte ptr [rax - 0x77], cl ; lea ecx, [rax - 0x17000006] ; ret
0x000000000012213d : add dword ptr [rax - 0x75], ecx ; push rsp ; retf 0x8b40
0x00000000001091e6 : add dword ptr [rax - 0x75], ecx ; xor ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000b1fc6 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x0000000000093291 : add dword ptr [rax - 0x77], ecx ; adc eax, 0x151037 ; ret
0x000000000009e153 : add dword ptr [rax - 0x77], ecx ; add byte ptr [r8 - 0x77], r9b ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000001740f2 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000a00d8 : add dword ptr [rax - 0x77], ecx ; fisttp word ptr [rax + 0x29] ; ret 0x8d48
0x00000000000d69fc : add dword ptr [rax - 0x77], ecx ; fmul dword ptr [rdi] ; mov dh, 0x40 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000008589b : add dword ptr [rax - 0x77], ecx ; jb 0x858d0 ; mov byte ptr [rcx], dil ; ret
0x000000000008d324 : add dword ptr [rax - 0x77], ecx ; jb 0x8d359 ; mov byte ptr [rcx], dil ; ret
0x000000000008d414 : add dword ptr [rax - 0x77], ecx ; jb 0x8d449 ; mov byte ptr [rcx], dil ; ret
0x000000000008aaed : add dword ptr [rax - 0x77], ecx ; or byte ptr [r15], r9b ; mov dh, 0x10 ; pop rbx ; mov eax, edx ; ret
0x000000000008ac0d : add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0x10 ; pop rbx ; mov eax, edx ; ret
0x000000000008d34d : add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x0000000000074cf0 : add dword ptr [rax - 0x77], ecx ; push rsi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000009d031 : add dword ptr [rax - 0x77], ecx ; ret
0x000000000009a1dd : add dword ptr [rax - 0x77], ecx ; ret 0x4574
0x00000000001570e3 : add dword ptr [rax - 0x77], ecx ; ret 0x6348
0x000000000008ed36 : add dword ptr [rax - 0x77], ecx ; ret 0x850f
0x00000000000f8f8b : add dword ptr [rax - 0x77], ecx ; ret 0xc148
0x00000000000ce6f8 : add dword ptr [rax - 0x77], ecx ; retf
0x0000000000074c01 : add dword ptr [rax - 0x77], ecx ; retf 0x3948
0x00000000000d4873 : add dword ptr [rax - 0x77], ecx ; retf 0x44f6
0x00000000000f4a4a : add dword ptr [rax - 0x77], ecx ; retf 0xc148
0x000000000008a61d : add dword ptr [rax - 0x77], ecx ; sub byte ptr [rax - 0x78], r8b ; cmp byte ptr [rcx + rcx*4 - 0x30], al ; ret
0x000000000013b08f : add dword ptr [rax - 0x78], eax ; ja 0x13b09a ; ret
0x000000000012a11c : add dword ptr [rax - 0x7b], ecx ; push qword ptr [rbp - 0x1a] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000a0dd1 : add dword ptr [rax - 0x7b], ecx ; ror byte ptr [rax - 0x77], 0xd8 ; pop rbx ; cmovne rax, rdi ; ret
0x000000000009cb67 : add dword ptr [rax - 0x7b], ecx ; ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd084
0x000000000013b7d4 : add dword ptr [rax - 0x7b], ecx ; sar byte ptr [rax + 0xe], cl ; mov rax, rdx ; movsxd rdx, esi ; ret
0x0000000000039c0f : add dword ptr [rax - 0x7cb700b1], ecx ; ret 0x4901
0x000000000017a0aa : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x00000000000b4c0b : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000a0858 : add dword ptr [rax - 0x7d], ecx ; out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x000000000012c1ae : add dword ptr [rax - 0x7d], ecx ; out dx, eax ; add dword ptr [rax + 0x39], ecx ; ret 0x1174
0x000000000002877a : add dword ptr [rax - 0x7d], ecx ; ret
0x000000000013a2f6 : add dword ptr [rax - 0x7d], ecx ; ret 0x3904
0x0000000000046170 : add dword ptr [rax - 0x7d], ecx ; ret 0x4001
0x0000000000045ba2 : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x0000000000139b4e : add dword ptr [rax - 0x7d], ecx ; ret 0x4104
0x000000000002cbc9 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000095f9b : add dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x00000000000fe45b : add dword ptr [rax - 0x7d], ecx ; ret 0x4910
0x00000000000dbd52 : add dword ptr [rax - 0x7d], ecx ; ret 0x4c48
0x0000000000101aa8 : add dword ptr [rax - 0x7d], ecx ; ret 0x8301
0x00000000000ef284 : add dword ptr [rax - 0x7d], ecx ; ret 0x8304
0x00000000000e552b : add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x0000000000036e7b : add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x0000000000101322 : add dword ptr [rax - 0x7d], ecx ; ret 0x8901
0x00000000000661aa : add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x0000000000101321 : add dword ptr [rax - 0x7d], r9d ; ret 0x8901
0x0000000000053151 : add dword ptr [rax - 0x7f], ecx ; ret
0x000000000007b8fb : add dword ptr [rax - 0x90f43], eax ; jmp qword ptr [rax]
0x000000000010d6d5 : add dword ptr [rax - 1], edi ; jmp 0x10d6a6
0x0000000000114285 : add dword ptr [rax - 1], edi ; jmp 0x114256
0x0000000000114335 : add dword ptr [rax - 1], edi ; jmp 0x114306
0x00000000000e16ad : add dword ptr [rax - 1], edi ; jmp 0xe167f
0x0000000000039800 : add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x00000000000e20b3 : add dword ptr [rax], 0x83480000 ; ret 0x480f
0x0000000000120823 : add dword ptr [rax], 1 ; ret
0x000000000012964b : add dword ptr [rax], eax ; add al, ch ; lodsd eax, dword ptr [rsi] ; ret
0x00000000000ffe00 : add dword ptr [rax], eax ; add al, ch ; pop rax ; retf 0xfffd
0x00000000000fbf15 : add dword ptr [rax], eax ; add al, ch ; ret
0x000000000013aceb : add dword ptr [rax], eax ; add bl, al ; ret
0x000000000013ace2 : add dword ptr [rax], eax ; add bl, al ; xor eax, eax ; ret
0x00000000000a5313 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000c1a6f : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; retf
0x000000000002a02a : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000097251 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x00000000000e35c6 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf 0x1f74
0x00000000000e3057 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000018e441 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf 0xd975
0x000000000008098b : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000013a524 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000f49cb : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; retf 0x8b48
0x00000000000ed33f : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; retf 0x8b4c
0x000000000010117d : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rbp + rcx*4 + 5], 1 ; ret
0x00000000000efcb3 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rdi], 1 ; mov dh, 0x14 ; adc dword ptr [rcx], eax ; ret 0x428d
0x00000000000aff13 : add dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x0000000000181f9f : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; vzeroupper ; ret
0x0000000000058f85 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xc001
0x000000000004a1ae : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000146d1f : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x0000000000119c54 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call r12
0x000000000009c2e5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; jg 0x9c33e ; mov rsi, rbp ; call rax
0x000000000015da52 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000015df0d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000009b833 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; fimul dword ptr [rcx + rcx*4 - 0xa] ; mov rdi, r13 ; call rax
0x000000000015d3cb : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; mov cl, 0xe9 ; add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000147ace : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x000000000008c98a : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000008367e : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000193ef1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000002e341 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf
0x00000000000ba0ee : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000015da0a : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000111aac : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; xor esi, esi ; syscall
0x000000000017a52d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x0000000000098e40 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000027005 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c5af5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000002f18b : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000017c4ed : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000e1b38 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000e0f49 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000183eaf : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017c441 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000038fd3 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000000fbe05 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf
0x000000000015e150 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000009af06 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret 0x6be2
0x000000000013ac8f : add dword ptr [rax], eax ; add byte ptr [rax - 1], bh ; cmove eax, edx ; ret
0x0000000000027ad1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000eaeaf : add dword ptr [rax], eax ; add byte ptr [rax], al ; add dword ptr [rdi + 4], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000efce7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rdx, rcx ; jmp 0xefd07
0x0000000000086ac0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000125e0e : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000005c583 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000148bd3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000082c98 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000114ab0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001526cd : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x0000000000044b2a : add dword ptr [rax], eax ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x0000000000155d78 : add dword ptr [rax], eax ; add byte ptr [rax], al ; cmp esi, 2 ; je 0x155d69 ; jmp 0x155d50
0x00000000000cdf42 : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0xcdfba ; lea rax, [rdi - 0x10] ; ret
0x0000000000190551 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0x190568 ; neg eax ; ret
0x00000000000cda01 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0xcda11 ; neg eax ; ret
0x000000000018d327 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jl 0x18d338 ; neg eax ; ret
0x0000000000147e8c : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x147e61
0x000000000014852f : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x1484fc
0x00000000001544ac : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x154481
0x000000000015452c : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x154501
0x00000000001545ec : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x1545c1
0x0000000000154b4d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x154b23
0x0000000000154bdd : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x154bb3
0x0000000000154cfc : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x154cd1
0x0000000000066794 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x66787
0x0000000000077739 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x000000000010fc2d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x10fca0 ; call 0x10c658
0x00000000000807b1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; lea rcx, [rbx + 0x40] ; mov rdi, rbx ; call rax
0x00000000000eaa61 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov byte ptr [rdi], 0x5b ; ret
0x0000000000155b6e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov dword ptr [rdi + 0x28], edx ; ret
0x000000000005869e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov dword ptr [rdx], 0xffffc002 ; ret
0x000000000009355a : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov dword ptr [rip + 0x150d48], eax ; ret
0x000000000012bdbe : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x00000000000e38ff : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x000000000014bd94 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000009b5cd : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x0000000000155c62 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x18], rdx ; ret
0x00000000000585e6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000093537 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rip + 0x150d4e], rax ; ret
0x000000000009350a : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rip + 0x150d73], rax ; ret
0x00000000000934ea : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rip + 0x150d8b], rax ; ret
0x0000000000147046 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000078ae6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov r10, rdx ; jmp r11
0x0000000000077197 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov r10, rdx ; xor esi, esi ; jmp rax
0x000000000007edc6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov r9, rsi ; jmp rax
0x000000000014c0c5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbp ; call 0x148b99
0x0000000000048a72 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x000000000007e261 : add dword ptr [rax], eax ; add byte ptr [rax], al ; movsxd rax, dword ptr [rax + rcx*4] ; add rax, rdx ; jmp rax
0x000000000007de59 : add dword ptr [rax], eax ; add byte ptr [rax], al ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdx ; jmp rax
0x000000000007ef15 : add dword ptr [rax], eax ; add byte ptr [rax], al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rdx ; jmp rax
0x000000000014f2f5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [r8 + 0x20], xmm2 ; ret
0x000000000014e9ca : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [r8 + 8], xmm0 ; ret
0x000000000014bd0f : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm1 ; ret
0x000000000014e9f7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm2 ; ret
0x000000000014f307 : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm3 ; ret
0x000000000014f2e7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm4 ; ret
0x00000000000ce8a5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r12 ; pop r14 ; mov dword ptr [r11 + 0xc], r8d ; ret
0x0000000000061abc : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000061b8e : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000147926 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000001064b3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000056458 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014475d : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000010b709 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000562e4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000044906 : add dword ptr [rax], eax ; add byte ptr [rax], al ; shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000010d01e : add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000e3761 : add dword ptr [rax], eax ; add byte ptr [rax], al ; test edi, edi ; js 0xe3778 ; ret
0x000000000004da96 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x29], cl ; ret
0x00000000000ec057 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x73], cl ; pop rdx ; dec dword ptr [rcx + 0x29] ; ret
0x000000000009727b : add dword ptr [rax], eax ; add byte ptr [rbp - 0x75], cl ; and byte ptr [r9 - 0x75], cl ; push rcx ; or dh, dh ; ret 0x7404
0x00000000000eccbb : add dword ptr [rax], eax ; add byte ptr [rbp - 0x76bb008b], cl ; retf 0x8948
0x00000000000aa378 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000010950c : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf 0x35e9
0x0000000000026b05 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x85 ; retf
0x0000000000146b7c : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7ed28a40], al ; ret
0x000000000008bba9 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000063f97 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000062ed1 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000136908 : add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 0x15], cl ; scasb al, byte ptr [rdi] ; sub byte ptr [rbx], cl ; add byte ptr [rcx - 0x3f], cl ; retf 0x6411
0x0000000000111377 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x2117c385], cl ; ret 0xffff
0x00000000000c2bab : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7af08f08], al ; retf 1
0x00000000000f0efa : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7af7db84], cl ; push qword ptr [rbx - 0xa] ; ret
0x000000000003e46a : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fc08], al ; retf 0
0x00000000000d08d0 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x76bc2], al ; add byte ptr [rdi], cl ; ret 0xf8c1
0x000000000006f4d7 : add dword ptr [rax], eax ; add byte ptr [rcx + 1], cl ; ret 0x3b45
0x000000000011ff23 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x3a], cl ; mov edi, ebx ; mov eax, r14d ; syscall
0x000000000009b19b : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 6], cl ; mov rdi, r13 ; call rax
0x00000000000dd634 : add dword ptr [rax], eax ; add byte ptr [rcx + rdi + 0x3d], cl ; ret 0x10
0x00000000000e8a6e : add dword ptr [rax], eax ; add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 - 0x6bf0a206], r8d ; ret 0xb60f
0x00000000001933f3 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x73], cl ; push rcx ; add edi, esi ; ret 0x7ffe
0x0000000000119318 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; call r12
0x0000000000119198 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; jge 0x1191a7 ; call r12
0x00000000001191c8 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; jge 0x1191d7 ; call r12
0x00000000000920c6 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000000806c6 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x76b3d795], cl ; retf 0x8949
0x000000000006f542 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000006f52b : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; rol dword ptr [rcx + rcx*2], 1 ; ret
0x0000000000108a97 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x000000000002a6e7 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x00000000000a2927 : add dword ptr [rax], eax ; add byte ptr [rcx - 9], al ; ret 0xf800
0x00000000000cfc6b : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00000000000fbd91 : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret 0x8941
0x0000000000134ca2 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000104b92 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; fild dword ptr [rbx - 0x6af0fd08] ; ret
0x000000000014f482 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; leave ; call 0x13b6d7
0x000000000013f65a : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x75], 5 ; ret 0xa47
0x00000000000b9f10 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x0000000000035fe2 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; enter -0x3f77, 0xf ; retf 0x148
0x000000000013acaf : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0x66c3
0x000000000013acd9 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xb8c3
0x0000000000037e4f : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; retf 0xd289
0x0000000000140f72 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000011dcd5 : add dword ptr [rax], eax ; add byte ptr [rdx + 8], bh ; syscall
0x000000000005ca1d : add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x000000000002eab0 : add dword ptr [rax], eax ; add byte ptr [rsi - 0x77], ah ; or ecx, dword ptr [rax - 0x77] ; ret 0x8948
0x00000000001823ac : add dword ptr [rax], eax ; add ch, al ; std ; je 0x18241d ; and ch, al ; std ; xlatb ; ret
0x0000000000182440 : add dword ptr [rax], eax ; add ch, al ; std ; xlatb ; ret
0x000000000018244c : add dword ptr [rax], eax ; add ch, al ; std ; xlatb ; ret 0xc085
0x0000000000061d33 : add dword ptr [rax], eax ; add ch, bl ; fsub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; adc dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf 0xf66
0x00000000000f8075 : add dword ptr [rax], eax ; add cl, ch ; ret
0x00000000000f0ef1 : add dword ptr [rax], eax ; add dh, dh ; ret
0x000000000018e595 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x000000000018e5a2 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x000000000018e5af : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x000000000018e567 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000018e574 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000018e581 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x0000000000116a0d : add dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x000000000009d2d1 : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x000000000009cd6e : add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x00000000000551f6 : add dword ptr [rax], eax ; jne 0x551f5 ; pop rbx ; ret
0x000000000009e367 : add dword ptr [rax], eax ; lea rax, [rip + 0x1c090] ; cmovne rax, rdx ; ret
0x00000000000bc687 : add dword ptr [rax], eax ; lea rdx, [rip + 0x11930] ; cmovne rax, rdx ; ret
0x000000000009cd67 : add dword ptr [rax], eax ; lea rdx, [rip + 0x13800] ; cmovne rax, rdx ; ret
0x000000000009e799 : add dword ptr [rax], eax ; lea rdx, [rip + 0x1b84e] ; cmove rax, rdx ; ret
0x000000000009e449 : add dword ptr [rax], eax ; lea rdx, [rip + 0x1bb7e] ; cmove rax, rdx ; ret
0x000000000009e2e9 : add dword ptr [rax], eax ; lea rdx, [rip + 0x1bcfe] ; cmove rax, rdx ; ret
0x00000000000bb3a8 : add dword ptr [rax], eax ; lea rdx, [rip + 0xd4b9f] ; cmovne rax, rdx ; ret
0x000000000009ce87 : add dword ptr [rax], eax ; lea rdx, [rip + 0xd5c30] ; cmovne rax, rdx ; ret
0x000000000009e4e7 : add dword ptr [rax], eax ; lea rdx, [rip + 0xd8900] ; cmovne rax, rdx ; ret
0x000000000009cdba : add dword ptr [rax], eax ; lea rdx, [rip + 0xf16fd] ; cmovne rax, rdx ; ret
0x000000000011254e : add dword ptr [rax], eax ; mov eax, 0x23 ; syscall
0x000000000017d8d8 : add dword ptr [rax], eax ; mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000010d6a8 : add dword ptr [rax], eax ; mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000010d81f : add dword ptr [rax], eax ; mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000017f1e1 : add dword ptr [rax], eax ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000011423a : add dword ptr [rax], eax ; mov edi, ebx ; mov edx, eax ; mov eax, 0x4a ; syscall
0x00000000001142ea : add dword ptr [rax], eax ; mov edi, ebx ; mov edx, eax ; mov eax, 0x4b ; syscall
0x000000000010d68a : add dword ptr [rax], eax ; mov edi, ebx ; mov edx, eax ; mov eax, 3 ; syscall
0x000000000017f1ad : add dword ptr [rax], eax ; mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000001141ac : add dword ptr [rax], eax ; nop ; mov eax, 0xa3 ; syscall
0x000000000011186c : add dword ptr [rax], eax ; nop ; mov r10d, ecx ; mov eax, 0xdd ; syscall
0x0000000000113fba : add dword ptr [rax], eax ; nop dword ptr [rax] ; mov eax, 0xab ; syscall
0x00000000000a6d60 : add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00000000000489f0 : add dword ptr [rax], eax ; ret
0x0000000000187397 : add dword ptr [rax], eax ; vzeroupper ; ret
0x00000000000b862f : add dword ptr [rax], ebp ; str word ptr [rcx + 0x63] ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000ecb91 : add dword ptr [rax], edi ; jne 0xecbb4 ; cmp byte ptr [rsi], cl ; je 0xecb3e ; ret
0x000000000009df2c : add dword ptr [rax], edi ; retf 0x850f
0x00000000000a0993 : add dword ptr [rax], edi ; test dl, dl ; cmovne rax, rdi ; ret
0x00000000001268d3 : add dword ptr [rax], esp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a2926 : add dword ptr [rax], r8d ; add byte ptr [rcx - 9], al ; ret 0xf800
0x00000000000a02f5 : add dword ptr [rbp + 0x10], esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a295e : add dword ptr [rbp + 0x19], eax ; fild dword ptr [rcx - 0x7d] ; ret
0x0000000000118782 : add dword ptr [rbp + 0x1b], esi ; ret
0x00000000000a44ea : add dword ptr [rbp + 0x29], eax ; retf 0x634d
0x000000000017b84b : add dword ptr [rbp + 0x32], esi ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000000a609b : add dword ptr [rbp + 0x38], eax ; retf 0x2f75
0x00000000001260bc : add dword ptr [rbp + 0x38], ebx ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f29f3 : add dword ptr [rbp + 0x39], eax ; retf 0x820f
0x000000000011874e : add dword ptr [rbp + 0x3f], esi ; ret
0x000000000010cb8a : add dword ptr [rbp + 0x43], esi ; mov eax, 0x10c ; syscall
0x0000000000127ca7 : add dword ptr [rbp + 0x440f45c9], eax ; ror dword ptr [rax - 0x7d], 1 ; ret
0x0000000000127d52 : add dword ptr [rbp + 0x440f45f6], eax ; retf
0x0000000000093427 : add dword ptr [rbp + 0xe], esi ; nop word ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000035aa0 : add dword ptr [rbp + rbx*2 + 0x31], esi ; in eax, dx ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x00000000000bbccc : add dword ptr [rbp + rcx*4 + 0x4c], ecx ; and al, 0x20 ; call rbx
0x00000000000bb738 : add dword ptr [rbp + rcx*4 + 0x4c], ecx ; and al, 0x38 ; call rbx
0x0000000000154572 : add dword ptr [rbp - 0x14], esi ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000009f333 : add dword ptr [rbp - 0x16], esi ; ret
0x00000000000562e0 : add dword ptr [rbp - 0x23], esi ; mov eax, 1 ; ret
0x000000000009c55a : add dword ptr [rbp - 0x2d], esi ; mov rdi, rsi ; call rax
0x0000000000114fec : add dword ptr [rbp - 0x2f], esi ; ret
0x000000000013b372 : add dword ptr [rbp - 0x55], esi ; jmp 0x13b33d
0x00000000000c91e9 : add dword ptr [rbp - 0x57c03b0], ecx ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x00000000000a22bb : add dword ptr [rbp - 0x66], esi ; cmp r9, -1 ; cmove r9, rcx ; jmp 0xa229e
0x00000000000c65fa : add dword ptr [rbp - 0x6d], esi ; cmp rcx, -1 ; cmove rcx, rdi ; jmp 0xc65dd
0x000000000013b3fa : add dword ptr [rbp - 0x71], esi ; mov eax, 0xffffffff ; ret
0x00000000000c5fb3 : add dword ptr [rbp - 0x77], eax ; ret
0x0000000000100b30 : add dword ptr [rbp - 0x7b], ecx ; in al, 0x75 ; retf 0x6348
0x00000000000a0a44 : add dword ptr [rbp - 0xf], esi ; jmp 0xa0a18
0x00000000000a085c : add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x00000000001181e0 : add dword ptr [rbp], ebx ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a036d : add dword ptr [rbp], esp ; xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000016b722 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000008c945 : add dword ptr [rbx + 0x18], ebp ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f800b : add dword ptr [rbx + 0x1be01ea], eax ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret
0x00000000000f6f83 : add dword ptr [rbx + 0x1be01ea], eax ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret 0x8f0f
0x0000000000155f74 : add dword ptr [rbx + 0x28], esp ; mov qword ptr [rbx + 0x20], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000155f73 : add dword ptr [rbx + 0x28], r12d ; mov qword ptr [rbx + 0x20], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fae30 : add dword ptr [rbx + 0x294803e0], eax ; ret 0x148
0x00000000000a623f : add dword ptr [rbx + 0x294803e0], eax ; ret 0x14c
0x00000000000e9f34 : add dword ptr [rbx + 0x294803e1], eax ; retf 0x148
0x00000000000ea29f : add dword ptr [rbx + 0x294903e1], eax ; retf
0x0000000000191fed : add dword ptr [rbx + 0x40ba01e3], eax ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret 0x8949
0x00000000000eaeb6 : add dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x0000000000080b1f : add dword ptr [rbx + 0x63480012], ebx ; add al, 0x82 ; add rax, rdx ; jmp rax
0x00000000000ec690 : add dword ptr [rbx + 0x634801ea], eax ; retf
0x0000000000148062 : add dword ptr [rbx + rcx + 0x48], esi ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000118747 : add dword ptr [rbx + rdi + 0x41], esi ; test byte ptr [rbx + 8], 1 ; jne 0x11879a ; ret
0x000000000013b492 : add dword ptr [rbx - 0x3d], ebx ; nop dword ptr [rax] ; ret
0x000000000007d915 : add dword ptr [rbx - 0x4ff43], eax ; call qword ptr [rax]
0x000000000007d941 : add dword ptr [rbx - 0x50743], eax ; jmp qword ptr [rax]
0x00000000000ba96d : add dword ptr [rbx - 0x50f0fe40], eax ; ret 0x518d
0x0000000000077ae2 : add dword ptr [rbx - 0x51743], eax ; call qword ptr [rax]
0x000000000004158f : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000000e553b : add dword ptr [rbx - 0x7cb7fb37], eax ; ret 0xeb01
0x000000000007af8f : add dword ptr [rbx - 0x8f77b], ecx ; inc dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x9f ; ret
0x0000000000117ca5 : add dword ptr [rbx], ebp ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000105e48 : add dword ptr [rbx], esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000061bff : add dword ptr [rcx + 0x18263a0d], ecx ; add byte ptr [rax + 0x63], cl ; retf 0x8948
0x00000000000b2056 : add dword ptr [rcx + 0x3418b02], ecx ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000009e91c : add dword ptr [rcx + 0x39], ecx ; ret
0x000000000011ff16 : add dword ptr [rcx + 0x39], ecx ; ret 0x4e73
0x000000000009d82b : add dword ptr [rcx + 0x39], ecx ; ret 0x672
0x00000000000e81dc : add dword ptr [rcx + 0x39], ecx ; ret 0xde75
0x00000000000e8161 : add dword ptr [rcx + 0x39], ecx ; ret 0xe975
0x00000000000b2016 : add dword ptr [rcx + 0x4418a02], ecx ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000010bd95 : add dword ptr [rcx + 0x63], ecx ; test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x000000000010f20e : add dword ptr [rcx + 0x74c085c3], ecx ; retf
0x00000000000ecb81 : add dword ptr [rcx + 0x80e1], eax ; add byte ptr [rdi], cl ; ret 0xc35b
0x000000000013b353 : add dword ptr [rcx + 0xf], eax ; mov dh, 0x42 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x000000000005a90c : add dword ptr [rcx + 0xf], eax ; mov esi, 0x89412404 ; ret
0x000000000013c7c0 : add dword ptr [rcx + 0xf], eax ; xchg eax, edi ; ret 0xf631
0x00000000000e4afd : add dword ptr [rcx + 0xf], eax ; xchg eax, esp ; ret 0x894c
0x000000000013f733 : add dword ptr [rcx + 0xf], ecx ; mov esi, 0x89480045 ; ret
0x0000000000029953 : add dword ptr [rcx + 0xf], ecx ; mov esi, 0x89480045 ; ret 0xf641
0x0000000000129bd3 : add dword ptr [rcx + 0xf], ecx ; mov esi, 0x89482404 ; ret 0xe883
0x000000000010c13a : add dword ptr [rcx + 0xf], ecx ; ret
0x0000000000118cb0 : add dword ptr [rcx + 9], ecx ; ret
0x00000000001187ec : add dword ptr [rcx + 9], ecx ; ret 0x894d
0x0000000000118866 : add dword ptr [rcx + 9], ecx ; retf 0x894c
0x0000000000191151 : add dword ptr [rcx + 9], ecx ; retf 0xe783
0x000000000013b234 : add dword ptr [rcx + rcx - 0x7b], esi ; sal byte ptr [rbp + 0x15], 0x44 ; mov eax, eax ; ret
0x0000000000118d32 : add dword ptr [rcx + rcx*4 + 0x68], ecx ; or byte ptr [rcx - 0x7d], al ; ret 0x4901
0x000000000010353f : add dword ptr [rcx + rcx*4 + 0x78], ecx ; and byte ptr [rbp + 0x31], al ; jmp qword ptr [rsi + 0xf]
0x000000000013eb33 : add dword ptr [rcx + rcx*4 - 1], ecx ; call 0x13b606
0x00000000000dbf33 : add dword ptr [rcx + rdi - 0x1d], ecx ; jne 0xdbf2a ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ed5d7 : add dword ptr [rcx + rdi - 0x3b], eax ; jg 0xed5b2 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bba22 : add dword ptr [rcx - 0x75], ecx ; push 0 ; lea r9, [rsp + 0x28] ; call r12
0x00000000000c987c : add dword ptr [rcx - 0x75], ecx ; push 0 ; lea r9, [rsp + 0x30] ; call r12
0x00000000000ef1c4 : add dword ptr [rcx - 0x75], ecx ; push rbx ; or byte ptr [rcx + 0x63493846], cl ; ret 0x4c6
0x00000000000b2006 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x0000000000038b50 : add dword ptr [rcx - 0x77], 0x83488434 ; rol byte ptr [rcx], 0x39 ; ret 0xf177
0x00000000000970da : add dword ptr [rcx - 0x77], ecx ; push rdx ; or byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000057c18 : add dword ptr [rcx - 0x77], ecx ; push rsp ; ret
0x000000000004adc8 : add dword ptr [rcx - 0x77], ecx ; ret 0x8944
0x000000000011feeb : add dword ptr [rcx - 0x77], ecx ; ror dword ptr [rax - 0x7d], cl ; ret 0x4c02
0x00000000000a3b16 : add dword ptr [rcx - 0x7c2de63f], ecx ; ret 0x8305
0x000000000003419f : add dword ptr [rcx - 0x7d], eax ; dec dword ptr [rip - 0x7cb79d8c] ; ret
0x00000000000d5d1b : add dword ptr [rcx - 0x7d], eax ; ret
0x0000000000118e8f : add dword ptr [rcx - 0x7d], eax ; ret 0x4801
0x000000000002c079 : add dword ptr [rcx - 0x7d], ecx ; ret
0x000000000013b358 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x00000000001811a5 : add dword ptr [rcx], 0 ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000181171 : add dword ptr [rcx], 0 ; mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000001609ad : add dword ptr [rcx], 0x89480000 ; ret
0x00000000000cde7b : add dword ptr [rcx], eax ; add byte ptr [rax], al ; lea rax, [rdi - 0x10] ; ret
0x000000000010ccc0 : add dword ptr [rcx], eax ; add byte ptr [rax], al ; mov rsi, rdi ; mov edi, 0xffffff9c ; syscall
0x000000000013ace1 : add dword ptr [rcx], eax ; add byte ptr [rax], al ; ret
0x000000000010ce4d : add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000001905ce : add dword ptr [rcx], eax ; add dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0xc148
0x00000000001905cc : add dword ptr [rcx], eax ; add dword ptr [rcx], eax ; add dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0xc148
0x00000000001905ca : add dword ptr [rcx], eax ; add dword ptr [rcx], eax ; add dword ptr [rcx], eax ; add dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0xc148
0x00000000001905cd : add dword ptr [rcx], eax ; add dword ptr [rcx], eax ; imul rax, rdx ; shr rax, 0x38 ; ret
0x00000000001905cf : add dword ptr [rcx], eax ; imul rax, rdx ; shr rax, 0x38 ; ret
0x00000000000eb1a9 : add dword ptr [rcx], eax ; ret
0x00000000000551ab : add dword ptr [rcx], eax ; std ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000f236e : add dword ptr [rcx], ebp ; ror dword ptr [rax + 0x63], cl ; ror byte ptr [rax + 0x63], cl ; ret
0x00000000000e3503 : add dword ptr [rcx], ebx ; push rsp ; mov edx, 0x7f ; cmovne rax, rdx ; ret
0x00000000000ecaa5 : add dword ptr [rcx], ebx ; rol byte ptr [rbx - 0x3f7cfd20], 8 ; ret
0x000000000012c003 : add dword ptr [rcx], ebx ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d5b0ce0], al ; ret
0x000000000008f47d : add dword ptr [rcx], ecx ; retf 0x8d41
0x000000000013b334 : add dword ptr [rcx], edi ; bnd jb 0x13b32e ; mov eax, 0xffffffff ; ret
0x00000000001284ff : add dword ptr [rcx], edi ; ret 0x840f
0x00000000000ef35b : add dword ptr [rcx], edi ; ret 0x8e0f
0x00000000000ed3a4 : add dword ptr [rcx], edi ; ret 0xc675
0x00000000000ed085 : add dword ptr [rcx], edi ; ret 0xee7f
0x0000000000038b58 : add dword ptr [rcx], edi ; ret 0xf177
0x00000000000f3afa : add dword ptr [rcx], edi ; retf 0x870f
0x00000000000bbcc8 : add dword ptr [rcx], esi ; shr byte ptr [rdx + 1], cl ; lea r9, [rsp + 0x20] ; call rbx
0x00000000000ba542 : add dword ptr [rdi + 0x15], esi ; jb 0xba550 ; mov byte ptr [rdi], cl ; ret
0x00000000000ba103 : add dword ptr [rdi + 0x26], esi ; jb 0xba117 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000155ea0 : add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x0000000000155eb0 : add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x0000000000155f43 : add dword ptr [rdi + 0x28], esi ; ret
0x00000000001895d0 : add dword ptr [rdi + 0x2c], esi ; jb 0x1895e1 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000018e468 : add dword ptr [rdi + 0x3a], esi ; jb 0x18e479 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000001890e3 : add dword ptr [rdi + 0x3b], esi ; jb 0x1890f7 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000018de43 : add dword ptr [rdi + 0x53], esi ; jb 0x18de57 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000eaeb3 : add dword ptr [rdi + 4], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000358cb : add dword ptr [rdi + 6], esi ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000093302 : add dword ptr [rdi + rcx + 0x44], eax ; ret 0xf641
0x00000000000a02bc : add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b8faf : add dword ptr [rdi], ebx ; str word ptr [rcx + 0x63] ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000009c20d : add dword ptr [rdi], ecx ; adc dword ptr [rbx + 0x38], eax ; mov qword ptr [rbx], rsi ; call rcx
0x0000000000044c70 : add dword ptr [rdi], ecx ; adc dword ptr [rdi], eax ; ret
0x000000000014f36c : add dword ptr [rdi], ecx ; enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000351d5 : add dword ptr [rdi], ecx ; mov bh, 0xc0 ; ret
0x00000000000610d2 : add dword ptr [rdi], ecx ; mov byte ptr [rax + rax + 0x63490000], al ; ret 0x8d49
0x000000000013e38d : add dword ptr [rdi], ecx ; mov dh, 0xc3 ; neg eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a6f43 : add dword ptr [rdi], ecx ; mov esi, 0x75c98408 ; in eax, dx ; xor eax, eax ; ret
0x00000000000ea46a : add dword ptr [rdi], ecx ; mov esi, 0xc8dff50 ; retf 0x3948
0x00000000000a6df3 : add dword ptr [rdi], ecx ; mov esi, 0xc984070c ; jne 0xa6df1 ; ret
0x00000000000a6daf : add dword ptr [rdi], ecx ; mov esi, 0xd2840714 ; jne 0xa6db1 ; ret
0x00000000000a6e83 : add dword ptr [rdi], ecx ; mov esi, 0xf2390714 ; je 0xa6e89 ; ret
0x000000000009838c : add dword ptr [rdi], ecx ; ret 0x8348
0x00000000000d94f8 : add dword ptr [rdi], ecx ; ret 0xc083
0x000000000014d3e5 : add dword ptr [rdi], ecx ; retf 0x5489
0x00000000000ba970 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0x518d
0x00000000000ba976 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xda89
0x00000000000ba984 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xe9e9
0x00000000000fa441 : add dword ptr [rdi], ecx ; test byte ptr [rax + 5], cl ; add byte ptr [rax], al ; mov dword ptr [rsp], ebp ; jmp 0xfa41b
0x0000000000129647 : add dword ptr [rdi], ecx ; test byte ptr [rdx - 0x17ffffff], ch ; lodsd eax, dword ptr [rsi] ; ret
0x0000000000175f6e : add dword ptr [rdi], ecx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x0000000000187f2f : add dword ptr [rdi], ecx ; test dword ptr [rdx + 1], edi ; add byte ptr [rax], al ; vzeroupper ; ret
0x0000000000188997 : add dword ptr [rdi], ecx ; test dword ptr [rdx + 4], eax ; add byte ptr [rax], al ; vzeroupper ; ret
0x0000000000188c63 : add dword ptr [rdi], ecx ; test dword ptr [rsi + 1], esi ; add byte ptr [rax], al ; vzeroupper ; ret
0x0000000000107ce6 : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret
0x0000000000057317 : add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8949
0x000000000013b0b5 : add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x8341
0x0000000000051ef2 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x2041
0x0000000000054644 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x7c8b
0x0000000000103c18 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd009
0x000000000015631e : add dword ptr [rdi], ecx ; xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000054977 : add dword ptr [rdi], ecx ; xchg eax, esp ; ror dword ptr [rdx], 0x8c ; and al, 0x91 ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; retf 0x7c83
0x00000000000bac57 : add dword ptr [rdx + 0x2b], 0xe2748104 ; ret
0x00000000000b1fc4 : add dword ptr [rdx + 0x48028801], ecx ; mov eax, edi ; ret
0x0000000000101bf3 : add dword ptr [rdx + 2], edi ; cmove eax, edx ; ret
0x000000000018dbac : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x0000000000063b3e : add dword ptr [rdx + 4], 1 ; ret
0x0000000000063bb0 : add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x000000000018d4dd : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000001205bb : add dword ptr [rdx + rax*2], 1 ; ret
0x0000000000060aeb : add dword ptr [rdx + rax], ebx ; cmp eax, -1 ; sete al ; jmp 0x60ac5
0x0000000000027058 : add dword ptr [rdx + rdx*8 - 0x76b3148b], eax ; out 0xe8, eax ; retf
0x00000000000c5fae : add dword ptr [rdx - 0x73], eax ; jl 0xc5fbd ; add dword ptr [rbp - 0x77], eax ; ret
0x000000000013b14e : add dword ptr [rdx], eax ; pop rbx ; ret
0x00000000000bbc4e : add dword ptr [rdx], ebp ; lea rcx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x00000000000bb89a : add dword ptr [rdx], ebp ; lea rcx, [rax + 4] ; lea r9, [rsp + 0x28] ; call rbx
0x000000000013b14d : add dword ptr [rdx], r8d ; pop rbx ; ret
0x000000000016903e : add dword ptr [rip + 0x14634900], eax ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000929e8 : add dword ptr [rip + 0x154b75], 1 ; ret
0x0000000000028e73 : add dword ptr [rsi + 0x3a], edi ; lea r12d, [r15 + 2] ; call 0x2514c
0x00000000000b1f55 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x00000000000b1fd7 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000011e1bd : add dword ptr [rsi], edx ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000d600a : add dword ptr [rsp + 0x48], edi ; jmp 0xd41d3
0x0000000000091009 : add dword ptr [rsp + rbp - 0x77], esi ; ret 0x8948
0x00000000000fc3d9 : add dword ptr [rsp + rdi - 0x7d], esi ; retf
0x000000000009d2d0 : add dword ptr cs:[rax], eax ; cmove rax, rdx ; ret
0x0000000000185947 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000108a96 : add dword ptr es:[rax], eax ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x00000000000f0ef0 : add dword ptr fs:[rax], eax ; add dh, dh ; ret
0x0000000000196966 : add eax, 0 ; add bl, al ; nop dword ptr [rax] ; ret
0x000000000013a476 : add eax, 0x10 ; ret
0x00000000000a70ac : add eax, 0x103787 ; movsxd rdx, dword ptr [rax + rdx*4] ; add rdx, rax ; jmp rdx
0x00000000000d1d48 : add eax, 0x115bf3 ; jmp 0xd1d68
0x00000000000bb35e : add eax, 0x116bd ; cmove rax, rdx ; ret
0x00000000000cea6e : add eax, 0x118d8d ; add rsp, 8 ; ret
0x00000000000bad6e : add eax, 0x11fdd ; cmove rax, rdx ; ret
0x000000000009d46e : add eax, 0x12a4d ; cmove rax, rdx ; ret
0x00000000000baf7e : add eax, 0x12a9d ; cmove rax, rdx ; ret
0x00000000000bb0fe : add eax, 0x12bad ; cmove rax, rdx ; ret
0x000000000007e1aa : add eax, 0x12bef1 ; movsxd rax, dword ptr [rax + rcx*4] ; add rax, rdx ; jmp rax
0x00000000000bad94 : add eax, 0x12d57 ; cmovne rax, rdx ; ret
0x00000000000bad2e : add eax, 0x12ded ; cmove rax, rdx ; ret
0x000000000009d2ce : add eax, 0x12edd ; cmove rax, rdx ; ret
0x000000000009d30e : add eax, 0x1303d ; cmove rax, rdx ; ret
0x00000000000780e7 : add eax, 0x131c54 ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, r14 ; jmp rax
0x0000000000077fbb : add eax, 0x131c80 ; movsxd rax, dword ptr [rax + rcx*4] ; add rax, r14 ; jmp rax
0x0000000000077dab : add eax, 0x131f10 ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, r14 ; jmp rax
0x00000000000777bb : add eax, 0x132380 ; movsxd rax, dword ptr [rax + rcx*4] ; add rax, r14 ; jmp rax
0x00000000000bae5e : add eax, 0x1341d ; cmove rax, rdx ; ret
0x0000000000163a0d : add eax, 0x14634900 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000009c473 : add eax, 0x147ad8 ; call qword ptr [rax]
0x000000000009c292 : add eax, 0x147cb9 ; call qword ptr [rax]
0x000000000009c1b2 : add eax, 0x147d99 ; call qword ptr [rax]
0x000000000009d4f5 : add eax, 0x14a1ae ; add rsp, 8 ; ret
0x000000000009d4b3 : add eax, 0x14a1f0 ; ret
0x000000000009d4ac : add eax, 0x14a20f ; mov qword ptr [rip + 0x14a1f0], rax ; ret
0x0000000000098a36 : add eax, 0x14b4a5 ; mov qword ptr [rax], rdi ; ret
0x000000000009b5c8 : add eax, 0x14c03b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000009abc1 : add eax, 0x14ca42 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rip + 0x14ca48]
0x000000000009651d : add eax, 0x14d89e ; mov qword ptr [rsp + 8], rdx ; xor edi, edi ; call qword ptr [rax]
0x00000000000989c7 : add eax, 0x14ec08 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000009389c : add eax, 0x15063f ; mov qword ptr [rax], rdx ; ret
0x000000000009355f : add eax, 0x150d48 ; ret
0x000000000009353d : add eax, 0x150d4e ; ret
0x0000000000093510 : add eax, 0x150d73 ; ret
0x00000000000934f0 : add eax, 0x150d8b ; ret
0x00000000000932b6 : add eax, 0x15102d ; ret
0x00000000000932a6 : add eax, 0x151035 ; ret
0x0000000000093256 : add eax, 0x15103d ; ret
0x0000000000093246 : add eax, 0x151055 ; ret
0x0000000000092952 : add eax, 0x152d09 ; ret
0x0000000000093575 : add eax, 0x154072 ; ret
0x0000000000092a4d : add eax, 0x154b12 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000012d1ce : add eax, 0x158d4800 ; cmp dword ptr [rsi + 0xf480005], edi ; ret 0xfc3
0x000000000012d28e : add eax, 0x158d4800 ; pop rcx ; mov ebp, 0xf480005 ; ret 0xfc3
0x000000000012d10e : add eax, 0x158d4800 ; stc ; mov esi, 0xf480005 ; ret 0xfc3
0x00000000000d2a92 : add eax, 0x16d ; ret
0x00000000000339ca : add eax, 0x17bf7d ; ret
0x0000000000026c62 : add eax, 0x188824 ; ret
0x0000000000026c72 : add eax, 0x18a6ae ; ret
0x0000000000043ae0 : add eax, 0x18c48348 ; ret
0x00000000000536d9 : add eax, 0x193d22 ; mov byte ptr [rax + rdx], 0 ; ret
0x0000000000044e24 : add eax, 0x19f37f ; mov eax, edx ; ret
0x0000000000044de1 : add eax, 0x19f3c2 ; ret
0x0000000000044dd1 : add eax, 0x19f3d6 ; ret
0x0000000000048872 : add eax, 0x1a18af ; add rsp, 8 ; ret
0x0000000000047ea6 : add eax, 0x1a2261 ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000034d62 : add eax, 0x1af081 ; mov qword ptr [rax], rdx ; ret
0x000000000003396a : add eax, 0x1b2ed1 ; mov byte ptr [rip + 0x1b2f28], dl ; ret
0x0000000000030cf2 : add eax, 0x1b5a11 ; ret
0x000000000009e0e7 : add eax, 0x1b854 ; cmove rax, rdx ; ret
0x0000000000029b71 : add eax, 0x1bcb7e ; test eax, eax ; je 0x29b89 ; ret
0x000000000009e36b : add eax, 0x1c090 ; cmovne rax, rdx ; ret
0x0000000000028802 : add eax, 0x1c17b1 ; ret
0x00000000000287f2 : add eax, 0x1c17d1 ; ret
0x000000000002641d : add eax, 0x1c3d26 ; ret
0x000000000009d734 : add eax, 0x1c7e7 ; cmovne rax, rdx ; ret
0x000000000009d494 : add eax, 0x1c9e7 ; cmovne rax, rdx ; ret
0x000000000009ceb4 : add eax, 0x1cf27 ; cmovne rax, rdx ; ret
0x0000000000160733 : add eax, 0x1f0f00 ; mov rdi, rbx ; call 0xdca0a
0x0000000000032b0e : add eax, 0x1f0f0000 ; add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x00000000001861a5 : add eax, 0x20 ; add rax, rdi ; sub rax, rdx ; vzeroupper ; ret
0x000000000018212a : add eax, 0x20 ; add rax, rdi ; vzeroupper ; ret
0x0000000000035536 : add eax, 0x200 ; mov qword ptr fs:[rdx], rax ; ret
0x0000000000194c9f : add eax, 0x25060 ; movss dword ptr [rsp - 0x28], xmm0 ; ret
0x00000000001148c0 : add eax, 0x26 ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000047d70 : add eax, 0x28c48348 ; ret
0x000000000002eddb : add eax, 0x29480000 ; retf 0xe083
0x0000000000175ff4 : add eax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00000000000fa445 : add eax, 0x2c890000 ; and al, 0xeb ; ret
0x00000000000720d2 : add eax, 0x31000018 ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x000000000012c316 : add eax, 0x32050348 ; ret
0x00000000000a726e : add eax, 0x37bd ; cmove rax, rdx ; ret
0x00000000001148a3 : add eax, 0x38c48348 ; ret
0x0000000000196261 : add eax, 0x39480005 ; ret
0x0000000000196108 : add eax, 0x3c8b4c00 ; fmul dword ptr [rbx + rdi + 0x24] ; retf 0x3274
0x0000000000196034 : add eax, 0x3d8b4800 ; retf
0x0000000000154f1b : add eax, 0x3d8d4800 ; ret
0x00000000001861c5 : add eax, 0x40 ; add rax, rdi ; sub rax, rdx ; vzeroupper ; ret
0x000000000018214a : add eax, 0x40 ; add rax, rdi ; vzeroupper ; ret
0x000000000012c898 : add eax, 0x41000000 ; pop rsp ; pop rbp ; ret
0x000000000012d35f : add eax, 0x440f4800 ; ret 0x66c3
0x000000000015cf06 : add eax, 0x440f4800 ; ret 0x8d48
0x000000000012d115 : add eax, 0x440f4800 ; ret 0xfc3
0x000000000008a4ea : add eax, 0x4488b41 ; and eax, 1 ; mov edx, eax ; jmp 0x8a4a3
0x00000000000296b9 : add eax, 0x45c74800 ; test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000012b6e7 : add eax, 0x48 ; cmp rax, rdx ; jb 0x12b6ea ; xor eax, eax ; ret
0x0000000000048a30 : add eax, 0x48000000 ; mov dword ptr [rsi + 0x10], eax ; xor eax, eax ; ret
0x0000000000178528 : add eax, 0x48054289 ; lea eax, [rdx + 8] ; ret
0x00000000001741d8 : add eax, 0x48054289 ; mov eax, edi ; ret
0x000000000016b3a3 : add eax, 0x480e8b48 ; mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000b6b36 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; lea rax, [rdi + 0xc] ; ret
0x00000000000b7986 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; lea rax, [rdi + 0xd] ; ret
0x00000000000b54f6 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000154432 : add eax, 0x48c48348 ; ret
0x0000000000072f14 : add eax, 0x49ffffda ; mov eax, ebx ; jmp 0x6f172
0x0000000000146237 : add eax, 0x4c0000e2 ; lea ecx, [rsp + 0x20] ; call qword ptr [rax]
0x000000000019658b : add eax, 0x5048c ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001967a6 : add eax, 0x510e1 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000196963 : add eax, 0x522fc ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001968f5 : add eax, 0x5290f00 ; sbb eax, 0x3d830005 ; retf
0x0000000000196a95 : add eax, 0x52d82 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000001785a9 : add eax, 0x5428948 ; lea rax, [rdx + 0xc] ; ret
0x0000000000174219 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x0000000000175ff0 : add eax, 0x54a8d48 ; jne 0x1762cb ; ret
0x00000000000b5cfa : add eax, 0x57f8d48 ; jne 0xb653b ; ret
0x00000000000b73ae : add eax, 0x57f8d48 ; jne 0xb7d5b ; ret
0x0000000000114828 : add eax, 0x58c48348 ; ret
0x000000000012d358 : add eax, 0x58d4800 ; pop rcx ; add eax, 0x440f4800 ; ret 0x66c3
0x00000000001063a5 : add eax, 0x5b000000 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000133b60 : add eax, 0x5bf08948 ; ret
0x000000000012d35c : add eax, 0x5c18f ; cmove rax, rdx ; ret
0x00000000001062a9 : add eax, 0x5d000000 ; pop r12 ; ret
0x000000000015ab52 : add eax, 0x5d5b0000 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012e6be : add eax, 0x5fbed ; cmp rcx, 4 ; cmovne rax, rdx ; ret
0x0000000000182573 : add eax, 0x60 ; add rax, rdi ; ret
0x0000000000186211 : add eax, 0x60 ; add rax, rdi ; sub rax, rdx ; vzeroupper ; ret
0x000000000018216a : add eax, 0x60 ; add rax, rdi ; vzeroupper ; ret
0x000000000005a511 : add eax, 0x63480000 ; ret 0x8d48
0x0000000000168e4b : add eax, 0x63490005 ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000012c2d6 : add eax, 0x72050348 ; ret
0x00000000000c895a : add eax, 0x74db8500 ; and byte ptr [rcx], bh ; ret
0x00000000000c8a50 : add eax, 0x74db8500 ; sbb bh, byte ptr [rcx] ; ret
0x00000000000ed627 : add eax, 0x7504e183 ; push rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000115198 : add eax, 0x7509fa80 ; or dword ptr [rax - 0x7d], ecx ; call 0xffffffffc34a99b2
0x00000000000c8906 : add eax, 0x75db8500 ; fsubr qword ptr [rcx] ; ret
0x000000000012bd9b : add eax, 0x787d089 ; test eax, eax ; jne 0x12bda0 ; pop rdx ; pop r10 ; ret
0x0000000000152122 : add eax, 0x78c48348 ; ret
0x00000000000b5cfe : add eax, 0x82b850f ; add byte ptr [rax], al ; ret
0x000000000013d313 : add eax, 0x83000000 ; ret
0x00000000000c7e55 : add eax, 0x83480000 ; ret 0x4801
0x000000000017c0dd : add eax, 0x83480000 ; ret 0x4910
0x000000000017ec31 : add eax, 0x83480000 ; ret 0xe910
0x000000000017c031 : add eax, 0x83480000 ; ret 0xeb10
0x00000000000ef5ba : add eax, 0x83485375 ; ret
0x000000000011e2f6 : add eax, 0x841f0fc3 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf 0x2db8
0x000000000017852b : add eax, 0x8428d48 ; ret
0x0000000000114b52 : add eax, 0x85480000 ; ror byte ptr [rdi], 0x84 ; ret 0
0x000000000011c047 : add eax, 0x8900071d ; ret 0xe083
0x000000000008a4da : add eax, 0x8901e083 ; ret 0xd089
0x0000000000043ea8 : add eax, 0x8944c689 ; ret 0xeab8
0x0000000000031d8b : add eax, 0x89480000 ; ret 0x294c
0x0000000000193b80 : add eax, 0x89480000 ; ret 0xc148
0x000000000012c409 : add eax, 0x8948d789 ; ret
0x0000000000149790 : add eax, 0x89490000 ; retf
0x000000000015ece7 : add eax, 0x894c0000 ; imul eax ; sahf ; retf 0xfffc
0x0000000000053ddf : add eax, 0x894c0000 ; retf 0x7c80
0x00000000000a9ef8 : add eax, 0x894d0000 ; retf
0x00000000000a6937 : add eax, 0x89fffffa ; retf
0x000000000015b185 : add eax, 0x8a3c6 ; call qword ptr [rax]
0x000000000015abb8 : add eax, 0x8a993 ; call qword ptr [rax]
0x0000000000119944 : add eax, 0x8b480000 ; cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call r12
0x000000000006f4d0 : add eax, 0x8b4c0000 ; xchg eax, edx ; add qword ptr [rax], rax ; add byte ptr [rcx + 1], cl ; ret 0x3b45
0x000000000015db52 : add eax, 0x8c431 ; call qword ptr [rax]
0x000000000011f640 : add eax, 0x8e57b ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000151d2a : add eax, 0x97c51 ; pop rbx ; ret
0x0000000000151c4a : add eax, 0x97d39 ; pop rbx ; ret
0x0000000000151b6a : add eax, 0x97e31 ; pop rbx ; ret
0x0000000000151a92 : add eax, 0x97f29 ; pop rbx ; ret
0x0000000000151cb8 : add eax, 0x97f5f ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000151bd8 : add eax, 0x9803f ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000151af8 : add eax, 0x9811f ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000151a30 : add eax, 0x981e7 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000151979 : add eax, 0x9829e ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000b73b2 : add eax, 0x997850f ; add byte ptr [rax], al ; ret
0x0000000000151ba2 : add eax, 0xa0 ; pop rbx ; ret
0x0000000000148d37 : add eax, 0xa0d2c ; jmp 0x148c84
0x0000000000145d3a : add eax, 0xa3c3d ; add rsp, 8 ; ret
0x0000000000145d21 : add eax, 0xa3c56 ; test eax, eax ; je 0x145d39 ; ret
0x0000000000140032 : add eax, 0xa3df1 ; mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x14004c ; ret
0x0000000000140122 : add eax, 0xa3ec9 ; mov rax, qword ptr fs:[rax] ; ret
0x000000000014513c : add eax, 0xa47bf ; ret
0x0000000000145114 : add eax, 0xa47e7 ; add rsp, 8 ; ret
0x0000000000141e02 : add eax, 0xa7a19 ; test rax, rax ; jne 0x141e1a ; ret
0x0000000000151c82 : add eax, 0xa8 ; pop rbx ; ret
0x0000000000140981 : add eax, 0xa8e9a ; test rax, rax ; je 0x14099a ; ret
0x000000000013fbf1 : add eax, 0xa99ce ; test eax, eax ; je 0x13fc09 ; ret
0x000000000009fd3e : add eax, 0xaaed ; cmove rax, rdx ; ret
0x00000000001376e0 : add eax, 0xb2f3b ; add rsp, 8 ; ret
0x000000000012c919 : add eax, 0xbc352 ; pop rbp ; ret
0x000000000012bf00 : add eax, 0xbe4b7 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000018bf2a : add eax, 0xc0310000 ; ret
0x00000000001210b2 : add eax, 0xc2da9 ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000009e1be : add eax, 0xc33d ; cmove rax, rdx ; ret
0x0000000000120549 : add eax, 0xc3e0e ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000120520 : add eax, 0xc3e37 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001204ef : add eax, 0xc3e68 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001204c9 : add eax, 0xc3e8e ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001785ad : add eax, 0xc428d48 ; ret
0x00000000000b6b3d : add eax, 0xc478d48 ; ret
0x0000000000163939 : add eax, 0xc634f00 ; mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x000000000012081a : add eax, 0xc79f9 ; mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00000000000d2a72 : add eax, 0xc96bf129 ; cmp edi, ecx ; je 0xd2a8a ; ret
0x0000000000118412 : add eax, 0xcba59 ; mov dword ptr fs:[rax], 0x16 ; ret
0x0000000000117e00 : add eax, 0xd025b ; add rsp, 0x18 ; ret
0x0000000000117dac : add eax, 0xd02ef ; pop rbp ; pop r12 ; ret
0x0000000000117888 : add eax, 0xd0783 ; add rsp, 8 ; ret
0x0000000000117829 : add eax, 0xd0802 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011654b : add eax, 0xd19e0 ; add rsp, 8 ; ret
0x0000000000117d76 : add eax, 0xd27f5 ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bb44e : add eax, 0xd2e6d ; cmp rcx, 4 ; cmovne rax, rdx ; ret
0x0000000000114bb6 : add eax, 0xd321d ; add rsp, 8 ; ret
0x00000000000b798d : add eax, 0xd478d48 ; ret
0x0000000000114ef0 : add eax, 0xd566b ; add rsp, 8 ; ret
0x0000000000196680 : add eax, 0xdb854800 ; jne 0x196670 ; pop rbx ; ret
0x00000000000dbf32 : add eax, 0xe3394c01 ; jne 0xdbf2b ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000108e46 : add eax, 0xe7894c00 ; call 0x250b7
0x0000000000108e45 : add eax, 0xe7894c00 ; call 0x250b8
0x0000000000129434 : add eax, 0xe8000000 ; ret
0x000000000002dd6b : add eax, 0xe9000000 ; retf
0x000000000009e34c : add eax, 0xeb1af ; cmove rax, rdx ; ret
0x000000000009e20e : add eax, 0xf48000f ; ret 0x66c3
0x000000000016b713 : add eax, 0xf7f0ff3 ; ret
0x0000000000103e25 : add eax, 0xf9830000 ; add cl, byte ptr [rax - 0x77] ; ret 0x940f
0x000000000012e6c1 : add eax, 0xf9834800 ; add al, 0x48 ; cmovne eax, edx ; ret
0x000000000009fd7e : add eax, 0xff2d ; cmove rax, rdx ; ret
0x000000000012d37b : add eax, 0xfff8d070 ; cmovne rax, rdx ; ret
0x0000000000150d23 : add eax, 0xffff61d8 ; lea rdx, [rip + 0x3711] ; call qword ptr [rax]
0x000000000010c394 : add eax, 0xffffff57 ; cmove rax, rdx ; ret
0x00000000000551f1 : add eax, 1 ; cmp byte ptr [rax + 1], 0 ; jne 0x551fa ; pop rbx ; ret
0x000000000012080b : add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x000000000012090c : add eax, 1 ; mov word ptr [rdx], ax ; ret
0x00000000000a6f41 : add eax, 1 ; movsx ecx, byte ptr [rax] ; test cl, cl ; jne 0xa6f44 ; xor eax, eax ; ret
0x00000000000a6df1 : add eax, 1 ; movsx ecx, byte ptr [rdi + rax] ; test cl, cl ; jne 0xa6df3 ; ret
0x00000000000a6e81 : add eax, 1 ; movsx edx, byte ptr [rdi + rax] ; cmp edx, esi ; je 0xa6e8b ; ret
0x00000000000a6dad : add eax, 1 ; movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0xa6db3 ; ret
0x0000000000027abd : add eax, 1 ; push rax ; call rbx
0x000000000009e47b : add eax, 1 ; ret
0x00000000000a0916 : add eax, 1 ; sub rsi, 1 ; jne 0xa091b ; xor eax, eax ; ret
0x000000000004b911 : add eax, 2 ; add r10, r8 ; jmp 0x4b933
0x000000000004e851 : add eax, 2 ; add r10, r8 ; jmp 0x4e873
0x00000000000515a1 : add eax, 2 ; add r10, r8 ; jmp 0x515c3
0x000000000013b3b5 : add eax, 2 ; mov dword ptr [r8], r10d ; mov qword ptr [r9], rax ; mov eax, edx ; ret
0x00000000000ce478 : add eax, 2 ; ret
0x00000000000ce491 : add eax, 3 ; ret
0x00000000000bb47c : add eax, 4 ; mov dword ptr [rax], edx ; test edx, edx ; jne 0xbb481 ; ret
0x00000000000bc6b1 : add eax, 4 ; mov edx, dword ptr [rax] ; cmp edx, esi ; je 0xbc6ca ; test edx, edx ; jne 0xbc6bc ; ret
0x00000000001369ad : add eax, 7 ; add byte ptr [rcx + rcx*4 - 9], cl ; call 0x142ca9
0x000000000015e907 : add eax, 8 ; cmp rdx, rax ; ja 0x15e90a ; xor eax, eax ; ret
0x00000000000ecaab : add eax, 8 ; ret
0x0000000000026ec9 : add eax, dword ptr [0] ; ret
0x00000000000f5fd0 : add eax, dword ptr [rax + 0x75040878] ; mov edi, 0xf708588b ; ret
0x00000000000a42cb : add eax, dword ptr [rax] ; add bh, dh ; ret
0x000000000013a0db : add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret 0xe183
0x0000000000043d88 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000004b974 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x0000000000119b04 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call r12
0x00000000000ecdfa : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; or ecx, dword ptr [rax + 0x63] ; ret 0x634c
0x00000000000c8183 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000005566f : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000193f91 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf 0xc149
0x000000000017a312 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x00000000000a418d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000017c27d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017edd1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017c2a1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014caee : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000004790b : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x4b], cl ; adc byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000120146 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000012c676 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; cmovne eax, edx ; ret
0x0000000000139845 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov edi, dword ptr [rbp - 0x60] ; syscall
0x0000000000129b24 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call 0x125d89
0x00000000000ce4d3 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000010d66e : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000120bcd : add eax, dword ptr [rax] ; add byte ptr [rbp + 0x29], cl ; retf 0xd231
0x0000000000193286 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; mov dword ptr [rcx - 0x7d], 0x894c07e7 ; ret 0x8d4f
0x000000000017d278 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000052e2f : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000086046 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000d2426 : add eax, dword ptr [rax] ; add byte ptr [rbx + rcx*4 + 0x15], cl ; and byte ptr [rbp + 0x11], dl ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ba97f : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe3e], al ; ret 0xe9e9
0x00000000000ef352 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x72bed3af], cl ; add dword ptr [rcx], edi ; ret 0x8e0f
0x00000000001195ea : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x85 ; ret 2
0x0000000000119288 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], cl ; call r12
0x00000000000803b6 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x76b3d395], cl ; retf 0x8348
0x0000000000026624 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x000000000014974f : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; retf
0x000000000007b8f5 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], al ; out dx, al ; add dword ptr [rax - 0x90f43], eax ; jmp qword ptr [rax]
0x0000000000185699 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; jmp 0x1856b9
0x0000000000120b9a : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0x3101
0x00000000000a2d09 : add eax, dword ptr [rax] ; add byte ptr [rcx - 9], al ; ret 0xf800
0x000000000012f184 : add eax, dword ptr [rax] ; add byte ptr [rdi + 8], dh ; mov rax, rdi ; sar rax, 6 ; ret
0x000000000012be75 : add eax, dword ptr [rax] ; add byte ptr [rsi + 0x80], bh ; syscall
0x000000000010bd3e : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf02
0x000000000010bd2c : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf20
0x000000000010bd35 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf80
0x000000000012d13a : add eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x00000000000ba63c : add eax, dword ptr [rax] ; cmp edx, 0xff ; cmove rax, rcx ; ret
0x00000000000e2e9c : add eax, dword ptr [rax] ; jmp 0xe2ddf
0x000000000012d2b3 : add eax, dword ptr [rax] ; lea rdx, [rip + 0x3bb44] ; cmovne rax, rdx ; ret
0x000000000012d133 : add eax, dword ptr [rax] ; lea rdx, [rip + 0x3bce4] ; cmovne rax, rdx ; ret
0x000000000012d1f3 : add eax, dword ptr [rax] ; lea rdx, [rip + 0x3e6f4] ; cmovne rax, rdx ; ret
0x0000000000114717 : add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x000000000016e51f : add eax, dword ptr [rax] ; movsxd r9, dword ptr [r10 + r9*4] ; lea r10, [r10 + r9] ; jmp r10
0x00000000000ba621 : add eax, dword ptr [rax] ; ret
0x00000000001390e3 : add eax, dword ptr [rbp + 0x4ce875c0] ; mov edi, edi ; call 0x25322
0x00000000000d7cd3 : add eax, dword ptr [rbp - 0x74f28740] ; jl 0xd7d0a ; xor byte ptr [rcx - 0x77], al ; ret 0xc781
0x0000000000058e7d : add eax, dword ptr [rbp - 0x77] ; ret
0x000000000012d5a3 : add eax, dword ptr [rbp - 0x7c] ; sal byte ptr [rbp - 0x6b], 0x48 ; mov eax, edi ; ret
0x00000000000a0320 : add eax, dword ptr [rbp] ; mov rdx, rax ; jmp 0xa0348
0x0000000000175fb9 : add eax, dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x0000000000026775 : add eax, dword ptr [rcx + 0xf] ; xchg eax, esp ; rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x00000000000b9ade : add eax, dword ptr [rcx + rcx*8 + 0x31c3ed75] ; rol bl, 0x48 ; mov eax, edi ; ret
0x0000000000121b21 : add eax, dword ptr [rcx + rdx] ; ret
0x000000000010c90b : add eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000001218f9 : add eax, dword ptr [rdx + rcx] ; ret
0x00000000001760b9 : add eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x0000000000168c40 : add eax, dword ptr [rip + 0x14634900] ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000018573f : add eax, dword ptr cs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000017a3a8 : add eax, dword ptr fs:[rax] ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x0000000000048bc5 : add eax, eax ; cmp r8, r9 ; jb 0x48bae ; xor eax, eax ; ret
0x00000000000eca88 : add eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000182641 : add eax, eax ; vzeroupper ; ret
0x00000000001605f8 : add eax, ebp ; and cl, byte ptr [rsp + rbp*8 - 1] ; xor eax, eax ; add rsp, 8 ; ret
0x000000000010b935 : add eax, ebp ; in eax, 7 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000010bd9c : add eax, ebp ; jmp rax
0x00000000000657a0 : add eax, ebp ; ret
0x0000000000056e2f : add eax, ebp ; retf
0x00000000000f93de : add eax, ebx ; jmp rax
0x000000000012d3e7 : add eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000185d48 : add eax, ecx ; add rax, rdi ; vzeroupper ; ret
0x0000000000064072 : add eax, ecx ; jmp rax
0x0000000000078eec : add eax, ecx ; mov rdx, qword ptr [rbp - 0x4f8] ; jmp 0x78ec4
0x00000000000aa589 : add eax, ecx ; ret
0x00000000001815a0 : add eax, ecx ; sub rax, rdi ; ret
0x000000000018aa1d : add eax, ecx ; sub rax, rdx ; shr rax, 2 ; vzeroupper ; ret
0x00000000001860dd : add eax, ecx ; sub rax, rdx ; vzeroupper ; ret
0x0000000000181fa6 : add eax, ecx ; vzeroupper ; ret
0x000000000018263e : add eax, edi ; add rax, r8 ; vzeroupper ; ret
0x00000000000aa586 : add eax, edi ; add rax, rcx ; ret
0x00000000001860da : add eax, edi ; add rax, rcx ; sub rax, rdx ; vzeroupper ; ret
0x0000000000181fa3 : add eax, edi ; add rax, rcx ; vzeroupper ; ret
0x00000000000aadaa : add eax, edi ; add rax, rsi ; ret
0x0000000000080a46 : add eax, edi ; jmp rax
0x00000000000a7045 : add eax, edi ; mov dword ptr [rdi], edx ; movzx edx, byte ptr [rsp - 0xc] ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a6ff9 : add eax, edi ; ret
0x000000000018aad5 : add eax, edi ; sub rax, rdx ; shr rax, 2 ; vzeroupper ; ret
0x0000000000186195 : add eax, edi ; sub rax, rdx ; vzeroupper ; ret
0x000000000018211a : add eax, edi ; vzeroupper ; ret
0x000000000010c30d : add eax, edx ; cmp rdi, rsi ; ja 0x10c307 ; ret
0x000000000002729b : add eax, edx ; jmp rax
0x000000000013b85c : add eax, edx ; mov edx, 0x7fffffff ; cmovs eax, edx ; ret
0x00000000000736b9 : add eax, edx ; mov qword ptr [rbp - 0x570], rax ; jmp 0x701bc
0x0000000000148094 : add eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000b0346 : add eax, edx ; sub rax, rdi ; ret
0x00000000000ce17b : add eax, edx ; sub rax, rdi ; shr rax, 2 ; ret
0x0000000000114715 : add eax, esi ; add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x0000000000065cf2 : add eax, esi ; jmp rax
0x00000000000aadad : add eax, esi ; ret
0x000000000005c5e4 : add ebp, 0x30 ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000caee6 : add ebp, 0x3c ; xor ebx, ebx ; jmp 0xcae6f
0x00000000000d0da9 : add ebp, dword ptr [rbx + 0x11] ; add byte ptr [rcx], ch ; ror byte ptr [rbp + 0x480f0750], 1 ; ret 0x8341
0x00000000000d984d : add ebp, dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000cefac : add ebp, dword ptr [rcx] ; ret 0x48d
0x000000000014ff83 : add ebp, ecx ; retf
0x00000000000551ac : add ebp, edi ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000015df12 : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x0000000000151976 : add ebx, dword ptr [rbx - 0x39] ; add eax, 0x9829e ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000043a8c : add ebx, dword ptr [rdx] ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000009fe9d : add ebx, eax ; jne 0x9fe93 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012b74c : add ebx, eax ; nop ; xor eax, eax ; ret
0x00000000000568d1 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000013b093 : add ebx, eax ; nop dword ptr [rax] ; mov eax, 2 ; ret
0x00000000001827fb : add ebx, eax ; nop dword ptr [rax] ; ret
0x00000000000c524d : add ebx, eax ; or eax, 0xffffffff ; ret
0x000000000011db17 : add ebx, eax ; xor ebp, ebp ; pop rax ; pop rdi ; call rax
0x0000000000133b73 : add ebx, ebp ; cwde ; xor eax, eax ; ret
0x000000000013be6b : add ebx, ebp ; ret 0x9066
0x000000000006c9f4 : add ebx, esi ; mov r12, rcx ; jmp 0x6c9cb
0x000000000016b8d3 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000010b812 : add ecx, 0x150 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000ba527 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0xba51c ; ret
0x00000000000a0a3e : add ecx, 1 ; sub rax, 1 ; jne 0xa0a42 ; jmp 0xa0a1e
0x00000000000a0856 : add ecx, 1 ; sub rsi, 1 ; jne 0xa085b ; xor eax, eax ; ret
0x00000000000e6782 : add ecx, dword ptr [r8 - 0x7d] ; ret
0x00000000000b205a : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x0000000000134fbc : add ecx, dword ptr [rax + 0x29] ; fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x000000000009496c : add ecx, dword ptr [rax + 0x29] ; ret
0x00000000000fae33 : add ecx, dword ptr [rax + 0x29] ; ret 0x148
0x00000000000a6242 : add ecx, dword ptr [rax + 0x29] ; ret 0x14c
0x0000000000128dd5 : add ecx, dword ptr [rax + 0x29] ; ret 0x3948
0x000000000013f7f6 : add ecx, dword ptr [rax + 0x29] ; ret 0x3949
0x00000000000e9f37 : add ecx, dword ptr [rax + 0x29] ; retf 0x148
0x000000000003040e : add ecx, dword ptr [rax + 0x39] ; retf
0x000000000011aec0 : add ecx, dword ptr [rax + 0xf] ; ret 0xc148
0x0000000000140a1e : add ecx, dword ptr [rax + 0xf] ; ret 0xdb31
0x000000000012a3e2 : add ecx, dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0xc083
0x0000000000144e9c : add ecx, dword ptr [rax + 1] ; enter -0x1f01, 0x66 ; nop dword ptr [rax + rax] ; ret
0x000000000012fc79 : add ecx, dword ptr [rax + 9] ; ret 0x850f
0x0000000000190b0e : add ecx, dword ptr [rax + 9] ; retf 0x8949
0x000000000013b48f : add ecx, dword ptr [rax - 0x3ca4feb8] ; nop dword ptr [rax] ; ret
0x00000000001966ee : add ecx, dword ptr [rax - 0x73] ; insb byte ptr [rdi], dx ; ret
0x00000000000b5cbc : add ecx, dword ptr [rax - 0x73] ; jg 0xb5ccf ; jne 0xb653b ; ret
0x00000000000b7370 : add ecx, dword ptr [rax - 0x73] ; jg 0xb7383 ; jne 0xb7d5b ; ret
0x00000000000b205e : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x00000000000d2005 : add ecx, dword ptr [rax - 0x77] ; or r9b, bpl ; ret
0x000000000004b7b7 : add ecx, dword ptr [rax - 0x77] ; ret 0xf641
0x000000000007bd7f : add ecx, dword ptr [rax - 0x77] ; ror byte ptr [rax - 0x77], 1 ; ret 0x8348
0x000000000007e6ef : add ecx, dword ptr [rax - 0x77] ; ror byte ptr [rax - 0x77], 1 ; ret 0x8349
0x00000000000f1594 : add ecx, dword ptr [rax - 0x77] ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000016a6f4 : add ecx, dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x00000000000a5f05 : add ecx, dword ptr [rax - 0x77] ; test dword ptr [rax - 0x7d], 0x840f06ef ; ret
0x0000000000139c89 : add ecx, dword ptr [rax - 0x7d] ; call qword ptr [rcx]
0x000000000005c2f1 : add ecx, dword ptr [rax - 0x7d] ; inc dword ptr [rdi] ; ja 0x5c2e2 ; mov rax, rsi ; ret
0x00000000000d8d5a : add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000004738f : add ecx, dword ptr [rbp + rcx*4 + 0x64] ; ret
0x000000000016b642 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000014d446 : add ecx, dword ptr [rbx + 0xf0c2454] ; retf 0x5089
0x0000000000156fc1 : add ecx, dword ptr [rbx - 0x7483dbac] ; or byte ptr [rcx], dil ; ret 0x5375
0x00000000000ea2a2 : add ecx, dword ptr [rcx + 0x29] ; retf
0x00000000000b6aa4 : add ecx, dword ptr [rcx + 0x357890f] ; lea rax, [rdi + 6] ; ret
0x00000000000b78e4 : add ecx, dword ptr [rcx + 0x357890f] ; lea rax, [rdi + 7] ; ret
0x00000000000b5494 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x00000000000b9514 : add ecx, dword ptr [rcx + 0x357890f] ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x000000000014977c : add ecx, dword ptr [rcx + 9] ; ror dword ptr [rax - 0x77], cl ; retf 0x8348
0x0000000000081991 : add ecx, dword ptr [rcx + rcx*4 + 0x42] ; or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x000000000012a4cf : add ecx, dword ptr [rcx - 0x75] ; sbb byte ptr [r8 - 0x75], r9b ; je 0x12a508 ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x00000000000b205b : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x0000000000046599 : add ecx, dword ptr [rcx - 0x7d] ; mov byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000005fde3 : add ecx, dword ptr [rcx - 0x7d] ; ret 0x8b05
0x00000000000d9540 : add ecx, dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000420f8 : add ecx, dword ptr [rdi + 0x20] ; mov rax, rcx ; ret
0x00000000000eff32 : add ecx, dword ptr [rdi] ; test byte ptr [rdi], bl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000003a7da : add ecx, dword ptr [rdi] ; test dl, dl ; and byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fe07], al ; jmp qword ptr [rax]
0x0000000000187e51 : add ecx, dword ptr [rdi] ; test dword ptr [rax + 2], ebx ; add byte ptr [rax], al ; vzeroupper ; ret
0x00000000000b5cc0 : add ecx, dword ptr [rdi] ; test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x00000000000546d1 : add ecx, dword ptr [rdi] ; xchg eax, edi ; ret 0x8545
0x00000000000c91ef : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x00000000000c9245 : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x00000000000d9bfb : add ecx, dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000015e1fb : add ecx, dword ptr [rsp + 8] ; call rax
0x0000000000191a6b : add ecx, eax ; jmp rcx
0x000000000013b5b9 : add ecx, eax ; loopne 0x13b5cb ; shr rax, 4 ; and eax, 0x7f ; ret
0x000000000005f469 : add ecx, eax ; mov eax, r9d ; ret
0x0000000000049b9f : add ecx, ebp ; ret 0xfffd
0x00000000001638db : add ecx, ebx ; jmp r9
0x000000000018aef2 : add ecx, ebx ; jmp rcx
0x0000000000118274 : add ecx, ebx ; ret
0x0000000000117fa0 : add ecx, ebx ; ret 0x3941
0x000000000012ef90 : add ecx, ecx ; jmp 0x8b1c4
0x00000000000a6fe2 : add ecx, ecx ; jmp rcx
0x00000000000fe235 : add ecx, edi ; jmp rcx
0x00000000000f462c : add ecx, edx ; call 0x344908c0
0x00000000000792c3 : add ecx, edx ; mov rax, r10 ; jmp 0x7929a
0x00000000000ba5f4 : add ecx, esi ; jmp rcx
0x000000000014c80d : add edi, 0x10 ; jmp rcx
0x00000000001478ab : add edi, 0x23b0 ; pop rbp ; jmp rcx
0x0000000000115b9d : add edi, 0x26 ; mov dword ptr fs:[rax], edi ; mov eax, 0xffffffff ; ret
0x000000000012be72 : add edi, 0x308 ; mov esi, 0x80 ; syscall
0x000000000014f264 : add edi, 0x58 ; jmp rcx
0x000000000014e924 : add edi, 0x68 ; jmp rcx
0x000000000014bc47 : add edi, 0xc8 ; jmp rcx
0x00000000000e6544 : add edi, 1 ; test al, al ; jne 0xe652a ; xor eax, eax ; ret
0x0000000000147e8a : add edi, dword ptr [rax + 1] ; jmp 0x147e63
0x00000000001544aa : add edi, dword ptr [rax + 1] ; jmp 0x154483
0x000000000015452a : add edi, dword ptr [rax + 1] ; jmp 0x154503
0x00000000001545ea : add edi, dword ptr [rax + 1] ; jmp 0x1545c3
0x0000000000154cfa : add edi, dword ptr [rax + 1] ; jmp 0x154cd3
0x000000000009c79e : add edi, dword ptr [rax + 1] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010140d : add edi, dword ptr [rcx] ; call 0x1d29828
0x00000000001011b3 : add edi, dword ptr [rcx] ; retf 0x840f
0x000000000004534f : add edi, dword ptr [rsp + 8] ; mov rsi, r15 ; call r14
0x0000000000115494 : add edi, eax ; add bl, byte ptr [rax + rsi + 0x34] ; xor byte ptr [rax - 0x7d], cl ; ret 0x4104
0x0000000000194d10 : add edi, ebp ; call r12
0x000000000011e23d : add edi, ebp ; xor eax, eax ; ret
0x00000000001638d8 : add edi, edx ; add r9, r11 ; jmp r9
0x00000000000418a5 : add edi, edx ; jmp rdi
0x000000000013b3ed : add edi, edx ; mov qword ptr [r9], rdi ; ret
0x00000000000454f9 : add edi, esi ; mov rdx, rbp ; mov rsi, r15 ; mov rdi, r12 ; call rbx
0x00000000001933f9 : add edi, esi ; ret 0x7ffe
0x0000000000186ab6 : add edx, 0x20 ; sub edx, ecx ; jmp 0x186a5d
0x00000000001871d6 : add edx, 0x20 ; sub edx, ecx ; jmp 0x18717d
0x0000000000187856 : add edx, 0x20 ; sub edx, ecx ; jmp 0x1877fd
0x0000000000187ca6 : add edx, 0x20 ; sub edx, ecx ; jmp 0x187c3d
0x0000000000188546 : add edx, 0x20 ; sub edx, ecx ; jmp 0x1884ed
0x00000000001889c6 : add edx, 0x20 ; sub edx, ecx ; jmp 0x188952
0x000000000013b332 : add edx, 1 ; cmp edx, esi ; jb 0x13b330 ; mov eax, 0xffffffff ; ret
0x000000000013cc38 : add edx, 1 ; syscall
0x000000000013b35a : add edx, 2 ; mov dword ptr [r8], eax ; mov eax, edx ; mov qword ptr [r9], r10 ; ret
0x00000000000bb146 : add edx, 4 ; mov ecx, dword ptr [rdx] ; test ecx, ecx ; jne 0xbb149 ; ret
0x00000000000bace9 : add edx, 4 ; test r8d, r8d ; jne 0xbace8 ; ret
0x000000000013b44b : add edx, 8 ; cmp esi, 0x80 ; cmovb eax, edx ; ret
0x00000000001164a5 : add edx, 8 ; mov qword ptr [rip + 0xd1a81], rdx ; ret
0x00000000001840d9 : add edx, dword ptr [rcx + rax] ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000000aacb8 : add edx, eax ; jl 0xaad27 ; add rax, rdi ; ret
0x00000000000aacc8 : add edx, eax ; jl 0xaad29 ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000aace8 : add edx, eax ; jl 0xaad29 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000aad08 : add edx, eax ; jl 0xaad29 ; lea rax, [rdi + rax + 0x30] ; ret
0x000000000004b915 : add edx, eax ; jmp 0x4b92f
0x000000000004e855 : add edx, eax ; jmp 0x4e86f
0x00000000000515a5 : add edx, eax ; jmp 0x515bf
0x00000000000ef637 : add edx, eax ; jmp 0xef656
0x00000000000a70b6 : add edx, eax ; jmp rdx
0x00000000000576c2 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x0000000000159df5 : add edx, ecx ; jmp 0x159d86
0x0000000000159df4 : add edx, ecx ; jmp 0x159d87
0x00000000000424d0 : add edx, ecx ; jmp 0x424e2
0x00000000000efcec : add edx, ecx ; jmp 0xefd02
0x000000000004179a : add edx, edi ; jmp rdx
0x000000000011fddc : add edx, edx ; mov rsi, r8 ; mov edi, ebx ; mov eax, 0x14 ; syscall
0x0000000000055f7f : add edx, esi ; cmp ecx, 0x2f ; jmp rdx
0x00000000000424c7 : add edx, esi ; je 0x4276f ; add rdx, rcx ; jmp 0x424eb
0x00000000001926fc : add edx, esp ; jmp rdx
0x000000000014da45 : add esi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000123b51 : add esi, 1 ; jmp 0x1239de
0x00000000000cdb09 : add esi, 4 ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rsi + rcx], edx ; test edx, edx ; jne 0xcdb14 ; ret
0x00000000000b9519 : add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x000000000004896c : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000001474db : add esi, dword ptr [rsi + 0xa] ; mov eax, 2 ; ret
0x0000000000026faf : add esi, eax ; add byte ptr [rdi], ch ; mov byte ptr [rdi], 0 ; ret
0x00000000000a6d5e : add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x0000000000147fff : add esi, eax ; cmp rsi, qword ptr [rdx + 0x28] ; ja 0x147ffc ; mov qword ptr [rdx + 0x20], rsi ; ret
0x0000000000053b7b : add esi, eax ; jmp qword ptr [rax]
0x0000000000032c7b : add esi, eax ; jmp rsi
0x0000000000155ba5 : add esi, eax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x00000000000eaa89 : add esi, eax ; or byte ptr [r9], r8b ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x000000000011e268 : add esi, ebp ; lea ecx, [rdi + rdi] ; shr eax, cl ; and eax, 3 ; ret
0x000000000013b4ca : add esi, ebx ; movq mm0, qword ptr [rsi] ; movups xmmword ptr [rdi + rdx + 8], xmm0 ; ret
0x000000000016b7f3 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000000ba06a : add esi, ebx ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000015d3d3 : add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000097f92 : add esi, ebx ; stosq qword ptr [rdi], rax ; pop rbx ; ret
0x0000000000044879 : add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x0000000000186ab4 : add esi, ecx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x186a5f
0x00000000001871d4 : add esi, ecx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x18717f
0x0000000000187854 : add esi, ecx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x1877ff
0x0000000000187ca4 : add esi, ecx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x187c3f
0x0000000000188544 : add esi, ecx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x1884ef
0x00000000001889c4 : add esi, ecx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x188954
0x00000000000537a7 : add esi, edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000018d32c : add esi, edi ; fadd st(3) ; ret
0x00000000000ba738 : add esi, edi ; int1 ; mov eax, eax ; ret
0x0000000000045811 : add esi, edi ; mov rdx, rbp ; mov rsi, r14 ; mov rdi, r12 ; call rbx
0x00000000001638d5 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000000ecb58 : add esi, esi ; ret
0x00000000001475e2 : add esi, esi ; ret 0x7402
0x0000000000101eac : add esi, esi ; ret 0xf01
0x00000000000c8e4e : add esi, esi ; ret 0xf02
0x00000000000f7770 : add esi, esi ; ret 0xf04
0x0000000000056454 : add esp, 0x10 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000055cbb : add esp, 0x10 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000031646 : add esp, 0x10 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008d3d6 : add esp, 0x10 ; movzx eax, al ; pop rbx ; neg eax ; ret
0x0000000000090c01 : add esp, 0x10 ; pop rbx ; jmp rax
0x0000000000080527 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000031623 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000476e0 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r14 ; ret
0x00000000000437fd : add esp, 0x10 ; pop rbx ; ret
0x000000000008e9c0 : add esp, 0x10 ; pop rbx ; sub rax, rdx ; pop rbp ; pop r12 ; ret
0x000000000008953e : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000196dc1 : add esp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000000316c3 : add esp, 0x10 ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b9e6d : add esp, 0x100 ; sub rax, rdx ; ret
0x000000000010e043 : add esp, 0x1010 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000063366 : add esp, 0x1010 ; pop rbx ; ret
0x0000000000063196 : add esp, 0x1018 ; pop rbx ; pop rbp ; ret
0x0000000000063f94 : add esp, 0x108 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001510c8 : add esp, 0x110 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015e608 : add esp, 0x110 ; pop rbx ; ret
0x0000000000043eee : add esp, 0x118 ; ret
0x000000000010e0f4 : add esp, 0x130 ; pop rbx ; ret
0x0000000000044690 : add esp, 0x140 ; pop rbx ; ret
0x0000000000043db5 : add esp, 0x148 ; ret
0x000000000013ca5c : add esp, 0x168 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012c007 : add esp, 0x18 ; and eax, 0xc ; pop rbx ; pop rbp ; ret
0x000000000008923f : add esp, 0x18 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000008925b : add esp, 0x18 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000137170 : add esp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000e17c0 : add esp, 0x18 ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000080d27 : add esp, 0x18 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008d5e4 : add esp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009ae66 : add esp, 0x18 ; mov rax, rcx ; pop rbx ; pop rbp ; ret
0x000000000009434c : add esp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000083ee8 : add esp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000000639c6 : add esp, 0x18 ; movzx eax, al ; neg eax ; ret
0x00000000000745c7 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000044e79 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000029db5 : add esp, 0x18 ; ret
0x0000000000113f55 : add esp, 0x198 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000062ece : add esp, 0x1d0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009182d : add esp, 0x20 ; mov ecx, edx ; xor edx, edx ; pop rbx ; jmp rax
0x0000000000082706 : add esp, 0x20 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000043a04 : add esp, 0x20 ; movdqa xmm0, xmm3 ; pop rbx ; ret
0x000000000009137d : add esp, 0x20 ; pop rbx ; jmp rax
0x00000000000d01c5 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000030f6b : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000043958 : add esp, 0x20 ; pop rbx ; ret
0x0000000000085f06 : add esp, 0x238 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004528b : add esp, 0x248 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000124116 : add esp, 0x260 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000026eb2 : add esp, 0x28 ; jmp rax
0x0000000000085d4a : add esp, 0x28 ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008a204 : add esp, 0x28 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000026a1e : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000052905 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000047d72 : add esp, 0x28 ; ret
0x0000000000106393 : add esp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008f1e7 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009baf6 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001946c7 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r14 ; ret
0x000000000005c3e0 : add esp, 0x30 ; pop rbx ; ret
0x0000000000086043 : add esp, 0x300 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000288e2 : add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000052a93 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000ddade : add esp, 0x38 ; ret
0x0000000000052e2c : add esp, 0x388 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008ca7f : add esp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000089ce2 : add esp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000044735 : add esp, 0x40 ; pop rbx ; ret
0x0000000000121178 : add esp, 0x40 ; ret
0x0000000000062f52 : add esp, 0x410 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011a92e : add esp, 0x418 ; ret
0x000000000014e81d : add esp, 0x428 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000014e400 : add esp, 0x448 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000005c232 : add esp, 0x450 ; pop rbx ; ret
0x00000000000e3938 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000150af3 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000008cfd7 : add esp, 0x48 ; ret
0x000000000014d4e7 : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000055ff5 : add esp, 0x50 ; pop rbx ; ret
0x000000000015aa84 : add esp, 0x520 ; pop rbx ; ret
0x000000000013cc52 : add esp, 0x58 ; pop rbx ; pop rbp ; ret
0x000000000010e995 : add esp, 0x58 ; ret
0x000000000013567b : add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000100225 : add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000145ee6 : add esp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000114116 : add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000010ccef : add esp, 0x68 ; ret
0x00000000000bbaac : add esp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bb684 : add esp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000112f09 : add esp, 0x70 ; pop rbx ; ret
0x000000000010ce74 : add esp, 0x78 ; ret
0x00000000000dc9a1 : add esp, 0x80 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000047f63 : add esp, 0x80 ; add rsp, 8 ; ret
0x00000000000474b2 : add esp, 0x80 ; mov eax, 0xffffffff ; jmp 0x47495
0x000000000015c7ac : add esp, 0x80 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000124219 : add esp, 0x80 ; mov eax, edx ; add rsp, 8 ; ret
0x0000000000061c3e : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x000000000008a3dc : add esp, 0x80 ; mov eax, edx ; ret
0x0000000000081480 : add esp, 0x80 ; mov eax, esi ; pop rbx ; ret
0x000000000008a600 : add esp, 0x80 ; mov eax, r10d ; pop rbx ; ret
0x0000000000085718 : add esp, 0x80 ; mov eax, r8d ; pop rbx ; ret
0x00000000000480b8 : add esp, 0x80 ; mov rax, rbx ; pop rbx ; ret
0x000000000005f517 : add esp, 0x80 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000993f5 : add esp, 0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000052f8e : add esp, 0x80 ; pop rbx ; ret
0x0000000000063bf9 : add esp, 0x80 ; ret
0x0000000000047481 : add esp, 0x80 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004711f : add esp, 0x80 ; xor eax, eax ; pop rbx ; ret
0x000000000004794a : add esp, 0x80 ; xor esi, esi ; mov rdi, r9 ; call rdx
0x000000000011b54d : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x000000000004430d : add esp, 0x90 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000044fc5 : add esp, 0x98 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004447c : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000026cff : add esp, 0x98 ; ret
0x0000000000044825 : add esp, 0xa0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011f6fc : add esp, 0xa0 ; pop rbx ; ret
0x00000000000dc546 : add esp, 0xa8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008dd3d : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000045140 : add esp, 0xa8 ; ret
0x0000000000030e46 : add esp, 0xb8 ; pop rbx ; pop r12 ; ret
0x00000000001163d1 : add esp, 0xb8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001504ec : add esp, 0xb8 ; pop rbx ; pop rbp ; ret
0x0000000000120701 : add esp, 0xc8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000815d3 : add esp, 0xd0 ; pop rbx ; ret
0x000000000011a622 : add esp, 0xd8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000081772 : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x00000000000538e4 : add esp, 0xd8 ; ret
0x000000000011aaf8 : add esp, 0xe0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cf97f : add esp, 0xe0 ; pop rbx ; ret
0x0000000000125f3e : add esp, 0xe8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001236ea : add esp, 1 ; jmp 0x123587
0x00000000000eca85 : add esp, 8 ; add eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000148091 : add esp, 8 ; add eax, edx ; pop rbx ; pop rbp ; ret
0x000000000012d3e3 : add esp, 8 ; add rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013b2fd : add esp, 8 ; lea eax, [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x0000000000145137 : add esp, 8 ; lea rax, [rip + 0xa47bf] ; ret
0x0000000000145701 : add esp, 8 ; mov eax, 0x10 ; pop rbx ; pop rbp ; ret
0x000000000010b499 : add esp, 8 ; mov eax, 0xc ; pop rbx ; pop rbp ; ret
0x0000000000084aa9 : add esp, 8 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000144759 : add esp, 8 ; mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000005c588 : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000013f2b5 : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000027408 : add esp, 8 ; mov eax, edi ; neg eax ; ret
0x0000000000061967 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000053814 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000082812 : add esp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000082072 : add esp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000000ec76c : add esp, 8 ; mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001447e5 : add esp, 8 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000118a5a : add esp, 8 ; mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000119083 : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000008245a : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009d61a : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000a73f9 : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000039521 : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000a7561 : add esp, 8 ; mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000098bfb : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000d3344 : add esp, 8 ; mov rax, rdx ; ret
0x0000000000084227 : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008406a : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x0000000000146ea9 : add esp, 8 ; mov rdi, rbp ; pop rbx ; xor eax, eax ; pop rbp ; jmp rdx
0x0000000000086c32 : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000014cab3 : add esp, 8 ; movzx eax, al ; add eax, 1 ; ret
0x000000000011dd56 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000014798b : add esp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000052ff6 : add esp, 8 ; movzx eax, al ; ret
0x000000000014013a : add esp, 8 ; movzx eax, ax ; ret
0x00000000001562c2 : add esp, 8 ; not eax ; shr eax, 0x1f ; ret
0x000000000015439c : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000147863 : add esp, 8 ; pop rbx ; pop rbp ; jmp rcx
0x0000000000098c46 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000004704f : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000027bf1 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000029b91 : add esp, 8 ; ret
0x000000000015a8c1 : add esp, 8 ; sar eax, 0x1f ; ret
0x000000000014807b : add esp, 8 ; sub esi, eax ; pop rbx ; pop rbp ; mov eax, esi ; ret
0x0000000000047b61 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000047616 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000100b2f : add qword ptr [r13 - 0x7b], r9 ; in al, 0x75 ; retf 0x6348
0x000000000012e4e2 : add qword ptr [r8 + 0x39], rcx ; retf 0xe775
0x00000000000d6b72 : add qword ptr [r8 - 0x7d], rcx ; ret
0x00000000000e4afc : add qword ptr [r9 + 0xf], r8 ; xchg eax, esp ; ret 0x894c
0x000000000008aaec : add qword ptr [rax - 0x77], rcx ; or byte ptr [r15], r9b ; mov dh, 0x10 ; pop rbx ; mov eax, edx ; ret
0x0000000000074c00 : add qword ptr [rax - 0x77], rcx ; retf 0x3948
0x000000000008a61c : add qword ptr [rax - 0x77], rcx ; sub byte ptr [rax - 0x78], r8b ; cmp byte ptr [rcx + rcx*4 - 0x30], al ; ret
0x00000000000eb03f : add qword ptr [rax - 0x7d], rcx ; ret
0x000000000009d36d : add qword ptr [rax], r8 ; cmovne rax, rdx ; ret
0x000000000010950b : add qword ptr [rax], rax ; add byte ptr [rbp - 0x77], cl ; retf 0x35e9
0x000000000006f4d6 : add qword ptr [rax], rax ; add byte ptr [rcx + 1], cl ; ret 0x3b45
0x00000000001260bb : add qword ptr [rbp + 0x38], rbx ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bb737 : add qword ptr [rbp + rcx*4 + 0x4c], rcx ; and al, 0x38 ; call rbx
0x000000000008c944 : add qword ptr [rbx + 0x18], rbp ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013b491 : add qword ptr [rbx - 0x3d], rbx ; nop dword ptr [rax] ; ret
0x0000000000105e47 : add qword ptr [rbx], r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000061bfe : add qword ptr [rcx + 0x18263a0d], rcx ; add byte ptr [rax + 0x63], cl ; retf 0x8948
0x00000000000f3af9 : add qword ptr [rcx], rdi ; retf 0x870f
0x0000000000175f6d : add qword ptr [rdi], rcx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00000000000d6009 : add qword ptr [rsp + 0x48], r15 ; jmp 0xd41d4
0x000000000013b359 : add r10, 2 ; mov dword ptr [r8], eax ; mov eax, edx ; mov qword ptr [r9], r10 ; ret
0x000000000004b914 : add r10, r8 ; jmp 0x4b930
0x000000000004e854 : add r10, r8 ; jmp 0x4e870
0x00000000000515a4 : add r10, r8 ; jmp 0x515c0
0x000000000016b8d2 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x00000000001236e9 : add r12, 1 ; jmp 0x123588
0x00000000000c8dca : add r13b, cl ; ret
0x0000000000123b50 : add r14, 1 ; jmp 0x1239df
0x000000000013b4c9 : add r14, r11 ; movq mm0, qword ptr [rsi] ; movups xmmword ptr [rdi + rdx + 8], xmm0 ; ret
0x0000000000045810 : add r14, r15 ; mov rdx, rbp ; mov rsi, r14 ; mov rdi, r12 ; call rbx
0x000000000016b862 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000113e0f : add r14b, r14b ; ret 0x7402
0x000000000016b7f2 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000004534e : add r15, qword ptr [rsp + 8] ; mov rsi, r15 ; call r14
0x00000000000454f8 : add r15, r14 ; mov rdx, rbp ; mov rsi, r15 ; mov rdi, r12 ; call rbx
0x000000000005372f : add r15b, r14b ; dec dword ptr [rax - 0x77] ; ret
0x0000000000180e60 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013a0da : add r8, qword ptr [rax] ; add byte ptr [rax + 1], cl ; ret 0xe183
0x000000000017d2f4 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000048bc4 : add r8, rax ; cmp r8, r9 ; jb 0x48baf ; xor eax, eax ; ret
0x00000000001885b7 : add r8b, byte ptr [r8] ; lea rax, [rdi + 2] ; vzeroupper ; ret
0x0000000000186b27 : add r8b, byte ptr [r8] ; vzeroupper ; ret
0x000000000015e1fa : add r9, qword ptr [rsp + 8] ; call rax
0x00000000001638da : add r9, r11 ; jmp r9
0x000000000013a905 : add r9b, byte ptr [r8 + 0x39] ; ret 0x1472
0x00000000000a70fe : add r9b, byte ptr [r8 - 0x77] ; clc ; ret
0x000000000002ac00 : add r9b, byte ptr [r8 - 0x7d] ; ret 0x4d02
0x00000000000ebfd6 : add r9b, byte ptr [r9 + 0x39] ; ret
0x0000000000072399 : add r9b, byte ptr [r9 - 0x55f43] ; dec dword ptr [rax - 0x77] ; retf
0x000000000013cf1a : add r9b, byte ptr [rax + 0x39] ; retf
0x0000000000102b27 : add r9b, byte ptr [rbp - 0x77] ; ret 0x8d4c
0x000000000005f468 : add r9d, eax ; mov eax, r9d ; ret
0x00000000000792c2 : add r9d, edx ; mov rax, r10 ; jmp 0x7929b
0x000000000013b5b8 : add r9d, r8d ; loopne 0x13b5cc ; shr rax, 4 ; and eax, 0x7f ; ret
0x0000000000185522 : add rax, -0x7cb80000 ; ret 0xe910
0x0000000000163e86 : add rax, 0x14634900 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000182129 : add rax, 0x20 ; add rax, rdi ; vzeroupper ; ret
0x0000000000035535 : add rax, 0x200 ; mov qword ptr fs:[rdx], rax ; ret
0x0000000000175ff3 : add rax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00000000000fa444 : add rax, 0x2c890000 ; and al, 0xeb ; ret
0x0000000000182149 : add rax, 0x40 ; add rax, rdi ; vzeroupper ; ret
0x000000000012b6e6 : add rax, 0x48 ; cmp rax, rdx ; jb 0x12b6eb ; xor eax, eax ; ret
0x0000000000182169 : add rax, 0x60 ; add rax, rdi ; vzeroupper ; ret
0x0000000000151ba1 : add rax, 0xa0 ; pop rbx ; ret
0x0000000000151c81 : add rax, 0xa8 ; pop rbx ; ret
0x00000000000551f0 : add rax, 1 ; cmp byte ptr [rax + 1], 0 ; jne 0x551fb ; pop rbx ; ret
0x00000000000a6df0 : add rax, 1 ; movsx ecx, byte ptr [rdi + rax] ; test cl, cl ; jne 0xa6df4 ; ret
0x00000000000a6e80 : add rax, 1 ; movsx edx, byte ptr [rdi + rax] ; cmp edx, esi ; je 0xa6e8c ; ret
0x00000000000a6dac : add rax, 1 ; movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0xa6db4 ; ret
0x00000000000ce480 : add rax, 1 ; ret
0x00000000000a0915 : add rax, 1 ; sub rsi, 1 ; jne 0xa091c ; xor eax, eax ; ret
0x000000000004b910 : add rax, 2 ; add r10, r8 ; jmp 0x4b934
0x000000000004e850 : add rax, 2 ; add r10, r8 ; jmp 0x4e874
0x00000000000515a0 : add rax, 2 ; add r10, r8 ; jmp 0x515c4
0x000000000013b3b4 : add rax, 2 ; mov dword ptr [r8], r10d ; mov qword ptr [r9], rax ; mov eax, edx ; ret
0x00000000000ce477 : add rax, 2 ; ret
0x00000000000ce490 : add rax, 3 ; ret
0x00000000000bb47b : add rax, 4 ; mov dword ptr [rax], edx ; test edx, edx ; jne 0xbb482 ; ret
0x000000000015e906 : add rax, 8 ; cmp rdx, rax ; ja 0x15e90b ; xor eax, eax ; ret
0x0000000000026ec8 : add rax, qword ptr [0] ; ret
0x00000000000a031f : add rax, qword ptr [rbp] ; mov rdx, rax ; jmp 0xa0349
0x0000000000026ec7 : add rax, qword ptr fs:[0] ; ret
0x000000000010bd9b : add rax, r13 ; jmp rax
0x0000000000077642 : add rax, r14 ; jmp rax
0x0000000000182640 : add rax, r8 ; vzeroupper ; ret
0x00000000000f93dd : add rax, rbx ; jmp rax
0x000000000012d3e6 : add rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000185d47 : add rax, rcx ; add rax, rdi ; vzeroupper ; ret
0x0000000000064071 : add rax, rcx ; jmp rax
0x00000000000aa588 : add rax, rcx ; ret
0x000000000018159f : add rax, rcx ; sub rax, rdi ; ret
0x00000000001860dc : add rax, rcx ; sub rax, rdx ; vzeroupper ; ret
0x0000000000181fa5 : add rax, rcx ; vzeroupper ; ret
0x000000000018263d : add rax, rdi ; add rax, r8 ; vzeroupper ; ret
0x00000000000aa585 : add rax, rdi ; add rax, rcx ; ret
0x00000000001860d9 : add rax, rdi ; add rax, rcx ; sub rax, rdx ; vzeroupper ; ret
0x0000000000181fa2 : add rax, rdi ; add rax, rcx ; vzeroupper ; ret
0x00000000000aada9 : add rax, rdi ; add rax, rsi ; ret
0x0000000000080a45 : add rax, rdi ; jmp rax
0x00000000000a6ff8 : add rax, rdi ; ret
0x0000000000186194 : add rax, rdi ; sub rax, rdx ; vzeroupper ; ret
0x0000000000182119 : add rax, rdi ; vzeroupper ; ret
0x000000000002729a : add rax, rdx ; jmp rax
0x00000000000736b8 : add rax, rdx ; mov qword ptr [rbp - 0x570], rax ; jmp 0x701bd
0x00000000000b0345 : add rax, rdx ; sub rax, rdi ; ret
0x00000000000ce17a : add rax, rdx ; sub rax, rdi ; shr rax, 2 ; ret
0x0000000000065cf1 : add rax, rsi ; jmp rax
0x00000000000aadac : add rax, rsi ; ret
0x000000000009fe9c : add rbx, rax ; jne 0x9fe94 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ba526 : add rcx, 0x40 ; cmp rdx, rcx ; jne 0xba51d ; ret
0x00000000000a0a3d : add rcx, 1 ; sub rax, 1 ; jne 0xa0a43 ; jmp 0xa0a1f
0x00000000000a0855 : add rcx, 1 ; sub rsi, 1 ; jne 0xa085c ; xor eax, eax ; ret
0x00000000000420f7 : add rcx, qword ptr [rdi + 0x20] ; mov rax, rcx ; ret
0x000000000018aef1 : add rcx, r11 ; jmp rcx
0x00000000000a6fe1 : add rcx, r9 ; jmp rcx
0x0000000000191a6a : add rcx, rax ; jmp rcx
0x00000000000fe234 : add rcx, rdi ; jmp rcx
0x00000000000ba5f3 : add rcx, rsi ; jmp rcx
0x000000000014c80c : add rdi, 0x10 ; jmp rcx
0x00000000001478aa : add rdi, 0x23b0 ; pop rbp ; jmp rcx
0x000000000012be71 : add rdi, 0x308 ; mov esi, 0x80 ; syscall
0x000000000014f263 : add rdi, 0x58 ; jmp rcx
0x000000000014e923 : add rdi, 0x68 ; jmp rcx
0x000000000014bc46 : add rdi, 0xc8 ; jmp rcx
0x00000000000e6543 : add rdi, 1 ; test al, al ; jne 0xe652b ; xor eax, eax ; ret
0x00000000000418a4 : add rdi, r10 ; jmp rdi
0x0000000000194d0f : add rdi, rbp ; call r12
0x00000000001638d7 : add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000013b3ec : add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x00000000000bb145 : add rdx, 4 ; mov ecx, dword ptr [rdx] ; test ecx, ecx ; jne 0xbb14a ; ret
0x00000000000bace8 : add rdx, 4 ; test r8d, r8d ; jne 0xbace9 ; ret
0x00000000001164a4 : add rdx, 8 ; mov qword ptr [rip + 0xd1a81], rdx ; ret
0x00000000001926fb : add rdx, r12 ; jmp rdx
0x00000000000a7186 : add rdx, r8 ; jmp rdx
0x00000000000576c1 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x00000000000aacb7 : add rdx, rax ; jl 0xaad28 ; add rax, rdi ; ret
0x00000000000aacb6 : add rdx, rax ; jl 0xaad29 ; add rax, rdi ; ret
0x00000000000aacc7 : add rdx, rax ; jl 0xaad2a ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000aace7 : add rdx, rax ; jl 0xaad2a ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000aad07 : add rdx, rax ; jl 0xaad2a ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000ef636 : add rdx, rax ; jmp 0xef657
0x00000000000a70b5 : add rdx, rax ; jmp rdx
0x00000000000424cf : add rdx, rcx ; jmp 0x424e3
0x00000000000efceb : add rdx, rcx ; jmp 0xefd03
0x0000000000041799 : add rdx, rdi ; jmp rdx
0x0000000000055f7e : add rdx, rsi ; cmp ecx, 0x2f ; jmp rdx
0x00000000000424c6 : add rdx, rsi ; je 0x42770 ; add rdx, rcx ; jmp 0x424ec
0x000000000014da44 : add rsi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000032c7a : add rsi, r8 ; jmp rsi
0x0000000000155ba4 : add rsi, rax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x0000000000186ab3 : add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x186a60
0x00000000001871d3 : add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x187180
0x0000000000187853 : add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x187800
0x0000000000187ca3 : add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x187c40
0x0000000000188543 : add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x1884f0
0x00000000001889c3 : add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x188955
0x00000000001638d4 : add rsi, rdx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000055cba : add rsp, 0x10 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000031645 : add rsp, 0x10 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008d3d5 : add rsp, 0x10 ; movzx eax, al ; pop rbx ; neg eax ; ret
0x0000000000090c00 : add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000080526 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000031622 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000476df : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r14 ; ret
0x00000000000437fc : add rsp, 0x10 ; pop rbx ; ret
0x000000000008e9bf : add rsp, 0x10 ; pop rbx ; sub rax, rdx ; pop rbp ; pop r12 ; ret
0x000000000008953d : add rsp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000196dc0 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000000b9e6c : add rsp, 0x100 ; sub rax, rdx ; ret
0x000000000010e042 : add rsp, 0x1010 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000063365 : add rsp, 0x1010 ; pop rbx ; ret
0x0000000000063195 : add rsp, 0x1018 ; pop rbx ; pop rbp ; ret
0x00000000001510c7 : add rsp, 0x110 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015e607 : add rsp, 0x110 ; pop rbx ; ret
0x0000000000043eed : add rsp, 0x118 ; ret
0x000000000010e0f3 : add rsp, 0x130 ; pop rbx ; ret
0x000000000004468f : add rsp, 0x140 ; pop rbx ; ret
0x0000000000043db4 : add rsp, 0x148 ; ret
0x000000000012c006 : add rsp, 0x18 ; and eax, 0xc ; pop rbx ; pop rbp ; ret
0x000000000008923e : add rsp, 0x18 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000008925a : add rsp, 0x18 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000013716f : add rsp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000009ae65 : add rsp, 0x18 ; mov rax, rcx ; pop rbx ; pop rbp ; ret
0x000000000009434b : add rsp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000083ee7 : add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000000639c5 : add rsp, 0x18 ; movzx eax, al ; neg eax ; ret
0x00000000000745c6 : add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000044e78 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000029db4 : add rsp, 0x18 ; ret
0x0000000000062ecd : add rsp, 0x1d0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009182c : add rsp, 0x20 ; mov ecx, edx ; xor edx, edx ; pop rbx ; jmp rax
0x0000000000082705 : add rsp, 0x20 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000043a03 : add rsp, 0x20 ; movdqa xmm0, xmm3 ; pop rbx ; ret
0x000000000009137c : add rsp, 0x20 ; pop rbx ; jmp rax
0x00000000000d01c4 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000030f6a : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000043957 : add rsp, 0x20 ; pop rbx ; ret
0x0000000000124115 : add rsp, 0x260 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000026eb1 : add rsp, 0x28 ; jmp rax
0x000000000008a203 : add rsp, 0x28 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000026a1d : add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000052904 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000047d71 : add rsp, 0x28 ; ret
0x0000000000106392 : add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008f1e6 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009baf5 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001946c6 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r14 ; ret
0x000000000005c3df : add rsp, 0x30 ; pop rbx ; ret
0x0000000000086042 : add rsp, 0x300 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000288e1 : add rsp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000052a92 : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000ddadd : add rsp, 0x38 ; ret
0x000000000008ca7e : add rsp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000089ce1 : add rsp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000044734 : add rsp, 0x40 ; pop rbx ; ret
0x0000000000121177 : add rsp, 0x40 ; ret
0x0000000000062f51 : add rsp, 0x410 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011a92d : add rsp, 0x418 ; ret
0x000000000005c231 : add rsp, 0x450 ; pop rbx ; ret
0x00000000000e3937 : add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000150af2 : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000008cfd6 : add rsp, 0x48 ; ret
0x000000000014d4e6 : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000055ff4 : add rsp, 0x50 ; pop rbx ; ret
0x000000000015aa83 : add rsp, 0x520 ; pop rbx ; ret
0x000000000013cc51 : add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x000000000010e994 : add rsp, 0x58 ; ret
0x000000000013567a : add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000100224 : add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000145ee5 : add rsp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000114115 : add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000010ccee : add rsp, 0x68 ; ret
0x00000000000bbaab : add rsp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bb683 : add rsp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000112f08 : add rsp, 0x70 ; pop rbx ; ret
0x000000000010ce73 : add rsp, 0x78 ; ret
0x0000000000047f62 : add rsp, 0x80 ; add rsp, 8 ; ret
0x0000000000061c3d : add rsp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x000000000008a3db : add rsp, 0x80 ; mov eax, edx ; ret
0x000000000008147f : add rsp, 0x80 ; mov eax, esi ; pop rbx ; ret
0x000000000008a5ff : add rsp, 0x80 ; mov eax, r10d ; pop rbx ; ret
0x0000000000085717 : add rsp, 0x80 ; mov eax, r8d ; pop rbx ; ret
0x00000000000480b7 : add rsp, 0x80 ; mov rax, rbx ; pop rbx ; ret
0x00000000000993f4 : add rsp, 0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000052f8d : add rsp, 0x80 ; pop rbx ; ret
0x0000000000063bf8 : add rsp, 0x80 ; ret
0x000000000004711e : add rsp, 0x80 ; xor eax, eax ; pop rbx ; ret
0x0000000000047949 : add rsp, 0x80 ; xor esi, esi ; mov rdi, r9 ; call rdx
0x000000000011b54c : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x000000000004430c : add rsp, 0x90 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004447b : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000026cfe : add rsp, 0x98 ; ret
0x0000000000044824 : add rsp, 0xa0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011f6fb : add rsp, 0xa0 ; pop rbx ; ret
0x000000000008dd3c : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x000000000004513f : add rsp, 0xa8 ; ret
0x0000000000030e45 : add rsp, 0xb8 ; pop rbx ; pop r12 ; ret
0x00000000001504eb : add rsp, 0xb8 ; pop rbx ; pop rbp ; ret
0x00000000000815d2 : add rsp, 0xd0 ; pop rbx ; ret
0x0000000000081771 : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x00000000000538e3 : add rsp, 0xd8 ; ret
0x000000000011aaf7 : add rsp, 0xe0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cf97e : add rsp, 0xe0 ; pop rbx ; ret
0x00000000000eca84 : add rsp, 8 ; add eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000148090 : add rsp, 8 ; add eax, edx ; pop rbx ; pop rbp ; ret
0x000000000013b2fc : add rsp, 8 ; lea eax, [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x0000000000145136 : add rsp, 8 ; lea rax, [rip + 0xa47bf] ; ret
0x0000000000145700 : add rsp, 8 ; mov eax, 0x10 ; pop rbx ; pop rbp ; ret
0x000000000010b498 : add rsp, 8 ; mov eax, 0xc ; pop rbx ; pop rbp ; ret
0x0000000000084aa8 : add rsp, 8 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000144758 : add rsp, 8 ; mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000005c587 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000013f2b4 : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000027407 : add rsp, 8 ; mov eax, edi ; neg eax ; ret
0x0000000000061966 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000053813 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000082811 : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000082071 : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000119082 : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000009d619 : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000039520 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000d3343 : add rsp, 8 ; mov rax, rdx ; ret
0x0000000000084069 : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x0000000000146ea8 : add rsp, 8 ; mov rdi, rbp ; pop rbx ; xor eax, eax ; pop rbp ; jmp rdx
0x0000000000086c31 : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000014cab2 : add rsp, 8 ; movzx eax, al ; add eax, 1 ; ret
0x000000000011dd55 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000014798a : add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000052ff5 : add rsp, 8 ; movzx eax, al ; ret
0x0000000000140139 : add rsp, 8 ; movzx eax, ax ; ret
0x00000000001562c1 : add rsp, 8 ; not eax ; shr eax, 0x1f ; ret
0x000000000015439b : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000147862 : add rsp, 8 ; pop rbx ; pop rbp ; jmp rcx
0x0000000000098c45 : add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000004704e : add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000027bf0 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000029b90 : add rsp, 8 ; ret
0x000000000015a8c0 : add rsp, 8 ; sar eax, 0x1f ; ret
0x000000000014807a : add rsp, 8 ; sub esi, eax ; pop rbx ; pop rbp ; mov eax, esi ; ret
0x0000000000047b60 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000047615 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000125ade : add sil, al ; jmp qword ptr [rax]
0x00000000000dcc9e : add sil, sil ; ret 0x7504
0x0000000000120923 : add word ptr [rax], 1 ; ret
0x00000000001205ba : add word ptr [rdx + rax*2], 1 ; ret
0x000000000004310b : addps xmm0, xmm0 ; ret
0x000000000004310a : addsd xmm0, xmm0 ; ret
0x0000000000043486 : addss xmm0, xmm0 ; ret
0x0000000000138446 : and al, 0 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007d682 : and al, 0 ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x00000000000b2811 : and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000a003b : and al, 0 ; add byte ptr [rax], al ; add bl, ch ; retf
0x0000000000191d72 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x21], cl ; retf 0xb948
0x00000000000bb1f5 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000bb1e6 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000fe60c : and al, 0 ; add byte ptr [rax], al ; add cl, ch ; retf 0xffeb
0x00000000000d2981 : and al, 0 ; add byte ptr [rax], al ; syscall
0x00000000000ad605 : and al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000a00f2 : and al, 0 ; je 0xa0110 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001116d3 : and al, 0x10 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000095c2f : and al, 0x10 ; call 0x1126f4
0x0000000000108e6d : and al, 0x10 ; call 0x25144
0x0000000000108e6c : and al, 0x10 ; call 0x25145
0x0000000000059de3 : and al, 0x10 ; call 0x568a4
0x000000000012ef57 : and al, 0x10 ; call 0x8b1c4
0x000000000012ef56 : and al, 0x10 ; call 0x8b1c5
0x0000000000154e97 : and al, 0x10 ; call qword ptr [rax]
0x000000000015d553 : and al, 0x10 ; call rax
0x000000000015e5cb : and al, 0x10 ; call rdx
0x0000000000042ab7 : and al, 0x10 ; fld xword ptr [rsp + 8] ; ret
0x0000000000147f07 : and al, 0x10 ; lea rsi, [rsp + 0x18] ; call qword ptr [rax]
0x0000000000030f90 : and al, 0x10 ; mov dword ptr [r12], edx ; jmp 0x30f61
0x0000000000141f47 : and al, 0x10 ; mov eax, 0x81 ; syscall
0x000000000010ced7 : and al, 0x10 ; mov edi, dword ptr [rsp + 0x18] ; mov eax, 0x101 ; syscall
0x00000000000a70c3 : and al, 0x10 ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x00000000000a7193 : and al, 0x10 ; mov qword ptr [rdi], rdx ; lea rax, [rdi + rax - 1] ; ret
0x00000000000bbfad : and al, 0x10 ; mov r9, r14 ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x00000000000913a4 : and al, 0x10 ; mov rdi, qword ptr [rsp + 8] ; jmp 0x91380
0x0000000000111818 : and al, 0x10 ; mov rdi, qword ptr [rsp + 8] ; mov eax, 0x10f ; syscall
0x0000000000045d44 : and al, 0x10 ; mov rdi, r12 ; call rbx
0x0000000000088712 : and al, 0x10 ; mov rdi, r13 ; call rax
0x00000000000bc24d : and al, 0x10 ; mov rdi, rbp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x0000000000154686 : and al, 0x10 ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000148c93 : and al, 0x10 ; mov rdx, rbx ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000126685 : and al, 0x10 ; mov rsi, r13 ; xor r15d, r15d ; call rax
0x0000000000042a92 : and al, 0x10 ; or eax, 0xffff8000 ; inc eax ; shr eax, 0x1f ; ret
0x0000000000097525 : and al, 0x10 ; sub r13, rbx ; mov qword ptr [rsp + 8], r8 ; call 0x9376c
0x0000000000126406 : and al, 0x10 ; xor esi, esi ; mov edi, 0x2000004 ; call rcx
0x0000000000115a5f : and al, 0x10 ; xor r10d, r10d ; xor esi, esi ; mov eax, 0x118 ; syscall
0x0000000000027a48 : and al, 0x10 ; xor r8d, r8d ; call rbx
0x00000000001505fa : and al, 0x14 ; call qword ptr [r10]
0x0000000000141f43 : and al, 0x14 ; mov edi, dword ptr [rsp + 0x10] ; mov eax, 0x81 ; syscall
0x0000000000044f9d : and al, 0x14 ; mov edi, r12d ; mov eax, 0x81 ; syscall
0x0000000000026b5f : and al, 0x14 ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000011415d : and al, 0x14 ; syscall
0x0000000000083418 : and al, 0x16 ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0x7520
0x00000000000a7085 : and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x000000000002a4f5 : and al, 0x18 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000055f04 : and al, 0x18 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8d49
0x00000000000fbf13 : and al, 0x18 ; add dword ptr [rax], eax ; add al, ch ; ret
0x0000000000129645 : and al, 0x18 ; add dword ptr [rdi], ecx ; test byte ptr [rdx - 0x17ffffff], ch ; lodsd eax, dword ptr [rsi] ; ret
0x000000000012a3a0 : and al, 0x18 ; add dword ptr [rdi], ecx ; xchg eax, ebp ; ret
0x0000000000099273 : and al, 0x18 ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000147f0c : and al, 0x18 ; call qword ptr [rax]
0x0000000000026b67 : and al, 0x18 ; call rax
0x00000000000454ae : and al, 0x18 ; call rbx
0x0000000000096622 : and al, 0x18 ; call rdx
0x0000000000109b20 : and al, 0x18 ; jmp 0x108460
0x0000000000146699 : and al, 0x18 ; lea r9, [rsp + 0x40] ; call qword ptr [rax]
0x000000000010cedb : and al, 0x18 ; mov eax, 0x101 ; syscall
0x0000000000114154 : and al, 0x18 ; mov eax, 0x10e ; mov edi, dword ptr [rsp + 0x14] ; syscall
0x00000000000a6ff3 : and al, 0x18 ; mov qword ptr [rdi], rdx ; add rax, rdi ; ret
0x00000000000965ed : and al, 0x18 ; mov qword ptr [rsp + 8], r11 ; call rcx
0x00000000000c026f : and al, 0x18 ; mov r10, rbp ; test eax, eax ; setne dl ; jmp 0xc0290
0x00000000000c026e : and al, 0x18 ; mov r10, rbp ; test eax, eax ; setne dl ; jmp 0xc0291
0x000000000009628b : and al, 0x18 ; mov rdi, r12 ; mov qword ptr [rsp + 8], r11 ; call qword ptr [rax]
0x00000000001457ca : and al, 0x18 ; mov rdi, rbp ; call r14
0x000000000015e5c6 : and al, 0x18 ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x000000000008b587 : and al, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000150f1e : and al, 0x1c ; call qword ptr [r10]
0x000000000013fdae : and al, 0x1c ; lea rdi, [rsp + 0x20] ; mov edx, r14d ; call 0x13c8bc
0x0000000000145c22 : and al, 0x20 ; call qword ptr [rax]
0x000000000002c3ba : and al, 0x20 ; call rax
0x0000000000089a61 : and al, 0x20 ; call rbx
0x000000000014c161 : and al, 0x20 ; call rdx
0x0000000000112453 : and al, 0x20 ; cmp esi, 9 ; je 0x11248c ; mov eax, 0x48 ; syscall
0x00000000000cbf45 : and al, 0x20 ; jmp 0xca901
0x0000000000114946 : and al, 0x20 ; mov eax, 0x65 ; syscall
0x000000000013fdb3 : and al, 0x20 ; mov edx, r14d ; call 0x13c8b7
0x00000000000965e8 : and al, 0x20 ; mov qword ptr [rsp + 0x18], rax ; mov qword ptr [rsp + 8], r11 ; call rcx
0x000000000011da98 : and al, 0x20 ; mov qword ptr [rsp + 0x30], r8 ; mov qword ptr [rsp + 0x38], r9 ; syscall
0x00000000000dd6a5 : and al, 0x20 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000001351af : and al, 0x20 ; mov rdx, qword ptr [rax] ; xor eax, eax ; call 0x814a9
0x00000000001351ae : and al, 0x20 ; mov rdx, qword ptr [rax] ; xor eax, eax ; call 0x814aa
0x000000000002bdca : and al, 0x20 ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000110574 : and al, 0x20 ; or word ptr [rax + 0x64], 1 ; call 0xdc869
0x000000000005599d : and al, 0x24 ; call rax
0x0000000000098c43 : and al, 0x28 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000135e8c : and al, 0x28 ; call 0x10d66b
0x0000000000145644 : and al, 0x28 ; call 0x25320
0x00000000000bba2b : and al, 0x28 ; call r12
0x000000000002d473 : and al, 0x28 ; call rax
0x0000000000089967 : and al, 0x28 ; call rbx
0x000000000014bf52 : and al, 0x28 ; call rcx
0x00000000001560a5 : and al, 0x28 ; call rdx
0x0000000000108e41 : and al, 0x28 ; lea r12, [rbp + rax] ; mov rdi, r12 ; call 0x250bc
0x00000000000dd6a0 : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000108e13 : and al, 0x28 ; mov rdi, r13 ; call 0x250b7
0x0000000000099cd3 : and al, 0x28 ; mov rdi, rbp ; call rax
0x0000000000145c1d : and al, 0x28 ; mov rsi, qword ptr [rsp + 0x20] ; call qword ptr [rax]
0x000000000002efde : and al, 0x28 ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000112add : and al, 0x28 ; xor eax, eax ; mov rdx, rsp ; mov eax, ecx ; syscall
0x0000000000145f8d : and al, 0x2c ; call qword ptr [rax]
0x00000000000c9885 : and al, 0x30 ; call r12
0x000000000002a25e : and al, 0x30 ; call r14
0x000000000002aa6f : and al, 0x30 ; call r15
0x00000000000cf243 : and al, 0x30 ; call rax
0x000000000002acdd : and al, 0x30 ; call rbx
0x000000000014f605 : and al, 0x30 ; call rcx
0x0000000000030a9a : and al, 0x30 ; lea r8, [rsp + 0xb0] ; call r14
0x0000000000112908 : and al, 0x30 ; mov eax, 0x10 ; syscall
0x000000000008b61b : and al, 0x30 ; mov qword ptr [rbx + 0x18], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011da9d : and al, 0x30 ; mov qword ptr [rsp + 0x38], r9 ; syscall
0x000000000002a070 : and al, 0x30 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000d8767 : and al, 0x30 ; mov rbp, r15 ; call 0x25227
0x00000000000d8766 : and al, 0x30 ; mov rbp, r15 ; call 0x25228
0x000000000014bf4a : and al, 0x30 ; mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x0000000000145c18 : and al, 0x30 ; mov rdx, qword ptr [rsp + 0x28] ; mov rsi, qword ptr [rsp + 0x20] ; call qword ptr [rax]
0x0000000000108438 : and al, 0x30 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000001516e1 : and al, 0x30 ; push r14 ; push r13 ; lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000cbcb4 : and al, 0x38 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000002beaa : and al, 0x38 ; add byte ptr [rdi + rsi - 0xa], dh ; ret
0x000000000013f658 : and al, 0x38 ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x75], 5 ; ret 0xa47
0x000000000002af14 : and al, 0x38 ; call r12
0x000000000002a497 : and al, 0x38 ; call r14
0x000000000002b52e : and al, 0x38 ; call r15
0x000000000002bdd4 : and al, 0x38 ; call rbx
0x000000000002a259 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x000000000002aa6a : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r15
0x000000000002acd8 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x000000000002a06b : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000041d23 : and al, 0x38 ; or rax, 0xd ; jmp 0x41cf4
0x0000000000041d22 : and al, 0x38 ; or rax, 0xd ; jmp 0x41cf5
0x000000000011daa2 : and al, 0x38 ; syscall
0x00000000001516ea : and al, 0x3a ; call qword ptr [rax]
0x000000000002f0ac : and al, 0x40 ; add byte ptr [rsi + rdx*2 - 0xa], dh ; ret
0x00000000000417cc : and al, 0x40 ; call 0x3da34
0x000000000014669e : and al, 0x40 ; call qword ptr [rax]
0x000000000002c916 : and al, 0x40 ; call r15
0x000000000002efe8 : and al, 0x40 ; call rbx
0x0000000000154b48 : and al, 0x40 ; mov byte ptr [rbx], ch ; mov eax, 1 ; jmp 0x154b28
0x0000000000154bd8 : and al, 0x40 ; mov byte ptr [rbx], ch ; mov eax, 1 ; jmp 0x154bb8
0x000000000002c3b5 : and al, 0x40 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000002af0f : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x000000000002a492 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000002b529 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x000000000002bdcf : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x000000000014c159 : and al, 0x40 ; mov rdi, rbp ; mov rdx, qword ptr [rsp + 0x20] ; call rdx
0x000000000002acd3 : and al, 0x40 ; mov rsi, qword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000136f06 : and al, 0x41 ; call rsp
0x000000000010950a : and al, 0x48 ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf 0x35e9
0x00000000000424c5 : and al, 0x48 ; add edx, esi ; je 0x42771 ; add rdx, rcx ; jmp 0x424ed
0x0000000000043637 : and al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000043956 : and al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000089a9f : and al, 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001515d2 : and al, 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000121115 : and al, 0x48 ; add esp, 0x38 ; ret
0x0000000000121176 : and al, 0x48 ; add esp, 0x40 ; ret
0x00000000001254cc : and al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002da24 : and al, 0x48 ; call r14
0x00000000000d600c : and al, 0x48 ; jmp 0xd41d1
0x00000000000cea6b : and al, 0x48 ; lea eax, [rip + 0x118d8d] ; add rsp, 8 ; ret
0x00000000001545e7 : and al, 0x48 ; mov dword ptr [rbx], eax ; mov eax, 1 ; jmp 0x1545c6
0x0000000000118918 : and al, 0x48 ; mov dword ptr [rsp + 8], ebx ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000013b741 : and al, 0x48 ; mov dword ptr [rsp + 8], edx ; jmp 0x13b702
0x000000000015d97d : and al, 0x48 ; mov eax, dword ptr [rax + 0x1b0] ; jmp rax
0x00000000000bb1b4 : and al, 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014f516 : and al, 0x48 ; mov ecx, dword ptr [rsp + 8] ; call 0x13b788
0x0000000000109358 : and al, 0x48 ; mov ecx, eax ; mov rdi, qword ptr [rbx] ; call 0x105dc9
0x00000000001093a5 : and al, 0x48 ; mov edi, dword ptr [rbx] ; call 0x105dc6
0x000000000008e14c : and al, 0x48 ; mov edi, ebx ; call rax
0x0000000000146c69 : and al, 0x48 ; mov edi, ebx ; xor eax, eax ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x000000000009cc6f : and al, 0x48 ; mov edx, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000009cbda : and al, 0x48 ; mov edx, dword ptr [rsp + 8] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013b70f : and al, 0x48 ; mov edx, dword ptr [rsp + 8] ; jne 0x13b755 ; add rsp, 0x38 ; ret
0x000000000014f512 : and al, 0x48 ; mov edx, dword ptr [rsp] ; mov rcx, qword ptr [rsp + 8] ; call 0x13b78c
0x0000000000108e68 : and al, 0x48 ; mov qword ptr [rsp + 0x10], r9 ; call 0x25149
0x00000000000417c7 : and al, 0x48 ; mov qword ptr [rsp + 0x40], rdx ; call 0x3da39
0x00000000000417c6 : and al, 0x48 ; mov qword ptr [rsp + 0x40], rdx ; call 0x3da3a
0x000000000002d46e : and al, 0x48 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x00000000000d8663 : and al, 0x48 ; mov rdi, qword ptr [rdi + rax*8 + 0x40] ; call 0x25139
0x000000000002c911 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000002efe3 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000002c3b0 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000160e50 : and al, 0x48 ; test eax, eax ; je 0x160e3c ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000009acac : and al, 0x48 ; test eax, eax ; je 0x9ad92 ; call rax
0x000000000009afc3 : and al, 0x48 ; test eax, eax ; je 0x9b03c ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x00000000001586cb : and al, 0x48 ; xor eax, eax ; call 0x25136
0x00000000001586ca : and al, 0x48 ; xor eax, eax ; call 0x25137
0x00000000001120cb : and al, 0x49 ; mov edx, ecx ; mov eax, 0x146 ; syscall
0x0000000000055aac : and al, 0x4c ; lea edx, [rip + 0x159f58] ; jmp 0x55a82
0x00000000000b5c58 : and al, 0x4f ; str word ptr [rbx + 0x63] ; or al, 0x83 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000cec7d : and al, 0x50 ; call rbx
0x000000000002da1f : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x48] ; call r14
0x000000000002d469 : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x48] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x00000000000ced11 : and al, 0x50 ; mov rsi, r13 ; mov rdi, rbp ; call rbx
0x00000000000cec76 : and al, 0x58 ; xor eax, eax ; mov qword ptr [rsp + 0x50], r15 ; call rbx
0x00000000000f4d1b : and al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009afdb : and al, 0x5b ; pop rbp ; pop r12 ; ret
0x0000000000135223 : and al, 0x60 ; call 0x105c28
0x00000000000dd3f3 : and al, 0x60 ; mov rdi, qword ptr [rsp + 8] ; call r12
0x000000000004adc6 : and al, 0x67 ; add dword ptr [rcx - 0x77], ecx ; ret 0x8944
0x00000000000c3a02 : and al, 0x68 ; jmp 0xc3033
0x00000000000c3a01 : and al, 0x68 ; jmp 0xc3034
0x000000000014f5fd : and al, 0x68 ; mov rdi, r15 ; mov rcx, qword ptr [rsp + 0x30] ; call rcx
0x00000000000bb732 : and al, 0x6a ; add byte ptr [rax - 0x73], cl ; add qword ptr [rbp + rcx*4 + 0x4c], rcx ; and al, 0x38 ; call rbx
0x000000000004de4e : and al, 0x6f ; add dword ptr [rcx - 0x77], ecx ; ret 0x8944
0x00000000000fbff5 : and al, 0x70 ; jmp 0xfb0f5
0x000000000012b16b : and al, 0x78 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; movups xmmword ptr [rbp - 0x78], xmm6 ; call rax
0x000000000012b597 : and al, 0x78 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; movups xmmword ptr [rbp - 0x78], xmm7 ; call rax
0x000000000012aca3 : and al, 0x78 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; movups xmmword ptr [rbp - 0x78], xmm4 ; call rax
0x00000000000c5bbd : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000fc882 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x000000000013e8f3 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; and byte ptr [r8 - 0x7d], cl ; ret
0x0000000000097242 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rdi ; or dh, dh ; ret 0xf04
0x000000000008e923 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x88 ; ret
0x000000000013e5f2 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x1f0f
0x000000000013efb6 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x33e9
0x000000000013e4ee : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0xf41
0x000000000013f0f4 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0xfee9
0x000000000013ee8c : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x8944
0x000000000013f08a : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x93e9
0x000000000013f00e : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x43e9
0x000000000005b01f : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret 0x4840
0x0000000000054909 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x8b44
0x00000000000547ab : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x8b4c
0x0000000000097268 : and al, 0x80 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x000000000009c209 : and al, 0x80 ; push r8 ; add dword ptr [rdi], ecx ; adc dword ptr [rbx + 0x38], eax ; mov qword ptr [rbx], rsi ; call rcx
0x000000000005a6fb : and al, 0x83 ; out dx, al ; xor byte ptr [rbp - 0x77], cl ; retf
0x0000000000034dcc : and al, 0x83 ; ret 0x8b05
0x0000000000107ce3 : and al, 0x83 ; sti ; add dword ptr [rdi], ecx ; xchg eax, ebp ; ret
0x00000000000f7314 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000004bf7a : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f3127 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf 0x8b48
0x000000000004b222 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret 0x4418
0x0000000000096d58 : and al, 0x88 ; or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x4e72
0x0000000000026c63 : and al, 0x88 ; sbb byte ptr [rax], al ; ret
0x0000000000147e88 : and al, 0x89 ; add edi, dword ptr [rax + 1] ; jmp 0x147e65
0x00000000001544a8 : and al, 0x89 ; add edi, dword ptr [rax + 1] ; jmp 0x154485
0x0000000000154528 : and al, 0x89 ; add edi, dword ptr [rax + 1] ; jmp 0x154505
0x0000000000154cf8 : and al, 0x89 ; add edi, dword ptr [rax + 1] ; jmp 0x154cd5
0x00000000000bcfac : and al, 0x89 ; ret
0x00000000000d44cd : and al, 0x89 ; ret 0x44c7
0x00000000000d42ed : and al, 0x89 ; ret 0x894c
0x0000000000140164 : and al, 0x8b ; adc byte ptr [r13 + 0x5b0c75c0], al ; pop rbp ; pop r12 ; ret
0x000000000009a53a : and al, 0x8b ; je 0x9a4cd ; retf 0x4c89
0x00000000001087b3 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000005497d : and al, 0x91 ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; retf 0x7c83
0x0000000000146d1d : and al, 0x92 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x00000000000c5f71 : and al, 0x94 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8348
0x00000000000c5f06 : and al, 0x94 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x894c
0x00000000000a1c87 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x8348
0x00000000000a197b : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x8b48
0x00000000000f8073 : and al, 0x98 ; add dword ptr [rax], eax ; add cl, ch ; ret
0x00000000000f6e83 : and al, 0x9c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x00000000000c5f2f : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8348
0x00000000000c5e8d : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8948
0x00000000000f6e4c : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe2c1
0x00000000001926f9 : and al, 0xa2 ; add rdx, r12 ; jmp rdx
0x00000000000cf14e : and al, 0xa4 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x00000000000c585f : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x860f
0x00000000000fc060 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x000000000008bad0 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0x5e
0x00000000000a112a : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x860f
0x000000000002ae1d : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0xf685
0x00000000000c56a9 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x830f
0x000000000013eda2 : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000e13d0 : and al, 0xc ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004426b : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e14ce : and al, 0xc ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e1685 : and al, 0xc ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e15f5 : and al, 0xc ; add rsp, 0x18 ; ret
0x00000000001461bc : and al, 0xc ; call 0x1123f4
0x000000000004a488 : and al, 0xc ; call 0x57079
0x000000000004a487 : and al, 0xc ; call 0x5707a
0x000000000011249f : and al, 0xc ; jne 0x112470 ; neg eax ; jmp 0x112470
0x000000000011249e : and al, 0xc ; jne 0x112471 ; neg eax ; jmp 0x112471
0x000000000012c806 : and al, 0xc ; mov edi, dword ptr [rsp + 8] ; mov eax, 0xe6 ; syscall
0x00000000000a7064 : and al, 0xc ; mov word ptr [rdi + 4], dx ; ret
0x000000000014f480 : and al, 0xc8 ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; leave ; call 0x13b6d9
0x00000000000435bd : and al, 0xc8 ; ret
0x00000000000435b7 : and al, 0xd0 ; movdqa xmm0, xmmword ptr [rsp - 0x38] ; ret
0x000000000008350a : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000194ca8 : and al, 0xd8 ; ret
0x00000000000a7152 : and al, 0xe ; mov byte ptr [rdi + 6], al ; mov rax, rdi ; ret
0x00000000000a7237 : and al, 0xe ; mov byte ptr [rdi + 6], dl ; ret
0x0000000000134ca0 : and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000042b5e : and al, 0xe8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; fld xword ptr [rsp - 0x18] ; ret
0x000000000003d3be : and al, 0xe8 ; cld ; retf 0xffff
0x000000000003d414 : and al, 0xe8 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; retf 0xffff
0x0000000000042b84 : and al, 0xe8 ; fld st(0) ; fstp xword ptr [rdi] ; fld xword ptr [rsp + 8] ; fsubrp st(1) ; ret
0x0000000000058755 : and al, 0xe8 ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000042bd4 : and al, 0xe8 ; fstp xword ptr [rdi] ; fld xword ptr [rsp + 8] ; ret
0x00000000000437f6 : and al, 0xe8 ; in al, 0xed ; adc al, 0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003d34d : and al, 0xe8 ; insd dword ptr [rdi], dx ; retf
0x00000000000a01d9 : and al, 0xe8 ; jno 0xa0233 ; clc ; dec dword ptr [rcx - 0x77] ; ret 0xcb8
0x000000000012aa0a : and al, 0xe8 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; movups xmmword ptr [rbp - 0x78], xmm1 ; call rax
0x000000000012f112 : and al, 0xe8 ; mov eax, 0x83 ; syscall
0x0000000000042c7d : and al, 0xe8 ; mov word ptr [rsp - 0x10], ax ; fld xword ptr [rsp - 0x18] ; ret
0x000000000005bd57 : and al, 0xe8 ; pinsrw xmm0, eax, 6 ; ret
0x000000000003d46a : and al, 0xe8 ; push rax ; retf 0xffff
0x000000000003d368 : and al, 0xe8 ; push rdx ; retf
0x000000000003bef7 : and al, 0xe8 ; ret
0x0000000000040050 : and al, 0xe8 ; ret 0xfe52
0x000000000003ba47 : and al, 0xe8 ; retf
0x0000000000109648 : and al, 0xe8 ; retf 0xf1bc
0x00000000000413f0 : and al, 0xe8 ; retf 0xff8a
0x00000000000411f0 : and al, 0xe8 ; retf 0xff8c
0x000000000003d9f0 : and al, 0xe8 ; retf 0xffc4
0x000000000003c7f0 : and al, 0xe8 ; retf 0xffd6
0x000000000002e44a : and al, 0xe9 ; cmp esi, 0x8948ffff ; retf
0x000000000003d611 : and al, 0xe9 ; ret
0x00000000000408a5 : and al, 0xe9 ; ret 0xfff3
0x0000000000139da0 : and al, 0xe9 ; ret 0xfffb
0x000000000008edd7 : and al, 0xe9 ; ret 0xfffe
0x000000000003d3e7 : and al, 0xe9 ; retf 0xfff0
0x00000000000d3d65 : and al, 0xe9 ; retf 0xfff6
0x000000000002eb8d : and al, 0xe9 ; retf 0xfffe
0x00000000000fa44a : and al, 0xeb ; ret
0x0000000000030f95 : and al, 0xeb ; ret 0xffb8
0x00000000000a7131 : and al, 0xec ; mov word ptr [rdi + 4], ax ; mov rax, rdi ; ret
0x00000000000a7216 : and al, 0xec ; mov word ptr [rdi + 4], dx ; ret
0x0000000000196dab : and al, 0xf ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001155d0 : and al, 0xf ; and r8, 0xfffffffffffffff0 ; mov r13, r8 ; mov rdx, r8 ; jmp 0x115614
0x00000000001155cf : and al, 0xf ; and r8, 0xfffffffffffffff0 ; mov r13, r8 ; mov rdx, r8 ; jmp 0x115615
0x0000000000115690 : and al, 0xf ; and r9, 0xfffffffffffffff0 ; mov rdx, r9 ; jmp 0x1156d2
0x000000000011568f : and al, 0xf ; and r9, 0xfffffffffffffff0 ; mov rdx, r9 ; jmp 0x1156d3
0x0000000000115450 : and al, 0xf ; and rax, 0xfffffffffffffff0 ; mov qword ptr [rbp - 0x50], rax ; mov rdx, rax ; jmp 0x115495
0x00000000001480c0 : and al, 0xf ; retf 0x1089
0x000000000006f80e : and al, 0xf ; test byte ptr [rdi], dl ; adc byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4904
0x00000000000446f7 : and al, 0xf ; xchg eax, ebp ; ret 0x8948
0x0000000000044ecf : and al, 0xf ; xchg eax, ebp ; ret 0xd321
0x000000000010daed : and al, 0xf ; xchg eax, esp ; ret 0x2044
0x0000000000043572 : and al, 0xf0 ; and rax, rdx ; sub rax, rdx ; shr rax, 0x3f ; ret
0x0000000000042bd0 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; fld xword ptr [rsp + 8] ; ret
0x0000000000042c82 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000042b14 : and al, 0xf0 ; fstp xword ptr [rdi] ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000058750 : and al, 0xf0 ; mov qword ptr [rsp - 0x18], rax ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000485c8 : and al, 0xf0 ; movhps xmm0, qword ptr [rsp - 0x10] ; movups xmmword ptr [rdi], xmm0 ; ret
0x00000000000cebd6 : and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x000000000005880a : and al, 0xf0 ; movups xmmword ptr [rdi], xmm0 ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x00000000000485cd : and al, 0xf0 ; movups xmmword ptr [rdi], xmm0 ; ret
0x0000000000048296 : and al, 0xf0 ; movups xmmword ptr [rsi], xmm0 ; cmp edx, -1 ; jne 0x48260 ; xor eax, eax ; ret
0x00000000000cebdc : and al, 0xf0 ; ret
0x00000000000a7119 : and al, 0xf4 ; mov byte ptr [rdi + 4], al ; mov rax, rdi ; ret
0x00000000000a704c : and al, 0xf4 ; mov byte ptr [rdi + 4], dl ; ret
0x0000000000043078 : and al, 0xf8 ; mov dword ptr [rdi], ecx ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000042e2d : and al, 0xf8 ; movq xmm0, qword ptr [rsp - 8] ; ret
0x0000000000042e97 : and al, 0xf8 ; movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x0000000000042f20 : and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000042e33 : and al, 0xf8 ; ret
0x00000000000a70fb : and al, 0xfa ; mov byte ptr [rdi + 2], al ; mov rax, rdi ; ret
0x00000000000a702e : and al, 0xfa ; mov byte ptr [rdi + 2], dl ; ret
0x0000000000042c16 : and al, 0xfc ; fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x0000000000043402 : and al, 0xfc ; mov dword ptr [rdi], edx ; ret
0x0000000000043221 : and al, 0xfc ; movd xmm0, dword ptr [rsp - 4] ; ret
0x000000000004323c : and al, 0xfc ; movss dword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x00000000000433fc : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; mov dword ptr [rdi], edx ; ret
0x00000000000432ec : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000043227 : and al, 0xfc ; ret
0x00000000000bce96 : and al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000010d741 : and al, 1 ; add byte ptr [rax], al ; syscall
0x0000000000113124 : and al, 1 ; retf 0x5389
0x0000000000028ea3 : and al, 2 ; mov esi, 0x3a ; call 0x25149
0x0000000000048179 : and al, 4 ; jne 0x4818a ; add rsp, 0x18 ; ret
0x0000000000048178 : and al, 4 ; jne 0x4818b ; add rsp, 0x18 ; ret
0x0000000000135837 : and al, 4 ; mov esi, 0x10 ; jmp 0x1357fe
0x00000000000f4dfe : and al, 4 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000166b94 : and al, 5 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000152e70 : and al, 6 ; jmp 0x152e21
0x0000000000152e6f : and al, 6 ; jmp 0x152e22
0x0000000000045493 : and al, 6 ; mov r13, rax ; mov rdi, r12 ; call rbx
0x00000000000b5e08 : and al, 7 ; add byte ptr [rax], al ; ret
0x000000000004b96e : and al, 8 ; adc byte ptr [rdi], cl ; test dh, ch ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x0000000000150767 : and al, 8 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b48
0x00000000000fdf1d : and al, 8 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd020
0x00000000000fbe03 : and al, 8 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf
0x0000000000048b41 : and al, 8 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009cc73 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000010b367 : and al, 8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009cbde : and al, 8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000359c4 : and al, 8 ; add rsp, 0x18 ; ret
0x000000000014f51a : and al, 8 ; call 0x13b784
0x000000000014f519 : and al, 8 ; call 0x13b785
0x00000000000f88d5 : and al, 8 ; call 0x2531c
0x00000000000f88d4 : and al, 8 ; call 0x2531d
0x000000000009752d : and al, 8 ; call 0x93764
0x000000000009752c : and al, 8 ; call 0x93765
0x0000000000096293 : and al, 8 ; call qword ptr [rax]
0x00000000001434f6 : and al, 8 ; call r12
0x00000000000462de : and al, 8 ; call rax
0x00000000000965f2 : and al, 8 ; call rcx
0x0000000000042cba : and al, 8 ; fadd st(0) ; ret
0x0000000000042c1a : and al, 8 ; fscale ; fstp st(1) ; ret
0x0000000000042b8c : and al, 8 ; fsubrp st(1) ; ret
0x0000000000102f4f : and al, 8 ; jmp 0x102934
0x0000000000102f4e : and al, 8 ; jmp 0x102935
0x000000000013b745 : and al, 8 ; jmp 0x13b6fe
0x00000000000913a9 : and al, 8 ; jmp 0x9137b
0x000000000013b713 : and al, 8 ; jne 0x13b751 ; add rsp, 0x38 ; ret
0x000000000004639b : and al, 8 ; lea r13, [r14 + rbp] ; call rax
0x000000000011181d : and al, 8 ; mov eax, 0x10f ; syscall
0x000000000011db08 : and al, 8 ; mov eax, 0x38 ; syscall
0x000000000010d4ce : and al, 8 ; mov eax, 0x48 ; syscall
0x000000000012c80a : and al, 8 ; mov eax, 0xe6 ; syscall
0x0000000000112483 : and al, 8 ; mov esi, 0x10 ; mov eax, 0x48 ; syscall
0x0000000000095c2a : and al, 8 ; mov qword ptr [rsp + 0x10], r10 ; call 0x1126f9
0x0000000000095c29 : and al, 8 ; mov qword ptr [rsp + 0x10], r10 ; call 0x1126fa
0x000000000003d3b9 : and al, 8 ; mov qword ptr [rsp], rdx ; call 0x39ec8
0x000000000003d3b8 : and al, 8 ; mov qword ptr [rsp], rdx ; call 0x39ec9
0x000000000011891c : and al, 8 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000cf23e : and al, 8 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000121110 : and al, 8 ; mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x0000000000121171 : and al, 8 ; mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x0000000000082545 : and al, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x0000000000151441 : and al, 8 ; mov rdi, qword ptr [rsp] ; call rax
0x0000000000136efe : and al, 8 ; mov rdi, r13 ; mov rsi, qword ptr [rsp] ; call r12
0x00000000001376ad : and al, 8 ; mov rdi, rbx ; call rax
0x0000000000148dd0 : and al, 8 ; mov rdx, r15 ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000045351 : and al, 8 ; mov rsi, r15 ; call r14
0x00000000001551f8 : and al, 8 ; mov rsi, rsp ; mov rdi, r12 ; call qword ptr [rax]
0x0000000000043950 : and al, 8 ; movdqa xmm0, xmmword ptr [rsp] ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000910ec : and al, 8 ; movups xmmword ptr [rbx + 0x38], xmm0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000042abb : and al, 8 ; ret
0x0000000000030f8c : and al, 8 ; sub edx, dword ptr [rsp + 0x10] ; mov dword ptr [r12], edx ; jmp 0x30f65
0x00000000001172e5 : and al, 8 ; syscall
0x0000000000096525 : and al, 8 ; xor edi, edi ; call qword ptr [rax]
0x0000000000043a96 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000042d34 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000a72d6 : and al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e15be : and al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000ad7ae : and al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000147bb4 : and al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000e2dc0 : and al, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000008098a : and al, byte ptr [rcx] ; add byte ptr [rax], al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000011dd11 : and al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x0000000000145f87 : and al, byte ptr [rdi] ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x2c ; call qword ptr [rax]
0x0000000000166d96 : and al, byte ptr [rip + 0x14634900] ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000196965 : and al, byte ptr [rip] ; add bl, al ; nop dword ptr [rax] ; ret
0x00000000000b4fda : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x00000000000f8902 : and al, ch ; adc dl, cl ; dec dword ptr [rcx - 0x75] ; jg 0xf8940 ; call 0x25324
0x00000000000f8876 : and al, ch ; pushfq ; retf 0xfff2
0x0000000000101038 : and al, ch ; ret 0xf349
0x00000000000d455f : and al, ch ; retf
0x00000000001262f0 : and al, ch ; retf 0x53
0x00000000000351d2 : and ax, 0x100 ; movzx eax, ax ; ret
0x00000000000351f2 : and ax, 0x1000 ; movzx eax, ax ; ret
0x0000000000035132 : and ax, 0x200 ; movzx eax, ax ; ret
0x00000000000351b2 : and ax, 0x2000 ; movzx eax, ax ; ret
0x00000000000350d2 : and ax, 0x400 ; movzx eax, ax ; ret
0x0000000000035172 : and ax, 0x4000 ; movzx eax, ax ; ret
0x0000000000035112 : and ax, 0x800 ; movzx eax, ax ; ret
0x0000000000035152 : and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000007aa1f : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000000536da : and bh, byte ptr [rip + 0x4c60019] ; adc byte ptr [rax], al ; ret
0x00000000000b63e7 : and bl, al ; nop dword ptr [rax] ; ret
0x00000000000fda4e : and bl, ch ; retf
0x0000000000088b29 : and byte ptr [r11 + rcx*4 + 0x75], r9b ; sbb byte ptr [rax - 0x77], cl ; retf
0x00000000000aac61 : and byte ptr [r14 + 0xf], r12b ; xlatb ; rol dword ptr [rbp + 0x317575c0], 0xc0 ; ret
0x000000000008cca6 : and byte ptr [r15 + 0xe], r14b ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010b4bf : and byte ptr [r15], r9b ; adc dword ptr [rdi + 0x30], eax ; movups xmmword ptr [rdi + 0x40], xmm0 ; ret
0x000000000014852c : and byte ptr [r8 + 1], dil ; jmp 0x1484ff
0x0000000000088b52 : and byte ptr [r8 + 1], r9b ; ret
0x00000000000330e3 : and byte ptr [r8 - 0x77], r9b ; sti ; test rax, rax ; je 0x330f9 ; call rax
0x000000000013e8fa : and byte ptr [r8 - 0x7d], cl ; ret
0x00000000000b9836 : and byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x000000000009575c : and byte ptr [r9 + 0x39], cl ; ret 0x850f
0x00000000000cfbc1 : and byte ptr [r9 + 0x5e], r8b ; pop r15 ; ret
0x0000000000097280 : and byte ptr [r9 - 0x75], cl ; push rcx ; or dh, dh ; ret 0x7404
0x00000000000eb037 : and byte ptr [r9], r15b ; push rbp ; sbb byte ptr [rdx + rdx*2 - 0x73], dh ; add qword ptr [rax - 0x7d], rcx ; ret
0x0000000000090b52 : and byte ptr [r9], sil ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000011d90d : and byte ptr [rax + 0x21], cl ; clc ; or rax, rsi ; ret
0x0000000000181fb6 : and byte ptr [rax + 0x29], cl ; retf 0x860f
0x000000000002e4cf : and byte ptr [rax + 0x39], cl ; call 0x3cd67ec
0x0000000000097adf : and byte ptr [rax + 0x39], cl ; ret 0x4273
0x0000000000047a00 : and byte ptr [rax + 0x39], cl ; ret 0xea76
0x0000000000056a9f : and byte ptr [rax + 0x39], cl ; retf
0x0000000000185c5a : and byte ptr [rax + 0x3a], al ; xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x00000000000bf36c : and byte ptr [rax + 0x63], cl ; ret
0x0000000000114947 : and byte ptr [rax + 0x65], bh ; syscall
0x000000000014852d : and byte ptr [rax + 1], bh ; jmp 0x1484fe
0x000000000014f305 : and byte ptr [rax + 1], bh ; movups xmmword ptr [rdx], xmm3 ; ret
0x00000000000eaee6 : and byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001861a7 : and byte ptr [rax + 1], cl ; clc ; sub rax, rdx ; vzeroupper ; ret
0x000000000018212c : and byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x000000000007473b : and byte ptr [rax + 1], cl ; ret
0x00000000001825a6 : and byte ptr [rax + 1], cl ; ret 0x147c
0x00000000000aace6 : and byte ptr [rax + 1], cl ; ret 0x347c
0x000000000011bffb : and byte ptr [rax + 2], bh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000005bd4a : and byte ptr [rax + 9], cl ; retf 0x8948
0x00000000000b033d : and byte ptr [rax + 9], cl ; retf 0xf48
0x00000000000b04fe : and byte ptr [rax + 9], cl ; retf 0xf4c
0x00000000001026f0 : and byte ptr [rax + rax*8 - 0x76b2248b], al ; ret 0x894d
0x0000000000115326 : and byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b60d5 : and byte ptr [rax - 0x73], cl ; jg 0xb6105 ; jne 0xb653b ; ret
0x00000000000b7839 : and byte ptr [rax - 0x73], cl ; jg 0xb7869 ; jne 0xb7d5b ; ret
0x00000000001351b0 : and byte ptr [rax - 0x75], cl ; adc byte ptr [rcx], dh ; shr al, 0xe5 ; ret 0xfff4
0x00000000000dd6a6 : and byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000002bdcb : and byte ptr [rax - 0x75], cl ; je 0x2bdff ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x000000000002e7e8 : and byte ptr [rax - 0x75], cl ; je 0x2e81d ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x000000000002f9e3 : and byte ptr [rax - 0x75], cl ; je 0x2fa18 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000008753a : and byte ptr [rax - 0x75], cl ; or byte ptr [rax + 0x39], cl ; retf 0x776
0x00000000000965e9 : and byte ptr [rax - 0x77], cl ; and al, 0x18 ; mov qword ptr [rsp + 8], r11 ; call rcx
0x00000000000fda4a : and byte ptr [rax - 0x77], cl ; and r11b, bpl ; retf
0x0000000000082708 : and byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000011a36f : and byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 0x11] ; call r14
0x00000000001122a9 : and byte ptr [rax - 0x77], cl ; ret
0x000000000009dfdb : and byte ptr [rax - 0x77], cl ; ret 0x148
0x0000000000053b47 : and byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000015b2c2 : and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x0000000000134823 : and byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000df722 : and byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000001068e5 : and byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000111dc7 : and byte ptr [rax - 0x77], cl ; retf
0x00000000000c0d41 : and byte ptr [rax - 0x77], cl ; retf 0x8b48
0x0000000000125ae3 : and byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret 0x4801
0x00000000000330e4 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x330f8 ; call rax
0x0000000000029166 : and byte ptr [rax - 0x7d], cl ; ret
0x0000000000182367 : and byte ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000008dc82 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x00000000000a3f64 : and byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000110048 : and byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ficom word ptr [rax - 0xf] ; dec dword ptr [rax - 0x77] ; ret 0x3b48
0x00000000000e361a : and byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000007dfde : and byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000000e35d7 : and byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xff ; cmovne rax, rdx ; ret
0x000000000007cf2d : and byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 0x4f0], rdi ; jmp rax
0x00000000000ba701 : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000010d6e1 : and byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000006dcd0 : and byte ptr [rax], al ; add byte ptr [rbp - 0x76b70088], cl ; ret
0x00000000000ad9fe : and byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000003a7de : and byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fe07], al ; jmp qword ptr [rax]
0x0000000000190de6 : and byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000148fb7 : and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg dword ptr [rax - 0x77000000], ebx ; retf 0xe183
0x0000000000190cc6 : and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2041
0x00000000000b752c : and byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x00000000000b9837 : and byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000d242c : and byte ptr [rbp + 0x11], dl ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000103543 : and byte ptr [rbp + 0x31], al ; jmp qword ptr [rsi + 0xf]
0x000000000011ee9f : and byte ptr [rbp + 0x31], al ; leave ; xor r8d, r8d ; mov eax, 0x2c ; syscall
0x000000000011ec7f : and byte ptr [rbp + 0x31], al ; leave ; xor r8d, r8d ; mov eax, 0x2d ; syscall
0x0000000000189cad : and byte ptr [rbp - 0x1f], dh ; vzeroupper ; ret
0x0000000000112454 : and byte ptr [rbx + 0x267409fe], al ; mov eax, 0x48 ; syscall
0x000000000009c452 : and byte ptr [rbx + 0x50], 0xfd ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000d01c7 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000030f6d : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000127ad6 : and byte ptr [rbx + r9*4 + 0x4f], r8b ; sbb byte ptr [rbx + rcx*4 + 0x46], al ; sbb byte ptr [rax + 0x39], cl ; retf 0x840f
0x0000000000127ad7 : and byte ptr [rbx + rcx*4 + 0x4f], al ; sbb byte ptr [rbx + rcx*4 + 0x46], al ; sbb byte ptr [rax + 0x39], cl ; retf 0x840f
0x0000000000088b2a : and byte ptr [rbx + rcx*4 + 0x75], cl ; sbb byte ptr [rax - 0x77], cl ; retf
0x0000000000147923 : and byte ptr [rbx - 0x48], bl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000777bc : and byte ptr [rbx], 0x13 ; add byte ptr [rax + 0x63], cl ; add al, 0x88 ; add rax, r14 ; jmp rax
0x00000000000cc200 : and byte ptr [rbx], al ; add byte ptr [rax], al ; add cl, ch ; retf 0xffed
0x000000000018a76a : and byte ptr [rbx], bh ; xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x0000000000116e25 : and byte ptr [rcx + 0x358d48c7], cl ; ret
0x000000000009575d : and byte ptr [rcx + 0x39], cl ; ret 0x850f
0x000000000009182f : and byte ptr [rcx + 0x5bd231d1], cl ; jmp rax
0x00000000000cfbc2 : and byte ptr [rcx + 0x5e], al ; pop r15 ; ret
0x00000000000d1766 : and byte ptr [rcx + rcx*4 + 0x35], cl ; retf 0x1161
0x000000000011da99 : and byte ptr [rcx + rcx*4 + 0x44], cl ; and al, 0x30 ; mov qword ptr [rsp + 0x38], r9 ; syscall
0x0000000000039d65 : and byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000013fdb4 : and byte ptr [rcx + rcx*4 - 0xe], al ; call 0x13c8b6
0x0000000000084a9b : and byte ptr [rcx - 0x3b7cb7d7], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000011dc1f : and byte ptr [rcx - 0x47], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x119 ; syscall
0x0000000000097281 : and byte ptr [rcx - 0x75], cl ; push rcx ; or dh, dh ; ret 0x7404
0x0000000000088d1c : and byte ptr [rcx - 0x77], cl ; ret 0x8b48
0x000000000011f451 : and byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000000e1705 : and byte ptr [rcx], al ; mov eax, 0x38 ; syscall
0x00000000000eb038 : and byte ptr [rcx], bh ; push rbp ; sbb byte ptr [rdx + rdx*2 - 0x73], dh ; add qword ptr [rax - 0x7d], rcx ; ret
0x00000000000c895f : and byte ptr [rcx], bh ; ret
0x0000000000187258 : and byte ptr [rcx], ch ; retf 0x3944
0x000000000008b7bb : and byte ptr [rcx], ch ; retf 0x3fe9
0x000000000008b983 : and byte ptr [rcx], ch ; retf 0x40e9
0x000000000008bbcb : and byte ptr [rcx], ch ; retf 0x43e9
0x00000000001889c8 : and byte ptr [rcx], ch ; retf 0x81eb
0x0000000000187ca8 : and byte ptr [rcx], ch ; retf 0x8ceb
0x0000000000186ab8 : and byte ptr [rcx], ch ; retf 0x9ceb
0x000000000005bcd9 : and byte ptr [rcx], cl ; ret 0x9574
0x0000000000090b53 : and byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000e183c : and byte ptr [rcx], dl ; sti ; dec dword ptr [rax + 0x39] ; ret
0x000000000008cd57 : and byte ptr [rdi + 0xe], dh ; mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008cca7 : and byte ptr [rdi + 0xe], dh ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010b4c0 : and byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], eax ; movups xmmword ptr [rdi + 0x40], xmm0 ; ret
0x00000000000ba2d1 : and byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000011f94d : and byte ptr [rdi], cl ; add byte ptr [rbp + 0x2e], dh ; mov eax, 0x42 ; syscall
0x00000000000351b5 : and byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x00000000001817b4 : and byte ptr [rdi], cl ; mov dh, 0x54 ; cmp ah, byte ptr [rax] ; sub eax, edx ; vzeroupper ; ret
0x000000000014738f : and byte ptr [rdi], cl ; retf 0x5089
0x00000000000429c6 : and byte ptr [rdi], cl ; retf 0xd289
0x000000000013f34e : and byte ptr [rdi], cl ; test dword ptr [rax + 0x3c000001], esi ; and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x2c3c
0x00000000000b60d9 : and byte ptr [rdi], cl ; test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x0000000000038fcf : and byte ptr [rdi], cl ; test ebx, edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000018e570 : and byte ptr [rdi], cl ; test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000157fc2 : and byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000001154b9 : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd108
0x00000000001153ef : and byte ptr [rdi], cl ; xchg eax, esp ; sar dword ptr [rsp + rbx*2], 0xf ; xchg eax, esp ; ret 0xd108
0x000000000018db68 : and byte ptr [rdx + 0xa], dh ; vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000147bb3 : and byte ptr [rdx], 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008b2ef : and byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000166f84 : and byte ptr [rip + 0x14634900], al ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000015ab51 : and byte ptr [rip + 0x5d5b0000], al ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000155f40 : and byte ptr [rsi + 0xd], dh ; add dword ptr [rdi + 0x28], esi ; ret
0x000000000011fc16 : and byte ptr [rsi + 0xf], 0x66 ; ret 0x894c
0x000000000018af8a : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000159f6d : and byte ptr [rsi + 0xf], ah ; insb byte ptr [rdi], dx ; ret 0xf66
0x00000000000ba520 : and byte ptr [rsi + 0xf], ah ; jg 0xba572 ; xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x000000000018af85 : and byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000043a06 : and byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000000aac62 : and byte ptr [rsi + 0xf], ah ; xlatb ; rol dword ptr [rbp + 0x317575c0], 0xc0 ; ret
0x000000000009d36c : and byte ptr [rsi + 1], cl ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000000ef187 : and byte ptr [rsi + rsi*2 + 0xf], dh ; mov dh, 0x7b ; or byte ptr [rbx - 0x76bac7b2], cl ; ret 0x418d
0x0000000000115cf1 : and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rax - 1], 0 ; ret
0x000000000012a5c1 : and byte ptr [rsp + rcx + 0x5b], dh ; ret
0x000000000013e9a9 : and byte ptr [rsp + rsi*8 + 0x3c], dh ; or dword ptr [rax + rsi*8 - 0x7c], esi ; ror byte ptr [rdi], 0x94 ; ret 0xa3c
0x00000000000ce472 : and ch, 0xf ; je 0xce499 ; add rax, 2 ; ret
0x00000000000ba698 : and ch, 0xf0 ; pop rbx ; cmovne rax, rdx ; ret
0x000000000010cb88 : and ch, 1 ; jne 0x10cbda ; mov eax, 0x10c ; syscall
0x0000000000185f8b : and ch, al ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x0000000000181689 : and ch, al ; in eax, 0xda ; faddp st(5) ; in eax, 0x74 ; ffreep st(5) ; std ; xlatb ; retf
0x00000000001823b3 : and ch, al ; std ; xlatb ; ret
0x0000000000186ee4 : and ch, al ; std ; xlatb ; ror byte ptr [rcx - 0x7d], cl ; ret 0x4d20
0x00000000000ce45d : and cl, 0xf ; je 0xce485 ; ret
0x00000000000e9e67 : and cl, byte ptr [rax + 0x39] ; retf
0x00000000000952a4 : and cl, byte ptr [rax - 0x75] ; add ecx, dword ptr [rax + 0x29] ; ret
0x000000000005c572 : and cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000d6a95 : and cl, byte ptr [rax - 0x7d] ; ret
0x000000000010bd93 : and cl, byte ptr [rbx + 0x44634901] ; test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0x000000000009e924 : and cl, byte ptr [rcx + rcx*4 - 0x28] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000aaedd : and cl, byte ptr [rcx - 0x77] ; ret
0x000000000005a908 : and cl, byte ptr [rcx - 0x7d] ; in al, dx ; add dword ptr [rcx + 0xf], eax ; mov esi, 0x89412404 ; ret
0x00000000001200ff : and cl, byte ptr [rcx] ; add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000f6ae1 : and cl, byte ptr [rdi] ; mov dh, 0x57 ; cmp dh, dh ; ret 0xf08
0x0000000000108a93 : and cl, byte ptr [rdi] ; test byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x0000000000115d09 : and cl, byte ptr [rip + 0x40c64100] ; inc dword ptr [rax] ; ret
0x00000000001605fa : and cl, byte ptr [rsp + rbp*8 - 1] ; xor eax, eax ; add rsp, 8 ; ret
0x000000000002c3f7 : and cl, ch ; ret
0x00000000000f88f2 : and cl, dl ; dec dword ptr [rcx - 0x75] ; jg 0xf891c ; call 0x25322
0x00000000000ba603 : and dh, 0xf0 ; mov edx, 0 ; pop rbx ; cmove rax, rdx ; ret
0x00000000000e191d : and dh, ah ; mov edi, edx ; mov eax, r8d ; syscall
0x000000000007aa1e : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000000b535a : and dl, byte ptr [rdi + 0xf] ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000002f0e5 : and dword ptr [rax + 0x29], ecx ; ret 0x8b41
0x0000000000174289 : and dword ptr [rax], eax ; add byte ptr [rax - 0x7bf0ffc7], al ; retf
0x000000000007a88b : and dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000010d711 : and dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000001708ce : and dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000079f4c : and dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008722c : and dword ptr [rbx], 0xffffffef ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000087288 : and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001896da : and dword ptr [rcx], 2 ; add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x000000000011dcd4 : and dword ptr [rcx], eax ; add byte ptr [rax], al ; mov edx, 8 ; syscall
0x000000000014d1fb : and dword ptr [rdi + 0x3d83ffef], esi ; retf 0x9d1
0x000000000015e7a6 : and dword ptr [rdi + rdx*8], eax ; xor eax, eax ; ret
0x000000000008d2e0 : and dword ptr [rdi], 0xffffffcf ; ret
0x00000000001460c7 : and dword ptr [rdi], eax ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x2c ; call qword ptr [rax]
0x0000000000146063 : and dword ptr [rdi], eax ; add byte ptr [rbx + rcx*4 + 5], cl ; retf
0x0000000000044950 : and dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000092a8e : and dword ptr [rdi], ecx ; mov dh, 0 ; ret
0x00000000000bd64b : and dword ptr [rdx - 0x38b60007], ebx ; ret 0xfc01
0x00000000001896db : and dword ptr [rdx], eax ; add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x0000000000166ee6 : and dword ptr [rip + 0x14634900], eax ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000111d67 : and dword ptr [rip + 0x64d8f700], ecx ; mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000b5f0b : and dword ptr [rsi], eax ; add byte ptr [rax], al ; ret
0x00000000000d953b : and dword ptr [rsp + rsi*8 + 0x903c7ff], edi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000174288 : and dword ptr fs:[rax], eax ; add byte ptr [rax - 0x7bf0ffc7], al ; retf
0x0000000000026ecb : and eax, 0 ; ret
0x000000000012c384 : and eax, 0x10 ; ret
0x0000000000112783 : and eax, 0x100f ; ret
0x00000000000bbd37 : and eax, 0x127164 ; jmp 0xbbc05
0x0000000000042cca : and eax, 0x200 ; ret
0x0000000000101afa : and eax, 0x28 ; jne 0x101b61 ; add rsp, 0x38 ; ret
0x000000000010c2d2 : and eax, 0x28 ; jne 0x10c2f4 ; add rsp, 0x28 ; ret
0x000000000010c45d : and eax, 0x28 ; jne 0x10c476 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000010c547 : and eax, 0x28 ; jne 0x10c55e ; add rsp, 0x18 ; ret
0x000000000010c599 : and eax, 0x28 ; jne 0x10c5b0 ; add rsp, 0x18 ; ret
0x000000000010d5e2 : and eax, 0x28 ; jne 0x10d658 ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000112472 : and eax, 0x28 ; jne 0x1124ce ; add rsp, 0x68 ; ret
0x0000000000112501 : and eax, 0x28 ; jne 0x112556 ; add rsp, 0x18 ; ret
0x00000000001125d2 : and eax, 0x28 ; jne 0x112626 ; add rsp, 0x58 ; ret
0x0000000000112667 : and eax, 0x28 ; jne 0x1126be ; add rsp, 0x58 ; ret
0x0000000000112b59 : and eax, 0x28 ; jne 0x112b86 ; add rsp, 0x38 ; ret
0x0000000000112bb4 : and eax, 0x28 ; jne 0x112bd2 ; add rsp, 0x18 ; ret
0x00000000001139d6 : and eax, 0x28 ; jne 0x113a4e ; add rsp, 0x48 ; ret
0x0000000000113a86 : and eax, 0x28 ; jne 0x113afe ; add rsp, 0x48 ; ret
0x0000000000113b48 : and eax, 0x28 ; jne 0x113bc8 ; add rsp, 0x38 ; ret
0x0000000000113c18 : and eax, 0x28 ; jne 0x113c98 ; add rsp, 0x38 ; ret
0x000000000011489d : and eax, 0x28 ; jne 0x1148b4 ; add rsp, 0x38 ; ret
0x000000000011496b : and eax, 0x28 ; jne 0x1149b8 ; add rsp, 0x68 ; ret
0x00000000001159af : and eax, 0x28 ; jne 0x115a00 ; add rsp, 0x38 ; ret
0x0000000000115a7e : and eax, 0x28 ; jne 0x115ad0 ; add rsp, 0x38 ; ret
0x00000000001182e0 : and eax, 0x28 ; jne 0x1182f7 ; add rsp, 0x18 ; ret
0x000000000011dab7 : and eax, 0x28 ; jne 0x11dae6 ; add rsp, 0x78 ; ret
0x000000000011f425 : and eax, 0x28 ; jne 0x11f43c ; add rsp, 0x18 ; ret
0x000000000011f96a : and eax, 0x28 ; jne 0x11f9c6 ; add rsp, 0x58 ; ret
0x000000000012c9bf : and eax, 0x28 ; jne 0x12caa9 ; leave ; ret
0x000000000012ed5f : and eax, 0x28 ; jne 0x12ed80 ; add rsp, 0x28 ; ret
0x000000000012edbf : and eax, 0x28 ; jne 0x12ede0 ; add rsp, 0x28 ; ret
0x0000000000135814 : and eax, 0x28 ; jne 0x13584b ; add rsp, 0x38 ; ret
0x00000000001358b2 : and eax, 0x28 ; jne 0x1358c9 ; add rsp, 0x38 ; ret
0x000000000013592f : and eax, 0x28 ; jne 0x135946 ; add rsp, 0x28 ; ret
0x000000000013b58d : and eax, 0x28 ; jne 0x13b5ab ; add rsp, 0x18 ; ret
0x000000000013d93b : and eax, 0x28 ; jne 0x13d952 ; add rsp, 0x18 ; ret
0x00000000001431c0 : and eax, 0x28 ; jne 0x1431d9 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001450b2 : and eax, 0x28 ; jne 0x1450cb ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000147e65 : and eax, 0x28 ; jne 0x147eb7 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001483ab : and eax, 0x28 ; jne 0x1483ee ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000148449 : and eax, 0x28 ; jne 0x148491 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000014910a : and eax, 0x28 ; jne 0x149133 ; add rsp, 0x40 ; pop rbx ; ret
0x000000000014d2d6 : and eax, 0x28 ; jne 0x14d367 ; add rsp, 0x20 ; pop rbx ; ret
0x00000000001502e6 : and eax, 0x28 ; jne 0x150315 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000150658 : and eax, 0x28 ; jne 0x15067b ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015088e : and eax, 0x28 ; jne 0x1508b3 ; add rsp, 0x30 ; pop rbx ; ret
0x00000000001509ae : and eax, 0x28 ; jne 0x1509d3 ; add rsp, 0x30 ; pop rbx ; ret
0x000000000015211c : and eax, 0x28 ; jne 0x152133 ; add rsp, 0x78 ; ret
0x0000000000152182 : and eax, 0x28 ; jne 0x152199 ; add rsp, 0x78 ; ret
0x00000000001521f2 : and eax, 0x28 ; jne 0x152209 ; add rsp, 0x78 ; ret
0x0000000000152262 : and eax, 0x28 ; jne 0x152279 ; add rsp, 0x78 ; ret
0x00000000001522c3 : and eax, 0x28 ; jne 0x1522da ; add rsp, 0x78 ; ret
0x0000000000152327 : and eax, 0x28 ; jne 0x15233e ; add rsp, 0x78 ; ret
0x0000000000152392 : and eax, 0x28 ; jne 0x1523a9 ; add rsp, 0x78 ; ret
0x000000000015240c : and eax, 0x28 ; jne 0x152423 ; add rsp, 0x78 ; ret
0x000000000015294a : and eax, 0x28 ; jne 0x152983 ; add rsp, 0x28 ; ret
0x000000000015442c : and eax, 0x28 ; jne 0x154443 ; add rsp, 0x48 ; ret
0x0000000000154485 : and eax, 0x28 ; jne 0x1544d7 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000154505 : and eax, 0x28 ; jne 0x154556 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001545c5 : and eax, 0x28 ; jne 0x154619 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000154a15 : and eax, 0x28 ; jne 0x154a68 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000154aa5 : and eax, 0x28 ; jne 0x154af7 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000154c45 : and eax, 0x28 ; jne 0x154ca5 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000154cd5 : and eax, 0x28 ; jne 0x154d27 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000155915 : and eax, 0x28 ; jne 0x155971 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001559a5 : and eax, 0x28 ; jne 0x155a01 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000155a35 : and eax, 0x28 ; jne 0x155a89 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000155ac5 : and eax, 0x28 ; jne 0x155b19 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015af79 : and eax, 0x28 ; jne 0x15afb7 ; add rsp, 0x18 ; ret
0x000000000015b3f0 : and eax, 0x28 ; jne 0x15b430 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015b470 : and eax, 0x28 ; jne 0x15b4b0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015db2b : and eax, 0x28 ; jne 0x15db79 ; add rsp, 0x58 ; ret
0x000000000015dc28 : and eax, 0x28 ; jne 0x15dc7f ; add rsp, 0x68 ; ret
0x000000000015ddcf : and eax, 0x28 ; jne 0x15de2f ; add rsp, 0x78 ; ret
0x000000000015de91 : and eax, 0x28 ; jne 0x15dedf ; add rsp, 0x38 ; ret
0x000000000015e3c4 : and eax, 0x28 ; jne 0x15e3e1 ; add rsp, 0x28 ; ret
0x0000000000043ada : and eax, 0x28 ; jne 0x43af1 ; add rsp, 0x18 ; ret
0x000000000004472d : and eax, 0x28 ; jne 0x4475e ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000047d6a : and eax, 0x28 ; jne 0x47d81 ; add rsp, 0x28 ; ret
0x0000000000047e5a : and eax, 0x28 ; jne 0x47e71 ; add rsp, 0x28 ; ret
0x00000000000486a4 : and eax, 0x28 ; jne 0x486bb ; add rsp, 0x18 ; ret
0x00000000000486f1 : and eax, 0x28 ; jne 0x48708 ; add rsp, 0x18 ; ret
0x0000000000048743 : and eax, 0x28 ; jne 0x4875a ; add rsp, 0x18 ; ret
0x0000000000048790 : and eax, 0x28 ; jne 0x487a7 ; add rsp, 0x18 ; ret
0x00000000000487e3 : and eax, 0x28 ; jne 0x487fa ; add rsp, 0x18 ; ret
0x0000000000048830 : and eax, 0x28 ; jne 0x48847 ; add rsp, 0x18 ; ret
0x000000000005836c : and eax, 0x28 ; jne 0x583b6 ; leave ; ret
0x000000000006397e : and eax, 0x28 ; jne 0x639a2 ; add rsp, 0x18 ; ret
0x000000000008cfcf : and eax, 0x28 ; jne 0x8cff2 ; add rsp, 0x48 ; ret
0x000000000009413b : and eax, 0x28 ; jne 0x94191 ; add rsp, 0x50 ; pop rbx ; ret
0x00000000000c8b2a : and eax, 0x28 ; jne 0xc8b60 ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000ceba4 : and eax, 0x28 ; jne 0xcebbd ; add rsp, 0x40 ; pop rbx ; ret
0x00000000000d2a1c : and eax, 0x28 ; jne 0xd2a48 ; add rsp, 0x28 ; ret
0x00000000000d2b4d : and eax, 0x28 ; jne 0xd2b6d ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000d8c93 : and eax, 0x28 ; jne 0xd8caa ; add rsp, 0x18 ; ret
0x00000000000dba63 : and eax, 0x28 ; jne 0xdba7a ; add rsp, 0x18 ; ret
0x00000000000ddad6 : and eax, 0x28 ; jne 0xddb36 ; add rsp, 0x38 ; ret
0x00000000000e1dca : and eax, 0x28 ; jne 0xe1e20 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000e1f5a : and eax, 0x28 ; jne 0xe1fb0 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000e27a6 : and eax, 0x28 ; jne 0xe2806 ; add rsp, 0x38 ; ret
0x00000000000e2836 : and eax, 0x28 ; jne 0xe2896 ; add rsp, 0x38 ; ret
0x00000000000e2ac6 : and eax, 0x28 ; jne 0xe2b2e ; add rsp, 0x38 ; ret
0x00000000000e2b66 : and eax, 0x28 ; jne 0xe2bce ; add rsp, 0x38 ; ret
0x0000000000026eac : and eax, 0x30 ; add rsp, 0x28 ; jmp rax
0x0000000000026b9d : and eax, 0x30 ; call rax
0x00000000000472e2 : and eax, 0x30 ; call rdx
0x0000000000029b67 : and eax, 0x30 ; jmp rax
0x0000000000052e59 : and eax, 0x30 ; lea rsi, [rip + 0x7b] ; call rax
0x0000000000055996 : and eax, 0x30 ; mov edi, dword ptr [rsp + 0x24] ; call rax
0x00000000000472a1 : and eax, 0x30 ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x00000000000835e8 : and eax, 0x30 ; mov rdi, rbp ; call rax
0x00000000000dbb75 : and eax, 0x30 ; pop r13 ; pop r14 ; jmp rax
0x000000000012fd26 : and eax, 0x30 ; rol rax, 0x11 ; jmp 0x12fcfd
0x000000000010c48b : and eax, 0x30 ; test rax, rax ; je 0x10c4cc ; xor edx, edx ; call rax
0x000000000012c6da : and eax, 0x30 ; test rax, rax ; je 0x12c71a ; call rax
0x000000000013581a : and eax, 0x38c48348 ; ret
0x00000000000ba61e : and eax, 0x3fc00 ; ret
0x00000000000ba734 : and eax, 0x3fffc00 ; div ecx ; mov eax, eax ; ret
0x00000000000ba669 : and eax, 0x3fffc00 ; ret
0x00000000001019b8 : and eax, 0x40 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000166a44 : and eax, 0x63490005 ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000352c2 : and eax, 0x7f ; ret
0x00000000000ba74e : and eax, 0x7ff80000 ; div esi ; mov eax, eax ; ret
0x00000000000ba6b7 : and eax, 0x7ff80000 ; ret
0x00000000000430d4 : and eax, 0x80 ; ret
0x000000000008c1b2 : and eax, 0x804 ; ret
0x000000000006f61f : and eax, 0x83000005 ; ret 0x3901
0x000000000002ccf3 : and eax, 0x833fe283 ; retf 0x4180
0x0000000000034f55 : and eax, 0x8948000e ; ret
0x00000000000f2c35 : and eax, 0x8948fff3 ; ret
0x0000000000080fd5 : and eax, 0x894cf801 ; ret 0x8b44
0x000000000012be57 : and eax, 0xc ; cmp eax, 4 ; je 0x12be68 ; ret
0x000000000012c00a : and eax, 0xc ; pop rbx ; pop rbp ; ret
0x0000000000101874 : and eax, 0xd8f7000e ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000e18d5 : and eax, 0xd8f70010 ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ba5ec : and eax, 0xf ; movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x0000000000101c04 : and eax, 0xf ; ret
0x00000000001127c9 : and eax, 0xffffeff0 ; or eax, esi ; mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x0000000000112812 : and eax, 0xffffeff0 ; or esi, eax ; xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x000000000011d8b6 : and eax, 0xfffff000 ; or eax, edx ; ret
0x000000000012f31a : and eax, 0xffffff ; or eax, edi ; bswap eax ; ret
0x000000000012f302 : and eax, 0xffffff ; ret
0x0000000000115453 : and eax, 0xfffffff0 ; mov qword ptr [rbp - 0x50], rax ; mov rdx, rax ; jmp 0x115492
0x00000000001155d3 : and eax, 0xfffffff0 ; mov r13, r8 ; mov rdx, r8 ; jmp 0x115611
0x000000000013a473 : and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x000000000009a209 : and eax, 1 ; cmovne rax, rdx ; ret
0x000000000008a3ff : and eax, 1 ; mov edx, eax ; jmp 0x8a3ae
0x000000000008a4ef : and eax, 1 ; mov edx, eax ; jmp 0x8a49e
0x000000000008a3eb : and eax, 1 ; mov edx, eax ; mov eax, edx ; ret
0x00000000001187fe : and eax, 1 ; or rdi, rax ; mov qword ptr [rdx], rdi ; pop rbx ; pop rbp ; ret
0x0000000000035272 : and eax, 1 ; ret
0x00000000000ecaa8 : and eax, 2 ; add eax, 8 ; ret
0x00000000000350f2 : and eax, 2 ; movzx eax, ax ; ret
0x0000000000142f2c : and eax, 2 ; pop r14 ; sub eax, 1 ; ret
0x00000000000568cc : and eax, 2 ; sub eax, 1 ; ret
0x000000000011e26f : and eax, 3 ; ret
0x0000000000035192 : and eax, 4 ; movzx eax, ax ; ret
0x00000000000350b2 : and eax, 8 ; movzx eax, ax ; ret
0x0000000000043454 : and eax, 8 ; ret
0x00000000000dd2e1 : and eax, dword ptr [rax - 0x76b7000c] ; ret 0x8948
0x00000000000a3fcb : and eax, dword ptr [rax] ; add bh, dh ; ret
0x00000000001581df : and eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001479f1 : and eax, dword ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000000e163e : and eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000170725 : and eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000ad689 : and eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; jmp 0xad6a9
0x0000000000111abc : and eax, dword ptr [rbx + 0xe74a1f8] ; neg eax ; pop rbx ; ret
0x00000000000e2ca2 : and eax, dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000100b2c : and eax, dword ptr [rcx - 0x73] ; add qword ptr [r13 - 0x7b], r9 ; in al, 0x75 ; retf 0x6348
0x000000000011e481 : and eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x0000000000176099 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x0000000000166c46 : and eax, dword ptr [rip + 0x14634900] ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000041d21 : and eax, dword ptr [rsp + 0x38] ; or rax, 0xd ; jmp 0x41cf6
0x0000000000042a3f : and eax, ecx ; ret
0x000000000011d90f : and eax, edi ; or rax, rsi ; ret
0x0000000000042d6f : and eax, edx ; ret
0x0000000000042db0 : and eax, edx ; sub rax, rdx ; shr rax, 0x3f ; ret
0x00000000000aad48 : and eax, edx ; test eax, eax ; je 0xaad2c ; bsr eax, eax ; add rax, rdi ; ret
0x000000000003548d : and eax, esi ; ret
0x0000000000152f2e : and ebp, ebp ; dec dword ptr [rax - 0x77] ; ret
0x000000000008722d : and ebp, edi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000087289 : and ebp, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013431a : and ebx, 0x840f2000 ; ret
0x000000000012bdf2 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x12be05 ; ret
0x00000000000ecbdf : and ebx, 8 ; je 0xecb75 ; pop rbx ; ret
0x0000000000105e49 : and ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000048662 : and ecx, 0x3ff ; xor eax, ecx ; ret
0x00000000000485e4 : and ecx, 0x7fffffff ; mov dword ptr [rdx], ecx ; mov dword ptr [rsi], ecx ; ret
0x00000000000ecb82 : and ecx, 0x80 ; cmovne eax, edx ; pop rbx ; ret
0x000000000018c505 : and ecx, 0xff ; sub eax, ecx ; ret
0x000000000018bc38 : and ecx, 0xffff ; sub eax, ecx ; ret
0x000000000008a2f0 : and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x0000000000115693 : and ecx, 0xfffffff0 ; mov rdx, r9 ; jmp 0x1156cf
0x00000000000ecbc9 : and ecx, 1 ; jne 0xecb3b ; ret
0x000000000004c37b : and ecx, 1 ; movsxd r8, r8d ; call 0x4a11c
0x00000000000ed628 : and ecx, 4 ; jne 0xed689 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000090409 : and ecx, dword ptr [rax + 0x39] ; retf
0x0000000000146352 : and ecx, dword ptr [rax - 0x75] ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000025359 : and ecx, dword ptr [rax - 0x76b7ffed] ; ret
0x00000000000a0a3c : and ecx, dword ptr [rax - 0x7d] ; rol dword ptr [rcx], 0x48 ; sub eax, 1 ; jne 0xa0a44 ; jmp 0xa0a20
0x00000000000a2704 : and ecx, dword ptr [rbp + 0x63490e78] ; ret 0xf41
0x000000000012c26b : and ecx, dword ptr [rdi] ; mov cl, 0x35 ; lodsd eax, dword ptr [rsi] ; ret
0x000000000014d18f : and ecx, dword ptr [rdi] ; mov cl, 0x35 ; push rbp ; retf 9
0x000000000013f356 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x2c3c
0x0000000000116422 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x0000000000116349 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xd189
0x000000000013f772 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xfb80
0x0000000000121b1a : and ecx, dword ptr [rsi + 0x10] ; lea rcx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000187ce7 : and ecx, ebp ; ret
0x0000000000101baa : and ecx, esi ; cmp ecx, dword ptr [rax - 0xc] ; jne 0x101baa ; mov eax, dword ptr [rdx + 8] ; ret
0x00000000000352d2 : and edi, 0xffffff80 ; sete al ; ret
0x000000000010d48c : and edi, dword ptr [rax + 0x48] ; syscall
0x00000000000e3ba9 : and edi, dword ptr [rcx + 3] ; add byte ptr [rax - 0x77], cl ; ret 0x6be9
0x0000000000149c9b : and edx, 0x7f ; movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x0000000000043199 : and edx, 0x7fffffff ; sub eax, edx ; shr eax, 0x1f ; ret
0x0000000000043250 : and edx, 0x80000000 ; mov dword ptr [rdi], edx ; ret
0x00000000000ba67e : and edx, 0xf ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000ecb7f : and edx, 1 ; and ecx, 0x80 ; cmovne eax, edx ; pop rbx ; ret
0x00000000000777bd : and edx, dword ptr [rbx] ; add byte ptr [rax + 0x63], cl ; add al, 0x88 ; add rax, r14 ; jmp rax
0x0000000000042eb3 : and edx, eax ; mov qword ptr [rdi], rdx ; ret
0x000000000012e69a : and edx, ecx ; cmp rdx, rsi ; je 0x12e6af ; ret
0x00000000000bb42a : and edx, ecx ; cmp rdx, rsi ; je 0xbb43f ; ret
0x0000000000190887 : and esi, 0x89497fff ; ret 0xc148
0x0000000000034df8 : and esi, dword ptr [rdi + 0x10] ; lea rax, [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x00000000001218f2 : and esi, dword ptr [rdx + 0x10] ; lea rdx, [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000000f0f04 : and esi, esi ; ret
0x000000000012734c : and esp, dword ptr [rcx + rcx*2 - 0x75] ; xor dword ptr [rax + 0x63], ecx ; retf 0x44f6
0x000000000015e7a5 : and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x000000000004494f : and qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000fda4d : and r11b, bpl ; retf
0x00000000000b63e6 : and r11b, r8b ; nop dword ptr [rax] ; ret
0x0000000000134319 : and r11d, 0x840f2000 ; ret
0x000000000012bdf1 : and r11d, 0xffffffbb ; cmp r11d, 0xa ; je 0x12be06 ; ret
0x00000000001155d2 : and r8, 0xfffffffffffffff0 ; mov r13, r8 ; mov rdx, r8 ; jmp 0x115612
0x0000000000115692 : and r9, 0xfffffffffffffff0 ; mov rdx, r9 ; jmp 0x1156d0
0x0000000000115452 : and rax, 0xfffffffffffffff0 ; mov qword ptr [rbp - 0x50], rax ; mov rdx, rax ; jmp 0x115493
0x0000000000041d20 : and rax, qword ptr [rsp + 0x38] ; or rax, 0xd ; jmp 0x41cf7
0x000000000011d90e : and rax, rdi ; or rax, rsi ; ret
0x0000000000042daf : and rax, rdx ; sub rax, rdx ; shr rax, 0x3f ; ret
0x0000000000042eb2 : and rdx, rax ; mov qword ptr [rdi], rdx ; ret
0x000000000012e699 : and rdx, rcx ; cmp rdx, rsi ; je 0x12e6b0 ; ret
0x00000000000bb429 : and rdx, rcx ; cmp rdx, rsi ; je 0xbb440 ; ret
0x00000000000431db : andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x0000000000042dc8 : andpd xmm1, xmmword ptr [rip + 0x174fb0] ; orpd xmm0, xmm1 ; ret
0x00000000000431d8 : andps xmm0, xmm3 ; andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x0000000000042dc9 : andps xmm1, xmmword ptr [rip + 0x174fb0] ; orpd xmm0, xmm1 ; ret
0x000000000013b336 : bnd jb 0x13b32c ; mov eax, 0xffffffff ; ret
0x000000000012e69e : bnd je 0x12e6ab ; ret
0x00000000000a6e89 : bnd je 0xa6e83 ; ret
0x00000000000bb42e : bnd je 0xbb43b ; ret
0x00000000000bc6b7 : bnd je 0xbc6c4 ; test edx, edx ; jne 0xbc6b6 ; ret
0x00000000000bc6b7 : bnd je 0xbc6c5 ; test edx, edx ; jne 0xbc6b7 ; ret
0x0000000000185d44 : bsf eax, eax ; add rax, rcx ; add rax, rdi ; vzeroupper ; ret
0x00000000000aa88a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x0000000000182236 : bsf eax, eax ; add rax, rdi ; add rax, rcx ; vzeroupper ; ret
0x00000000000aa7b0 : bsf eax, eax ; add rax, rdi ; ret
0x0000000000186191 : bsf eax, eax ; add rax, rdi ; sub rax, rdx ; vzeroupper ; ret
0x0000000000182191 : bsf eax, eax ; add rax, rdi ; vzeroupper ; ret
0x00000000000aa7c0 : bsf eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x00000000000aa7d0 : bsf eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x00000000000aa7a0 : bsf eax, eax ; lea rax, [rax + rdi - 0x10] ; ret
0x00000000000aa6ff : bsf eax, eax ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000afcf3 : bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x00000000000aa7e0 : bsf eax, eax ; sub rdx, rax ; jbe 0xaa82b ; add rax, rdi ; ret
0x00000000000ccd00 : bsf eax, eax ; sub rdx, rax ; jbe 0xccd4b ; add rax, rdi ; ret
0x000000000009e475 : bsf eax, edi ; cmove eax, edx ; add eax, 1 ; ret
0x000000000009e486 : bsf eax, edi ; cmove rax, rdx ; add eax, 1 ; ret
0x00000000000b01e6 : bsf eax, edx ; ret
0x00000000000ce067 : bsf eax, edx ; shr rax, 2 ; ret
0x00000000000b0342 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x0000000000186ab0 : bsf edx, edx ; add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x186a63
0x00000000001871d0 : bsf edx, edx ; add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x187183
0x0000000000187850 : bsf edx, edx ; add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x187803
0x0000000000187ca0 : bsf edx, edx ; add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x187c43
0x0000000000188540 : bsf edx, edx ; add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x1884f3
0x00000000001889c0 : bsf edx, edx ; add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x188958
0x00000000000afe10 : bsf rax, rax ; lea rax, [rdi + rax] ; ret
0x000000000009e485 : bsf rax, rdi ; cmove rax, rdx ; add eax, 1 ; ret
0x00000000000b0232 : bsf rax, rdx ; ret
0x00000000000ce066 : bsf rax, rdx ; shr rax, 2 ; ret
0x00000000000b0341 : bsf rdx, rdx ; add rax, rdx ; sub rax, rdi ; ret
0x0000000000182550 : bsr eax, eax ; add eax, 0x20 ; add rax, rdi ; vzeroupper ; ret
0x0000000000182560 : bsr eax, eax ; add eax, 0x40 ; add rax, rdi ; vzeroupper ; ret
0x0000000000182570 : bsr eax, eax ; add eax, 0x60 ; add rax, rdi ; ret
0x000000000018263a : bsr eax, eax ; add rax, rdi ; add rax, r8 ; vzeroupper ; ret
0x00000000000aada6 : bsr eax, eax ; add rax, rdi ; add rax, rsi ; ret
0x00000000000aabd6 : bsr eax, eax ; add rax, rdi ; ret
0x000000000018245f : bsr eax, eax ; add rax, rdi ; vzeroupper ; ret
0x00000000000aac80 : bsr eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x00000000000aac90 : bsr eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x00000000000aaca0 : bsr eax, eax ; lea rax, [rax + rdi + 0x30] ; ret
0x0000000000186001 : bsr eax, eax ; lea rax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x00000000000b019b : bsr eax, esi ; add rax, rdi ; ret
0x00000000000b00a9 : bsr esi, esi ; lea rax, [rcx + rsi] ; ret
0x00000000000affa5 : bsr esi, esi ; lea rax, [rdi + rsi] ; ret
0x00000000000aff16 : bsr rax, rax ; add rax, rdi ; ret
0x00000000000b019a : bsr rax, rsi ; add rax, rdi ; ret
0x00000000000b00a8 : bsr rsi, rsi ; lea rax, [rcx + rsi] ; ret
0x00000000000affa4 : bsr rsi, rsi ; lea rax, [rdi + rsi] ; ret
0x000000000014ea4e : bswap eax ; mov dword ptr [r8 + 0x48], eax ; mov eax, 1 ; ret
0x000000000014e9b3 : bswap eax ; mov dword ptr [r8 + 0x54], eax ; mov eax, 1 ; ret
0x000000000014ea7b : bswap eax ; mov dword ptr [r8 + 0x58], eax ; mov eax, 1 ; ret
0x000000000014f3aa : bswap eax ; mov dword ptr [rdx + 0x10], eax ; mov eax, 1 ; ret
0x000000000014f2aa : bswap eax ; mov dword ptr [rdx + 0xc], eax ; mov eax, 1 ; ret
0x000000000014f36d : bswap eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000014bdb7 : bswap eax ; mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x000000000012f2c2 : bswap eax ; ret
0x000000000018281e : bswap ecx ; mov al, byte ptr [rdi + rdx - 1] ; mov cl, byte ptr [rsi + rdx - 1] ; sub eax, ecx ; ret
0x0000000000042d90 : btr edx, 0x3f ; sub rax, rdx ; shr rax, 0x3f ; ret
0x0000000000042d8f : btr rdx, 0x3f ; sub rax, rdx ; shr rax, 0x3f ; ret
0x00000000000585e1 : bts esi, 0x34 ; mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x0000000000135225 : call 0x105c26
0x000000000010935f : call 0x105dc2
0x000000000010ed60 : call 0x10c5b6
0x000000000010fc33 : call 0x10c652
0x000000000010fc32 : call 0x10c653
0x000000000011137d : call 0x10d662
0x0000000000111408 : call 0x10d663
0x0000000000135e8e : call 0x10d669
0x0000000000110e2c : call 0x10d892
0x000000000007795a : call 0x1107795c
0x0000000000077ae5 : call 0x11077ae7
0x0000000000077b5e : call 0x11077b60
0x0000000000077d4c : call 0x11077d4e
0x0000000000078339 : call 0x1107833b
0x00000000001461be : call 0x1123f2
0x000000000011b22c : call 0x1123f6
0x0000000000117352 : call 0x1123f9
0x0000000000095c31 : call 0x1126f2
0x0000000000116640 : call 0x1128e2
0x00000000001149eb : call 0x115879
0x00000000000935fe : call 0x117488
0x0000000000129143 : call 0x1257e6
0x0000000000129b2b : call 0x125d82
0x000000000012743b : call 0x125e47
0x000000000015eced : call 0x12b792
0x00000000000df2c6 : call 0x12bdb2
0x00000000000ceaec : call 0x12c6c7
0x0000000000062f6c : call 0x12f212
0x000000000013af01 : call 0x12f216
0x00000000001411a9 : call 0x12f218
0x0000000000189905 : call 0x139da914
0x000000000013eb37 : call 0x13b602
0x000000000014f487 : call 0x13b6d2
0x000000000014f51c : call 0x13b782
0x000000000013fdb8 : call 0x13c8b2
0x0000000000103ae9 : call 0x140592
0x0000000000143d5d : call 0x140832
0x000000000015e780 : call 0x141f2f93
0x00000000001369b4 : call 0x142ca2
0x0000000000137a77 : call 0x1431e9
0x0000000000136a93 : call 0x144c07
0x000000000014c0cc : call 0x148b92
0x00000000000d37c4 : call 0x149a7fd7
0x000000000015e760 : call 0x149b2f77
0x00000000001456cc : call 0x151942
0x0000000000148eec : call 0x1551a2
0x000000000013be70 : call 0x1580b2
0x000000000012c8b0 : call 0x15dab9
0x000000000012c8cb : call 0x15db89
0x000000000010140f : call 0x1d29826
0x0000000000042c7e : call 0x2448b5f3
0x0000000000043529 : call 0x2450c07e
0x0000000000108e18 : call 0x250b2
0x00000000000d866a : call 0x25132
0x00000000000d8669 : call 0x25133
0x000000000012723c : call 0x25139
0x0000000000028e4a : call 0x25142
0x0000000000038e67 : call 0x25143
0x00000000000d870c : call 0x25192
0x00000000001023e7 : call 0x25197
0x00000000000d876c : call 0x25222
0x00000000000f3d59 : call 0x25224
0x00000000000e87ee : call 0x25252
0x0000000000028f6c : call 0x25262
0x000000000013900d : call 0x2530a
0x00000000001390d0 : call 0x2531a
0x0000000000145646 : call 0x2531e
0x000000000010a0e0 : call 0x2531f
0x0000000000059145 : call 0x25416
0x000000000019644e : call 0x27b57
0x000000000019644d : call 0x27b58
0x0000000000029b84 : call 0x295c8
0x00000000001898ed : call 0x2b9da8fc
0x00000000000f462e : call 0x344908be
0x00000000000f465d : call 0x344b08ed
0x0000000000028d71 : call 0x34fd2
0x00000000000526a1 : call 0x34fd8
0x00000000000a7364 : call 0x34fd9
0x00000000001297f8 : call 0x35a02
0x000000000012964e : call 0x35a07
0x0000000000196493 : call 0x38749e
0x00000000000f43b8 : call 0x39510648
0x00000000000f43e4 : call 0x39510674
0x000000000003dbe1 : call 0x39ec2
0x00000000000f08b5 : call 0x3b50cb45
0x00000000000f5866 : call 0x3b551af6
0x00000000000f5894 : call 0x3b551b24
0x000000000002e4d2 : call 0x3cd67e9
0x00000000000417ce : call 0x3da32
0x00000000000417cd : call 0x3da33
0x0000000000043d86 : call 0x44147
0x00000000000cf0d5 : call 0x44cf19fc
0x00000000000cf37a : call 0x44cf1ca1
0x00000000000cf596 : call 0x44cf1ebd
0x00000000000468d1 : call 0x45386
0x000000000014d1fa : call 0x48927
0x00000000000434f8 : call 0x48cebe48
0x00000000000cefbc : call 0x48cf18e3
0x0000000000097e34 : call 0x48d38784
0x0000000000097e33 : call 0x48d38785
0x000000000011d8a5 : call 0x48d461b5
0x000000000014886e : call 0x48d711be
0x00000000000e2c48 : call 0x48d8b55c
0x000000000004c381 : call 0x4a116
0x00000000000a0a66 : call 0x4a8f1976
0x00000000000a0a66 : call 0x4a8f1977
0x0000000000176011 : call 0x4aa4a828
0x000000000017602f : call 0x4aa4a847
0x00000000001760f3 : call 0x4aa4a912
0x0000000000176113 : call 0x4aa4a933
0x000000000009df26 : call 0x4cbfee34
0x000000000004ae6e : call 0x4ccf37c2
0x000000000004def6 : call 0x4ccf684a
0x0000000000050c57 : call 0x4ccf95ab
0x000000000016ae5a : call 0x4f95be58
0x000000000016ae59 : call 0x4f95be59
0x000000000016d97a : call 0x4f95e978
0x000000000016d979 : call 0x4f95e979
0x0000000000059de5 : call 0x568a2
0x000000000005ae01 : call 0x57072
0x000000000004a3c0 : call 0x57077
0x000000000009bdfa : call 0x62777
0x0000000000146cd4 : call 0x62f82
0x000000000006c166 : call 0x64546
0x0000000000142251 : call 0x74f3ca9b
0x0000000000115411 : call 0x76129027
0x00000000001154d1 : call 0x761290e7
0x0000000000115591 : call 0x761291a7
0x0000000000115651 : call 0x76129267
0x000000000007893c : call 0x7893f
0x00000000000b5d1e : call 0x7f98a535
0x00000000000b5d3c : call 0x7f98a554
0x00000000000b5e20 : call 0x7f98a63f
0x00000000000b5e40 : call 0x7f98a660
0x00000000000b5f22 : call 0x7f98a749
0x00000000000b5f42 : call 0x7f98a76a
0x00000000000b6074 : call 0x7f98a8a3
0x00000000000b60a4 : call 0x7f98a8d4
0x00000000000b73d2 : call 0x7f98bbe9
0x00000000000b73f0 : call 0x7f98bc08
0x00000000000b74f4 : call 0x7f98bd13
0x00000000000b7524 : call 0x7f98bd44
0x00000000000b7656 : call 0x7f98be7d
0x00000000000b7686 : call 0x7f98beae
0x00000000000b77d8 : call 0x7f98c007
0x00000000000b7808 : call 0x7f98c038
0x00000000001351b6 : call 0x814a2
0x000000000009910a : call 0x81e57
0x00000000001160fe : call 0x823a2
0x000000000012ef59 : call 0x8b1c2
0x000000000009a5d7 : call 0x8cc2928
0x0000000000082402 : call 0x8ee12
0x00000000000840f7 : call 0x90b82
0x0000000000063f4a : call 0x919a8
0x000000000009752f : call 0x93762
0x000000000006fc63 : call 0x9c6a2
0x00000000000a060d : call 0x9d022
0x00000000000266a3 : call 0xba576
0x000000000002656b : call 0xbaa96
0x00000000000f28cf : call 0xc4aeb5f
0x00000000000f28fd : call 0xc4aeb8d
0x00000000000d065a : call 0xd00a6
0x000000000011057b : call 0xdc862
0x000000000016073b : call 0xdca02
0x000000000002562a : call 0xe18f2
0x000000000011de01 : call 0xf11de0a
0x000000000011de39 : call 0xf11de42
0x00000000000bbac7 : call 0xf7288c2
0x000000000004f822 : call 0xff7f82d
0x000000000002cd0e : call 0xffffffff80cd5034
0x0000000000063192 : call 0xffffffff814e8e18
0x0000000000042a61 : call 0xffffffff81c6b389
0x0000000000063265 : call 0xffffffff834e5fe8
0x00000000000ba67a : call 0xffffffff83ce2f8e
0x000000000011818b : call 0xffffffff87217477
0x00000000000f5d5f : call 0xffffffffb71398af
0x00000000000eca66 : call 0xffffffffb8d153b6
0x000000000005bd58 : call 0xffffffffc0c9ccc9
0x00000000000ce71e : call 0xffffffffc2362f66
0x00000000000941e8 : call 0xffffffffc24289f2
0x0000000000055878 : call 0xffffffffc28e99a0
0x000000000004a96c : call 0xffffffffc298b8b6
0x000000000004d9ec : call 0xffffffffc298e936
0x000000000005074c : call 0xffffffffc2991696
0x00000000000b5d44 : call 0xffffffffc30b5d54
0x00000000001211ec : call 0xffffffffc313f278
0x000000000012127c : call 0xffffffffc313f308
0x000000000012131c : call 0xffffffffc313f3a8
0x00000000001213ac : call 0xffffffffc313f438
0x000000000012143c : call 0xffffffffc313f4c8
0x00000000001214cc : call 0xffffffffc313f558
0x000000000012156c : call 0xffffffffc313f5f8
0x000000000012160c : call 0xffffffffc313f698
0x00000000001216ac : call 0xffffffffc313f738
0x000000000012173c : call 0xffffffffc313f7c8
0x00000000001217d7 : call 0xffffffffc313f863
0x000000000012186c : call 0xffffffffc313f8f8
0x0000000000121a48 : call 0xffffffffc313fad4
0x0000000000121b8e : call 0xffffffffc313fc1a
0x0000000000121c0e : call 0xffffffffc313fc9a
0x0000000000121c8e : call 0xffffffffc313fd1a
0x0000000000121d0e : call 0xffffffffc313fd9a
0x0000000000121d8e : call 0xffffffffc313fe1a
0x0000000000121e0e : call 0xffffffffc313fe9a
0x0000000000121e8e : call 0xffffffffc313ff1a
0x0000000000121f0e : call 0xffffffffc313ff9a
0x0000000000121f8e : call 0xffffffffc314001a
0x000000000012200e : call 0xffffffffc314009a
0x000000000012208b : call 0xffffffffc3140117
0x000000000012210e : call 0xffffffffc314019a
0x00000000001222b8 : call 0xffffffffc3140344
0x000000000011e26e : call 0xffffffffc315c2fa
0x0000000000055228 : call 0xffffffffc33e9a32
0x000000000009793e : call 0xffffffffc342c148
0x000000000009814e : call 0xffffffffc342c958
0x000000000009871a : call 0xffffffffc342cf24
0x00000000001151a0 : call 0xffffffffc34a99aa
0x0000000000035aa8 : call 0xffffffffc35f9c0e
0x000000000007c2c6 : call 0xffffffffc38bc2ce
0x000000000007c2c5 : call 0xffffffffc38bc2cf
0x0000000000178e55 : call 0xffffffffc39d9d6e
0x0000000000179ed5 : call 0xffffffffc39dadee
0x00000000000b50c7 : call 0xffffffffc3dbda18
0x00000000000ebe2d : call 0xffffffffc3e2cd9c
0x00000000000b4fe7 : call 0xffffffffc403d938
0x00000000000b80b7 : call 0xffffffffc4040a08
0x000000000005bd49 : call 0xffffffffca0f0572
0x0000000000190b0d : call 0xffffffffca225319
0x0000000000056764 : call 0xffffffffca51f2b9
0x0000000000058424 : call 0xffffffffca520f79
0x0000000000190abe : call 0xffffffffca9d19c8
0x0000000000038005 : call 0xffffffffcbed4880
0x000000000014b27d : call 0xffffffffcbfcb28f
0x0000000000056771 : call 0xffffffffce59f2cb
0x0000000000058431 : call 0xffffffffce5a0f8b
0x0000000000119088 : call 0xffffffffe110edeb
0x00000000001910c8 : call 0xffffffffe7da59d8
0x000000000004ebe3 : call 0xffffffffe80637ef
0x0000000000062572 : call 0xfffffffff96db38e
0x0000000000048632 : call 0xfffffffffc04ab45
0x000000000002dc8c : call 0xfffffffffcc560a3
0x00000000001186a5 : call 0xffffffffff6dc80b
0x000000000005545c : call 0xffffffffff71d779
0x000000000005c2f0 : call 0xffffffffff890b03
0x000000000004ebe7 : call 0xfffffffffff4aed7
0x00000000000ba205 : call qword ptr [r10]
0x0000000000088420 : call qword ptr [r13 + 0x18]
0x00000000000563de : call qword ptr [rax + 0x4cca8948]
0x0000000000042eee : call qword ptr [rax - 0x3d]
0x00000000000882de : call qword ptr [rax - 0x76df357d]
0x0000000000193cde : call qword ptr [rax - 0x7c3576b4]
0x0000000000075dbe : call qword ptr [rax - 0x8d77a39]
0x0000000000050d1d : call qword ptr [rax]
0x0000000000088421 : call qword ptr [rbp + 0x18]
0x0000000000047398 : call qword ptr [rbx]
0x000000000007361d : call qword ptr [rcx - 0x347c0001]
0x0000000000094fe6 : call qword ptr [rcx]
0x000000000002da04 : call qword ptr [rdx]
0x000000000009abca : call qword ptr [rip + 0x14ca48]
0x0000000000073eb1 : call qword ptr [rsi]
0x000000000014364f : call r10
0x00000000001434f8 : call r12
0x0000000000028cdb : call r14
0x000000000002aa71 : call r15
0x000000000012abb8 : call r8
0x000000000012c2e7 : call rax
0x0000000000034e18 : call rbx
0x000000000002836c : call rcx
0x000000000002aa72 : call rdi
0x0000000000143650 : call rdx
0x0000000000028cdc : call rsi
0x00000000001434f9 : call rsp
0x00000000001625d7 : cdq ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000160f4e : cdq ; add al, 0 ; movsxd r9, dword ptr [r10 + r9*4] ; lea r10, [r10 + r9] ; jmp r10
0x00000000000c776b : cdq ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000014978e : cdq ; add byte ptr [rip - 0x76b70000], al ; retf
0x0000000000047c62 : cdq ; idiv esi ; shl rdx, 0x20 ; or rax, rdx ; ret
0x0000000000047c74 : cdq ; idiv rsi ; ret
0x000000000011ed33 : cdq ; mov dh, 0xc ; add byte ptr [rcx - 0x77], al ; retf 0x8b
0x000000000012e5ea : cdq ; mov rax, rdi ; ret
0x000000000013fbf3 : cdq ; or al, byte ptr [rax] ; test eax, eax ; je 0x13fc07 ; ret
0x000000000013b99f : cdq ; out dx, al ; dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000b53e3 : cdq ; push rsi ; str word ptr [rcx + 0x63] ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000b69b7 : cdq ; str word ptr [rcx + 0x63] ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000010bd27 : clc ; adc byte ptr [rdi], cl ; test byte ptr [rdi - 0x9fffffd], bl ; ret 0xf20
0x000000000002bbc8 : clc ; add al, 0 ; add byte ptr [rax + 0x29], cl ; retf 0xe083
0x0000000000169937 : clc ; add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000001045f4 : clc ; add al, 0xf ; xchg eax, esp ; ret
0x000000000008732d : clc ; add al, byte ptr [rcx - 0x73] ; inc ebx ; xor eax, eax ; ret
0x000000000010c1a9 : clc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rsi + 0x70], edi ; ret
0x000000000011f9bd : clc ; add byte ptr [rax], al ; mov r10, rcx ; mov eax, 0xdc ; syscall
0x00000000000bb4fc : clc ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000baffc : clc ; add cl, byte ptr [rax + 0x29] ; ret 0xf74
0x0000000000096d0c : clc ; add cl, byte ptr [rax + 0xf] ; ret 0xc083
0x0000000000087c64 : clc ; add cl, byte ptr [rax - 0x77] ; ret
0x0000000000104b98 : clc ; add cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0x000000000010462c : clc ; add dh, byte ptr [rax + rcx + 0x31] ; fild dword ptr [rbx - 0x6bf0fb08] ; ret
0x00000000000289f6 : clc ; add dh, byte ptr [rsi - 0x77] ; ret 0x3d83
0x0000000000146dbc : clc ; add dword ptr [rax + rdx + 0x48], esi ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000e0f48 : clc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000000a295d : clc ; add dword ptr [rbp + 0x19], eax ; fild dword ptr [rcx - 0x7d] ; ret
0x0000000000093426 : clc ; add dword ptr [rbp + 0xe], esi ; nop word ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000154571 : clc ; add dword ptr [rbp - 0x14], esi ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000004158e : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x000000000013b233 : clc ; add dword ptr [rcx + rcx - 0x7b], esi ; sal byte ptr [rbp + 0x15], 0x44 ; mov eax, eax ; ret
0x00000000000a3b15 : clc ; add dword ptr [rcx - 0x7c2de63f], ecx ; ret 0x8305
0x0000000000093301 : clc ; add dword ptr [rdi + rcx + 0x44], eax ; ret 0xf641
0x00000000000a02bb : clc ; add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015631d : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000013a475 : clc ; add eax, 0x10 ; ret
0x000000000013b85b : clc ; add eax, edx ; mov edx, 0x7fffffff ; cmovs eax, edx ; ret
0x000000000012a3e1 : clc ; add ecx, dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0xc083
0x00000000000eff31 : clc ; add ecx, dword ptr [rdi] ; test byte ptr [rdi], bl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000546d0 : clc ; add ecx, dword ptr [rdi] ; xchg eax, edi ; ret 0x8545
0x00000000001474da : clc ; add esi, dword ptr [rsi + 0xa] ; mov eax, 2 ; ret
0x000000000018263f : clc ; add rax, r8 ; vzeroupper ; ret
0x00000000000aa587 : clc ; add rax, rcx ; ret
0x00000000001860db : clc ; add rax, rcx ; sub rax, rdx ; vzeroupper ; ret
0x0000000000181fa4 : clc ; add rax, rcx ; vzeroupper ; ret
0x00000000000aadab : clc ; add rax, rsi ; ret
0x00000000000352c1 : clc ; and eax, 0x7f ; ret
0x000000000012f301 : clc ; and eax, 0xffffff ; ret
0x000000000012f2c1 : clc ; bswap eax ; ret
0x0000000000047c61 : clc ; cdq ; idiv esi ; shl rdx, 0x20 ; or rax, rdx ; ret
0x0000000000056921 : clc ; clc ; jne 0x56917 ; mov rax, rdx ; ret
0x000000000013a451 : clc ; cmc ; je 0x13a44d ; pop rbx ; ret
0x0000000000190447 : clc ; cmp eax, dword ptr [rsi - 8] ; jne 0x19055a ; ret
0x0000000000190446 : clc ; cmp eax, dword ptr [rsi - 8] ; jne 0x19055b ; ret
0x000000000018c4a9 : clc ; cmp rcx, rax ; jne 0x18c4db ; xor eax, eax ; ret
0x000000000018c4a8 : clc ; cmp rcx, rax ; jne 0x18c4dc ; xor eax, eax ; ret
0x000000000018ba9d : clc ; cmp rcx, rax ; jne 0x18c4df ; xor eax, eax ; ret
0x000000000018d2e9 : clc ; cmp rcx, rax ; jne 0x18d31b ; xor eax, eax ; ret
0x000000000018d2e8 : clc ; cmp rcx, rax ; jne 0x18d31c ; xor eax, eax ; ret
0x000000000018d0cd : clc ; cmp rcx, rax ; jne 0x18d31f ; xor eax, eax ; ret
0x000000000011ad71 : clc ; cmp rdi, rax ; jne 0x11adb3 ; mov eax, 0x88 ; syscall
0x0000000000047c72 : clc ; cqo ; idiv rsi ; ret
0x000000000012e697 : clc ; dec dword ptr [rax + 0x21] ; retf 0x3948
0x00000000000a02a8 : clc ; dec dword ptr [rax + 0x29] ; ret
0x000000000012d180 : clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x000000000009aaa0 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000012d37e : clc ; dec dword ptr [rax + 0xf] ; ret 0xfc3
0x000000000009e130 : clc ; dec dword ptr [rax + 1] ; ret
0x000000000012d2f9 : clc ; dec dword ptr [rax - 0x73] ; adc eax, 0xfff8ccbe ; cmove rax, rdx ; ret
0x000000000012d239 : clc ; dec dword ptr [rax - 0x73] ; adc eax, 0xfff8cd9e ; cmove rax, rdx ; ret
0x000000000012d179 : clc ; dec dword ptr [rax - 0x73] ; adc eax, 0xfff8ce5e ; cmove rax, rdx ; ret
0x000000000012d377 : clc ; dec dword ptr [rax - 0x73] ; add eax, 0xfff8d070 ; cmovne rax, rdx ; ret
0x0000000000076300 : clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000009d1d9 : clc ; dec dword ptr [rax - 0x77] ; ret 0x394d
0x00000000000964df : clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000009c64f : clc ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000082d9a : clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x00000000001158c5 : clc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + rdx + 0x48], 0x39 ; ret
0x00000000000a0d97 : clc ; dec dword ptr [rbp - 0x7b] ; in al, 0x75 ; retf 0x9066
0x00000000000a0036 : clc ; dec dword ptr [rcx - 0x39] ; add al, 0x24 ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0xa0018
0x00000000000a01dd : clc ; dec dword ptr [rcx - 0x77] ; ret 0xcb8
0x0000000000106673 : clc ; dec dword ptr [rdi] ; test byte ptr [rip - 0x76fffffd], dh ; ret 0xc085
0x0000000000069c34 : clc ; dec dword ptr [rdi] ; test dword ptr [rdi], ecx ; ret
0x000000000007ca60 : clc ; dec dword ptr [rdi] ; test dword ptr [rsi - 0x16000006], edx ; ret
0x0000000000044e67 : clc ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd321
0x000000000011620d : clc ; dec dword ptr [rdi] ; xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000015e81b : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0x1389
0x000000000008a9ad : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000186b2b : clc ; ja 0x186afd ; nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; vzeroupper ; ret
0x000000000018730b : clc ; ja 0x1872dd ; nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; vzeroupper ; ret
0x00000000001878cb : clc ; ja 0x18789d ; nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; vzeroupper ; ret
0x0000000000188019 : clc ; ja 0x187feb ; nop dword ptr [rax] ; mov byte ptr [rdi], dl ; vzeroupper ; ret
0x0000000000188d4d : clc ; ja 0x188d1b ; mov byte ptr [rdi], dl ; vzeroupper ; ret
0x00000000001895f2 : clc ; ja 0x1895c4 ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x000000000018a9ba : clc ; ja 0x18a98b ; nop dword ptr [rax] ; xor eax, eax ; vzeroupper ; ret
0x000000000018ae08 : clc ; ja 0x18add8 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000018e498 : clc ; ja 0x18e46a ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x00000000000ba6ba : clc ; jg 0xba68c ; nop dword ptr [rax] ; mov eax, 0x80 ; pop rbx ; ret
0x0000000000081157 : clc ; jmp 0x8111f
0x0000000000196050 : clc ; jmp qword ptr [rsi + 0xf]
0x0000000000080a47 : clc ; jmp rax
0x000000000019044a : clc ; jne 0x190557 ; ret
0x0000000000190449 : clc ; jne 0x190558 ; ret
0x0000000000056922 : clc ; jne 0x56916 ; mov rax, rdx ; ret
0x000000000009e6e4 : clc ; lcall [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000188cdf : clc ; lea rax, [rdi + r8] ; vzeroupper ; ret
0x00000000000e1dd4 : clc ; leave ; ret
0x00000000001873ff : clc ; mov byte ptr [rdi + r8], 0 ; vzeroupper ; ret
0x0000000000115d05 : clc ; mov byte ptr [rip + 0xd2204], cl ; mov byte ptr [r8 - 1], 0 ; ret
0x0000000000084f04 : clc ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000085622 : clc ; mov dword ptr [rcx], edi ; ret
0x0000000000043079 : clc ; mov dword ptr [rdi], ecx ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000000a7046 : clc ; mov dword ptr [rdi], edx ; movzx edx, byte ptr [rsp - 0xc] ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a705e : clc ; mov dword ptr [rdi], edx ; movzx edx, word ptr [rsp + 0xc] ; mov word ptr [rdi + 4], dx ; ret
0x0000000000165327 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000165c97 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000016abe7 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000165e97 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000016ab57 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000166097 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000016aac7 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000165343 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000187fa7 : clc ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + r8 - 8], rdx ; vzeroupper ; ret
0x00000000000ba54e : clc ; mov qword ptr [rdi], rcx ; ret
0x00000000001895ed : clc ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x000000000018d4ac : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x00000000000ba11a : clc ; mov qword ptr [rdi], rsi ; ret
0x000000000018c4a5 : clc ; mov rcx, qword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x18c4df ; xor eax, eax ; ret
0x000000000018d2e5 : clc ; mov rcx, qword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x18d31f ; xor eax, eax ; ret
0x00000000000ba112 : clc ; mov rsi, qword ptr [rsi] ; mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x00000000000a7027 : clc ; mov word ptr [rdi], dx ; movzx edx, byte ptr [rsp - 6] ; mov byte ptr [rdi + 2], dl ; ret
0x0000000000042e2e : clc ; movq xmm0, qword ptr [rsp - 8] ; ret
0x0000000000042e98 : clc ; movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x0000000000042f21 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000000d4c30 : clc ; movsxd rcx, dword ptr [rdi] ; xchg eax, ecx ; jmp 0xffffffffc2974c42
0x000000000004189f : clc ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x00000000000aaef2 : clc ; movzx eax, al ; sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x000000000002740c : clc ; neg eax ; ret
0x0000000000084f1f : clc ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011d910 : clc ; or rax, rsi ; ret
0x00000000000eac96 : clc ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006deee : clc ; pop rbp ; cmove r9, rdx ; jmp 0x6df11
0x0000000000094fa4 : clc ; pop rbp ; pop r12 ; ret
0x000000000005c0e4 : clc ; pop rbx ; cmovb rax, rdi ; ret
0x000000000004536e : clc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000a7566 : clc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000091bcf : clc ; push qword ptr [rbp - 0x44] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000dcde3 : clc ; push qword ptr [rdi + rax*2 - 0x77] ; ret 0xe283
0x0000000000120908 : clc ; push qword ptr [rsi + rax - 0x7d] ; rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x0000000000106d10 : clc ; push qword ptr [rsp + rbx*8 - 0x77] ; ret 0xc085
0x00000000000e34e7 : clc ; push rbx ; pop rax ; jne 0xe34f7 ; ret
0x000000000009a1f4 : clc ; rcl dword ptr [rax + rax], cl ; jae 0x9a222 ; lea rax, [rax - 8] ; ret
0x000000000002741f : clc ; ret
0x000000000012f2d1 : clc ; rol ax, 8 ; ret
0x0000000000182cc4 : clc ; rol ch, 1 ; jns 0x182ca5 ; retf 0xead3
0x0000000000182e14 : clc ; rol ch, 1 ; jns 0x182df5 ; retf 0xead3
0x0000000000182f64 : clc ; rol ch, 1 ; jns 0x182f45 ; retf 0xead3
0x00000000001830b4 : clc ; rol ch, 1 ; jns 0x183095 ; retf 0xead3
0x0000000000183204 : clc ; rol ch, 1 ; jns 0x1831e5 ; retf 0xead3
0x0000000000183354 : clc ; rol ch, 1 ; jns 0x183335 ; retf 0xead3
0x00000000001834a4 : clc ; rol ch, 1 ; jns 0x183485 ; retf 0xead3
0x00000000001835f4 : clc ; rol ch, 1 ; jns 0x1835d5 ; retf 0xead3
0x0000000000183744 : clc ; rol ch, 1 ; jns 0x183725 ; retf 0xead3
0x0000000000183894 : clc ; rol ch, 1 ; jns 0x183875 ; retf 0xead3
0x00000000001839e4 : clc ; rol ch, 1 ; jns 0x1839c5 ; retf 0xead3
0x0000000000183b34 : clc ; rol ch, 1 ; jns 0x183b15 ; retf 0xead3
0x0000000000183c84 : clc ; rol ch, 1 ; jns 0x183c65 ; retf 0xead3
0x0000000000183dd4 : clc ; rol ch, 1 ; jns 0x183db5 ; retf 0xead3
0x0000000000183f24 : clc ; rol ch, 1 ; jns 0x183f05 ; retf 0xead3
0x0000000000184394 : clc ; rol ch, 1 ; jns 0x184375 ; retf 0xead3
0x0000000000184514 : clc ; rol ch, 1 ; jns 0x1844f5 ; retf 0xead3
0x0000000000184694 : clc ; rol ch, 1 ; jns 0x184675 ; retf 0xead3
0x0000000000184814 : clc ; rol ch, 1 ; jns 0x1847f5 ; retf 0xead3
0x0000000000184994 : clc ; rol ch, 1 ; jns 0x184975 ; retf 0xead3
0x0000000000184b14 : clc ; rol ch, 1 ; jns 0x184af5 ; retf 0xead3
0x0000000000184c94 : clc ; rol ch, 1 ; jns 0x184c75 ; retf 0xead3
0x0000000000184e14 : clc ; rol ch, 1 ; jns 0x184df5 ; retf 0xead3
0x0000000000184f94 : clc ; rol ch, 1 ; jns 0x184f75 ; retf 0xead3
0x0000000000185114 : clc ; rol ch, 1 ; jns 0x1850f5 ; retf 0xead3
0x0000000000185294 : clc ; rol ch, 1 ; jns 0x185275 ; retf 0xead3
0x0000000000185414 : clc ; rol ch, 1 ; jns 0x1853f5 ; retf 0xead3
0x0000000000185594 : clc ; rol ch, 1 ; jns 0x185575 ; retf 0xead3
0x0000000000185714 : clc ; rol ch, 1 ; jns 0x1856f5 ; retf 0xead3
0x0000000000185894 : clc ; rol ch, 1 ; jns 0x185875 ; retf 0xead3
0x0000000000047c13 : clc ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x000000000012f18b : clc ; sar rax, 6 ; ret
0x0000000000047c25 : clc ; sar rdx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x00000000000e83fe : clc ; sbb byte ptr [rcx], bh ; ret
0x0000000000153d47 : clc ; sbb cl, byte ptr [rcx + 0x430f41c8] ; ret 0xf801
0x00000000000ce984 : clc ; sbb dword ptr [rdi + 0x18], edi ; mov rax, rbx ; pop rbx ; ret
0x000000000005705a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000012f381 : clc ; shr eax, 0x18 ; ret
0x00000000000ce17f : clc ; shr rax, 2 ; ret
0x000000000018aad6 : clc ; sub rax, rdx ; shr rax, 2 ; vzeroupper ; ret
0x0000000000186196 : clc ; sub rax, rdx ; vzeroupper ; ret
0x000000000009a204 : clc ; sub rdx, 8 ; and eax, 1 ; cmovne rax, rdx ; ret
0x000000000018211b : clc ; vzeroupper ; ret
0x0000000000082b60 : cld ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x00000000000c5bd0 : cld ; add al, 0 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000e3562 : cld ; add byte ptr [rax], al ; ret
0x00000000000a02f4 : cld ; add dword ptr [rbp + 0x10], esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000054643 : cld ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x7c8b
0x00000000000ba620 : cld ; add eax, dword ptr [rax] ; ret
0x0000000000151e39 : cld ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000196964 : cld ; and al, byte ptr [rip] ; add bl, al ; nop dword ptr [rax] ; ret
0x0000000000190542 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x190558 ; xor eax, eax ; ret
0x0000000000190541 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x190559 ; xor eax, eax ; ret
0x0000000000190462 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x19055a ; ret
0x0000000000190461 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x19055b ; ret
0x000000000018fd11 : cld ; cmp eax, ecx ; jne 0x18ff2b ; xor eax, eax ; ret
0x000000000018fd10 : cld ; cmp eax, ecx ; jne 0x18ff2c ; xor eax, eax ; ret
0x00000000000eaf6b : cld ; cmp eax, r12d ; jg 0xeaf67 ; jmp 0xeaf44
0x000000000018d0f3 : cld ; cmp ecx, dword ptr [rdi - 4] ; jne 0x18d332 ; xor eax, eax ; ret
0x000000000018bac6 : cld ; cmp ecx, eax ; jne 0x18c4ea ; xor eax, eax ; ret
0x000000000018bac5 : cld ; cmp ecx, eax ; jne 0x18c4eb ; xor eax, eax ; ret
0x000000000010f18b : cld ; dec dword ptr [rax - 0x77] ; ret
0x00000000001484aa : cld ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x0000000000148049 : cld ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x0000000000194d09 : cld ; dec dword ptr [rcx - 0x75] ; jge 0x194d29 ; add rdi, rbp ; call r12
0x00000000000f0546 : cld ; dec dword ptr [rcx] ; ret 0x5189
0x00000000000fd9e1 : cld ; dec dword ptr [rcx] ; retf 0x5089
0x000000000016b940 : cld ; fild word ptr [rax + rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000042c17 : cld ; fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x00000000000ba736 : cld ; inc dword ptr [rbx] ; div ecx ; mov eax, eax ; ret
0x00000000000ba66b : cld ; inc dword ptr [rbx] ; ret
0x000000000013c164 : cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret 0x149
0x00000000000293e5 : cld ; jae 0x29464 ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; mov byte ptr [rcx + 0xf], 0x95 ; ret
0x0000000000108d2d : cld ; jge 0x108d49 ; test bl, bh ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf 0x1f0f
0x000000000018d0f6 : cld ; jne 0x18d32f ; xor eax, eax ; ret
0x000000000018d0f5 : cld ; jne 0x18d330 ; xor eax, eax ; ret
0x0000000000190545 : cld ; jne 0x190555 ; xor eax, eax ; ret
0x0000000000190544 : cld ; jne 0x190556 ; xor eax, eax ; ret
0x0000000000190465 : cld ; jne 0x190557 ; ret
0x0000000000190464 : cld ; jne 0x190558 ; ret
0x0000000000188cbd : cld ; lea rax, [rdi + r8] ; vzeroupper ; ret
0x00000000001873dd : cld ; mov byte ptr [rdi + r8], 0 ; vzeroupper ; ret
0x0000000000165ab2 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000165cb5 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000165eb5 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001660b5 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000187f86 : cld ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + r8 - 4], edx ; vzeroupper ; ret
0x00000000000ba556 : cld ; mov dword ptr [rdi], ecx ; ret
0x00000000001895f8 : cld ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x0000000000043403 : cld ; mov dword ptr [rdi], edx ; ret
0x000000000018d4be : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000000ba128 : cld ; mov dword ptr [rdi], esi ; ret
0x00000000000cdb0e : cld ; mov dword ptr [rsi + rcx], edx ; test edx, edx ; jne 0xcdb0f ; ret
0x00000000000cdb0e : cld ; mov dword ptr [rsi + rcx], edx ; test edx, edx ; jne 0xcdb10 ; ret
0x00000000000ba122 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x0000000000155bce : cld ; mov qword ptr [rdi + 0x18], rax ; mov eax, 1 ; ret
0x00000000001654ea : cld ; mov qword ptr [rdi - 0x11], r11 ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001656ca : cld ; mov qword ptr [rdi - 0x12], r11 ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001658aa : cld ; mov qword ptr [rdi - 0x13], r11 ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000165a8a : cld ; mov qword ptr [rdi - 0x14], r11 ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001656e6 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016ad76 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001658c6 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016acf6 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000165aa6 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016ac76 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000165506 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016adf6 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000043222 : cld ; movd xmm0, dword ptr [rsp - 4] ; ret
0x000000000004323d : cld ; movss dword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x00000000000433fd : cld ; movss xmm0, dword ptr [rsp - 4] ; mov dword ptr [rdi], edx ; ret
0x00000000000432ed : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000001141c4 : cld ; or al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000d1660 : cld ; push qword ptr [rcx] ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; retf 0xfffc
0x00000000000bb520 : cld ; pushfq ; idiv bh ; mov rax, rbx ; pop rbx ; ret
0x0000000000043228 : cld ; ret
0x0000000000029af0 : cld ; retf
0x000000000003d3c0 : cld ; retf 0xffff
0x00000000000441c4 : cld ; sbb dword ptr [rax], eax ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000bb215 : cld ; test eax, eax ; jne 0xbb22f ; mov rax, rdi ; ret
0x0000000000187f8d : cld ; vzeroupper ; ret
0x00000000000c5008 : cld ; xor ecx, dword ptr [rdi] ; add byte ptr [rax + 0x21], cl ; ret 0x8948
0x00000000000481ed : cli ; adc byte ptr [rcx], ch ; ret 0xc269
0x0000000000145384 : cli ; adc ch, byte ptr [rcx] ; retf 0xc8d
0x00000000000cf8d7 : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x148
0x00000000001697b7 : cli ; add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000010c283 : cli ; add al, 0x74 ; or dword ptr [rax + 0x1c], edi ; syscall
0x0000000000111571 : cli ; add al, 0x77 ; or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x00000000000cfb38 : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000000873e9 : cli ; add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x00000000000d7672 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000d76ca : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000018db9e : cli ; add dh, byte ptr [rdx + 8] ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00000000000a430e : cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4006
0x00000000000f49ca : cli ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; retf 0x8b48
0x000000000013b371 : cli ; add dword ptr [rbp - 0x55], esi ; jmp 0x13b33e
0x000000000013b3f9 : cli ; add dword ptr [rbp - 0x71], esi ; mov eax, 0xffffffff ; ret
0x00000000000ecaa4 : cli ; add dword ptr [rcx], ebx ; rol byte ptr [rbx - 0x3f7cfd20], 8 ; ret
0x00000000000ba541 : cli ; add dword ptr [rdi + 0x15], esi ; jb 0xba551 ; mov byte ptr [rdi], cl ; ret
0x00000000000ba102 : cli ; add dword ptr [rdi + 0x26], esi ; jb 0xba118 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000001895cf : cli ; add dword ptr [rdi + 0x2c], esi ; jb 0x1895e2 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000018e467 : cli ; add dword ptr [rdi + 0x3a], esi ; jb 0x18e47a ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000001890e2 : cli ; add dword ptr [rdi + 0x3b], esi ; jb 0x1890f8 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000018de42 : cli ; add dword ptr [rdi + 0x53], esi ; jb 0x18de58 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000051ef1 : cli ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x2041
0x000000000018dbab : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000018d4dc : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000cefab : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x0000000000140a1d : cli ; add ecx, dword ptr [rax + 0xf] ; ret 0xdb31
0x00000000000c91ee : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x00000000000c9244 : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x0000000000115cf0 : cli ; and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rax - 1], 0 ; ret
0x0000000000116421 : cli ; and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x00000000000468d0 : cli ; call 0x45387
0x00000000000a08ae : cli ; cmp eax, 0xba ; add byte ptr [rax + 0xf], cl ; ret 0xc3c3
0x0000000000083ca8 : cli ; dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000007cc79 : cli ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e0da7 : cli ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000007c56a : cli ; dec dword ptr [rax - 0x77] ; ret 0x86e9
0x000000000007b0f5 : cli ; dec dword ptr [rax - 0x77] ; ret 0xb848
0x000000000007a541 : cli ; dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; retf
0x0000000000081a37 : cli ; dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x000000000007fc63 : cli ; dec dword ptr [rcx - 0x77] ; ret 0x8548
0x00000000000e7754 : cli ; dec dword ptr [rdi] ; xchg eax, esp ; ret
0x00000000000e349c : cli ; inc dword ptr [rax] ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000ba63f : cli ; inc dword ptr [rax] ; add byte ptr [rax], al ; cmove rax, rcx ; ret
0x000000000011e177 : cli ; je 0x11e1bf ; ret
0x0000000000044e75 : cli ; je 0x44e89 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000063aa3 : cli ; je 0x63acf ; mov eax, 0xffffffff ; ret
0x0000000000186b7b : cli ; jg 0x186ba1 ; vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3 ; vzeroupper ; ret
0x000000000018735b : cli ; jg 0x187381 ; vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3 ; vzeroupper ; ret
0x000000000018791b : cli ; jg 0x187941 ; vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3 ; vzeroupper ; ret
0x00000000001890f9 : cli ; jg 0x18910c ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000001895e2 : cli ; jg 0x1895f2 ; vzeroupper ; ret
0x000000000018d497 : cli ; jg 0x18d4aa ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000018db76 : cli ; jg 0x18db88 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000018de71 : cli ; jg 0x18de84 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000018e488 : cli ; jg 0x18e498 ; vzeroupper ; ret
0x00000000000a279d : cli ; jg 0xa27b9 ; mov gs, edx ; add al, byte ptr [rax] ; add byte ptr [rcx - 9], al ; ret 0xf800
0x000000000004179b : cli ; jmp rdx
0x00000000000e371a : cli ; jne 0xe3797 ; add byte ptr [rax], al ; setne al ; ret
0x000000000015fbeb : cli ; jnp 0x15fc01 ; xchg eax, esp ; ret 0xb60f
0x000000000015fd0b : cli ; jnp 0x15fd21 ; xchg eax, esp ; ret 0xb60f
0x00000000000e5aeb : cli ; jnp 0xe5b01 ; xchg eax, esp ; ret 0xb60f
0x00000000000e5c0b : cli ; jnp 0xe5c21 ; xchg eax, esp ; ret 0xb60f
0x00000000000a70fc : cli ; mov byte ptr [rdi + 2], al ; mov rax, rdi ; ret
0x00000000000a702f : cli ; mov byte ptr [rdi + 2], dl ; ret
0x0000000000165eb8 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000432e9 : cli ; mov dword ptr [rsp - 4], edx ; movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000047c11 : cli ; mov eax, edi ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x0000000000165eb2 : cli ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000042f1c : cli ; mov qword ptr [rsp - 8], rdx ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000009b1a0 : cli ; mov rdi, r13 ; call rax
0x0000000000133c10 : cli ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00000000000c5242 : cli ; movzx eax, byte ptr [rdx + rax] ; cmp eax, 0xff ; je 0xc525b ; ret
0x00000000000aaef8 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x000000000017cb46 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001419d7 : cli ; or cl, byte ptr [rax + 0xf] ; retf 0x8548
0x0000000000140de5 : cli ; or cl, byte ptr [rax + 0xf] ; retf 0xb60f
0x0000000000104753 : cli ; or cl, byte ptr [rcx - 0x77] ; ret 0xf44
0x000000000005a50c : cli ; or dword ptr [rdi], ecx ; xchg dword ptr [rax], eax ; add eax, 0x63480000 ; ret 0x8d48
0x000000000009cf34 : cli ; or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x3145
0x000000000009cede : cli ; or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xf631
0x000000000013e97c : cli ; or dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x841
0x000000000004829c : cli ; push qword ptr [rbp - 0x4c] ; xor eax, eax ; ret
0x0000000000082bd4 : cli ; push qword ptr [rcx + rdi + 0x48] ; mov eax, edx ; pop rbx ; ret
0x00000000000f7ec3 : cli ; push qword ptr [rdi + rax + 1] ; retf 0x4801
0x00000000000e36ed : cli ; push rsp ; push rbx ; setne al ; ret
0x00000000000ba462 : cli ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000000339bf : cli ; ret
0x000000000012b7cf : cli ; setae al ; ret
0x0000000000160dcc : cli ; test eax, eax ; jne 0x160df0 ; mov eax, 0x27 ; syscall
0x00000000000b0289 : cli ; test rdx, rdx ; je 0xb02a9 ; bsf rax, rdx ; ret
0x00000000000b0289 : cli ; test rdx, rdx ; je 0xb02aa ; bsf rax, rdx ; ret
0x00000000000b0458 : cli ; test rdx, rdx ; je 0xb0489 ; bsf rax, rdx ; ret
0x00000000000b0458 : cli ; test rdx, rdx ; je 0xb048a ; bsf rax, rdx ; ret
0x000000000012d3a3 : clts ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000002c472 : cmc ; add al, 0 ; add bh, dh ; ret 0
0x0000000000169c37 : cmc ; add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000001810b8 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000ce471 : cmc ; and ch, 0xf ; je 0xce49a ; add rax, 2 ; ret
0x0000000000147e0e : cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000013a452 : cmc ; je 0x13a44c ; pop rbx ; ret
0x0000000000106a53 : cmc ; mov cs, word ptr [rdx] ; add al, ch ; je 0x106aca ; stc ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000016acfa : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016573e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016acf3 : cmc ; mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001658c3 : cmc ; mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000008d54d : cmc ; mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000018fa53 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000018fa57 : cmc ; sub eax, edx ; ret
0x0000000000111888 : cmova eax, edx ; ret
0x0000000000092f99 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000087ae0 : cmovae eax, dword ptr [rdx + 8] ; sub rax, qword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x0000000000092f98 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000005c04d : cmovb eax, edi ; ret
0x000000000011f68c : cmovb eax, edx ; ret
0x000000000005c04c : cmovb rax, rdi ; ret
0x000000000011f68b : cmovb rax, rdx ; ret
0x000000000012c7be : cmovbe eax, edx ; add rsp, 0x20 ; pop rbx ; ret
0x000000000009cfbd : cmovbe eax, edx ; ret
0x000000000012b7c8 : cmovbe edx, eax ; xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x0000000000101938 : cmovbe esi, ecx ; mov eax, ecx ; syscall
0x000000000012b7c7 : cmovbe rdx, rax ; xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x0000000000101937 : cmovbe rsi, r9 ; mov eax, ecx ; syscall
0x00000000000a28e2 : cmove eax, ebp ; jmp 0xa28ad
0x000000000011474a : cmove eax, ebx ; pop rbx ; ret
0x00000000000ba645 : cmove eax, ecx ; ret
0x000000000009e478 : cmove eax, edx ; add eax, 1 ; ret
0x00000000000cf751 : cmove eax, edx ; add rsp, 0x28 ; ret
0x000000000009aaa3 : cmove eax, edx ; add rsp, 8 ; ret
0x000000000004953f : cmove eax, edx ; jmp 0x4955a
0x000000000012c914 : cmove eax, edx ; mov qword ptr [rip + 0xbc352], rax ; pop rbp ; ret
0x0000000000034c9b : cmove eax, edx ; ret
0x0000000000048014 : cmove ebx, eax ; mov rax, rbx ; pop rbx ; ret
0x00000000000bb579 : cmove ebx, edx ; mov rax, rbx ; pop rbx ; ret
0x00000000000eae58 : cmove ecx, dword ptr [rcx - 0x3fcecb9d] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a22c3 : cmove ecx, ecx ; jmp 0xa2296
0x00000000000c6602 : cmove ecx, edi ; jmp 0xc65d5
0x000000000006def1 : cmove ecx, edx ; jmp 0x6df0e
0x000000000011b68b : cmove edx, eax ; mov byte ptr [rdx], 0 ; mov rax, rbx ; pop rbx ; ret
0x000000000008c2ac : cmove edx, ecx ; mov dword ptr [rdi], edx ; ret
0x00000000000a22c2 : cmove r9, rcx ; jmp 0xa2297
0x000000000006def0 : cmove r9, rdx ; jmp 0x6df0f
0x00000000000a28e1 : cmove rax, r13 ; jmp 0xa28ae
0x0000000000114749 : cmove rax, rbx ; pop rbx ; ret
0x00000000000ba644 : cmove rax, rcx ; ret
0x000000000009e489 : cmove rax, rdx ; add eax, 1 ; ret
0x00000000000cf750 : cmove rax, rdx ; add rsp, 0x28 ; ret
0x000000000009aaa2 : cmove rax, rdx ; add rsp, 8 ; ret
0x000000000004953e : cmove rax, rdx ; jmp 0x4955b
0x000000000012c913 : cmove rax, rdx ; mov qword ptr [rip + 0xbc352], rax ; pop rbp ; ret
0x0000000000034c9a : cmove rax, rdx ; ret
0x0000000000048013 : cmove rbx, rax ; mov rax, rbx ; pop rbx ; ret
0x00000000000bb578 : cmove rbx, rdx ; mov rax, rbx ; pop rbx ; ret
0x00000000000c6601 : cmove rcx, rdi ; jmp 0xc65d6
0x000000000011b68a : cmove rdx, rax ; mov byte ptr [rdx], 0 ; mov rax, rbx ; pop rbx ; ret
0x000000000008631b : cmovg eax, ecx ; test rdx, rdx ; jne 0x86318 ; ret
0x000000000009087b : cmovg eax, ecx ; test rdx, rdx ; jne 0x90878 ; ret
0x00000000000cdaea : cmovg eax, edx ; ret
0x000000000008631a : cmovg rax, rcx ; test rdx, rdx ; jne 0x86319 ; ret
0x000000000009087a : cmovg rax, rcx ; test rdx, rdx ; jne 0x90879 ; ret
0x00000000001496f8 : cmovl ecx, dword ptr [rcx] ; ror byte ptr [rcx - 0x77], cl ; ret 0xc149
0x00000000000951c0 : cmovne eax, dword ptr [rbp - 0x217af037] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; retf
0x00000000000898b1 : cmovne eax, ecx ; ret
0x00000000000a009f : cmovne eax, edi ; ret
0x000000000015aad6 : cmovne eax, edx ; add rsp, 8 ; ret
0x00000000000863f2 : cmovne eax, edx ; mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000ecb88 : cmovne eax, edx ; pop rbx ; ret
0x000000000009a20d : cmovne eax, edx ; ret
0x0000000000185b24 : cmovne eax, edx ; vzeroupper ; ret
0x0000000000127bf3 : cmovne eax, esi ; ret
0x00000000000e1292 : cmovne edx, eax ; mov rax, rdx ; ret
0x00000000000b00a5 : cmovne esi, edx ; bsr rsi, rsi ; lea rax, [rcx + rsi] ; ret
0x00000000000898b0 : cmovne rax, rcx ; ret
0x00000000000a009e : cmovne rax, rdi ; ret
0x000000000015aad5 : cmovne rax, rdx ; add rsp, 8 ; ret
0x000000000009a20c : cmovne rax, rdx ; ret
0x0000000000185b23 : cmovne rax, rdx ; vzeroupper ; ret
0x00000000000e1291 : cmovne rdx, rax ; mov rax, rdx ; ret
0x00000000000b00a4 : cmovne rsi, rdx ; bsr rsi, rsi ; lea rax, [rcx + rsi] ; ret
0x000000000012622d : cmovns eax, dword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000000a38a2 : cmovns eax, dword ptr [rbx + 0x394c01c1] ; retf 0xed75
0x000000000007d5fc : cmovns eax, dword ptr [rbx - 0x76b20f20] ; ret 0x8d48
0x0000000000115691 : cmovns eax, dword ptr [rbx - 0x76b30f1f] ; retf 0x2feb
0x0000000000032f55 : cmovns eax, dword ptr [rcx] ; ror byte ptr [rax - 0x77], 1 ; ret 0x8349
0x0000000000113228 : cmovns eax, edx ; ret
0x000000000012622c : cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000000aa548 : cmovs eax, dword ptr [rbx + 0x148f0e7] ; retf 0x8348
0x00000000000e4247 : cmovs eax, dword ptr [rbx + 0x394810c2] ; ret
0x0000000000150f87 : cmovs eax, dword ptr [rbx + 0x5d5b28c4] ; ret
0x0000000000196dac : cmovs eax, dword ptr [rbx - 0x3ca4ef3c] ; nop dword ptr [rax + rax] ; ret
0x0000000000115451 : cmovs eax, dword ptr [rbx - 0x76b70f20] ; mov r8b, 0x48 ; mov edx, eax ; jmp 0x115494
0x0000000000029e3c : cmovs eax, edx ; ret
0x000000000008d320 : cmovs ecx, dword ptr [rbp - 0x76b7fe8f] ; jb 0x8d35d ; mov byte ptr [rcx], dil ; ret
0x000000000008d410 : cmovs ecx, dword ptr [rbp - 0x76b7fe8f] ; jb 0x8d44d ; mov byte ptr [rcx], dil ; ret
0x000000000008d380 : cmovs ecx, dword ptr [rbp - 0x76b7feb0] ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000b7525 : cmovs ecx, dword ptr [rbp - 0x7af0f081] ; and byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x00000000000b5e41 : cmovs ecx, dword ptr [rbp - 0x7af0f081] ; in al, 6 ; add byte ptr [rax], al ; ret
0x00000000000b95f9 : cmovs ecx, dword ptr [rcx - 0x12cff8a9] ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000b95d9 : cmovs ecx, dword ptr [rcx - 0x12cff9a9] ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000b95b9 : cmovs ecx, dword ptr [rcx - 0x12cffaa9] ; mov byte ptr [rdi + 0xd], ch ; ret
0x0000000000091c28 : cmovs edi, dword ptr [rcx] ; int1 ; jne 0x91c29 ; lea eax, [rdx + rdi] ; ret
0x00000000000ba5ee : cmovs esp, dword ptr [rbx + 0xc] ; xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x00000000000ba680 : cmovs esp, dword ptr [rbx + 4] ; xchg eax, esi ; add rax, rsi ; jmp rax
0x0000000000189e4b : cmp ah, byte ptr [rax] ; jne 0x189c9c ; vzeroupper ; ret
0x00000000001817b8 : cmp ah, byte ptr [rax] ; sub eax, edx ; vzeroupper ; ret
0x0000000000181404 : cmp ah, byte ptr [rbx + 0x27] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x000000000018153f : cmp ah, byte ptr [rbx - 0x25] ; cmp ch, byte ptr [rcx] ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000181504 : cmp ah, byte ptr [rbx - 0x2e] ; cmp bh, byte ptr [rcx] ; retf 0x8e0f
0x0000000000181240 : cmp ah, byte ptr [rbx - 0x2e] ; cmp cl, byte ptr [rax - 0x7d] ; ret 0x2910
0x000000000017e5aa : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017f10a : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017e8ea : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000017e0ca : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000017ec2a : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017e40a : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017dbea : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000017edca : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000017df2a : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017e060 : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017ed60 : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017e880 : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017f0a0 : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017e3a0 : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000017dec0 : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017ebc0 : cmp ah, byte ptr [rbx - 0x3f] ; sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x0000000000156a08 : cmp al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000000000011db23 : cmp al, 0 ; add byte ptr [rax], al ; syscall
0x000000000004fafd : cmp al, 0x16 ; add al, ch ; retf
0x00000000000537b1 : cmp al, 0x19 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000028b33 : cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf4e9
0x00000000000a00f1 : cmp al, 0x24 ; add byte ptr [rdx + rdx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x0000000000151445 : cmp al, 0x24 ; call rax
0x0000000000044eb6 : cmp al, 0x24 ; mov eax, ecx ; syscall
0x000000000015d97c : cmp al, 0x24 ; mov rax, qword ptr [rax + 0x1b0] ; jmp rax
0x000000000014263e : cmp al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000011b667 : cmp al, 0x2f ; jne 0x11b6a7 ; mov rdx, rcx ; jmp 0x11b67c
0x00000000000d6aa8 : cmp al, 0x30 ; jne 0xd6a9c ; nop dword ptr [rax] ; mov r11d, eax ; jmp 0xd6a8c
0x00000000000e658c : cmp al, 0x3f ; jne 0xe6549 ; mov eax, 1 ; ret
0x00000000000e65a4 : cmp al, 0x3f ; jne 0xe656e ; mov eax, 1 ; ret
0x000000000015de97 : cmp al, 0x48 ; add esp, 0x38 ; ret
0x000000000015db31 : cmp al, 0x48 ; add esp, 0x58 ; ret
0x0000000000048bc3 : cmp al, 0x49 ; add eax, eax ; cmp r8, r9 ; jb 0x48bb0 ; xor eax, eax ; ret
0x000000000011a98c : cmp al, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000000fc3db : cmp al, 0x83 ; retf
0x0000000000111437 : cmp al, 0x85 ; ror byte ptr [rdi], 0x88 ; ret
0x00000000001081b4 : cmp al, 0x89 ; ret
0x0000000000148423 : cmp al, 0x8b ; or cl, byte ptr [rax - 0x7d] ; ret 0xf04
0x00000000000d0314 : cmp al, 0x8d ; je 0xd0354 ; inc dword ptr [rcx] ; ret 0xb70f
0x0000000000189e17 : cmp al, 0xa ; jne 0x189c9c ; vzeroupper ; ret
0x000000000018a29d : cmp al, 0xa ; jne 0x18a100 ; vzeroupper ; ret
0x00000000000f3d51 : cmp al, 0xb0 ; shl rdx, 2 ; xor esi, esi ; call 0x2522c
0x00000000000418a2 : cmp al, 0xba ; add rdi, r10 ; jmp rdi
0x000000000005adff : cmp al, 0xc7 ; call 0x57074
0x00000000001486c8 : cmp al, 0xcc ; in eax, dx ; dec dword ptr [rax - 0x77] ; ret
0x00000000000b709b : cmp al, 0xf ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000f150f : cmp al, 0xf3 ; dec dword ptr [rax - 0x77] ; ret
0x000000000009a860 : cmp al, 0xff ; adc byte ptr [rax], al ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000003166e : cmp al, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x000000000011afbd : cmp al, 0xff ; dec dword ptr [rax - 0x7f] ; ret
0x000000000004379e : cmp al, 0xff ; dec dword ptr [rdi] ; mov word ptr [rcx - 0x7f000000], gs ; sti ; push rax ; ret
0x0000000000063a79 : cmp al, 1 ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x00000000000fa440 : cmp al, 1 ; je 0xfa99c ; mov dword ptr [rsp], ebp ; jmp 0xfa41c
0x00000000001192e7 : cmp al, 2 ; add byte ptr [rax], al ; mov rdi, qword ptr [r14] ; call r12
0x000000000018d0d3 : cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000b5ff0 : cmp al, 5 ; add byte ptr [rax], al ; ret
0x0000000000165184 : cmp al, 5 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000011956c : cmp al, 7 ; add byte ptr [rax], al ; mov rdi, qword ptr [r15] ; call r12
0x0000000000028e46 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; call 0x25146
0x0000000000028e75 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; lea r12d, [r15 + 2] ; call 0x2514a
0x00000000000e18c2 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000107cbd : cmp al, byte ptr [rbx - 0x6af0fd05] ; ret
0x0000000000188ba2 : cmp al, byte ptr [rdx] ; add byte ptr [rax], al ; vzeroupper ; ret
0x000000000018ff16 : cmp al, byte ptr [rsi - 1] ; jne 0x18ff3c ; xor eax, eax ; ret
0x000000000018fdbe : cmp al, byte ptr [rsi - 1] ; jne 0x18ff40 ; xor eax, eax ; ret
0x0000000000039575 : cmp al, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000057a38 : cmp al, ch ; ret 0xffec
0x00000000000334ff : cmp al, ch ; retf
0x000000000018ff2f : cmp al, cl ; jne 0x18ff40 ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000000000aa7a6 : cmp al, dh ; ret
0x00000000000aa7a5 : cmp al, r14b ; ret
0x0000000000120906 : cmp ax, -1 ; je 0x12091e ; add eax, 1 ; mov word ptr [rdx], ax ; ret
0x0000000000042a96 : cmp bh, 0xff ; inc eax ; shr eax, 0x1f ; ret
0x0000000000127b7a : cmp bh, al ; mov eax, edx ; cmove eax, ecx ; ret
0x0000000000181507 : cmp bh, byte ptr [rcx] ; retf 0x8e0f
0x0000000000127bf1 : cmp bh, cl ; cmovne eax, esi ; ret
0x0000000000091882 : cmp bh, cl ; dec dword ptr [rax - 0x77] ; ret
0x000000000006f7f9 : cmp bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0x4804
0x0000000000118806 : cmp bl, byte ptr [rbx + 0x5d] ; ret
0x0000000000091adc : cmp bl, ch ; movabs dword ptr [0xffffffffc0c74890], eax ; ret
0x0000000000127824 : cmp bl, ch ; ret
0x00000000000cd9e6 : cmp byte ptr [r11], r15b ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x0000000000129110 : cmp byte ptr [r13 - 0x77], r9b ; sbb byte ptr gs:[rax - 0x77], cl ; ret 0x2b49
0x0000000000126326 : cmp byte ptr [r15], cl ; xchg eax, esp ; ret 0x2144
0x0000000000125ec8 : cmp byte ptr [r8 + 0x39], r9b ; ret
0x0000000000087f90 : cmp byte ptr [r8 - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x0000000000128c55 : cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b49
0x00000000000fe819 : cmp byte ptr [r8], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001480e0 : cmp byte ptr [r9], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax + 0x29] ; retf 0x2948
0x00000000000cf41e : cmp byte ptr [rax + 0x29], cl ; ret 0x348
0x0000000000083d8d : cmp byte ptr [rax + 0x39], cl ; ret
0x000000000008dc59 : cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000008db3f : cmp byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000a5b07 : cmp byte ptr [rax + 0x63], cl ; ret 0x8d41
0x0000000000145524 : cmp byte ptr [rax + 0xf], cl ; mov esi, 0xc0834808 ; add dword ptr [rax - 0x77], ecx ; retf 0x44f6
0x00000000000551f4 : cmp byte ptr [rax + 1], 0 ; jne 0x551f7 ; pop rbx ; ret
0x00000000000aa7e7 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x0000000000082f28 : cmp byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000001260ec : cmp byte ptr [rax - 0x3c41f0e8], cl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f691c : cmp byte ptr [rax - 0x73], cl ; jl 0xf694d ; and byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000002c90d : cmp byte ptr [rax - 0x75], cl ; je 0x2c942 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000002eb49 : cmp byte ptr [rax - 0x75], cl ; je 0x2eb7e ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000002fd73 : cmp byte ptr [rax - 0x75], cl ; je 0x2fda8 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000002a06c : cmp byte ptr [rax - 0x75], cl ; jl 0x2a0a0 ; xor byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000087f91 : cmp byte ptr [rax - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x00000000001196ac : cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call r12
0x0000000000073480 : cmp byte ptr [rax - 0x77], cl ; lea ecx, [rax - 0x17000006] ; ret
0x0000000000129b5a : cmp byte ptr [rax - 0x77], cl ; ret
0x000000000008d74b : cmp byte ptr [rax - 0x77], cl ; ret 0x1b8
0x0000000000128c56 : cmp byte ptr [rax - 0x77], cl ; ret 0x2b49
0x00000000000886ff : cmp byte ptr [rax - 0x77], cl ; retf 0x8545
0x000000000012954f : cmp byte ptr [rax - 0x77], r9b ; ret 0x2b49
0x00000000001459f5 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000014758e : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x000000000014c867 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x14c88b ; call rax
0x000000000014c866 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x14c88c ; call rax
0x0000000000152ac7 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x152aeb ; call rax
0x0000000000152ac6 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x152aec ; call rax
0x0000000000153220 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x153244 ; call rax
0x000000000015321f : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x153245 ; call rax
0x000000000014e95b : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x14e9d7 ; call rax
0x000000000014e95a : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x14e9d8 ; call rax
0x000000000014f3fb : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x14f467 ; call rax
0x000000000014f3fa : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x14f468 ; call rax
0x0000000000082d97 : cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x00000000000418e5 : cmp byte ptr [rax - 0x7d], cl ; ret
0x0000000000032bd9 : cmp byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000002bd54 : cmp byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000000880b1 : cmp byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xa3c
0x0000000000115ba2 : cmp byte ptr [rax - 1], bh ; ret
0x000000000017a0a8 : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000001817b3 : cmp byte ptr [rax], ah ; movzx edx, byte ptr [rdx + rdi + 0x20] ; sub eax, edx ; vzeroupper ; ret
0x00000000000aa7d6 : cmp byte ptr [rax], ah ; ret
0x00000000000e1708 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000091063 : cmp byte ptr [rax], al ; je 0x91074 ; ret
0x00000000000fe81a : cmp byte ptr [rax], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000afae0 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x00000000000aaca6 : cmp byte ptr [rax], dh ; ret
0x00000000000a6fd8 : cmp byte ptr [rax], dl ; add byte ptr [rcx + 0xc6349c1], cl ; mov dword ptr [rcx + rax - 0x37], ecx ; jmp rcx
0x00000000000aa7c6 : cmp byte ptr [rax], dl ; ret
0x00000000000aa7c5 : cmp byte ptr [rax], r10b ; ret
0x00000000000aa7d5 : cmp byte ptr [rax], r12b ; ret
0x00000000000aaca5 : cmp byte ptr [rax], r14b ; ret
0x00000000000afadf : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000cd9ea : cmp byte ptr [rbp + 0x13], dh ; ret
0x00000000000cd9e9 : cmp byte ptr [rbp + 0x13], r14b ; ret
0x000000000011b7ae : cmp byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000000ef190 : cmp byte ptr [rbp - 0x77], al ; ret 0x418d
0x0000000000129743 : cmp byte ptr [rbp - 0x77], cl ; or byte ptr [rax - 0x77], cl ; ret 0x2b49
0x0000000000129111 : cmp byte ptr [rbp - 0x77], cl ; sbb byte ptr gs:[rax - 0x77], cl ; ret 0x2b49
0x00000000000ef18f : cmp byte ptr [rbp - 0x77], r8b ; ret 0x418d
0x0000000000129742 : cmp byte ptr [rbp - 0x77], r9b ; or byte ptr [rax - 0x77], cl ; ret 0x2b49
0x0000000000028a4b : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000288e4 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000052a95 : cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000001811a4 : cmp byte ptr [rbx + 0xc8b0001], al ; mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x00000000000cd9e7 : cmp byte ptr [rbx], bh ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x000000000015717d : cmp byte ptr [rcx + 0x39], cl ; ret
0x00000000000ef1cb : cmp byte ptr [rcx + 0x63], cl ; ret 0x4c6
0x00000000000ef1ca : cmp byte ptr [rcx + 0x63], r9b ; ret 0x4c6
0x000000000014973f : cmp byte ptr [rcx + 9], cl ; ror dword ptr [rax - 0x77], cl ; retf 0xc148
0x000000000008a624 : cmp byte ptr [rcx + rcx*4 - 0x30], al ; ret
0x0000000000096c86 : cmp byte ptr [rcx - 0x7d], al ; ret 0x4d01
0x000000000002c216 : cmp byte ptr [rcx - 0xa], al ; ret 0x7501
0x000000000011fab6 : cmp byte ptr [rcx], 0 ; je 0x11fac5 ; ret
0x000000000009cd6d : cmp byte ptr [rcx], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000001480e1 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax + 0x29] ; retf 0x2948
0x000000000017a0a9 : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x00000000000b7414 : cmp byte ptr [rcx], cl ; add byte ptr [rax], al ; ret
0x00000000001260be : cmp byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000006d054 : cmp byte ptr [rcx], dh ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x00000000000d056b : cmp byte ptr [rcx], dl ; add byte ptr [rdi], cl ; sub dword ptr [rax], eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e1834 : cmp byte ptr [rcx], dl ; sti ; dec dword ptr [rax - 0x77] ; ret
0x00000000000431b7 : cmp byte ptr [rdi + 0x2d], 0 ; add byte ptr [rax + 0x1fe8c17f], al ; ret
0x0000000000047c98 : cmp byte ptr [rdi], 0 ; jne 0x47ca6 ; pop rbx ; ret
0x0000000000140c2f : cmp byte ptr [rdi], cl ; mov bh, 0x40 ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x00000000000f0eed : cmp byte ptr [rdi], cl ; test byte ptr [rcx + rax], ah ; add dh, dh ; ret
0x00000000000c2ba7 : cmp byte ptr [rdi], cl ; test ebx, edx ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x7af08f08], al ; retf 1
0x000000000014a990 : cmp byte ptr [rdi], cl ; xchg eax, edx ; ret 0xc75
0x0000000000126327 : cmp byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2144
0x000000000018b97d : cmp byte ptr [rdi], dl ; ret
0x000000000018c490 : cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000018c479 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000018c462 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000018af1e : cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000b6a18 : cmp byte ptr [rdx + 0xf], al ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000085f08 : cmp byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000339b9 : cmp byte ptr [rsi + 0x13], dh ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000114fe6 : cmp byte ptr [rsi], 0 ; lea rdx, [rsi + 1] ; jne 0x114fc9 ; ret
0x00000000000e3690 : cmp byte ptr [rsi], ah ; mov eax, 0x20 ; cmovne rax, rdx ; ret
0x00000000000e3540 : cmp byte ptr [rsi], ah ; mov eax, 0x7f ; cmovne rax, rdx ; ret
0x00000000000ecb99 : cmp byte ptr [rsi], cl ; je 0xecb36 ; ret
0x0000000000181542 : cmp ch, byte ptr [rcx] ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000065594 : cmp cl, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000133b37 : cmp cl, 5 ; jbe 0x133ab2 ; xor eax, eax ; pop rbx ; ret
0x00000000000f7766 : cmp cl, al ; jmp 0x66da007a
0x000000000002bfac : cmp cl, byte ptr [rax + 0x39] ; retf 0x8d0f
0x000000000018132d : cmp cl, byte ptr [rax + 0x63] ; leave ; lea rax, [rdx + rcx] ; sub rax, rdi ; ret
0x0000000000181243 : cmp cl, byte ptr [rax - 0x7d] ; ret 0x2910
0x0000000000025fd8 : cmp cl, byte ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf
0x000000000002c9d8 : cmp cl, byte ptr [rbp + 0x39] ; ret
0x00000000000b7272 : cmp cl, byte ptr [rdi] ; add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000163ee1 : cmp cl, byte ptr [rdi] ; retf 0x6601
0x0000000000164031 : cmp cl, byte ptr [rdi] ; retf 0x6602
0x0000000000164181 : cmp cl, byte ptr [rdi] ; retf 0x6603
0x00000000001642d1 : cmp cl, byte ptr [rdi] ; retf 0x6604
0x0000000000164421 : cmp cl, byte ptr [rdi] ; retf 0x6605
0x0000000000164571 : cmp cl, byte ptr [rdi] ; retf 0x6606
0x00000000001646c1 : cmp cl, byte ptr [rdi] ; retf 0x6607
0x0000000000164811 : cmp cl, byte ptr [rdi] ; retf 0x6608
0x0000000000164961 : cmp cl, byte ptr [rdi] ; retf 0x6609
0x0000000000164ab1 : cmp cl, byte ptr [rdi] ; retf 0x660a
0x0000000000164c01 : cmp cl, byte ptr [rdi] ; retf 0x660b
0x0000000000164d51 : cmp cl, byte ptr [rdi] ; retf 0x660c
0x0000000000164ea1 : cmp cl, byte ptr [rdi] ; retf 0x660d
0x0000000000164ff1 : cmp cl, byte ptr [rdi] ; retf 0x660e
0x0000000000165141 : cmp cl, byte ptr [rdi] ; retf 0x660f
0x000000000016911a : cmp cl, byte ptr [rdi] ; retf 0xf01
0x000000000016929a : cmp cl, byte ptr [rdi] ; retf 0xf02
0x000000000016941a : cmp cl, byte ptr [rdi] ; retf 0xf03
0x000000000016959a : cmp cl, byte ptr [rdi] ; retf 0xf04
0x000000000016971a : cmp cl, byte ptr [rdi] ; retf 0xf05
0x000000000016989a : cmp cl, byte ptr [rdi] ; retf 0xf06
0x0000000000169a1a : cmp cl, byte ptr [rdi] ; retf 0xf07
0x0000000000169b9a : cmp cl, byte ptr [rdi] ; retf 0xf08
0x0000000000169d1a : cmp cl, byte ptr [rdi] ; retf 0xf09
0x0000000000169e9a : cmp cl, byte ptr [rdi] ; retf 0xf0a
0x000000000016a01a : cmp cl, byte ptr [rdi] ; retf 0xf0b
0x000000000016a19a : cmp cl, byte ptr [rdi] ; retf 0xf0c
0x000000000016a31a : cmp cl, byte ptr [rdi] ; retf 0xf0d
0x000000000016a49a : cmp cl, byte ptr [rdi] ; retf 0xf0e
0x000000000016a61a : cmp cl, byte ptr [rdi] ; retf 0xf0f
0x00000000000e0f45 : cmp cl, byte ptr [rdi] ; test eax, edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000000fcc32 : cmp cl, ch ; retf
0x00000000000fcd33 : cmp cl, ch ; retf 0xfffa
0x00000000000a6179 : cmp cl, dl ; jb 0xa60df ; mov rdx, rax ; jmp 0xa612c
0x00000000000f5879 : cmp cl, dl ; jmp 0x3b55230d
0x000000000005867d : cmp cx, 0x7fff ; jne 0x58644 ; mov eax, 1 ; ret
0x000000000012687c : cmp dh, al ; add cl, byte ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001268d1 : cmp dh, al ; add dword ptr [rax], esp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000127bb7 : cmp dh, al ; mov eax, edx ; cmove eax, ecx ; ret
0x0000000000185b21 : cmp dh, byte ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x0000000000047c95 : cmp dh, byte ptr [rcx] ; rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x000000000018e46a : cmp dh, byte ptr [rdx + 2] ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000127c28 : cmp dh, cl ; cmovne eax, edx ; ret
0x00000000000a4681 : cmp dh, cl ; jb 0xa45cf ; mov rdx, rax ; jmp 0xa463b
0x000000000002e9c3 : cmp dh, dh ; ret
0x00000000000b07d5 : cmp dh, dh ; ret 0x7501
0x00000000000f6ae5 : cmp dh, dh ; ret 0xf08
0x0000000000127b79 : cmp dil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x0000000000127bf0 : cmp dil, cl ; cmovne eax, esi ; ret
0x0000000000115cef : cmp dl, 0x20 ; je 0x115cea ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000000a08ad : cmp dl, 0x3d ; mov edx, 0 ; cmovne rax, rdx ; ret
0x00000000000712b7 : cmp dl, 0xff ; push qword ptr [rcx] ; shr cl, 0xdc ; retf
0x00000000001890e1 : cmp dl, 1 ; ja 0x18912d ; jb 0x1890f9 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000001895ce : cmp dl, 1 ; ja 0x18960b ; jb 0x1895e3 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000018de41 : cmp dl, 1 ; ja 0x18dea5 ; jb 0x18de59 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000018e466 : cmp dl, 1 ; ja 0x18e4b1 ; jb 0x18e47b ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000000ba101 : cmp dl, 1 ; ja 0xba138 ; jb 0xba119 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000ba540 : cmp dl, 1 ; ja 0xba563 ; jb 0xba552 ; mov byte ptr [rdi], cl ; ret
0x000000000018d4db : cmp dl, 1 ; jb 0x18d4ed ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000018dbaa : cmp dl, 1 ; jb 0x18dbb8 ; mov byte ptr [rdi], cl ; ret
0x000000000018db9d : cmp dl, 2 ; jb 0x18dbb6 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000009cf7c : cmp dl, 2 ; je 0x9cf9b ; cmp dl, 3 ; je 0x9cf9c ; movsx eax, dl ; ret
0x000000000009cf81 : cmp dl, 3 ; je 0x9cf97 ; movsx eax, dl ; ret
0x000000000009cf81 : cmp dl, 3 ; je 0x9cf98 ; movsx eax, dl ; ret
0x000000000018db92 : cmp dl, 4 ; jb 0x18dba7 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000009a285 : cmp dl, al ; jne 0x9a278 ; sub rax, 0x10 ; ret
0x0000000000081a36 : cmp dl, bh ; dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x0000000000083ad6 : cmp dl, byte ptr [rsi] ; add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf
0x00000000000f08b3 : cmp dl, cl ; call 0x3b50cb47
0x0000000000101964 : cmp dl, dh ; push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or bl, al ; nop ; ret
0x000000000009a284 : cmp dl, r8b ; jne 0x9a279 ; sub rax, 0x10 ; ret
0x00000000000811d7 : cmp dword ptr [r8 - 0x7d], ecx ; ret 0x8908
0x00000000000869b8 : cmp dword ptr [rax + 0x30], 0 ; je 0x869c6 ; ret
0x00000000000768e6 : cmp dword ptr [rax + 0x63], ecx ; ret
0x0000000000163437 : cmp dword ptr [rax + rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000017ca07 : cmp dword ptr [rax + rax], ecx ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000811d8 : cmp dword ptr [rax - 0x7d], ecx ; ret 0x8908
0x00000000000e368f : cmp dword ptr [rax], 0x26 ; mov eax, 0x20 ; cmovne rax, rdx ; ret
0x00000000000e353f : cmp dword ptr [rax], 0x26 ; mov eax, 0x7f ; cmovne rax, rdx ; ret
0x000000000011fab7 : cmp dword ptr [rax], eax ; je 0x11fac4 ; ret
0x0000000000151eb6 : cmp dword ptr [rax], ebp ; je 0x151ec8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000811d1 : cmp dword ptr [rbp + 0xf48ff47], ecx ; cmp dword ptr [r8 - 0x7d], ecx ; ret 0x8908
0x0000000000044e72 : cmp dword ptr [rbp + 8], -6 ; je 0x44e8c ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000011ee93 : cmp dword ptr [rbp - 0x76befff4], esi ; retf 0x8b
0x00000000000a0c2c : cmp dword ptr [rbp - 0x7c], eax ; rol byte ptr [rcx + 0xf], 0x95 ; ret 0x3841
0x000000000010624e : cmp dword ptr [rbp], ebx ; je 0x1062b2 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001484f2 : cmp dword ptr [rbx + 0x50], ecx ; jbe 0x148541 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016a838 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000000482b3 : cmp dword ptr [rcx + 0x39], ecx ; retf 0x850f
0x0000000000048212 : cmp dword ptr [rcx + 0x39], ecx ; retf 0xc875
0x000000000005526d : cmp dword ptr [rcx - 0x76b7ffeb], ebp ; ret
0x0000000000092f95 : cmp dword ptr [rdi + 0x10], eax ; cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000008c194 : cmp dword ptr [rdi + 0x18], 0 ; setne al ; ret
0x0000000000155f3e : cmp dword ptr [rdi + 0x20], esi ; jbe 0x155f58 ; add dword ptr [rdi + 0x28], esi ; ret
0x0000000000091061 : cmp dword ptr [rdi + 0x38], 0 ; je 0x91076 ; ret
0x00000000000840f1 : cmp dword ptr [rdi + 0x48], 0 ; je 0x840b8 ; call 0x90b88
0x00000000000cd88b : cmp dword ptr [rdi + 0xc], ecx ; jne 0xcda0b ; xor eax, eax ; ret
0x0000000000101a08 : cmp dword ptr [rdi + 4], edx ; ja 0x101a1e ; setne al ; movzx eax, al ; ret
0x000000000009cb7b : cmp dword ptr [rdi + 8], esi ; jb 0x9cb90 ; mov qword ptr [rdi], rsi ; ret
0x00000000000c8687 : cmp dword ptr [rdi + rcx], edx ; xchg eax, ebx ; ret 0x3948
0x000000000007b0f3 : cmp dword ptr [rdi - 0x76b70006], ebx ; ret 0xb848
0x000000000012b768 : cmp dword ptr [rdi], 0 ; je 0x12b77d ; ret
0x00000000000c50d9 : cmp dword ptr [rdi], ecx ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000339b7 : cmp dword ptr [rdx + 0x38], edi ; jbe 0x339d9 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000000898ae : cmp dword ptr [rdx + 0x48], eax ; cmovne eax, ecx ; ret
0x000000000002643b : cmp dword ptr [rdx + 0xd8], eax ; jne 0x2640f ; ret
0x0000000000164c43 : cmp dword ptr [rdx + 5], eax ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000143006 : cmp dword ptr [rdx + rax*4 + 8], 1 ; jne 0x142f80 ; jmp 0x142fe9
0x0000000000091881 : cmp dword ptr [rdx], -7 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000087315 : cmp dword ptr [rdx], ecx ; je 0x87334 ; cmp rsi, rcx ; jb 0x8731c ; lea eax, [rdx + rdi] ; ret
0x0000000000091c25 : cmp dword ptr [rdx], ecx ; je 0x91c44 ; cmp rcx, rsi ; jne 0x91c2c ; lea eax, [rdx + rdi] ; ret
0x000000000009bea1 : cmp dword ptr [rip + 0x14b7c8], 0 ; je 0x9beb9 ; ret
0x0000000000094e41 : cmp dword ptr [rip + 0x1527a9], edi ; jbe 0x94de7 ; add rsp, 8 ; ret
0x000000000012d1d3 : cmp dword ptr [rsi + 0xf480005], edi ; ret 0xfc3
0x000000000011f593 : cmp dword ptr [rsi - 0x76befff4], ebp ; retf 0x8b
0x000000000011831d : cmp dword ptr [rsi], 0 ; mov rbx, rsi ; je 0x118339 ; pop rbx ; ret
0x0000000000167a03 : cmp dword ptr [rsi], edx ; add eax, 0x14634900 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000a00f0 : cmp dword ptr [rsp], 0 ; je 0xa0112 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e368e : cmp dword ptr fs:[rax], 0x26 ; mov eax, 0x20 ; cmovne rax, rdx ; ret
0x00000000000e353e : cmp dword ptr fs:[rax], 0x26 ; mov eax, 0x7f ; cmovne rax, rdx ; ret
0x0000000000101b7e : cmp dx, 2 ; je 0x101b8e ; ret
0x000000000012c672 : cmp eax, -0x16 ; mov eax, 3 ; cmovne eax, edx ; ret
0x0000000000111abd : cmp eax, -0x5f ; je 0x111ad8 ; neg eax ; pop rbx ; ret
0x0000000000111d1d : cmp eax, -0x5f ; je 0x111d38 ; neg eax ; pop rbx ; ret
0x000000000013a450 : cmp eax, -0xb ; je 0x13a44e ; pop rbx ; ret
0x00000000000a28de : cmp eax, -1 ; cmove rax, r13 ; jmp 0xa28b1
0x000000000009aa9f : cmp eax, -1 ; cmove rax, rdx ; add rsp, 8 ; ret
0x0000000000120806 : cmp eax, -1 ; je 0x12081a ; add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x0000000000120907 : cmp eax, -1 ; je 0x12091d ; add eax, 1 ; mov word ptr [rdx], ax ; ret
0x0000000000063a8c : cmp eax, -1 ; je 0x63a9d ; ret
0x0000000000090cc8 : cmp eax, -1 ; je 0x90c54 ; or eax, 0xffffffff ; ret
0x0000000000090ea8 : cmp eax, -1 ; je 0x90e34 ; or eax, 0xffffffff ; ret
0x0000000000091bce : cmp eax, -1 ; jne 0x91b9a ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000060aef : cmp eax, -1 ; sete al ; jmp 0x60ac1
0x0000000000060d3f : cmp eax, -1 ; sete al ; jmp 0x60d11
0x000000000015e81a : cmp eax, -1 ; sete dl ; mov dword ptr [rbx], edx ; pop rbx ; ret
0x0000000000056920 : cmp eax, -8 ; jne 0x56918 ; mov rax, rdx ; ret
0x00000000000884f6 : cmp eax, 0x128415 ; call 0x34fd7
0x0000000000080a3c : cmp eax, 0x129b27 ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000009a1d8 : cmp eax, 0x14d3ea ; add dword ptr [rax - 0x77], ecx ; ret 0x4574
0x0000000000094e42 : cmp eax, 0x1527a9 ; jbe 0x94de6 ; add rsp, 8 ; ret
0x0000000000058daa : cmp eax, 0x156d06 ; call 0x34fd7
0x0000000000041790 : cmp eax, 0x16342b ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x0000000000028d6c : cmp eax, 0x1867a4 ; call 0x34fd7
0x00000000000ce983 : cmp eax, 0x19 ; jg 0xce9a9 ; mov rax, rbx ; pop rbx ; ret
0x0000000000093524 : cmp eax, 0x2000000 ; jbe 0x93537 ; ret
0x000000000005373a : cmp eax, 0x39480019 ; ret
0x0000000000112648 : cmp eax, 0x410000 ; je 0x112684 ; mov eax, 0x101 ; syscall
0x000000000009e1bf : cmp eax, 0x480000c3 ; cmove eax, edx ; ret
0x000000000009d30f : cmp eax, 0x48000130 ; cmove eax, edx ; ret
0x0000000000145d3b : cmp eax, 0x48000a3c ; add esp, 8 ; ret
0x00000000000536db : cmp eax, 0x4c60019 ; adc byte ptr [rax], al ; ret
0x00000000000e34e6 : cmp eax, 0x58465342 ; jne 0xe34f8 ; ret
0x000000000006deed : cmp eax, 0x5d ; cmove r9, rdx ; jmp 0x6df12
0x00000000001650e6 : cmp eax, 0x63490005 ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000185f14 : cmp eax, 0x89000001 ; ret 0x8948
0x0000000000093716 : cmp eax, 0x89480008 ; ret
0x000000000013adcf : cmp eax, 0x89fffe3e ; ret
0x00000000000e15ef : cmp eax, 0x8b0004a8 ; and al, 0xc ; add rsp, 0x18 ; ret
0x000000000011614c : cmp eax, 0x9b45c ; call 0x823a7
0x000000000014d1f5 : cmp eax, 0x9c9d6 ; call 0x4892c
0x0000000000136e63 : cmp eax, 0xb2378 ; call rax
0x00000000000f6efa : cmp eax, 0xb58ad ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00000000000a08af : cmp eax, 0xba ; add byte ptr [rax + 0xf], cl ; ret 0xc3c3
0x00000000001172bb : cmp eax, 0xcd088 ; ret
0x00000000000a2d16 : cmp eax, 0xf7410000 ; ret 0
0x00000000000c5247 : cmp eax, 0xff ; je 0xc5256 ; ret
0x000000000010b318 : cmp eax, 0xfffff000 ; ja 0x10b37f ; ret
0x000000000010b3c8 : cmp eax, 0xfffff000 ; ja 0x10b42f ; ret
0x000000000010c5c6 : cmp eax, 0xfffff000 ; ja 0x10c5d7 ; ret
0x000000000010c614 : cmp eax, 0xfffff000 ; ja 0x10c627 ; ret
0x000000000010c666 : cmp eax, 0xfffff000 ; ja 0x10c677 ; ret
0x000000000010c8ae : cmp eax, 0xfffff000 ; ja 0x10c8c7 ; ret
0x000000000010c912 : cmp eax, 0xfffff000 ; ja 0x10c927 ; ret
0x000000000010c96a : cmp eax, 0xfffff000 ; ja 0x10c97f ; ret
0x000000000010cb95 : cmp eax, 0xfffff000 ; ja 0x10cba7 ; ret
0x000000000010cf82 : cmp eax, 0xfffff000 ; ja 0x10cfe7 ; ret
0x000000000010d025 : cmp eax, 0xfffff000 ; ja 0x10d087 ; ret
0x000000000010d0b8 : cmp eax, 0xfffff000 ; ja 0x10d0c7 ; ret
0x000000000010d0e8 : cmp eax, 0xfffff000 ; ja 0x10d0f7 ; ret
0x000000000010d675 : cmp eax, 0xfffff000 ; ja 0x10d6bf ; ret
0x000000000010d7e5 : cmp eax, 0xfffff000 ; ja 0x10d837 ; ret
0x00000000001116f5 : cmp eax, 0xfffff000 ; ja 0x111757 ; ret
0x00000000001121b0 : cmp eax, 0xfffff000 ; ja 0x1121c7 ; ret
0x0000000000112204 : cmp eax, 0xfffff000 ; ja 0x112217 ; ret
0x00000000001122c8 : cmp eax, 0xfffff000 ; ja 0x11232f ; ret
0x0000000000112368 : cmp eax, 0xfffff000 ; ja 0x1123c7 ; ret
0x00000000001123f8 : cmp eax, 0xfffff000 ; ja 0x112407 ; ret
0x0000000000112558 : cmp eax, 0xfffff000 ; ja 0x112567 ; ret
0x00000000001126c8 : cmp eax, 0xfffff000 ; ja 0x1126d7 ; ret
0x00000000001126f5 : cmp eax, 0xfffff000 ; ja 0x112707 ; ret
0x000000000011272b : cmp eax, 0xfffff000 ; ja 0x11273f ; ret
0x0000000000112758 : cmp eax, 0xfffff000 ; ja 0x112767 ; ret
0x0000000000112c0f : cmp eax, 0xfffff000 ; ja 0x112c67 ; ret
0x0000000000112df1 : cmp eax, 0xfffff000 ; ja 0x112e07 ; ret
0x0000000000112e32 : cmp eax, 0xfffff000 ; ja 0x112e47 ; ret
0x0000000000113455 : cmp eax, 0xfffff000 ; ja 0x1134b7 ; ret
0x00000000001134f5 : cmp eax, 0xfffff000 ; ja 0x113557 ; ret
0x000000000011359b : cmp eax, 0xfffff000 ; ja 0x113607 ; ret
0x000000000011364b : cmp eax, 0xfffff000 ; ja 0x1136b7 ; ret
0x0000000000114008 : cmp eax, 0xfffff000 ; ja 0x114077 ; ret
0x0000000000114225 : cmp eax, 0xfffff000 ; ja 0x11426f ; ret
0x00000000001142d5 : cmp eax, 0xfffff000 ; ja 0x11431f ; ret
0x0000000000114384 : cmp eax, 0xfffff000 ; ja 0x114397 ; ret
0x00000000001158f8 : cmp eax, 0xfffff000 ; ja 0x115907 ; ret
0x0000000000115add : cmp eax, 0xfffff000 ; ja 0x115aef ; ret
0x0000000000115b18 : cmp eax, 0xfffff000 ; ja 0x115b27 ; ret
0x0000000000115b48 : cmp eax, 0xfffff000 ; ja 0x115b57 ; ret
0x00000000001175d5 : cmp eax, 0xfffff000 ; ja 0x117637 ; ret
0x000000000011ad7f : cmp eax, 0xfffff000 ; ja 0x11ad97 ; ret
0x000000000011db88 : cmp eax, 0xfffff000 ; ja 0x11db97 ; ret
0x000000000011dc2e : cmp eax, 0xfffff000 ; ja 0x11dcaf ; ret
0x000000000011dce0 : cmp eax, 0xfffff000 ; ja 0x11dcf7 ; ret
0x000000000011de08 : cmp eax, 0xfffff000 ; ja 0x11de6f ; ret
0x000000000011dea8 : cmp eax, 0xfffff000 ; ja 0x11df0f ; ret
0x000000000011df58 : cmp eax, 0xfffff000 ; ja 0x11dfbf ; ret
0x000000000011e008 : cmp eax, 0xfffff000 ; ja 0x11e087 ; ret
0x000000000011e0c5 : cmp eax, 0xfffff000 ; ja 0x11e127 ; ret
0x000000000011e1e0 : cmp eax, 0xfffff000 ; ja 0x11e1f7 ; ret
0x000000000011ea55 : cmp eax, 0xfffff000 ; ja 0x11eab7 ; ret
0x000000000011eb25 : cmp eax, 0xfffff000 ; ja 0x11eb87 ; ret
0x000000000011ec8e : cmp eax, 0xfffff000 ; ja 0x11ed07 ; ret
0x000000000011ed48 : cmp eax, 0xfffff000 ; ja 0x11edc7 ; ret
0x000000000011ee05 : cmp eax, 0xfffff000 ; ja 0x11ee67 ; ret
0x000000000011eeae : cmp eax, 0xfffff000 ; ja 0x11ef27 ; ret
0x000000000011ef65 : cmp eax, 0xfffff000 ; ja 0x11efc7 ; ret
0x000000000011f008 : cmp eax, 0xfffff000 ; ja 0x11f087 ; ret
0x000000000011f458 : cmp eax, 0xfffff000 ; ja 0x11f4bf ; ret
0x000000000011f4f8 : cmp eax, 0xfffff000 ; ja 0x11f567 ; ret
0x000000000011f5a8 : cmp eax, 0xfffff000 ; ja 0x11f60f ; ret
0x000000000011f728 : cmp eax, 0xfffff000 ; ja 0x11f78f ; ret
0x000000000011f7c8 : cmp eax, 0xfffff000 ; ja 0x11f837 ; ret
0x000000000011f868 : cmp eax, 0xfffff000 ; ja 0x11f877 ; ret
0x000000000011f898 : cmp eax, 0xfffff000 ; ja 0x11f8a7 ; ret
0x000000000011f8c8 : cmp eax, 0xfffff000 ; ja 0x11f8d7 ; ret
0x000000000011f8f8 : cmp eax, 0xfffff000 ; ja 0x11f907 ; ret
0x000000000011f9cb : cmp eax, 0xfffff000 ; ja 0x11f9df ; ret
0x000000000011f9f8 : cmp eax, 0xfffff000 ; ja 0x11fa07 ; ret
0x000000000011fa28 : cmp eax, 0xfffff000 ; ja 0x11fa37 ; ret
0x000000000011fa5b : cmp eax, 0xfffff000 ; ja 0x11fa6f ; ret
0x000000000011fa88 : cmp eax, 0xfffff000 ; ja 0x11fa97 ; ret
0x000000000012c698 : cmp eax, 0xfffff000 ; ja 0x12c6a7 ; ret
0x000000000012c742 : cmp eax, 0xfffff000 ; ja 0x12c757 ; ret
0x000000000012e00a : cmp eax, 0xfffff000 ; ja 0x12e01f ; ret
0x000000000004417e : cmp eax, 0xfffff000 ; ja 0x44197 ; ret
0x00000000000441ed : cmp eax, 0xfffff000 ; ja 0x441ff ; ret
0x000000000004422a : cmp eax, 0xfffff000 ; ja 0x4427f ; ret
0x0000000000048af5 : cmp eax, 0xfffff000 ; ja 0x48b57 ; ret
0x0000000000063a18 : cmp eax, 0xfffff000 ; ja 0x63a27 ; ret
0x0000000000063a4b : cmp eax, 0xfffff000 ; ja 0x63a5f ; ret
0x0000000000063a85 : cmp eax, 0xfffff000 ; ja 0x63ac4 ; cmp eax, -1 ; je 0x63aa4 ; ret
0x00000000000cf788 : cmp eax, 0xfffff000 ; ja 0xcf797 ; ret
0x00000000000dc9c8 : cmp eax, 0xfffff000 ; ja 0xdc9d7 ; ret
0x00000000000e12f2 : cmp eax, 0xfffff000 ; ja 0xe134f ; ret
0x00000000000e1388 : cmp eax, 0xfffff000 ; ja 0xe13e7 ; ret
0x00000000000e147b : cmp eax, 0xfffff000 ; ja 0xe14e7 ; ret
0x00000000000e15c5 : cmp eax, 0xfffff000 ; ja 0xe1607 ; ret
0x00000000000e1645 : cmp eax, 0xfffff000 ; ja 0xe1697 ; ret
0x000000000011187e : cmp eax, 0xfffff000 ; mov eax, 0 ; cmova eax, edx ; ret
0x00000000000dbace : cmp eax, 0xfffff000 ; pop rbx ; setbe al ; movzx eax, al ; ret
0x00000000001017a8 : cmp eax, 0xfffff001 ; jae 0x1017b7 ; ret
0x00000000001017d8 : cmp eax, 0xfffff001 ; jae 0x1017e7 ; ret
0x0000000000101808 : cmp eax, 0xfffff001 ; jae 0x101817 ; ret
0x0000000000101838 : cmp eax, 0xfffff001 ; jae 0x101847 ; ret
0x0000000000101868 : cmp eax, 0xfffff001 ; jae 0x101877 ; ret
0x0000000000101898 : cmp eax, 0xfffff001 ; jae 0x1018a7 ; ret
0x00000000001018c8 : cmp eax, 0xfffff001 ; jae 0x1018d7 ; ret
0x00000000001018f8 : cmp eax, 0xfffff001 ; jae 0x101907 ; ret
0x000000000010c4e8 : cmp eax, 0xfffff001 ; jae 0x10c4f7 ; ret
0x000000000010c9b8 : cmp eax, 0xfffff001 ; jae 0x10c9c7 ; ret
0x000000000010c9e8 : cmp eax, 0xfffff001 ; jae 0x10c9f7 ; ret
0x000000000010cb08 : cmp eax, 0xfffff001 ; jae 0x10cb17 ; ret
0x000000000010cb38 : cmp eax, 0xfffff001 ; jae 0x10cb47 ; ret
0x000000000010cbf8 : cmp eax, 0xfffff001 ; jae 0x10cc07 ; ret
0x000000000010cc28 : cmp eax, 0xfffff001 ; jae 0x10cc37 ; ret
0x000000000010d518 : cmp eax, 0xfffff001 ; jae 0x10d527 ; ret
0x000000000010d6e8 : cmp eax, 0xfffff001 ; jae 0x10d6f7 ; ret
0x000000000010d718 : cmp eax, 0xfffff001 ; jae 0x10d727 ; ret
0x000000000010d748 : cmp eax, 0xfffff001 ; jae 0x10d757 ; ret
0x000000000010d778 : cmp eax, 0xfffff001 ; jae 0x10d787 ; ret
0x000000000010d7a8 : cmp eax, 0xfffff001 ; jae 0x10d7b7 ; ret
0x000000000010d868 : cmp eax, 0xfffff001 ; jae 0x10d877 ; ret
0x000000000010d898 : cmp eax, 0xfffff001 ; jae 0x10d8a7 ; ret
0x000000000010e158 : cmp eax, 0xfffff001 ; jae 0x10e167 ; ret
0x000000000010e188 : cmp eax, 0xfffff001 ; jae 0x10e197 ; ret
0x000000000010e1b8 : cmp eax, 0xfffff001 ; jae 0x10e1c7 ; ret
0x000000000010e1eb : cmp eax, 0xfffff001 ; jae 0x10e1fa ; ret
0x000000000010e9a8 : cmp eax, 0xfffff001 ; jae 0x10e9b7 ; ret
0x000000000010e9db : cmp eax, 0xfffff001 ; jae 0x10e9ea ; ret
0x000000000010ea08 : cmp eax, 0xfffff001 ; jae 0x10ea17 ; ret
0x000000000010ea38 : cmp eax, 0xfffff001 ; jae 0x10ea47 ; ret
0x000000000010ea68 : cmp eax, 0xfffff001 ; jae 0x10ea77 ; ret
0x000000000010ea9b : cmp eax, 0xfffff001 ; jae 0x10eaaa ; ret
0x000000000010eac8 : cmp eax, 0xfffff001 ; jae 0x10ead7 ; ret
0x000000000010eaf8 : cmp eax, 0xfffff001 ; jae 0x10eb07 ; ret
0x000000000010eb28 : cmp eax, 0xfffff001 ; jae 0x10eb37 ; ret
0x0000000000111d5b : cmp eax, 0xfffff001 ; jae 0x111d6a ; ret
0x0000000000112e68 : cmp eax, 0xfffff001 ; jae 0x112e77 ; ret
0x0000000000113258 : cmp eax, 0xfffff001 ; jae 0x113267 ; ret
0x0000000000113418 : cmp eax, 0xfffff001 ; jae 0x113427 ; ret
0x0000000000113e78 : cmp eax, 0xfffff001 ; jae 0x113e87 ; ret
0x0000000000113fc8 : cmp eax, 0xfffff001 ; jae 0x113fd7 ; ret
0x00000000001141b8 : cmp eax, 0xfffff001 ; jae 0x1141c7 ; ret
0x00000000001141e8 : cmp eax, 0xfffff001 ; jae 0x1141f7 ; ret
0x0000000000114298 : cmp eax, 0xfffff001 ; jae 0x1142a7 ; ret
0x0000000000114348 : cmp eax, 0xfffff001 ; jae 0x114357 ; ret
0x0000000000114678 : cmp eax, 0xfffff001 ; jae 0x114687 ; ret
0x00000000001146a8 : cmp eax, 0xfffff001 ; jae 0x1146b7 ; ret
0x00000000001146d8 : cmp eax, 0xfffff001 ; jae 0x1146e7 ; ret
0x00000000001172ea : cmp eax, 0xfffff001 ; jae 0x1172f9 ; ret
0x00000000001172ea : cmp eax, 0xfffff001 ; jae 0x1172fe ; ret
0x0000000000117568 : cmp eax, 0xfffff001 ; jae 0x117577 ; ret
0x0000000000117598 : cmp eax, 0xfffff001 ; jae 0x1175a7 ; ret
0x0000000000117668 : cmp eax, 0xfffff001 ; jae 0x117677 ; ret
0x0000000000117698 : cmp eax, 0xfffff001 ; jae 0x1176a7 ; ret
0x00000000001176cb : cmp eax, 0xfffff001 ; jae 0x1176da ; ret
0x00000000001176f8 : cmp eax, 0xfffff001 ; jae 0x117707 ; ret
0x0000000000117728 : cmp eax, 0xfffff001 ; jae 0x117737 ; ret
0x0000000000117758 : cmp eax, 0xfffff001 ; jae 0x117767 ; ret
0x0000000000117788 : cmp eax, 0xfffff001 ; jae 0x117797 ; ret
0x000000000011b7cb : cmp eax, 0xfffff001 ; jae 0x11b7da ; ret
0x000000000011b7f8 : cmp eax, 0xfffff001 ; jae 0x11b807 ; ret
0x000000000011b828 : cmp eax, 0xfffff001 ; jae 0x11b837 ; ret
0x000000000011b85b : cmp eax, 0xfffff001 ; jae 0x11b86a ; ret
0x000000000011b88b : cmp eax, 0xfffff001 ; jae 0x11b89a ; ret
0x000000000011b8b8 : cmp eax, 0xfffff001 ; jae 0x11b8c7 ; ret
0x000000000011b8eb : cmp eax, 0xfffff001 ; jae 0x11b8fa ; ret
0x000000000011b918 : cmp eax, 0xfffff001 ; jae 0x11b927 ; ret
0x000000000011b948 : cmp eax, 0xfffff001 ; jae 0x11b957 ; ret
0x000000000011b97b : cmp eax, 0xfffff001 ; jae 0x11b98a ; ret
0x000000000011b9a8 : cmp eax, 0xfffff001 ; jae 0x11b9b7 ; ret
0x000000000011b9db : cmp eax, 0xfffff001 ; jae 0x11b9ea ; ret
0x000000000011d9e8 : cmp eax, 0xfffff001 ; jae 0x11d9f7 ; ret
0x000000000011da18 : cmp eax, 0xfffff001 ; jae 0x11da27 ; ret
0x000000000011db58 : cmp eax, 0xfffff001 ; jae 0x11db67 ; ret
0x000000000011dbb8 : cmp eax, 0xfffff001 ; jae 0x11dbc7 ; ret
0x000000000011dbe8 : cmp eax, 0xfffff001 ; jae 0x11dbf7 ; ret
0x000000000011dd18 : cmp eax, 0xfffff001 ; jae 0x11dd27 ; ret
0x000000000011dd9b : cmp eax, 0xfffff001 ; jae 0x11ddaa ; ret
0x000000000011ddc8 : cmp eax, 0xfffff001 ; jae 0x11ddd7 ; ret
0x000000000011e298 : cmp eax, 0xfffff001 ; jae 0x11e2a7 ; ret
0x000000000011e2c8 : cmp eax, 0xfffff001 ; jae 0x11e2d7 ; ret
0x000000000011e30b : cmp eax, 0xfffff001 ; jae 0x11e31a ; ret
0x000000000011e338 : cmp eax, 0xfffff001 ; jae 0x11e347 ; ret
0x000000000011e368 : cmp eax, 0xfffff001 ; jae 0x11e377 ; ret
0x000000000011e398 : cmp eax, 0xfffff001 ; jae 0x11e3a7 ; ret
0x000000000011e3c8 : cmp eax, 0xfffff001 ; jae 0x11e3d7 ; ret
0x000000000011e3f8 : cmp eax, 0xfffff001 ; jae 0x11e407 ; ret
0x000000000011e428 : cmp eax, 0xfffff001 ; jae 0x11e437 ; ret
0x000000000011e458 : cmp eax, 0xfffff001 ; jae 0x11e467 ; ret
0x000000000011e488 : cmp eax, 0xfffff001 ; jae 0x11e497 ; ret
0x000000000011e4bb : cmp eax, 0xfffff001 ; jae 0x11e4ca ; ret
0x000000000011e4e8 : cmp eax, 0xfffff001 ; jae 0x11e4f7 ; ret
0x000000000011e51b : cmp eax, 0xfffff001 ; jae 0x11e52a ; ret
0x000000000011e548 : cmp eax, 0xfffff001 ; jae 0x11e557 ; ret
0x000000000011e578 : cmp eax, 0xfffff001 ; jae 0x11e587 ; ret
0x000000000011e5a8 : cmp eax, 0xfffff001 ; jae 0x11e5b7 ; ret
0x000000000011e5d8 : cmp eax, 0xfffff001 ; jae 0x11e5e7 ; ret
0x000000000011e608 : cmp eax, 0xfffff001 ; jae 0x11e617 ; ret
0x000000000011e63b : cmp eax, 0xfffff001 ; jae 0x11e64a ; ret
0x000000000011e66b : cmp eax, 0xfffff001 ; jae 0x11e67a ; ret
0x000000000011e698 : cmp eax, 0xfffff001 ; jae 0x11e6a7 ; ret
0x000000000011e6c8 : cmp eax, 0xfffff001 ; jae 0x11e6d7 ; ret
0x000000000011e6fb : cmp eax, 0xfffff001 ; jae 0x11e70a ; ret
0x000000000011e72b : cmp eax, 0xfffff001 ; jae 0x11e73a ; ret
0x000000000011e75b : cmp eax, 0xfffff001 ; jae 0x11e76a ; ret
0x000000000011e788 : cmp eax, 0xfffff001 ; jae 0x11e797 ; ret
0x000000000011e7b8 : cmp eax, 0xfffff001 ; jae 0x11e7c7 ; ret
0x000000000011e7e8 : cmp eax, 0xfffff001 ; jae 0x11e7f7 ; ret
0x000000000011e818 : cmp eax, 0xfffff001 ; jae 0x11e827 ; ret
0x000000000011e84b : cmp eax, 0xfffff001 ; jae 0x11e85a ; ret
0x000000000011e878 : cmp eax, 0xfffff001 ; jae 0x11e887 ; ret
0x000000000011e8a8 : cmp eax, 0xfffff001 ; jae 0x11e8b7 ; ret
0x000000000011e8db : cmp eax, 0xfffff001 ; jae 0x11e8ea ; ret
0x000000000011e908 : cmp eax, 0xfffff001 ; jae 0x11e917 ; ret
0x000000000011e93b : cmp eax, 0xfffff001 ; jae 0x11e94a ; ret
0x000000000011e96b : cmp eax, 0xfffff001 ; jae 0x11e97a ; ret
0x000000000011e998 : cmp eax, 0xfffff001 ; jae 0x11e9a7 ; ret
0x000000000011e9c8 : cmp eax, 0xfffff001 ; jae 0x11e9d7 ; ret
0x000000000011e9f8 : cmp eax, 0xfffff001 ; jae 0x11ea07 ; ret
0x000000000011eae8 : cmp eax, 0xfffff001 ; jae 0x11eaf7 ; ret
0x000000000011ebb8 : cmp eax, 0xfffff001 ; jae 0x11ebc7 ; ret
0x000000000011ebe8 : cmp eax, 0xfffff001 ; jae 0x11ebf7 ; ret
0x000000000011ec1b : cmp eax, 0xfffff001 ; jae 0x11ec2a ; ret
0x000000000011ec48 : cmp eax, 0xfffff001 ; jae 0x11ec57 ; ret
0x000000000011f0bb : cmp eax, 0xfffff001 ; jae 0x11f0ca ; ret
0x000000000011f0e8 : cmp eax, 0xfffff001 ; jae 0x11f0f7 ; ret
0x000000000011f118 : cmp eax, 0xfffff001 ; jae 0x11f127 ; ret
0x000000000011f14b : cmp eax, 0xfffff001 ; jae 0x11f15a ; ret
0x000000000015a8fb : cmp eax, 0xfffff001 ; jae 0x15a90a ; ret
0x000000000015a94b : cmp eax, 0xfffff001 ; jae 0x15a95a ; ret
0x00000000000441b8 : cmp eax, 0xfffff001 ; jae 0x441c7 ; ret
0x0000000000044768 : cmp eax, 0xfffff001 ; jae 0x44777 ; ret
0x0000000000055de2 : cmp eax, 0xfffff001 ; jae 0x55df5 ; xor eax, eax ; ret
0x00000000000cf868 : cmp eax, 0xfffff001 ; jae 0xcf877 ; ret
0x00000000000d2988 : cmp eax, 0xfffff001 ; jae 0xd2997 ; ret
0x00000000000d29b8 : cmp eax, 0xfffff001 ; jae 0xd29c7 ; ret
0x00000000000e1248 : cmp eax, 0xfffff001 ; jae 0xe1257 ; ret
0x00000000000e143b : cmp eax, 0xfffff001 ; jae 0xe144a ; ret
0x00000000000e1518 : cmp eax, 0xfffff001 ; jae 0xe1527 ; ret
0x00000000000e18c9 : cmp eax, 0xfffff001 ; jae 0xe18d8 ; ret
0x00000000000e1958 : cmp eax, 0xfffff001 ; jae 0xe1967 ; ret
0x00000000000e2748 : cmp eax, 0xfffff001 ; jae 0xe2757 ; ret
0x00000000000e2948 : cmp eax, 0xfffff001 ; jae 0xe2957 ; ret
0x00000000000e2978 : cmp eax, 0xfffff001 ; jae 0xe2987 ; ret
0x00000000000e29d8 : cmp eax, 0xfffff001 ; jae 0xe29e7 ; ret
0x00000000000e2a08 : cmp eax, 0xfffff001 ; jae 0xe2a17 ; ret
0x00000000000e2a38 : cmp eax, 0xfffff001 ; jae 0xe2a47 ; ret
0x00000000000e2a68 : cmp eax, 0xfffff001 ; jae 0xe2a77 ; ret
0x000000000012c98b : cmp eax, 0xfffffea0 ; call rax
0x00000000000a02ba : cmp eax, 1 ; ja 0xa02a1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013b232 : cmp eax, 1 ; je 0x13b24c ; test eax, eax ; jne 0x13b25c ; mov eax, r8d ; ret
0x00000000000bac0d : cmp eax, 1 ; je 0xbac2c ; cmp eax, 2 ; je 0xbac34 ; xor eax, eax ; ret
0x0000000000154570 : cmp eax, 1 ; jne 0x15456a ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x00000000000bac12 : cmp eax, 2 ; je 0xbac2f ; xor eax, eax ; ret
0x0000000000154561 : cmp eax, 2 ; sete al ; movzx eax, al ; ret
0x00000000001474d9 : cmp eax, 3 ; jbe 0x1474f2 ; mov eax, 2 ; ret
0x00000000000f05fe : cmp eax, 3 ; je 0xf0660 ; xor eax, eax ; pop rbx ; ret
0x000000000012be5a : cmp eax, 4 ; je 0x12be65 ; ret
0x0000000000048bda : cmp eax, 4 ; je 0x48baa ; mov eax, 0xffffffff ; ret
0x000000000008114d : cmp eax, 9 ; ja 0x80f94 ; mov eax, edi ; jmp 0x81129
0x00000000001569d7 : cmp eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e1951 : cmp eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000008cca5 : cmp eax, dword ptr [rbp + 0x20] ; ja 0x8ccc4 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000118749 : cmp eax, dword ptr [rcx - 0xa] ; or byte ptr [r9], al ; jne 0x118798 ; ret
0x000000000002ce15 : cmp eax, dword ptr [rcx - 0xa] ; ret 0x7508
0x00000000001871b1 : cmp eax, dword ptr [rcx] ; add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; vzeroupper ; ret
0x00000000000f0755 : cmp eax, dword ptr [rcx] ; ret 0xc083
0x000000000008ea05 : cmp eax, dword ptr [rdi + 0x10] ; jae 0x8ea18 ; movzx eax, byte ptr [rax] ; ret
0x00000000000cd90e : cmp eax, dword ptr [rsi + 0x10] ; jne 0xcda09 ; ret
0x00000000000cd923 : cmp eax, dword ptr [rsi + 0x14] ; jne 0xcda09 ; ret
0x00000000000cd938 : cmp eax, dword ptr [rsi + 0x18] ; jne 0xcda09 ; ret
0x00000000000cd953 : cmp eax, dword ptr [rsi + 0x1c] ; jne 0xcda09 ; ret
0x00000000000cd96e : cmp eax, dword ptr [rsi + 0x20] ; jne 0xcda09 ; ret
0x00000000000cd983 : cmp eax, dword ptr [rsi + 0x24] ; jne 0xcda05 ; ret
0x00000000000cd998 : cmp eax, dword ptr [rsi + 0x28] ; jne 0xcda05 ; ret
0x00000000000cd9a3 : cmp eax, dword ptr [rsi + 0x2c] ; jne 0xcda05 ; ret
0x00000000000cd9be : cmp eax, dword ptr [rsi + 0x30] ; jne 0xcda05 ; ret
0x00000000000cd9d3 : cmp eax, dword ptr [rsi + 0x34] ; jne 0xcda05 ; ret
0x00000000000cd9e8 : cmp eax, dword ptr [rsi + 0x38] ; jne 0xcda05 ; ret
0x00000000000cd9f3 : cmp eax, dword ptr [rsi + 0x3c] ; jne 0xcda05 ; ret
0x00000000000cd8f3 : cmp eax, dword ptr [rsi + 0xc] ; jne 0xcda09 ; ret
0x00000000000b65d1 : cmp eax, dword ptr [rsi + 0xf] ; add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000cd8c3 : cmp eax, dword ptr [rsi + 4] ; jne 0xcda09 ; ret
0x00000000000cd8d8 : cmp eax, dword ptr [rsi + 8] ; jne 0xcda09 ; ret
0x000000000019041a : cmp eax, dword ptr [rsi - 0x10] ; jne 0x190559 ; ret
0x0000000000190433 : cmp eax, dword ptr [rsi - 0xc] ; jne 0x190559 ; ret
0x0000000000190543 : cmp eax, dword ptr [rsi - 4] ; jne 0x190557 ; xor eax, eax ; ret
0x0000000000190463 : cmp eax, dword ptr [rsi - 4] ; jne 0x190559 ; ret
0x0000000000190448 : cmp eax, dword ptr [rsi - 8] ; jne 0x190559 ; ret
0x00000000000cd8ad : cmp eax, dword ptr [rsi] ; jne 0xcda08 ; ret
0x000000000009b5c9 : cmp eax, eax ; adc al, 0 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x0000000000086318 : cmp eax, ecx ; cmovg rax, rcx ; test rdx, rdx ; jne 0x8631b ; ret
0x0000000000090878 : cmp eax, ecx ; cmovg rax, rcx ; test rdx, rdx ; jne 0x9087b ; ret
0x00000000000cdc87 : cmp eax, ecx ; ja 0xcdcab ; sub rdi, 0x10 ; add rax, rdi ; ret
0x0000000000048bc8 : cmp eax, ecx ; jb 0x48bab ; xor eax, eax ; ret
0x00000000000a6f0d : cmp eax, ecx ; je 0xa6ef4 ; ret
0x000000000018fd12 : cmp eax, ecx ; jne 0x18ff2a ; xor eax, eax ; ret
0x000000000018fe7a : cmp eax, ecx ; jne 0x18ff3f ; xor eax, eax ; ret
0x00000000000cdac7 : cmp eax, ecx ; jne 0xcdae2 ; test ecx, ecx ; je 0xcdae2 ; xor eax, eax ; ret
0x000000000018ff33 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000005c0e3 : cmp eax, edi ; pop rbx ; cmovb rax, rdi ; ret
0x0000000000092a8b : cmp eax, edx ; jae 0x92ab7 ; movzx eax, byte ptr [rax] ; ret
0x000000000012b6eb : cmp eax, edx ; jb 0x12b6e6 ; xor eax, eax ; ret
0x00000000001519f9 : cmp eax, edx ; je 0x151a99 ; pop rbx ; ret
0x000000000012bd90 : cmp eax, edx ; jne 0x12bda6 ; nop ; mov eax, 0xca ; syscall
0x000000000013a9da : cmp eax, edx ; jne 0x13a9b9 ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00000000000a6fa2 : cmp eax, edx ; setne dil ; test r9b, dil ; jne 0xa6f93 ; ret
0x0000000000125d89 : cmp eax, esi ; jb 0x125da1 ; mov eax, 1 ; ret
0x00000000000a6e4b : cmp eax, esi ; setne r9b ; test r10b, r9b ; jne 0xa6e3b ; ret
0x00000000000eaf6d : cmp eax, esp ; jg 0xeaf65 ; jmp 0xeaf42
0x00000000000eaf6c : cmp eax, r12d ; jg 0xeaf66 ; jmp 0xeaf43
0x0000000000132811 : cmp ebp, dword ptr [rax] ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000122511 : cmp ebp, dword ptr [rbx] ; lock dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000001376e1 : cmp ebp, dword ptr [rdi] ; or eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00000000001484a6 : cmp ebp, eax ; add al, 0x4c ; cld ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000a0087 : cmp ebp, eax ; jbe 0xa00ad ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ed5d9 : cmp ebp, eax ; jg 0xed5b0 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010935e : cmp ebp, eax ; pop rsp ; retf 0xffff
0x0000000000148045 : cmp ebp, eax ; push rax ; cld ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x000000000010c356 : cmp ebp, ebx ; ja 0x10c34b ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002e396 : cmp ebp, ebx ; jb 0x2e45c ; mov rsi, rax ; jmp 0x2e371
0x00000000001504fa : cmp ebp, ebx ; ret
0x00000000001317df : cmp ebp, edi ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000ed5d8 : cmp ebp, r8d ; jg 0xed5b1 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012bdf6 : cmp ebx, 0xa ; je 0x12be01 ; ret
0x00000000000eca38 : cmp ebx, 0xa ; je 0xeca86 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000dbd84 : cmp ebx, dword ptr [rdx + 0x10] ; jg 0xdbd5a ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000097965 : cmp ebx, eax ; jb 0x97953 ; mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x0000000000098175 : cmp ebx, eax ; jb 0x98163 ; mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x0000000000098745 : cmp ebx, eax ; jb 0x98733 ; mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x000000000006c9f0 : cmp ebx, eax ; jg 0x6ca0a ; add ebx, esi ; mov r12, rcx ; jmp 0x6c9cf
0x000000000005522b : cmp ebx, eax ; jne 0x55225 ; pop rbx ; ret
0x000000000010b6f8 : cmp ebx, eax ; pop rbx ; setl al ; ret
0x0000000000196755 : cmp ebx, ebp ; jne 0x196752 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013df95 : cmp ebx, ecx ; jg 0x13df56 ; mov byte ptr [r10], 0 ; ret
0x00000000000dbf35 : cmp ebx, esp ; jne 0xdbf28 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a22bf : cmp ecx, -1 ; cmove r9, rcx ; jmp 0xa229a
0x00000000000c65fe : cmp ecx, -1 ; cmove rcx, rdi ; jmp 0xc65d9
0x000000000011e1d3 : cmp ecx, -1 ; je 0x11e212 ; mov eax, 0x149 ; syscall
0x00000000000571ac : cmp ecx, -1 ; jne 0x571a8 ; mov rax, rdx ; ret
0x0000000000055f81 : cmp ecx, 0x2f ; jmp rdx
0x0000000000053621 : cmp ecx, 0x40 ; je 0x5363f ; mov eax, ecx ; shl eax, 0x1e ; or eax, edx ; ret
0x000000000005867e : cmp ecx, 0xb4757fff ; mov eax, 1 ; ret
0x000000000009f535 : cmp ecx, 0xd ; je 0x9f547 ; xor byte ptr [rdx + 0xe], 0x2a ; ret
0x0000000000148060 : cmp ecx, 1 ; je 0x14807b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bb454 : cmp ecx, 4 ; cmovne rax, rdx ; ret
0x00000000001480e8 : cmp ecx, dword ptr [rax + 0x29] ; retf 0x2948
0x000000000004653a : cmp ecx, dword ptr [rax - 0x75] ; and al, 8 ; call rax
0x000000000015e538 : cmp ecx, dword ptr [rax - 0x77] ; retf 0x9fe8
0x0000000000027b78 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000f4ecc : cmp ecx, dword ptr [rax - 0x7d] ; ret 0x4808
0x0000000000101bac : cmp ecx, dword ptr [rax - 0xc] ; jne 0x101ba8 ; mov eax, dword ptr [rdx + 8] ; ret
0x0000000000063a74 : cmp ecx, dword ptr [rcx - 0x77] ; retf 0x3cb9
0x000000000018d0f4 : cmp ecx, dword ptr [rdi - 4] ; jne 0x18d331 ; xor eax, eax ; ret
0x00000000000b7207 : cmp ecx, dword ptr [rdi] ; add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000b70f2 : cmp ecx, dword ptr [rdi] ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000147576 : cmp ecx, dword ptr [rdi] ; retf 0xfa81
0x000000000015d951 : cmp ecx, dword ptr [rdx + 0x28] ; jae 0x15d93a ; mov eax, 1 ; ret
0x000000000018a2df : cmp ecx, dword ptr [rdx + rdi] ; jne 0x18a101 ; vzeroupper ; ret
0x000000000009a1f2 : cmp ecx, dword ptr [rip + 0x14d3f8] ; jae 0x9a224 ; lea rax, [rax - 8] ; ret
0x0000000000189caa : cmp ecx, dword ptr [rsi + rdx + 0x20] ; jne 0x189c9a ; vzeroupper ; ret
0x0000000000189cca : cmp ecx, dword ptr [rsi + rdx + 0x40] ; jne 0x189c9a ; vzeroupper ; ret
0x0000000000189cc9 : cmp ecx, dword ptr [rsi + rdx + 0x40] ; jne 0x189c9b ; vzeroupper ; ret
0x0000000000189cea : cmp ecx, dword ptr [rsi + rdx + 0x60] ; jne 0x189c9a ; vzeroupper ; ret
0x000000000018a00f : cmp ecx, dword ptr [rsi + rdx] ; jne 0x189c9d ; vzeroupper ; ret
0x000000000018a126 : cmp ecx, dword ptr [rsi + rdx] ; jne 0x18a0fd ; vzeroupper ; ret
0x000000000018a507 : cmp ecx, dword ptr [rsi + rdx] ; jne 0x18a101 ; vzeroupper ; ret
0x000000000018a4e4 : cmp ecx, dword ptr [rsi] ; jne 0x18a100 ; vzeroupper ; ret
0x00000000000b7236 : cmp ecx, dword ptr es:[rdi] ; add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000cdae8 : cmp ecx, eax ; cmovg eax, edx ; ret
0x0000000000087c91 : cmp ecx, eax ; jb 0x87c3f ; test dh, 8 ; jne 0x87c3f ; jmp 0x87c69
0x000000000018c4ab : cmp ecx, eax ; jne 0x18c4d9 ; xor eax, eax ; ret
0x000000000018ba9f : cmp ecx, eax ; jne 0x18c4dd ; xor eax, eax ; ret
0x000000000018bac7 : cmp ecx, eax ; jne 0x18c4e9 ; xor eax, eax ; ret
0x000000000018d2eb : cmp ecx, eax ; jne 0x18d319 ; xor eax, eax ; ret
0x000000000018d0cf : cmp ecx, eax ; jne 0x18d31d ; xor eax, eax ; ret
0x000000000018d31f : cmp ecx, eax ; jne 0x18d32c ; xor eax, eax ; ret
0x00000000000568c8 : cmp ecx, eax ; sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x00000000000cca10 : cmp ecx, eax ; setg al ; movzx eax, al ; lea eax, [rax + rax - 1] ; ret
0x00000000000cc9c8 : cmp ecx, eax ; setl al ; movzx eax, al ; lea eax, [rax + rax - 1] ; ret
0x00000000000792be : cmp ecx, ecx ; jg 0x792db ; add r9d, edx ; mov rax, r10 ; jmp 0x7929f
0x0000000000058372 : cmp ecx, ecx ; ret
0x0000000000109696 : cmp ecx, edi ; dec dword ptr [rcx - 0x77] ; ret 0x8948
0x00000000000f5864 : cmp ecx, edx ; call 0x3b551af8
0x0000000000155c73 : cmp ecx, edx ; jae 0x155c86 ; xor eax, eax ; ret
0x0000000000155cb3 : cmp ecx, edx ; jae 0x155cc6 ; xor eax, eax ; ret
0x00000000000a6eb8 : cmp ecx, edx ; je 0xa6eb8 ; cmp ecx, esi ; je 0xa6eb8 ; ret
0x000000000011f684 : cmp ecx, edx ; mov edx, 0 ; cmovb rax, rdx ; ret
0x000000000010eb70 : cmp ecx, edx ; seta al ; sbb eax, 0 ; ret
0x00000000000a6ebc : cmp ecx, esi ; je 0xa6eb4 ; ret
0x0000000000091c2a : cmp ecx, esi ; jne 0x91c27 ; lea eax, [rdx + rdi] ; ret
0x00000000000cdae7 : cmp ecx, r8d ; cmovg eax, edx ; ret
0x0000000000196449 : cmp edi, -1 ; je 0x1964a4 ; call 0x27b5c
0x000000000012a590 : cmp edi, 0x56 ; je 0x12a5aa ; mov eax, 7 ; ret
0x000000000013acaa : cmp edi, 0xb ; mov edx, 0x104 ; cmove eax, edx ; ret
0x000000000005c2cb : cmp edi, 0xf ; ja 0x5c2b8 ; mov rax, rsi ; ret
0x000000000005c2f3 : cmp edi, 7 ; ja 0x5c2e0 ; mov rax, rsi ; ret
0x000000000005c336 : cmp edi, 9 ; ja 0x5c318 ; mov rax, rsi ; ret
0x000000000012144d : cmp edi, 9 ; setbe al ; ret
0x000000000012c7a4 : cmp edi, dword ptr [rax + 0xe6] ; syscall
0x0000000000139631 : cmp edi, dword ptr [rax + 3] ; syscall
0x0000000000189e16 : cmp edi, dword ptr [rdx + rcx] ; jne 0x189c9d ; vzeroupper ; ret
0x000000000018a29c : cmp edi, dword ptr [rdx + rcx] ; jne 0x18a101 ; vzeroupper ; ret
0x000000000011330a : cmp edi, eax ; ja 0x11333e ; xor eax, eax ; ret
0x000000000005f44e : cmp edi, eax ; ja 0x5f437 ; mov eax, r9d ; ret
0x000000000005c2a6 : cmp edi, eax ; jae 0x5c297 ; mov rax, rsi ; ret
0x000000000005c042 : cmp edi, eax ; jbe 0x5c03d ; pop rbx ; ret
0x000000000011ad73 : cmp edi, eax ; jne 0x11adb1 ; mov eax, 0x88 ; syscall
0x0000000000131710 : cmp edi, ebp ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000d2a78 : cmp edi, ecx ; je 0xd2a84 ; ret
0x00000000000d2a77 : cmp edi, ecx ; je 0xd2a85 ; ret
0x000000000011a36c : cmp edi, edi ; jae 0x11a39b ; mov rsi, rbx ; mov rdi, r13 ; call r14
0x00000000000ba067 : cmp edi, edx ; jb 0xba074 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000011ba35 : cmp edi, edx ; jne 0x11ba30 ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000d2a8d : cmp edi, edx ; sete al ; add eax, 0x16d ; ret
0x000000000010c310 : cmp edi, esi ; ja 0x10c304 ; ret
0x000000000012c3a3 : cmp edi, esi ; sete al ; ret
0x000000000005f44d : cmp edi, r8d ; ja 0x5f438 ; mov eax, r9d ; ret
0x0000000000048010 : cmp edx, -1 ; cmove rbx, rax ; mov rax, rbx ; pop rbx ; ret
0x0000000000082bd3 : cmp edx, -1 ; je 0x82c1a ; mov rax, rdx ; pop rbx ; ret
0x000000000008be23 : cmp edx, -1 ; je 0x8be6a ; mov rax, rdx ; pop rbx ; ret
0x000000000004829b : cmp edx, -1 ; jne 0x4825b ; xor eax, eax ; ret
0x0000000000081230 : cmp edx, 0x24 ; jne 0x80f93 ; mov rdx, r9 ; jmp 0x811da
0x000000000011e176 : cmp edx, 0x26 ; je 0x11e1c0 ; ret
0x0000000000063aa2 : cmp edx, 0x26 ; je 0x63ad0 ; mov eax, 0xffffffff ; ret
0x00000000000e372b : cmp edx, 0x2f ; setne al ; ret
0x00000000000e36d6 : cmp edx, 0x414a53 ; setne al ; ret
0x00000000000e36ec : cmp edx, 0x5346544e ; setne al ; ret
0x00000000000e3719 : cmp edx, 0x7275 ; setne al ; ret
0x000000000012f2f5 : cmp edx, 0x80000000 ; cmovne eax, edi ; ret
0x00000000000ba63e : cmp edx, 0xff ; cmove rax, rcx ; ret
0x000000000013b370 : cmp edx, 1 ; jne 0x13b326 ; jmp 0x13b33f
0x000000000013b3f8 : cmp edx, 1 ; jne 0x13b396 ; mov eax, 0xffffffff ; ret
0x00000000000ecaa3 : cmp edx, 1 ; sbb eax, eax ; and eax, 2 ; add eax, 8 ; ret
0x0000000000101b7f : cmp edx, 2 ; je 0x101b8d ; ret
0x0000000000111570 : cmp edx, 4 ; ja 0x11158b ; mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x000000000010c282 : cmp edx, 4 ; je 0x10c29a ; mov eax, 0x1c ; syscall
0x000000000012c881 : cmp edx, dword ptr [rbx + 0x14] ; je 0x12c8a1 ; pop rbx ; xor eax, eax ; pop r12 ; pop rbp ; ret
0x0000000000189744 : cmp edx, dword ptr [rsi] ; jne 0x189730 ; ret
0x000000000015e90b : cmp edx, eax ; ja 0x15e906 ; xor eax, eax ; ret
0x000000000009d82d : cmp edx, eax ; jb 0x9d842 ; mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x000000000009f62d : cmp edx, eax ; jb 0x9f642 ; mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x0000000000182115 : cmp edx, eax ; jbe 0x18218a ; add rax, rdi ; vzeroupper ; ret
0x0000000000189b75 : cmp edx, eax ; jbe 0x189bea ; add rax, rdi ; vzeroupper ; ret
0x000000000010c89f : cmp edx, eax ; jne 0x10c8e4 ; mov rdi, r8 ; mov eax, 0x85 ; syscall
0x000000000009889a : cmp edx, eax ; jne 0x98864 ; ret
0x00000000000baece : cmp edx, eax ; jne 0xbaec3 ; mov dword ptr [rcx + 4], 0 ; ret
0x000000000013a916 : cmp edx, eax ; sbb eax, eax ; ret
0x000000000012e001 : cmp edx, ecx ; ja 0x12e032 ; xor eax, eax ; syscall
0x0000000000087569 : cmp edx, ecx ; jae 0x87575 ; mov eax, dword ptr [rdx] ; ret
0x0000000000181508 : cmp edx, ecx ; jle 0x1815b8 ; ret
0x00000000001895b2 : cmp edx, ecx ; jne 0x18959e ; vzeroupper ; ret
0x000000000018e445 : cmp edx, ecx ; jne 0x18e429 ; vzeroupper ; ret
0x00000000000ba52b : cmp edx, ecx ; jne 0xba518 ; ret
0x000000000012b7ce : cmp edx, edi ; setae al ; ret
0x000000000013b335 : cmp edx, esi ; jb 0x13b32d ; mov eax, 0xffffffff ; ret
0x000000000012e69d : cmp edx, esi ; je 0x12e6ac ; ret
0x00000000000a6e88 : cmp edx, esi ; je 0xa6e84 ; ret
0x00000000000bb42d : cmp edx, esi ; je 0xbb43c ; ret
0x00000000000bc6b6 : cmp edx, esi ; je 0xbc6c5 ; test edx, edx ; jne 0xbc6b7 ; ret
0x00000000000bc6b6 : cmp edx, esi ; je 0xbc6c6 ; test edx, edx ; jne 0xbc6b8 ; ret
0x0000000000087642 : cmp esi, -1 ; setne al ; neg eax ; ret
0x000000000013b44e : cmp esi, 0x80 ; cmovb eax, edx ; ret
0x000000000002e44c : cmp esi, 0x8948ffff ; retf
0x000000000009b03b : cmp esi, 0x8949ffff ; add al, 0x24 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dba80 : cmp esi, 1 ; je 0xdba97 ; xor eax, eax ; ret
0x000000000008c2a9 : cmp esi, 2 ; cmove edx, ecx ; mov dword ptr [rdi], edx ; ret
0x0000000000155d7c : cmp esi, 2 ; je 0x155d65 ; jmp 0x155d4c
0x00000000000314b4 : cmp esi, 3 ; je 0x314c5 ; ret
0x0000000000112455 : cmp esi, 9 ; je 0x11248a ; mov eax, 0x48 ; syscall
0x00000000001124e4 : cmp esi, 9 ; je 0x11251a ; mov eax, 0x48 ; syscall
0x000000000009cfb5 : cmp esi, 9 ; mov edx, 0xffffffff ; cmovbe eax, edx ; ret
0x000000000009f7cd : cmp esi, dword ptr [rax + rbx - 0x17] ; ret
0x000000000018a630 : cmp esi, dword ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x0000000000049fe1 : cmp esi, dword ptr [rbp + rdx + 0xc8b4800] ; ret 0x8b49
0x000000000012c737 : cmp esi, dword ptr [rdi + 0x2e] ; mov eax, 0xe3 ; syscall
0x0000000000148002 : cmp esi, dword ptr [rdx + 0x28] ; ja 0x147ff9 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x00000000001890e5 : cmp esi, dword ptr [rdx + 5] ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000018a35b : cmp esi, dword ptr [rdx + rcx] ; jne 0x18a101 ; vzeroupper ; ret
0x0000000000105734 : cmp esi, ebx ; ja 0x1056cd ; jmp 0x10570a
0x000000000008731a : cmp esi, ecx ; jb 0x87317 ; lea eax, [rdx + rdi] ; ret
0x000000000005c04a : cmp esi, edi ; cmovb rax, rdi ; ret
0x000000000010494a : cmp esi, esi ; ret 0xf02
0x0000000000039c42 : cmp esp, edx ; ja 0x39c27 ; mov byte ptr [rdi], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a00ef : cmp qword ptr [r12], 0 ; je 0xa0113 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000869b7 : cmp qword ptr [rax + 0x30], 0 ; je 0x869c7 ; ret
0x0000000000151eb5 : cmp qword ptr [rax], rbp ; je 0x151ec9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010624d : cmp qword ptr [rbp], rbx ; je 0x1062b3 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001484f1 : cmp qword ptr [rbx + 0x50], rcx ; jbe 0x148542 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008c193 : cmp qword ptr [rdi + 0x18], 0 ; setne al ; ret
0x0000000000091060 : cmp qword ptr [rdi + 0x38], 0 ; je 0x91077 ; ret
0x00000000000840f0 : cmp qword ptr [rdi + 0x48], 0 ; je 0x840b9 ; call 0x90b89
0x000000000009cb7a : cmp qword ptr [rdi + 8], rsi ; jb 0x9cb91 ; mov qword ptr [rdi], rsi ; ret
0x000000000012b767 : cmp qword ptr [rdi], 0 ; je 0x12b77e ; ret
0x00000000000898ad : cmp qword ptr [rdx + 0x48], r8 ; cmovne eax, ecx ; ret
0x000000000002643a : cmp qword ptr [rdx + 0xd8], rax ; jne 0x26410 ; ret
0x000000000009bea0 : cmp qword ptr [rip + 0x14b7c8], 0 ; je 0x9beba ; ret
0x000000000011831c : cmp qword ptr [rsi], 0 ; mov rbx, rsi ; je 0x11833a ; pop rbx ; ret
0x000000000009d82c : cmp r10, rax ; jb 0x9d843 ; mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x000000000009f62c : cmp r10, rax ; jb 0x9f643 ; mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x0000000000083ad5 : cmp r10b, byte ptr [r14] ; add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf
0x0000000000091adb : cmp r11b, bpl ; movabs dword ptr [0xffffffffc0c74890], eax ; ret
0x000000000012bdf5 : cmp r11d, 0xa ; je 0x12be02 ; ret
0x000000000013df94 : cmp r11d, r9d ; jg 0x13df57 ; mov byte ptr [r10], 0 ; ret
0x0000000000039c41 : cmp r12, rdx ; ja 0x39c28 ; mov byte ptr [rdi], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000189e4a : cmp r12b, byte ptr [rax] ; jne 0x189c9d ; vzeroupper ; ret
0x0000000000105733 : cmp r14, rbx ; ja 0x1056ce ; jmp 0x10570b
0x000000000012687b : cmp r14b, al ; add cl, byte ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001268d0 : cmp r14b, al ; add dword ptr [rax], esp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011a36b : cmp r15, rdi ; jae 0x11a39c ; mov rsi, rbx ; mov rdi, r13 ; call r14
0x000000000013aca9 : cmp r15d, 0xb ; mov edx, 0x104 ; cmove eax, edx ; ret
0x000000000005691f : cmp r8, -8 ; jne 0x56919 ; mov rax, rdx ; ret
0x00000000000e34e5 : cmp r8, 0x58465342 ; jne 0xe34f9 ; ret
0x0000000000048bc7 : cmp r8, r9 ; jb 0x48bac ; xor eax, eax ; ret
0x00000000000a6f0c : cmp r8d, ecx ; je 0xa6ef5 ; ret
0x00000000000cdac6 : cmp r8d, ecx ; jne 0xcdae3 ; test ecx, ecx ; je 0xcdae3 ; xor eax, eax ; ret
0x00000000000a6fa1 : cmp r8d, edx ; setne dil ; test r9b, dil ; jne 0xa6f94 ; ret
0x00000000000a6e4a : cmp r8d, esi ; setne r9b ; test r10b, r9b ; jne 0xa6e3c ; ret
0x00000000000a22be : cmp r9, -1 ; cmove r9, rcx ; jmp 0xa229b
0x00000000000a6178 : cmp r9b, r10b ; jb 0xa60e0 ; mov rdx, rax ; jmp 0xa612d
0x00000000000792bd : cmp r9d, ecx ; jg 0x792dc ; add r9d, edx ; mov rax, r10 ; jmp 0x792a0
0x000000000010b317 : cmp rax, -0x1000 ; ja 0x10b380 ; ret
0x000000000010b3c7 : cmp rax, -0x1000 ; ja 0x10b430 ; ret
0x000000000010c5c5 : cmp rax, -0x1000 ; ja 0x10c5d8 ; ret
0x000000000010c613 : cmp rax, -0x1000 ; ja 0x10c628 ; ret
0x000000000010c665 : cmp rax, -0x1000 ; ja 0x10c678 ; ret
0x000000000010c8ad : cmp rax, -0x1000 ; ja 0x10c8c8 ; ret
0x000000000010c911 : cmp rax, -0x1000 ; ja 0x10c928 ; ret
0x000000000010c969 : cmp rax, -0x1000 ; ja 0x10c980 ; ret
0x000000000010cb94 : cmp rax, -0x1000 ; ja 0x10cba8 ; ret
0x000000000010cf81 : cmp rax, -0x1000 ; ja 0x10cfe8 ; ret
0x000000000010d024 : cmp rax, -0x1000 ; ja 0x10d088 ; ret
0x000000000010d0b7 : cmp rax, -0x1000 ; ja 0x10d0c8 ; ret
0x000000000010d0e7 : cmp rax, -0x1000 ; ja 0x10d0f8 ; ret
0x000000000010d674 : cmp rax, -0x1000 ; ja 0x10d6c0 ; ret
0x000000000010d7e4 : cmp rax, -0x1000 ; ja 0x10d838 ; ret
0x00000000001116f4 : cmp rax, -0x1000 ; ja 0x111758 ; ret
0x00000000001121af : cmp rax, -0x1000 ; ja 0x1121c8 ; ret
0x0000000000112203 : cmp rax, -0x1000 ; ja 0x112218 ; ret
0x00000000001122c7 : cmp rax, -0x1000 ; ja 0x112330 ; ret
0x0000000000112367 : cmp rax, -0x1000 ; ja 0x1123c8 ; ret
0x00000000001123f7 : cmp rax, -0x1000 ; ja 0x112408 ; ret
0x0000000000112557 : cmp rax, -0x1000 ; ja 0x112568 ; ret
0x00000000001126c7 : cmp rax, -0x1000 ; ja 0x1126d8 ; ret
0x00000000001126f4 : cmp rax, -0x1000 ; ja 0x112708 ; ret
0x000000000011272a : cmp rax, -0x1000 ; ja 0x112740 ; ret
0x0000000000112757 : cmp rax, -0x1000 ; ja 0x112768 ; ret
0x0000000000112c0e : cmp rax, -0x1000 ; ja 0x112c68 ; ret
0x0000000000112df0 : cmp rax, -0x1000 ; ja 0x112e08 ; ret
0x0000000000112e31 : cmp rax, -0x1000 ; ja 0x112e48 ; ret
0x0000000000113454 : cmp rax, -0x1000 ; ja 0x1134b8 ; ret
0x00000000001134f4 : cmp rax, -0x1000 ; ja 0x113558 ; ret
0x000000000011359a : cmp rax, -0x1000 ; ja 0x113608 ; ret
0x000000000011364a : cmp rax, -0x1000 ; ja 0x1136b8 ; ret
0x0000000000114007 : cmp rax, -0x1000 ; ja 0x114078 ; ret
0x0000000000114224 : cmp rax, -0x1000 ; ja 0x114270 ; ret
0x00000000001142d4 : cmp rax, -0x1000 ; ja 0x114320 ; ret
0x0000000000114383 : cmp rax, -0x1000 ; ja 0x114398 ; ret
0x00000000001158f7 : cmp rax, -0x1000 ; ja 0x115908 ; ret
0x0000000000115adc : cmp rax, -0x1000 ; ja 0x115af0 ; ret
0x0000000000115b17 : cmp rax, -0x1000 ; ja 0x115b28 ; ret
0x0000000000115b47 : cmp rax, -0x1000 ; ja 0x115b58 ; ret
0x00000000001175d4 : cmp rax, -0x1000 ; ja 0x117638 ; ret
0x000000000011ad7e : cmp rax, -0x1000 ; ja 0x11ad98 ; ret
0x000000000011db87 : cmp rax, -0x1000 ; ja 0x11db98 ; ret
0x000000000011dc2d : cmp rax, -0x1000 ; ja 0x11dcb0 ; ret
0x000000000011dcdf : cmp rax, -0x1000 ; ja 0x11dcf8 ; ret
0x000000000011de07 : cmp rax, -0x1000 ; ja 0x11de70 ; ret
0x000000000011dea7 : cmp rax, -0x1000 ; ja 0x11df10 ; ret
0x000000000011df57 : cmp rax, -0x1000 ; ja 0x11dfc0 ; ret
0x000000000011e007 : cmp rax, -0x1000 ; ja 0x11e088 ; ret
0x000000000011e0c4 : cmp rax, -0x1000 ; ja 0x11e128 ; ret
0x000000000011e1df : cmp rax, -0x1000 ; ja 0x11e1f8 ; ret
0x000000000011ea54 : cmp rax, -0x1000 ; ja 0x11eab8 ; ret
0x000000000011eb24 : cmp rax, -0x1000 ; ja 0x11eb88 ; ret
0x000000000011ec8d : cmp rax, -0x1000 ; ja 0x11ed08 ; ret
0x000000000011ed47 : cmp rax, -0x1000 ; ja 0x11edc8 ; ret
0x000000000011ee04 : cmp rax, -0x1000 ; ja 0x11ee68 ; ret
0x000000000011eead : cmp rax, -0x1000 ; ja 0x11ef28 ; ret
0x000000000011ef64 : cmp rax, -0x1000 ; ja 0x11efc8 ; ret
0x000000000011f007 : cmp rax, -0x1000 ; ja 0x11f088 ; ret
0x000000000011f457 : cmp rax, -0x1000 ; ja 0x11f4c0 ; ret
0x000000000011f4f7 : cmp rax, -0x1000 ; ja 0x11f568 ; ret
0x000000000011f5a7 : cmp rax, -0x1000 ; ja 0x11f610 ; ret
0x000000000011f727 : cmp rax, -0x1000 ; ja 0x11f790 ; ret
0x000000000011f7c7 : cmp rax, -0x1000 ; ja 0x11f838 ; ret
0x000000000011f867 : cmp rax, -0x1000 ; ja 0x11f878 ; ret
0x000000000011f897 : cmp rax, -0x1000 ; ja 0x11f8a8 ; ret
0x000000000011f8c7 : cmp rax, -0x1000 ; ja 0x11f8d8 ; ret
0x000000000011f8f7 : cmp rax, -0x1000 ; ja 0x11f908 ; ret
0x000000000011f9ca : cmp rax, -0x1000 ; ja 0x11f9e0 ; ret
0x000000000011f9f7 : cmp rax, -0x1000 ; ja 0x11fa08 ; ret
0x000000000011fa27 : cmp rax, -0x1000 ; ja 0x11fa38 ; ret
0x000000000011fa5a : cmp rax, -0x1000 ; ja 0x11fa70 ; ret
0x000000000011fa87 : cmp rax, -0x1000 ; ja 0x11fa98 ; ret
0x000000000012c697 : cmp rax, -0x1000 ; ja 0x12c6a8 ; ret
0x000000000012c741 : cmp rax, -0x1000 ; ja 0x12c758 ; ret
0x000000000012e009 : cmp rax, -0x1000 ; ja 0x12e020 ; ret
0x000000000004417d : cmp rax, -0x1000 ; ja 0x44198 ; ret
0x00000000000441ec : cmp rax, -0x1000 ; ja 0x44200 ; ret
0x0000000000044229 : cmp rax, -0x1000 ; ja 0x44280 ; ret
0x0000000000048af4 : cmp rax, -0x1000 ; ja 0x48b58 ; ret
0x0000000000063a17 : cmp rax, -0x1000 ; ja 0x63a28 ; ret
0x0000000000063a4a : cmp rax, -0x1000 ; ja 0x63a60 ; ret
0x00000000000cf787 : cmp rax, -0x1000 ; ja 0xcf798 ; ret
0x00000000000dc9c7 : cmp rax, -0x1000 ; ja 0xdc9d8 ; ret
0x00000000000e12f1 : cmp rax, -0x1000 ; ja 0xe1350 ; ret
0x00000000000e1387 : cmp rax, -0x1000 ; ja 0xe13e8 ; ret
0x00000000000e147a : cmp rax, -0x1000 ; ja 0xe14e8 ; ret
0x00000000000e15c4 : cmp rax, -0x1000 ; ja 0xe1608 ; ret
0x00000000000e1644 : cmp rax, -0x1000 ; ja 0xe1698 ; ret
0x00000000001017a7 : cmp rax, -0xfff ; jae 0x1017b8 ; ret
0x00000000001017d7 : cmp rax, -0xfff ; jae 0x1017e8 ; ret
0x0000000000101807 : cmp rax, -0xfff ; jae 0x101818 ; ret
0x0000000000101837 : cmp rax, -0xfff ; jae 0x101848 ; ret
0x0000000000101867 : cmp rax, -0xfff ; jae 0x101878 ; ret
0x0000000000101897 : cmp rax, -0xfff ; jae 0x1018a8 ; ret
0x00000000001018c7 : cmp rax, -0xfff ; jae 0x1018d8 ; ret
0x00000000001018f7 : cmp rax, -0xfff ; jae 0x101908 ; ret
0x000000000010c4e7 : cmp rax, -0xfff ; jae 0x10c4f8 ; ret
0x000000000010c9b7 : cmp rax, -0xfff ; jae 0x10c9c8 ; ret
0x000000000010c9e7 : cmp rax, -0xfff ; jae 0x10c9f8 ; ret
0x000000000010cb07 : cmp rax, -0xfff ; jae 0x10cb18 ; ret
0x000000000010cb37 : cmp rax, -0xfff ; jae 0x10cb48 ; ret
0x000000000010cbf7 : cmp rax, -0xfff ; jae 0x10cc08 ; ret
0x000000000010cc27 : cmp rax, -0xfff ; jae 0x10cc38 ; ret
0x000000000010d517 : cmp rax, -0xfff ; jae 0x10d528 ; ret
0x000000000010d6e7 : cmp rax, -0xfff ; jae 0x10d6f8 ; ret
0x000000000010d717 : cmp rax, -0xfff ; jae 0x10d728 ; ret
0x000000000010d747 : cmp rax, -0xfff ; jae 0x10d758 ; ret
0x000000000010d777 : cmp rax, -0xfff ; jae 0x10d788 ; ret
0x000000000010d7a7 : cmp rax, -0xfff ; jae 0x10d7b8 ; ret
0x000000000010d867 : cmp rax, -0xfff ; jae 0x10d878 ; ret
0x000000000010d897 : cmp rax, -0xfff ; jae 0x10d8a8 ; ret
0x000000000010e157 : cmp rax, -0xfff ; jae 0x10e168 ; ret
0x000000000010e187 : cmp rax, -0xfff ; jae 0x10e198 ; ret
0x000000000010e1b7 : cmp rax, -0xfff ; jae 0x10e1c8 ; ret
0x000000000010e1ea : cmp rax, -0xfff ; jae 0x10e1fb ; ret
0x000000000010e9a7 : cmp rax, -0xfff ; jae 0x10e9b8 ; ret
0x000000000010e9da : cmp rax, -0xfff ; jae 0x10e9eb ; ret
0x000000000010ea07 : cmp rax, -0xfff ; jae 0x10ea18 ; ret
0x000000000010ea37 : cmp rax, -0xfff ; jae 0x10ea48 ; ret
0x000000000010ea67 : cmp rax, -0xfff ; jae 0x10ea78 ; ret
0x000000000010ea9a : cmp rax, -0xfff ; jae 0x10eaab ; ret
0x000000000010eac7 : cmp rax, -0xfff ; jae 0x10ead8 ; ret
0x000000000010eaf7 : cmp rax, -0xfff ; jae 0x10eb08 ; ret
0x000000000010eb27 : cmp rax, -0xfff ; jae 0x10eb38 ; ret
0x0000000000111d5a : cmp rax, -0xfff ; jae 0x111d6b ; ret
0x0000000000112e67 : cmp rax, -0xfff ; jae 0x112e78 ; ret
0x0000000000113257 : cmp rax, -0xfff ; jae 0x113268 ; ret
0x0000000000113417 : cmp rax, -0xfff ; jae 0x113428 ; ret
0x0000000000113e77 : cmp rax, -0xfff ; jae 0x113e88 ; ret
0x0000000000113fc7 : cmp rax, -0xfff ; jae 0x113fd8 ; ret
0x00000000001141b7 : cmp rax, -0xfff ; jae 0x1141c8 ; ret
0x00000000001141e7 : cmp rax, -0xfff ; jae 0x1141f8 ; ret
0x0000000000114297 : cmp rax, -0xfff ; jae 0x1142a8 ; ret
0x0000000000114347 : cmp rax, -0xfff ; jae 0x114358 ; ret
0x0000000000114677 : cmp rax, -0xfff ; jae 0x114688 ; ret
0x00000000001146a7 : cmp rax, -0xfff ; jae 0x1146b8 ; ret
0x00000000001146d7 : cmp rax, -0xfff ; jae 0x1146e8 ; ret
0x00000000001172e9 : cmp rax, -0xfff ; jae 0x1172fa ; ret
0x0000000000117567 : cmp rax, -0xfff ; jae 0x117578 ; ret
0x0000000000117597 : cmp rax, -0xfff ; jae 0x1175a8 ; ret
0x0000000000117667 : cmp rax, -0xfff ; jae 0x117678 ; ret
0x0000000000117697 : cmp rax, -0xfff ; jae 0x1176a8 ; ret
0x00000000001176ca : cmp rax, -0xfff ; jae 0x1176db ; ret
0x00000000001176f7 : cmp rax, -0xfff ; jae 0x117708 ; ret
0x0000000000117727 : cmp rax, -0xfff ; jae 0x117738 ; ret
0x0000000000117757 : cmp rax, -0xfff ; jae 0x117768 ; ret
0x0000000000117787 : cmp rax, -0xfff ; jae 0x117798 ; ret
0x000000000011b7ca : cmp rax, -0xfff ; jae 0x11b7db ; ret
0x000000000011b7f7 : cmp rax, -0xfff ; jae 0x11b808 ; ret
0x000000000011b827 : cmp rax, -0xfff ; jae 0x11b838 ; ret
0x000000000011b85a : cmp rax, -0xfff ; jae 0x11b86b ; ret
0x000000000011b88a : cmp rax, -0xfff ; jae 0x11b89b ; ret
0x000000000011b8b7 : cmp rax, -0xfff ; jae 0x11b8c8 ; ret
0x000000000011b8ea : cmp rax, -0xfff ; jae 0x11b8fb ; ret
0x000000000011b917 : cmp rax, -0xfff ; jae 0x11b928 ; ret
0x000000000011b947 : cmp rax, -0xfff ; jae 0x11b958 ; ret
0x000000000011b97a : cmp rax, -0xfff ; jae 0x11b98b ; ret
0x000000000011b9a7 : cmp rax, -0xfff ; jae 0x11b9b8 ; ret
0x000000000011b9da : cmp rax, -0xfff ; jae 0x11b9eb ; ret
0x000000000011d9e7 : cmp rax, -0xfff ; jae 0x11d9f8 ; ret
0x000000000011da17 : cmp rax, -0xfff ; jae 0x11da28 ; ret
0x000000000011db57 : cmp rax, -0xfff ; jae 0x11db68 ; ret
0x000000000011dbb7 : cmp rax, -0xfff ; jae 0x11dbc8 ; ret
0x000000000011dbe7 : cmp rax, -0xfff ; jae 0x11dbf8 ; ret
0x000000000011dd17 : cmp rax, -0xfff ; jae 0x11dd28 ; ret
0x000000000011dd9a : cmp rax, -0xfff ; jae 0x11ddab ; ret
0x000000000011ddc7 : cmp rax, -0xfff ; jae 0x11ddd8 ; ret
0x000000000011e297 : cmp rax, -0xfff ; jae 0x11e2a8 ; ret
0x000000000011e2c7 : cmp rax, -0xfff ; jae 0x11e2d8 ; ret
0x000000000011e30a : cmp rax, -0xfff ; jae 0x11e31b ; ret
0x000000000011e337 : cmp rax, -0xfff ; jae 0x11e348 ; ret
0x000000000011e367 : cmp rax, -0xfff ; jae 0x11e378 ; ret
0x000000000011e397 : cmp rax, -0xfff ; jae 0x11e3a8 ; ret
0x000000000011e3c7 : cmp rax, -0xfff ; jae 0x11e3d8 ; ret
0x000000000011e3f7 : cmp rax, -0xfff ; jae 0x11e408 ; ret
0x000000000011e427 : cmp rax, -0xfff ; jae 0x11e438 ; ret
0x000000000011e457 : cmp rax, -0xfff ; jae 0x11e468 ; ret
0x000000000011e487 : cmp rax, -0xfff ; jae 0x11e498 ; ret
0x000000000011e4ba : cmp rax, -0xfff ; jae 0x11e4cb ; ret
0x000000000011e4e7 : cmp rax, -0xfff ; jae 0x11e4f8 ; ret
0x000000000011e51a : cmp rax, -0xfff ; jae 0x11e52b ; ret
0x000000000011e547 : cmp rax, -0xfff ; jae 0x11e558 ; ret
0x000000000011e577 : cmp rax, -0xfff ; jae 0x11e588 ; ret
0x000000000011e5a7 : cmp rax, -0xfff ; jae 0x11e5b8 ; ret
0x000000000011e5d7 : cmp rax, -0xfff ; jae 0x11e5e8 ; ret
0x000000000011e607 : cmp rax, -0xfff ; jae 0x11e618 ; ret
0x000000000011e63a : cmp rax, -0xfff ; jae 0x11e64b ; ret
0x000000000011e66a : cmp rax, -0xfff ; jae 0x11e67b ; ret
0x000000000011e697 : cmp rax, -0xfff ; jae 0x11e6a8 ; ret
0x000000000011e6c7 : cmp rax, -0xfff ; jae 0x11e6d8 ; ret
0x000000000011e6fa : cmp rax, -0xfff ; jae 0x11e70b ; ret
0x000000000011e72a : cmp rax, -0xfff ; jae 0x11e73b ; ret
0x000000000011e75a : cmp rax, -0xfff ; jae 0x11e76b ; ret
0x000000000011e787 : cmp rax, -0xfff ; jae 0x11e798 ; ret
0x000000000011e7b7 : cmp rax, -0xfff ; jae 0x11e7c8 ; ret
0x000000000011e7e7 : cmp rax, -0xfff ; jae 0x11e7f8 ; ret
0x000000000011e817 : cmp rax, -0xfff ; jae 0x11e828 ; ret
0x000000000011e84a : cmp rax, -0xfff ; jae 0x11e85b ; ret
0x000000000011e877 : cmp rax, -0xfff ; jae 0x11e888 ; ret
0x000000000011e8a7 : cmp rax, -0xfff ; jae 0x11e8b8 ; ret
0x000000000011e8da : cmp rax, -0xfff ; jae 0x11e8eb ; ret
0x000000000011e907 : cmp rax, -0xfff ; jae 0x11e918 ; ret
0x000000000011e93a : cmp rax, -0xfff ; jae 0x11e94b ; ret
0x000000000011e96a : cmp rax, -0xfff ; jae 0x11e97b ; ret
0x000000000011e997 : cmp rax, -0xfff ; jae 0x11e9a8 ; ret
0x000000000011e9c7 : cmp rax, -0xfff ; jae 0x11e9d8 ; ret
0x000000000011e9f7 : cmp rax, -0xfff ; jae 0x11ea08 ; ret
0x000000000011eae7 : cmp rax, -0xfff ; jae 0x11eaf8 ; ret
0x000000000011ebb7 : cmp rax, -0xfff ; jae 0x11ebc8 ; ret
0x000000000011ebe7 : cmp rax, -0xfff ; jae 0x11ebf8 ; ret
0x000000000011ec1a : cmp rax, -0xfff ; jae 0x11ec2b ; ret
0x000000000011ec47 : cmp rax, -0xfff ; jae 0x11ec58 ; ret
0x000000000011f0ba : cmp rax, -0xfff ; jae 0x11f0cb ; ret
0x000000000011f0e7 : cmp rax, -0xfff ; jae 0x11f0f8 ; ret
0x000000000011f117 : cmp rax, -0xfff ; jae 0x11f128 ; ret
0x000000000011f14a : cmp rax, -0xfff ; jae 0x11f15b ; ret
0x000000000015a8fa : cmp rax, -0xfff ; jae 0x15a90b ; ret
0x000000000015a94a : cmp rax, -0xfff ; jae 0x15a95b ; ret
0x00000000000441b7 : cmp rax, -0xfff ; jae 0x441c8 ; ret
0x0000000000044767 : cmp rax, -0xfff ; jae 0x44778 ; ret
0x0000000000055de1 : cmp rax, -0xfff ; jae 0x55df6 ; xor eax, eax ; ret
0x00000000000cf867 : cmp rax, -0xfff ; jae 0xcf878 ; ret
0x00000000000d2987 : cmp rax, -0xfff ; jae 0xd2998 ; ret
0x00000000000d29b7 : cmp rax, -0xfff ; jae 0xd29c8 ; ret
0x00000000000e1247 : cmp rax, -0xfff ; jae 0xe1258 ; ret
0x00000000000e143a : cmp rax, -0xfff ; jae 0xe144b ; ret
0x00000000000e1517 : cmp rax, -0xfff ; jae 0xe1528 ; ret
0x00000000000e1957 : cmp rax, -0xfff ; jae 0xe1968 ; ret
0x00000000000e2747 : cmp rax, -0xfff ; jae 0xe2758 ; ret
0x00000000000e2947 : cmp rax, -0xfff ; jae 0xe2958 ; ret
0x00000000000e2977 : cmp rax, -0xfff ; jae 0xe2988 ; ret
0x00000000000e29d7 : cmp rax, -0xfff ; jae 0xe29e8 ; ret
0x00000000000e2a07 : cmp rax, -0xfff ; jae 0xe2a18 ; ret
0x00000000000e2a37 : cmp rax, -0xfff ; jae 0xe2a48 ; ret
0x00000000000e2a67 : cmp rax, -0xfff ; jae 0xe2a78 ; ret
0x00000000000a28dd : cmp rax, -1 ; cmove rax, r13 ; jmp 0xa28b2
0x000000000009aa9e : cmp rax, -1 ; cmove rax, rdx ; add rsp, 8 ; ret
0x0000000000093523 : cmp rax, 0x2000000 ; jbe 0x93538 ; ret
0x00000000000a02b9 : cmp rax, 1 ; ja 0xa02a2 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008ea04 : cmp rax, qword ptr [rdi + 0x10] ; jae 0x8ea19 ; movzx eax, byte ptr [rax] ; ret
0x0000000000086317 : cmp rax, rcx ; cmovg rax, rcx ; test rdx, rdx ; jne 0x8631c ; ret
0x0000000000090877 : cmp rax, rcx ; cmovg rax, rcx ; test rdx, rdx ; jne 0x9087c ; ret
0x00000000000cdc86 : cmp rax, rcx ; ja 0xcdcac ; sub rdi, 0x10 ; add rax, rdi ; ret
0x000000000005c0e2 : cmp rax, rdi ; pop rbx ; cmovb rax, rdi ; ret
0x0000000000092a8a : cmp rax, rdx ; jae 0x92ab8 ; movzx eax, byte ptr [rax] ; ret
0x000000000012b6ea : cmp rax, rdx ; jb 0x12b6e7 ; xor eax, eax ; ret
0x000000000012b6e9 : cmp rax, rdx ; jb 0x12b6e8 ; xor eax, eax ; ret
0x00000000001519f8 : cmp rax, rdx ; je 0x151a9a ; pop rbx ; ret
0x0000000000125d88 : cmp rax, rsi ; jb 0x125da2 ; mov eax, 1 ; ret
0x00000000000a0086 : cmp rbp, rax ; jbe 0xa00ae ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010c355 : cmp rbp, rbx ; ja 0x10c34c ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dbf34 : cmp rbx, r12 ; jne 0xdbf29 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000097964 : cmp rbx, rax ; jb 0x97954 ; mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x0000000000098174 : cmp rbx, rax ; jb 0x98164 ; mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x0000000000098744 : cmp rbx, rax ; jb 0x98734 ; mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x000000000005522a : cmp rbx, rax ; jne 0x55226 ; pop rbx ; ret
0x000000000010b6f7 : cmp rbx, rax ; pop rbx ; setl al ; ret
0x0000000000196754 : cmp rbx, rbp ; jne 0x196753 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c65fd : cmp rcx, -1 ; cmove rcx, rdi ; jmp 0xc65da
0x00000000000571ab : cmp rcx, -1 ; jne 0x571a9 ; mov rax, rdx ; ret
0x000000000009f534 : cmp rcx, 0xd ; je 0x9f548 ; xor byte ptr [rdx + 0xe], 0x2a ; ret
0x00000000000bb453 : cmp rcx, 4 ; cmovne rax, rdx ; ret
0x000000000015d950 : cmp rcx, qword ptr [rdx + 0x28] ; jae 0x15d93b ; mov eax, 1 ; ret
0x0000000000087c90 : cmp rcx, rax ; jb 0x87c40 ; test dh, 8 ; jne 0x87c40 ; jmp 0x87c6a
0x000000000018c4aa : cmp rcx, rax ; jne 0x18c4da ; xor eax, eax ; ret
0x000000000018ba9e : cmp rcx, rax ; jne 0x18c4de ; xor eax, eax ; ret
0x000000000018d2ea : cmp rcx, rax ; jne 0x18d31a ; xor eax, eax ; ret
0x000000000018d0ce : cmp rcx, rax ; jne 0x18d31e ; xor eax, eax ; ret
0x00000000000568c7 : cmp rcx, rax ; sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x000000000011f683 : cmp rcx, rdx ; mov edx, 0 ; cmovb rax, rdx ; ret
0x000000000010eb6f : cmp rcx, rdx ; seta al ; sbb eax, 0 ; ret
0x0000000000091c29 : cmp rcx, rsi ; jne 0x91c28 ; lea eax, [rdx + rdi] ; ret
0x000000000005c2ca : cmp rdi, 0xf ; ja 0x5c2b9 ; mov rax, rsi ; ret
0x000000000005c2f2 : cmp rdi, 7 ; ja 0x5c2e1 ; mov rax, rsi ; ret
0x000000000005c335 : cmp rdi, 9 ; ja 0x5c319 ; mov rax, rsi ; ret
0x000000000005c2a5 : cmp rdi, r8 ; jae 0x5c298 ; mov rax, rsi ; ret
0x000000000005c041 : cmp rdi, r8 ; jbe 0x5c03e ; pop rbx ; ret
0x0000000000113309 : cmp rdi, rax ; ja 0x11333f ; xor eax, eax ; ret
0x000000000011ad72 : cmp rdi, rax ; jne 0x11adb2 ; mov eax, 0x88 ; syscall
0x00000000000ba066 : cmp rdi, rdx ; jb 0xba075 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000011ba34 : cmp rdi, rdx ; jne 0x11ba31 ; mov rax, qword ptr [rax + 8] ; ret
0x000000000010c30f : cmp rdi, rsi ; ja 0x10c305 ; ret
0x000000000012c3a2 : cmp rdi, rsi ; sete al ; ret
0x0000000000082bd2 : cmp rdx, -1 ; je 0x82c1b ; mov rax, rdx ; pop rbx ; ret
0x000000000008be22 : cmp rdx, -1 ; je 0x8be6b ; mov rax, rdx ; pop rbx ; ret
0x00000000000e372a : cmp rdx, 0x2f ; setne al ; ret
0x00000000000e36d5 : cmp rdx, 0x414a53 ; setne al ; ret
0x00000000000e36eb : cmp rdx, 0x5346544e ; setne al ; ret
0x00000000000e3718 : cmp rdx, 0x7275 ; setne al ; ret
0x0000000000098899 : cmp rdx, r8 ; jne 0x98865 ; ret
0x00000000000baecd : cmp rdx, r8 ; jne 0xbaec4 ; mov dword ptr [rcx + 4], 0 ; ret
0x000000000015e90a : cmp rdx, rax ; ja 0x15e907 ; xor eax, eax ; ret
0x0000000000182114 : cmp rdx, rax ; jbe 0x18218b ; add rax, rdi ; vzeroupper ; ret
0x0000000000189b74 : cmp rdx, rax ; jbe 0x189beb ; add rax, rdi ; vzeroupper ; ret
0x000000000013a915 : cmp rdx, rax ; sbb eax, eax ; ret
0x000000000012e000 : cmp rdx, rcx ; ja 0x12e033 ; xor eax, eax ; syscall
0x0000000000087568 : cmp rdx, rcx ; jae 0x87576 ; mov eax, dword ptr [rdx] ; ret
0x00000000001895b1 : cmp rdx, rcx ; jne 0x18959f ; vzeroupper ; ret
0x000000000018e444 : cmp rdx, rcx ; jne 0x18e42a ; vzeroupper ; ret
0x00000000000ba52a : cmp rdx, rcx ; jne 0xba519 ; ret
0x00000000000ba529 : cmp rdx, rcx ; jne 0xba51a ; ret
0x000000000012b7cd : cmp rdx, rdi ; setae al ; ret
0x000000000012e69c : cmp rdx, rsi ; je 0x12e6ad ; ret
0x00000000000bb42c : cmp rdx, rsi ; je 0xbb43d ; ret
0x0000000000148001 : cmp rsi, qword ptr [rdx + 0x28] ; ja 0x147ffa ; mov qword ptr [rdx + 0x20], rsi ; ret
0x0000000000087319 : cmp rsi, rcx ; jb 0x87318 ; lea eax, [rdx + rdi] ; ret
0x000000000005c049 : cmp rsi, rdi ; cmovb rax, rdi ; ret
0x0000000000127bb6 : cmp sil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x0000000000185b20 : cmp sil, byte ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x0000000000127c27 : cmp sil, cl ; cmovne eax, edx ; ret
0x00000000000a4680 : cmp sil, cl ; jb 0xa45d0 ; mov rdx, rax ; jmp 0xa463c
0x00000000001845c7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001848c7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001857c7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000e6706 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001854c7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x000000000018bf29 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x0000000000191116 : cmpsb byte ptr [rsi], byte ptr [rdi] ; idiv bh ; jmp qword ptr [rsi + 0xf]
0x000000000009e759 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, 0 ; cmovne rax, rdx ; ret
0x000000000017e6e6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001851c7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000184ec7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000105876 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000000000098099 : cmpsb byte ptr [rsi], byte ptr [rdi] ; retf
0x000000000003d416 : cmpsb byte ptr [rsi], byte ptr [rdi] ; retf 0xffff
0x0000000000026c74 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sbb byte ptr [rax], al ; ret
0x00000000000e15d6 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add al, 0 ; mov edi, eax ; mov eax, 0x22 ; syscall
0x0000000000151c7d : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 5], cl ; test al, 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000e6615 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000163fd5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add rax, 0x14634900 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000b2810 : cmpsd dword ptr [rsi], dword ptr [rdi] ; and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000166d95 : cmpsd dword ptr [rsi], dword ptr [rdi] ; and al, byte ptr [rip + 0x14634900] ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000087f11 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000027855 : cmpsd dword ptr [rsi], dword ptr [rdi] ; fdivr st(7) ; inc dword ptr [rbp - 0x7cfc8a40] ; retf
0x0000000000138397 : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov ebp, 0xfffffffe ; jmp 0x138369
0x0000000000146cd5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xfff1
0x0000000000117c7f : comisd xmm1, xmm4 ; jae 0x117c79 ; divsd xmm0, xmm2 ; jmp 0x117ce3
0x0000000000117c80 : comiss xmm1, xmm4 ; jae 0x117c78 ; divsd xmm0, xmm2 ; jmp 0x117ce2
0x000000000009d4ad : cpuid ; adc al, 0 ; mov qword ptr [rip + 0x14a1f0], rax ; ret
0x00000000000ba5dc : cpuid ; jmp 0xba5a6
0x0000000000047c73 : cqo ; idiv rsi ; ret
0x0000000000117da8 : cvtdq2ps xmm1, xmmword ptr [rax - 0x73] ; add eax, 0xd02ef ; pop rbp ; pop r12 ; ret
0x0000000000087f12 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000009bc3c : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 0x19] ; call rax
0x000000000014efc2 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000044fc7 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000004447e : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000a1c88 : cwde ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x8348
0x00000000000a197c : cwde ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x8b48
0x0000000000113f57 : cwde ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000f8074 : cwde ; add dword ptr [rax], eax ; add cl, ch ; ret
0x000000000018a97b : cwde ; bsr eax, eax ; lea rax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x000000000014b27c : cwde ; call 0xffffffffcbfcb290
0x000000000002841d : cwde ; call rax
0x0000000000028e44 : cwde ; mov esi, 0x3a ; call 0x25148
0x0000000000028e43 : cwde ; mov esi, 0x3a ; call 0x25149
0x0000000000048969 : cwde ; mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000163974 : cwde ; or dword ptr [rax], ecx ; add byte ptr [rax + 0x39], cl ; retf 0x8949
0x00000000000c8904 : cwde ; pop qword ptr [rip + 0x75db8500] ; fsubr qword ptr [rcx] ; ret
0x00000000000ebe04 : cwde ; ret 0xc
0x000000000011d484 : cwde ; retf
0x00000000000b9198 : cwde ; sbb eax, 0x634b000f ; or al, 0x83 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000c2f40 : cwde ; sbb eax, 0x89480000 ; retf 0xf66
0x00000000001226b4 : cwde ; sub eax, esi ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000133b75 : cwde ; xor eax, eax ; ret
0x00000000000cfa91 : dec byte ptr [r13 - 0x77] ; retf 0x694d
0x00000000000b3d59 : dec byte ptr [r8 + 0x29] ; ret 0x149
0x00000000000b1d41 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x00000000000b3d5a : dec byte ptr [rax + 0x29] ; ret 0x149
0x00000000000b1d42 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x00000000000563c8 : dec byte ptr [rax + 0x39] ; ret
0x000000000009efc4 : dec byte ptr [rax + 0x39] ; ret 0x4876
0x00000000000562a9 : dec byte ptr [rax + 0x39] ; ret 0x874
0x0000000000056638 : dec byte ptr [rax + 0x39] ; retf
0x0000000000056519 : dec byte ptr [rax + 0x39] ; retf 0x874
0x000000000009c133 : dec byte ptr [rax + 0x63] ; dec byte ptr [rdi] ; adc dword ptr [rbx + 0x38], eax ; mov qword ptr [rbx], rdi ; call rcx
0x000000000018df3d : dec byte ptr [rax + 0x7f] ; jl 0x18df62 ; cld ; vzeroupper ; ret
0x0000000000118816 : dec byte ptr [rax + 9] ; ret
0x000000000009e5a0 : dec byte ptr [rax + rax] ; cmovne rax, rdx ; ret
0x0000000000113fd4 : dec byte ptr [rax + rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000047c64 : dec byte ptr [rax - 0x3f] ; loop 0x47c91 ; or rax, rdx ; ret
0x00000000000f7e33 : dec byte ptr [rax - 0x73] ; add dword ptr [rax + 0x39], ecx ; retf 0x1074
0x000000000015d979 : dec byte ptr [rax - 0x75] ; cmp al, 0x24 ; mov rax, qword ptr [rax + 0x1b0] ; jmp rax
0x000000000011877a : dec byte ptr [rax - 0x75] ; jo 0x118792 ; test sil, 1 ; jne 0x1187ab ; ret
0x000000000005e584 : dec byte ptr [rax - 0x75] ; mov ebp, 0xffffff40 ; call rax
0x0000000000118723 : dec byte ptr [rax - 0x75] ; or byte ptr [r11 + r9*4 + 0x57], r9b ; adc byte ptr [rcx - 0x77], cl ; ret
0x00000000000462d7 : dec byte ptr [rax - 0x77] ; fisttp word ptr [rax - 0x75] ; and al, 8 ; call rax
0x00000000001434ef : dec byte ptr [rax - 0x77] ; fisttp word ptr [rax - 0x77] ; and al, 8 ; call r12
0x000000000009b716 : dec byte ptr [rax - 0x77] ; ret 0x41e8
0x00000000000d4389 : dec byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000d5fc8 : dec byte ptr [rax - 0x77] ; ret 0x8949
0x000000000009b699 : dec byte ptr [rax - 0x77] ; ret 0xbee8
0x0000000000129477 : dec byte ptr [rax - 0x77] ; ret 0xff41
0x00000000000ede88 : dec byte ptr [rax - 0x77] ; retf 0xd349
0x00000000000daed4 : dec byte ptr [rax - 0x7d] ; ret
0x000000000002e85d : dec byte ptr [rax - 0x7d] ; ret 0xf01
0x00000000000cfa92 : dec byte ptr [rbp - 0x77] ; retf 0x694d
0x00000000000f18f8 : dec byte ptr [rcx + 0x21] ; retf 0xf748
0x0000000000120ac7 : dec byte ptr [rcx + rcx*4 + 0x34] ; ret
0x0000000000045500 : dec byte ptr [rcx + rcx*4 - 0x19] ; call rbx
0x000000000010d937 : dec byte ptr [rcx + rcx*4 - 9] ; mov eax, 0x4f ; syscall
0x00000000000e8894 : dec byte ptr [rcx - 0x77] ; ret 0x8b41
0x0000000000080cc6 : dec byte ptr [rcx] ; ja 0x80f64 ; mov eax, r11d ; jmp 0x80ca1
0x0000000000112456 : dec byte ptr [rcx] ; je 0x112489 ; mov eax, 0x48 ; syscall
0x00000000001124e5 : dec byte ptr [rcx] ; je 0x112519 ; mov eax, 0x48 ; syscall
0x000000000009cfb6 : dec byte ptr [rcx] ; mov edx, 0xffffffff ; cmovbe eax, edx ; ret
0x0000000000157af0 : dec byte ptr [rdi + rcx - 0x51] ; retf 0x149
0x000000000009c136 : dec byte ptr [rdi] ; adc dword ptr [rbx + 0x38], eax ; mov qword ptr [rbx], rdi ; call rcx
0x00000000000ba130 : dec byte ptr [rdi] ; mov bh, 0x36 ; mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x000000000010feed : dec byte ptr [rdi] ; retf 0xc985
0x000000000002a4e0 : dec byte ptr [rdi] ; test byte ptr [rbp - 0x75000000], dl ; adc dword ptr [rdi], ecx ; retf 0xd285
0x0000000000097c49 : dec byte ptr [rdi] ; xchg byte ptr [rax], dl ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000188ca1 : dec byte ptr [rdx - 0x73] ; add al, 7 ; vzeroupper ; ret
0x00000000000811d3 : dec dword ptr [r8 + 0xf] ; cmp dword ptr [r8 - 0x7d], ecx ; ret 0x8908
0x00000000000d5a37 : dec dword ptr [r8 + 1] ; retf 0x9848
0x0000000000135f72 : dec dword ptr [r8 - 0x75] ; push rdi ; or byte ptr [rax - 0x75], cl ; adc byte ptr [r8 + 0x39], r9b ; retf 0x830f
0x000000000005db86 : dec dword ptr [r8 - 0x77] ; ret 0xf748
0x00000000000bb428 : dec dword ptr [rax + 0x21] ; retf 0x3948
0x0000000000094f14 : dec dword ptr [rax + 0x21] ; retf 0x949
0x0000000000192153 : dec dword ptr [rax + 0x21] ; ror dword ptr [rax + 9], cl ; retf
0x0000000000041d1f : dec dword ptr [rax + 0x23] ; and al, 0x38 ; or rax, 0xd ; jmp 0x41cf8
0x0000000000088ab2 : dec dword ptr [rax + 0x29] ; ret
0x00000000000b3eda : dec dword ptr [rax + 0x29] ; ret 0x149
0x00000000000b1e82 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x00000000000e509c : dec dword ptr [rax + 0x29] ; ret 0x8348
0x000000000007b8ae : dec dword ptr [rax + 0x29] ; ret 0xb8
0x000000000007c364 : dec dword ptr [rax + 0x29] ; ret 0xf48
0x00000000000efc82 : dec dword ptr [rax + 0x29] ; retf 0xd789
0x000000000009ae4a : dec dword ptr [rax + 0x31] ; ret 0x8948
0x000000000005c0e1 : dec dword ptr [rax + 0x39] ; clc ; pop rbx ; cmovb rax, rdi ; ret
0x00000000000551e4 : dec dword ptr [rax + 0x39] ; ret
0x0000000000095a3c : dec dword ptr [rax + 0x39] ; ret 0x830f
0x00000000000e81e8 : dec dword ptr [rax + 0x39] ; ret 0x840f
0x000000000008df2d : dec dword ptr [rax + 0x39] ; ret 0x860f
0x0000000000056e8c : dec dword ptr [rax + 0x39] ; retf
0x0000000000087567 : dec dword ptr [rax + 0x39] ; retf 0x273
0x000000000012e05f : dec dword ptr [rax + 0x39] ; retf 0x877
0x000000000009272c : dec dword ptr [rax + 0x63] ; adc r11b, r13b ; ret
0x0000000000064d65 : dec dword ptr [rax + 0x63] ; add al, 0x82 ; add rax, rdx ; jmp rax
0x0000000000075005 : dec dword ptr [rax + 0x63] ; add al, 0x86 ; add rax, rdx ; jmp rax
0x000000000007de1b : dec dword ptr [rax + 0x63] ; add al, 0x88 ; add rax, rdx ; jmp rax
0x00000000000a5e86 : dec dword ptr [rax + 0x63] ; dec dword ptr [rcx - 0x77] ; retf
0x00000000000a5684 : dec dword ptr [rax + 0x63] ; dec dword ptr [rcx - 0x77] ; retf 0x8d44
0x00000000001203ac : dec dword ptr [rax + 0x63] ; fisttp dword ptr [rax - 0x77] ; sbb eax, 0xc3fa9 ; pop rbx ; ret
0x0000000000032608 : dec dword ptr [rax + 0x63] ; ret
0x0000000000076203 : dec dword ptr [rax + 0x63] ; ret 0xc985
0x000000000013b480 : dec dword ptr [rax + 0x63] ; retf
0x00000000000c8380 : dec dword ptr [rax + 0x63] ; retf 0x8949
0x00000000000c5fa7 : dec dword ptr [rax + 0x63] ; retf 0x8d41
0x00000000000811d4 : dec dword ptr [rax + 0xf] ; cmp dword ptr [r8 - 0x7d], ecx ; ret 0x8908
0x00000000000c6600 : dec dword ptr [rax + 0xf] ; iretd ; jmp 0xc65d7
0x00000000000b0199 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x00000000001528cc : dec dword ptr [rax + 0xf] ; mov ebx, 0xbc0f48eb ; ret
0x000000000009e484 : dec dword ptr [rax + 0xf] ; mov esp, 0x440f48c7 ; ret 0xc083
0x0000000000120ec5 : dec dword ptr [rax + 0xf] ; ret 0x110f
0x000000000010c398 : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x000000000009aaa1 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000034c99 : dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000012d37f : dec dword ptr [rax + 0xf] ; ret 0xfc3
0x00000000000453d0 : dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000008104f : dec dword ptr [rax + 0xf] ; xor dword ptr [r8 - 0x7d], ecx ; ret 0x8908
0x000000000008c943 : dec dword ptr [rax + 1] ; imul ebx, dword ptr [rax], 0x4c ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001260ba : dec dword ptr [rax + 1] ; pop rbp ; cmp byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000053189 : dec dword ptr [rax + 1] ; ret
0x00000000000675b2 : dec dword ptr [rax + 1] ; ret 0x148
0x00000000000656d3 : dec dword ptr [rax + 1] ; ret 0x14c
0x00000000000e61bb : dec dword ptr [rax + 1] ; ret 0x820f
0x000000000006823d : dec dword ptr [rax + 1] ; ret 0x8948
0x00000000000d5a38 : dec dword ptr [rax + 1] ; retf 0x9848
0x00000000000f18f5 : dec dword ptr [rax + 9] ; dec byte ptr [rcx + 0x21] ; retf 0xf748
0x00000000001919d7 : dec dword ptr [rax + 9] ; ret
0x000000000019116f : dec dword ptr [rax + 9] ; ret 0x3b74
0x0000000000190a27 : dec dword ptr [rax + 9] ; ret 0x840f
0x0000000000113e84 : dec dword ptr [rax + rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000004494b : dec dword ptr [rax - 0x2d] ; ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x00000000001912a5 : dec dword ptr [rax - 0x2f] ; jmp 0x48e31bfb
0x000000000004a5fe : dec dword ptr [rax - 0x39] ; ret
0x00000000000e3b85 : dec dword ptr [rax - 0x39] ; ret 0
0x00000000000e3b9b : dec dword ptr [rax - 0x39] ; ret 0x8000
0x00000000000e3b3d : dec dword ptr [rax - 0x39] ; ret 0xff80
0x0000000000044a2d : dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000011d909 : dec dword ptr [rax - 0x3f] ; loopne 0x11d939 ; and rax, rdi ; or rax, rsi ; ret
0x00000000000d6012 : dec dword ptr [rax - 0x41] ; ret
0x0000000000150d27 : dec dword ptr [rax - 0x73] ; adc eax, 0x3711 ; call qword ptr [rax]
0x000000000012d2fa : dec dword ptr [rax - 0x73] ; adc eax, 0xfff8ccbe ; cmove rax, rdx ; ret
0x000000000012d23a : dec dword ptr [rax - 0x73] ; adc eax, 0xfff8cd9e ; cmove rax, rdx ; ret
0x000000000012d17a : dec dword ptr [rax - 0x73] ; adc eax, 0xfff8ce5e ; cmove rax, rdx ; ret
0x00000000000e67af : dec dword ptr [rax - 0x73] ; add bl, byte ptr [r11 + 0x5d] ; pop r12 ; ret
0x0000000000054177 : dec dword ptr [rax - 0x73] ; add cl, byte ptr [rdi] ; mov esi, 0x89410252 ; ret
0x000000000011f63d : dec dword ptr [rax - 0x73] ; add eax, 0x8e57b ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000012d378 : dec dword ptr [rax - 0x73] ; add eax, 0xfff8d070 ; cmovne rax, rdx ; ret
0x00000000000ebfd3 : dec dword ptr [rax - 0x73] ; add r9b, byte ptr [r9 + 0x39] ; ret
0x000000000013481f : dec dword ptr [rax - 0x73] ; and byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000006fc5e : dec dword ptr [rax - 0x73] ; js 0x6fc7a ; call 0x9c6a7
0x00000000000e66bf : dec dword ptr [rax - 0x73] ; or byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x00000000000719e0 : dec dword ptr [rax - 0x75] ; add cl, byte ptr [rax - 0x77] ; test dword ptr [rax - 0x16000006], edi ; retf
0x000000000017647a : dec dword ptr [rax - 0x75] ; add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000009c470 : dec dword ptr [rax - 0x75] ; add eax, 0x147ad8 ; call qword ptr [rax]
0x000000000014f601 : dec dword ptr [rax - 0x75] ; and al, 0x30 ; call rcx
0x00000000000359c0 : dec dword ptr [rax - 0x75] ; and al, 8 ; add rsp, 0x18 ; ret
0x00000000000334fc : dec dword ptr [rax - 0x75] ; cmp al, ch ; retf
0x0000000000087f8d : dec dword ptr [rax - 0x75] ; cmp byte ptr [r8 - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x00000000001563a5 : dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x0000000000136d2b : dec dword ptr [rax - 0x75] ; jnp 0x136d83 ; test rdi, rdi ; jne 0x136d2b ; pop rbx ; ret
0x00000000000a5233 : dec dword ptr [rax - 0x75] ; mov byte ptr [r8 - 0x77], r9b ; ret
0x000000000015f6b8 : dec dword ptr [rax - 0x75] ; mov ebp, 0xfffffb20 ; mov rdx, rax ; jmp 0x15f6e0
0x00000000000e55b8 : dec dword ptr [rax - 0x75] ; mov ebp, 0xfffffb20 ; mov rdx, rax ; jmp 0xe55e0
0x00000000000e55b7 : dec dword ptr [rax - 0x75] ; mov ebp, 0xfffffb20 ; mov rdx, rax ; jmp 0xe55e1
0x00000000001040a7 : dec dword ptr [rax - 0x75] ; mov ebp, 0xfffffe70 ; call r15
0x0000000000138442 : dec dword ptr [rax - 0x75] ; mov esp, 0x20024 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000004bf76 : dec dword ptr [rax - 0x75] ; mov word ptr [rax + rcx*4], fs ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000135f73 : dec dword ptr [rax - 0x75] ; push rdi ; or byte ptr [rax - 0x75], cl ; adc byte ptr [r8 + 0x39], r9b ; retf 0x830f
0x0000000000151f72 : dec dword ptr [rax - 0x75] ; test al, 0xe8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x000000000013ed9e : dec dword ptr [rax - 0x75] ; test byte ptr [rax + rdi*4], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000060908 : dec dword ptr [rax - 0x75] ; test dword ptr [rax - 0x7d000000], esp ; ret
0x000000000005b01b : dec dword ptr [rax - 0x75] ; xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret 0x4840
0x00000000001376dd : dec dword ptr [rax - 0x77] ; add eax, 0xb2f3b ; add rsp, 8 ; ret
0x0000000000116548 : dec dword ptr [rax - 0x77] ; add eax, 0xd19e0 ; add rsp, 8 ; ret
0x0000000000114eed : dec dword ptr [rax - 0x77] ; add eax, 0xd566b ; add rsp, 8 ; ret
0x000000000009661e : dec dword ptr [rax - 0x77] ; and al, 0x18 ; call rdx
0x0000000000084f31 : dec dword ptr [rax - 0x77] ; clc ; ret
0x0000000000188fcf : dec dword ptr [rax - 0x77] ; clc ; vzeroupper ; ret
0x00000000000f88af : dec dword ptr [rax - 0x77] ; fbstp tbyte ptr [rcx] ; fucomi st(0) ; pop rsi ; retf 0xfff2
0x000000000014d153 : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000083ca9 : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000009bdb8 : dec dword ptr [rax - 0x77] ; fimul dword ptr [rcx + rcx*4 - 0x1a] ; call rax
0x0000000000115097 : dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8348
0x0000000000155d4c : dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x0000000000073175 : dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; ret 0xdfe8
0x000000000006ea62 : dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; retf 0x8944
0x00000000000a2196 : dec dword ptr [rax - 0x77] ; fisttp word ptr [rax - 0x77] ; ret
0x000000000007cc72 : dec dword ptr [rax - 0x77] ; fucomip st(0) ; lea eax, [rsi - 0x76b70006] ; ret
0x0000000000159a76 : dec dword ptr [rax - 0x77] ; fucomip st(0) ; mov dword ptr [rax - 0x76b70014], edi ; ret
0x00000000000893b4 : dec dword ptr [rax - 0x77] ; fucomip st(0) ; ret
0x00000000001487e1 : dec dword ptr [rax - 0x77] ; fucomip st(0) ; retf
0x000000000008c7e7 : dec dword ptr [rax - 0x77] ; fucomip st(0) ; sub byte ptr [rbx - 0x3fce0007], cl ; pop rbx ; ret
0x000000000015693a : dec dword ptr [rax - 0x77] ; jl 0x15696b ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000010373c : dec dword ptr [rax - 0x77] ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000028240 : dec dword ptr [rax - 0x77] ; ret
0x00000000000e55bf : dec dword ptr [rax - 0x77] ; ret 0x11eb
0x00000000000e3b03 : dec dword ptr [rax - 0x77] ; ret 0x14e9
0x00000000000e3a16 : dec dword ptr [rax - 0x77] ; ret 0x1e9
0x0000000000128695 : dec dword ptr [rax - 0x77] ; ret 0x2b49
0x000000000011024a : dec dword ptr [rax - 0x77] ; ret 0x348
0x000000000008bdb3 : dec dword ptr [rax - 0x77] ; ret 0x38b
0x000000000009d1da : dec dword ptr [rax - 0x77] ; ret 0x394d
0x0000000000110051 : dec dword ptr [rax - 0x77] ; ret 0x3b48
0x00000000000e2069 : dec dword ptr [rax - 0x77] ; ret 0x3d48
0x000000000013b7ee : dec dword ptr [rax - 0x77] ; ret 0x66c3
0x00000000000964e0 : dec dword ptr [rax - 0x77] ; ret 0x840f
0x0000000000097f24 : dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000009916b : dec dword ptr [rax - 0x77] ; ret 0x854d
0x000000000007c56b : dec dword ptr [rax - 0x77] ; ret 0x86e9
0x00000000000551ae : dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000042294 : dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000786b7 : dec dword ptr [rax - 0x77] ; ret 0x894c
0x00000000000c8796 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000007f305 : dec dword ptr [rax - 0x77] ; ret 0x8ce9
0x000000000009e016 : dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00000000000d2589 : dec dword ptr [rax - 0x77] ; ret 0x8d4a
0x00000000000e4376 : dec dword ptr [rax - 0x77] ; ret 0x8d4c
0x00000000000a6180 : dec dword ptr [rax - 0x77] ; ret 0x9ceb
0x00000000000a4688 : dec dword ptr [rax - 0x77] ; ret 0xa3eb
0x00000000001039a6 : dec dword ptr [rax - 0x77] ; ret 0xabf
0x000000000007b0f6 : dec dword ptr [rax - 0x77] ; ret 0xb848
0x0000000000036df8 : dec dword ptr [rax - 0x77] ; ret 0xc031
0x000000000019410e : dec dword ptr [rax - 0x77] ; ret 0xc148
0x000000000010f6ee : dec dword ptr [rax - 0x77] ; ret 0xc3f6
0x000000000014e6ee : dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x000000000009aa17 : dec dword ptr [rax - 0x77] ; ret 0xcb8
0x0000000000082d9b : dec dword ptr [rax - 0x77] ; ret 0xf41
0x00000000000e3b21 : dec dword ptr [rax - 0x77] ; ret 0xf6e9
0x000000000012e1e5 : dec dword ptr [rax - 0x77] ; ret 0xf741
0x00000000000396b7 : dec dword ptr [rax - 0x77] ; ret 0xf748
0x00000000000f196d : dec dword ptr [rax - 0x77] ; ret 0xff3
0x0000000000100d20 : dec dword ptr [rax - 0x77] ; ret 0xffb8
0x000000000002e44f : dec dword ptr [rax - 0x77] ; retf
0x00000000000c79df : dec dword ptr [rax - 0x77] ; retf 0x1f0f
0x0000000000157f13 : dec dword ptr [rax - 0x77] ; retf 0x3145
0x000000000012b5ba : dec dword ptr [rax - 0x77] ; retf 0x3949
0x000000000009dc4b : dec dword ptr [rax - 0x77] ; retf 0x43e9
0x000000000012ae9c : dec dword ptr [rax - 0x77] ; retf 0x7ce9
0x00000000000701b7 : dec dword ptr [rax - 0x77] ; retf 0x8948
0x00000000001292ce : dec dword ptr [rax - 0x77] ; retf 0x894c
0x0000000000056e95 : dec dword ptr [rax - 0x77] ; retf 0x8b49
0x0000000000104453 : dec dword ptr [rax - 0x77] ; retf 0xabf
0x00000000000e5dac : dec dword ptr [rax - 0x77] ; ror byte ptr [rax + 0x39], 1 ; retf 0x1a76
0x00000000000e4c86 : dec dword ptr [rax - 0x77] ; ror byte ptr [rax + 0x39], 1 ; retf 0x2776
0x00000000000dbf03 : dec dword ptr [rax - 0x77] ; sbb byte ptr [r8 - 0x7b], cl ; sal byte ptr [rsp + rbp + 0x48], 0x89 ; ret
0x0000000000047afe : dec dword ptr [rax - 0x77] ; sub byte ptr [rax - 0x77], cl ; ret
0x0000000000105c47 : dec dword ptr [rax - 0x7b] ; in eax, dx ; jne 0x105c3c ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000194dbf : dec dword ptr [rax - 0x7b] ; in eax, dx ; jne 0x194db4 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001963dc : dec dword ptr [rax - 0x7b] ; in eax, dx ; jne 0x1963c4 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000cf74c : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x000000000012c90f : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x00000000001609a7 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; add dword ptr [rcx], 0x89480000 ; ret
0x000000000015d61a : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; imul eax, dword ptr [rcx], 0x89480000 ; ret
0x00000000000823b9 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000a0670 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; mov byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000822ba : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000012dc16 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000011fea8 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0
0x00000000000dad03 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf
0x0000000000104e23 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 0
0x0000000000136624 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; rol dword ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000008ad28 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; sahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000008a158 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000008c983 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; stosd dword ptr [rdi], eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000103adf : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; xchg eax, esp ; sldt word ptr [rax] ; call 0x14059c
0x00000000000b41fe : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000017a96c : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; retf 0xfff6
0x00000000000d1663 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; retf 0xfffc
0x0000000000039c58 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + 0xa], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001519c6 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + rax*4 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000001158c6 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + rdx + 0x48], 0x39 ; ret
0x00000000000a0aa4 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsi + rcx + 0x48], 0x89 ; ret 0x8948
0x000000000011fafe : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x000000000013fac9 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret 0x1be
0x000000000009793b : dec dword ptr [rax - 0x7d] ; call 0xffffffffc342c14b
0x000000000009814b : dec dword ptr [rax - 0x7d] ; call 0xffffffffc342c95b
0x0000000000098717 : dec dword ptr [rax - 0x7d] ; call 0xffffffffc342cf27
0x00000000000a02b8 : dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000762fd : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000002f0a8 : dec dword ptr [rax - 0x7d] ; jl 0x2f0db ; add byte ptr [rsi + rdx*2 - 0xa], sil ; ret
0x00000000000302d8 : dec dword ptr [rax - 0x7d] ; jl 0x3030b ; add byte ptr [rsi + rdx*2 - 0xa], sil ; ret
0x00000000000a2a55 : dec dword ptr [rax - 0x7d] ; jmp 0xffffffffc28d6b68
0x0000000000071116 : dec dword ptr [rax - 0x7d] ; mov ebp, 0xfffffa90 ; add byte ptr [rdi], cl ; test dword ptr [rax], ebx ; retf
0x0000000000139c85 : dec dword ptr [rax - 0x7d] ; out dx, eax ; add ecx, dword ptr [rax - 0x7d] ; call qword ptr [rcx]
0x000000000002cfde : dec dword ptr [rax - 0x7d] ; ret
0x00000000000788b3 : dec dword ptr [rax - 0x7d] ; ret 0x4420
0x0000000000054bb8 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000006f7fc : dec dword ptr [rax - 0x7d] ; ret 0x4804
0x000000000005669f : dec dword ptr [rax - 0x7d] ; ret 0x4808
0x00000000000d26fa : dec dword ptr [rax - 0x7d] ; ret 0x4809
0x0000000000039c12 : dec dword ptr [rax - 0x7d] ; ret 0x4901
0x00000000000e0c6d : dec dword ptr [rax - 0x7d] ; ret 0xe901
0x0000000000038792 : dec dword ptr [rax - 0x7d] ; ret 0xeb04
0x00000000000e9c6a : dec dword ptr [rax - 0x7d] ; ret 0xf01
0x000000000011afc0 : dec dword ptr [rax - 0x7f] ; ret
0x000000000016a83c : dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000050057 : dec dword ptr [rax - 0x7f] ; sti ; ret 0xffbf
0x00000000000ef5ce : dec dword ptr [rbp + 0x39] ; retf 0x1074
0x000000000010ef3b : dec dword ptr [rbp + rcx*4 + 0x2c] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x00000000001601a7 : dec dword ptr [rbp + rcx*4 + 0x2d] ; in eax, dx ; syscall
0x00000000000397fb : dec dword ptr [rbp - 0x73] ; je 0x39811 ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x00000000000398ab : dec dword ptr [rbp - 0x73] ; je 0x398c1 ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x0000000000070062 : dec dword ptr [rbp - 0x76b300bd] ; retf
0x000000000019413f : dec dword ptr [rbp - 0x76b73fb2] ; ret
0x00000000000e8891 : dec dword ptr [rbp - 0x77] ; dec byte ptr [rcx - 0x77] ; ret 0x8b41
0x000000000004c94a : dec dword ptr [rbp - 0x77] ; ret 0x8949
0x000000000002b23e : dec dword ptr [rbp - 0x77] ; retf
0x00000000001098c6 : dec dword ptr [rbp - 0x77] ; retf 0xbd41
0x000000000010878b : dec dword ptr [rbp - 0x77] ; retf 0xbf41
0x00000000000efae0 : dec dword ptr [rbp - 0x77] ; retf 0xc0eb
0x00000000000efad8 : dec dword ptr [rbp - 0x77] ; retf 0xc1e9
0x00000000000a0d98 : dec dword ptr [rbp - 0x7b] ; in al, 0x75 ; retf 0x9066
0x000000000004e664 : dec dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 0xf
0x000000000007a542 : dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; retf
0x0000000000068207 : dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; retf 0xffcf
0x00000000000281f5 : dec dword ptr [rbx + 0x4839104a] ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000001113ee : dec dword ptr [rbx + 0x69e83c7d] ; ret 0xffff
0x0000000000089fd7 : dec dword ptr [rbx + 0xc083] ; add byte ptr [rbx - 0x760e76cd], cl ; ret 0xe181
0x00000000000bcc26 : dec dword ptr [rbx + 0xeb80853] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000065590 : dec dword ptr [rbx + rbp - 0x53] ; cmp cl, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x000000000013730a : dec dword ptr [rbx + rcx*4 + 0x2d] ; pop rsi ; retf
0x0000000000047235 : dec dword ptr [rbx + rcx*4 + 0x2d] ; ret
0x00000000000f4186 : dec dword ptr [rbx + rcx*4 + 0x3c] ; ret 0xe8
0x000000000011af30 : dec dword ptr [rbx + rcx*4 + 0x7d] ; add cl, ch ; retf 0xfffe
0x00000000000c585b : dec dword ptr [rbx + rcx*4 - 0x44] ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x860f
0x00000000000f806f : dec dword ptr [rbx + rcx*4 - 0x4c] ; and al, 0x98 ; add dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000078938 : dec dword ptr [rbx + rcx*4 - 0x6b] ; call 0x78943
0x00000000000e4370 : dec dword ptr [rbx - 0x2e743] ; dec dword ptr [rax - 0x77] ; ret 0x8d4c
0x000000000007e6c4 : dec dword ptr [rbx - 0x4df73] ; inc dword ptr [rcx + 1] ; ret
0x0000000000104681 : dec dword ptr [rbx - 0x76b6ebb0] ; ret 0xc748
0x00000000000312f2 : dec dword ptr [rbx - 0x76f7dbbc] ; ret
0x00000000000549a7 : dec dword ptr [rbx - 0x7a97db8c] ; test byte ptr [rdi], 0x8e ; ret
0x0000000000060d7c : dec dword ptr [rbx - 0x7ad7dbbc] ; ror byte ptr [rdi], 0x8e ; ret 0xfff4
0x00000000000ed07e : dec dword ptr [rbx - 0x7cb7d3ad] ; rol byte ptr [rcx], 0x39 ; ret 0xee7f
0x000000000007b8a8 : dec dword ptr [rbx - 0x8f74b] ; dec dword ptr [rax + 0x29] ; ret 0xb8
0x00000000000db4ee : dec dword ptr [rbx - 0xf37b] ; inc dword ptr [rcx + 0xf] ; ret 0x8589
0x000000000013acab : dec dword ptr [rbx] ; mov edx, 0x104 ; cmove eax, edx ; ret
0x0000000000192db9 : dec dword ptr [rcx + 0x21] ; ret 0x949
0x00000000000ec05d : dec dword ptr [rcx + 0x29] ; ret
0x0000000000123727 : dec dword ptr [rcx + 0x39] ; fimul word ptr [rax + 0xf] ; ret 0x8948
0x0000000000123960 : dec dword ptr [rcx + 0x39] ; fimul word ptr [rax + 0xf] ; ret 0x8949
0x0000000000123b8a : dec dword ptr [rcx + 0x39] ; fisttp word ptr [rax + 0xf] ; ret 0x8949
0x000000000012355c : dec dword ptr [rcx + 0x39] ; fmul qword ptr [rax + 0xf] ; ret 0x8948
0x00000000000787cc : dec dword ptr [rcx + 0x39] ; ret
0x00000000000ec00f : dec dword ptr [rcx + 0x39] ; ret 0x860f
0x00000000000c069c : dec dword ptr [rcx + 0x39] ; ret 0x870f
0x00000000000ec10c : dec dword ptr [rcx + 0x39] ; ret 0xe76
0x00000000001949cd : dec dword ptr [rcx + 0x39] ; retf
0x00000000000850bc : dec dword ptr [rcx + 0x415d5bd8] ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000081a38 : dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x00000000000a71f8 : dec dword ptr [rcx + 0x54b60f17] ; and al, 0xf4 ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a7210 : dec dword ptr [rcx + 0x54b70f17] ; and al, 0xec ; mov word ptr [rdi + 4], dx ; ret
0x00000000000e8107 : dec dword ptr [rcx + 0x63] ; ret
0x0000000000113b2b : dec dword ptr [rcx + 0x75b8fe] ; add byte ptr [rax], al ; mov edi, edx ; syscall
0x0000000000113bfb : dec dword ptr [rcx + 0x77b8fe] ; add byte ptr [rax], al ; mov edi, edx ; syscall
0x00000000000f3cd9 : dec dword ptr [rcx + 0x90ab] ; add byte ptr [rbx - 0x16f7dbb4], cl ; ret 0xfffe
0x00000000000c6a6b : dec dword ptr [rcx + 1] ; ret
0x000000000006f77a : dec dword ptr [rcx + 1] ; ret 0x3b45
0x0000000000094f07 : dec dword ptr [rcx + 9] ; jmp 0x49d3705d
0x0000000000192659 : dec dword ptr [rcx + 9] ; ret 0x8d4c
0x00000000000f192a : dec dword ptr [rcx + 9] ; retf
0x000000000013b146 : dec dword ptr [rcx + r9*4 + 0x10] ; lea eax, [r9 + r8 + 2] ; pop rbx ; ret
0x000000000013b147 : dec dword ptr [rcx + rcx*4 + 0x10] ; lea eax, [r9 + r8 + 2] ; pop rbx ; ret
0x000000000007245a : dec dword ptr [rcx + rcx*4 + 0x24] ; fmul dword ptr [rax - 0x7d] ; ret
0x00000000000e6430 : dec dword ptr [rcx + rcx*4 - 0x11] ; call 0x25322
0x000000000009c4c5 : dec dword ptr [rcx + rcx*4 - 0x11] ; call rax
0x0000000000081238 : dec dword ptr [rcx + rcx*4 - 0x36] ; jmp 0x811d2
0x000000000011ff69 : dec dword ptr [rcx + rcx*4 - 0x3a] ; mov edi, ebx ; mov eax, r14d ; syscall
0x0000000000155164 : dec dword ptr [rcx + rcx*4 - 0xa] ; mov rdi, rbp ; xor eax, eax ; call rcx
0x00000000000f8884 : dec dword ptr [rcx + rcx*4 - 1] ; call 0x2531e
0x00000000000f8883 : dec dword ptr [rcx + rcx*4 - 1] ; call 0x2531f
0x00000000000a0037 : dec dword ptr [rcx - 0x39] ; add al, 0x24 ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0xa0017
0x00000000000bfffe : dec dword ptr [rcx - 0x39] ; ret 0xc001
0x00000000000bd64e : dec dword ptr [rcx - 0x39] ; ret 0xfc01
0x00000000000c282e : dec dword ptr [rcx - 0x39] ; ret 0xff81
0x000000000010bff4 : dec dword ptr [rcx - 0x4728763a] ; ja 0x10c006 ; add byte ptr [rax], al ; syscall
0x000000000010bfcc : dec dword ptr [rcx - 0x4728763a] ; jne 0x10bfde ; add byte ptr [rax], al ; syscall
0x00000000000784e0 : dec dword ptr [rcx - 0x4ff73] ; ljmp [rcx] ; retf 0x2944
0x000000000007005c : dec dword ptr [rcx - 0x59f7b] ; dec dword ptr [rbp - 0x76b300bd] ; retf
0x000000000002858d : dec dword ptr [rcx - 0x651767b3] ; retf
0x00000000000dbbd1 : dec dword ptr [rcx - 0x72b2bfbd] ; je 0xdbc08 ; and byte ptr [rax - 0x7d], cl ; ret
0x000000000010f632 : dec dword ptr [rcx - 0x73] ; push rdi ; add dword ptr [rax + 0x39], ecx ; ret 0xd72
0x00000000000effa1 : dec dword ptr [rcx - 0x75] ; adc byte ptr [r8 + 0x39], r9b ; retf
0x000000000012910d : dec dword ptr [rcx - 0x75] ; cmp byte ptr [r13 - 0x77], r9b ; sbb byte ptr gs:[rax - 0x77], cl ; ret 0x2b49
0x000000000012954c : dec dword ptr [rcx - 0x75] ; cmp byte ptr [rax - 0x77], r9b ; ret 0x2b49
0x000000000012973f : dec dword ptr [rcx - 0x75] ; cmp byte ptr [rbp - 0x77], r9b ; or byte ptr [rax - 0x77], cl ; ret 0x2b49
0x00000000000f8857 : dec dword ptr [rcx - 0x75] ; jg 0xf886b ; call 0x2531f
0x00000000000f8856 : dec dword ptr [rcx - 0x75] ; jg 0xf886c ; call 0x25320
0x00000000000f8860 : dec dword ptr [rcx - 0x75] ; jg 0xf887c ; call 0x2531f
0x00000000000f885f : dec dword ptr [rcx - 0x75] ; jg 0xf887d ; call 0x25320
0x00000000000f8869 : dec dword ptr [rcx - 0x75] ; jg 0xf888d ; call 0x2531f
0x00000000000f8868 : dec dword ptr [rcx - 0x75] ; jg 0xf888e ; call 0x25320
0x00000000000f8872 : dec dword ptr [rcx - 0x75] ; jg 0xf889e ; call 0x2531f
0x00000000000f8871 : dec dword ptr [rcx - 0x75] ; jg 0xf889f ; call 0x25320
0x00000000000f887b : dec dword ptr [rcx - 0x75] ; jg 0xf88af ; call 0x2531f
0x00000000000f887a : dec dword ptr [rcx - 0x75] ; jg 0xf88b0 ; call 0x25320
0x00000000000f88e3 : dec dword ptr [rcx - 0x75] ; jg 0xf88f7 ; call 0x2531f
0x00000000000f88e2 : dec dword ptr [rcx - 0x75] ; jg 0xf88f8 ; call 0x25320
0x00000000000f88ec : dec dword ptr [rcx - 0x75] ; jg 0xf8908 ; call 0x2531f
0x00000000000f88eb : dec dword ptr [rcx - 0x75] ; jg 0xf8909 ; call 0x25320
0x00000000000f88f5 : dec dword ptr [rcx - 0x75] ; jg 0xf8919 ; call 0x2531f
0x00000000000f88f4 : dec dword ptr [rcx - 0x75] ; jg 0xf891a ; call 0x25320
0x00000000000f88fe : dec dword ptr [rcx - 0x75] ; jg 0xf892a ; call 0x2531f
0x00000000000f88fd : dec dword ptr [rcx - 0x75] ; jg 0xf892b ; call 0x25320
0x00000000000f8907 : dec dword ptr [rcx - 0x75] ; jg 0xf893b ; call 0x2531f
0x00000000000f8906 : dec dword ptr [rcx - 0x75] ; jg 0xf893c ; call 0x25320
0x0000000000194d0a : dec dword ptr [rcx - 0x75] ; jge 0x194d28 ; add rdi, rbp ; call r12
0x000000000007c050 : dec dword ptr [rcx - 0x75] ; test dword ptr [rax - 0x77000000], esp ; retf
0x000000000009afd7 : dec dword ptr [rcx - 0x77] ; add al, 0x24 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000072f17 : dec dword ptr [rcx - 0x77] ; fsubr st(1) ; ret 0xffff
0x00000000000bd8ee : dec dword ptr [rcx - 0x77] ; out dx, al ; setne dl ; jmp 0xbd90d
0x00000000000c2acf : dec dword ptr [rcx - 0x77] ; out dx, al ; setne dl ; jmp 0xc2aed
0x00000000000ca52f : dec dword ptr [rcx - 0x77] ; out dx, al ; setne dl ; jmp 0xca54d
0x00000000000d6fcc : dec dword ptr [rcx - 0x77] ; ret 0x5a58
0x0000000000108de1 : dec dword ptr [rcx - 0x77] ; ret 0x8545
0x000000000007fc64 : dec dword ptr [rcx - 0x77] ; ret 0x8548
0x000000000007d548 : dec dword ptr [rcx - 0x77] ; ret 0x854d
0x0000000000109698 : dec dword ptr [rcx - 0x77] ; ret 0x8948
0x000000000007d8a1 : dec dword ptr [rcx - 0x77] ; ret 0x8b48
0x000000000007d86b : dec dword ptr [rcx - 0x77] ; ret 0xbd83
0x00000000000e82a8 : dec dword ptr [rcx - 0x77] ; ret 0xbde9
0x00000000000a01de : dec dword ptr [rcx - 0x77] ; ret 0xcb8
0x00000000000a5e89 : dec dword ptr [rcx - 0x77] ; retf
0x000000000012c78a : dec dword ptr [rcx - 0x77] ; retf 0x8348
0x0000000000192ffd : dec dword ptr [rcx - 0x77] ; retf 0x894d
0x00000000000a5687 : dec dword ptr [rcx - 0x77] ; retf 0x8d44
0x0000000000125b7e : dec dword ptr [rcx - 0x77] ; ror byte ptr [rcx - 0x73], 0x40 ; dec dword ptr [rax + 0x39] ; ret
0x0000000000095e0e : dec dword ptr [rcx - 0x7b] ; ret
0x0000000000194008 : dec dword ptr [rcx - 0x7b] ; ret 0xf40
0x00000000000f238f : dec dword ptr [rcx - 0x7c25d636] ; ret 0x7401
0x00000000000a00ee : dec dword ptr [rcx - 0x7d] ; cmp al, 0x24 ; add byte ptr [rdx + rdx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x000000000002c071 : dec dword ptr [rcx - 0x7d] ; ret
0x00000000000bb305 : dec dword ptr [rcx - 0x7d] ; ret 0x4908
0x00000000000c8e5f : dec dword ptr [rcx - 0x7d] ; ret 0x4917
0x00000000000e7837 : dec dword ptr [rcx - 0x7d] ; ret 0x4d01
0x0000000000095b28 : dec dword ptr [rcx - 0x7d] ; retf
0x000000000006f7ce : dec dword ptr [rcx - 0x7d] ; rol dword ptr [rcx + rcx*2], 1 ; ret
0x0000000000075b76 : dec dword ptr [rcx - 0x8cf7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000093353 : dec dword ptr [rcx - 9] ; ret
0x000000000005c337 : dec dword ptr [rcx] ; ja 0x5c317 ; mov rax, rsi ; ret
0x0000000000128924 : dec dword ptr [rcx] ; ret
0x00000000000f0547 : dec dword ptr [rcx] ; ret 0x5189
0x00000000000fd9e2 : dec dword ptr [rcx] ; retf 0x5089
0x000000000012144e : dec dword ptr [rcx] ; setbe al ; ret
0x00000000000a22c1 : dec dword ptr [rdi + rcx + 0x44] ; leave ; jmp 0xa2298
0x00000000000c784c : dec dword ptr [rdi + rcx + 0x46] ; ret 0x8548
0x0000000000042e5b : dec dword ptr [rdi] ; add byte ptr [rax - 0x7b], cl ; ret 0x574
0x000000000011d8b2 : dec dword ptr [rdi] ; add byte ptr [rax], al ; and eax, 0xfffff000 ; or eax, edx ; ret
0x000000000005c2cc : dec dword ptr [rdi] ; ja 0x5c2b7 ; mov rax, rsi ; ret
0x000000000006800d : dec dword ptr [rdi] ; lahf ; ret 0xd729
0x0000000000121b9d : dec dword ptr [rdi] ; mov bh, 4 ; js 0x121b31 ; loopne 0x121bb8 ; movzx eax, ax ; ret
0x0000000000121c9d : dec dword ptr [rdi] ; mov bh, 4 ; js 0x121c2e ; loopne 0x121cae ; ret
0x0000000000121d1d : dec dword ptr [rdi] ; mov bh, 4 ; js 0x121cb1 ; loopne 0x121d32 ; movzx eax, ax ; ret
0x0000000000121f9d : dec dword ptr [rdi] ; mov bh, 4 ; js 0x121f31 ; loopne 0x121fb4 ; movzx eax, ax ; ret
0x00000000000352e6 : dec dword ptr [rdi] ; mov bh, 4 ; js 0x35277 ; loopne 0x352f7 ; ret
0x00000000000352f6 : dec dword ptr [rdi] ; mov bh, 4 ; js 0x3528a ; loopne 0x35311 ; movzx eax, ax ; ret
0x0000000000035336 : dec dword ptr [rdi] ; mov bh, 4 ; js 0x352ca ; loopne 0x3534b ; movzx eax, ax ; ret
0x00000000000353d6 : dec dword ptr [rdi] ; mov bh, 4 ; js 0x3536a ; loopne 0x353ed ; movzx eax, ax ; ret
0x00000000000e5527 : dec dword ptr [rdi] ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000fe22b : dec dword ptr [rdi] ; mov dh, 0x4a ; or byte ptr [rax + 0x63], cl ; or al, 0x8f ; add rcx, rdi ; jmp rcx
0x000000000005de4e : dec dword ptr [rdi] ; mov dh, 0x58 ; or al, 0x89 ; fdiv st(6) ; ret
0x000000000005d002 : dec dword ptr [rdi] ; mov dh, 0x58 ; or al, 0xf6 ; ret
0x00000000000aada5 : dec dword ptr [rdi] ; mov ebp, 0xf80148c0 ; add rax, rsi ; ret
0x0000000000100d18 : dec dword ptr [rdi] ; mov esi, 0x441fe830 ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x000000000009e474 : dec dword ptr [rdi] ; mov esp, 0xc2440fc7 ; add eax, 1 ; ret
0x00000000000437a0 : dec dword ptr [rdi] ; mov word ptr [rcx - 0x7f000000], gs ; sti ; push rax ; ret
0x000000000006200f : dec dword ptr [rdi] ; push rax ; ret 0xf41
0x000000000005d5ba : dec dword ptr [rdi] ; ret
0x0000000000029e3b : dec dword ptr [rdi] ; ret 0x41c3
0x000000000012c7bd : dec dword ptr [rdi] ; ret 0x8348
0x000000000009cfbc : dec dword ptr [rdi] ; ret 0xfc3
0x0000000000033847 : dec dword ptr [rdi] ; retf 0xd88
0x00000000000f0002 : dec dword ptr [rdi] ; test bh, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000095fec : dec dword ptr [rdi] ; test bl, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x0000000000048486 : dec dword ptr [rdi] ; test bl, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x0000000000193426 : dec dword ptr [rdi] ; test byte ptr [rbx], al ; or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000a2d1f : dec dword ptr [rdi] ; test byte ptr [rbx], bl ; cmp eax, 0xf7410000 ; ret 0
0x0000000000146b78 : dec dword ptr [rdi] ; test byte ptr [rcx], bl ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x7ed28a40], al ; ret
0x00000000000bed66 : dec dword ptr [rdi] ; test byte ptr [rdi + rax - 0x47b80000], ch ; retf 0xfffe
0x000000000006f29f : dec dword ptr [rdi] ; test byte ptr [rdi], bh ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000071cdf : dec dword ptr [rdi] ; test byte ptr [rdi], ch ; ret
0x000000000004ec4a : dec dword ptr [rdi] ; test byte ptr [rdx], ah ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x0000000000106674 : dec dword ptr [rdi] ; test byte ptr [rip - 0x76fffffd], dh ; ret 0xc085
0x00000000000a3fd3 : dec dword ptr [rdi] ; test byte ptr [rip - 0x8ffffd6], ch ; ret
0x00000000000a3fdf : dec dword ptr [rdi] ; test byte ptr [rip - 0x8ffffd6], cl ; ret
0x00000000000a42d3 : dec dword ptr [rdi] ; test byte ptr [rsi - 0x8ffffdb], al ; ret
0x00000000000dd630 : dec dword ptr [rdi] ; test ch, al ; add dword ptr [rax], eax ; add byte ptr [rcx + rdi + 0x3d], cl ; ret 0x10
0x000000000002c46f : dec dword ptr [rdi] ; test ch, dh ; add al, 0 ; add bh, dh ; ret 0
0x0000000000069d14 : dec dword ptr [rdi] ; test dh, cl ; ret 0xffff
0x0000000000119314 : dec dword ptr [rdi] ; test dword ptr [rax + 0x49000001], esi ; mov edi, dword ptr [rsi] ; call r12
0x0000000000119284 : dec dword ptr [rdi] ; test dword ptr [rbx + rax], edx ; add byte ptr [rcx - 0x75], cl ; call r12
0x0000000000182a06 : dec dword ptr [rdi] ; test dword ptr [rbx - 0x3a000003], esp ; std ; xlatb ; ret 0xe883
0x0000000000069c35 : dec dword ptr [rdi] ; test dword ptr [rdi], ecx ; ret
0x00000000001192e4 : dec dword ptr [rdi] ; test dword ptr [rdx + rax], edi ; add byte ptr [rax], al ; mov rdi, qword ptr [r14] ; call r12
0x0000000000119254 : dec dword ptr [rdi] ; test dword ptr [rdx + rax], edx ; add byte ptr [rax], al ; mov rdi, qword ptr [r14] ; call r12
0x000000000018fdc0 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007ca61 : dec dword ptr [rdi] ; test dword ptr [rsi - 0x16000006], edx ; ret
0x00000000001192b4 : dec dword ptr [rdi] ; test eax, ecx ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; call r12
0x0000000000119344 : dec dword ptr [rdi] ; test eax, esi ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; call r12
0x000000000007e7e5 : dec dword ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000009949f : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd020
0x0000000000044e68 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd321
0x000000000011620e : dec dword ptr [rdi] ; xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000087644 : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x00000000000c6aa8 : dec dword ptr [rdi] ; xchg eax, edi ; ret 0x1489
0x00000000000e7755 : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x000000000015e81c : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x1389
0x000000000008a9ae : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000000fbf36 : dec dword ptr [rdi] ; xchg eax, esp ; ror dword ptr [rcx], 0xc8 ; jmp 0xfb51f
0x0000000000075eb7 : dec dword ptr [rip + 0x634c0000] ; ret
0x00000000000341a2 : dec dword ptr [rip - 0x7cb79d8c] ; ret
0x000000000009e393 : dec dword ptr [rsi] ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000b3ed9 : dec qword ptr [r8 + 0x29] ; ret 0x149
0x00000000000b1e81 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x0000000000098716 : dec qword ptr [r8 - 0x7d] ; call 0xffffffffc342cf28
0x0000000000039c11 : dec qword ptr [r8 - 0x7d] ; ret 0x4901
0x0000000000094f13 : dec qword ptr [rax + 0x21] ; retf 0x949
0x00000000000b41fd : dec qword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000094f06 : dec qword ptr [rcx + 9] ; jmp 0x49d3705e
0x0000000000119220 : div byte ptr [rbp + 0x1d] ; mov rdi, qword ptr [r13] ; call r12
0x0000000000119020 : div byte ptr [rbp + 0xd] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b0352 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x0000000000043b55 : div byte ptr [rbp + 8] ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x00000000000a6c0e : div byte ptr [rbp - 0x11] ; mov qword ptr [rdx], rcx ; ret
0x0000000000112826 : div byte ptr [rbp - 0x21] ; or eax, 0x80000000 ; mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000000933e6 : div byte ptr [rcx + rcx*2 + 0x48] ; mov dword ptr [rsi], edi ; ret
0x0000000000051f05 : div byte ptr [rcx] ; inc dword ptr [rcx - 0x47] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x1f0f
0x00000000000f6adf : div byte ptr [rdx + 0xf] ; mov dh, 0x57 ; cmp dh, dh ; ret 0xf08
0x00000000001121a5 : div byte ptr [rdx + rbp - 0x48] ; sbb byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000001812ab : div byte ptr [rdx + rdx*8 + 0x48] ; movsxd rax, ecx ; add rax, rdx ; sub rax, rdi ; ret
0x0000000000129e89 : div byte ptr [rdx + rsi - 0x80] ; retf 0xa880
0x00000000000314b1 : div byte ptr [rsp + rcx - 0x7d] ; inc byte ptr [rbx] ; je 0x314c8 ; ret
0x000000000009dc99 : div byte ptr [rsp + rsi*2 - 0x18] ; lahf ; je 0x9dca2 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000129acb : div dword ptr [rcx] ; shr al, 0x6d ; ret
0x000000000010c311 : div dword ptr [rdi - 0x14] ; ret
0x000000000005f466 : div eax ; add r9d, eax ; mov eax, r9d ; ret
0x00000000000571a9 : div eax ; cmp rcx, -1 ; jne 0x571ab ; mov rax, rdx ; ret
0x000000000008d54c : div ebp ; mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ba739 : div ecx ; mov eax, eax ; ret
0x00000000000ba753 : div esi ; mov eax, eax ; ret
0x00000000000571a8 : div r8 ; cmp rcx, -1 ; jne 0x571ac ; mov rax, rdx ; ret
0x000000000005f465 : div r8d ; add r9d, eax ; mov eax, r9d ; ret
0x0000000000117c86 : divps xmm0, xmm2 ; jmp 0x117cdc
0x0000000000117c85 : divsd xmm0, xmm2 ; jmp 0x117cdd
0x000000000005c2cd : emms ; loopne 0x5c31f ; mov eax, esi ; ret
0x00000000000f5511 : enter -0x138e, -0x77 ; ret 0x3b44
0x0000000000127c23 : enter -0x163f, 0x1f ; cmp sil, cl ; cmovne eax, edx ; ret
0x0000000000144e9f : enter -0x1f01, 0x66 ; nop dword ptr [rax + rax] ; ret
0x0000000000053627 : enter -0x1f3f, 0x1e ; or eax, edx ; ret
0x00000000000a6f0e : enter -0x208c, -0x3d ; xor eax, eax ; ret
0x00000000001821c7 : enter -0x23b, -0x29 ; ret 0xc085
0x00000000000b07d1 : enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x00000000000f5569 : enter -0x2e77, -0x77 ; ret 0x9066
0x00000000000d6932 : enter -0x36cf, -0x17 ; retf 0xffff
0x000000000008732a : enter -0x3eb7, -8 ; add al, byte ptr [rcx - 0x73] ; inc ebx ; xor eax, eax ; ret
0x00000000001493b4 : enter -0x3eb8, -0x16 ; adc byte ptr [rax + 0x31], cl ; ret 0xb70f
0x00000000000fe6e6 : enter -0x3eb8, -0x18 ; sbb dword ptr [rbx - 0x1f3efe20], eax ; add al, 0x89 ; ret 0xb60f
0x00000000001933b8 : enter -0x3eb8, -0x20 ; xor byte ptr [rax + 0x21], cl ; retf 0x948
0x0000000000087c61 : enter -0x3eb8, -8 ; add cl, byte ptr [rax - 0x77] ; ret
0x000000000014bdb8 : enter -0x3f77, 0x48 ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000035fe6 : enter -0x3f77, 0xf ; retf 0x148
0x0000000000046baf : enter -0x3fcf, -0x18 ; jns 0x46ba4 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000046bae : enter -0x3fcf, -0x18 ; jns 0x46ba5 ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000159769 : enter -0x3fcf, -0x18 ; mov edi, 0x31ffecb9 ; ror byte ptr [rax - 0x77], cl ; ret
0x0000000000158b15 : enter -0x3fcf, -0x18 ; sbb al, byte ptr [r8] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000011af7f : enter -0x3fcf, -0x18 ; sbb dword ptr [rbx - 0x76b70010], esp ; ret
0x000000000018ff34 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000004383f : enter -0x6418, -0x33 ; adc al, 0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000008744e : enter -0x72b7, 0x14 ; nop ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000000ba671 : enter -0x72b8, 0x35 ; retf
0x00000000000b3d56 : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x149
0x00000000000b1d3e : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x00000000000b3ed6 : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x149
0x00000000000b1e7e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000091c3a : enter -0x72bf, 0x40 ; inc ebx ; xor eax, eax ; ret
0x0000000000181910 : enter -0x73b, 0x77 ; ret
0x000000000004317a : enter -0x73f, 0x1f ; not eax ; and eax, edx ; ret
0x00000000000f074e : enter -0x7470, 0x53 ; sub byte ptr [rax - 0x75], cl ; cmp eax, dword ptr [rcx] ; ret 0xc083
0x00000000001172e1 : enter -0x74b4, 0x4c ; and al, 8 ; syscall
0x000000000011db04 : enter -0x74b4, 0x54 ; and al, 8 ; mov eax, 0x38 ; syscall
0x0000000000039457 : enter -0x76b3, -0x19 ; jmp 0x3942c
0x0000000000057056 : enter -0x76b4, 0x47 ; clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000056fe2 : enter -0x76b4, 7 ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x00000000000570ec : enter -0x76b4, 7 ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000056573 : enter -0x76b8, 0x34 ; enter -0x7cb8, -0x3f ; add dword ptr [rax + 0x39], ecx ; retf 0xef75
0x000000000014ea7c : enter -0x76bf, 0x40 ; pop rax ; mov eax, 1 ; ret
0x000000000014e9b4 : enter -0x76bf, 0x40 ; push rsp ; mov eax, 1 ; ret
0x0000000000062762 : enter -0x76f9, 2 ; mov eax, 1 ; ret
0x00000000000a3ba1 : enter -0x7780, 0x45 ; ret 0xd889
0x00000000000566e7 : enter -0x7cb8, -0x3f ; add dword ptr [rax + 0x39], ecx ; retf
0x0000000000056577 : enter -0x7cb8, -0x3f ; add dword ptr [rax + 0x39], ecx ; retf 0xef75
0x000000000012c9a0 : enter -0x7cb8, 0x7c ; retf 0x1f8
0x00000000001150fb : enter -0xa, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000f884c : enter -0xd36, -1 ; mov rdi, qword ptr [r15] ; call 0x25321
0x00000000001562da : enter -0xe, 0x48 ; add esp, 8 ; ret
0x000000000006ffc9 : enter -1, -0x77 ; ret
0x00000000001828e4 : enter -2, -1 ; ret
0x000000000007edc2 : enter -6, -1 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov r9, rsi ; jmp rax
0x0000000000064f61 : enter -7, -1 ; add al, 0xe9 ; ret
0x000000000009addc : enter 0, 0 ; call rax
0x000000000014bc49 : enter 0, 0 ; jmp rcx
0x00000000000ecbf8 : enter 0, 0 ; jne 0xecb3d ; ret
0x0000000000120703 : enter 0, 0 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000d04cc : enter 0x1173, 0 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000090bf9 : enter 0x1476, 0x48 ; mov eax, dword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000185d49 : enter 0x148, -8 ; vzeroupper ; ret
0x00000000000cdc88 : enter 0x1577, 0x48 ; sub edi, 0x10 ; add rax, rdi ; ret
0x00000000001818f1 : enter 0x1d75, -0x7d ; ret 0x8101
0x0000000000181db1 : enter 0x2275, -0x7d ; ret 0x8101
0x000000000018ff30 : enter 0x275, 0x39 ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x0000000000058669 : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001485e1 : enter 0x289, -0x77 ; fiadd dword ptr [rcx - 1] ; push rbp ; adc byte ptr [rcx], bh ; ret
0x000000000018aa1e : enter 0x2948, -0x30 ; shr rax, 2 ; vzeroupper ; ret
0x00000000001860de : enter 0x2948, -0x30 ; vzeroupper ; ret
0x00000000001815a1 : enter 0x2948, -8 ; ret
0x0000000000189fb1 : enter 0x2c75, -0x7d ; ret 0x8104
0x00000000000a89dd : enter 0x31c3, -0x40 ; ret
0x0000000000079ff8 : enter 0x415d, 0x5c ; pop r13 ; pop r14 ; ret
0x000000000014f3ab : enter 0x4289, 0x10 ; mov eax, 1 ; ret
0x000000000014f2ab : enter 0x4289, 0xc ; mov eax, 1 ; ret
0x00000000000a2de4 : enter 0x4480, -0x78 ; ret 0x8945
0x00000000000a3809 : enter 0x4480, -0x78 ; ret 0xb841
0x0000000000095f9a : enter 0x4801, -0x7d ; ret 0x4810
0x000000000008f9b2 : enter 0x4c80, -0x77 ; retf 0x7e9
0x000000000008f8f2 : enter 0x4c80, -0x77 ; retf 0x99e9
0x000000000008f92a : enter 0x4c80, -0x77 ; retf 0xb9e9
0x000000000008f88a : enter 0x4c80, -0x77 ; retf 0xd3e9
0x000000000008f93a : enter 0x4c80, -0x77 ; retf 0xdce9
0x0000000000168b74 : enter 0x504, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000043e9c : enter 0x50f, 0x48 ; mov edi, eax ; mov eax, 0xba ; syscall
0x000000000009687b : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000026b97 : enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; call rax
0x0000000000029b61 : enter 0x6411, 0x48 ; xor eax, dword ptr [0x30] ; jmp rax
0x0000000000117574 : enter 0xc, -9 ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000cdac8 : enter 0xd75, -0x7b ; leave ; je 0xcdae1 ; xor eax, eax ; ret
0x000000000013a9d7 : enter 0xe72, 0x39 ; sal byte ptr [rbp - 0x2e], 1 ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x0000000000051eea : enter 0xf41, -0x6e ; ror byte ptr [rax - 0x7d], 0xfa ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x2041
0x0000000000153d4a : enter 0xf41, 0x43 ; ret 0xf801
0x0000000000086319 : enter 0xf48, 0x4f ; ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x8631a ; ret
0x0000000000090879 : enter 0xf48, 0x4f ; ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x9087a ; ret
0x00000000000f85c7 : enter 0xf66, -0x11 ; ret 0x110f
0x000000000018bfd6 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000afb31 : enter 0xf66, -0x15 ; ret
0x00000000000ebf94 : enter 0xf66, -0x2c ; ret
0x000000000015659d : enter 0xf66, -0x3b ; retf 0x6600
0x00000000000ebe29 : enter 0xf66, 0x6f ; call 0xffffffffc3e2cda0
0x0000000000182837 : enter 0xfc3, 0x1f ; add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000014da40 : enter 1, 0 ; add rsi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000014f481 : enter 1, 0 ; xor ecx, ecx ; call 0x13b6d8
0x00000000001192b7 : enter 2, 0 ; mov rdi, qword ptr [r14] ; call r12
0x000000000018c528 : enter 2, 0x49 ; movsxd rcx, dword ptr [rbx + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016ce97 : enter 4, 0x49 ; movsxd rdx, dword ptr [rbx + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000b7784 : enter 5, 0 ; ret
0x000000000016be17 : fadd dword ptr [rax + rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000823fe : fadd dword ptr [rax] ; add byte ptr [rax], al ; call 0x8ee16
0x000000000002643d : fadd dword ptr [rax] ; add byte ptr [rax], al ; jne 0x2640d ; ret
0x000000000008d980 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x000000000011a624 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000081774 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000538e6 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001176c4 : fadd dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000010eb76 : fadd dword ptr [rax] ; ret
0x000000000017a334 : fadd dword ptr [rbx] ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000000ead13 : fadd dword ptr [rcx + 0x5c] ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cdae6 : fadd dword ptr [rcx + rdi - 0x3f] ; cmovg eax, edx ; ret
0x00000000000d5d15 : fadd dword ptr [rcx - 0x77] ; ret
0x00000000000e91fa : fadd dword ptr [rcx - 0x77] ; retf 0x8545
0x000000000012c7b7 : fadd dword ptr [rcx - 0xfff05] ; dec dword ptr [rdi] ; ret 0x8348
0x000000000018b326 : fadd dword ptr [rdx] ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000011f9c4 : fadd qword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000ec04c : fadd qword ptr [rcx + 0xf] ; xchg eax, ebx ; ret
0x000000000018aff9 : fadd qword ptr [rdx] ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x0000000000042cf4 : fadd st(0) ; add rsp, 8 ; ret
0x0000000000042cbc : fadd st(0) ; ret
0x00000000000cefba : fadd st(1) ; call 0x48cf18e5
0x00000000000e83f9 : fadd st(1) ; sti ; sbb cl, al ; clc ; sbb byte ptr [rcx], bh ; ret
0x0000000000190558 : fadd st(3) ; nop word ptr [rax + rax] ; ret
0x00000000000cda08 : fadd st(3) ; nop word ptr [rax + rax] ; xor rax, rax ; ret
0x000000000018d32e : fadd st(3) ; ret
0x00000000000bacab : fadd st(3), st(0) ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000018168d : faddp st(5) ; in eax, 0x74 ; ffreep st(5) ; std ; xlatb ; retf
0x0000000000189d0e : faddp st(5) ; in eax, 0x76 ; ffreep st(5) ; std ; xlatb ; retf
0x0000000000111404 : fbld tbyte ptr [rbp + rax*2 - 0x75] ; call 0x10d667
0x00000000000b8651 : fbld tbyte ptr [rdi] ; str word ptr [rcx + 0x63] ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000018bb21 : fbld tbyte ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000f88b2 : fbstp tbyte ptr [rcx] ; fucomi st(0) ; pop rsi ; retf 0xfff2
0x0000000000075f22 : fbstp tbyte ptr [rcx] ; fucomi st(1) ; ret
0x00000000000840e3 : fbstp tbyte ptr [rcx] ; rcr byte ptr [rbx + 0x5d], cl ; pop r12 ; pop r13 ; jmp rax
0x0000000000146c6c : fbstp tbyte ptr [rcx] ; ror byte ptr [rax - 0x75], 0x4c ; and al, 8 ; call rcx
0x000000000018bb1f : fbstp tbyte ptr [rdx - 0x10f09921] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018cc62 : fcmovb st(0), st(0) ; add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00000000000a6e55 : fcmovb st(0), st(3) ; nop word ptr [rax + rax] ; ret
0x0000000000044c6a : fcmovnb st(0), st(1) ; shufpd xmm0, xmm0, 1 ; movups xmmword ptr [rdi], xmm0 ; ret
0x00000000000a6fac : fcmovnb st(0), st(3) ; nop ; ret
0x00000000001861fb : fcmovnb st(0), st(5) ; std ; xlatb ; ret
0x000000000009651f : fcom dword ptr [rax + rax] ; mov qword ptr [rsp + 8], rdx ; xor edi, edi ; call qword ptr [rax]
0x000000000009717c : fcom dword ptr [rcx] ; add al, ch ; cld ; ret
0x00000000000bca25 : fcomp dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000270e8 : fcomp dword ptr [rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000a0dd7 : fcomp dword ptr [rbx + 0x48] ; cmovne eax, edi ; ret
0x0000000000041ef7 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000082994 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008d5e9 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000003164b : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000039526 : fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000000639fb : fcomp dword ptr [rbx - 0x3d] ; nop ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000ce9b2 : fcomp dword ptr [rbx - 0x3d] ; nop dword ptr [rax] ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; ret
0x0000000000117e3b : fcomp dword ptr [rdx + 0x5b] ; ret
0x00000000000270e7 : fcomp dword ptr gs:[rbx + 0x41] ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000056217 : fcomp qword ptr [rax] ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000098d7e : fcos ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000128922 : fcos ; dec dword ptr [rcx] ; ret
0x00000000001131ed : fdiv dword ptr [rbp + 0x11] ; add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x000000000015aa80 : fdiv dword ptr [rbp + 0x1b] ; add rsp, 0x520 ; pop rbx ; ret
0x000000000015e604 : fdiv dword ptr [rbp + 0x1e] ; add rsp, 0x110 ; pop rbx ; ret
0x00000000001515d0 : fdiv dword ptr [rbp + 0x24] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000018bfef : fdiv dword ptr [rdx - 0x10f09928] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018bdef : fdiv qword ptr [rdx - 0x10f09924] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000a717c : fdiv qword ptr [rsi] ; adc byte ptr [rax], al ; mov edx, eax ; movsxd rdx, dword ptr [r8 + rdx*4] ; add rdx, r8 ; jmp rdx
0x000000000005de54 : fdiv st(6) ; ret
0x00000000000c8794 : fdiv st(7), st(0) ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000004c948 : fdivp st(7) ; dec dword ptr [rbp - 0x77] ; ret 0x8949
0x00000000001140f1 : fdivr dword ptr [rax + 0x10e] ; syscall
0x000000000010f18a : fdivr st(4) ; dec dword ptr [rax - 0x77] ; ret
0x0000000000027856 : fdivr st(7) ; inc dword ptr [rbp - 0x7cfc8a40] ; retf
0x000000000017a0ad : fdivr st(7) ; ret
0x00000000000b4c0e : fdivr st(7) ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000a6f10 : ffreep st(3) ; xor eax, eax ; ret
0x0000000000181691 : ffreep st(5) ; std ; xlatb ; retf
0x00000000000a74ed : ffreep st(6) ; add al, 3 ; add byte ptr [rax - 0x77], cl ; ret 0x96e8
0x00000000000d6085 : fiadd dword ptr [rax + 0xf482df9] ; ret 0x8949
0x000000000016bc97 : fiadd dword ptr [rax + rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000049a80 : fiadd dword ptr [rbp + 0x450f48c9] ; ret 0x8348
0x000000000005abed : fiadd dword ptr [rbp + 0x450f48f6] ; ret 0x8948
0x000000000004bed1 : fiadd dword ptr [rbp - 0x7b] ; fisttp dword ptr [rax + 0xf] ; ret 0x8948
0x00000000000bea25 : fiadd dword ptr [rbp - 0x7b] ; ror byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000012c671 : fiadd dword ptr [rbx + 0x3b8eaf8] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x66c3
0x00000000000ba97b : fiadd dword ptr [rcx + 0x3ffe2] ; add byte ptr [rbx - 0x50f0fe3e], al ; ret 0xe9e9
0x00000000000a2563 : fiadd dword ptr [rcx + 0xf] ; xchg eax, ebx ; ret
0x00000000001485e5 : fiadd dword ptr [rcx - 1] ; push rbp ; adc byte ptr [rcx], bh ; ret
0x0000000000188c02 : fiadd dword ptr [rcx] ; add byte ptr [rax], al ; vzeroupper ; ret
0x000000000018b12a : fiadd dword ptr [rdx] ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000016ba9d : fiadd word ptr [rax + rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000a686d : fiadd word ptr [rbx + 0x558880ca] ; ret 0x2ba
0x000000000008c39d : fiadd word ptr [rcx + rcx*4 - 0x11] ; mov eax, r9d ; syscall
0x000000000005f451 : fiadd word ptr [rcx + rcx*4 - 0x38] ; ret
0x0000000000187ece : fiadd word ptr [rcx] ; add byte ptr [rax], al ; vzeroupper ; ret
0x0000000000048a2f : fiadd word ptr [rip + 0x48000000] ; mov dword ptr [rsi + 0x10], eax ; xor eax, eax ; ret
0x0000000000103e24 : fiadd word ptr [rip - 0x67d0000] ; add cl, byte ptr [rax - 0x77] ; ret 0x940f
0x00000000000eae7e : ficom dword ptr [rax + 0xcb85b] ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000011004e : ficom word ptr [rax - 0xf] ; dec dword ptr [rax - 0x77] ; ret 0x3b48
0x0000000000160e55 : ficomp dword ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000299f6 : ficomp word ptr [rdi - 0x7cb7ffe5] ; ret 0x4901
0x00000000000941e2 : fidiv dword ptr [rbx] ; adc eax, 0xe8834800 ; add dword ptr [rax + 0x39], ecx ; ret 0x860f
0x00000000001563a2 : fidiv dword ptr [rdi - 0x74b70001] ; cmp byte ptr [rax - 0x77], cl ; ret
0x000000000011af12 : fidiv dword ptr [rdi - 1] ; dec dword ptr [rax - 0x77] ; ret
0x000000000018beef : fidiv dword ptr [rdx - 0x10f09926] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000105735 : fidiv word ptr [rdi - 0x70] ; jmp 0x105709
0x000000000018bbef : fidiv word ptr [rdx - 0x10f09922] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001117c2 : fidivr dword ptr [rax + 0x10f] ; syscall
0x000000000015d955 : fidivr dword ptr [rax + 1] ; ret
0x00000000001580a0 : fidivr dword ptr [rax - 1] ; ret
0x00000000000d056a : fidivr dword ptr [rax] ; adc dword ptr [rax], eax ; movaps xmmword ptr [rax], xmm0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000010fc2b : fidivr dword ptr [rdi + 1] ; jne 0x10fca2 ; call 0x10c65a
0x000000000016bb1e : fild dword ptr [rax + rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000bfa05 : fild dword ptr [rax] ; verw ax ; ret 0xf755
0x000000000002e61a : fild dword ptr [rbx + 0x634807e3] ; fild dword ptr [rcx - 0xa] ; ret
0x0000000000104b96 : fild dword ptr [rbx - 0x6af0fd08] ; ret
0x00000000001045f2 : fild dword ptr [rbx - 0x6bf0fb08] ; ret
0x0000000000104751 : fild dword ptr [rbx - 0x76b6f506] ; ret 0xf44
0x00000000001909ed : fild dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x3145
0x00000000000be7f3 : fild dword ptr [rcx - 0x77] ; retf 0xfa83
0x000000000002a596 : fild dword ptr [rcx - 0x7d] ; ret
0x000000000012a39c : fild dword ptr [rcx - 0xa] ; and al, 0x18 ; add dword ptr [rdi], ecx ; xchg eax, ebp ; ret
0x000000000002e620 : fild dword ptr [rcx - 0xa] ; ret
0x0000000000042c14 : fild dword ptr [rsp - 4] ; fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x000000000016b941 : fild word ptr [rax + rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000754ea : fild word ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000e7bf2 : fild word ptr [rbx - 0x6bf0bf06] ; ret 0xf883
0x000000000002a298 : fild word ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x000000000011ff2a : fild word ptr [rcx + rcx*4 - 0x10] ; syscall
0x000000000010cfac : fild word ptr [rcx - 0x77] ; sal byte ptr [rcx], 0xc0 ; syscall
0x000000000008d747 : fild word ptr [rcx - 1] ; push rbp ; cmp byte ptr [rax - 0x77], cl ; ret 0x1b8
0x0000000000082d93 : fild word ptr [rcx - 1] ; push rdi ; cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000166345 : fild word ptr [rdi] ; add byte ptr [rax + 0x39], cl ; retf 0x8949
0x0000000000093e02 : fimul dword ptr [rax + 0x21] ; ret 0x8948
0x0000000000029fa8 : fimul dword ptr [rax + 0x29] ; ret
0x00000000000b0505 : fimul dword ptr [rax + 0xf] ; mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x0000000000043534 : fimul dword ptr [rax + 9] ; ret 0x8948
0x000000000017c966 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000134fbf : fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x00000000000970d6 : fimul dword ptr [rax - 0x7d] ; retf 0x4901
0x000000000008c50b : fimul dword ptr [rcx + 0x29] ; fmul dword ptr [rax - 0x77] ; ret
0x000000000009bdbb : fimul dword ptr [rcx + rcx*4 - 0x1a] ; call rax
0x000000000009b838 : fimul dword ptr [rcx + rcx*4 - 0xa] ; mov rdi, r13 ; call rax
0x000000000006dee8 : fimul dword ptr [rcx - 0x73] ; push rcx ; add al, 0x83 ; clc ; pop rbp ; cmove r9, rdx ; jmp 0x6df17
0x000000000006dee7 : fimul dword ptr [rcx - 0x73] ; push rcx ; add al, 0x83 ; clc ; pop rbp ; cmove r9, rdx ; jmp 0x6df18
0x0000000000178e52 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39d9d71
0x0000000000179ed2 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39dadf1
0x0000000000042a72 : fimul dword ptr [rcx] ; ret 0xc889
0x000000000012acaa : fimul dword ptr [rdi] ; adc dword ptr [rbp - 0x78], esp ; call rax
0x00000000000c6691 : fimul dword ptr [rdi] ; xchg eax, ebx ; ret
0x000000000012372a : fimul word ptr [rax + 0xf] ; ret 0x8948
0x0000000000123963 : fimul word ptr [rax + 0xf] ; ret 0x8949
0x0000000000029fe7 : fimul word ptr [rax + 1] ; ret
0x000000000011509a : fimul word ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8348
0x00000000000ca29c : fimul word ptr [rax - 0x77] ; fucomip st(0) ; retf
0x0000000000155d4f : fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x0000000000065748 : fimul word ptr [rax - 0x77] ; ret
0x0000000000073178 : fimul word ptr [rax - 0x77] ; ret 0xdfe8
0x000000000006ea65 : fimul word ptr [rax - 0x77] ; retf 0x8944
0x000000000005682c : fimul word ptr [rbp + 0x11] ; retf
0x00000000000567ee : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x56848
0x00000000000584ae : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x58508
0x000000000008c5f5 : fimul word ptr [rbx - 0x8343] ; inc dword ptr [rcx + rcx*4 - 0x30] ; syscall
0x000000000011a372 : fimul word ptr [rcx + rcx*4 - 0x11] ; call r14
0x000000000009bc42 : fimul word ptr [rcx + rcx*4 - 0x19] ; call rax
0x0000000000152511 : fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x00000000000b53a1 : fist dword ptr [rsi + 0xf] ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000133e74 : fistp dword ptr [rbx + 0x31] ; rcr byte ptr [rbp - 0x3a], 2 ; add byte ptr [rcx + 0x5c], al ; pop r13 ; ret
0x000000000011e04a : fistp qword ptr [rax + 0x113] ; syscall
0x000000000011ded5 : fistp qword ptr [rax + 0x114] ; syscall
0x00000000001122f7 : fistp qword ptr [rax + 0x115] ; syscall
0x000000000011df87 : fistp qword ptr [rax + 0x116] ; syscall
0x000000000010b347 : fistp qword ptr [rax + 0x11] ; syscall
0x0000000000112395 : fistp qword ptr [rax + 0x11d] ; syscall
0x000000000011f487 : fistp qword ptr [rax + 0x120] ; syscall
0x00000000001135d2 : fistp qword ptr [rax + 0x127] ; syscall
0x0000000000113682 : fistp qword ptr [rax + 0x128] ; syscall
0x000000000010b3f7 : fistp qword ptr [rax + 0x12] ; syscall
0x000000000011f52d : fistp qword ptr [rax + 0x12b] ; syscall
0x000000000011f5d7 : fistp qword ptr [rax + 0x133] ; syscall
0x000000000010c436 : fistp qword ptr [rax + 0x135] ; syscall
0x0000000000112109 : fistp qword ptr [rax + 0x146] ; syscall
0x000000000011fda1 : fistp qword ptr [rax + 0x14] ; syscall
0x000000000011403f : fistp qword ptr [rax + 0x17] ; syscall
0x000000000011eeee : fistp qword ptr [rax + 0x2c] ; syscall
0x000000000011ecce : fistp qword ptr [rax + 0x2d] ; syscall
0x00000000000e13b2 : fistp qword ptr [rax + 0x3d] ; syscall
0x000000000011f757 : fistp qword ptr [rax + 0x45] ; syscall
0x000000000011f7ff : fistp qword ptr [rax + 0x46] ; syscall
0x000000000011de37 : fistp qword ptr [rax + 0xe8] ; syscall
0x00000000000e14b0 : fistp qword ptr [rax + 0xf7] ; syscall
0x0000000000081a35 : fistp qword ptr [rax] ; cli ; dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x0000000000055e84 : fistp word ptr [rax] ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001186a1 : fistp word ptr [rbx + 0x48] ; mov eax, ebp ; pop rbp ; pop r12 ; jmp rax
0x0000000000083eed : fistp word ptr [rbx + 0x5d] ; jmp rax
0x0000000000086730 : fistp word ptr [rbx + 0x5d] ; pop r12 ; jmp rax
0x000000000008decb : fistp word ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; jmp rax
0x00000000000b8fd1 : fistp word ptr [rsi] ; str word ptr [rcx + 0x63] ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000009ac82 : fisttp dword ptr [rax + 0x21] ; retf
0x0000000000140c5b : fisttp dword ptr [rax + 0x39] ; ret 0x850f
0x000000000004bed4 : fisttp dword ptr [rax + 0xf] ; ret 0x8948
0x00000000000ceebd : fisttp dword ptr [rax + 1] ; ret
0x00000000001946aa : fisttp dword ptr [rax + 9] ; ror dword ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000000d0479 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008d602 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000000316c7 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000057621 : fisttp dword ptr [rax - 0x77] ; ret
0x00000000001203af : fisttp dword ptr [rax - 0x77] ; sbb eax, 0xc3fa9 ; pop rbx ; ret
0x0000000000120399 : fisttp dword ptr [rax - 0x77] ; sbb eax, 0xc3fbf ; pop rbx ; ret
0x000000000015801a : fisttp dword ptr [rax - 0x7d] ; in al, dx ; or byte ptr [rbx - 0x6bf0f502], al ; ret
0x000000000011afe5 : fisttp dword ptr [rax - 0x7f] ; jrcxz 0x11aff4 ; loop 0x11aff5 ; dec dword ptr [rax - 0x7f] ; ret
0x00000000001026f4 : fisttp dword ptr [rbp - 0x77] ; ret 0x894d
0x00000000001580bf : fisttp dword ptr [rcx + 0x415d5bd8] ; pop rsp ; ret
0x0000000000143d59 : fisttp dword ptr [rcx + rcx*4 - 9] ; call 0x140836
0x000000000005763b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x000000000013bc30 : fisttp dword ptr [rdi] ; ret 0x8b48
0x000000000013a520 : fisttp dword ptr [rdi] ; test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x000000000006d658 : fisttp dword ptr [rdi] ; test dword ptr [rdi], esi ; sbb dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000d94c3 : fisttp dword ptr [rdi] ; test dword ptr [rsi], esi ; sbb byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000d9779 : fisttp dword ptr [rdi] ; test ebp, ebx ; adc eax, 0x89480000 ; ret 0x894c
0x000000000013a74a : fisttp dword ptr [rdi] ; test edi, ecx ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; fisttp dword ptr [rax + 1] ; ret
0x00000000000d99b9 : fisttp dword ptr [rdi] ; test esi, esp ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000a34ac : fisttp dword ptr [rdi] ; xchg eax, ebx ; ret
0x000000000009b38b : fisttp dword ptr [rdi] ; xchg eax, esp ; ret
0x00000000000d5e8b : fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0x8d48
0x0000000000125a9b : fisttp qword ptr [rax + 0x29] ; fimul word ptr [rax - 0x77] ; ret
0x0000000000181412 : fisttp qword ptr [rax + 0x63] ; ror dword ptr [rax + 1], 0xf8 ; ret
0x00000000000a6d5a : fisttp qword ptr [rax - 0x73] ; push rcx ; add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x0000000000039c35 : fisttp qword ptr [rax - 0x7d] ; ret 0x4401
0x00000000000e1b50 : fisttp qword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000097529 : fisttp qword ptr [rcx + rcx*4 + 0x44] ; and al, 8 ; call 0x93768
0x00000000000e5537 : fisttp qword ptr [rdi] ; mov dh, 0x42 ; add dword ptr [rbx - 0x7cb7fb37], eax ; ret 0xeb01
0x0000000000030b92 : fisttp qword ptr [rdi] ; ret 0xc389
0x00000000000ef62c : fisttp qword ptr [rdi] ; test dword ptr [rbp + 0x45fffffe], esi ; xor ecx, ecx ; add rdx, rax ; jmp 0xef661
0x0000000000106100 : fisttp qword ptr [rip - 0x41f0b800] ; retf 0x4864
0x000000000015ec1f : fisttp qword ptr [rsi] ; add byte ptr [rax], al ; mov rdx, rax ; jmp 0x15ebee
0x00000000000e4b1f : fisttp qword ptr [rsi] ; add byte ptr [rax], al ; mov rdx, rax ; jmp 0xe4aee
0x00000000000a00db : fisttp word ptr [rax + 0x29] ; ret 0x8d48
0x0000000000123b8d : fisttp word ptr [rax + 0xf] ; ret 0x8949
0x00000000000e19cf : fisttp word ptr [rax + rax] ; mov eax, 0x142 ; syscall
0x0000000000042022 : fisttp word ptr [rax - 0x39] ; ret
0x000000000015d54f : fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x00000000000462da : fisttp word ptr [rax - 0x75] ; and al, 8 ; call rax
0x0000000000046397 : fisttp word ptr [rax - 0x75] ; and al, 8 ; lea r13, [r14 + rbp] ; call rax
0x00000000001434f2 : fisttp word ptr [rax - 0x77] ; and al, 8 ; call r12
0x00000000000671db : fisttp word ptr [rax - 0x77] ; ret
0x0000000000153e66 : fisttp word ptr [rax - 0x77] ; ret 0x8949
0x00000000000823fa : fisttp word ptr [rax - 0x77] ; sbb eax, 0 ; add byte ptr [rax], al ; call 0x8ee1a
0x000000000011fe95 : fisttp word ptr [rax - 0x77] ; test eax, edx ; idiv edi ; inc dword ptr [rcx + rcx*4 - 0x10] ; syscall
0x00000000000576bf : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x00000000000e1666 : fisttp word ptr [rcx + 0x23b8c2] ; add byte ptr [rax], al ; syscall
0x000000000010d68d : fisttp word ptr [rcx + 0x3b8c2] ; add byte ptr [rax], al ; syscall
0x000000000011423d : fisttp word ptr [rcx + 0x4ab8c2] ; add byte ptr [rax], al ; syscall
0x00000000001142ed : fisttp word ptr [rcx + 0x4bb8c2] ; add byte ptr [rax], al ; syscall
0x000000000010d804 : fisttp word ptr [rcx + 0x55b8c2] ; add byte ptr [rax], al ; syscall
0x000000000004424c : fisttp word ptr [rcx + 0x82b8c2] ; add byte ptr [rax], al ; syscall
0x000000000014364b : fisttp word ptr [rcx + rcx*4 - 0x17] ; call r10
0x000000000005b10d : fisttp word ptr [rcx - 0x39] ; ret 0xffff
0x000000000006579c : fisttp word ptr [rcx - 0x7d] ; out dx, eax ; add eax, ebp ; ret
0x00000000000c7a8b : fisttp word ptr [rdi] ; xchg eax, ebx ; ret
0x000000000018328d : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x0000000000112828 : fisttp word ptr [rip - 0x80000000] ; mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000001019d0 : fisub dword ptr [rcx + rcx*4 + 0x10] ; mov eax, 0xffffffff ; ret
0x000000000018bef1 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000061d75 : fisub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x000000000018e51f : fisub dword ptr [rsi + 0xf] ; xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000000f5ff7 : fisub dword ptr [rsi - 0x7f] ; loope 0xf6002 ; add esi, esi ; ret
0x0000000000192ed3 : fisub dword ptr [rsi - 0x7f] ; ret 0x7fff
0x000000000018bbf1 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018e561 : fisubr word ptr [rax - 0x297af0f0] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000018a4a1 : fisubr word ptr [rcx] ; enter -0x73b, 0x77 ; ret
0x0000000000064b85 : fld dword ptr [rax - 0x80] ; jmp qword ptr [rdx]
0x00000000000dc9c1 : fld dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001649a3 : fld dword ptr [rbp + rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000190d65 : fld dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x3145
0x000000000016b91f : fld qword ptr [rax + rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000cdbbf : fld qword ptr [rax] ; add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x0000000000111874 : fld qword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000018aeea : fld qword ptr [rdx] ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x0000000000042b86 : fld st(0) ; fstp xword ptr [rdi] ; fld xword ptr [rsp + 8] ; fsubrp st(1) ; ret
0x0000000000041e7e : fld st(3) ; ret
0x0000000000185ee2 : fld st(5) ; std ; xlatb ; retf 0xfdc5
0x0000000000185f42 : fld st(5) ; std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x00000000000d5cec : fld xword ptr [rcx] ; ret
0x0000000000042cb8 : fld xword ptr [rsp + 8] ; fadd st(0) ; ret
0x0000000000042c18 : fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x0000000000042b8a : fld xword ptr [rsp + 8] ; fsubrp st(1) ; ret
0x0000000000042ab9 : fld xword ptr [rsp + 8] ; ret
0x0000000000042bd2 : fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; fld xword ptr [rsp + 8] ; ret
0x0000000000042b18 : fld xword ptr [rsp - 0x18] ; ret
0x0000000000113ff3 : fldenv [rbx + 0xd] ; add byte ptr [rcx - 0x77], cl ; retf 0x8b
0x00000000000ccc09 : fldenv [rsi + 0xf] ; jbe 0xccc66 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000aa6e9 : fldenv [rsi + 0xf] ; je 0xaa746 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000aa9c7 : fldenv [rsi + 0xf] ; je 0xaaa24 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000018bf71 : fldenv [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000aa5e1 : fldenv [rsi + 0xf] ; xlatb ; ret
0x00000000000cdd9c : fldenv [rsi + 0xf] ; xlatb ; retf 0xf66
0x0000000000056894 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x00000000000d2582 : fmul dword ptr [rax + 0x29] ; ror byte ptr [rbp + rcx*4 + 0x60], 1 ; dec dword ptr [rax - 0x77] ; ret 0x8d4a
0x00000000001133c5 : fmul dword ptr [rax + 0x39] ; ret
0x000000000009b59f : fmul dword ptr [rax + 0x39] ; ret 0x5b74
0x0000000000067551 : fmul dword ptr [rax + 0x39] ; ret 0x9975
0x00000000000706b3 : fmul dword ptr [rax + 1] ; ret 0x8d48
0x00000000000b9bf7 : fmul dword ptr [rax + 9] ; retf 0x4466
0x000000000011fc2a : fmul dword ptr [rax - 0x39] ; mov byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; retf
0x00000000000502df : fmul dword ptr [rax - 0x39] ; ret
0x00000000000baff9 : fmul dword ptr [rax - 0x3f] ; clc ; add cl, byte ptr [rax + 0x29] ; ret 0xf74
0x0000000000089705 : fmul dword ptr [rax - 0x77] ; ret
0x000000000007245e : fmul dword ptr [rax - 0x7d] ; ret
0x0000000000102473 : fmul dword ptr [rax - 0x7d] ; ret 0x4c28
0x000000000019610d : fmul dword ptr [rbx + rdi + 0x24] ; retf 0x3274
0x00000000000c1a56 : fmul dword ptr [rcx - 0x39] ; ret 0xffff
0x000000000010d934 : fmul dword ptr [rcx - 0x77] ; dec byte ptr [rcx + rcx*4 - 9] ; mov eax, 0x4f ; syscall
0x0000000000113cc9 : fmul dword ptr [rcx] ; add al, ch ; call qword ptr [rdx]
0x0000000000043178 : fmul dword ptr [rcx] ; enter -0x73f, 0x1f ; not eax ; and eax, edx ; ret
0x000000000002de4d : fmul dword ptr [rcx] ; retf 0xc8d
0x00000000000d69ff : fmul dword ptr [rdi] ; mov dh, 0x40 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000112f01 : fmul dword ptr [rdi] ; test dword ptr [rbp + 0x48000000], edi ; add esp, 0x70 ; pop rbx ; ret
0x000000000009b3a3 : fmul dword ptr [rdi] ; test dword ptr [rbp + 0x48000000], esp ; add esp, 0x10 ; pop rbx ; ret
0x000000000012c19b : fmul qword ptr [rax + 0x29] ; retf 0xc148
0x000000000012355f : fmul qword ptr [rax + 0xf] ; ret 0x8948
0x0000000000191b65 : fmul qword ptr [rax - 0x77] ; ret
0x00000000000dce9b : fmul qword ptr [rax - 0x7d] ; ret
0x00000000000a7799 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000000ab5cf : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000185ee0 : fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x0000000000185f40 : fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000010c357 : fnsave dword ptr [rdi - 0x1a] ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000018bcef : fnsave dword ptr [rdx - 0x10f09923] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000042cef : fnstcw word ptr [rdx + 0xe] ; jne 0x42d0b ; fadd st(0) ; add rsp, 8 ; ret
0x000000000011eff3 : fnstenv [rbx - 0x76befff4] ; retf 0x8b
0x000000000018bf6f : fnstenv [rdx - 0x10f09927] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000042cc6 : fnstsw ax ; fstp st(0) ; and eax, 0x200 ; ret
0x00000000000562e2 : fnstsw dword ptr [rax + 1] ; ret
0x0000000000136a53 : fnstsw dword ptr [rdi + 0x44e80007] ; ret 0
0x000000000018bcf1 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000042c1c : fscale ; fstp st(1) ; ret
0x00000000000b5a23 : fst dword ptr [rax + 0xf] ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000d977c : fst qword ptr [rip - 0x76b80000] ; ret 0x894c
0x0000000000167763 : fstp dword ptr [rax] ; add eax, 0x14634900 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000140936 : fstp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a02be : fstp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000bad6f : fstp qword ptr [rdi] ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x000000000009e68f : fstp qword ptr [rsi] ; or eax, 0x450f4800 ; ret 0xfc3
0x00000000000cebd4 : fstp qword ptr [rsp - 0x10] ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x0000000000042cc8 : fstp st(0) ; and eax, 0x200 ; ret
0x0000000000052722 : fstp st(0) ; call 0x12f214
0x0000000000042cee : fstp st(1) ; jp 0x42d0c ; jne 0x42d0c ; fadd st(0) ; add rsp, 8 ; ret
0x0000000000042c1e : fstp st(1) ; ret
0x000000000016bb1d : fstp st(3), st(0) ; add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000e8092 : fstp xword ptr [rcx - 0x17] ; lea rax, [rdx + rax*8] ; jmp 0xe8076
0x0000000000042b88 : fstp xword ptr [rdi] ; fld xword ptr [rsp + 8] ; fsubrp st(1) ; ret
0x0000000000042bd6 : fstp xword ptr [rdi] ; fld xword ptr [rsp + 8] ; ret
0x0000000000042b16 : fstp xword ptr [rdi] ; fld xword ptr [rsp - 0x18] ; ret
0x000000000018132c : fstp xword ptr [rdx] ; movsxd rcx, ecx ; lea rax, [rdx + rcx] ; sub rax, rdi ; ret
0x000000000010d6d2 : fsub dword ptr [rcx + rcx*4 + 1] ; mov eax, 0xffffffff ; jmp 0x10d6a9
0x0000000000114282 : fsub dword ptr [rcx + rcx*4 + 1] ; mov eax, 0xffffffff ; jmp 0x114259
0x0000000000114332 : fsub dword ptr [rcx + rcx*4 + 1] ; mov eax, 0xffffffff ; jmp 0x114309
0x00000000000e16aa : fsub dword ptr [rcx + rcx*4 + 1] ; mov eax, 0xffffffff ; jmp 0xe1682
0x00000000000441c8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000001159d0 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; jmp 0x1159b0
0x0000000000115aa0 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; jmp 0x115a7f
0x0000000000044198 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x0000000000048b58 : fsub dword ptr [rcx + rcx*4 + 2] ; mov rax, -1 ; ret
0x0000000000150d24 : fsub dword ptr [rcx - 1] ; dec dword ptr [rax - 0x73] ; adc eax, 0x3711 ; call qword ptr [rax]
0x0000000000042cc9 : fsub dword ptr [rip + 0x200] ; ret
0x00000000000f2c34 : fsub dword ptr [rip - 0x76b7000d] ; ret
0x000000000018153c : fsub dword ptr [rsi + 0xf] ; cmp ah, byte ptr [rbx - 0x25] ; cmp ch, byte ptr [rcx] ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000018bff1 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000061d37 : fsub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; adc dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf 0xf66
0x00000000000b0bb4 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000101981 : fsub dword ptr [rsp + rax*2 - 0x77] ; add byte ptr [rax - 1], bh ; ret
0x00000000000b9d3b : fsub qword ptr [rsi + 0xf] ; jmp 0xb9d07
0x000000000018bdf1 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000005f8ba : fsub qword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x00000000000afc4c : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000000f7cca : fsubp st(0) ; adc byte ptr [rdi + rdi*8 + 0xfc084ff], 0x85 ; retf
0x00000000000cebd2 : fsubp st(1) ; fstp qword ptr [rsp - 0x10] ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x0000000000155d80 : fsubp st(3) ; ret
0x0000000000181dd3 : fsubr qword ptr [rcx] ; enter -0x73b, 0x77 ; ret
0x00000000000c890b : fsubr qword ptr [rcx] ; ret
0x0000000000109919 : fsubr st(1) ; ret 0xffe6
0x0000000000072f1a : fsubr st(1) ; ret 0xffff
0x00000000001236da : fsubr st(1) ; sar ch, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000080cd0 : fsubr st(3) ; ret 0x1f0f
0x00000000001124a4 : fsubr st(3) ; ret 0xf66
0x0000000000080749 : fsubr st(3) ; ror dword ptr [rbp - 0x77], cl ; retf 0x4090
0x0000000000042b8e : fsubrp st(1) ; ret
0x00000000000f88b4 : fucomi st(0) ; pop rsi ; retf 0xfff2
0x0000000000075f24 : fucomi st(1) ; ret
0x000000000005edd1 : fucomi st(1) ; retf
0x00000000000268e7 : fucomi st(3) ; mov bl, 0x66 ; nop dword ptr [rax + rax] ; ret
0x000000000013fed5 : fucomi st(3) ; ret
0x000000000013fece : fucomi st(3) ; rol byte ptr [rbp + 0x31], cl ; in eax, dx ; xor ebx, ebx ; jmp 0x13fea4
0x0000000000082b5e : fucomip st(0) ; cld ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x00000000000e1832 : fucomip st(0) ; cmp byte ptr [rcx], dl ; sti ; dec dword ptr [rax - 0x77] ; ret
0x000000000007b0f1 : fucomip st(0) ; cmp dword ptr [rdi - 0x76b70006], ebx ; ret 0xb848
0x00000000000f884a : fucomip st(0) ; enter -0xd36, -1 ; mov rdi, qword ptr [r15] ; call 0x25323
0x0000000000081a33 : fucomip st(0) ; fistp qword ptr [rax] ; cli ; dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x0000000000117e32 : fucomip st(0) ; js 0x117ded ; hlt ; lcall [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000007cc75 : fucomip st(0) ; lea eax, [rsi - 0x76b70006] ; ret
0x0000000000133eca : fucomip st(0) ; loopne 0x133ec4 ; lcall [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x0000000000159a79 : fucomip st(0) ; mov dword ptr [rax - 0x76b70014], edi ; ret
0x00000000000289ef : fucomip st(0) ; mov ebx, 0x83000085 ; clc ; add dh, byte ptr [rsi - 0x77] ; ret 0x3d83
0x0000000000039572 : fucomip st(0) ; pop rax ; cmp al, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000bbffe : fucomip st(0) ; pop rsp ; retf
0x0000000000046e97 : fucomip st(0) ; ret
0x000000000005c218 : fucomip st(0) ; ret 0xfc90
0x00000000000ca29f : fucomip st(0) ; retf
0x0000000000069920 : fucomip st(0) ; retf 0x281
0x0000000000116630 : fucomip st(0) ; retf 0xf73e
0x000000000013c940 : fucomip st(0) ; retf 0xfd6a
0x00000000000dc200 : fucomip st(0) ; retf 0xfffc
0x00000000001167a9 : fucomip st(0) ; sar dword ptr [rbp - 1], 1 ; inc dword ptr [rbp - 0x7cd28b40] ; ret
0x0000000000115e3f : fucomip st(0) ; sti ; lock dec dword ptr [rax - 0x77] ; ret 0x8d48
0x000000000008c7ea : fucomip st(0) ; sub byte ptr [rbx - 0x3fce0007], cl ; pop rbx ; ret
0x000000000012f3d0 : fucomip st(0) ; sub dh, byte ptr [rip + 0x4858fff3] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x0000000000097f1f : fucomip st(0) ; wait ; out 0xff, eax ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000010f159 : fucomip st(0) ; xor dword ptr [rcx - 0xf], esp ; dec dword ptr [rax + 0x39] ; ret
0x0000000000068202 : fucomip st(1) ; xlatb ; idiv edi ; dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; retf 0xffcf
0x0000000000196c1b : fucomp st(3) ; mov dl, 0x66 ; nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000142168 : fucomp st(3) ; or eax, 0x441f0f ; add byte ptr [rcx - 0x73], al ; ret
0x0000000000042cc4 : fxam ; fnstsw ax ; fstp st(0) ; and eax, 0x200 ; ret
0x000000000017feb9 : hlt ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000dc90f : hlt ; add al, 0 ; add rsp, 0x80 ; pop rbx ; ret
0x0000000000169db7 : hlt ; add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000f5308 : hlt ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; retf 0x3076
0x0000000000180db9 : hlt ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000190432 : hlt ; cmp eax, dword ptr [rsi - 0xc] ; jne 0x19055a ; ret
0x0000000000190431 : hlt ; cmp eax, dword ptr [rsi - 0xc] ; jne 0x19055b ; ret
0x00000000000a6ebb : hlt ; cmp ecx, esi ; je 0xa6eb5 ; ret
0x0000000000105732 : hlt ; cmp r14, rbx ; ja 0x1056cf ; jmp 0x10570c
0x00000000000dbf4b : hlt ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e2068 : hlt ; dec dword ptr [rax - 0x77] ; ret 0x3d48
0x00000000000ddcb3 : hlt ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000dd2e3 : hlt ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000e20e1 : hlt ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000e436f : hlt ; dec dword ptr [rbx - 0x2e743] ; dec dword ptr [rax - 0x77] ; ret 0x8d4c
0x00000000000d953d : hlt ; inc edi ; add ecx, dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000d9bf8 : hlt ; inc edi ; add ecx, dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000101bae : hlt ; jne 0x101ba6 ; mov eax, dword ptr [rdx + 8] ; ret
0x0000000000101bad : hlt ; jne 0x101ba7 ; mov eax, dword ptr [rdx + 8] ; ret
0x0000000000190435 : hlt ; jne 0x190557 ; ret
0x0000000000190434 : hlt ; jne 0x190558 ; ret
0x0000000000117e36 : hlt ; lcall [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000000a711a : hlt ; mov byte ptr [rdi + 4], al ; mov rax, rdi ; ret
0x00000000000a704d : hlt ; mov byte ptr [rdi + 4], dl ; ret
0x000000000016ac7a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016592e : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016ac73 : hlt ; mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000e191e : hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x0000000000165aa3 : hlt ; mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000018159b : hlt ; movsxd rcx, ecx ; add rax, rcx ; sub rax, rdi ; ret
0x000000000018fa43 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000012d1f8 : hlt ; out 3, al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000a6e8b : hlt ; ret
0x000000000018fa47 : hlt ; sub eax, edx ; ret
0x000000000007c362 : idiv bh ; dec dword ptr [rax + 0x29] ; ret 0xf48
0x000000000007b878 : idiv bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000000cb6c9 : idiv bh ; dec dword ptr [rax - 0x77] ; ret 0xf748
0x000000000007b8a6 : idiv bh ; dec dword ptr [rbx - 0x8f74b] ; dec dword ptr [rax + 0x29] ; ret 0xb8
0x000000000007bc79 : idiv bh ; inc dword ptr [rax - 0x90f43] ; jmp qword ptr [rax]
0x000000000007b13b : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007bf50 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add dh, al ; test eax, esi ; idiv bh ; jmp qword ptr [rax]
0x0000000000076682 : idiv bh ; inc edi ; test dword ptr [rax], ebp ; idiv edi ; call qword ptr [rax]
0x000000000007bc7f : idiv bh ; jmp qword ptr [rax]
0x000000000012e4ef : idiv bh ; jmp qword ptr [rsi + 0xf]
0x00000000001150fc : idiv bh ; mov eax, 1 ; add rsp, 8 ; ret
0x00000000000bb010 : idiv bh ; mov rax, rbx ; pop rbx ; ret
0x000000000011a986 : idiv bh ; test r12d, r12d ; jne 0x11a9d4 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001121fb : idiv byte ptr [rax + 0x118] ; syscall
0x0000000000158c5d : idiv byte ptr [rcx] ; retf 0x850f
0x00000000000e1701 : idiv byte ptr [rdi + 0x1200011] ; mov eax, 0x38 ; syscall
0x0000000000126409 : idiv byte ptr [rdi + 0x2000004] ; call rcx
0x0000000000029e36 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x0000000000196106 : idiv byte ptr [rsi] ; add eax, 0x3c8b4c00 ; fmul dword ptr [rbx + rdi + 0x24] ; retf 0x3274
0x000000000010d93a : idiv dword ptr [rax + 0x4f] ; syscall
0x00000000000a74ac : idiv edi ; add rsp, 8 ; ret
0x0000000000075651 : idiv edi ; call qword ptr [rax]
0x000000000007b8ac : idiv edi ; dec dword ptr [rax + 0x29] ; ret 0xb8
0x0000000000044a2b : idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x0000000000060906 : idiv edi ; dec dword ptr [rax - 0x75] ; test dword ptr [rax - 0x7d000000], esp ; ret
0x00000000000545c3 : idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000007c11b : idiv edi ; dec dword ptr [rax - 0x77] ; retf 0x8948
0x000000000011fea6 : idiv edi ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0
0x00000000000762fb : idiv edi ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000107685 : idiv edi ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000068205 : idiv edi ; dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; retf 0xffcf
0x0000000000078936 : idiv edi ; dec dword ptr [rbx + rcx*4 - 0x6b] ; call 0x78945
0x0000000000075b74 : idiv edi ; dec dword ptr [rcx - 0x8cf7b] ; dec dword ptr [rax - 0x77] ; ret
0x000000000007b73b : idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000075463 : idiv edi ; inc dword ptr [rbp - 0x7b] ; in al, 0xf ; lahf ; ret
0x000000000007af93 : idiv edi ; inc dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x9f ; ret
0x000000000011fe9a : idiv edi ; inc dword ptr [rcx + rcx*4 - 0x10] ; syscall
0x000000000005463e : idiv edi ; inc dword ptr [rcx - 0x7d] ; cld ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x7c8b
0x000000000007b2f2 : idiv edi ; inc esi ; test eax, esi ; idiv bh ; jmp qword ptr [rax]
0x000000000012e454 : idiv edi ; jmp qword ptr [rsi + 0xf]
0x0000000000114aad : idiv edi ; mov eax, 1 ; add rsp, 8 ; ret
0x000000000007205e : idiv edi ; push qword ptr [rcx] ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x0000000000047c76 : idiv esi ; ret
0x0000000000047c63 : idiv esi ; shl rdx, 0x20 ; or rax, rdx ; ret
0x0000000000116192 : idiv r15 ; mov eax, 1 ; add rsp, 8 ; ret
0x0000000000047c75 : idiv rsi ; ret
0x000000000011af10 : imul al ; fidiv dword ptr [rdi - 1] ; dec dword ptr [rax - 0x77] ; ret
0x00000000000a74a8 : imul al ; jb 0xa7493 ; idiv edi ; add rsp, 8 ; ret
0x00000000000452ca : imul al ; jo 0x45318 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001346b7 : imul al ; ret
0x00000000000f3d58 : imul al ; ret 0xf314
0x0000000000034f52 : imul al ; sub byte ptr [rip - 0x76b7fff2], ah ; ret
0x000000000012f1ed : imul al ; sub eax, 0x48ffef60 ; add esp, 8 ; ret
0x0000000000191ffb : imul byte ptr [rcx] ; ret 0xd189
0x0000000000145d07 : imul ch ; jmp qword ptr [rsi + 0xf]
0x00000000000b4408 : imul cl ; ret 8
0x00000000000dd50e : imul eax ; jl 0xdd51f ; or byte ptr [rax], al ; mov rax, r14 ; call rax
0x000000000015977d : imul eax ; lodsd eax, dword ptr [rsi] ; mov ecx, 0x8948ffec ; ret 0x8d48
0x0000000000028cd2 : imul eax ; mov eax, 0x4800134c ; mov edi, ebx ; call r14
0x0000000000129b2a : imul eax ; push rax ; ret 0xffff
0x0000000000073e9f : imul eax ; retf
0x0000000000025790 : imul eax ; retf 0x16
0x0000000000109a50 : imul eax ; retf 0xfe0b
0x00000000000487d0 : imul eax ; retf 1
0x000000000015ecec : imul eax ; sahf ; retf 0xfffc
0x00000000000b68e5 : imul eax, dword ptr [rbx + 0xf], 0 ; movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000018e5a1 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x000000000015d620 : imul eax, dword ptr [rcx], 0x89480000 ; ret
0x00000000000aa377 : imul eax, dword ptr [rcx], 0x894d0000 ; retf
0x0000000000144273 : imul eax, dword ptr [rcx], 0xbe0f0000 ; ret 0xe883
0x00000000000d08d5 : imul eax, dword ptr [rdi], 0 ; add byte ptr [rdi], cl ; ret 0xf8c1
0x0000000000134b86 : imul eax, dword ptr [rdi], 0 ; add byte ptr [rsi - 0x3f], ah ; ret
0x00000000000a9d77 : imul eax, dword ptr [rdi], 0x894d0000 ; retf
0x00000000001905d2 : imul eax, edx ; shr rax, 0x38 ; ret
0x0000000000145a87 : imul ebp ; dec dword ptr [rax - 0x77] ; ret
0x0000000000122999 : imul ebp, dword ptr [rcx], -0x10 ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000803ba : imul ebp, dword ptr [rsp + rcx*2], -0x77 ; retf 0x8348
0x00000000000e8865 : imul ebp, edi, 0x3945ffff ; ret 0x870f
0x000000000014886a : imul ebx, dword ptr [rax + 0x4c], 1 ; call 0x48d711c2
0x00000000001261e0 : imul ebx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008c946 : imul ebx, dword ptr [rax], 0x4c ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001670d3 : imul ebx, dword ptr [rdi], 0x63490005 ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000116001 : imul ebx, dword ptr [rsi], 0xd ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x000000000006cdba : imul ecx ; ret
0x0000000000193e40 : imul ecx ; ret 0xfff7
0x0000000000112d6f : imul ecx, dword ptr [rax - 0x7d], 0x5d5b10c4 ; pop r12 ; ret
0x0000000000126140 : imul ecx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009c660 : imul ecx, dword ptr [rax], 0x48 ; mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009c6e2 : imul ecx, dword ptr [rax], 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000164313 : imul ecx, dword ptr [rbx + 5], 0x14634900 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000162d07 : imul ecx, dword ptr [rbx], 0x894d0000 ; retf
0x000000000017ccd7 : imul ecx, dword ptr [rcx], 0x894d0000 ; retf
0x00000000000a9a77 : imul ecx, dword ptr [rdx], 0x894d0000 ; retf
0x0000000000113a67 : imul ecx, dword ptr [rip + 0x75c08500], 0x72b82a ; add byte ptr [rax], al ; syscall
0x00000000000d2a75 : imul ecx, ecx, 0x64 ; cmp edi, ecx ; je 0xd2a87 ; ret
0x000000000012604d : imul edi, dword ptr [rax], 0x48 ; mov edx, ebp ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x000000000004534b : imul edi, ebp ; add r15, qword ptr [rsp + 8] ; mov rsi, r15 ; call r14
0x0000000000126190 : imul edx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001190e5 : imul edx, dword ptr [rax], 0x48 ; test ebp, ebp ; jne 0x119123 ; mov rdi, qword ptr [rbx] ; call r12
0x00000000000a9477 : imul edx, dword ptr [rax], 0x894d0000 ; retf
0x00000000000a9177 : imul edx, dword ptr [rbx], 0x894d0000 ; retf
0x0000000000114ef1 : imul edx, dword ptr [rsi + 0xd], 0 ; add rsp, 8 ; ret
0x00000000000a8e77 : imul edx, dword ptr [rsi], 0x894d0000 ; retf
0x00000000000925ae : imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000170724 : imul esp, dword ptr [rbx], 0x894d0000 ; retf
0x00000000000b530c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x00000000001905d1 : imul rax, rdx ; shr rax, 0x38 ; ret
0x000000000012c711 : in al, 0 ; add byte ptr [rax], al ; mov rsi, rbp ; mov edi, ebx ; mov eax, ecx ; syscall
0x0000000000190468 : in al, 0 ; add byte ptr [rax], al ; ret
0x00000000000dbac8 : in al, 0 ; add byte ptr [rax], al ; syscall
0x000000000010081b : in al, 0x39 ; retf 0x8d0f
0x00000000000a6f0b : in al, 0x41 ; cmp eax, ecx ; je 0xa6ef6 ; ret
0x000000000012694b : in al, 0x48 ; add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000ee744 : in al, 0x4a ; movsxd rax, dword ptr [rcx] ; add rax, rcx ; jmp rax
0x0000000000165926 : in al, 0x4c ; mov dword ptr [rdi - 0x14], ebx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000010c36a : in al, 0x5b ; pop rbp ; mov eax, r12d ; pop r12 ; ret
0x000000000009feb2 : in al, 0x5b ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x00000000000b4fdc : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000011d964 : in al, 0x74 ; or ecx, dword ptr [rax - 0x77] ; out dx, eax ; call r12
0x0000000000059142 : in al, 0x74 ; out 0xe8, al ; retf 0xfcc2
0x000000000011a98a : in al, 0x75 ; cmp al, 0x5b ; pop rbp ; pop r12 ; ret
0x0000000000152090 : in al, 0x75 ; or eax, 0x5c415d5b ; ret
0x000000000006587a : in al, 0x75 ; retf 0x37e9
0x0000000000100b33 : in al, 0x75 ; retf 0x6348
0x00000000000a0d9b : in al, 0x75 ; retf 0x9066
0x00000000000cdf26 : in al, 0x75 ; test al, 0xf0 ; jne 0xcdf8b ; lea rax, [rdi - 0x10] ; ret
0x00000000001200cf : in al, 0x89 ; ret
0x000000000012d138 : in al, 0xbc ; add eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x00000000000e2c9d : in al, 0xc ; add al, ch ; retf
0x0000000000189747 : in al, 0xc3 ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000196f4f : in al, 0xe8 ; ret
0x0000000000039d7a : in al, 0xeb ; ret
0x00000000000437f8 : in al, 0xed ; adc al, 0 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000075468 : in al, 0xf ; lahf ; ret
0x000000000004626f : in al, 0xf ; xchg eax, ebp ; ret 0x8548
0x0000000000122bb7 : in al, 0xf ; xchg eax, ebp ; ret 0xdaf7
0x000000000016ac5a : in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000000ba52e : in al, 0xf3 ; ret
0x000000000009aa15 : in al, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xcb8
0x00000000000b5e48 : in al, 6 ; add byte ptr [rax], al ; ret
0x000000000015b909 : in al, 8 ; add byte ptr [rax + 1], bh ; add rsp, 8 ; ret
0x00000000000989c9 : in al, dx ; adc al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000009187e : in al, dx ; adc al, ch ; cmp dword ptr [rdx], -7 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e1306 : in al, dx ; adc al, ch ; ret
0x000000000016a537 : in al, dx ; add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000df24f : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; push rdi ; retf
0x00000000000880b4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xa3c
0x00000000001505b4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xfdb7
0x0000000000025fdb : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf
0x00000000000e1d0f : in al, dx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000005a90b : in al, dx ; add dword ptr [rcx + 0xf], eax ; mov esi, 0x89412404 ; ret
0x000000000017c030 : in al, dx ; add eax, 0x83480000 ; ret 0xeb10
0x00000000001023e6 : in al, dx ; call 0x25198
0x00000000000e65a3 : in al, dx ; cmp al, 0x3f ; jne 0xe656f ; mov eax, 1 ; ret
0x000000000015f6b7 : in al, dx ; dec dword ptr [rax - 0x75] ; mov ebp, 0xfffffb20 ; mov rdx, rax ; jmp 0x15f6e1
0x0000000000159a7d : in al, dx ; dec dword ptr [rax - 0x77] ; ret
0x0000000000159781 : in al, dx ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x0000000000048a2e : in al, dx ; fiadd word ptr [rip + 0x48000000] ; mov dword ptr [rsi + 0x10], eax ; xor eax, eax ; ret
0x0000000000115cf3 : in al, dx ; mov byte ptr [r8 - 1], 0 ; ret
0x000000000012be53 : in al, dx ; mov eax, r11d ; and eax, 0xc ; cmp eax, 4 ; je 0x12be6c ; ret
0x000000000016592a : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000154574 : in al, dx ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x00000000000a7132 : in al, dx ; mov word ptr [rdi + 4], ax ; mov rax, rdi ; ret
0x00000000000a7217 : in al, dx ; mov word ptr [rdi + 4], dx ; ret
0x000000000016b05a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000047af8 : in al, dx ; or al, ch ; adc edi, edx ; std ; dec dword ptr [rax - 0x77] ; sub byte ptr [rax - 0x77], cl ; ret
0x000000000005372c : in al, dx ; or al, ch ; add r15b, r14b ; dec dword ptr [rax - 0x77] ; ret
0x00000000000a7587 : in al, dx ; or al, ch ; movabs byte ptr [0x3948c58948fff7da], al ; ret
0x00000000001456ca : in al, dx ; or al, ch ; outsd dx, dword ptr [rsi] ; ret 0
0x000000000012e153 : in al, dx ; or byte ptr [rax + 0x39], cl ; ret 0x976
0x00000000000824f3 : in al, dx ; or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x000000000017cd54 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000015801d : in al, dx ; or byte ptr [rbx - 0x6bf0f502], al ; ret
0x000000000015976f : in al, dx ; push qword ptr [rcx] ; ror byte ptr [rax - 0x77], cl ; ret
0x00000000001605fc : in al, dx ; push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or bl, al ; nop dword ptr [rax] ; ret
0x0000000000098850 : in al, dx ; ret
0x00000000000bb7e4 : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000010ca64 : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000057d77 : in eax, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000e3904 : in eax, 0 ; add byte ptr [rax], al ; syscall
0x0000000000120173 : in eax, 0x41 ; or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000165736 : in eax, 0x4c ; mov dword ptr [rdi - 0x13], ebx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000110247 : in eax, 0x4e ; int1 ; dec dword ptr [rax - 0x77] ; ret 0x348
0x0000000000117c7e : in eax, 0x66 ; comiss xmm1, xmm4 ; jae 0x117c7a ; divsd xmm0, xmm2 ; jmp 0x117ce4
0x000000000018168f : in eax, 0x74 ; ffreep st(5) ; std ; xlatb ; retf
0x0000000000189d10 : in eax, 0x76 ; ffreep st(5) ; std ; xlatb ; retf
0x000000000008e85b : in eax, 0x83 ; retf 0x8310
0x000000000018168b : in eax, 0xda ; faddp st(5) ; in eax, 0x74 ; ffreep st(5) ; std ; xlatb ; retf
0x0000000000042cc5 : in eax, 0xdf ; loopne 0x42cb0 ; fsub dword ptr [rip + 0x200] ; ret
0x00000000000600dd : in eax, 0xdf ; loopne 0x6006e ; ret
0x0000000000054b02 : in eax, 0xe9 ; ret
0x000000000002974c : in eax, 0xeb ; or eax, 0xbe0f4890 ; ret 0xf641
0x00000000000ce473 : in eax, 0xf ; je 0xce498 ; add rax, 2 ; ret
0x00000000000ba699 : in eax, 0xf0 ; pop rbx ; cmovne rax, rdx ; ret
0x00000000000e6dd1 : in eax, 0xf3 ; dec dword ptr [rax - 0x77] ; ret
0x000000000016acda : in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000046bb4 : in eax, 0xfd ; dec dword ptr [rax - 0x77] ; ret
0x0000000000036e12 : in eax, 0xfe ; inc dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x88 ; retf 0xfffe
0x000000000012781a : in eax, 0xff ; inc dword ptr [rbp + 0x4dd574c0] ; mov esi, dword ptr [rdi + 0x38] ; jmp 0x1277f6
0x000000000010cb89 : in eax, 1 ; jne 0x10cbd9 ; mov eax, 0x10c ; syscall
0x000000000010b937 : in eax, 7 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000000437f9 : in eax, dx ; adc al, 0 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000642cf : in eax, dx ; adc al, 0 ; jmp 0x6429d
0x000000000009d681 : in eax, dx ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000145a88 : in eax, dx ; dec dword ptr [rax - 0x77] ; ret
0x000000000014b0e3 : in eax, dx ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000014b198 : in eax, dx ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000001519c5 : in eax, dx ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + rax*4 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x000000000015208c : in eax, dx ; inc dword ptr [rbp - 0x7b] ; in al, 0x75 ; or eax, 0x5c415d5b ; ret
0x000000000014e003 : in eax, dx ; inc dword ptr [rcx + 0xfffb] ; add byte ptr [rdi], cl ; xchg eax, edi ; ret
0x000000000011d95f : in eax, dx ; je 0x11d94e ; test r12, r12 ; je 0x11d97e ; mov rdi, rbp ; call r12
0x0000000000145d08 : in eax, dx ; jmp qword ptr [rsi + 0xf]
0x0000000000105c4a : in eax, dx ; jne 0x105c39 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001190e9 : in eax, dx ; jne 0x11911f ; mov rdi, qword ptr [rbx] ; call r12
0x000000000011912c : in eax, dx ; jne 0x119188 ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000119154 : in eax, dx ; jne 0x1191ec ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000140934 : in eax, dx ; jne 0x14091b ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000194dc2 : in eax, dx ; jne 0x194db1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001962ac : in eax, dx ; jne 0x196297 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001963df : in eax, dx ; jne 0x1963c1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b9c52 : in eax, dx ; lea rax, [rcx - 1] ; ret
0x00000000000b9619 : in eax, dx ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000b962f : in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000b9651 : in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000b966f : in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000b968f : in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000b96b5 : in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000b96d1 : in eax, dx ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000b96f1 : in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000b9711 : in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000b9737 : in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000b9759 : in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000b9777 : in eax, dx ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000b9797 : in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000b97b3 : in eax, dx ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000b97d3 : in eax, dx ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000b97f3 : in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000b9813 : in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000b9839 : in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000b9889 : in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000b955f : in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000b957d : in eax, dx ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000b959d : in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000b95bf : in eax, dx ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000b95df : in eax, dx ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000b95ff : in eax, dx ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000b9495 : in eax, dx ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000b94a7 : in eax, dx ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000b94bd : in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000b94d5 : in eax, dx ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000b94eb : in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000b94fd : in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000b951b : in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000b9527 : in eax, dx ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000b953d : in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000b9481 : in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000016573a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016b0da : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000fc7db : in eax, dx ; movsxd rax, dword ptr [rdi + r13*4] ; add rax, rdi ; jmp rax
0x00000000000ee83b : in eax, dx ; movsxd rax, dword ptr [rdx + r13*4] ; add rax, rdx ; jmp rax
0x00000000001095f7 : in eax, dx ; or al, byte ptr [r8] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000005159c : in eax, dx ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rdx], 0x4d ; add edx, eax ; jmp 0x515c8
0x0000000000056c28 : in eax, dx ; or byte ptr [rax - 0x75], cl ; add byte ptr [r13 + 0x39], r9b ; ret 0xcd74
0x00000000001808c0 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011db1a : in eax, dx ; pop rax ; pop rdi ; call rax
0x0000000000082369 : in eax, dx ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000082475 : in eax, dx ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000035aa4 : in eax, dx ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000063883 : in eax, dx ; ret
0x000000000012e6bf : in eax, dx ; sti ; add eax, 0xf9834800 ; add al, 0x48 ; cmovne eax, edx ; ret
0x000000000009fd3f : in eax, dx ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000bad2f : in eax, dx ; sub eax, 0xf480001 ; ret 0xfc3
0x00000000000b9da2 : in eax, dx ; sub rax, 1 ; ret
0x00000000001601ab : in eax, dx ; syscall
0x000000000009c4f2 : in eax, dx ; xor eax, eax ; ret
0x000000000013fed3 : in eax, dx ; xor ebx, ebx ; jmp 0x13fe9f
0x0000000000101c14 : inc al ; add byte ptr [rax], al ; setne al ; lea eax, [rax + rax*8 + 5] ; ret
0x000000000018d4d9 : inc bl ; cmp dl, 1 ; jb 0x18d4ef ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000018dba8 : inc bl ; cmp dl, 1 ; jb 0x18dbba ; mov byte ptr [rdi], cl ; ret
0x000000000018dba7 : inc bl ; cmp dl, 1 ; jb 0x18dbbb ; mov byte ptr [rdi], cl ; ret
0x000000000013b44f : inc byte ptr [rax + 0xf000000] ; ret 0xfc3
0x0000000000169337 : inc byte ptr [rax + rax] ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000011e541 : inc byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000148fb5 : inc byte ptr [rax] ; and byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg dword ptr [rax - 0x77000000], ebx ; retf 0xe183
0x000000000013b82e : inc byte ptr [rax] ; retf 0x3b9a
0x00000000000546ce : inc byte ptr [rbx - 0x68f0fc08] ; ret 0x8545
0x000000000005496d : inc byte ptr [rbx - 0x6bf0021e] ; ret 0x8341
0x00000000000314b5 : inc byte ptr [rbx] ; je 0x314c4 ; ret
0x00000000000be243 : inc byte ptr [rcx + 0x29] ; ret
0x00000000000c343d : inc byte ptr [rcx + 0x29] ; sar byte ptr [rcx], cl ; ret 0x1d74
0x0000000000118c5a : inc byte ptr [rcx - 0x7d] ; ret 0x4901
0x00000000000dba81 : inc byte ptr [rcx] ; je 0xdba96 ; xor eax, eax ; ret
0x000000000008c2aa : inc byte ptr [rdx] ; cmove edx, ecx ; mov dword ptr [rdi], edx ; ret
0x000000000010c256 : inc byte ptr [rdx] ; ja 0x10c26e ; mov dword ptr [rdi + 0x10c], esi ; xor eax, eax ; ret
0x0000000000155d7d : inc byte ptr [rdx] ; je 0x155d64 ; jmp 0x155d4b
0x00000000000a6c19 : inc dword ptr [r8] ; mov qword ptr [rdx], rcx ; ret
0x00000000000fe817 : inc dword ptr [rax + 0x3108384b] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000e6770 : inc dword ptr [rax - 0x76b7ffc8] ; ret
0x000000000007bc7b : inc dword ptr [rax - 0x90f43] ; jmp qword ptr [rax]
0x0000000000192ecf : inc dword ptr [rax] ; add bh, dh ; fisub dword ptr [rsi - 0x7f] ; ret 0x7fff
0x000000000019267b : inc dword ptr [rax] ; add byte ptr [rax + 0x21], cl ; ret 0x8948
0x0000000000193624 : inc dword ptr [rax] ; add byte ptr [rax + 0xf], cl ; mov edx, 0x21482fea ; ret 0x41e9
0x000000000009fd80 : inc dword ptr [rax] ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000001947d6 : inc dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; je 0x19480b ; adc byte ptr [rcx - 0x77], cl ; ret
0x000000000007b73d : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007b13d : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000e73b3 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c04
0x00000000000d2d0c : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdx - 0x3a], al ; add al, 0x28 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007bf52 : inc dword ptr [rax] ; add byte ptr [rax], al ; add dh, al ; test eax, esi ; idiv bh ; jmp qword ptr [rax]
0x000000000018c501 : inc dword ptr [rax] ; add byte ptr [rax], al ; and ecx, 0xff ; sub eax, ecx ; ret
0x00000000000ba640 : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove rax, rcx ; ret
0x00000000000e35dc : inc dword ptr [rax] ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000c5248 : inc dword ptr [rax] ; add byte ptr [rax], al ; je 0xc5255 ; ret
0x0000000000151524 : inc dword ptr [rax] ; add byte ptr [rax], al ; jle 0x151544 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000148ee5 : inc dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, rbp ; call 0x1551a9
0x000000000019044d : inc dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000018c507 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x000000000011e5d1 : inc dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000193059 : inc dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; ret 0x894d
0x0000000000192d62 : inc dword ptr [rax] ; add byte ptr [rcx], bl ; sal bh, cl ; shl byte ptr [rsi - 0x7f], cl ; ret 0x7fff
0x0000000000192f00 : inc dword ptr [rax] ; add byte ptr [rcx], bl ; shl byte ptr [rsi - 0x7f], cl ; ret 0x7fff
0x000000000006dcce : inc dword ptr [rax] ; and byte ptr [rax], al ; add byte ptr [rbp - 0x76b70088], cl ; ret
0x00000000000f0544 : inc dword ptr [rax] ; cld ; dec dword ptr [rcx] ; ret 0x5189
0x00000000000fd9df : inc dword ptr [rax] ; cld ; dec dword ptr [rcx] ; retf 0x5089
0x00000000000a6c1a : inc dword ptr [rax] ; mov qword ptr [rdx], rcx ; ret
0x00000000000437e0 : inc dword ptr [rax] ; or byte ptr [rax - 0x3f], 0xe0 ; xor byte ptr [rax + 0x21], cl ; retf 0x948
0x000000000012f31d : inc dword ptr [rax] ; or eax, edi ; bswap eax ; ret
0x0000000000115c9e : inc dword ptr [rax] ; ret
0x00000000000ef632 : inc dword ptr [rbp + 0x31] ; leave ; add rdx, rax ; jmp 0xef65b
0x00000000000e7f71 : inc dword ptr [rbp + 0x39] ; ret 0x850f
0x00000000000e8868 : inc dword ptr [rbp + 0x39] ; ret 0x870f
0x000000000015aee0 : inc dword ptr [rbp + 0x480b78c0] ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001133d8 : inc dword ptr [rbp + 0x48b678c0] ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000039453 : inc dword ptr [rbp + 0x4dc879c0] ; mov edi, esp ; jmp 0x39430
0x000000000012781c : inc dword ptr [rbp + 0x4dd574c0] ; mov esi, dword ptr [rdi + 0x38] ; jmp 0x1277f4
0x000000000006c4da : inc dword ptr [rbp + 0x56850fdb] ; ret 0xffff
0x000000000013b69d : inc dword ptr [rbp - 0x14728b40] ; ret 0x1f0f
0x0000000000114711 : inc dword ptr [rbp - 0x39fc8640] ; add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x0000000000075eb2 : inc dword ptr [rbp - 0x71f025] ; or eax, 0x634c0000 ; ret
0x000000000015e5bc : inc dword ptr [rbp - 0x76b08a40] ; ret
0x00000000000db49d : inc dword ptr [rbp - 0x77] ; retf
0x00000000000654ea : inc dword ptr [rbp - 0x78] ; add byte ptr gs:[rax - 0x7d], cl ; ret
0x000000000006d655 : inc dword ptr [rbp - 0x7b] ; fisttp dword ptr [rdi] ; test dword ptr [rdi], esi ; sbb dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000d94c0 : inc dword ptr [rbp - 0x7b] ; fisttp dword ptr [rdi] ; test dword ptr [rsi], esi ; sbb byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000d9776 : inc dword ptr [rbp - 0x7b] ; fisttp dword ptr [rdi] ; test ebp, ebx ; adc eax, 0x89480000 ; ret 0x894c
0x00000000000d99b6 : inc dword ptr [rbp - 0x7b] ; fisttp dword ptr [rdi] ; test esi, esp ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000011a987 : inc dword ptr [rbp - 0x7b] ; in al, 0x75 ; cmp al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000015208d : inc dword ptr [rbp - 0x7b] ; in al, 0x75 ; or eax, 0x5c415d5b ; ret
0x0000000000075465 : inc dword ptr [rbp - 0x7b] ; in al, 0xf ; lahf ; ret
0x000000000015f5e6 : inc dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xa
0x00000000000752d2 : inc dword ptr [rbp - 0x7b] ; sal byte ptr [rbp + 0x52], 0x84 ; sal byte ptr [rsi + rcx*2 + 0x48], 0x63 ; retf
0x00000000000e6277 : inc dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x85 ; retf 1
0x0000000000036e14 : inc dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x88 ; retf 0xfffe
0x000000000007af95 : inc dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x9f ; ret
0x0000000000107cb9 : inc dword ptr [rbp - 0x7cc58b25] ; sti ; add cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0x00000000001167ae : inc dword ptr [rbp - 0x7cd28b40] ; ret
0x000000000011680a : inc dword ptr [rbp - 0x7cee8b40] ; ret
0x0000000000027858 : inc dword ptr [rbp - 0x7cfc8a40] ; retf
0x0000000000029b88 : inc dword ptr [rbx + 0x1bcb640d] ; add byte ptr [rdx], al ; add rsp, 8 ; ret
0x0000000000072786 : inc dword ptr [rbx + 0x634802c2] ; ror byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000013fc08 : inc dword ptr [rbx + 0xa99b40d] ; add byte ptr [rdx], al ; add rsp, 8 ; ret
0x00000000000e44f8 : inc dword ptr [rbx - 0x30773] ; call qword ptr [rax]
0x0000000000077adf : inc dword ptr [rbx - 0x427cfe20] ; call 0x11077aed
0x000000000007e88f : inc dword ptr [rbx - 0x50743] ; jmp qword ptr [rax]
0x000000000014d3fb : inc dword ptr [rbx - 0x70f0fe08] ; retf
0x000000000006540a : inc dword ptr [rbx - 0x78f0d007] ; mov esi, 0x8900002a ; retf 0xc183
0x0000000000068f99 : inc dword ptr [rbx - 0x78f0d007] ; retf 0x14
0x0000000000066f58 : inc dword ptr [rbx - 0x78f0d007] ; retf 0x21
0x000000000015ce7b : inc dword ptr [rbx - 0x7af00008] ; retf
0x000000000013a44f : inc dword ptr [rbx - 0xc8b0a08] ; pop rbx ; ret
0x0000000000048664 : inc dword ptr [rbx] ; add byte ptr [rax], al ; xor eax, ecx ; ret
0x00000000000ba737 : inc dword ptr [rbx] ; div ecx ; mov eax, eax ; ret
0x00000000000ba66c : inc dword ptr [rbx] ; ret
0x000000000006221a : inc dword ptr [rcx + 0xf] ; mov dh, 0x56 ; or al, 0xf6 ; ret 0x7440
0x000000000007c005 : inc dword ptr [rcx + 0xf] ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x00000000000db4f4 : inc dword ptr [rcx + 0xf] ; ret 0x8589
0x000000000005dc68 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xeb83
0x000000000014e004 : inc dword ptr [rcx + 0xfffb] ; add byte ptr [rdi], cl ; xchg eax, edi ; ret
0x000000000010e716 : inc dword ptr [rcx + 0xfffe1] ; add byte ptr [rcx], cl ; retf 0xea81
0x0000000000075f1f : inc dword ptr [rcx + 1] ; fbstp tbyte ptr [rcx] ; fucomi st(1) ; ret
0x000000000007e6ca : inc dword ptr [rcx + 1] ; ret
0x0000000000064f64 : inc dword ptr [rcx + rbp*8] ; ret
0x0000000000071d46 : inc dword ptr [rcx + rcx*4 + 0x38] ; jmp 0x6e01b
0x000000000011fe9c : inc dword ptr [rcx + rcx*4 - 0x10] ; syscall
0x000000000008c5fb : inc dword ptr [rcx + rcx*4 - 0x30] ; syscall
0x000000000019103f : inc dword ptr [rcx - 0x44] ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf 0x8949
0x00000000000c1a4d : inc dword ptr [rcx - 0x45] ; add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; fmul dword ptr [rcx - 0x39] ; ret 0xffff
0x0000000000055dd3 : inc dword ptr [rcx - 0x46] ; or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x0000000000051f07 : inc dword ptr [rcx - 0x47] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x1f0f
0x000000000002dd68 : inc dword ptr [rcx - 0x47] ; add eax, 0xe9000000 ; retf
0x00000000000e7a1f : inc dword ptr [rcx - 0x75] ; or byte ptr [r13 + 0x39], r8b ; ret 0x1176
0x00000000000e8485 : inc dword ptr [rcx - 0x75] ; pop rbp ; adc cl, ch ; retf
0x000000000006754e : inc dword ptr [rcx - 0x77] ; fmul dword ptr [rax + 0x39] ; ret 0x9975
0x00000000000e7044 : inc dword ptr [rcx - 0x77] ; ret
0x0000000000101c87 : inc dword ptr [rcx - 0x77] ; ret 0x489
0x00000000000d3236 : inc dword ptr [rcx - 0x77] ; ret 0x9ee9
0x00000000000e7a6b : inc dword ptr [rcx - 0x77] ; ret 0xb9e9
0x0000000000058fbb : inc dword ptr [rcx - 0x77] ; retf
0x0000000000054640 : inc dword ptr [rcx - 0x7d] ; cld ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x7c8b
0x00000000000e7751 : inc dword ptr [rcx - 0x7d] ; cli ; dec dword ptr [rdi] ; xchg eax, esp ; ret
0x000000000013d2ec : inc dword ptr [rcx - 0x7d] ; ret
0x0000000000096c3b : inc dword ptr [rcx - 0x7d] ; ret 0x4901
0x00000000000a2e3f : inc dword ptr [rcx - 0x7d] ; ret 0xeb01
0x000000000011751e : inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x000000000008841f : inc dword ptr [rcx - 1] ; push rbp ; sbb cl, ch ; retf 0xfffc
0x000000000013c165 : inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret 0x149
0x000000000007ef14 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rdx ; jmp rax
0x000000000007de58 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; add al, 0x87 ; add rax, rdx ; jmp rax
0x000000000007e260 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; add al, 0x88 ; add rax, rdx ; jmp rax
0x000000000007edc5 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; int1 ; jmp rax
0x0000000000078c05 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; rol byte ptr [rcx - 1], cl ; jrcxz 0x78ba6 ; ret 0xc083
0x00000000000d0318 : inc dword ptr [rcx] ; ret 0xb70f
0x00000000001931f0 : inc dword ptr [rdi] ; add byte ptr [rax + 0x21], cl ; ret 0x8548
0x000000000005c2f4 : inc dword ptr [rdi] ; ja 0x5c2df ; mov rax, rsi ; ret
0x0000000000183a6d : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000000d0317 : inc dword ptr ss:[rcx] ; ret 0xb70f
0x00000000000b9e6a : inc eax ; add rsp, 0x100 ; sub rax, rdx ; ret
0x0000000000042a99 : inc eax ; shr eax, 0x1f ; ret
0x0000000000182a0c : inc ebp ; std ; xlatb ; ret 0xe883
0x000000000015e95f : inc ebx ; mov eax, 0xfffffffe ; ret
0x00000000000a719c : inc ebx ; nop ; mov byte ptr [rdi], 0 ; lea rax, [rdi + rax - 1] ; ret
0x00000000000898bc : inc ebx ; nop ; xor eax, eax ; ret
0x000000000017a566 : inc ebx ; nop dword ptr [rax + rax] ; ret
0x0000000000092916 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000011e28a : inc ebx ; nop dword ptr [rax] ; mov eax, 0x9e ; syscall
0x0000000000092934 : inc ebx ; nop word ptr cs:[rax + rax] ; ret
0x00000000000ecc02 : inc ebx ; xor eax, eax ; pop rbx ; ret
0x0000000000087332 : inc ebx ; xor eax, eax ; ret
0x00000000000d984b : inc edi ; add ebp, dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000d953e : inc edi ; add ecx, dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000d9bf9 : inc edi ; add ecx, dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000076684 : inc edi ; test dword ptr [rax], ebp ; idiv edi ; call qword ptr [rax]
0x00000000000661a6 : inc esi ; add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x0000000000115051 : inc esi ; jmp qword ptr [r8]
0x000000000007b2f4 : inc esi ; test eax, esi ; idiv bh ; jmp qword ptr [rax]
0x000000000018d4d8 : inc r11b ; cmp dl, 1 ; jb 0x18d4f0 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000017d4d4 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000181170 : insb byte ptr [rdi], dx ; add dword ptr [rcx], 0 ; mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000000dbf31 : insb byte ptr [rdi], dx ; add eax, 0xe3394c01 ; jne 0xdbf2c ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000193f90 : insb byte ptr [rdi], dx ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf 0xc149
0x00000000000fbff4 : insb byte ptr [rdi], dx ; and al, 0x70 ; jmp 0xfb0f6
0x0000000000042bd3 : insb byte ptr [rdi], dx ; and al, 0xe8 ; fstp xword ptr [rdi] ; fld xword ptr [rsp + 8] ; ret
0x0000000000042b19 : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x00000000000f4dfd : insb byte ptr [rdi], dx ; and al, 4 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000042cb9 : insb byte ptr [rdi], dx ; and al, 8 ; fadd st(0) ; ret
0x0000000000042c19 : insb byte ptr [rdi], dx ; and al, 8 ; fscale ; fstp st(1) ; ret
0x0000000000042b8b : insb byte ptr [rdi], dx ; and al, 8 ; fsubrp st(1) ; ret
0x0000000000042aba : insb byte ptr [rdi], dx ; and al, 8 ; ret
0x00000000000fe39a : insb byte ptr [rdi], dx ; dec dword ptr [rax - 0x77] ; ret
0x000000000014bd78 : insb byte ptr [rdi], dx ; mov eax, 1 ; ret
0x00000000001193a6 : insb byte ptr [rdi], dx ; mov rdi, qword ptr [r14] ; call r12
0x00000000001966f1 : insb byte ptr [rdi], dx ; ret
0x0000000000159f70 : insb byte ptr [rdi], dx ; ret 0xf66
0x0000000000056baa : insb byte ptr [rdi], dx ; retf 0x4df0
0x000000000009450f : insb byte ptr [rdi], dx ; rol byte ptr [rcx + 0xf], 0x11 ; xor byte ptr [rax + 8], 0 ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000029dae : insb byte ptr [rdi], dx ; ror dword ptr [rdi], 0x11 ; add rsp, 0x18 ; ret
0x00000000000ef5b8 : insb byte ptr [rdi], dx ; sbb al, byte ptr [rip - 0x7cb7ac8b] ; ret
0x0000000000074b4c : insb byte ptr [rdi], dx ; sbb eax, 0x83480000 ; ret 0x4817
0x0000000000180140 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000119128 : insd dword ptr [rdi], dx ; adc byte ptr [rbp - 0x7b], cl ; in eax, dx ; jne 0x11918c ; mov rdi, qword ptr [rbp] ; call r12
0x00000000000a0010 : insd dword ptr [rdi], dx ; add byte ptr [rcx], dh ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x0000000000181040 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000d08cf : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x76bc2], al ; add byte ptr [rdi], cl ; ret 0xf8c1
0x000000000009e59f : insd dword ptr [rdi], dx ; dec byte ptr [rax + rax] ; cmovne rax, rdx ; ret
0x000000000008a8e3 : insd dword ptr [rdi], dx ; jo 0x8a8d2 ; retf 0xfffe
0x00000000000f829f : insd dword ptr [rdi], dx ; mov edi, edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000000bb44f : insd dword ptr [rdi], dx ; or eax, 0xf9834800 ; add al, 0x48 ; cmovne eax, edx ; ret
0x0000000000129acf : insd dword ptr [rdi], dx ; ret
0x000000000003d34f : insd dword ptr [rdi], dx ; retf
0x00000000000b5c0f : insd dword ptr [rdi], dx ; str word ptr [r11 + 0x63] ; or al, 0x83 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000b69e3 : insd dword ptr [rdi], dx ; str word ptr [rcx + 0x63] ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000001113ff : insd dword ptr [rdi], dx ; sub cl, byte ptr [rip + 0x64df8900] ; mov r13d, dword ptr [r14] ; call 0x10d66c
0x000000000008c2a7 : int 0x80
0x000000000007254f : int 0xa2
0x0000000000118212 : int 0xb8
0x00000000000ad40f : int 0xc0
0x00000000000636bf : int 0xc2
0x000000000002e726 : int 0xf
0x0000000000191882 : int 0xf6
0x00000000000e3c4f : int 0xfc
0x000000000018a324 : int 0xfd
0x000000000016a0b7 : int1 ; add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000049c1a : int1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001200fe : int1 ; and cl, byte ptr [rcx] ; add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x0000000000115cee : int1 ; cmp dl, 0x20 ; je 0x115ceb ; mov byte ptr [r8 - 1], 0 ; ret
0x0000000000101bab : int1 ; cmp ecx, dword ptr [rax - 0xc] ; jne 0x101ba9 ; mov eax, dword ptr [rdx + 8] ; ret
0x000000000018df3c : int1 ; dec byte ptr [rax + 0x7f] ; jl 0x18df63 ; cld ; vzeroupper ; ret
0x000000000010f15d : int1 ; dec dword ptr [rax + 0x39] ; ret
0x0000000000115096 : int1 ; dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8348
0x00000000001108c6 : int1 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000110249 : int1 ; dec dword ptr [rax - 0x77] ; ret 0x348
0x0000000000110050 : int1 ; dec dword ptr [rax - 0x77] ; ret 0x3b48
0x0000000000114bc8 : int1 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000010a0e3 : int1 ; dec dword ptr [rax - 0x7d] ; ret
0x000000000010ef3a : int1 ; dec dword ptr [rbp + rcx*4 + 0x2c] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x000000000010f631 : int1 ; dec dword ptr [rcx - 0x73] ; push rdi ; add dword ptr [rax + 0x39], ecx ; ret 0xd72
0x00000000000d2a74 : int1 ; imul ecx, ecx, 0x64 ; cmp edi, ecx ; je 0xd2a88 ; ret
0x00000000000a6ebd : int1 ; je 0xa6eb3 ; ret
0x000000000018db2b : int1 ; jl 0x18db7c ; adc dword ptr [rsi - 1], edx ; ret
0x000000000018db4c : int1 ; jl 0x18db9d ; adc dword ptr [rsi - 1], edx ; ret
0x000000000018db59 : int1 ; jl 0x18dbb0 ; adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000018db5f : int1 ; jl 0x18dbb0 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000018dc34 : int1 ; jl 0x18dc85 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000018dc8c : int1 ; jl 0x18dcdd ; adc dword ptr [rsi + 3], edx ; ret
0x000000000018dd29 : int1 ; jl 0x18dd7a ; adc dword ptr [rsi + 7], edx ; ret
0x00000000000a0a46 : int1 ; jmp 0xa0a16
0x000000000007edcc : int1 ; jmp rax
0x00000000000ba5f5 : int1 ; jmp rcx
0x0000000000091c2b : int1 ; jne 0x91c26 ; lea eax, [rdx + rdi] ; ret
0x0000000000188633 : int1 ; lea rax, [rdi + rdx] ; vzeroupper ; ret
0x000000000007d147 : int1 ; mov dword ptr [rbp - 0x4f8], 0 ; jmp rax
0x000000000007e0bf : int1 ; mov dword ptr [rbp - 0x4f8], 1 ; jmp rax
0x000000000007dfd7 : int1 ; mov dword ptr [rbp - 0x508], 0x20 ; jmp rax
0x000000000007dec7 : int1 ; mov dword ptr [rbp - 0x530], 0 ; jmp rax
0x00000000000ba5d6 : int1 ; mov eax, 0x80000006 ; cpuid ; jmp 0xba5ac
0x00000000000ba73a : int1 ; mov eax, eax ; ret
0x000000000010193a : int1 ; mov eax, ecx ; syscall
0x000000000007e1ab : int1 ; mov esi, 0x63480012 ; add al, 0x88 ; add rax, rdx ; jmp rax
0x000000000016aacb : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000165eff : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000147fdc : int1 ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000014323b : int1 ; mov rdi, r13 ; call r12
0x00000000001605c7 : int1 ; mov rdx, rsi ; mov esi, 0x80 ; mov eax, ecx ; syscall
0x0000000000027a44 : int1 ; mov rsi, qword ptr [rsp + 0x10] ; xor r8d, r8d ; call rbx
0x00000000000bbfb1 : int1 ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000007e164 : int1 ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdx ; jmp rax
0x000000000014bcd5 : int1 ; movsxd rax, dword ptr [rdi + rcx*4] ; add rax, rdi ; jmp rax
0x000000000018fa13 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000005522e : int1 ; pop rbx ; ret
0x0000000000110e43 : int1 ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000bb14e : int1 ; ret
0x0000000000028e4b : int1 ; ret 0xffff
0x0000000000097203 : int1 ; retf
0x00000000000f9594 : int1 ; sbb al, 0 ; add byte ptr [rax + 0x63], cl ; retf 0x8b48
0x000000000008482b : int1 ; sbb eax, 0xc7480016 ; ret 0xffff
0x0000000000127b75 : int1 ; shr eax, 0x1f ; cmp dil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x000000000018fa17 : int1 ; sub eax, edx ; ret
0x00000000001827f1 : int1 ; sub rax, rcx ; je 0x18280b ; sbb eax, eax ; or eax, 1 ; ret
0x0000000000186b83 : int1 ; vzeroupper ; ret
0x0000000000147a1b : int1 ; xlatb ; in eax, dx ; dec dword ptr [rax - 0x77] ; ret
0x000000000014c806 : int1 ; xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x00000000000a085e : int1 ; xor eax, eax ; ret
0x0000000000142639 : iretd ; adc dword ptr [rax + rcx*2 + 0x33], esp ; cmp al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000016c717 : iretd ; add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000056770 : iretd ; call 0xffffffffce59f2cc
0x0000000000058430 : iretd ; call 0xffffffffce5a0f8c
0x00000000000a734d : iretd ; call qword ptr [rax]
0x0000000000047954 : iretd ; call rdx
0x00000000000c6604 : iretd ; jmp 0xc65d3
0x00000000000c6603 : iretd ; jmp 0xc65d4
0x000000000010c909 : iretd ; mov eax, 0x103 ; syscall
0x000000000018ce6d : iretd ; mov esi, 0x63490002 ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000011d931 : iretd ; sub rsp, 8 ; call rsi
0x0000000000101a0b : ja 0x101a1b ; setne al ; movzx eax, al ; ret
0x0000000000105736 : ja 0x1056cb ; jmp 0x105708
0x000000000010b31d : ja 0x10b37a ; ret
0x000000000010b3cd : ja 0x10b42a ; ret
0x000000000010b911 : ja 0x10b91b ; xor eax, eax ; ret
0x000000000010b8be : ja 0x10b933 ; movdqu xmm7, xmmword ptr [rsi + 0x70] ; movups xmmword ptr [rdi + 0x78], xmm7 ; ret
0x000000000010bd92 : ja 0x10bdc2 ; mov eax, dword ptr [rcx] ; movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x000000000010bffa : ja 0x10c000 ; add byte ptr [rax], al ; syscall
0x000000000010c258 : ja 0x10c26c ; mov dword ptr [rdi + 0x10c], esi ; xor eax, eax ; ret
0x000000000010c312 : ja 0x10c302 ; ret
0x000000000010c358 : ja 0x10c349 ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010c4d7 : ja 0x10c4af ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010c5cb : ja 0x10c5d2 ; ret
0x000000000010c619 : ja 0x10c622 ; ret
0x000000000010c605 : ja 0x10c644 ; mov edi, eax ; mov rsi, rdx ; mov eax, 5 ; syscall
0x000000000010c66b : ja 0x10c672 ; ret
0x000000000010c8b3 : ja 0x10c8c2 ; ret
0x000000000010c917 : ja 0x10c922 ; ret
0x000000000010c96f : ja 0x10c97a ; ret
0x000000000010cb9a : ja 0x10cba2 ; ret
0x000000000010cf87 : ja 0x10cfe2 ; ret
0x000000000010d02a : ja 0x10d082 ; ret
0x000000000010d0bd : ja 0x10d0c2 ; ret
0x000000000010d0ed : ja 0x10d0f2 ; ret
0x000000000010d67a : ja 0x10d6ba ; ret
0x000000000010d7ea : ja 0x10d832 ; ret
0x0000000000111573 : ja 0x111588 ; mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x00000000001116fa : ja 0x111752 ; ret
0x00000000001121b5 : ja 0x1121c2 ; ret
0x0000000000112209 : ja 0x112212 ; ret
0x00000000001122cd : ja 0x11232a ; ret
0x000000000011236d : ja 0x1123c2 ; ret
0x00000000001123fd : ja 0x112402 ; ret
0x000000000011255d : ja 0x112562 ; ret
0x00000000001126cd : ja 0x1126d2 ; ret
0x00000000001126fa : ja 0x112702 ; ret
0x0000000000112730 : ja 0x11273a ; ret
0x000000000011275d : ja 0x112762 ; ret
0x000000000011281c : ja 0x112828 ; ret
0x0000000000112c14 : ja 0x112c62 ; ret
0x0000000000112df6 : ja 0x112e02 ; ret
0x0000000000112e37 : ja 0x112e42 ; ret
0x000000000011330c : ja 0x11333c ; xor eax, eax ; ret
0x000000000011345a : ja 0x1134b2 ; ret
0x00000000001134fa : ja 0x113552 ; ret
0x00000000001135a0 : ja 0x113602 ; ret
0x0000000000113650 : ja 0x1136b2 ; ret
0x0000000000113bff : ja 0x113c07 ; add byte ptr [rax], al ; mov edi, edx ; syscall
0x000000000011400d : ja 0x114072 ; ret
0x000000000011422a : ja 0x11426a ; ret
0x00000000001142da : ja 0x11431a ; ret
0x0000000000114389 : ja 0x114392 ; ret
0x00000000001158fd : ja 0x115902 ; ret
0x0000000000115ae2 : ja 0x115aea ; ret
0x0000000000115b1d : ja 0x115b22 ; ret
0x0000000000115b4d : ja 0x115b52 ; ret
0x00000000001174c9 : ja 0x117554 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001175da : ja 0x117632 ; ret
0x000000000011ad84 : ja 0x11ad92 ; ret
0x000000000011af13 : ja 0x11af19 ; dec dword ptr [rax - 0x77] ; ret
0x000000000011db8d : ja 0x11db92 ; ret
0x000000000011dc33 : ja 0x11dcaa ; ret
0x000000000011dce5 : ja 0x11dcf2 ; ret
0x000000000011de0d : ja 0x11de6a ; ret
0x000000000011dead : ja 0x11df0a ; ret
0x000000000011df5d : ja 0x11dfba ; ret
0x000000000011e00d : ja 0x11e082 ; ret
0x000000000011e0ca : ja 0x11e122 ; ret
0x000000000011e1e5 : ja 0x11e1f2 ; ret
0x000000000011ea5a : ja 0x11eab2 ; ret
0x000000000011eb2a : ja 0x11eb82 ; ret
0x000000000011ec93 : ja 0x11ed02 ; ret
0x000000000011ed4d : ja 0x11edc2 ; ret
0x000000000011ee0a : ja 0x11ee62 ; ret
0x000000000011eeb3 : ja 0x11ef22 ; ret
0x000000000011ef6a : ja 0x11efc2 ; ret
0x000000000011f00d : ja 0x11f082 ; ret
0x000000000011f45d : ja 0x11f4ba ; ret
0x000000000011f4fd : ja 0x11f562 ; ret
0x000000000011f5ad : ja 0x11f60a ; ret
0x000000000011f72d : ja 0x11f78a ; ret
0x000000000011f7cd : ja 0x11f832 ; ret
0x000000000011f86d : ja 0x11f872 ; ret
0x000000000011f89d : ja 0x11f8a2 ; ret
0x000000000011f8cd : ja 0x11f8d2 ; ret
0x000000000011f8fd : ja 0x11f902 ; ret
0x000000000011f9d0 : ja 0x11f9da ; ret
0x000000000011f9fd : ja 0x11fa02 ; ret
0x000000000011fa2d : ja 0x11fa32 ; ret
0x000000000011fa60 : ja 0x11fa6a ; ret
0x000000000011fa8d : ja 0x11fa92 ; ret
0x0000000000127823 : ja 0x127860 ; jmp 0x1277ed
0x000000000012c69d : ja 0x12c6a2 ; ret
0x000000000012c724 : ja 0x12c6fc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012c747 : ja 0x12c752 ; ret
0x000000000012c738 : ja 0x12c76f ; mov eax, 0xe3 ; syscall
0x000000000012e00f : ja 0x12e01a ; ret
0x000000000012e003 : ja 0x12e030 ; xor eax, eax ; syscall
0x000000000012f187 : ja 0x12f19a ; mov rax, rdi ; sar rax, 6 ; ret
0x000000000012f32e : ja 0x12f34c ; shl edi, 0x10 ; movzx eax, si ; or eax, edi ; bswap eax ; ret
0x000000000013b092 : ja 0x13b097 ; ret
0x0000000000144fb1 : ja 0x145004 ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000001461df : ja 0x146230 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000148005 : ja 0x147ff6 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x00000000001484ef : ja 0x148503 ; cmp qword ptr [rbx + 0x50], rcx ; jbe 0x148544 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000155b6b : ja 0x155b8f ; mov eax, 1 ; mov dword ptr [rdi + 0x28], edx ; ret
0x0000000000155ba9 : ja 0x155bc5 ; ret
0x0000000000155f3f : ja 0x155f68 ; jbe 0x155f57 ; add dword ptr [rdi + 0x28], esi ; ret
0x0000000000155f44 : ja 0x155f70 ; ret
0x000000000015e90d : ja 0x15e904 ; xor eax, eax ; ret
0x0000000000164905 : ja 0x164958 ; add eax, 0x14634900 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000001676c5 : ja 0x1676ec ; add eax, 0x14634900 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000186418 : ja 0x18646c ; add eax, edi ; sub rax, rdx ; vzeroupper ; ret
0x0000000000186b2c : ja 0x186afc ; nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; vzeroupper ; ret
0x000000000018730c : ja 0x1872dc ; nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; vzeroupper ; ret
0x00000000001878cc : ja 0x18789c ; nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; vzeroupper ; ret
0x000000000018801a : ja 0x187fea ; nop dword ptr [rax] ; mov byte ptr [rdi], dl ; vzeroupper ; ret
0x0000000000188d4e : ja 0x188d1a ; mov byte ptr [rdi], dl ; vzeroupper ; ret
0x00000000001890e4 : ja 0x18912a ; jb 0x1890f6 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000001895f3 : ja 0x1895c3 ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x00000000001895d1 : ja 0x189608 ; jb 0x1895e0 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000018a9bb : ja 0x18a98a ; nop dword ptr [rax] ; xor eax, eax ; vzeroupper ; ret
0x000000000018ae09 : ja 0x18add7 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000018d903 : ja 0x18d907 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000018de44 : ja 0x18dea2 ; jb 0x18de56 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000018e499 : ja 0x18e469 ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x000000000018e469 : ja 0x18e4ae ; jb 0x18e478 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000034df9 : ja 0x34e14 ; lea rax, [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x0000000000034e45 : ja 0x34e60 ; lea rax, [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x00000000000358cc : ja 0x358d9 ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000039c44 : ja 0x39c25 ; mov byte ptr [rdi], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000044183 : ja 0x44192 ; ret
0x00000000000441f2 : ja 0x441fa ; ret
0x000000000004422f : ja 0x4427a ; ret
0x0000000000048afa : ja 0x48b52 ; ret
0x00000000000570be : ja 0x57110 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000005c2ce : ja 0x5c2b5 ; mov rax, rsi ; ret
0x000000000005c2f6 : ja 0x5c2dd ; mov rax, rsi ; ret
0x000000000005c339 : ja 0x5c315 ; mov rax, rsi ; ret
0x000000000005f450 : ja 0x5f435 ; mov eax, r9d ; ret
0x0000000000063a1d : ja 0x63a22 ; ret
0x0000000000063a50 : ja 0x63a5a ; ret
0x0000000000063a8a : ja 0x63abf ; cmp eax, -1 ; je 0x63a9f ; ret
0x0000000000080165 : ja 0x8019c ; movzx eax, al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x0000000000080cc8 : ja 0x80f62 ; mov eax, r11d ; jmp 0x80c9f
0x0000000000081150 : ja 0x80f91 ; mov eax, edi ; jmp 0x81126
0x000000000008cca8 : ja 0x8ccc1 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008cd58 : ja 0x8cd73 ; mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009cb7c : ja 0x9cb8d ; jb 0x9cb8f ; mov qword ptr [rdi], rsi ; ret
0x00000000000a02bd : ja 0xa029e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b5457 : ja 0xb545d ; ret
0x00000000000b5473 : ja 0xb547d ; mov dword ptr [rdi], ecx ; ret
0x00000000000b54b4 : ja 0xb54c3 ; mov qword ptr [rdi], rcx ; ret
0x00000000000b5539 : ja 0xb554d ; ret
0x00000000000b558f : ja 0xb55a7 ; ret
0x00000000000b5611 : ja 0xb562d ; ret
0x00000000000b6a57 : ja 0xb6a61 ; lea rax, [rdi + 2] ; ret
0x00000000000b6a73 : ja 0xb6a81 ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x00000000000b6ac4 : ja 0xb6ad7 ; mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x00000000000b6ba9 : ja 0xb6bc1 ; lea rax, [rdi + 0x10] ; ret
0x00000000000b6c1f : ja 0xb6c3b ; lea rax, [rdi + 0x14] ; ret
0x00000000000b6ca1 : ja 0xb6cc1 ; lea rax, [rdi + 0x18] ; ret
0x00000000000b8707 : ja 0xb870d ; ret
0x00000000000b8723 : ja 0xb872d ; mov dword ptr [rdi], ecx ; ret
0x00000000000b8764 : ja 0xb8773 ; mov qword ptr [rdi], rcx ; ret
0x00000000000b87e9 : ja 0xb87fd ; ret
0x00000000000b883f : ja 0xb8857 ; ret
0x00000000000b88c1 : ja 0xb88dd ; ret
0x00000000000b91d7 : ja 0xb91dd ; ret
0x00000000000b91f3 : ja 0xb91fd ; mov dword ptr [rdi], ecx ; ret
0x00000000000b9234 : ja 0xb9243 ; mov qword ptr [rdi], rcx ; ret
0x00000000000b92b9 : ja 0xb92cd ; ret
0x00000000000b930f : ja 0xb9327 ; ret
0x00000000000b9391 : ja 0xb93ad ; ret
0x00000000000ba104 : ja 0xba135 ; jb 0xba116 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000ba2d0 : ja 0xba2fc ; movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000000ba39e : ja 0xba3ca ; movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000000ba4a2 : ja 0xba4bb ; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000ba543 : ja 0xba560 ; jb 0xba54f ; mov byte ptr [rdi], cl ; ret
0x00000000000cdc89 : ja 0xcdca9 ; sub rdi, 0x10 ; add rax, rdi ; ret
0x00000000000cdbbd : ja 0xcdcac ; add rax, rdi ; add rax, rcx ; ret
0x00000000000cf78d : ja 0xcf792 ; ret
0x00000000000dc9cd : ja 0xdc9d2 ; ret
0x00000000000e12f7 : ja 0xe134a ; ret
0x00000000000e138d : ja 0xe13e2 ; ret
0x00000000000e1480 : ja 0xe14e2 ; ret
0x00000000000e15ca : ja 0xe1602 ; ret
0x00000000000e164a : ja 0xe1692 ; ret
0x00000000000e191c : ja 0xe1948 ; hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x00000000000e2b4f : ja 0xe2b55 ; add byte ptr [rax], al ; syscall
0x00000000000fdaf4 : ja 0xfdb13 ; movzx edx, cl ; movsxd rdx, dword ptr [r8 + rdx*4] ; add rdx, r8 ; jmp rdx
0x00000000000fdaf4 : ja 0xfdb14 ; movzx edx, cl ; movsxd rdx, dword ptr [r8 + rdx*4] ; add rdx, r8 ; jmp rdx
0x00000000001017ad : jae 0x1017b2 ; ret
0x00000000001017dd : jae 0x1017e2 ; ret
0x000000000010180d : jae 0x101812 ; ret
0x000000000010183d : jae 0x101842 ; ret
0x000000000010186d : jae 0x101872 ; ret
0x000000000010189d : jae 0x1018a2 ; ret
0x00000000001018cd : jae 0x1018d2 ; ret
0x00000000001018fd : jae 0x101902 ; ret
0x000000000010c4ed : jae 0x10c4f2 ; ret
0x000000000010c9bd : jae 0x10c9c2 ; ret
0x000000000010c9ed : jae 0x10c9f2 ; ret
0x000000000010cb0d : jae 0x10cb12 ; ret
0x000000000010cb14 : jae 0x10cb2f ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000010cb3d : jae 0x10cb42 ; ret
0x000000000010cb44 : jae 0x10cb5f ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000010cbfd : jae 0x10cc02 ; ret
0x000000000010cc2d : jae 0x10cc32 ; ret
0x000000000010d51d : jae 0x10d522 ; ret
0x000000000010d6ed : jae 0x10d6f2 ; ret
0x000000000010d71d : jae 0x10d722 ; ret
0x000000000010d74d : jae 0x10d752 ; ret
0x000000000010d77d : jae 0x10d782 ; ret
0x000000000010d7ad : jae 0x10d7b2 ; ret
0x000000000010d86d : jae 0x10d872 ; ret
0x000000000010d89d : jae 0x10d8a2 ; ret
0x000000000010e15d : jae 0x10e162 ; ret
0x000000000010e18d : jae 0x10e192 ; ret
0x000000000010e1bd : jae 0x10e1c2 ; ret
0x000000000010e1f0 : jae 0x10e1f5 ; ret
0x000000000010e9ad : jae 0x10e9b2 ; ret
0x000000000010e9e0 : jae 0x10e9e5 ; ret
0x000000000010ea0d : jae 0x10ea12 ; ret
0x000000000010ea3d : jae 0x10ea42 ; ret
0x000000000010ea6d : jae 0x10ea72 ; ret
0x000000000010eaa0 : jae 0x10eaa5 ; ret
0x000000000010eacd : jae 0x10ead2 ; ret
0x000000000010eafd : jae 0x10eb02 ; ret
0x000000000010eb2d : jae 0x10eb32 ; ret
0x000000000010f189 : jae 0x10f169 ; cld ; dec dword ptr [rax - 0x77] ; ret
0x0000000000111d60 : jae 0x111d65 ; ret
0x0000000000112e6d : jae 0x112e72 ; ret
0x000000000011325d : jae 0x113262 ; ret
0x000000000011341d : jae 0x113422 ; ret
0x0000000000113e7d : jae 0x113e82 ; ret
0x0000000000113fcd : jae 0x113fd2 ; ret
0x00000000001141bd : jae 0x1141c2 ; ret
0x00000000001141ed : jae 0x1141f2 ; ret
0x000000000011429d : jae 0x1142a2 ; ret
0x000000000011434d : jae 0x114352 ; ret
0x000000000011467d : jae 0x114682 ; ret
0x00000000001146ad : jae 0x1146b2 ; ret
0x00000000001146dd : jae 0x1146e2 ; ret
0x00000000001158df : jae 0x1158b2 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001172ef : jae 0x1172f4 ; ret
0x00000000001172ef : jae 0x1172f9 ; ret
0x000000000011756d : jae 0x117572 ; ret
0x000000000011759d : jae 0x1175a2 ; ret
0x000000000011766d : jae 0x117672 ; ret
0x000000000011769d : jae 0x1176a2 ; ret
0x00000000001176d0 : jae 0x1176d5 ; ret
0x00000000001176fd : jae 0x117702 ; ret
0x000000000011772d : jae 0x117732 ; ret
0x000000000011775d : jae 0x117762 ; ret
0x000000000011778d : jae 0x117792 ; ret
0x0000000000117c83 : jae 0x117c75 ; divsd xmm0, xmm2 ; jmp 0x117cdf
0x000000000011a36e : jae 0x11a399 ; mov rsi, rbx ; mov rdi, r13 ; call r14
0x000000000011b7d0 : jae 0x11b7d5 ; ret
0x000000000011b7fd : jae 0x11b802 ; ret
0x000000000011b82d : jae 0x11b832 ; ret
0x000000000011b860 : jae 0x11b865 ; ret
0x000000000011b890 : jae 0x11b895 ; ret
0x000000000011b8bd : jae 0x11b8c2 ; ret
0x000000000011b8f0 : jae 0x11b8f5 ; ret
0x000000000011b91d : jae 0x11b922 ; ret
0x000000000011b94d : jae 0x11b952 ; ret
0x000000000011b980 : jae 0x11b985 ; ret
0x000000000011b9ad : jae 0x11b9b2 ; ret
0x000000000011b9e0 : jae 0x11b9e5 ; ret
0x000000000011d9ed : jae 0x11d9f2 ; ret
0x000000000011da1d : jae 0x11da22 ; ret
0x000000000011db5d : jae 0x11db62 ; ret
0x000000000011dbbd : jae 0x11dbc2 ; ret
0x000000000011dbed : jae 0x11dbf2 ; ret
0x000000000011dd1d : jae 0x11dd22 ; ret
0x000000000011dda0 : jae 0x11dda5 ; ret
0x000000000011ddcd : jae 0x11ddd2 ; ret
0x000000000011e29d : jae 0x11e2a2 ; ret
0x000000000011e2cd : jae 0x11e2d2 ; ret
0x000000000011e310 : jae 0x11e315 ; ret
0x000000000011e33d : jae 0x11e342 ; ret
0x000000000011e36d : jae 0x11e372 ; ret
0x000000000011e39d : jae 0x11e3a2 ; ret
0x000000000011e3cd : jae 0x11e3d2 ; ret
0x000000000011e3fd : jae 0x11e402 ; ret
0x000000000011e42d : jae 0x11e432 ; ret
0x000000000011e45d : jae 0x11e462 ; ret
0x000000000011e48d : jae 0x11e492 ; ret
0x000000000011e4c0 : jae 0x11e4c5 ; ret
0x000000000011e4ed : jae 0x11e4f2 ; ret
0x000000000011e520 : jae 0x11e525 ; ret
0x000000000011e54d : jae 0x11e552 ; ret
0x000000000011e57d : jae 0x11e582 ; ret
0x000000000011e5ad : jae 0x11e5b2 ; ret
0x000000000011e5dd : jae 0x11e5e2 ; ret
0x000000000011e60d : jae 0x11e612 ; ret
0x000000000011e640 : jae 0x11e645 ; ret
0x000000000011e670 : jae 0x11e675 ; ret
0x000000000011e69d : jae 0x11e6a2 ; ret
0x000000000011e6cd : jae 0x11e6d2 ; ret
0x000000000011e700 : jae 0x11e705 ; ret
0x000000000011e730 : jae 0x11e735 ; ret
0x000000000011e760 : jae 0x11e765 ; ret
0x000000000011e78d : jae 0x11e792 ; ret
0x000000000011e7bd : jae 0x11e7c2 ; ret
0x000000000011e7ed : jae 0x11e7f2 ; ret
0x000000000011e81d : jae 0x11e822 ; ret
0x000000000011e850 : jae 0x11e855 ; ret
0x000000000011e87d : jae 0x11e882 ; ret
0x000000000011e8ad : jae 0x11e8b2 ; ret
0x000000000011e8e0 : jae 0x11e8e5 ; ret
0x000000000011e90d : jae 0x11e912 ; ret
0x000000000011e940 : jae 0x11e945 ; ret
0x000000000011e970 : jae 0x11e975 ; ret
0x000000000011e99d : jae 0x11e9a2 ; ret
0x000000000011e9cd : jae 0x11e9d2 ; ret
0x000000000011e9fd : jae 0x11ea02 ; ret
0x000000000011eaed : jae 0x11eaf2 ; ret
0x000000000011ebbd : jae 0x11ebc2 ; ret
0x000000000011ebed : jae 0x11ebf2 ; ret
0x000000000011ec20 : jae 0x11ec25 ; ret
0x000000000011ec4d : jae 0x11ec52 ; ret
0x000000000011f0c0 : jae 0x11f0c5 ; ret
0x000000000011f0ed : jae 0x11f0f2 ; ret
0x000000000011f11d : jae 0x11f122 ; ret
0x000000000011f150 : jae 0x11f155 ; ret
0x0000000000129b21 : jae 0x129b48 ; mov esi, 3 ; mov rdi, r14 ; call 0x125d8c
0x000000000013b5ec : jae 0x13b602 ; shl rsi, 4 ; lea rax, [rdi + rsi + 8] ; ret
0x0000000000148ee2 : jae 0x148ef8 ; mov edx, 0xff ; mov rdi, rbp ; call 0x1551ac
0x000000000014e6b4 : jae 0x14e6a9 ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x000000000014e6b3 : jae 0x14e6aa ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x000000000014e6ec : jae 0x14e6e1 ; dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x0000000000155c75 : jae 0x155c84 ; xor eax, eax ; ret
0x0000000000155cb5 : jae 0x155cc4 ; xor eax, eax ; ret
0x000000000015a900 : jae 0x15a905 ; ret
0x000000000015a950 : jae 0x15a955 ; ret
0x000000000015d954 : jae 0x15d937 ; mov eax, 1 ; ret
0x000000000018159a : jae 0x18159b ; movsxd rcx, ecx ; add rax, rcx ; sub rax, rdi ; ret
0x0000000000182765 : jae 0x182a0b ; xor eax, eax ; vzeroupper ; ret
0x00000000001896d9 : jae 0x18990b ; xor eax, eax ; vzeroupper ; ret
0x00000000000293e7 : jae 0x29462 ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; mov byte ptr [rcx + 0xf], 0x95 ; ret
0x00000000000293e6 : jae 0x29463 ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; mov byte ptr [rcx + 0xf], 0x95 ; ret
0x0000000000043b59 : jae 0x43ba0 ; xor eax, eax ; pop rbx ; ret
0x0000000000043b78 : jae 0x43bbd ; pop rbx ; ret
0x00000000000441bd : jae 0x441c2 ; ret
0x000000000004476d : jae 0x44772 ; ret
0x0000000000055de7 : jae 0x55df0 ; xor eax, eax ; ret
0x000000000005c2a8 : jae 0x5c295 ; mov rax, rsi ; ret
0x0000000000061bfc : jae 0x61b97 ; add qword ptr [rcx + 0x18263a0d], rcx ; add byte ptr [rax + 0x63], cl ; retf 0x8948
0x0000000000084bd3 : jae 0x84beb ; lea rcx, [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000084d0a : jae 0x84d2b ; lea rcx, [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000085760 : jae 0x8577c ; lea rsi, [rcx + 4] ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000008756b : jae 0x87573 ; mov eax, dword ptr [rdx] ; ret
0x0000000000089c5f : jae 0x89cbd ; push 0 ; mov rdi, r15 ; lea r9, [rbp - 0x40] ; call r12
0x000000000008ea08 : jae 0x8ea15 ; movzx eax, byte ptr [rax] ; ret
0x000000000008ea2a : jae 0x8ea83 ; movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000092a8d : jae 0x92ab5 ; movzx eax, byte ptr [rax] ; ret
0x000000000009a1f8 : jae 0x9a21e ; lea rax, [rax - 8] ; ret
0x00000000000ba53e : jae 0xba55e ; cmp dl, 1 ; ja 0xba565 ; jb 0xba554 ; mov byte ptr [rdi], cl ; ret
0x00000000000cf86d : jae 0xcf872 ; ret
0x00000000000d04cd : jae 0xd04ea ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000d298d : jae 0xd2992 ; ret
0x00000000000d29bd : jae 0xd29c2 ; ret
0x00000000000ddcb2 : jae 0xddcad ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000ddf07 : jae 0xddf02 ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000e124d : jae 0xe1252 ; ret
0x00000000000e1440 : jae 0xe1445 ; ret
0x00000000000e151d : jae 0xe1522 ; ret
0x00000000000e18ce : jae 0xe18d3 ; ret
0x00000000000e195d : jae 0xe1962 ; ret
0x00000000000e2741 : jae 0xe2747 ; add byte ptr [rax], al ; syscall
0x00000000000e274d : jae 0xe2752 ; ret
0x00000000000e294d : jae 0xe2952 ; ret
0x00000000000e297d : jae 0xe2982 ; ret
0x00000000000e29dd : jae 0xe29e2 ; ret
0x00000000000e2a0d : jae 0xe2a12 ; ret
0x00000000000e2a3d : jae 0xe2a42 ; ret
0x00000000000e2a6d : jae 0xe2a72 ; ret
0x00000000000eaa0c : jae 0xea9de ; or byte ptr [r9], r8b ; mov eax, 1 ; ret
0x00000000000f06f6 : jae 0xf0732 ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000001019eb : jb 0x1019ff ; setne al ; movzx eax, al ; neg eax ; ret
0x000000000010c390 : jb 0x10c31e ; lea rax, [rip - 0xa9] ; cmove rax, rdx ; ret
0x000000000010cc04 : jb 0x10cc1f ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000010cc34 : jb 0x10cc4f ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000010e99a : jb 0x10e9af ; add al, byte ptr [rax] ; nop ; mov eax, 0x56 ; syscall
0x0000000000113a6f : jb 0x113a75 ; add byte ptr [rax], al ; syscall
0x0000000000120853 : jb 0x120867 ; seta al ; movzx eax, al ; neg eax ; ret
0x00000000001218f3 : jb 0x12190e ; lea rdx, [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000121953 : jb 0x12196e ; lea rdx, [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000122173 : jb 0x12218e ; lea rdx, [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000001221c3 : jb 0x1221de ; lea rdx, [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000125d8b : jb 0x125d9f ; mov eax, 1 ; ret
0x000000000012b6ed : jb 0x12b6e4 ; xor eax, eax ; ret
0x000000000013a9d8 : jb 0x13a9f3 ; cmp eax, edx ; jne 0x13a9bb ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x000000000013b337 : jb 0x13b32b ; mov eax, 0xffffffff ; ret
0x0000000000142d1a : jb 0x142d7d ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000148009 : jb 0x14802d ; ret
0x0000000000148003 : jb 0x148035 ; ja 0x147ff8 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x00000000001551f4 : jb 0x15524b ; mov eax, dword ptr [rsp + 8] ; mov rsi, rsp ; mov rdi, r12 ; call qword ptr [rax]
0x000000000015ece4 : jb 0x15f288 ; mov rdi, r14 ; call 0x12b79b
0x0000000000163e5c : jb 0x163e76 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000163f0a : jb 0x163f1a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000163fac : jb 0x163fc6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000016405a : jb 0x16406a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001640fc : jb 0x164116 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001641aa : jb 0x1641ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016424c : jb 0x164266 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001642fa : jb 0x16430a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016439c : jb 0x1643b6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000016444a : jb 0x16445a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001644ec : jb 0x164506 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000016459a : jb 0x1645aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016463c : jb 0x164656 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001646ea : jb 0x1646fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016478a : jb 0x1647ab ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000016483a : jb 0x16484a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001648dc : jb 0x1648f6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000016498a : jb 0x16499a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000164a2c : jb 0x164a46 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000164ada : jb 0x164aea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000164b7c : jb 0x164b96 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000164c2a : jb 0x164c3a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000164ccc : jb 0x164ce6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000164d7a : jb 0x164d8a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000164e1c : jb 0x164e36 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000164eca : jb 0x164eda ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000164f6c : jb 0x164f86 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000016501a : jb 0x16502a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001650bc : jb 0x1650d6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000016516a : jb 0x16517a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016682c : jb 0x166846 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001668da : jb 0x1668ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016697c : jb 0x166996 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000166a2a : jb 0x166a3a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000166acc : jb 0x166ae6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000166b7a : jb 0x166b8a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000166c1c : jb 0x166c36 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000166cca : jb 0x166cda ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000166d6c : jb 0x166d86 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000166e1a : jb 0x166e2a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000166ebc : jb 0x166ed6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000166f6a : jb 0x166f7a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016700c : jb 0x167026 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001670ba : jb 0x1670ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016715a : jb 0x16717b ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000016720a : jb 0x16721a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001672ac : jb 0x1672c6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000016735a : jb 0x16736a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001673fc : jb 0x167416 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001674aa : jb 0x1674ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016754c : jb 0x167566 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001675fa : jb 0x16760a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016769c : jb 0x1676b6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000016774a : jb 0x16775a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001677ec : jb 0x167806 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000016789a : jb 0x1678aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016793c : jb 0x167956 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001679ea : jb 0x1679fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000167a8c : jb 0x167aa6 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000167b3a : jb 0x167b4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000017a49a : jb 0x17a4a9 ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000001890e6 : jb 0x1890f4 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000001890c6 : jb 0x18929c ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001895d3 : jb 0x1895de ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000018d4de : jb 0x18d4ea ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000018db69 : jb 0x18db80 ; vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000018db82 : jb 0x18db99 ; vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000018db95 : jb 0x18dba4 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000018dba0 : jb 0x18dbb3 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000018dbad : jb 0x18dbb5 ; mov byte ptr [rdi], cl ; ret
0x000000000018de46 : jb 0x18de54 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000018de21 : jb 0x18e067 ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000018e46b : jb 0x18e476 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000002e398 : jb 0x2e45a ; mov rsi, rax ; jmp 0x2e36f
0x000000000004396a : jb 0x43941 ; adc al, 0 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000048bca : jb 0x48ba9 ; xor eax, eax ; ret
0x0000000000084a9a : jb 0x84ac6 ; mov dword ptr [rcx], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000085768 : jb 0x8578e ; mov dword ptr [rcx], eax ; ret
0x000000000008589e : jb 0x858cd ; mov byte ptr [rcx], dil ; ret
0x000000000008731c : jb 0x87315 ; lea eax, [rdx + rdi] ; ret
0x0000000000087c93 : jb 0x87c3d ; test dh, 8 ; jne 0x87c3d ; jmp 0x87c67
0x000000000008c774 : jb 0x8c7ab ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000008cba4 : jb 0x8cbeb ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000008d327 : jb 0x8d356 ; mov byte ptr [rcx], dil ; ret
0x000000000008d417 : jb 0x8d446 ; mov byte ptr [rcx], dil ; ret
0x0000000000097967 : jb 0x97951 ; mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x0000000000098177 : jb 0x98161 ; mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x0000000000098747 : jb 0x98731 ; mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x000000000009b19a : jb 0x9b1a7 ; add byte ptr [rax], al ; mov rdx, r15 ; mov rdi, r13 ; call rax
0x000000000009cb7e : jb 0x9cb8d ; mov qword ptr [rdi], rsi ; ret
0x000000000009ceb0 : jb 0x9cece ; lea rax, [rip + 0x1cf27] ; cmovne rax, rdx ; ret
0x000000000009d490 : jb 0x9d4ae ; lea rax, [rip + 0x1c9e7] ; cmovne rax, rdx ; ret
0x000000000009d730 : jb 0x9d74e ; lea rax, [rip + 0x1c7e7] ; cmovne rax, rdx ; ret
0x000000000009d82f : jb 0x9d840 ; mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x000000000009e920 : jb 0x9e934 ; mov qword ptr [rdx], r12 ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009f53b : jb 0x9f54f ; sub al, bl ; ret
0x000000000009f62f : jb 0x9f640 ; mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x00000000000a4683 : jb 0xa45cd ; mov rdx, rax ; jmp 0xa4639
0x00000000000a617b : jb 0xa60dd ; mov rdx, rax ; jmp 0xa612a
0x00000000000a74aa : jb 0xa7491 ; idiv edi ; add rsp, 8 ; ret
0x00000000000b661d : jb 0xb5be4 ; movdqu xmmword ptr [rdi + 0x30], xmm7 ; ret
0x00000000000b73da : jb 0xb73e9 ; add byte ptr [rax], al ; ret
0x00000000000ba069 : jb 0xba072 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000ba106 : jb 0xba114 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000ba105 : jb 0xba115 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000ba0eb : jb 0xba25f ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000ba545 : jb 0xba54d ; mov byte ptr [rdi], cl ; ret
0x00000000000c532d : jb 0xc52db ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r14 ; ret
0x00000000000cc6fd : jb 0xcc711 ; add al, ch ; retf
0x0000000000106159 : jbe 0x1061ae ; add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010b86e : jbe 0x10b8db ; movdqu xmm7, xmmword ptr [rdi + 0x78] ; movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x0000000000111abb : jbe 0x111aea ; cmp eax, -0x5f ; je 0x111ada ; neg eax ; pop rbx ; ret
0x0000000000111d1b : jbe 0x111d4a ; cmp eax, -0x5f ; je 0x111d3a ; neg eax ; pop rbx ; ret
0x0000000000115ced : jbe 0x115cec ; cmp dl, 0x20 ; je 0x115cec ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000001194e2 : jbe 0x1194f2 ; add byte ptr [rax], al ; mov rdi, qword ptr [r15] ; call r12
0x0000000000133b3a : jbe 0x133aaf ; xor eax, eax ; pop rbx ; ret
0x000000000013b99e : jbe 0x13b944 ; out dx, al ; dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000001474dc : jbe 0x1474ef ; mov eax, 2 ; ret
0x0000000000148528 : jbe 0x148503 ; mov qword ptr [rbx + 0x20], rcx ; mov eax, 1 ; jmp 0x148503
0x00000000001484f5 : jbe 0x14853e ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000155f41 : jbe 0x155f55 ; add dword ptr [rdi + 0x28], esi ; ret
0x0000000000163867 : jbe 0x163880 ; movzx ecx, byte ptr [rsi + rdx] ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000017d637 : jbe 0x17d650 ; movzx ecx, byte ptr [rsi + rdx] ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000182117 : jbe 0x182188 ; add rax, rdi ; vzeroupper ; ret
0x0000000000182127 : jbe 0x18218c ; add rax, 0x20 ; add rax, rdi ; vzeroupper ; ret
0x0000000000182147 : jbe 0x18218c ; add rax, 0x40 ; add rax, rdi ; vzeroupper ; ret
0x0000000000182167 : jbe 0x18218c ; add rax, 0x60 ; add rax, rdi ; vzeroupper ; ret
0x0000000000186417 : jbe 0x18649b ; add rax, rdi ; sub rax, rdx ; vzeroupper ; ret
0x0000000000188c66 : jbe 0x188c70 ; add byte ptr [rax], al ; vzeroupper ; ret
0x0000000000189b77 : jbe 0x189be8 ; add rax, rdi ; vzeroupper ; ret
0x0000000000189b87 : jbe 0x189bec ; add rax, 0x20 ; add rax, rdi ; vzeroupper ; ret
0x0000000000189ba7 : jbe 0x189bec ; add rax, 0x40 ; add rax, rdi ; vzeroupper ; ret
0x0000000000189bc7 : jbe 0x189bec ; add rax, 0x60 ; add rax, rdi ; vzeroupper ; ret
0x00000000000339ba : jbe 0x339d6 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000035901 : jbe 0x3590e ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x000000000005c044 : jbe 0x5c03b ; pop rbx ; ret
0x00000000000604d3 : jbe 0x60542 ; test eax, 0x950f7ff0 ; ret 0xc166
0x0000000000071c34 : jbe 0x71bc1 ; ret 0xc083
0x0000000000090bfa : jbe 0x90c1b ; mov rax, qword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000091376 : jbe 0x91393 ; mov rax, qword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000093529 : jbe 0x93532 ; ret
0x0000000000094e47 : jbe 0x94de1 ; add rsp, 8 ; ret
0x000000000009cfb3 : jbe 0x9cfa4 ; cmp esi, 9 ; mov edx, 0xffffffff ; cmovbe eax, edx ; ret
0x00000000000a0089 : jbe 0xa00ab ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000aa4d7 : jbe 0xaa4f0 ; movzx ecx, byte ptr [rsi + rdx] ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x00000000000aa7e6 : jbe 0xaa825 ; add rax, rdi ; ret
0x00000000000aa7f6 : jbe 0xaa827 ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000aa806 : jbe 0xaa827 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000aa816 : jbe 0xaa827 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000aa57f : jbe 0xaa82c ; add rax, rdi ; add rax, rcx ; ret
0x00000000000b07e9 : jbe 0xb07e3 ; ret 0xf10
0x00000000000b2409 : jbe 0xb2403 ; ret 0xf10
0x00000000000ba5d5 : jbe 0xba5d2 ; mov eax, 0x80000006 ; cpuid ; jmp 0xba5ad
0x00000000000ccc0c : jbe 0xccc63 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000ccd06 : jbe 0xccd45 ; add rax, rdi ; ret
0x00000000000ccd16 : jbe 0xccd47 ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000ccd26 : jbe 0xccd47 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000ccd36 : jbe 0xccd47 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000cca9f : jbe 0xccd4c ; add rax, rdi ; add rax, rcx ; ret
0x00000000000dfb90 : jbe 0xdfbe1 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e2a31 : jbe 0xe2a37 ; add byte ptr [rax], al ; syscall
0x00000000000ef189 : jbe 0xef1a4 ; mov dh, 0x7b ; or byte ptr [rbx - 0x76bac7b2], cl ; ret 0x418d
0x00000000000eff9e : jbe 0xefffd ; dec dword ptr [rcx - 0x75] ; adc byte ptr [r8 + 0x39], r9b ; retf
0x0000000000101b82 : je 0x101b8a ; ret
0x0000000000103ae3 : je 0x104a85 ; call 0x140598
0x00000000001062a5 : je 0x10625e ; pop rbx ; mov eax, 5 ; pop rbp ; pop r12 ; ret
0x0000000000106251 : je 0x1062af ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000106a58 : je 0x106ac5 ; stc ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000108e12 : je 0x108e40 ; sub byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x250b8
0x000000000010c285 : je 0x10c297 ; mov eax, 0x1c ; syscall
0x000000000010c401 : je 0x10c439 ; xor edx, edx ; xor esi, esi ; mov rdi, rbx ; call rax
0x000000000010c493 : je 0x10c4c4 ; xor edx, edx ; call rax
0x000000000010c9c4 : je 0x10c9df ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000010c9f4 : je 0x10ca0f ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000010ced6 : je 0x10cf08 ; adc byte ptr [rbx - 0x47e7db84], cl ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x0000000000111ac0 : je 0x111ad5 ; neg eax ; pop rbx ; ret
0x0000000000111d20 : je 0x111d35 ; neg eax ; pop rbx ; ret
0x00000000001121a6 : je 0x1121d9 ; mov eax, 0x118 ; syscall
0x0000000000112458 : je 0x112487 ; mov eax, 0x48 ; syscall
0x00000000001124e7 : je 0x112517 ; mov eax, 0x48 ; syscall
0x000000000011264d : je 0x11267f ; mov eax, 0x101 ; syscall
0x0000000000113cae : je 0x113cb3 ; ret
0x0000000000114153 : je 0x114185 ; sbb byte ptr [rax + 0x10e], bh ; mov edi, dword ptr [rsp + 0x14] ; syscall
0x0000000000115ad3 : je 0x115b07 ; mov eax, 0x105 ; syscall
0x0000000000115c03 : je 0x115c0d ; mov qword ptr [rax], rdx ; ret
0x0000000000115cf2 : je 0x115ce7 ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000001172b8 : je 0x1172c8 ; mov dword ptr [rip + 0xcd088], edi ; ret
0x0000000000118211 : je 0x1181e8 ; mov eax, 0xffffffff ; jmp 0x1181ed
0x0000000000118323 : je 0x118333 ; pop rbx ; ret
0x0000000000118322 : je 0x118334 ; pop rbx ; ret
0x0000000000118748 : je 0x11878e ; test byte ptr [r11 + 8], 1 ; jne 0x118799 ; ret
0x00000000001194b4 : je 0x1194c2 ; add byte ptr [rax], al ; mov rdi, qword ptr [r15] ; call r12
0x000000000011a985 : je 0x11a989 ; inc dword ptr [rbp - 0x7b] ; in al, 0x75 ; cmp al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000011aa9d : je 0x11ab36 ; call rax
0x000000000011ac28 : je 0x11ad46 ; call rax
0x000000000011b661 : je 0x11b68b ; movzx eax, byte ptr [rcx - 1] ; cmp al, 0x2f ; jne 0x11b6ad ; mov rdx, rcx ; jmp 0x11b682
0x000000000011ba32 : je 0x11ba4b ; cmp rdi, rdx ; jne 0x11ba33 ; mov rax, qword ptr [rax + 8] ; ret
0x000000000011d960 : je 0x11d94d ; test r12, r12 ; je 0x11d97d ; mov rdi, rbp ; call r12
0x000000000011d965 : je 0x11d978 ; mov rdi, rbp ; call r12
0x000000000011db16 : je 0x11db1b ; ret
0x000000000011e152 : je 0x11e189 ; mov ecx, 0x145 ; mov eax, ecx ; syscall
0x000000000011e179 : je 0x11e1bd ; ret
0x000000000011e178 : je 0x11e1be ; ret
0x000000000011e1d6 : je 0x11e20f ; mov eax, 0x149 ; syscall
0x000000000011fab9 : je 0x11fac2 ; ret
0x0000000000120809 : je 0x120817 ; add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x000000000012090a : je 0x12091a ; add eax, 1 ; mov word ptr [rdx], ax ; ret
0x0000000000125482 : je 0x1254d4 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012781f : je 0x1277fd ; mov r14, qword ptr [r15 + 0x38] ; jmp 0x1277f1
0x000000000012a4d6 : je 0x12a501 ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x000000000012a593 : je 0x12a5a7 ; mov eax, 7 ; ret
0x000000000012a5c2 : je 0x12a5d3 ; pop rbx ; ret
0x000000000012a5b1 : je 0x12a5e9 ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x000000000012b76b : je 0x12b77a ; ret
0x000000000012bdf9 : je 0x12bdfe ; ret
0x000000000012be5d : je 0x12be62 ; ret
0x000000000012be95 : je 0x12beb4 ; mov rdx, qword ptr [rdi + 8] ; mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x000000000012c224 : je 0x12c22a ; call rax
0x000000000012c2e5 : je 0x12c2eb ; call rax
0x000000000012c2e5 : je 0x12c2ef ; call rax
0x000000000012c325 : je 0x12c32b ; call rax
0x000000000012c325 : je 0x12c32f ; call rax
0x000000000012c6e2 : je 0x12c712 ; call rax
0x000000000012c805 : je 0x12c837 ; or al, 0x8b ; jl 0x12c83b ; or byte ptr [rax + 0xe6], bh ; syscall
0x000000000012c884 : je 0x12c89e ; pop rbx ; xor eax, eax ; pop r12 ; pop rbp ; ret
0x000000000012e0dc : je 0x12e0ee ; add rsp, 8 ; ret
0x000000000012e69f : je 0x12e6aa ; ret
0x0000000000131aa6 : je 0x131abe ; add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf
0x0000000000133511 : je 0x13353f ; or byte ptr [rbx - 0x17cfdb84], cl ; ret
0x0000000000135836 : je 0x135867 ; add al, 0xbe ; adc byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x1357ff
0x00000000001360f8 : je 0x1361d1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000136a5f : je 0x136a6b ; mov rdi, rbx ; call rax
0x0000000000136d4f : je 0x136d5b ; mov rdi, rbx ; call rax
0x0000000000136e5f : je 0x136e73 ; lea rdi, [rip + 0xb2378] ; call rax
0x000000000013a453 : je 0x13a44b ; pop rbx ; ret
0x000000000013aca8 : je 0x13acfb ; cmp edi, 0xb ; mov edx, 0x104 ; cmove eax, edx ; ret
0x000000000013b235 : je 0x13b249 ; test eax, eax ; jne 0x13b259 ; mov eax, r8d ; ret
0x000000000013b6a0 : je 0x13b632 ; jmp 0x13b669
0x000000000013df92 : je 0x13df4b ; cmp r11d, r9d ; jg 0x13df59 ; mov byte ptr [r10], 0 ; ret
0x000000000013fbf8 : je 0x13fc02 ; ret
0x0000000000140989 : je 0x140992 ; ret
0x00000000001416c2 : je 0x1416a6 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000142f00 : je 0x142ed1 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000142fc8 : je 0x142f99 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000144747 : je 0x14473a ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001450a2 : je 0x1450ae ; mov rdi, rbx ; call rax
0x00000000001457c9 : je 0x1457f6 ; sbb byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x00000000001459f9 : je 0x145a05 ; mov rdi, rbp ; call rax
0x0000000000145d28 : je 0x145d32 ; ret
0x0000000000146a0d : je 0x146a19 ; mov rdi, rbx ; call rax
0x0000000000146c85 : je 0x146b27 ; mov rdi, rbx ; call rax
0x0000000000146d78 : je 0x146d84 ; mov rdi, rbx ; call rax
0x0000000000146dbe : je 0x146dda ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000146f83 : je 0x146f94 ; xor eax, eax ; ret
0x000000000014700a : je 0x14703c ; mov dword ptr [rsi], 0x10 ; mov qword ptr [rsi + 8], rax ; ret
0x0000000000147592 : je 0x14759e ; mov rdi, rbp ; call rdx
0x0000000000147acb : je 0x147bda ; mov rdi, rbp ; call qword ptr [rbx]
0x0000000000147f12 : je 0x147f30 ; mov rax, qword ptr [rbx + 8] ; mov rsi, r12 ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000148063 : je 0x148078 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000148eae : je 0x148eca ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000149dce : je 0x149de8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000149e8e : je 0x149ea8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000149f7e : je 0x149f98 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014bc82 : je 0x14bc96 ; lea rdi, [rbx + 0xc8] ; call rax
0x000000000014bf49 : je 0x14bf7a ; xor byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x000000000014c158 : je 0x14c189 ; mov rdi, rbp ; mov rdx, qword ptr [rsp + 0x20] ; call rdx
0x000000000014c683 : je 0x14c68f ; mov rdi, r12 ; call rax
0x000000000014c86b : je 0x14c879 ; lea rdi, [rbp + 0x10] ; call rax
0x000000000014db21 : je 0x14db2d ; mov rdi, rbp ; call rax
0x000000000014dc00 : je 0x14dc0c ; mov rdi, r12 ; call rax
0x000000000014e95f : je 0x14e96d ; lea rdi, [rbx + 0x68] ; call rax
0x000000000014ebab : je 0x14ebdc ; xor byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x000000000014eda0 : je 0x14edd1 ; mov rdi, rbp ; mov rdx, qword ptr [rsp + 0x20] ; call rdx
0x000000000014f089 : je 0x14f095 ; mov rdi, r12 ; call rax
0x000000000014f3ff : je 0x14f40d ; lea rdi, [rbx + 0x58] ; call rax
0x000000000014f5fc : je 0x14f62d ; push 0x48ff894c ; mov ecx, dword ptr [rsp + 0x30] ; call rcx
0x0000000000151440 : je 0x15146d ; or byte ptr [rax - 0x75], cl ; cmp al, 0x24 ; call rax
0x00000000001519ca : je 0x151958 ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000015194f : je 0x15195b ; pop rbx ; ret
0x0000000000151a82 : je 0x151a0c ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000001519fb : je 0x151a97 ; pop rbx ; ret
0x0000000000151abb : je 0x151b73 ; sub rax, -0x80 ; pop rbx ; ret
0x0000000000151eb8 : je 0x151ec6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000152acb : je 0x152ad9 ; lea rdi, [rbp + 0x10] ; call rax
0x0000000000153224 : je 0x153232 ; lea rdi, [rbp + 0x10] ; call rax
0x000000000015455f : je 0x15458b ; cmp eax, 2 ; sete al ; movzx eax, al ; ret
0x00000000001546b5 : je 0x1546e0 ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000001547a5 : je 0x1547d0 ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000154895 : je 0x1548c0 ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000154985 : je 0x1549b0 ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000155889 : je 0x1558ab ; cmp eax, 2 ; sete al ; movzx eax, al ; ret
0x00000000001558b9 : je 0x1558db ; cmp eax, 2 ; sete al ; movzx eax, al ; ret
0x0000000000155d7f : je 0x155d62 ; jmp 0x155d49
0x00000000001580bc : je 0x1580da ; xor ebx, ebx ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015afd8 : je 0x15af87 ; or byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000015ec1d : je 0x15fb08 ; mov rdx, rax ; jmp 0x15ebf0
0x0000000000160e54 : je 0x160e38 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000017b963 : je 0x17b92d ; lea r10, [r10 + r9] ; jmp r10
0x000000000017c635 : je 0x17c63d ; xchg eax, edx ; sub eax, edx ; ret
0x000000000017c733 : je 0x17c6fd ; lea r10, [r10 + r9] ; jmp r10
0x000000000017d61a : je 0x17d622 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000017d773 : je 0x17d73d ; lea r10, [r10 + r9] ; jmp r10
0x000000000017f343 : je 0x17f30d ; lea r10, [r10 + r9] ; jmp r10
0x00000000001812ac : je 0x18128b ; movsxd rax, ecx ; add rax, rdx ; sub rax, rdi ; ret
0x0000000000181411 : je 0x1813f8 ; movsxd rax, ecx ; add rax, rdi ; ret
0x00000000001823b1 : je 0x182418 ; and ch, al ; std ; xlatb ; ret
0x000000000018249f : je 0x182506 ; and ch, al ; std ; xlatb ; ret
0x00000000001825ea : je 0x1825cb ; bsr eax, eax ; add rax, rdi ; vzeroupper ; ret
0x00000000001827f5 : je 0x182807 ; sbb eax, eax ; or eax, 1 ; ret
0x0000000000182b73 : je 0x182b3d ; lea r10, [r10 + r9] ; jmp r10
0x0000000000184203 : je 0x1841cd ; lea r10, [r10 + r9] ; jmp r10
0x0000000000186a8f : je 0x186b18 ; mov byte ptr [rdi], 0 ; vzeroupper ; ret
0x0000000000186ee2 : je 0x186f43 ; and ch, al ; std ; xlatb ; ror byte ptr [rcx - 0x7d], cl ; ret 0x4d20
0x00000000001871af : je 0x1872fc ; mov byte ptr [rdi], 0 ; vzeroupper ; ret
0x000000000018759a : je 0x18739c ; mov byte ptr [rdi], 0 ; vzeroupper ; ret
0x000000000018782f : je 0x1878b8 ; mov byte ptr [rdi], 0 ; vzeroupper ; ret
0x00000000001879a1 : je 0x187a02 ; and ch, al ; std ; xlatb ; ror byte ptr [rcx - 0x7d], cl ; ret 0x4d20
0x000000000018828a : je 0x187f49 ; vzeroupper ; ret
0x0000000000188166 : je 0x188029 ; vzeroupper ; ret
0x000000000018851f : je 0x1885ab ; mov byte ptr [rdi], 0 ; lea rax, [rdi] ; vzeroupper ; ret
0x00000000001886ae : je 0x18870f ; and ch, al ; std ; xlatb ; ror byte ptr [rcx - 0x7d], cl ; ret 0x4d20
0x0000000000188fca : je 0x188c7c ; mov rax, rdi ; vzeroupper ; ret
0x0000000000188e96 : je 0x188d59 ; vzeroupper ; ret
0x000000000018c267 : je 0x18c271 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000194736 : je 0x1946ef ; xor r10d, r10d ; jmp 0x19470e
0x00000000001947db : je 0x194806 ; adc byte ptr [rcx - 0x77], cl ; ret
0x0000000000196126 : je 0x19612c ; call rdx
0x0000000000196223 : je 0x19622e ; call rax
0x000000000019621a : je 0x19623c ; mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x196237 ; call rax
0x000000000019644c : je 0x1964a1 ; call 0x27b59
0x0000000000026bfe : je 0x26c0a ; mov rdi, rbp ; call rax
0x0000000000029b78 : je 0x29b82 ; ret
0x000000000002a491 : je 0x2a4c0 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000002a812 : je 0x2a841 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000002af0e : je 0x2af3d ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x000000000002b2a4 : je 0x2b2d3 ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x000000000002b528 : je 0x2b557 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x000000000002b73b : je 0x2b76a ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x000000000002bdce : je 0x2bdfc ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x000000000002c910 : je 0x2c93f ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000002da1e : je 0x2da4d ; push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r14
0x000000000002e412 : je 0x2e441 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x000000000002e7eb : je 0x2e81a ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x000000000002eb4c : je 0x2eb7b ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000002efe2 : je 0x2f010 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000002f5b7 : je 0x2f5e6 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000002f9e6 : je 0x2fa15 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000002fd76 : je 0x2fda5 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000030212 : je 0x30240 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000000314b7 : je 0x314c2 ; ret
0x00000000000314b2 : je 0x314c7 ; cmp esi, 3 ; je 0x314c7 ; ret
0x0000000000031ec8 : je 0x31ece ; call rax
0x0000000000031fdd : je 0x31fe3 ; call rcx
0x00000000000330eb : je 0x330f1 ; call rax
0x000000000003419d : je 0x341b0 ; add dword ptr [rcx - 0x7d], eax ; dec dword ptr [rip - 0x7cb79d8c] ; ret
0x0000000000034e42 : je 0x34e5a ; and esi, dword ptr [rdi + 0x10] ; lea rax, [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x0000000000035aa1 : je 0x35b0b ; xor ebp, ebp ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x00000000000397fe : je 0x3980e ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x00000000000398ae : je 0x398be ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x00000000000424c9 : je 0x4276d ; add rdx, rcx ; jmp 0x424e9
0x00000000000424c8 : je 0x4276e ; add rdx, rcx ; jmp 0x424ea
0x0000000000042c03 : je 0x42b56 ; ret
0x0000000000042c02 : je 0x42b57 ; ret
0x0000000000042e61 : je 0x42e6a ; ret
0x000000000004327a : je 0x43282 ; ret
0x00000000000434f6 : je 0x43521 ; call 0x48cebe4a
0x0000000000044e07 : je 0x44e2b ; lea edx, [rax + 1] ; mov dword ptr [rip + 0x19f39a], edx ; ret
0x0000000000044e76 : je 0x44e88 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000045d43 : je 0x45d6f ; adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000047c94 : je 0x47cda ; xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x47caa ; pop rbx ; ret
0x0000000000047d90 : je 0x47da1 ; mov dword ptr [rdi], 0 ; pop rbx ; ret
0x0000000000048bdd : je 0x48ba7 ; mov eax, 0xffffffff ; ret
0x0000000000048bc2 : je 0x48c0c ; add r8, rax ; cmp r8, r9 ; jb 0x48bb1 ; xor eax, eax ; ret
0x0000000000053624 : je 0x5363c ; mov eax, ecx ; shl eax, 0x1e ; or eax, edx ; ret
0x0000000000053623 : je 0x5363d ; mov eax, ecx ; shl eax, 0x1e ; or eax, edx ; ret
0x00000000000549a9 : je 0x549d6 ; push -0x71f0097b ; ret
0x000000000005515a : je 0x55186 ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000055224 : je 0x55206 ; sub rax, 1 ; cmp rbx, rax ; jne 0x5522c ; pop rbx ; ret
0x00000000000562ad : je 0x562c3 ; mov rdx, qword ptr [r8 + rax*8] ; mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; ret
0x000000000005651d : je 0x56533 ; mov rdx, qword ptr [r8 + rcx*8] ; mov qword ptr [rax + rcx*8], rdx ; xor eax, eax ; ret
0x00000000000587bb : je 0x58790 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x0000000000059143 : je 0x5912f ; call 0x25418
0x000000000005abe5 : je 0x5ac10 ; sub byte ptr [rax - 0x77], cl ; ret 0xf748
0x000000000005c03b : je 0x5c06c ; sub r8, 4 ; cmp rdi, r8 ; jbe 0x5c044 ; pop rbx ; ret
0x000000000005c194 : je 0x5c21b ; mov byte ptr [rdi + 8], 0 ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x0000000000063a8f : je 0x63a9a ; ret
0x0000000000063a73 : je 0x63abc ; mov r10, rcx ; mov ecx, 0x13c ; mov eax, ecx ; syscall
0x0000000000063aa5 : je 0x63acd ; mov eax, 0xffffffff ; ret
0x0000000000063aa4 : je 0x63ace ; mov eax, 0xffffffff ; ret
0x0000000000069d23 : je 0x65ff4 ; mov qword ptr [r15], rax ; jmp 0x65ff4
0x00000000000824b7 : je 0x824cb ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x0000000000082553 : je 0x8256b ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x0000000000082544 : je 0x82574 ; or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x0000000000082587 : je 0x825a1 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x0000000000082bd6 : je 0x82c17 ; mov rax, rdx ; pop rbx ; ret
0x0000000000083c7b : je 0x83ca1 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000840f5 : je 0x840b4 ; call 0x90b84
0x00000000000863f7 : je 0x86447 ; add esp, 0x20 ; pop rbx ; ret
0x00000000000863f6 : je 0x86448 ; add esp, 0x20 ; pop rbx ; ret
0x00000000000869bc : je 0x869c2 ; ret
0x0000000000086a21 : je 0x86a72 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000008722a : je 0x8723a ; and dword ptr [rbx], 0xffffffef ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000008725a : je 0x87284 ; or al, 0xeb ; ret 0x5590
0x0000000000087286 : je 0x87296 ; and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000087317 : je 0x87332 ; cmp rsi, rcx ; jb 0x8731a ; lea eax, [rdx + rdi] ; ret
0x0000000000089258 : je 0x8921d ; add rsp, 0x18 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000008a506 : je 0x8a519 ; mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x8a519 ; ret
0x000000000008be26 : je 0x8be67 ; mov rax, rdx ; pop rbx ; ret
0x000000000008c761 : je 0x8c76a ; ret
0x000000000008c758 : je 0x8c78b ; mov eax, 0xffffffff ; test edx, edx ; je 0x8c773 ; ret
0x000000000008cb91 : je 0x8cb9a ; ret
0x000000000008cb88 : je 0x8cbbb ; mov eax, 0xffffffff ; test edx, edx ; je 0x8cba3 ; ret
0x000000000008d95f : je 0x8d96b ; pop rbx ; ret
0x000000000008fa1d : je 0x8fa0a ; retf 0xfff8
0x000000000008fa1c : je 0x8fa0b ; retf 0xfff8
0x0000000000090ccb : je 0x90c51 ; or eax, 0xffffffff ; ret
0x0000000000090eab : je 0x90e31 ; or eax, 0xffffffff ; ret
0x0000000000091065 : je 0x91072 ; ret
0x00000000000913a3 : je 0x913d2 ; adc byte ptr [rax - 0x75], cl ; jl 0x913d7 ; or bl, ch ; retf
0x0000000000091632 : je 0x9165d ; adc ecx, dword ptr [rax - 0x7d] ; ret 0x4901
0x0000000000091b35 : je 0x91b45 ; and dword ptr [rbx], 0xffffffef ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000091c27 : je 0x91c42 ; cmp rcx, rsi ; jne 0x91c2a ; lea eax, [rdx + rdi] ; ret
0x00000000000933e7 : je 0x93437 ; mov qword ptr [rsi], rdi ; ret
0x0000000000094121 : je 0x9412a ; call rax
0x0000000000099cd2 : je 0x99cfe ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000009a53d : je 0x9a4ca ; retf 0x4c89
0x000000000009a53c : je 0x9a4cb ; retf 0x4c89
0x000000000009aa23 : je 0x9aa32 ; mov qword ptr [rbx], rdx ; xor eax, eax ; pop rbx ; ret
0x000000000009acb0 : je 0x9ad8e ; call rax
0x000000000009adda : je 0x9aeae ; call rax
0x000000000009afc7 : je 0x9b038 ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000009b198 : je 0x9b31c ; mov rdx, r15 ; mov rdi, r13 ; call rax
0x000000000009ba92 : je 0x9bb8c ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000009bc3a : je 0x9bce4 ; mov rsi, rbx ; mov rdi, r12 ; call rax
0x000000000009bea8 : je 0x9beb2 ; ret
0x000000000009bfa6 : je 0x9bff8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009c48f : je 0x9c4cf ; mov rdi, qword ptr [rbx + 0x48] ; mov rsi, r13 ; call rax
0x000000000009c48e : je 0x9c4d0 ; mov rdi, qword ptr [rbx + 0x48] ; mov rsi, r13 ; call rax
0x000000000009c48d : je 0x9c4d1 ; mov rdi, qword ptr [rbx + 0x48] ; mov rsi, r13 ; call rax
0x000000000009cf84 : je 0x9cf94 ; movsx eax, dl ; ret
0x000000000009cf84 : je 0x9cf95 ; movsx eax, dl ; ret
0x000000000009cf7f : je 0x9cf98 ; cmp dl, 3 ; je 0x9cf99 ; movsx eax, dl ; ret
0x000000000009cf7f : je 0x9cf99 ; cmp dl, 3 ; je 0x9cf9a ; movsx eax, dl ; ret
0x000000000009d082 : je 0x9d096 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009dc9b : je 0x9dc8d ; lahf ; je 0x9dca0 ; dec dword ptr [rax - 0x77] ; ret
0x000000000009dc9e : je 0x9dc9d ; dec dword ptr [rax - 0x77] ; ret
0x000000000009e236 : je 0x9e1f3 ; ret
0x000000000009f538 : je 0x9f544 ; xor byte ptr [rdx + 0xe], 0x2a ; ret
0x00000000000a00f4 : je 0xa010e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a031d : je 0xa0398 ; add rax, qword ptr [rbp] ; mov rdx, rax ; jmp 0xa034b
0x00000000000a0a12 : je 0xa09f8 ; pop rbx ; pop rbp ; ret
0x00000000000a6e8a : je 0xa6e82 ; ret
0x00000000000a6ebe : je 0xa6eb2 ; ret
0x00000000000a6eba : je 0xa6eb6 ; cmp ecx, esi ; je 0xa6eb6 ; ret
0x00000000000a6f0f : je 0xa6ef2 ; ret
0x00000000000aa6ec : je 0xaa743 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000aa888 : je 0xaa8ab ; bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x00000000000aa9ca : je 0xaaa21 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000aac32 : je 0xaac4f ; pmovmskb eax, xmm1 ; test eax, eax ; jne 0xaacbc ; xor eax, eax ; ret
0x00000000000aad4c : je 0xaad28 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000afcf1 : je 0xafd09 ; bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x00000000000b01dc : je 0xb01ca ; pmovmskb edx, xmm4 ; test edx, edx ; je 0xb01f6 ; bsf eax, edx ; ret
0x00000000000b01e4 : je 0xb01ee ; bsf eax, edx ; ret
0x00000000000b01e4 : je 0xb01ef ; bsf eax, edx ; ret
0x00000000000b028d : je 0xb02a5 ; bsf rax, rdx ; ret
0x00000000000b028d : je 0xb02a6 ; bsf rax, rdx ; ret
0x00000000000b022c : je 0xb02b9 ; bsf rax, rdx ; ret
0x00000000000b022c : je 0xb02ba ; bsf rax, rdx ; ret
0x00000000000b045c : je 0xb0485 ; bsf rax, rdx ; ret
0x00000000000b045c : je 0xb0486 ; bsf rax, rdx ; ret
0x00000000000b03ec : je 0xb0499 ; bsf rax, rdx ; ret
0x00000000000b03ec : je 0xb049a ; bsf rax, rdx ; ret
0x00000000000b5759 : je 0xb57aa ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000b6de6 : je 0xb6e37 ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000b8cca : je 0xb8d1b ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000ba193 : je 0xba1b4 ; ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x00000000000bac10 : je 0xbac29 ; cmp eax, 2 ; je 0xbac31 ; xor eax, eax ; ret
0x00000000000bac15 : je 0xbac2c ; xor eax, eax ; ret
0x00000000000bac5c : je 0xbac42 ; ret
0x00000000000bacaa : je 0xbac8a ; ret
0x00000000000badcf : je 0xbadc1 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000baf1c : je 0xbaf3c ; mov ecx, dword ptr [rsi] ; mov dword ptr [r8 + 4], ecx ; test ecx, ecx ; jne 0xbaefc ; ret
0x00000000000bb04a : je 0xbb08a ; mov eax, dword ptr [rsi + 8] ; mov dword ptr [rdi + 0xc], eax ; mov rax, rbx ; pop rbx ; ret
0x00000000000bb0bd : je 0xbb0b3 ; mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bb143 : je 0xbb15c ; add rdx, 4 ; mov ecx, dword ptr [rdx] ; test ecx, ecx ; jne 0xbb14c ; ret
0x00000000000bb3d6 : je 0xbb393 ; ret
0x00000000000bb42f : je 0xbb43a ; ret
0x00000000000bb918 : je 0xbb92e ; mov edx, dword ptr [rdi] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x00000000000bc6b8 : je 0xbc6c3 ; test edx, edx ; jne 0xbc6b5 ; ret
0x00000000000bc6b8 : je 0xbc6c4 ; test edx, edx ; jne 0xbc6b6 ; ret
0x00000000000c16c2 : je 0xc16ec ; sbb cl, ch ; retf 0xffee
0x00000000000c524c : je 0xc5251 ; ret
0x00000000000c8f35 : je 0xc8f47 ; add dword ptr [rax + 0x10], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000cc9ff : je 0xcca17 ; setg al ; movzx eax, al ; lea eax, [rax + rax - 1] ; ret
0x00000000000cd8a9 : je 0xcd8cc ; mov eax, dword ptr [rdi] ; cmp eax, dword ptr [rsi] ; jne 0xcda0c ; ret
0x00000000000cd993 : je 0xcd9aa ; mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0xcda0a ; ret
0x00000000000cd9b9 : je 0xcd9da ; mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0xcda0a ; ret
0x00000000000cd9e3 : je 0xcd9fa ; mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0xcda0a ; ret
0x00000000000cdacd : je 0xcdadc ; xor eax, eax ; ret
0x00000000000cde96 : je 0xcddff ; lea rax, [rdi - 0x10] ; ret
0x00000000000cdf46 : je 0xcdfb6 ; lea rax, [rdi - 0x10] ; ret
0x00000000000cdf54 : je 0xcdfba ; test al, 0xf0 ; jne 0xcdf8a ; lea rax, [rdi - 0x10] ; ret
0x00000000000ce0cc : je 0xce0fa ; bsf rax, rdx ; shr rax, 2 ; ret
0x00000000000ce459 : je 0xce479 ; mov cl, dl ; and cl, 0xf ; je 0xce489 ; ret
0x00000000000ce460 : je 0xce482 ; ret
0x00000000000ce475 : je 0xce496 ; add rax, 2 ; ret
0x00000000000cf23d : je 0xcf26b ; or byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x00000000000d0316 : je 0xd0352 ; inc dword ptr [rcx] ; ret 0xb70f
0x00000000000d2a7a : je 0xd2a82 ; ret
0x00000000000d8703 : je 0xd86d7 ; mov rdx, rbp ; mov rdi, r15 ; call 0x2519b
0x00000000000dba83 : je 0xdba94 ; xor eax, eax ; ret
0x00000000000dbaab : je 0xdbac9 ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000dbbd7 : je 0xdbc02 ; and byte ptr [rax - 0x7d], cl ; ret
0x00000000000ddabf : je 0xddac5 ; add byte ptr [rax], al ; syscall
0x00000000000e4813 : je 0xe4825 ; mov rdi, rbx ; call r12
0x00000000000e480e : je 0xe4833 ; test r12, r12 ; je 0xe482a ; mov rdi, rbx ; call r12
0x00000000000e4b1d : je 0xe5a08 ; mov rdx, rax ; jmp 0xe4af0
0x00000000000e658a : je 0xe659b ; cmp al, 0x3f ; jne 0xe654b ; mov eax, 1 ; ret
0x00000000000e65a2 : je 0xe659b ; cmp al, 0x3f ; jne 0xe6570 ; mov eax, 1 ; ret
0x00000000000eaac3 : je 0xeaa67 ; mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x00000000000ec6d5 : je 0xec705 ; or byte ptr [rcx], ch ; ror dword ptr [rax + 0x63], cl ; ror byte ptr [rax + 0x63], cl ; retf
0x00000000000eca3b : je 0xeca83 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ecb9b : je 0xecb34 ; ret
0x00000000000ecbe2 : je 0xecb72 ; pop rbx ; ret
0x00000000000ecbdd : je 0xecb97 ; and ebx, 8 ; je 0xecb77 ; pop rbx ; ret
0x00000000000ed626 : je 0xed638 ; and ecx, 4 ; jne 0xed68b ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f05fc : je 0xf061a ; cmp eax, 3 ; je 0xf0662 ; xor eax, eax ; pop rbx ; ret
0x00000000000f0601 : je 0xf065d ; xor eax, eax ; pop rbx ; ret
0x00000000000fa442 : je 0xfa99a ; mov dword ptr [rsp], ebp ; jmp 0xfa41a
0x00000000000fda45 : je 0xfda27 ; mov rax, qword ptr [rax + 0x20] ; mov qword ptr [rcx + 0x20], rax ; jmp 0xfda27
0x00000000000ff163 : je 0xff174 ; xor eax, eax ; ret
0x00000000000fff13 : je 0xfff25 ; mov rdi, rbx ; call r12
0x00000000000fff0e : je 0xfff33 ; test r12, r12 ; je 0xfff2a ; mov rdi, rbx ; call r12
0x0000000000101933 : jg 0x101988 ; mov edx, edx ; cmovbe rsi, r9 ; mov eax, ecx ; syscall
0x0000000000105a26 : jg 0x105a3a ; ret 0x8589
0x000000000010b873 : jg 0x10b8f3 ; movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x000000000010b8c7 : jg 0x10b943 ; ret
0x0000000000112fc2 : jg 0x112fb4 ; mov bh, 0xe8 ; ret 1
0x000000000012723a : jg 0x127257 ; call 0x2513b
0x000000000012a1db : jg 0x12a1ca ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012f165 : jg 0x12f19a ; mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000013b468 : jg 0x13b4ea ; sub eax, 0xe2c1ca89 ; add al, 0x83 ; ret 0x3908
0x000000000013b5c3 : jg 0x13b592 ; nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x000000000013b862 : jg 0x13b876 ; ret 0x66c3
0x000000000013df97 : jg 0x13df54 ; mov byte ptr [r10], 0 ; ret
0x000000000014ca92 : jg 0x14cadc ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x14caa8 ; ret
0x000000000014d60d : jg 0x14d660 ; add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000152cc2 : jg 0x152d0c ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x152cd8 ; ret
0x0000000000163f04 : jg 0x163ed2 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x163f20 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000164054 : jg 0x164022 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x164070 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001641a4 : jg 0x164172 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1641c0 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001642f4 : jg 0x1642c2 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x164310 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000164444 : jg 0x164412 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x164460 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000164594 : jg 0x164562 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1645b0 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001646e4 : jg 0x1646b2 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x164700 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000164834 : jg 0x164802 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x164850 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000164984 : jg 0x164952 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1649a0 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000164ad4 : jg 0x164aa2 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x164af0 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000164c24 : jg 0x164bf2 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x164c40 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000164d74 : jg 0x164d42 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x164d90 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000164ec4 : jg 0x164e92 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x164ee0 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000165014 : jg 0x164fe2 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x165030 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000165164 : jg 0x165132 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x165180 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000165ae9 : jg 0x165b3c ; ret
0x0000000000165b30 : jg 0x165b80 ; mov ebx, 0x4f7f0ff3 ; retf
0x0000000000165b35 : jg 0x165b88 ; retf
0x0000000000165b6f : jg 0x165bba ; ret
0x0000000000165baf : jg 0x165bfa ; retf
0x0000000000165ce9 : jg 0x165d3c ; ret 0x894c
0x0000000000165d30 : jg 0x165d80 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x0000000000165d35 : jg 0x165d88 ; retf 0x894c
0x0000000000165d6f : jg 0x165dba ; ret 0x894c
0x0000000000165dab : jg 0x165df6 ; retf 0x894c
0x00000000001668d4 : jg 0x1668a2 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1668f0 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000166a24 : jg 0x1669f2 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x166a40 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000166b74 : jg 0x166b42 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x166b90 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000166cc4 : jg 0x166c92 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x166ce0 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000166e14 : jg 0x166de2 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x166e30 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000166f64 : jg 0x166f32 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x166f80 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001670b4 : jg 0x167082 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1670d0 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000167204 : jg 0x1671d2 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x167220 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000167354 : jg 0x167322 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x167370 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001674a4 : jg 0x167472 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1674c0 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001675f4 : jg 0x1675c2 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x167610 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000167744 : jg 0x167712 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x167760 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000167894 : jg 0x167862 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1678b0 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001679e4 : jg 0x1679b2 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x167a00 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000167b34 : jg 0x167b02 ; movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x167b50 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001684b9 : jg 0x16850c ; ret
0x0000000000168500 : jg 0x168550 ; mov ebx, 0x4f7f0ff3 ; retf
0x0000000000168505 : jg 0x168558 ; retf
0x000000000016853f : jg 0x16858a ; ret
0x000000000016857f : jg 0x1685ca ; retf
0x00000000001686b9 : jg 0x16870c ; ret 0x894c
0x0000000000168700 : jg 0x168750 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x0000000000168705 : jg 0x168758 ; retf 0x894c
0x000000000016873f : jg 0x16878a ; ret 0x894c
0x000000000016877b : jg 0x1687c6 ; retf 0x894c
0x000000000016aaa8 : jg 0x16aaf9 ; loope 0x16aaa7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016ab1f : jg 0x16ab6a ; ret 0xff2
0x000000000016ab38 : jg 0x16ab89 ; loop 0x16ab37 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016abaf : jg 0x16abfa ; ret
0x000000000016abc8 : jg 0x16ac19 ; jrcxz 0x16abc7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016ac58 : jg 0x16aca9 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016acd8 : jg 0x16ad29 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016ad58 : jg 0x16ada9 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016add8 : jg 0x16ae29 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016ae58 : jg 0x16aea9 ; call 0x4f95be5a
0x000000000016aed8 : jg 0x16af29 ; jmp 0x4f95beda
0x000000000016af35 : jg 0x16af85 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x000000000016af3f : jg 0x16af8a ; retf 0xff2
0x000000000016afb5 : jg 0x16b005 ; mov ebx, 0x46f00ff2 ; retf
0x000000000016afbf : jg 0x16b00a ; retf
0x000000000016b058 : jg 0x16b0a9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016b0d8 : jg 0x16b129 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016b168 : jg 0x16b1b9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016b1e8 : jg 0x16b239 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016b25c : jg 0x16b267 ; ret
0x000000000016b2b6 : jg 0x16b2c9 ; ret
0x000000000016b2b1 : jg 0x16b301 ; psllq mm1, qword ptr [rdi] ; jg 0x16b2ce ; ret
0x000000000016b326 : jg 0x16b339 ; ret
0x000000000016b396 : jg 0x16b3a9 ; ret
0x000000000016b391 : jg 0x16b3e1 ; or eax, 0xf7f0ff3 ; ret
0x000000000016b406 : jg 0x16b419 ; ret
0x000000000016b401 : jg 0x16b451 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000016b476 : jg 0x16b489 ; ret
0x000000000016b471 : jg 0x16b4c1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000016b4e6 : jg 0x16b4f9 ; ret
0x000000000016b4e1 : jg 0x16b531 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000016b556 : jg 0x16b569 ; ret
0x000000000016b551 : jg 0x16b5a1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000016b5c6 : jg 0x16b5d9 ; ret
0x000000000016b5c1 : jg 0x16b611 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000016b636 : jg 0x16b649 ; ret
0x000000000016b6a6 : jg 0x16b6b9 ; ret
0x000000000016b716 : jg 0x16b729 ; ret
0x000000000016b711 : jg 0x16b761 ; add eax, 0xf7f0ff3 ; ret
0x000000000016b786 : jg 0x16b799 ; ret
0x000000000016b781 : jg 0x16b7d1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000016b7f6 : jg 0x16b809 ; ret
0x000000000016b7f1 : jg 0x16b841 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000016b866 : jg 0x16b879 ; ret
0x000000000016b861 : jg 0x16b8b1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000016b8d6 : jg 0x16b8e9 ; ret
0x000000000016b8d1 : jg 0x16b921 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000016d5c8 : jg 0x16d619 ; loope 0x16d5c7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016d63f : jg 0x16d68a ; ret 0xff2
0x000000000016d658 : jg 0x16d6a9 ; loop 0x16d657 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016d6cf : jg 0x16d71a ; ret
0x000000000016d6e8 : jg 0x16d739 ; jrcxz 0x16d6e7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016d778 : jg 0x16d7c9 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016d7f8 : jg 0x16d849 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016d878 : jg 0x16d8c9 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016d8f8 : jg 0x16d949 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016d978 : jg 0x16d9c9 ; call 0x4f95e97a
0x000000000016d9f8 : jg 0x16da49 ; jmp 0x4f95e9fa
0x000000000016da55 : jg 0x16daa5 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x000000000016da5f : jg 0x16daaa ; retf 0xff2
0x000000000016dad5 : jg 0x16db25 ; mov ebx, 0x46f00ff2 ; retf
0x000000000016dadf : jg 0x16db2a ; retf
0x000000000016db78 : jg 0x16dbc9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016dbf8 : jg 0x16dc49 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016dc88 : jg 0x16dcd9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016dd08 : jg 0x16dd59 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016dd7c : jg 0x16dd87 ; ret
0x000000000016ddd6 : jg 0x16dde9 ; ret
0x000000000016ddd1 : jg 0x16de21 ; psllq mm1, qword ptr [rdi] ; jg 0x16ddee ; ret
0x000000000016de46 : jg 0x16de59 ; ret
0x000000000016deb6 : jg 0x16dec9 ; ret
0x000000000016deb1 : jg 0x16df01 ; or eax, 0xf7f0ff3 ; ret
0x000000000016df26 : jg 0x16df39 ; ret
0x000000000016df21 : jg 0x16df71 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000016df96 : jg 0x16dfa9 ; ret
0x000000000016df91 : jg 0x16dfe1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000016e006 : jg 0x16e019 ; ret
0x000000000016e001 : jg 0x16e051 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000016e076 : jg 0x16e089 ; ret
0x000000000016e071 : jg 0x16e0c1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000016e0e6 : jg 0x16e0f9 ; ret
0x000000000016e0e1 : jg 0x16e131 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000016e156 : jg 0x16e169 ; ret
0x000000000016e1c6 : jg 0x16e1d9 ; ret
0x000000000016e236 : jg 0x16e249 ; ret
0x000000000016e231 : jg 0x16e281 ; add eax, 0xf7f0ff3 ; ret
0x000000000016e2a6 : jg 0x16e2b9 ; ret
0x000000000016e2a1 : jg 0x16e2f1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000016e316 : jg 0x16e329 ; ret
0x000000000016e311 : jg 0x16e361 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000016e386 : jg 0x16e399 ; ret
0x000000000016e381 : jg 0x16e3d1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000016e3f6 : jg 0x16e409 ; ret
0x000000000016e3f1 : jg 0x16e441 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000186922 : jg 0x18693e ; pextrw edi, mm5, 0x74 ; retf
0x0000000000186b7c : jg 0x186ba0 ; vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3 ; vzeroupper ; ret
0x0000000000186b9c : jg 0x186bc0 ; vmovdqu ymmword ptr [rdi + rdx - 0x1f], ymm3 ; vzeroupper ; ret
0x0000000000186ffd : jg 0x187019 ; pextrw edi, mm5, 0x74 ; retf
0x000000000018735c : jg 0x187380 ; vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3 ; vzeroupper ; ret
0x000000000018737c : jg 0x1873a0 ; vmovdqu ymmword ptr [rdi + rdx - 0x1f], ymm3 ; vzeroupper ; ret
0x00000000001874b9 : jg 0x187527 ; mov byte ptr [rdi + 0x80], 0 ; vzeroupper ; ret
0x00000000001876c2 : jg 0x1876de ; pextrw edi, mm5, 0x74 ; retf
0x000000000018791c : jg 0x187940 ; vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3 ; vzeroupper ; ret
0x000000000018793c : jg 0x187960 ; vmovdqu ymmword ptr [rdi + rdx - 0x1f], ymm3 ; vzeroupper ; ret
0x0000000000187abd : jg 0x187ad9 ; pextrw edi, mm5, 0x74 ; retf
0x0000000000187c7e : jg 0x187c8c ; jne 0x1880bb ; vzeroupper ; ret
0x0000000000187e2c : jg 0x187e3b ; jne 0x1880bb ; vzeroupper ; ret
0x0000000000187e50 : jg 0x187e60 ; jne 0x1880bb ; vzeroupper ; ret
0x0000000000187e6a : jg 0x187e7b ; jne 0x1880bb ; vzeroupper ; ret
0x0000000000187fcd : jg 0x187ff2 ; vmovdqu xmmword ptr [rdi + r8 - 0x10], xmm3 ; vzeroupper ; ret
0x0000000000187fed : jg 0x188012 ; vmovdqu ymmword ptr [rdi + r8 - 0x20], ymm3 ; vzeroupper ; ret
0x0000000000188072 : jg 0x188087 ; vmovdqu xmmword ptr [rdi + r8 - 0x10], xmm0 ; vzeroupper ; ret
0x00000000001881b9 : jg 0x188220 ; vzeroupper ; ret
0x00000000001883b2 : jg 0x1883ce ; pextrw edi, mm5, 0x74 ; retf
0x00000000001887cd : jg 0x1887e9 ; pextrw edi, mm5, 0x74 ; retf
0x0000000000188996 : jg 0x1889a4 ; jne 0x188deb ; vzeroupper ; ret
0x0000000000188b60 : jg 0x188b6f ; jne 0x188deb ; vzeroupper ; ret
0x0000000000188b84 : jg 0x188b94 ; jne 0x188deb ; vzeroupper ; ret
0x0000000000188b9e : jg 0x188baf ; jne 0x188deb ; vzeroupper ; ret
0x0000000000188da2 : jg 0x188db7 ; vmovdqu xmmword ptr [rdi + r8 - 0x10], xmm0 ; vzeroupper ; ret
0x0000000000188ee9 : jg 0x188f57 ; lea rax, [rdi + 0x80] ; vzeroupper ; ret
0x0000000000189043 : jg 0x189057 ; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1 ; vzeroupper ; ret
0x000000000018909f : jg 0x1890b3 ; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1 ; vzeroupper ; ret
0x00000000001890fa : jg 0x18910b ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000018928b : jg 0x1892b5 ; vzeroupper ; ret
0x0000000000189285 : jg 0x1892d3 ; movabs al, byte ptr [0x77f8c5237f7ec1c4] ; ret
0x0000000000189332 : jg 0x18933c ; vzeroupper ; ret
0x000000000018932d : jg 0x189399 ; vmovdqu ymmword ptr [r11], ymm8 ; vzeroupper ; ret
0x00000000001893be : jg 0x1893e8 ; vzeroupper ; ret
0x00000000001893b8 : jg 0x189406 ; movabs al, byte ptr [0x77f8c5237f7ec1c4] ; ret
0x000000000018944e : jg 0x189458 ; vzeroupper ; ret
0x0000000000189449 : jg 0x1894b5 ; vmovdqu ymmword ptr [r11], ymm8 ; vzeroupper ; ret
0x00000000001894c4 : jg 0x1894d2 ; vzeroupper ; ret
0x0000000000189524 : jg 0x189532 ; vzeroupper ; ret
0x00000000001895e3 : jg 0x1895f1 ; vzeroupper ; ret
0x000000000018d484 : jg 0x18d495 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000018d498 : jg 0x18d4a9 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000018d90a : jg 0x18d906 ; ret
0x000000000018db77 : jg 0x18db87 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000018db6d : jg 0x18db8d ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000018de5a : jg 0x18de6e ; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1 ; vzeroupper ; ret
0x000000000018de72 : jg 0x18de83 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000018e056 : jg 0x18e080 ; vzeroupper ; ret
0x000000000018e055 : jg 0x18e081 ; vzeroupper ; ret
0x000000000018e04f : jg 0x18e09e ; std ; vmovdqu64 zmmword ptr [r11], zmm4 ; vzeroupper ; ret
0x000000000018e116 : jg 0x18e126 ; vmovdqu64 zmmword ptr [r11], zmm8 ; vzeroupper ; ret
0x000000000018e11c : jg 0x18e126 ; vzeroupper ; ret
0x000000000018e11b : jg 0x18e127 ; vzeroupper ; ret
0x000000000018e1e1 : jg 0x18e20b ; vzeroupper ; ret
0x000000000018e1e0 : jg 0x18e20c ; vzeroupper ; ret
0x000000000018e1da : jg 0x18e229 ; std ; vmovdqu64 zmmword ptr [r11], zmm4 ; vzeroupper ; ret
0x000000000018e2a0 : jg 0x18e2b0 ; vmovdqu64 zmmword ptr [r11], zmm8 ; vzeroupper ; ret
0x000000000018e2a6 : jg 0x18e2b0 ; vzeroupper ; ret
0x000000000018e2a5 : jg 0x18e2b1 ; vzeroupper ; ret
0x000000000018e325 : jg 0x18e333 ; vzeroupper ; ret
0x000000000018e324 : jg 0x18e334 ; vzeroupper ; ret
0x000000000018e391 : jg 0x18e39f ; vzeroupper ; ret
0x000000000018e390 : jg 0x18e3a0 ; vzeroupper ; ret
0x000000000018e47b : jg 0x18e489 ; vzeroupper ; ret
0x000000000018e489 : jg 0x18e497 ; vzeroupper ; ret
0x0000000000190555 : jg 0x190564 ; neg eax ; ret
0x0000000000191514 : jg 0x19151b ; add byte ptr [rax - 0x77], cl ; ret 0x4de9
0x000000000019210b : jg 0x192098 ; ror byte ptr [rax + 0xf], cl ; retf
0x0000000000192628 : jg 0x192642 ; test byte ptr [rcx], dl ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0x8166
0x0000000000192d6d : jg 0x192cfa ; test byte ptr [rcx + 0xf], 0x44 ; ret 0xfe83
0x00000000001933fd : jg 0x193404 ; add byte ptr [rax - 0x77], cl ; ret 0x850f
0x0000000000194a81 : jg 0x194a88 ; add byte ptr [rax - 0x77], cl ; ret 0x850f
0x0000000000025626 : jg 0x2562e ; add byte ptr [rax], al ; call 0xe18f6
0x000000000003dbdf : jg 0x3dbfd ; call 0x39ec4
0x0000000000042c00 : jg 0x42c14 ; je 0x42b59 ; ret
0x0000000000043278 : jg 0x4327e ; je 0x43284 ; ret
0x0000000000043550 : jg 0x435a2 ; sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000043c75 : jg 0x43caa ; mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x0000000000043d05 : jg 0x43d3a ; mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x00000000000441e6 : jg 0x441ec ; add byte ptr [rax], al ; syscall
0x0000000000044e25 : jg 0x44e20 ; sbb dword ptr [rax], eax ; mov eax, edx ; ret
0x00000000000485e9 : jg 0x4857d ; or cl, byte ptr [rcx + 0x4890c30e] ; mov edx, ecx ; jmp 0x485c1
0x00000000000485e9 : jg 0x4857f ; or cl, byte ptr [rcx + 0x4890c30e] ; mov edx, ecx ; jmp 0x485c3
0x0000000000052eef : jg 0x52f03 ; syscall
0x0000000000058681 : jg 0x58700 ; mov ah, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000058731 : jg 0x5873e ; ret 0xf089
0x00000000000604d7 : jg 0x604eb ; xchg eax, ebp ; ret 0xc166
0x000000000006c9f2 : jg 0x6ca08 ; add ebx, esi ; mov r12, rcx ; jmp 0x6c9cd
0x000000000007640f : jg 0x76428 ; test byte ptr [rdx - 0x7c000017], dh ; ret
0x0000000000078eea : jg 0x78f0c ; add eax, ecx ; mov rdx, qword ptr [rbp - 0x4f8] ; jmp 0x78ec6
0x00000000000792c0 : jg 0x792d9 ; add r9d, edx ; mov rax, r10 ; jmp 0x7929d
0x000000000007c476 : jg 0x7c48f ; test byte ptr [rbx - 0x7c00001a], dh ; ret
0x000000000009c2ea : jg 0x9c339 ; mov rsi, rbp ; call rax
0x00000000000a279e : jg 0xa27b8 ; mov gs, edx ; add al, byte ptr [rax] ; add byte ptr [rcx - 9], al ; ret 0xf800
0x00000000000a42c7 : jg 0xa42e0 ; mov ss, edx ; add eax, dword ptr [rax] ; add bh, dh ; ret
0x00000000000b5526 : jg 0xb5531 ; ret
0x00000000000b5536 : jg 0xb5544 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000b554a : jg 0xb5559 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000b5569 : jg 0xb5577 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000b5579 : jg 0xb5587 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000b5589 : jg 0xb559a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000b55aa : jg 0xb55b9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000b55ca : jg 0xb55d9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000b55ea : jg 0xb55f9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000b560a : jg 0xb561c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000b562e : jg 0xb5641 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000b564d : jg 0xb565f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000b566d : jg 0xb567f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000b568b : jg 0xb569b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000b56ab : jg 0xb56bb ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000b56cb : jg 0xb56db ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000b56eb : jg 0xb56fb ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000b5c78 : jg 0xb5c83 ; jne 0xb6538 ; ret
0x00000000000b5c9c : jg 0xb5ca8 ; jne 0xb6538 ; ret
0x00000000000b5cbf : jg 0xb5ccc ; jne 0xb6538 ; ret
0x00000000000b5cda : jg 0xb5ce8 ; jne 0xb6538 ; ret
0x00000000000b5cfd : jg 0xb5d0c ; jne 0xb6538 ; ret
0x00000000000b5d22 : jg 0xb5d32 ; jne 0xb6538 ; ret
0x00000000000b5d40 : jg 0xb5d51 ; jne 0xb6538 ; ret
0x00000000000b5d5c : jg 0xb5d6e ; jne 0xb6538 ; ret
0x00000000000b5d7f : jg 0xb5d92 ; jne 0xb6538 ; ret
0x00000000000b5da4 : jg 0xb5db8 ; jne 0xb6538 ; ret
0x00000000000b5dc2 : jg 0xb5dd7 ; jne 0xb6538 ; ret
0x00000000000b5de2 : jg 0xb5df8 ; jne 0xb6538 ; ret
0x00000000000b5e04 : jg 0xb5e1b ; jne 0xb6538 ; ret
0x00000000000b5e24 : jg 0xb5e3c ; jne 0xb6538 ; ret
0x00000000000b5e44 : jg 0xb5e5d ; jne 0xb6538 ; ret
0x00000000000b5e5e : jg 0xb5e78 ; jne 0xb6538 ; ret
0x00000000000b5e81 : jg 0xb5e9c ; jne 0xb6538 ; ret
0x00000000000b5ea6 : jg 0xb5ec2 ; jne 0xb6538 ; ret
0x00000000000b5ec4 : jg 0xb5ee1 ; jne 0xb6538 ; ret
0x00000000000b5ee4 : jg 0xb5f02 ; jne 0xb6538 ; ret
0x00000000000b5f07 : jg 0xb5f26 ; jne 0xb6538 ; ret
0x00000000000b5f26 : jg 0xb5f46 ; jne 0xb6538 ; ret
0x00000000000b5f46 : jg 0xb5f67 ; jne 0xb6538 ; ret
0x00000000000b5f66 : jg 0xb5f88 ; jne 0xb6538 ; ret
0x00000000000b5f89 : jg 0xb5fac ; jne 0xb6538 ; ret
0x00000000000b5fbe : jg 0xb5fe2 ; jne 0xb6538 ; ret
0x00000000000b5fec : jg 0xb6011 ; jne 0xb6538 ; ret
0x00000000000b601c : jg 0xb6042 ; jne 0xb6538 ; ret
0x00000000000b6048 : jg 0xb606f ; jne 0xb6538 ; ret
0x00000000000b6078 : jg 0xb60a0 ; jne 0xb6538 ; ret
0x00000000000b60a8 : jg 0xb60d1 ; jne 0xb6538 ; ret
0x00000000000b60d8 : jg 0xb6102 ; jne 0xb6538 ; ret
0x00000000000b61f6 : jg 0xb6201 ; ret
0x00000000000b6209 : jg 0xb6217 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000b621a : jg 0xb6229 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000b6239 : jg 0xb6247 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000b6249 : jg 0xb6257 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000b625c : jg 0xb626d ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000b627a : jg 0xb6289 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000b629a : jg 0xb62a9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000b62ba : jg 0xb62c9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000b62dd : jg 0xb62ef ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000b62fe : jg 0xb6311 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000b631d : jg 0xb632f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000b633d : jg 0xb634f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000b635b : jg 0xb636b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000b637b : jg 0xb638b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000b639b : jg 0xb63ab ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000b63bb : jg 0xb63cb ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000b63de : jg 0xb63f1 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000b64f2 : jg 0xb64fd ; ret
0x00000000000b6626 : jg 0xb665a ; ret
0x00000000000b6b96 : jg 0xb6ba5 ; lea rax, [rdi + 0xf] ; ret
0x00000000000b6ba6 : jg 0xb6bb8 ; mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x00000000000b6bba : jg 0xb6bcd ; mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x11] ; ret
0x00000000000b6bd9 : jg 0xb6beb ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x00000000000b6bf9 : jg 0xb6c0b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000000b6c19 : jg 0xb6c2e ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; lea rax, [rdi + 0x14] ; ret
0x00000000000b6c3a : jg 0xb6c4d ; mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x15] ; ret
0x00000000000b6c5a : jg 0xb6c6d ; mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x16] ; ret
0x00000000000b6c7a : jg 0xb6c8d ; mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x17] ; ret
0x00000000000b6d1b : jg 0xb6d2f ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, [rdi + 0x1c] ; ret
0x00000000000b6d3b : jg 0xb6d4f ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000000b6d5b : jg 0xb6d6f ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, [rdi + 0x1e] ; ret
0x00000000000b6d1f : jg 0xb6d7f ; or eax, 0x1c478d48 ; ret
0x00000000000b6d7b : jg 0xb6d8f ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, [rdi + 0x1f] ; ret
0x00000000000b732b : jg 0xb7336 ; jne 0xb7d58 ; ret
0x00000000000b7350 : jg 0xb735c ; jne 0xb7d58 ; ret
0x00000000000b7373 : jg 0xb7380 ; jne 0xb7d58 ; ret
0x00000000000b738e : jg 0xb739c ; jne 0xb7d58 ; ret
0x00000000000b73b1 : jg 0xb73c0 ; jne 0xb7d58 ; ret
0x00000000000b73d6 : jg 0xb73e6 ; jne 0xb7d58 ; ret
0x00000000000b73f4 : jg 0xb7405 ; jne 0xb7d58 ; ret
0x00000000000b7410 : jg 0xb7422 ; jne 0xb7d58 ; ret
0x00000000000b7433 : jg 0xb7446 ; jne 0xb7d58 ; ret
0x00000000000b7458 : jg 0xb746c ; jne 0xb7d58 ; ret
0x00000000000b7486 : jg 0xb749b ; jne 0xb7d58 ; ret
0x00000000000b74a6 : jg 0xb74bc ; jne 0xb7d58 ; ret
0x00000000000b74c8 : jg 0xb74df ; jne 0xb7d58 ; ret
0x00000000000b74f8 : jg 0xb7510 ; jne 0xb7d58 ; ret
0x00000000000b7528 : jg 0xb7541 ; jne 0xb7d58 ; ret
0x00000000000b7552 : jg 0xb756c ; jne 0xb7d58 ; ret
0x00000000000b7575 : jg 0xb7590 ; jne 0xb7d58 ; ret
0x00000000000b759a : jg 0xb75b6 ; jne 0xb7d58 ; ret
0x00000000000b75c8 : jg 0xb75e5 ; jne 0xb7d58 ; ret
0x00000000000b75f8 : jg 0xb7616 ; jne 0xb7d58 ; ret
0x00000000000b762b : jg 0xb764a ; jne 0xb7d58 ; ret
0x00000000000b765a : jg 0xb767a ; jne 0xb7d58 ; ret
0x00000000000b768a : jg 0xb76ab ; jne 0xb7d58 ; ret
0x00000000000b76ba : jg 0xb76dc ; jne 0xb7d58 ; ret
0x00000000000b76ed : jg 0xb7710 ; jne 0xb7d58 ; ret
0x00000000000b7722 : jg 0xb7746 ; jne 0xb7d58 ; ret
0x00000000000b7750 : jg 0xb7775 ; jne 0xb7d58 ; ret
0x00000000000b7780 : jg 0xb77a6 ; jne 0xb7d58 ; ret
0x00000000000b77ac : jg 0xb77d3 ; jne 0xb7d58 ; ret
0x00000000000b77dc : jg 0xb7804 ; jne 0xb7d58 ; ret
0x00000000000b780c : jg 0xb7835 ; jne 0xb7d58 ; ret
0x00000000000b783c : jg 0xb7866 ; jne 0xb7d58 ; ret
0x00000000000b79e6 : jg 0xb79f5 ; lea rax, [rdi + 0x10] ; ret
0x00000000000b79f9 : jg 0xb7a0b ; mov byte ptr [rdi + 0x10], cl ; lea rax, [rdi + 0x11] ; ret
0x00000000000b7a1a : jg 0xb7a2d ; mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x12] ; ret
0x00000000000b7a39 : jg 0xb7a4b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000000b7a59 : jg 0xb7a6b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x14] ; ret
0x00000000000b7a7c : jg 0xb7a91 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; lea rax, [rdi + 0x15] ; ret
0x00000000000b7a9a : jg 0xb7aad ; mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x16] ; ret
0x00000000000b7aba : jg 0xb7acd ; mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x17] ; ret
0x00000000000b7ada : jg 0xb7aed ; mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x18] ; ret
0x00000000000b7b7b : jg 0xb7b8f ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000000b7b9b : jg 0xb7baf ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, [rdi + 0x1e] ; ret
0x00000000000b7bbb : jg 0xb7bcf ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, [rdi + 0x1f] ; ret
0x00000000000b7b7f : jg 0xb7bdf ; or eax, 0x1d478d48 ; ret
0x00000000000b7bdb : jg 0xb7bef ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, [rdi + 0x20] ; ret
0x00000000000b7bfe : jg 0xb7c11 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000b7d12 : jg 0xb7d1d ; ret
0x00000000000b7e46 : jg 0xb7e7e ; lea rax, [rdi + 0x40] ; ret
0x00000000000b7e45 : jg 0xb7ecd ; xor byte ptr [rax - 0x73], cl ; ret
0x00000000000b87d6 : jg 0xb87e1 ; ret
0x00000000000b87e6 : jg 0xb87f4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000b87fa : jg 0xb8809 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000b8819 : jg 0xb8827 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000b8829 : jg 0xb8837 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000b8839 : jg 0xb884a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000b885a : jg 0xb8869 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000b887a : jg 0xb8889 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000b889a : jg 0xb88a9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000b88ba : jg 0xb88cc ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000b88de : jg 0xb88f1 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000b88fd : jg 0xb890f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000b891d : jg 0xb892f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000b893b : jg 0xb894b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000b895b : jg 0xb896b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000b897b : jg 0xb898b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000b899b : jg 0xb89ab ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000b92a6 : jg 0xb92b1 ; ret
0x00000000000b92b6 : jg 0xb92c4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000b92ca : jg 0xb92d9 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000b92e9 : jg 0xb92f7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000b92f9 : jg 0xb9307 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000b9309 : jg 0xb931a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000b932a : jg 0xb9339 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000b934a : jg 0xb9359 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000b936a : jg 0xb9379 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000b938a : jg 0xb939c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000b93ae : jg 0xb93c1 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000b93cd : jg 0xb93df ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000b93ed : jg 0xb93ff ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000b940b : jg 0xb941b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000b942b : jg 0xb943b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000b944b : jg 0xb945b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000b946b : jg 0xb947b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000b9616 : jg 0xb9626 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000b9629 : jg 0xb963c ; mov byte ptr [rdi + 0x10], cl ; xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000b964a : jg 0xb965e ; mov word ptr [rdi + 0x10], cx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000b9669 : jg 0xb967c ; mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000b9689 : jg 0xb969c ; mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000b96ca : jg 0xb96de ; mov qword ptr [rdi + 0xe], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000b96ea : jg 0xb96fe ; mov qword ptr [rdi + 0xf], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000b970a : jg 0xb971e ; mov qword ptr [rdi + 0x10], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000b97ab : jg 0xb97c0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000b97cb : jg 0xb97e0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000b97eb : jg 0xb9800 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000b980b : jg 0xb9820 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000b97ef : jg 0xb9850 ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000b980f : jg 0xb9870 ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000b9832 : jg 0xb9896 ; adc byte ptr [rax - 0x12cfdfb1], cl ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000b9886 : jg 0xb98bf ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000b9885 : jg 0xb990e ; xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000ba2d4 : jg 0xba30c ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000000ba3a2 : jg 0xba3da ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000000ba430 : jg 0xba43b ; ret
0x00000000000ba4ac : jg 0xba4b7 ; ret
0x00000000000ba523 : jg 0xba56f ; xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x00000000000ba6bb : jg 0xba68b ; nop dword ptr [rax] ; mov eax, 0x80 ; pop rbx ; ret
0x00000000000cda05 : jg 0xcda0d ; neg eax ; ret
0x00000000000ce986 : jg 0xce9a6 ; mov rax, rbx ; pop rbx ; ret
0x00000000000dbd87 : jg 0xdbd57 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e1d0c : jg 0xe1d26 ; test ah, ch ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000e1e9c : jg 0xe1eb6 ; test ah, ch ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000e3497 : jg 0xe34a5 ; add byte ptr [rax], al ; mov eax, 0xfffa ; cmovne rax, rdx ; ret
0x00000000000e34cd : jg 0xe34db ; add byte ptr [rax], al ; mov eax, 0xfde8 ; cmovne rax, rdx ; ret
0x00000000000e3507 : jg 0xe3510 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000e3507 : jg 0xe3511 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000e3526 : jg 0xe3530 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000e34e4 : jg 0xe3539 ; cmp eax, 0x58465342 ; jne 0xe34fa ; ret
0x00000000000e3543 : jg 0xe354c ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000e3543 : jg 0xe354d ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000e3b35 : jg 0xe3b42 ; add byte ptr [rax], al ; jmp 0xe392b
0x00000000000eaf6f : jg 0xeaf63 ; jmp 0xeaf40
0x00000000000ed5db : jg 0xed5ae ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f885a : jg 0xf8868 ; call 0x2531c
0x00000000000f8863 : jg 0xf8879 ; call 0x2531c
0x00000000000f886c : jg 0xf888a ; call 0x2531c
0x00000000000f8875 : jg 0xf889b ; call 0x2531c
0x00000000000f887e : jg 0xf88ac ; call 0x2531c
0x00000000000f88e6 : jg 0xf88f4 ; call 0x2531c
0x00000000000f88ef : jg 0xf8905 ; call 0x2531c
0x00000000000f88f8 : jg 0xf8916 ; call 0x2531c
0x00000000000f8901 : jg 0xf8927 ; call 0x2531c
0x00000000000f890a : jg 0xf8938 ; call 0x2531c
0x00000000001023e5 : jge 0x1023dc ; call 0x25199
0x0000000000108d2e : jge 0x108d48 ; test bl, bh ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf 0x1f0f
0x0000000000110e2a : jge 0x110e58 ; call 0x10d894
0x00000000001113f0 : jge 0x111432 ; call 0x10d664
0x00000000001167ac : jge 0x1167b5 ; inc dword ptr [rbp - 0x7cd28b40] ; ret
0x00000000001174ca : jge 0x117532 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000118acc : jge 0x118a81 ; call r14
0x0000000000119131 : jge 0x119136 ; call r12
0x000000000011915d : jge 0x119162 ; call r12
0x000000000011919d : jge 0x1191a2 ; call r12
0x00000000001191cd : jge 0x1191d2 ; call r12
0x00000000001191fd : jge 0x119202 ; call r12
0x0000000000119225 : jge 0x11922a ; call r12
0x000000000011b22a : jge 0x11b1bc ; call 0x1123f8
0x000000000011e361 : jge 0x11e367 ; add byte ptr [rax], al ; syscall
0x000000000012ae32 : jge 0x12adbe ; call rcx
0x000000000012b247 : jge 0x12b1d3 ; call rax
0x000000000012b43b : jge 0x12b3c7 ; call rax
0x000000000012b5a1 : jge 0x12b52d ; call rax
0x000000000013984a : jge 0x1397ee ; syscall
0x000000000014c86f : jge 0x14c883 ; call rax
0x0000000000152acf : jge 0x152ae3 ; call rax
0x0000000000153228 : jge 0x15323c ; call rax
0x0000000000159b29 : jge 0x159b2f ; add al, 0x75 ; retf 0xbd49
0x000000000015c74f : jge 0x15c75f ; hlt ; dec dword ptr [rax - 0x77] ; ret
0x0000000000189eed : jge 0x189f2c ; ret 0xe2c4
0x000000000018a39d : jge 0x18a3dc ; ret 0xe2c4
0x0000000000194d0d : jge 0x194d25 ; add rdi, rbp ; call r12
0x0000000000044e73 : jge 0x44e88 ; cli ; je 0x44e8b ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000630b0 : jge 0x630be ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000092a2f : jge 0x929cf ; or dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x00000000000a6aee : jge 0xa6abb ; mov edi, 2 ; jmp 0xa2df6
0x00000000000b72df : jge 0xb7327 ; str word ptr [rbx + 0x63] ; or al, 0x83 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000dff2d : jge 0xdff49 ; add al, ch ; sbb edx, dword ptr [rcx - 0xc] ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000e32d9 : jge 0xe32e0 ; add byte ptr [rax + 0x39], cl ; retf 0x840f
0x0000000000103065 : jl 0x10308f ; sbb byte ptr [rdi], cl ; retf 0x8348
0x000000000010884d : jl 0x108877 ; js 0x10883d ; retf
0x0000000000108e67 : jl 0x108e97 ; mov qword ptr [rsp + 0x10], r9 ; call 0x2514a
0x000000000010ceda : jl 0x10cf08 ; sbb byte ptr [rax + 0x101], bh ; syscall
0x000000000010d4cd : jl 0x10d4fb ; or byte ptr [rax + 0x48], bh ; syscall
0x000000000011181c : jl 0x11184a ; or byte ptr [rax + 0x10f], bh ; syscall
0x000000000011a90d : jl 0x11a91d ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000011a90c : jl 0x11a91e ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000011db14 : jl 0x11db2d ; je 0x11db1d ; ret
0x000000000012057b : jl 0x12058e ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000012c809 : jl 0x12c837 ; or byte ptr [rax + 0xe6], bh ; syscall
0x0000000000133515 : jl 0x13353f ; xor al, ch ; ret
0x000000000013fdb2 : jl 0x13fde0 ; and byte ptr [rcx + rcx*4 - 0xe], al ; call 0x13c8b8
0x000000000013ff29 : jl 0x13ff54 ; and byte ptr [rax - 0x77], cl ; ret
0x0000000000141f46 : jl 0x141f74 ; adc byte ptr [rax + 0x81], bh ; syscall
0x0000000000143007 : jl 0x142f96 ; or byte ptr [rcx], al ; jne 0x142f7f ; jmp 0x142fe8
0x000000000015693d : jl 0x156968 ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000156fc5 : jl 0x156f57 ; or byte ptr [rcx], dil ; ret 0x5375
0x0000000000157c8b : jl 0x157cd1 ; or byte ptr [rbx - 6], 0x89 ; retf 0x8b48
0x000000000015e5c5 : jl 0x15e5f3 ; sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x000000000018258a : jl 0x1825cb ; add eax, 0x20 ; add rax, rdi ; vzeroupper ; ret
0x00000000001825aa : jl 0x1825cb ; add eax, 0x60 ; add rax, rdi ; vzeroupper ; ret
0x00000000001824d4 : jl 0x1825cc ; add rax, rdi ; vzeroupper ; ret
0x0000000000187ce5 : jl 0x187d02 ; and ecx, ebp ; ret
0x0000000000187e30 : jl 0x187e3b ; add byte ptr [rax], al ; vzeroupper ; ret
0x0000000000187f2d : jl 0x187f52 ; add dword ptr [rdi], ecx ; test dword ptr [rdx + 1], edi ; add byte ptr [rax], al ; vzeroupper ; ret
0x0000000000188c61 : jl 0x188c86 ; add dword ptr [rdi], ecx ; test dword ptr [rsi + 1], esi ; add byte ptr [rax], al ; vzeroupper ; ret
0x0000000000189f9e : jl 0x189fb6 ; jne 0x189c9d ; vzeroupper ; ret
0x000000000018d32b : jl 0x18d334 ; neg eax ; ret
0x000000000018d404 : jl 0x18d453 ; adc dword ptr [rcx - 1], edi ; ret
0x000000000018d3fd : jl 0x18d453 ; adc dword ptr [rcx - 2], esi ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000018d440 : jl 0x18d48f ; adc dword ptr [rcx - 1], ebx ; ret
0x000000000018d439 : jl 0x18d48f ; adc dword ptr [rcx - 2], edx ; vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x000000000018d63e : jl 0x18d68d ; adc dword ptr [rcx - 1], edi ; ret
0x000000000018d637 : jl 0x18d68d ; adc dword ptr [rcx - 2], esi ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000018d79e : jl 0x18d7f4 ; adc dword ptr [rcx + 6], esi ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000018d7a5 : jl 0x18d7f4 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000018d900 : jl 0x18d956 ; adc dword ptr [rdi - 7], esi ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000018d907 : jl 0x18d956 ; adc dword ptr [rdi - 8], edi ; ret
0x000000000018db2c : jl 0x18db7b ; adc dword ptr [rsi - 1], edx ; ret
0x000000000018db25 : jl 0x18db7b ; adc dword ptr [rsi - 2], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000018db4d : jl 0x18db9c ; adc dword ptr [rsi - 1], edx ; ret
0x000000000018db46 : jl 0x18db9c ; adc dword ptr [rsi - 2], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000018db5a : jl 0x18dbaf ; adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000018db60 : jl 0x18dbaf ; adc dword ptr [rsi - 1], edx ; ret
0x000000000018dc35 : jl 0x18dc84 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000018dc2e : jl 0x18dc84 ; adc dword ptr [rsi - 2], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000018dc86 : jl 0x18dcdc ; adc dword ptr [rsi + 2], edx ; vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x000000000018dc8d : jl 0x18dcdc ; adc dword ptr [rsi + 3], edx ; ret
0x000000000018dd23 : jl 0x18dd79 ; adc dword ptr [rsi + 6], edx ; vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x000000000018dd2a : jl 0x18dd79 ; adc dword ptr [rsi + 7], edx ; ret
0x000000000018df40 : jl 0x18df5f ; cld ; vzeroupper ; ret
0x0000000000026b5e : jl 0x26b8f ; adc al, 0x48 ; mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000028ea2 : jl 0x28ed2 ; add bh, byte ptr [rsi + 0x3a] ; call 0x2514a
0x000000000002a06f : jl 0x2a09d ; xor byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000002c214 : jl 0x2c23f ; cmp byte ptr [rcx - 0xa], al ; ret 0x7501
0x000000000002c3b4 : jl 0x2c3e2 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000002c915 : jl 0x2c93f ; call r15
0x000000000002d46d : jl 0x2d49b ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000002da23 : jl 0x2da4d ; call r14
0x000000000002e9c1 : jl 0x2e9eb ; cmp dh, dh ; ret
0x000000000002eb51 : jl 0x2eb7b ; call r15
0x000000000002efe7 : jl 0x2f010 ; call rbx
0x000000000002f0ab : jl 0x2f0d8 ; add byte ptr [rsi + rdx*2 - 0xa], sil ; ret
0x000000000002fd7b : jl 0x2fda5 ; call r15
0x0000000000030217 : jl 0x30240 ; call rbx
0x00000000000302db : jl 0x30308 ; add byte ptr [rsi + rdx*2 - 0xa], sil ; ret
0x0000000000032f53 : jl 0x32f81 ; cmovns eax, dword ptr [rcx] ; ror byte ptr [rax - 0x77], 1 ; ret 0x8349
0x0000000000042c7c : jl 0x42cae ; call 0x2448b5f5
0x0000000000045350 : jl 0x4537d ; or byte ptr [rcx + rcx*4 - 2], cl ; call r14
0x0000000000057c12 : jl 0x57be1 ; or byte ptr [rax - 0x73], cl ; push rdi ; add dword ptr [rcx - 0x77], ecx ; push rsp ; ret
0x0000000000058292 : jl 0x58261 ; or byte ptr [rax - 0x73], cl ; push rdi ; add dword ptr [rcx - 0x77], ecx ; push rsp ; ret
0x00000000000600d9 : jl 0x60107 ; jo 0x600be ; in eax, 0xdf ; loopne 0x60072 ; ret
0x000000000006f61a : jl 0x6f62b ; add al, 0xf ; test byte ptr [rip - 0x7cfffffb], ah ; ret 0x3901
0x00000000000913a8 : jl 0x913d2 ; or bl, ch ; retf
0x00000000000a283f : jl 0xa2865 ; rol dword ptr [rcx + rcx*4 - 0x29], 0xc1 ; call qword ptr [rdx]
0x00000000000aacba : jl 0xaad25 ; add rax, rdi ; ret
0x00000000000aacca : jl 0xaad27 ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000aacea : jl 0xaad27 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000aad0a : jl 0xaad27 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000bb51c : jl 0xbb4b2 ; add al, 0xe8 ; cld ; pushfq ; idiv bh ; mov rax, rbx ; pop rbx ; ret
0x00000000000c5fb1 : jl 0xc5fba ; add dword ptr [rbp - 0x77], eax ; ret
0x00000000000c8686 : jl 0xc86c6 ; adc al, 0xf ; xchg eax, ebx ; ret 0x3948
0x00000000000c91a0 : jl 0xc91cb ; sbb byte ptr [rax - 0x77], cl ; retf 0x2b48
0x00000000000cec7c : jl 0xceca5 ; push rax ; call rbx
0x00000000000cf3fe : jl 0xcf42c ; adc byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x00000000000cf41c : jl 0xcf447 ; cmp byte ptr [rax + 0x29], cl ; ret 0x348
0x00000000000cf61a : jl 0xcf648 ; adc byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x00000000000cf638 : jl 0xcf663 ; cmp byte ptr [rax + 0x29], cl ; ret 0x348
0x00000000000d600b : jl 0xd603b ; jmp 0xd41d2
0x00000000000d74fe : jl 0xd7529 ; sbb byte ptr [rax + 0x63], cl ; ret 0x8944
0x00000000000d7cd9 : jl 0xd7d04 ; xor byte ptr [rcx - 0x77], al ; ret 0xc781
0x00000000000d8667 : jl 0xd8635 ; call 0x25135
0x00000000000dd510 : jl 0xdd51d ; or byte ptr [rax], al ; mov rax, r14 ; call rax
0x00000000000dd6a4 : jl 0xdd6d2 ; and byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000000e29d1 : jl 0xe29d7 ; add byte ptr [rax], al ; syscall
0x00000000000eaa0b : jl 0xeaa8b ; mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; ret
0x00000000000eaa0a : jl 0xeaa8c ; mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; ret
0x00000000000f0efe : jl 0xf0f2c ; or byte ptr [rbp - 0x9dc8b01], al ; ret
0x00000000000f691f : jl 0xf694a ; and byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000010b877 : jle 0x10b8eb ; ret
0x000000000010b8c3 : jle 0x10b93b ; movups xmmword ptr [rdi + 0x78], xmm7 ; ret
0x000000000010c1af : jle 0x10c223 ; ret
0x000000000010c238 : jle 0x10c2b3 ; movups xmmword ptr [rdi + 0xf8], xmm7 ; ret
0x000000000011936c : jle 0x119389 ; test r15, r15 ; jne 0x1193c5 ; mov rdi, qword ptr [r14] ; call r12
0x00000000001193a0 : jle 0x1193bd ; test r15, r15 ; jne 0x11941e ; mov rdi, qword ptr [r14] ; call r12
0x000000000011e391 : jle 0x11e397 ; add byte ptr [rax], al ; syscall
0x000000000014d2dc : jle 0x14d32c ; add esp, 0x20 ; pop rbx ; ret
0x0000000000151528 : jle 0x151540 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000015bf87 : jle 0x15bf96 ; add byte ptr [rax - 0x39], cl ; ret
0x000000000018150a : jle 0x1815b6 ; ret
0x0000000000189284 : jle 0x189311 ; movabs al, byte ptr [0x77f8c5237f7ec1c4] ; ret
0x00000000001893b7 : jle 0x189444 ; movabs al, byte ptr [0x77f8c5237f7ec1c4] ; ret
0x000000000018db90 : jle 0x18db5f ; cmp dl, 4 ; jb 0x18dba9 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000029b72 : jle 0x29b47 ; sbb eax, dword ptr [rax] ; test eax, eax ; je 0x29b88 ; ret
0x0000000000031502 : jle 0x31515 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000042dad : jle 0x42d7b ; and rax, rdx ; sub rax, rdx ; shr rax, 0x3f ; ret
0x0000000000042e31 : jle 0x42e7b ; and al, 0xf8 ; ret
0x0000000000042e7c : jle 0x42ec6 ; and al, 0xf8 ; ret
0x0000000000042e95 : jle 0x42eef ; and al, 0xf8 ; movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x000000000004372e : jle 0x43735 ; adc al, 0 ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000056061 : jle 0x55fee ; retf 0xc183
0x0000000000082501 : jle 0x82511 ; or dword ptr [rbx], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009e12e : jle 0x9e1a5 ; clc ; dec dword ptr [rax + 1] ; ret
0x000000000009e44e : jle 0x9e412 ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x000000000009e44e : jle 0x9e413 ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x00000000000b022e : jle 0xb0237 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000000b022e : jle 0xb0238 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000000e3571 : jle 0xe3577 ; add byte ptr [rax], al ; ret
0x0000000000102f51 : jmp 0x102932
0x0000000000105738 : jmp 0x105706
0x0000000000105a00 : jmp 0x1059cd
0x0000000000109b22 : jmp 0x10845e
0x000000000010d6db : jmp 0x10d6a0
0x000000000010e060 : jmp 0x10e02d
0x000000000010e13e : jmp 0x10e0e3
0x00000000001124a5 : jmp 0x11246a
0x0000000000112619 : jmp 0x1125cd
0x00000000001126b1 : jmp 0x112662
0x000000000011428b : jmp 0x114250
0x000000000011433b : jmp 0x114300
0x00000000001159d9 : jmp 0x1159a7
0x0000000000115aa9 : jmp 0x115a76
0x0000000000116021 : jmp 0x116024
0x000000000011633b : jmp 0x116467
0x0000000000118218 : jmp 0x1181e6
0x0000000000118843 : jmp 0x118808
0x000000000011cf8a : jmp 0x11c009
0x0000000000111332 : jmp 0x1202
0x0000000000111331 : jmp 0x1203
0x00000000001236db : jmp 0x1234a7
0x00000000001236ed : jmp 0x123584
0x0000000000123813 : jmp 0x12365c
0x0000000000123b3b : jmp 0x1238ff
0x0000000000123b54 : jmp 0x1239db
0x0000000000123c86 : jmp 0x123b1e
0x0000000000127825 : jmp 0x1277eb
0x000000000012c26a : jmp 0x12c295
0x000000000012c2ef : jmp 0x12c36c
0x000000000012cd3c : jmp 0x12ccbd
0x000000000012fd2f : jmp 0x12fcf4
0x000000000013071d : jmp 0x1304be
0x0000000000130c4d : jmp 0x130a05
0x000000000013583e : jmp 0x1357f7
0x0000000000135e33 : jmp 0x135add
0x0000000000135e9f : jmp 0x135da9
0x000000000013839d : jmp 0x138363
0x000000000013b338 : jmp 0x13b2f8
0x000000000013b375 : jmp 0x13b33a
0x000000000013b6a2 : jmp 0x13b667
0x000000000013b747 : jmp 0x13b6fc
0x000000000013e739 : jmp 0x13e78a
0x000000000013fed6 : jmp 0x13fe9c
0x00000000001426ed : jmp 0x142471
0x0000000000142e7c : jmp 0x142d46
0x0000000000143011 : jmp 0x142fde
0x00000000001458e6 : jmp 0x1458b3
0x0000000000146acb : jmp 0x14699d
0x0000000000147bd9 : jmp 0x147b9e
0x0000000000147e90 : jmp 0x147e5d
0x0000000000148533 : jmp 0x1484f8
0x0000000000148d3c : jmp 0x148c7f
0x000000000014bcaf : jmp 0x14bc75
0x000000000014cc8f : jmp 0x14cc5d
0x000000000014dd6a : jmp 0x14dd30
0x000000000014e987 : jmp 0x14e955
0x000000000014f427 : jmp 0x14f3f5
0x000000000014fc3b : jmp 0x14f815
0x00000000001504fb : jmp 0x1504c1
0x00000000001515f5 : jmp 0x1515c2
0x00000000001526e9 : jmp 0x1524f7
0x0000000000152a40 : jmp 0x152a05
0x0000000000152e72 : jmp 0x152e1f
0x00000000001544b0 : jmp 0x15447d
0x0000000000154530 : jmp 0x1544fd
0x00000000001545f0 : jmp 0x1545bd
0x0000000000154b51 : jmp 0x154b1f
0x0000000000154be1 : jmp 0x154baf
0x0000000000154d00 : jmp 0x154ccd
0x0000000000154f43 : jmp 0x154e25
0x0000000000155d81 : jmp 0x155d47
0x000000000015b422 : jmp 0x15b3e8
0x000000000015b4a2 : jmp 0x15b468
0x000000000015dc52 : jmp 0x15dc20
0x000000000015e3d4 : jmp 0x15e3a1
0x00000000000df8f9 : jmp 0x17993a69
0x000000000017c872 : jmp 0x17c888
0x000000000018449e : jmp 0x1844b4
0x0000000000184a9e : jmp 0x184ab4
0x0000000000184d9e : jmp 0x184db4
0x000000000018509e : jmp 0x1850b4
0x000000000018539e : jmp 0x1853b4
0x000000000018569e : jmp 0x1856b4
0x000000000018b378 : jmp 0x18b346
0x000000000018b3f6 : jmp 0x18b3c4
0x000000000018b888 : jmp 0x18b856
0x000000000018b906 : jmp 0x18b8d4
0x000000000018c9a8 : jmp 0x18c976
0x000000000018ca26 : jmp 0x18c9f4
0x000000000018ceb8 : jmp 0x18ce86
0x000000000018cf36 : jmp 0x18cf04
0x000000000019473b : jmp 0x194709
0x000000000002508b : jmp 0x25007
0x0000000000119103 : jmp 0x2531a
0x000000000002b74b : jmp 0x2b633
0x000000000002e3a1 : jmp 0x2e366
0x0000000000030f96 : jmp 0x30f5b
0x0000000000194bc4 : jmp 0x32194bcf
0x00000000000f4644 : jmp 0x344b10d4
0x0000000000038b81 : jmp 0x37985
0x000000000003945b : jmp 0x39428
0x0000000000039d7b : jmp 0x39d41
0x00000000000f587b : jmp 0x3b55230b
0x0000000000041d29 : jmp 0x41cee
0x0000000000044844 : jmp 0x44812
0x00000000000474bd : jmp 0x4748a
0x00000000000e3683 : jmp 0x480e4695
0x00000000001151a6 : jmp 0x48115279
0x00000000000485f3 : jmp 0x485b9
0x00000000000ce72b : jmp 0x48d6e87b
0x0000000000190f7c : jmp 0x48e318cc
0x00000000001912a8 : jmp 0x48e31bf8
0x000000000014364e : jmp 0x48e7359a
0x0000000000094f0a : jmp 0x49d3705a
0x000000000004a639 : jmp 0x4a2db
0x000000000004a7de : jmp 0x4a82c
0x0000000000097df2 : jmp 0x4ccb8742
0x0000000000097df1 : jmp 0x4ccb8743
0x000000000004d6b9 : jmp 0x4d356
0x000000000004d85e : jmp 0x4d8ac
0x000000000004f820 : jmp 0x4e05d
0x000000000016aeda : jmp 0x4f95bed8
0x000000000016aed9 : jmp 0x4f95bed9
0x000000000016d9fa : jmp 0x4f95e9f8
0x000000000016d9f9 : jmp 0x4f95e9f9
0x0000000000050419 : jmp 0x500df
0x00000000000505be : jmp 0x5060c
0x0000000000052ed5 : jmp 0x52de1
0x000000000005349b : jmp 0x53468
0x0000000000055ab4 : jmp 0x55a7a
0x00000000000567f2 : jmp 0x56844
0x00000000000584b2 : jmp 0x58504
0x0000000000060af5 : jmp 0x60abb
0x0000000000060d45 : jmp 0x60d0b
0x00000000000642d3 : jmp 0x64299
0x0000000000069d99 : jmp 0x64890
0x0000000000069d2c : jmp 0x65feb
0x0000000000066798 : jmp 0x66783
0x0000000000066a44 : jmp 0x669e4
0x00000000000f7768 : jmp 0x66da0078
0x000000000006a558 : jmp 0x66fd2
0x000000000007358f : jmp 0x6c826
0x000000000006c9f9 : jmp 0x6c9c6
0x0000000000071838 : jmp 0x6db03
0x00000000000710d7 : jmp 0x6dbb3
0x000000000007152a : jmp 0x6df76
0x0000000000071d4a : jmp 0x6e017
0x0000000000071fd8 : jmp 0x6e227
0x0000000000071ec3 : jmp 0x6e930
0x0000000000072f1b : jmp 0x6f16b
0x00000000000736c2 : jmp 0x701b3
0x0000000000073b3b : jmp 0x705d0
0x0000000000073b8c : jmp 0x72a90
0x0000000000073a42 : jmp 0x72c59
0x000000000007360e : jmp 0x73115
0x0000000000073fca : jmp 0x73d69
0x0000000000073ea8 : jmp 0x73da6
0x0000000000078ef5 : jmp 0x78ebb
0x00000000000792c8 : jmp 0x79295
0x000000000007a23b : jmp 0x7a157
0x0000000000080cd1 : jmp 0x80c96
0x0000000000081158 : jmp 0x8111e
0x0000000000087c9a : jmp 0x87c60
0x0000000000089ac2 : jmp 0x89a8f
0x000000000012ef92 : jmp 0x8b1c2
0x000000000008c245 : jmp 0x8c20a
0x0000000000090b71 : jmp 0x90b37
0x00000000000913ab : jmp 0x91379
0x0000000000092731 : jmp 0x926f7
0x0000000000095b24 : jmp 0x9596f
0x0000000000098038 : jmp 0x98063
0x00000000000980df : jmp 0x98108
0x000000000009aa85 : jmp 0x9aa53
0x000000000009c69a : jmp 0x9c65f
0x000000000009c713 : jmp 0x9c6d9
0x00000000000a0040 : jmp 0xa000e
0x00000000000bdc4b : jmp 0xa055f87
0x00000000000a0a47 : jmp 0xa0a15
0x00000000000a22c6 : jmp 0xa2293
0x00000000000a28e5 : jmp 0xa28aa
0x00000000000a6a68 : jmp 0xa2d60
0x00000000000a6af5 : jmp 0xa2def
0x00000000000ad68e : jmp 0xad6a4
0x00000000000afb34 : jmp 0xafafa
0x00000000000afc88 : jmp 0xafc4d
0x00000000000afd4c : jmp 0xafd12
0x00000000000afe98 : jmp 0xafe5d
0x00000000000b9bfe : jmp 0xb9bc4
0x00000000000b9ccf : jmp 0xb9c95
0x00000000000b9d3e : jmp 0xb9d04
0x00000000000ba5de : jmp 0xba5a4
0x00000000000baa4f : jmp 0xbaa1d
0x00000000000bbd3c : jmp 0xbbc00
0x00000000000bc5d3 : jmp 0xbc5a1
0x00000000000bd7f9 : jmp 0xbd496
0x00000000000bfc11 : jmp 0xbfb70
0x00000000000c0179 : jmp 0xbfe3f
0x00000000000c29d9 : jmp 0xc267b
0x00000000000c3a04 : jmp 0xc3031
0x00000000000c6605 : jmp 0xc65d2
0x00000000000cbf47 : jmp 0xca8ff
0x00000000000caeeb : jmp 0xcae6a
0x00000000000d1d4d : jmp 0xd1d63
0x00000000000d6935 : jmp 0xd3372
0x00000000000d600e : jmp 0xd41cf
0x00000000000d600d : jmp 0xd41d0
0x00000000000d6ab3 : jmp 0xd6a81
0x00000000000e16b3 : jmp 0xe1679
0x00000000000e26d1 : jmp 0xe2609
0x00000000000e2e9e : jmp 0xe2ddd
0x00000000000e3b39 : jmp 0xe3927
0x00000000000ea93c : jmp 0xea699
0x00000000000eaf71 : jmp 0xeaf3e
0x00000000000ef06a : jmp 0xeeeaa
0x000000000011e4b4 : jmp 0xf11e4bd
0x00000000000fa44b : jmp 0xfa411
0x00000000000fbff7 : jmp 0xfb0f3
0x00000000000fbf3c : jmp 0xfb519
0x00000000000a766d : jmp 0xfd49fb9
0x00000000000a7716 : jmp 0xfd4a062
0x00000000000a7856 : jmp 0xfd4a1a2
0x00000000000a7996 : jmp 0xfd4a2e2
0x00000000000a7ad6 : jmp 0xfd4a422
0x00000000000a7c16 : jmp 0xfd4a562
0x00000000000a7d56 : jmp 0xfd4a6a2
0x00000000000a7e96 : jmp 0xfd4a7e2
0x00000000000a7fd6 : jmp 0xfd4a922
0x00000000000a8116 : jmp 0xfd4aa62
0x00000000000a8256 : jmp 0xfd4aba2
0x00000000000a8396 : jmp 0xfd4ace2
0x00000000000a84d6 : jmp 0xfd4ae22
0x00000000000a8616 : jmp 0xfd4af62
0x00000000000a8756 : jmp 0xfd4b0a2
0x00000000000a8896 : jmp 0xfd4b1e2
0x00000000000a8d7d : jmp 0xfd4b6c9
0x00000000000a8e56 : jmp 0xfd4b7a2
0x00000000000a8fd6 : jmp 0xfd4b922
0x00000000000a9156 : jmp 0xfd4baa2
0x00000000000a92d6 : jmp 0xfd4bc22
0x00000000000a9456 : jmp 0xfd4bda2
0x00000000000a95d6 : jmp 0xfd4bf22
0x00000000000a9756 : jmp 0xfd4c0a2
0x00000000000a98d6 : jmp 0xfd4c222
0x00000000000a9a56 : jmp 0xfd4c3a2
0x00000000000a9bd6 : jmp 0xfd4c522
0x00000000000a9d56 : jmp 0xfd4c6a2
0x00000000000a9ed6 : jmp 0xfd4c822
0x00000000000aa056 : jmp 0xfd4c9a2
0x00000000000aa1d6 : jmp 0xfd4cb22
0x00000000000aa356 : jmp 0xfd4cca2
0x00000000000ab387 : jmp 0xfd4dcd3
0x00000000000ab50c : jmp 0xfd4de58
0x00000000000ab71c : jmp 0xfd4e068
0x00000000000ab92c : jmp 0xfd4e278
0x00000000000abb3c : jmp 0xfd4e488
0x00000000000abd4c : jmp 0xfd4e698
0x00000000000abf5c : jmp 0xfd4e8a8
0x00000000000ac16c : jmp 0xfd4eab8
0x00000000000ac37c : jmp 0xfd4ecc8
0x00000000000ac58c : jmp 0xfd4eed8
0x00000000000ac79c : jmp 0xfd4f0e8
0x00000000000ac9ac : jmp 0xfd4f2f8
0x00000000000acbbc : jmp 0xfd4f508
0x00000000000acdcc : jmp 0xfd4f718
0x00000000000acfdc : jmp 0xfd4f928
0x00000000000ad1ec : jmp 0xfd4fb38
0x00000000000ad5e7 : jmp 0xfd4ff33
0x00000000000ad78c : jmp 0xfd500d8
0x00000000000ad9dc : jmp 0xfd50328
0x00000000000adc2c : jmp 0xfd50578
0x00000000000ade7c : jmp 0xfd507c8
0x00000000000ae0cc : jmp 0xfd50a18
0x00000000000ae31c : jmp 0xfd50c68
0x00000000000ae56c : jmp 0xfd50eb8
0x00000000000ae7bc : jmp 0xfd51108
0x00000000000aea0c : jmp 0xfd51358
0x00000000000aec5c : jmp 0xfd515a8
0x00000000000aeeac : jmp 0xfd517f8
0x00000000000af0fc : jmp 0xfd51a48
0x00000000000af34c : jmp 0xfd51c98
0x00000000000af59c : jmp 0xfd51ee8
0x00000000000af7ec : jmp 0xfd52138
0x00000000000fda4f : jmp 0xfda1d
0x0000000000160f7d : jmp 0xfe038c9
0x0000000000161026 : jmp 0xfe03972
0x0000000000161146 : jmp 0xfe03a92
0x0000000000161266 : jmp 0xfe03bb2
0x0000000000161386 : jmp 0xfe03cd2
0x00000000001614a6 : jmp 0xfe03df2
0x00000000001615c6 : jmp 0xfe03f12
0x00000000001616e6 : jmp 0xfe04032
0x0000000000161806 : jmp 0xfe04152
0x0000000000161926 : jmp 0xfe04272
0x0000000000161a46 : jmp 0xfe04392
0x0000000000161b66 : jmp 0xfe044b2
0x0000000000161c86 : jmp 0xfe045d2
0x0000000000161da6 : jmp 0xfe046f2
0x0000000000161ec6 : jmp 0xfe04812
0x0000000000161fe6 : jmp 0xfe04932
0x00000000001621fd : jmp 0xfe04b49
0x00000000001622d6 : jmp 0xfe04c22
0x0000000000162446 : jmp 0xfe04d92
0x00000000001625b6 : jmp 0xfe04f02
0x0000000000162726 : jmp 0xfe05072
0x0000000000162896 : jmp 0xfe051e2
0x0000000000162a06 : jmp 0xfe05352
0x0000000000162b76 : jmp 0xfe054c2
0x0000000000162ce6 : jmp 0xfe05632
0x0000000000162e56 : jmp 0xfe057a2
0x0000000000162fc6 : jmp 0xfe05912
0x0000000000163136 : jmp 0xfe05a82
0x00000000001632a6 : jmp 0xfe05bf2
0x0000000000163416 : jmp 0xfe05d62
0x0000000000163586 : jmp 0xfe05ed2
0x00000000001636f6 : jmp 0xfe06042
0x000000000016e597 : jmp 0xfe10ee3
0x000000000016e71c : jmp 0xfe11068
0x000000000016e91c : jmp 0xfe11268
0x000000000016eb1c : jmp 0xfe11468
0x000000000016ed1c : jmp 0xfe11668
0x000000000016ef1c : jmp 0xfe11868
0x000000000016f11c : jmp 0xfe11a68
0x000000000016f31c : jmp 0xfe11c68
0x000000000016f51c : jmp 0xfe11e68
0x000000000016f71c : jmp 0xfe12068
0x000000000016f91c : jmp 0xfe12268
0x000000000016fb1c : jmp 0xfe12468
0x000000000016fd1c : jmp 0xfe12668
0x000000000016ff1c : jmp 0xfe12868
0x000000000017011c : jmp 0xfe12a68
0x000000000017031c : jmp 0xfe12c68
0x0000000000170707 : jmp 0xfe13053
0x00000000001708ac : jmp 0xfe131f8
0x0000000000170aec : jmp 0xfe13438
0x0000000000170d2c : jmp 0xfe13678
0x0000000000170f6c : jmp 0xfe138b8
0x00000000001711ac : jmp 0xfe13af8
0x00000000001713ec : jmp 0xfe13d38
0x000000000017162c : jmp 0xfe13f78
0x000000000017186c : jmp 0xfe141b8
0x0000000000171aac : jmp 0xfe143f8
0x0000000000171cec : jmp 0xfe14638
0x0000000000171f2c : jmp 0xfe14878
0x000000000017216c : jmp 0xfe14ab8
0x00000000001723ac : jmp 0xfe14cf8
0x00000000001725ec : jmp 0xfe14f38
0x000000000017282c : jmp 0xfe15178
0x000000000017b989 : jmp 0xfe1e2d5
0x000000000017ba16 : jmp 0xfe1e362
0x000000000017bae6 : jmp 0xfe1e432
0x000000000017bbb6 : jmp 0xfe1e502
0x000000000017bc76 : jmp 0xfe1e5c2
0x000000000017bd46 : jmp 0xfe1e692
0x000000000017be16 : jmp 0xfe1e762
0x000000000017bee6 : jmp 0xfe1e832
0x000000000017bfb6 : jmp 0xfe1e902
0x000000000017c086 : jmp 0xfe1e9d2
0x000000000017c156 : jmp 0xfe1eaa2
0x000000000017c226 : jmp 0xfe1eb72
0x000000000017c2f6 : jmp 0xfe1ec42
0x000000000017c3c6 : jmp 0xfe1ed12
0x000000000017c496 : jmp 0xfe1ede2
0x000000000017c566 : jmp 0xfe1eeb2
0x000000000017c759 : jmp 0xfe1f0a5
0x000000000017c806 : jmp 0xfe1f152
0x000000000017c8f6 : jmp 0xfe1f242
0x000000000017c9e6 : jmp 0xfe1f332
0x000000000017cad6 : jmp 0xfe1f422
0x000000000017cbc6 : jmp 0xfe1f512
0x000000000017ccb6 : jmp 0xfe1f602
0x000000000017cda6 : jmp 0xfe1f6f2
0x000000000017ce96 : jmp 0xfe1f7e2
0x000000000017cf86 : jmp 0xfe1f8d2
0x000000000017d076 : jmp 0xfe1f9c2
0x000000000017d166 : jmp 0xfe1fab2
0x000000000017d256 : jmp 0xfe1fba2
0x000000000017d346 : jmp 0xfe1fc92
0x000000000017d436 : jmp 0xfe1fd82
0x000000000017d526 : jmp 0xfe1fe72
0x000000000017d7df : jmp 0xfe2012b
0x000000000017d948 : jmp 0xfe20294
0x000000000017dae8 : jmp 0xfe20434
0x000000000017dc88 : jmp 0xfe205d4
0x000000000017de28 : jmp 0xfe20774
0x000000000017dfc8 : jmp 0xfe20914
0x000000000017e168 : jmp 0xfe20ab4
0x000000000017e308 : jmp 0xfe20c54
0x000000000017e4a8 : jmp 0xfe20df4
0x000000000017e648 : jmp 0xfe20f94
0x000000000017e7e8 : jmp 0xfe21134
0x000000000017e988 : jmp 0xfe212d4
0x000000000017eb28 : jmp 0xfe21474
0x000000000017ecc8 : jmp 0xfe21614
0x000000000017ee68 : jmp 0xfe217b4
0x000000000017f008 : jmp 0xfe21954
0x000000000017f3af : jmp 0xfe21cfb
0x000000000017f548 : jmp 0xfe21e94
0x000000000017f728 : jmp 0xfe22074
0x000000000017f908 : jmp 0xfe22254
0x000000000017fad8 : jmp 0xfe22424
0x000000000017fcb8 : jmp 0xfe22604
0x000000000017fe98 : jmp 0xfe227e4
0x0000000000180078 : jmp 0xfe229c4
0x0000000000180258 : jmp 0xfe22ba4
0x0000000000180438 : jmp 0xfe22d84
0x0000000000180618 : jmp 0xfe22f64
0x00000000001807f8 : jmp 0xfe23144
0x00000000001809d8 : jmp 0xfe23324
0x0000000000180bb8 : jmp 0xfe23504
0x0000000000180d98 : jmp 0xfe236e4
0x0000000000180f78 : jmp 0xfe238c4
0x0000000000182bc5 : jmp 0xfe25511
0x0000000000182cce : jmp 0xfe2561a
0x0000000000182e1e : jmp 0xfe2576a
0x0000000000182f6e : jmp 0xfe258ba
0x00000000001830be : jmp 0xfe25a0a
0x000000000018320e : jmp 0xfe25b5a
0x000000000018335e : jmp 0xfe25caa
0x00000000001834ae : jmp 0xfe25dfa
0x00000000001835fe : jmp 0xfe25f4a
0x000000000018374e : jmp 0xfe2609a
0x000000000018389e : jmp 0xfe261ea
0x00000000001839ee : jmp 0xfe2633a
0x0000000000183b3e : jmp 0xfe2648a
0x0000000000183c8e : jmp 0xfe265da
0x0000000000183dde : jmp 0xfe2672a
0x0000000000183f2e : jmp 0xfe2687a
0x0000000000184255 : jmp 0xfe26ba1
0x000000000018439e : jmp 0xfe26cea
0x000000000018451e : jmp 0xfe26e6a
0x000000000018469e : jmp 0xfe26fea
0x000000000018481e : jmp 0xfe2716a
0x000000000018499e : jmp 0xfe272ea
0x0000000000184b1e : jmp 0xfe2746a
0x0000000000184c9e : jmp 0xfe275ea
0x0000000000184e1e : jmp 0xfe2776a
0x0000000000184f9e : jmp 0xfe278ea
0x000000000018511e : jmp 0xfe27a6a
0x000000000018529e : jmp 0xfe27bea
0x000000000018541e : jmp 0xfe27d6a
0x000000000018559e : jmp 0xfe27eea
0x000000000018571e : jmp 0xfe2806a
0x000000000018589e : jmp 0xfe281ea
0x0000000000128e97 : jmp 0xffffffff80d585af
0x0000000000151055 : jmp 0xffffffff80d8076d
0x0000000000109b24 : jmp 0xffffffff8d599b2e
0x00000000000a2a58 : jmp 0xffffffffc28d6b65
0x00000000000d4c35 : jmp 0xffffffffc2974c3d
0x0000000000190fa1 : jmp 0xffffffffc2a257e9
0x00000000000cd913 : jmp 0xffffffffc30cd91c
0x00000000000570c1 : jmp 0xffffffffc314fa16
0x0000000000076413 : jmp 0xffffffffc38b641b
0x0000000000196451 : jmp 0xffffffffc39cad59
0x0000000000054016 : jmp 0xffffffffc7cfc966
0x00000000000ce76d : jmp 0xffffffffca362fb5
0x00000000000cddd6 : jmp 0xffffffffcae3ed45
0x00000000000ce6f7 : jmp 0xffffffffcb962f01
0x000000000014d746 : jmp 0xffffffffead699d6
0x00000000000dcdf3 : jmp 0xfffffffff63f9083
0x00000000000d5b20 : jmp 0xfffffffff7d5e430
0x00000000000481e4 : jmp 0xfffffffff8c67a7e
0x00000000000650ea : jmp 0xfffffffff9e6d6bc
0x0000000000089112 : jmp 0xfffffffffe99152f
0x0000000000115053 : jmp qword ptr [r8]
0x000000000007bc81 : jmp qword ptr [rax]
0x00000000001501ba : jmp qword ptr [rbx]
0x000000000005cf4f : jmp qword ptr [rcx]
0x000000000005f56b : jmp qword ptr [rdi + rax*8]
0x00000000001080fc : jmp qword ptr [rdi]
0x00000000001474ef : jmp qword ptr [rdx + rax*8]
0x0000000000064b88 : jmp qword ptr [rdx]
0x0000000000047161 : jmp qword ptr [rsi + 0xf]
0x000000000005cbed : jmp qword ptr [rsi - 0x70]
0x00000000000a71c9 : jmp qword ptr [rsi - 0x77]
0x00000000000a7649 : jmp r10
0x0000000000078aed : jmp r11
0x00000000001638dd : jmp r9
0x0000000000026eb5 : jmp rax
0x000000000004c387 : jmp rbx
0x00000000000a6fe4 : jmp rcx
0x00000000000418a7 : jmp rdi
0x000000000004179c : jmp rdx
0x0000000000032c7d : jmp rsi
0x00000000000616a7 : jmp rsp
0x0000000000101aff : jne 0x101b5c ; add rsp, 0x38 ; ret
0x0000000000101baf : jne 0x101ba5 ; mov eax, dword ptr [rdx + 8] ; ret
0x00000000001059fa : jne 0x10503d ; jmp 0x1059d3
0x0000000000105c4b : jne 0x105c38 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000106158 : jne 0x1061dc ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010b30e : jne 0x10b327 ; mov eax, 0x11 ; syscall
0x000000000010b3be : jne 0x10b3d7 ; mov eax, 0x12 ; syscall
0x000000000010b8ea : jne 0x10b8f8 ; mov word ptr [rdi], si ; xor eax, eax ; ret
0x000000000010bfd2 : jne 0x10bfd8 ; add byte ptr [rax], al ; syscall
0x000000000010c2d7 : jne 0x10c2ef ; add rsp, 0x28 ; ret
0x000000000010c462 : jne 0x10c471 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000010c54c : jne 0x10c559 ; add rsp, 0x18 ; ret
0x000000000010c59e : jne 0x10c5ab ; add rsp, 0x18 ; ret
0x000000000010c8a1 : jne 0x10c8e2 ; mov rdi, r8 ; mov eax, 0x85 ; syscall
0x000000000010c903 : jne 0x10c944 ; mov edx, ecx ; mov edi, r9d ; mov eax, 0x103 ; syscall
0x000000000010ca60 : jne 0x10ca81 ; sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010cacb : jne 0x10caf1 ; sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010cb86 : jne 0x10cbc4 ; and ch, 1 ; jne 0x10cbdc ; mov eax, 0x10c ; syscall
0x000000000010cb8b : jne 0x10cbd7 ; mov eax, 0x10c ; syscall
0x000000000010cce8 : jne 0x10cdb3 ; add rsp, 0x68 ; ret
0x000000000010ce4a : jne 0x10ceb8 ; mov eax, 0x101 ; syscall
0x000000000010ce6d : jne 0x10cf3b ; add rsp, 0x78 ; ret
0x000000000010cf7b : jne 0x10cf94 ; xor eax, eax ; syscall
0x000000000010d01b : jne 0x10d037 ; mov eax, 1 ; syscall
0x000000000010d48b : jne 0x10d4b7 ; mov eax, 0x48 ; syscall
0x000000000010d472 : jne 0x10d50f ; add rsp, 0x68 ; ret
0x000000000010d5e7 : jne 0x10d653 ; add rsp, 0x30 ; pop rbx ; ret
0x000000000010d66b : jne 0x10d687 ; mov eax, 3 ; syscall
0x000000000010d7db : jne 0x10d7f7 ; mov eax, 0x55 ; syscall
0x000000000010e0f1 : jne 0x10e14a ; add rsp, 0x130 ; pop rbx ; ret
0x000000000010e98f : jne 0x10e9a2 ; movzx eax, al ; add rsp, 0x58 ; ret
0x000000000010fc31 : jne 0x10fc9c ; call 0x10c654
0x0000000000110e27 : jne 0x110e44 ; mov edi, dword ptr [rbp + 0x28] ; call 0x10d897
0x0000000000111374 : jne 0x1114c8 ; mov edi, dword ptr [rbx + 0x3c] ; call 0x10d66b
0x00000000001116eb : jne 0x111707 ; mov eax, 7 ; syscall
0x00000000001117e0 : jne 0x111874 ; add rsp, 0x40 ; pop rbx ; ret
0x00000000001120ca : jne 0x1120fa ; mov r10, rcx ; mov eax, 0x146 ; syscall
0x00000000001122be : jne 0x1122d7 ; mov eax, 0x115 ; syscall
0x000000000011235e : jne 0x112377 ; mov eax, 0x11d ; syscall
0x00000000001124a1 : jne 0x11246e ; neg eax ; jmp 0x11246e
0x0000000000112477 : jne 0x1124c9 ; add rsp, 0x68 ; ret
0x0000000000112506 : jne 0x112551 ; add rsp, 0x18 ; ret
0x00000000001125d7 : jne 0x112621 ; add rsp, 0x58 ; ret
0x000000000011266c : jne 0x1126b9 ; add rsp, 0x58 ; ret
0x0000000000112827 : jne 0x112813 ; or eax, 0x80000000 ; mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000112b5e : jne 0x112b81 ; add rsp, 0x38 ; ret
0x0000000000112bb9 : jne 0x112bcd ; add rsp, 0x18 ; ret
0x0000000000112d6e : jne 0x112de3 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000112f02 : jne 0x112fd0 ; add rsp, 0x70 ; pop rbx ; ret
0x0000000000113029 : jne 0x113057 ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001131ee : jne 0x11320c ; add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x000000000011344b : jne 0x113467 ; mov eax, 0x13 ; syscall
0x00000000001134eb : jne 0x113507 ; mov eax, 0x14 ; syscall
0x000000000011358e : jne 0x1135b2 ; xor r8d, r8d ; mov eax, 0x127 ; syscall
0x000000000011363e : jne 0x113662 ; xor r8d, r8d ; mov eax, 0x128 ; syscall
0x00000000001139bc : jne 0x1139ef ; mov eax, 0x71 ; syscall
0x00000000001139db : jne 0x113a49 ; add rsp, 0x48 ; ret
0x0000000000113a6c : jne 0x113a9f ; mov eax, 0x72 ; syscall
0x0000000000113a8b : jne 0x113af9 ; add rsp, 0x48 ; ret
0x0000000000113b2f : jne 0x113b37 ; add byte ptr [rax], al ; mov edi, edx ; syscall
0x0000000000113b4d : jne 0x113bc3 ; add rsp, 0x38 ; ret
0x0000000000113c1d : jne 0x113c93 ; add rsp, 0x38 ; ret
0x0000000000113d18 : jne 0x113d2d ; add rsp, 0x28 ; ret
0x0000000000113ffe : jne 0x114017 ; mov eax, 0x17 ; syscall
0x00000000001140ed : jne 0x11412a ; mov r8, rbx ; mov eax, 0x10e ; syscall
0x000000000011410f : jne 0x1141b5 ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000011421b : jne 0x114237 ; mov eax, 0x4a ; syscall
0x00000000001142cb : jne 0x1142e7 ; mov eax, 0x4b ; syscall
0x0000000000114605 : jne 0x11464d ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000114827 : jne 0x114834 ; add rsp, 0x58 ; ret
0x00000000001148a2 : jne 0x1148af ; add rsp, 0x38 ; ret
0x0000000000114970 : jne 0x1149b3 ; add rsp, 0x68 ; ret
0x0000000000114d3a : jne 0x114d18 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000114e2b : jne 0x114e08 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000114f6c : jne 0x114f43 ; xor eax, eax ; pop rbx ; ret
0x0000000000114fed : jne 0x114fc2 ; ret
0x00000000001150e0 : jne 0x1150f5 ; lea rsp, [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000001159b4 : jne 0x1159fb ; add rsp, 0x38 ; ret
0x0000000000115a83 : jne 0x115acb ; add rsp, 0x38 ; ret
0x00000000001161ea : jne 0x1161ff ; mov eax, 1 ; ret
0x0000000000116339 : jne 0x11634d ; jmp 0x116469
0x00000000001167d1 : jne 0x116833 ; lea rsp, [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000117034 : jne 0x117047 ; add rsp, 0xd8 ; ret
0x000000000011710c : jne 0x11711f ; add rsp, 0xd8 ; ret
0x00000000001175cb : jne 0x1175e7 ; mov eax, 0x1a ; syscall
0x00000000001182e5 : jne 0x1182f2 ; add rsp, 0x18 ; ret
0x000000000011874f : jne 0x118792 ; ret
0x0000000000118783 : jne 0x1187a2 ; ret
0x0000000000119021 : jne 0x119038 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001190ea : jne 0x11911e ; mov rdi, qword ptr [rbx] ; call r12
0x000000000011912d : jne 0x119187 ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000119155 : jne 0x1191eb ; mov rdi, qword ptr [rbp] ; call r12
0x000000000011921c : jne 0x11923a ; test r14, r14 ; jne 0x11924c ; mov rdi, qword ptr [r13] ; call r12
0x0000000000119221 : jne 0x119247 ; mov rdi, qword ptr [r13] ; call r12
0x00000000001191f5 : jne 0x1192ab ; mov rdi, qword ptr [r13] ; call r12
0x00000000001191c5 : jne 0x11930b ; mov rdi, qword ptr [r13] ; call r12
0x0000000000119195 : jne 0x11936b ; mov rdi, qword ptr [r13] ; call r12
0x0000000000119371 : jne 0x1193c0 ; mov rdi, qword ptr [r14] ; call r12
0x00000000001193a5 : jne 0x119419 ; mov rdi, qword ptr [r14] ; call r12
0x0000000000119255 : jne 0x119479 ; mov rdi, qword ptr [r14] ; call r12
0x0000000000119315 : jne 0x1194d5 ; mov rdi, qword ptr [r14] ; call r12
0x00000000001192e5 : jne 0x119531 ; mov rdi, qword ptr [r14] ; call r12
0x00000000001192b5 : jne 0x11958d ; mov rdi, qword ptr [r14] ; call r12
0x0000000000119285 : jne 0x1195e9 ; mov rdi, qword ptr [r14] ; call r12
0x0000000000119345 : jne 0x119645 ; mov rdi, qword ptr [r14] ; call r12
0x000000000011964c : jne 0x119695 ; mov rdi, qword ptr [r15] ; call r12
0x0000000000119676 : jne 0x119706 ; mov rdi, qword ptr [r15] ; call r12
0x00000000001193cf : jne 0x119776 ; mov rdi, qword ptr [r15] ; call r12
0x000000000011953c : jne 0x1197e6 ; mov rdi, qword ptr [r15] ; call r12
0x0000000000119456 : jne 0x119856 ; mov rdi, qword ptr [r15] ; call r12
0x00000000001195f4 : jne 0x1198c6 ; mov rdi, qword ptr [r15] ; call r12
0x00000000001194b2 : jne 0x119936 ; mov rdi, qword ptr [r15] ; call r12
0x0000000000119484 : jne 0x1199a6 ; mov rdi, qword ptr [r15] ; call r12
0x000000000011950e : jne 0x119a16 ; mov rdi, qword ptr [r15] ; call r12
0x0000000000119598 : jne 0x119a86 ; mov rdi, qword ptr [r15] ; call r12
0x00000000001193fa : jne 0x119af6 ; mov rdi, qword ptr [r15] ; call r12
0x00000000001194e0 : jne 0x119b66 ; mov rdi, qword ptr [r15] ; call r12
0x00000000001195c6 : jne 0x119bd6 ; mov rdi, qword ptr [r15] ; call r12
0x0000000000119428 : jne 0x119c46 ; mov rdi, qword ptr [r15] ; call r12
0x000000000011956a : jne 0x119cb6 ; mov rdi, qword ptr [r15] ; call r12
0x0000000000119622 : jne 0x119d26 ; mov rdi, qword ptr [r15] ; call r12
0x0000000000119d2d : jne 0x119d87 ; mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call r12
0x0000000000119d5d : jne 0x119daf ; mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call r12
0x000000000011a74a : jne 0x11a761 ; add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000011a92b : jne 0x11a93e ; add rsp, 0x418 ; ret
0x000000000011a98b : jne 0x11a9cf ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011ad75 : jne 0x11adaf ; mov eax, 0x88 ; syscall
0x000000000011b54a : jne 0x11b561 ; add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x000000000011b5da : jne 0x11b5f1 ; add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x000000000011b669 : jne 0x11b6a5 ; mov rdx, rcx ; jmp 0x11b67a
0x000000000011ba37 : jne 0x11ba2e ; mov rax, qword ptr [rax + 8] ; ret
0x000000000011dabc : jne 0x11dae1 ; add rsp, 0x78 ; ret
0x000000000011ddfe : jne 0x11de17 ; mov eax, 0xe8 ; syscall
0x000000000011de9e : jne 0x11deb7 ; mov eax, 0x114 ; syscall
0x000000000011df4e : jne 0x11df67 ; mov eax, 0x116 ; syscall
0x000000000011dffe : jne 0x11e017 ; mov eax, 0x113 ; syscall
0x000000000011e0bb : jne 0x11e0d7 ; mov eax, 0x130 ; syscall
0x000000000011ea4b : jne 0x11ea67 ; mov eax, 0x2b ; syscall
0x000000000011eb1b : jne 0x11eb37 ; mov eax, 0x2a ; syscall
0x000000000011ed3e : jne 0x11ed57 ; mov eax, 0x2d ; syscall
0x000000000011edfb : jne 0x11ee17 ; mov eax, 0x2f ; syscall
0x000000000011ef5b : jne 0x11ef77 ; mov eax, 0x2e ; syscall
0x000000000011effe : jne 0x11f017 ; mov eax, 0x2c ; syscall
0x000000000011f42a : jne 0x11f437 ; add rsp, 0x18 ; ret
0x000000000011f44e : jne 0x11f467 ; mov eax, 0x120 ; syscall
0x000000000011f4ee : jne 0x11f507 ; mov eax, 0x12b ; syscall
0x000000000011f59e : jne 0x11f5b7 ; mov eax, 0x133 ; syscall
0x000000000011f6f9 : jne 0x11f715 ; add rsp, 0xa0 ; pop rbx ; ret
0x000000000011f71e : jne 0x11f737 ; mov eax, 0x45 ; syscall
0x000000000011f7be : jne 0x11f7d7 ; mov eax, 0x46 ; syscall
0x000000000011f950 : jne 0x11f987 ; mov eax, 0x42 ; syscall
0x000000000011f96f : jne 0x11f9c1 ; add rsp, 0x58 ; ret
0x00000000001218eb : jne 0x1218f2 ; ret
0x0000000000121946 : jne 0x121952 ; ret
0x0000000000121b0f : jne 0x121b1a ; ret
0x000000000012216d : jne 0x122172 ; ret
0x00000000001221ba : jne 0x1221c2 ; ret
0x000000000012236f : jne 0x12237a ; ret
0x000000000012607a : jne 0x12608e ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012694a : jne 0x12693b ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000127a70 : jne 0x127a4a ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000129ebc : jne 0x129ef8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012a120 : jne 0x12a110 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000012b175 : jne 0x12b101 ; call rax
0x000000000012b765 : jne 0x12b778 ; cmp qword ptr [rdi], 0 ; je 0x12b780 ; ret
0x000000000012b77d : jne 0x12b779 ; mov edx, dword ptr [rdi + 0x28] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x000000000012bda2 : jne 0x12bd99 ; pop rdx ; pop r10 ; ret
0x000000000012bd92 : jne 0x12bda4 ; nop ; mov eax, 0xca ; syscall
0x000000000012bdef : jne 0x12bde4 ; and r11d, 0xffffffbb ; cmp r11d, 0xa ; je 0x12be08 ; ret
0x000000000012c268 : jne 0x12c27d ; jmp 0x12c297
0x000000000012c3c1 : jne 0x12c3f7 ; mov eax, 0x23 ; syscall
0x000000000012c7a3 : jne 0x12c7e7 ; mov eax, 0xe6 ; syscall
0x000000000012c894 : jne 0x12c882 ; pop rbx ; mov eax, 5 ; pop r12 ; pop rbp ; ret
0x000000000012c987 : jne 0x12c972 ; lea rdi, [rip - 0x160] ; call rax
0x000000000012c9c4 : jne 0x12caa4 ; leave ; ret
0x000000000012d5a7 : jne 0x12d543 ; mov rax, rdi ; ret
0x000000000012d724 : jne 0x12d73c ; add rsp, 0xd8 ; ret
0x000000000012d81a : jne 0x12d836 ; add rsp, 0xd8 ; ret
0x000000000012d925 : jne 0x12d938 ; add rsp, 0xd8 ; ret
0x000000000012d9ec : jne 0x12d9ff ; add rsp, 0xd8 ; ret
0x000000000012e2cb : jne 0x12e2e1 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e5e9 : jne 0x12e589 ; mov rax, rdi ; ret
0x000000000012e79a : jne 0x12e7b6 ; add rsp, 0xd8 ; ret
0x000000000012e8a5 : jne 0x12e8b8 ; add rsp, 0xd8 ; ret
0x000000000012e96c : jne 0x12e97f ; add rsp, 0xd8 ; ret
0x000000000012ed64 : jne 0x12ed7b ; add rsp, 0x28 ; ret
0x000000000012edc4 : jne 0x12eddb ; add rsp, 0x28 ; ret
0x000000000012ee8c : jne 0x12ee9f ; add rsp, 0xd8 ; ret
0x000000000012ef6c : jne 0x12ef7f ; add rsp, 0xd8 ; ret
0x000000000012f04c : jne 0x12f05f ; add rsp, 0xd8 ; ret
0x0000000000135819 : jne 0x135846 ; add rsp, 0x38 ; ret
0x00000000001358b7 : jne 0x1358c4 ; add rsp, 0x38 ; ret
0x0000000000135934 : jne 0x135941 ; add rsp, 0x28 ; ret
0x0000000000136d33 : jne 0x136d23 ; pop rbx ; ret
0x0000000000138396 : jne 0x138347 ; mov ebp, 0xfffffffe ; jmp 0x13836a
0x0000000000138ce4 : jne 0x138d69 ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001390e6 : jne 0x1390d7 ; mov rdi, r15 ; call 0x2531f
0x00000000001391d0 : jne 0x1391e9 ; add rsp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013921e : jne 0x13921b ; mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000139627 : jne 0x13964f ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000013a9dc : jne 0x13a9b7 ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x000000000013b239 : jne 0x13b255 ; mov eax, r8d ; ret
0x000000000013b373 : jne 0x13b323 ; jmp 0x13b33c
0x000000000013b3fb : jne 0x13b393 ; mov eax, 0xffffffff ; ret
0x000000000013b592 : jne 0x13b5a6 ; add rsp, 0x18 ; ret
0x000000000013b679 : jne 0x13b6c5 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013b715 : jne 0x13b74f ; add rsp, 0x38 ; ret
0x000000000013ba5c : jne 0x13bab1 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013bb17 : jne 0x13bb79 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013cc4b : jne 0x13ccf0 ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x000000000013d940 : jne 0x13d94d ; add rsp, 0x18 ; ret
0x000000000013de46 : jne 0x13de81 ; pop rbx ; ret
0x000000000013eb32 : jne 0x13eb3c ; mov rdi, r15 ; call 0x13b607
0x000000000014003c : jne 0x140042 ; ret
0x000000000014007c : jne 0x140070 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014016a : jne 0x14017e ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000140935 : jne 0x14091a ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000141e0a : jne 0x141e12 ; ret
0x000000000014300b : jne 0x142f7b ; jmp 0x142fe4
0x00000000001431c5 : jne 0x1431d4 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001450b7 : jne 0x1450c6 ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000145163 : jne 0x14517a ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000145da8 : jne 0x145dc1 ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000145e65 : jne 0x145e8c ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000146037 : jne 0x1460f2 ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000000001461de : jne 0x14625f ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001462a3 : jne 0x1462ba ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000146386 : jne 0x146403 ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000014644b : jne 0x146485 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000146e23 : jne 0x146e3a ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000146ed3 : jne 0x146eea ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000146f23 : jne 0x146f3a ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000146fa3 : jne 0x146fba ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000147025 : jne 0x147078 ; mov dword ptr [rsi], 0 ; ret
0x0000000000147e6a : jne 0x147eb2 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001483b0 : jne 0x1483e9 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000014844e : jne 0x14848c ; add rsp, 0x10 ; pop rbx ; ret
0x000000000014910f : jne 0x14912e ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000149d78 : jne 0x149d92 ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000149e13 : jne 0x149e2a ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000149eae : jne 0x149eca ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000014ca98 : jne 0x14caa2 ; ret
0x000000000014caeb : jne 0x14cb0c ; mov dword ptr [rbx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014d247 : jne 0x14d258 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000014d2db : jne 0x14d362 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000014d60c : jne 0x14d697 ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014db3b : jne 0x14db6f ; add rsp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001502eb : jne 0x150310 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015065d : jne 0x150676 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015077d : jne 0x15078c ; sub rsp, -0x80 ; pop rbx ; ret
0x0000000000150893 : jne 0x1508ae ; add rsp, 0x30 ; pop rbx ; ret
0x00000000001509b3 : jne 0x1509ce ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000150af0 : jne 0x150b2f ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000150c50 : jne 0x150c8f ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000150d5f : jne 0x150d77 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000150e70 : jne 0x150e8e ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000150f86 : jne 0x150f9f ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001515d1 : jne 0x1515ff ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000152091 : jne 0x1520a6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000152121 : jne 0x15212e ; add rsp, 0x78 ; ret
0x0000000000152187 : jne 0x152194 ; add rsp, 0x78 ; ret
0x00000000001521f7 : jne 0x152204 ; add rsp, 0x78 ; ret
0x0000000000152267 : jne 0x152274 ; add rsp, 0x78 ; ret
0x00000000001522c8 : jne 0x1522d5 ; add rsp, 0x78 ; ret
0x000000000015232c : jne 0x152339 ; add rsp, 0x78 ; ret
0x0000000000152397 : jne 0x1523a4 ; add rsp, 0x78 ; ret
0x0000000000152411 : jne 0x15241e ; add rsp, 0x78 ; ret
0x000000000015294f : jne 0x15297e ; add rsp, 0x28 ; ret
0x0000000000152a0e : jne 0x1529b0 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000152cc8 : jne 0x152cd2 ; ret
0x0000000000152d1b : jne 0x152d3c ; mov dword ptr [rbx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000152e6b : jne 0x152e3b ; movzx eax, word ptr [rsp + 6] ; jmp 0x152e26
0x0000000000153f8c : jne 0x153fb8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000154124 : jne 0x154150 ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000154431 : jne 0x15443e ; add rsp, 0x48 ; ret
0x000000000015448a : jne 0x1544d2 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015450a : jne 0x154551 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000154573 : jne 0x154567 ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x00000000001545ca : jne 0x154614 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015465d : jne 0x15470b ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000015474d : jne 0x1547fb ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000015483d : jne 0x1548eb ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000015492d : jne 0x1549db ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000154a1a : jne 0x154a63 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000154aaa : jne 0x154af2 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000154b2c : jne 0x154b80 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000154bbc : jne 0x154c10 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000154c4a : jne 0x154ca0 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000154cda : jne 0x154d22 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015553e : jne 0x1555e3 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000015561e : jne 0x1556c3 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001556fe : jne 0x1557a3 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001557de : jne 0x155883 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000015591a : jne 0x15596c ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001559aa : jne 0x1559fc ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000155a3a : jne 0x155a84 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000155aca : jne 0x155b14 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000155e73 : jne 0x155e9f ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001560d1 : jne 0x1560e6 ; add rsp, 0xa0 ; pop rbx ; ret
0x0000000000156149 : jne 0x15615c ; movzx eax, al ; add rsp, 0x18 ; ret
0x00000000001561aa : jne 0x1561bd ; movzx eax, al ; add rsp, 0x18 ; ret
0x0000000000156215 : jne 0x156224 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000156288 : jne 0x156297 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001562f2 : jne 0x156307 ; mov eax, 1 ; ret
0x0000000000156332 : jne 0x156347 ; mov eax, 1 ; ret
0x000000000015a87e : jne 0x15a897 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000015a89a : jne 0x15a8a8 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000015aa81 : jne 0x15aaa8 ; add rsp, 0x520 ; pop rbx ; ret
0x000000000015af7e : jne 0x15afb2 ; add rsp, 0x18 ; ret
0x000000000015b11c : jne 0x15b12d ; xor eax, eax ; pop rbx ; ret
0x000000000015b417 : jne 0x15b3e0 ; nop dword ptr [rax] ; xor eax, eax ; jmp 0x15b3f3
0x000000000015b3f5 : jne 0x15b42b ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015b497 : jne 0x15b460 ; nop dword ptr [rax] ; xor eax, eax ; jmp 0x15b473
0x000000000015b475 : jne 0x15b4ab ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015c15e : jne 0x15c1a6 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000015cc85 : jne 0x15ccba ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000015cfc4 : jne 0x15cfdf ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000015d2b1 : jne 0x15d2c4 ; add rsp, 0xa8 ; ret
0x000000000015d2f3 : jne 0x15d306 ; add rsp, 0xa8 ; ret
0x000000000015db30 : jne 0x15db74 ; add rsp, 0x58 ; ret
0x000000000015dc2d : jne 0x15dc7a ; add rsp, 0x68 ; ret
0x000000000015ddd4 : jne 0x15de2a ; add rsp, 0x78 ; ret
0x000000000015de96 : jne 0x15deda ; add rsp, 0x38 ; ret
0x000000000015e3c9 : jne 0x15e3dc ; add rsp, 0x28 ; ret
0x000000000015e605 : jne 0x15e62f ; add rsp, 0x110 ; pop rbx ; ret
0x000000000015e686 : jne 0x15e69b ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015e737 : jne 0x15e74a ; add rsp, 0x38 ; ret
0x000000000015e80e : jne 0x15e81b ; pop rbx ; ret
0x000000000015e83e : jne 0x15e84b ; pop rbx ; ret
0x0000000000160c05 : jne 0x160c14 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000160c8b : jne 0x160c9a ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000160dcf : jne 0x160ded ; mov eax, 0x27 ; syscall
0x0000000000175d11 : jne 0x1762c6 ; ret
0x000000000017b84c : jne 0x17b88b ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000018190d : jne 0x1818f7 ; sub eax, ecx ; vzeroupper ; ret
0x0000000000181a03 : jne 0x1818fb ; sub eax, ecx ; vzeroupper ; ret
0x0000000000181dd2 : jne 0x181db7 ; sub eax, ecx ; vzeroupper ; ret
0x0000000000181f0c : jne 0x181dbb ; sub eax, ecx ; vzeroupper ; ret
0x0000000000182103 : jne 0x182127 ; xor eax, eax ; vzeroupper ; ret
0x00000000001820c6 : jne 0x18216b ; xor eax, eax ; vzeroupper ; ret
0x00000000001827aa : jne 0x1827b5 ; vzeroupper ; ret
0x00000000001828a4 : jne 0x1827b6 ; ret
0x00000000001829ef : jne 0x1827b9 ; vzeroupper ; ret
0x0000000000186403 : jne 0x186438 ; mov rax, r8 ; vzeroupper ; ret
0x00000000001863ca : jne 0x18647c ; mov rax, r8 ; vzeroupper ; ret
0x0000000000187c80 : jne 0x1880b9 ; vzeroupper ; ret
0x0000000000188998 : jne 0x188de9 ; vzeroupper ; ret
0x00000000001895b4 : jne 0x18959c ; vzeroupper ; ret
0x000000000018971a : jne 0x189725 ; vzeroupper ; ret
0x00000000001897a2 : jne 0x189726 ; ret
0x00000000001898ef : jne 0x189729 ; vzeroupper ; ret
0x0000000000189746 : jne 0x18972e ; ret
0x0000000000189b63 : jne 0x189b87 ; xor eax, eax ; vzeroupper ; ret
0x0000000000189b26 : jne 0x189bcb ; xor eax, eax ; vzeroupper ; ret
0x0000000000189cae : jne 0x189c96 ; vzeroupper ; ret
0x0000000000189ccd : jne 0x189c97 ; vzeroupper ; ret
0x0000000000189e19 : jne 0x189c9a ; vzeroupper ; ret
0x0000000000189e7c : jne 0x189c9b ; vzeroupper ; ret
0x0000000000189dc2 : jne 0x189e01 ; retf
0x0000000000189ef2 : jne 0x189f31 ; retf
0x0000000000189fcb : jne 0x189fb7 ; sub eax, ecx ; vzeroupper ; ret
0x000000000018a07c : jne 0x189fbb ; sub eax, ecx ; vzeroupper ; ret
0x000000000018a129 : jne 0x18a0fa ; vzeroupper ; ret
0x000000000018a29f : jne 0x18a0fe ; vzeroupper ; ret
0x000000000018a23f : jne 0x18a27e ; retf
0x000000000018a3a2 : jne 0x18a3e1 ; retf
0x000000000018a4a0 : jne 0x18a487 ; sub eax, ecx ; vzeroupper ; ret
0x000000000018a597 : jne 0x18a48b ; sub eax, ecx ; vzeroupper ; ret
0x000000000018ad73 : jne 0x18adac ; mov rax, r8 ; shr rax, 2 ; vzeroupper ; ret
0x000000000018c4ad : jne 0x18c4d7 ; xor eax, eax ; ret
0x000000000018baa1 : jne 0x18c4db ; xor eax, eax ; ret
0x000000000018bac9 : jne 0x18c4e7 ; xor eax, eax ; ret
0x000000000018d2ed : jne 0x18d317 ; xor eax, eax ; ret
0x000000000018d0d1 : jne 0x18d31b ; xor eax, eax ; ret
0x000000000018d321 : jne 0x18d32a ; xor eax, eax ; ret
0x000000000018d0f7 : jne 0x18d32e ; xor eax, eax ; ret
0x000000000018e447 : jne 0x18e427 ; vzeroupper ; ret
0x000000000018e5b5 : jne 0x18e546 ; lea rax, [rdi + 3] ; ret
0x000000000018e587 : jne 0x18e546 ; lea rax, [rdi + 7] ; ret
0x000000000018e586 : jne 0x18e547 ; lea rax, [rdi + 7] ; ret
0x000000000018e650 : jne 0x18e54a ; lea rax, [rdi + 0xb] ; ret
0x000000000018e60a : jne 0x18e54a ; lea rax, [rdi + 0xf] ; ret
0x000000000018e609 : jne 0x18e54b ; lea rax, [rdi + 0xf] ; ret
0x000000000018e696 : jne 0x18e76a ; lea rax, [rdi + 7] ; ret
0x000000000018e695 : jne 0x18e76b ; lea rax, [rdi + 7] ; ret
0x000000000018e6e9 : jne 0x18e7da ; lea rax, [rdi + 0xf] ; ret
0x000000000018e6e8 : jne 0x18e7db ; lea rax, [rdi + 0xf] ; ret
0x000000000018f9e5 : jne 0x18fa6c ; movzx eax, byte ptr [rdi - 9] ; movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x000000000018fd14 : jne 0x18ff28 ; xor eax, eax ; ret
0x000000000018ff19 : jne 0x18ff39 ; xor eax, eax ; ret
0x000000000018fdc1 : jne 0x18ff3d ; xor eax, eax ; ret
0x000000000018ff31 : jne 0x18ff3e ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000190546 : jne 0x190554 ; xor eax, eax ; ret
0x000000000019041d : jne 0x190556 ; ret
0x000000000019053e : jne 0x19055c ; mov eax, dword ptr [rdi - 4] ; cmp eax, dword ptr [rsi - 4] ; jne 0x19055c ; xor eax, eax ; ret
0x00000000001926f4 : jne 0x192702 ; add byte ptr [rsi + 0x63], cl ; and al, 0xa2 ; add rdx, r12 ; jmp rdx
0x00000000001944ed : jne 0x19441d ; add rsp, 0x38 ; ret
0x00000000001946c4 : jne 0x194722 ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r14 ; ret
0x00000000001948ee : jne 0x194927 ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r14 ; ret
0x0000000000194ab3 : jne 0x194b08 ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000194dc3 : jne 0x194db0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001962ad : jne 0x196296 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019638d : jne 0x19637e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001963e0 : jne 0x1963c0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001965dc : jne 0x1965cb ; pop rbx ; ret
0x0000000000196685 : jne 0x19666b ; pop rbx ; ret
0x0000000000196757 : jne 0x196750 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000026441 : jne 0x26409 ; ret
0x0000000000030f68 : jne 0x30fa9 ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000326e6 : jne 0x326ed ; add byte ptr [rcx - 0x77], al ; ret 0xf883
0x0000000000034def : jne 0x34dfa ; ret
0x0000000000039c5c : jne 0x39c70 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000003dbd7 : jne 0x3e664 ; mov rdi, qword ptr [r15 + 0x18] ; call 0x39ecc
0x0000000000041e28 : jne 0x41e41 ; add rsp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000041e7d : jne 0x41e5a ; ret
0x0000000000042cf2 : jne 0x42d08 ; fadd st(0) ; add rsp, 8 ; ret
0x0000000000042eec : jne 0x42e73 ; call qword ptr [rax - 0x3d]
0x0000000000043108 : jne 0x43116 ; addsd xmm0, xmm0 ; ret
0x0000000000043272 : jne 0x4328a ; test edx, 0x7fffff ; je 0x4328a ; ret
0x0000000000043484 : jne 0x43496 ; addss xmm0, xmm0 ; ret
0x0000000000043adf : jne 0x43aec ; add rsp, 0x18 ; ret
0x0000000000043b56 : jne 0x43b68 ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x0000000000043db2 : jne 0x43dc5 ; add rsp, 0x148 ; ret
0x0000000000043eeb : jne 0x43f15 ; add rsp, 0x118 ; ret
0x00000000000440fa : jne 0x44144 ; add rsp, 0x148 ; ret
0x000000000004421b : jne 0x44244 ; mov esi, 8 ; mov eax, 0x82 ; syscall
0x000000000004437f : jne 0x44399 ; add rsp, 0x118 ; ret
0x0000000000044402 : jne 0x4441c ; add rsp, 0x118 ; ret
0x0000000000044479 : jne 0x444bb ; add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000004450d : jne 0x44520 ; add rsp, 0x98 ; ret
0x0000000000044578 : jne 0x4459a ; add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000004468d : jne 0x446c0 ; add rsp, 0x140 ; pop rbx ; ret
0x0000000000044732 : jne 0x44759 ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000044a55 : jne 0x44a68 ; add rsp, 0x148 ; ret
0x0000000000045044 : jne 0x45062 ; add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000450b7 : jne 0x450da ; add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000004513d : jne 0x45150 ; add rsp, 0xa8 ; ret
0x0000000000046b1e : jne 0x46b7d ; lea rsp, [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000047bfc : jne 0x47bc8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000047c9b : jne 0x47ca3 ; pop rbx ; ret
0x0000000000047d6f : jne 0x47d7c ; add rsp, 0x28 ; ret
0x0000000000047e5f : jne 0x47e6c ; add rsp, 0x28 ; ret
0x000000000004817b : jne 0x48188 ; add rsp, 0x18 ; ret
0x000000000004829e : jne 0x48258 ; xor eax, eax ; ret
0x00000000000486a9 : jne 0x486b6 ; add rsp, 0x18 ; ret
0x00000000000486f6 : jne 0x48703 ; add rsp, 0x18 ; ret
0x0000000000048748 : jne 0x48755 ; add rsp, 0x18 ; ret
0x0000000000048795 : jne 0x487a2 ; add rsp, 0x18 ; ret
0x00000000000487e8 : jne 0x487f5 ; add rsp, 0x18 ; ret
0x0000000000048835 : jne 0x48842 ; add rsp, 0x18 ; ret
0x0000000000048aeb : jne 0x48b07 ; mov eax, 0x13e ; syscall
0x000000000004b90a : jne 0x4c495 ; add rax, 2 ; add r10, r8 ; jmp 0x4b93a
0x000000000004e84a : jne 0x4f3d5 ; add rax, 2 ; add r10, r8 ; jmp 0x4e87a
0x000000000005159a : jne 0x52099 ; add rax, 2 ; add r10, r8 ; jmp 0x515ca
0x0000000000052902 : jne 0x52945 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000529b2 : jne 0x52a2a ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000052a90 : jne 0x52af4 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000053495 : jne 0x53056 ; jmp 0x5346e
0x00000000000538e1 : jne 0x538f4 ; add rsp, 0xd8 ; ret
0x000000000005504b : jne 0x5505e ; add rsp, 0xd8 ; ret
0x00000000000551f8 : jne 0x551f3 ; pop rbx ; ret
0x000000000005522d : jne 0x55223 ; pop rbx ; ret
0x0000000000055fee : jne 0x56117 ; add rsp, 0x50 ; pop rbx ; ret
0x00000000000562e1 : jne 0x562c7 ; mov eax, 1 ; ret
0x000000000005633d : jne 0x5635c ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000056551 : jne 0x56537 ; mov eax, 1 ; ret
0x00000000000565ad : jne 0x565cc ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000056923 : jne 0x56915 ; mov rax, rdx ; ret
0x00000000000571af : jne 0x571a5 ; mov rax, rdx ; ret
0x0000000000058371 : jne 0x583b1 ; leave ; ret
0x0000000000058682 : jne 0x5863f ; mov eax, 1 ; ret
0x000000000005bc92 : jne 0x5bced ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000005c22f : jne 0x5c259 ; add rsp, 0x450 ; pop rbx ; ret
0x000000000005c3d9 : jne 0x5c4aa ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000062814 : jne 0x62827 ; add rsp, 0xd8 ; ret
0x00000000000628e6 : jne 0x628f9 ; add rsp, 0xd8 ; ret
0x00000000000629a0 : jne 0x629b3 ; add rsp, 0xd8 ; ret
0x0000000000062a5f : jne 0x62a72 ; add rsp, 0xd8 ; ret
0x0000000000062b14 : jne 0x62b27 ; add rsp, 0xd8 ; ret
0x0000000000062bd4 : jne 0x62be7 ; add rsp, 0xd8 ; ret
0x0000000000062cc2 : jne 0x62cd5 ; add rsp, 0xd8 ; ret
0x0000000000062d96 : jne 0x62da9 ; add rsp, 0xd8 ; ret
0x0000000000063193 : jne 0x631fc ; add rsp, 0x1018 ; pop rbx ; pop rbp ; ret
0x0000000000063266 : jne 0x6329d ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000632d1 : jne 0x632e6 ; mov rax, rbx ; pop rbx ; ret
0x0000000000063363 : jne 0x63378 ; add rsp, 0x1010 ; pop rbx ; ret
0x0000000000063983 : jne 0x6399d ; add rsp, 0x18 ; ret
0x0000000000063cb9 : jne 0x63ccc ; add rsp, 0xd8 ; ret
0x0000000000063d97 : jne 0x63daa ; add rsp, 0xd8 ; ret
0x0000000000073608 : jne 0x705e3 ; jmp 0x7311b
0x0000000000081233 : jne 0x80f90 ; mov rdx, r9 ; jmp 0x811d7
0x00000000000815d0 : jne 0x81631 ; add rsp, 0xd0 ; pop rbx ; ret
0x000000000008176f : jne 0x817d2 ; add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000083753 : jne 0x837c1 ; add rsp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000085105 : jne 0x850c4 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000085964 : jne 0x85977 ; add rsp, 0xd8 ; ret
0x0000000000085a20 : jne 0x85a33 ; add rsp, 0xd8 ; ret
0x0000000000085b06 : jne 0x85b19 ; add rsp, 0xd8 ; ret
0x0000000000085bd6 : jne 0x85be9 ; add rsp, 0xd8 ; ret
0x0000000000085c92 : jne 0x85ca5 ; add rsp, 0xd8 ; ret
0x0000000000086321 : jne 0x86312 ; ret
0x0000000000087c98 : jne 0x87c38 ; jmp 0x87c62
0x0000000000087e91 : jne 0x87ec0 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000088ec0 : jne 0x88f59 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000898a9 : jne 0x898c3 ; mov eax, dword ptr [rdx + 0x4c] ; cmp dword ptr [rdx + 0x48], eax ; cmovne eax, ecx ; ret
0x0000000000089a9e : jne 0x89ad0 ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008c18f : jne 0x8c1b1 ; xor eax, eax ; cmp qword ptr [rdi + 0x18], 0 ; setne al ; ret
0x000000000008cfd4 : jne 0x8cfed ; add rsp, 0x48 ; ret
0x000000000008d51e : jne 0x8d539 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008d757 : jne 0x8d779 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008fb85 : jne 0x8fb92 ; ret
0x0000000000090509 : jne 0x905b2 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000907ee : jne 0x90854 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000090881 : jne 0x90872 ; ret
0x000000000009191e : jne 0x91912 ; ret
0x0000000000091bd1 : jne 0x91b97 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000091c2c : jne 0x91c25 ; lea eax, [rdx + rdi] ; ret
0x0000000000092676 : jne 0x9266a ; ret
0x00000000000926b3 : jne 0x926ca ; sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000093428 : jne 0x93442 ; nop word ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000094140 : jne 0x9418c ; add rsp, 0x50 ; pop rbx ; ret
0x0000000000094f9f : jne 0x94f93 ; pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x0000000000098036 : jne 0x9804b ; jmp 0x98065
0x00000000000980dd : jne 0x980f0 ; jmp 0x9810a
0x000000000009889c : jne 0x98862 ; ret
0x00000000000989c4 : jne 0x989dd ; mov dword ptr [rip + 0x14ec08], 0 ; ret
0x000000000009a287 : jne 0x9a276 ; sub rax, 0x10 ; ret
0x000000000009b3a4 : jne 0x9b45a ; add rsp, 0x10 ; pop rbx ; ret
0x000000000009b4bb : jne 0x9b57c ; add rsp, 0x18 ; ret
0x000000000009c4f1 : jne 0x9c4e4 ; xor eax, eax ; ret
0x000000000009c55b : jne 0x9c535 ; mov rdi, rsi ; call rax
0x000000000009c5db : jne 0x9c5d2 ; ret
0x000000000009f334 : jne 0x9f322 ; ret
0x000000000009fe9f : jne 0x9fe91 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a02f6 : jne 0xa0312 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a0888 : jne 0xa0808 ; xor eax, eax ; ret
0x00000000000a085d : jne 0xa0854 ; xor eax, eax ; ret
0x00000000000a0948 : jne 0xa08d0 ; xor eax, eax ; ret
0x00000000000a091d : jne 0xa0914 ; xor eax, eax ; ret
0x00000000000a0a68 : jne 0xa09c0 ; pop rbx ; pop rbp ; ret
0x00000000000a0a45 : jne 0xa0a3b ; jmp 0xa0a17
0x00000000000a22bc : jne 0xa2263 ; cmp r9, -1 ; cmove r9, rcx ; jmp 0xa229d
0x00000000000a6c0f : jne 0xa6c05 ; mov qword ptr [rdx], rcx ; ret
0x00000000000a6cdb : jne 0xa6ccf ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00000000000a6db6 : jne 0xa6daa ; ret
0x00000000000a6dfa : jne 0xa6dea ; ret
0x00000000000a6e54 : jne 0xa6e32 ; ret
0x00000000000a6f0a : jne 0xa6ef7 ; cmp r8d, ecx ; je 0xa6ef7 ; ret
0x00000000000a6f49 : jne 0xa6f3c ; xor eax, eax ; ret
0x00000000000a6fab : jne 0xa6f8a ; ret
0x00000000000a8c9c : jne 0xa8c86 ; xor eax, eax ; sub eax, ecx ; ret
0x00000000000aa797 : jne 0xaa7f4 ; xor eax, eax ; ret
0x00000000000aa767 : jne 0xaa818 ; xor eax, eax ; ret
0x00000000000aac6a : jne 0xaaca9 ; rol bl, 0x66 ; nop ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000aac3a : jne 0xaacb4 ; xor eax, eax ; ret
0x00000000000aac69 : jne 0xaace4 ; xor eax, eax ; ret
0x00000000000b0353 : jne 0xb035e ; xor rax, rax ; ret
0x00000000000b5c7a : jne 0xb6536 ; ret
0x00000000000b732d : jne 0xb7d56 ; ret
0x00000000000b9a31 : jne 0xb9a22 ; ret
0x00000000000b9a28 : jne 0xb9a4b ; movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xb9a2b ; ret
0x00000000000b9ae1 : jne 0xb9ad2 ; ret
0x00000000000b9ad8 : jne 0xb9afb ; movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xb9adb ; ret
0x00000000000b9c51 : jne 0xb9c46 ; lea rax, [rcx - 1] ; ret
0x00000000000b9da1 : jne 0xb9d96 ; sub rax, 1 ; ret
0x00000000000ba453 : jne 0xba45e ; mov rax, rdi ; ret
0x00000000000ba52d : jne 0xba516 ; ret
0x00000000000baa49 : jne 0xba90b ; jmp 0xbaa23
0x00000000000baa45 : jne 0xbaa27 ; test al, al ; jne 0xba90f ; jmp 0xbaa27
0x00000000000bacef : jne 0xbace2 ; ret
0x00000000000baed0 : jne 0xbaec1 ; mov dword ptr [rcx + 4], 0 ; ret
0x00000000000baf26 : jne 0xbaef2 ; ret
0x00000000000bb14d : jne 0xbb142 ; ret
0x00000000000bb230 : jne 0xbb227 ; xor edi, edi ; mov rax, rdi ; ret
0x00000000000bb218 : jne 0xbb22c ; mov rax, rdi ; ret
0x00000000000bb483 : jne 0xbb47a ; ret
0x00000000000bc6bc : jne 0xbc6b1 ; ret
0x00000000000bc6bc : jne 0xbc6b2 ; ret
0x00000000000c4fd3 : jne 0xc504b ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000c50b1 : jne 0xc5115 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000c5183 : jne 0xc51c6 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000c65fb : jne 0xc659b ; cmp rcx, -1 ; cmove rcx, rdi ; jmp 0xc65dc
0x00000000000c890a : jne 0xc88f2 ; sub ebx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c8a5e : jne 0xc8a3c ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c8b2f : jne 0xc8b5b ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000c901e : jne 0xc9074 ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c9499 : jne 0xc94ac ; add rsp, 0xd8 ; ret
0x00000000000c9577 : jne 0xc958a ; add rsp, 0xd8 ; ret
0x00000000000cc923 : jne 0xcc97e ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000cccb7 : jne 0xccd14 ; xor eax, eax ; ret
0x00000000000ccc87 : jne 0xccd38 ; xor eax, eax ; ret
0x00000000000cd986 : jne 0xcda02 ; ret
0x00000000000cd8af : jne 0xcda06 ; ret
0x00000000000cd88e : jne 0xcda08 ; xor eax, eax ; ret
0x00000000000cdac9 : jne 0xcdae0 ; test ecx, ecx ; je 0xcdae0 ; xor eax, eax ; ret
0x00000000000cdb14 : jne 0xcdb09 ; ret
0x00000000000cdb14 : jne 0xcdb0a ; ret
0x00000000000cdf2b : jne 0xcdf86 ; lea rax, [rdi - 0x10] ; ret
0x00000000000cde17 : jne 0xcdf8a ; lea rax, [rdi - 0x10] ; ret
0x00000000000cdf27 : jne 0xcdf9a ; test al, 0xf0 ; jne 0xcdf8a ; lea rax, [rdi - 0x10] ; ret
0x00000000000cdfc3 : jne 0xcdfce ; xor rax, rax ; ret
0x00000000000ce25b : jne 0xce215 ; mov rax, rdx ; ret
0x00000000000ceb38 : jne 0xceb45 ; add rsp, 0x28 ; ret
0x00000000000ceba9 : jne 0xcebb8 ; add rsp, 0x40 ; pop rbx ; ret
0x00000000000cf97c : jne 0xcf9dc ; add rsp, 0xe0 ; pop rbx ; ret
0x00000000000d2a21 : jne 0xd2a43 ; add rsp, 0x28 ; ret
0x00000000000d2b52 : jne 0xd2b68 ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000d3329 : jne 0xd3341 ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000d6aaa : jne 0xd6a9a ; nop dword ptr [rax] ; mov r11d, eax ; jmp 0xd6a8a
0x00000000000d8c98 : jne 0xd8ca5 ; add rsp, 0x18 ; ret
0x00000000000dba68 : jne 0xdba75 ; add rsp, 0x18 ; ret
0x00000000000dbac0 : jne 0xdbada ; mov rsi, rbx ; xor edi, edi ; mov eax, 0xe4 ; syscall
0x00000000000dbdad : jne 0xdbd67 ; nop ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000dbeb8 : jne 0xdbe8f ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000dbf37 : jne 0xdbf26 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dc3a9 : jne 0xdc3be ; add rsp, 0xe0 ; pop rbx ; ret
0x00000000000dc445 : jne 0xdc45a ; add rsp, 0xe0 ; pop rbx ; ret
0x00000000000dce10 : jne 0xdce55 ; add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x00000000000dd0e7 : jne 0xdd0f3 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000dda6b : jne 0xdda99 ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ddabc : jne 0xddaef ; mov eax, 0x74 ; syscall
0x00000000000ddadb : jne 0xddb31 ; add rsp, 0x38 ; ret
0x00000000000ddd67 : jne 0xddd62 ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000dfa46 : jne 0xdfa7e ; lea rsp, [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000dfb8f : jne 0xdfc0f ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e137b : jne 0xe139a ; xor r10d, r10d ; mov eax, 0x3d ; syscall
0x00000000000e146e : jne 0xe1492 ; xor r8d, r8d ; mov eax, 0xf7 ; syscall
0x00000000000e1591 : jne 0xe15ad ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000e15bb : jne 0xe15d7 ; mov eax, 0x22 ; syscall
0x00000000000e163b : jne 0xe1657 ; mov eax, 0x23 ; syscall
0x00000000000e1c43 : jne 0xe1c9f ; lea rsp, [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000e1dcf : jne 0xe1e1b ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000e1f5f : jne 0xe1fab ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000e278c : jne 0xe27bf ; mov eax, 0x69 ; syscall
0x00000000000e27ab : jne 0xe2801 ; add rsp, 0x38 ; ret
0x00000000000e281c : jne 0xe284f ; mov eax, 0x6a ; syscall
0x00000000000e283b : jne 0xe2891 ; add rsp, 0x38 ; ret
0x00000000000e2915 : jne 0xe293b ; lea rsp, [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000e2aaf : jne 0xe2ab5 ; add byte ptr [rax], al ; syscall
0x00000000000e2aac : jne 0xe2adf ; mov eax, 0x75 ; syscall
0x00000000000e2acb : jne 0xe2b29 ; add rsp, 0x38 ; ret
0x00000000000e2b4c : jne 0xe2b7f ; mov eax, 0x77 ; syscall
0x00000000000e2b6b : jne 0xe2bc9 ; add rsp, 0x38 ; ret
0x00000000000e34ec : jne 0xe34f2 ; ret
0x00000000000e371b : jne 0xe3796 ; add byte ptr [rax], al ; setne al ; ret
0x00000000000e6549 : jne 0xe6525 ; xor eax, eax ; ret
0x00000000000e658e : jne 0xe6547 ; mov eax, 1 ; ret
0x00000000000e65a6 : jne 0xe656c ; mov eax, 1 ; ret
0x00000000000e6622 : jne 0xe6600 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e6714 : jne 0xe66f1 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000eaa23 : jne 0xeaa18 ; mov byte ptr [rdi + 8], 0x16 ; mov eax, 1 ; ret
0x00000000000ea9f2 : jne 0xeaa2b ; mov byte ptr [rdi + 8], 0x19 ; mov eax, 1 ; ret
0x00000000000eae57 : jne 0xeae74 ; mov dword ptr [rbx + 0x34], r12d ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ecbcc : jne 0xecb38 ; ret
0x00000000000ecbfc : jne 0xecb39 ; ret
0x00000000000ecb97 : jne 0xecbae ; cmp byte ptr [rsi], cl ; je 0xecb38 ; ret
0x00000000000ed62b : jne 0xed686 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ef62d : jne 0xef4f3 ; xor r9d, r9d ; add rdx, rax ; jmp 0xef660
0x00000000000efce1 : jne 0xefca5 ; movsxd rdx, edx ; mov eax, 1 ; add rdx, rcx ; jmp 0xefd0d
0x00000000000efed7 : jne 0xefe73 ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000ffdfd : jne 0xfff3e ; call 0xdc868
0x00000000001139bf : jno 0x1139c5 ; add byte ptr [rax], al ; syscall
0x00000000001474eb : jno 0x1474b9 ; or dword ptr [rax], eax ; jmp qword ptr [rdx + rax*8]
0x0000000000151e78 : jno 0x151e8a ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000163a0b : jno 0x163a6d ; add eax, 0x14634900 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000018bd5e : jno 0x18bd6d ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000018d400 : jno 0x18d409 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000018d63a : jno 0x18d643 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000018d7a1 : jno 0x18d7b2 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000018d906 : jno 0x18d98a ; adc qword ptr [rdi - 8], rdi ; ret
0x0000000000056fb4 : jno 0x57006 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000085764 : jno 0x85772 ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000008589a : jno 0x858a6 ; mov qword ptr [rdx + 0x28], rsi ; mov byte ptr [rcx], dil ; ret
0x000000000008d323 : jno 0x8d32f ; mov qword ptr [rdx + 0x28], rsi ; mov byte ptr [rcx], dil ; ret
0x000000000008d413 : jno 0x8d41f ; mov qword ptr [rdx + 0x28], rsi ; mov byte ptr [rcx], dil ; ret
0x00000000000a01db : jno 0xa0231 ; clc ; dec dword ptr [rcx - 0x77] ; ret 0xcb8
0x00000000000a031e : jno 0xa036f ; add eax, dword ptr [rbp] ; mov rdx, rax ; jmp 0xa034a
0x00000000000bad90 : jno 0xbada0 ; lea rax, [rip + 0x12d57] ; cmovne rax, rdx ; ret
0x00000000000bbd39 : jno 0xbbd56 ; add cl, ch ; mov ecx, 0xe8fffffe ; retf 0x734
0x00000000000bbd38 : jno 0xbbd57 ; add cl, ch ; mov ecx, 0xe8fffffe ; retf 0x734
0x00000000000bff2a : jno 0xbff2a ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000bff29 : jno 0xbff2b ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000bfffb : jno 0xc0073 ; stc ; dec dword ptr [rcx - 0x39] ; ret 0xc001
0x00000000000dde52 : jno 0xdde4d ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000e3a14 : jno 0xe3a18 ; dec dword ptr [rax - 0x77] ; ret 0x1e9
0x000000000011137b : jnp 0x1113bd ; call 0x10d664
0x0000000000114257 : jnp 0x114266 ; add byte ptr [rbx + 0x480c2444], cl ; add esp, 0x10 ; pop rbx ; ret
0x0000000000114307 : jnp 0x114316 ; add byte ptr [rbx + 0x480c2444], cl ; add esp, 0x10 ; pop rbx ; ret
0x000000000011dbe1 : jnp 0x11dbe7 ; add byte ptr [rax], al ; syscall
0x000000000011f641 : jnp 0x11f62f ; or byte ptr [rax], al ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000136d2e : jnp 0x136d80 ; test rdi, rdi ; jne 0x136d28 ; pop rbx ; ret
0x000000000014e963 : jnp 0x14e9cf ; call rax
0x000000000014f403 : jnp 0x14f45f ; call rax
0x000000000015fbec : jnp 0x15fc00 ; xchg eax, esp ; ret 0xb60f
0x000000000015fd0c : jnp 0x15fd20 ; xchg eax, esp ; ret 0xb60f
0x000000000003dbd9 : jnp 0x3dbef ; add byte ptr [rax], al ; mov rdi, qword ptr [r15 + 0x18] ; call 0x39eca
0x0000000000044266 : jnp 0x44282 ; add byte ptr [rbx + 0x480c2444], cl ; add esp, 0x10 ; pop rbx ; ret
0x0000000000047bdb : jnp 0x47be7 ; call rax
0x0000000000052e61 : jnp 0x52e67 ; add byte ptr [rax], al ; call rax
0x0000000000080db7 : jnp 0x80ddd ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009c493 : jnp 0x9c4e2 ; mov rsi, r13 ; call rax
0x000000000009c532 : jnp 0x9c57e ; call rax
0x00000000000e2817 : jnp 0xe2835 ; add byte ptr [rbp - 0x47d58a40], al ; push 0 ; add byte ptr [rax], al ; syscall
0x00000000000e5aec : jnp 0xe5b00 ; xchg eax, esp ; ret 0xb60f
0x00000000000e5c0c : jnp 0xe5c20 ; xchg eax, esp ; ret 0xb60f
0x00000000000ecc81 : jnp 0xeccee ; add byte ptr [rcx - 0x7af0b3bd], cl ; retf
0x00000000000ed2e9 : jnp 0xed355 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd201
0x00000000000f93d5 : jnp 0xf9416 ; or eax, dword ptr [rax] ; movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x000000000007e75c : jnp 0xffffffff8949787f ; adc cl, byte ptr [rax - 0x77] ; ret 0xc148
0x0000000000044b24 : jnp 0xffffffffbad6d04d ; add dword ptr [rax], eax ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x000000000010c4f4 : jns 0x10c50f ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000114714 : jns 0x114722 ; mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x0000000000134317 : jns 0x134388 ; and r11d, 0x840f2000 ; ret
0x0000000000138ce5 : jns 0x138d38 ; add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000164703 : jns 0x164758 ; add eax, 0x14634900 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000001674c3 : jns 0x1674ec ; add eax, 0x14634900 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000182cc7 : jns 0x182ca2 ; retf 0xead3
0x0000000000182d47 : jns 0x182db8 ; rcr dword ptr [rdx], 0xf ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000182e17 : jns 0x182df2 ; retf 0xead3
0x0000000000182d98 : jns 0x182e09 ; rcr dword ptr [rdx], 0xf ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000182e97 : jns 0x182f08 ; rcr dword ptr [rdx], 0xf ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000182f67 : jns 0x182f42 ; retf 0xead3
0x00000000001830b7 : jns 0x183092 ; retf 0xead3
0x0000000000183036 : jns 0x1830a7 ; rcr dword ptr [rdx], 0xf ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000183207 : jns 0x1831e2 ; retf 0xead3
0x0000000000183287 : jns 0x1832f8 ; rcr dword ptr [rdx], 0xf ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000183357 : jns 0x183332 ; retf 0xead3
0x00000000001834a7 : jns 0x183482 ; retf 0xead3
0x0000000000183428 : jns 0x183499 ; rcr dword ptr [rdx], 0xf ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000183527 : jns 0x183598 ; rcr dword ptr [rdx], 0xf ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001835f7 : jns 0x1835d2 ; retf 0xead3
0x0000000000183578 : jns 0x1835e9 ; rcr dword ptr [rdx], 0xf ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000183677 : jns 0x1836e8 ; rcr dword ptr [rdx], 0xf ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000183747 : jns 0x183722 ; retf 0xead3
0x0000000000183897 : jns 0x183872 ; retf 0xead3
0x00000000001839e7 : jns 0x1839c2 ; retf 0xead3
0x0000000000183a67 : jns 0x183ad8 ; rcr dword ptr [rdx], 0xf ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x0000000000183b37 : jns 0x183b12 ; retf 0xead3
0x0000000000183c87 : jns 0x183c62 ; retf 0xead3
0x0000000000183dd7 : jns 0x183db2 ; retf 0xead3
0x0000000000183d58 : jns 0x183dc9 ; rcr dword ptr [rdx], 0xf ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000183e57 : jns 0x183ec8 ; rcr dword ptr [rdx], 0xf ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000183f27 : jns 0x183f02 ; retf 0xead3
0x0000000000184397 : jns 0x184372 ; retf 0xead3
0x0000000000184517 : jns 0x1844f2 ; retf 0xead3
0x0000000000184697 : jns 0x184672 ; retf 0xead3
0x0000000000184817 : jns 0x1847f2 ; retf 0xead3
0x0000000000184997 : jns 0x184972 ; retf 0xead3
0x0000000000184b17 : jns 0x184af2 ; retf 0xead3
0x0000000000184c97 : jns 0x184c72 ; retf 0xead3
0x0000000000184e17 : jns 0x184df2 ; retf 0xead3
0x0000000000184f97 : jns 0x184f72 ; retf 0xead3
0x0000000000185117 : jns 0x1850f2 ; retf 0xead3
0x0000000000185297 : jns 0x185272 ; retf 0xead3
0x0000000000185417 : jns 0x1853f2 ; retf 0xead3
0x0000000000185597 : jns 0x185572 ; retf 0xead3
0x0000000000185717 : jns 0x1856f2 ; retf 0xead3
0x0000000000185897 : jns 0x185872 ; retf 0xead3
0x000000000018d407 : jns 0x18d40a ; ret
0x000000000018d641 : jns 0x18d644 ; ret
0x000000000018d7a8 : jns 0x18d7b3 ; ret
0x0000000000028413 : jns 0x28475 ; adc eax, dword ptr [rax] ; mov rdi, r14 ; mov rax, qword ptr [rbp - 0x68] ; call rax
0x000000000002a754 : jns 0x2a75f ; or byte ptr [rdi], 0x87 ; retf
0x0000000000039456 : jns 0x39426 ; mov r15, r12 ; jmp 0x3942d
0x0000000000046bb3 : jns 0x46ba0 ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000004b90c : jns 0x4b923 ; add byte ptr [rax], al ; add rax, 2 ; add r10, r8 ; jmp 0x4b938
0x000000000004e84c : jns 0x4e863 ; add byte ptr [rax], al ; add rax, 2 ; add r10, r8 ; jmp 0x4e878
0x000000000005c195 : jns 0x5c168 ; or byte ptr [r8], r8b ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x00000000000ba248 : jns 0xba235 ; movups xmmword ptr [rcx - 0x30], xmm8 ; movups xmmword ptr [r11], xmm4 ; ret
0x00000000000ba336 : jns 0xba323 ; movups xmmword ptr [rcx - 0x30], xmm8 ; movups xmmword ptr [r11], xmm4 ; ret
0x00000000000dd9e0 : jns 0xdd9db ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000e2941 : jns 0xe2947 ; add byte ptr [rax], al ; syscall
0x00000000000e2aa7 : jns 0xe2ac5 ; add byte ptr [rbp - 0x47d58a40], al ; jne 0xe2abd ; add byte ptr [rax], al ; syscall
0x00000000000e3baa : jns 0xe3bb4 ; add byte ptr [rax - 0x77], cl ; ret 0x6be9
0x00000000000e3c55 : jns 0xe3c5f ; add byte ptr [rax - 0x77], cl ; ret 0xc0e9
0x00000000000e8093 : jns 0xe8083 ; lea rax, [rdx + rax*8] ; jmp 0xe8075
0x00000000000b9516 : jns 0xffffffffed3b987c ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000b9578 : jns 0xffffffffed3b9cde ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000b9598 : jns 0xffffffffed3b9dfe ; mov byte ptr [rdi + 0xc], ch ; ret
0x000000000010b7b4 : jo 0x10b7ca ; xor eax, eax ; mov dword ptr [rbx + 4], edx ; add rsp, 0x10 ; pop rbx ; ret
0x000000000010b8c4 : jo 0x10b8da ; adc dword ptr [rdi + 0x78], edi ; ret
0x000000000010c239 : jo 0x10c252 ; adc dword ptr [rdi + 0xf8], edi ; ret
0x0000000000112f0b : jo 0x112f6a ; ret
0x000000000011877d : jo 0x11878f ; test sil, 1 ; jne 0x1187a8 ; ret
0x000000000012b244 : jo 0x12b25a ; adc dword ptr [rbp - 0x78], edi ; call rax
0x000000000012b438 : jo 0x12b44e ; adc dword ptr [rbp - 0x78], edi ; call rax
0x000000000012d37c : jo 0x12d355 ; clc ; dec dword ptr [rax + 0xf] ; ret 0xfc3
0x0000000000145a3f : jo 0x145aa5 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000014cdf4 : jo 0x14ce07 ; add byte ptr [rbx + rax*4 + 0x38], ah ; add al, 0x75 ; ret
0x000000000002c27f : jo 0x2c289 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000035453 : jo 0x354a4 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000035452 : jo 0x354a5 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000389ab : jo 0x389c8 ; add cl, ch ; retf 0xffef
0x00000000000452cc : jo 0x45316 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000600db : jo 0x600bc ; in eax, 0xdf ; loopne 0x60070 ; ret
0x0000000000080077 : jo 0x80007 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008748e : jo 0x874d7 ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000008a8e4 : jo 0x8a8d1 ; retf 0xfffe
0x000000000008ee34 : jo 0x8ee85 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008ee7f : jo 0x8eed0 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000090489 : jo 0x904ac ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x158901ea], al ; retf
0x0000000000098895 : jo 0x988a8 ; add byte ptr [rax], al ; cmp rdx, r8 ; jne 0x98869 ; ret
0x000000000009d3b0 : jo 0x9d3ab ; ret 0
0x00000000000bb686 : jo 0xbb6e8 ; pop rbp ; pop r12 ; ret
0x00000000000bbaae : jo 0xbbb14 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bbca6 : jo 0xbbd08 ; pop rbp ; pop r12 ; ret
0x00000000000bfffc : jo 0xbfffc ; dec dword ptr [rcx - 0x39] ; ret 0xc001
0x00000000000e2a01 : jo 0xe2a07 ; add byte ptr [rax], al ; syscall
0x00000000000ebd34 : jo 0xebd1f ; add byte ptr [rax + 1], cl ; ret 0xf66
0x00000000000f49d4 : jo 0xf495b ; ret 0x4801
0x00000000000f49d3 : jo 0xf495c ; ret 0x4801
0x00000000000f9165 : jo 0xf90ec ; ret 0x4801
0x00000000000f9164 : jo 0xf90ed ; ret 0x4801
0x00000000000f959e : jo 0xf9525 ; ret 0x4801
0x00000000000f959d : jo 0xf9526 ; ret 0x4801
0x00000000000fa6d4 : jo 0xfa65b ; ret 0x4901
0x00000000000fa6d3 : jo 0xfa65c ; ret 0x4901
0x00000000001177ea : jp 0x117825 ; or eax, 0xc4834800 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000011dbb1 : jp 0x11dbb7 ; add byte ptr [rax], al ; syscall
0x000000000012a5b5 : jp 0x12a60c ; mov rsi, rdx ; call rax
0x0000000000147fdf : jp 0x14803f ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000187f32 : jp 0x187f3c ; add byte ptr [rax], al ; vzeroupper ; ret
0x00000000000339b8 : jp 0x339fb ; jbe 0x339d8 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000042cf0 : jp 0x42d0a ; jne 0x42d0a ; fadd st(0) ; add rsp, 8 ; ret
0x0000000000043106 : jp 0x43118 ; jne 0x43118 ; addsd xmm0, xmm0 ; ret
0x0000000000043482 : jp 0x43498 ; jne 0x43498 ; addss xmm0, xmm0 ; ret
0x0000000000044e65 : jp 0x44df0 ; clc ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd321
0x00000000000bb22c : jp 0xbb23d ; test ecx, ecx ; jne 0xbb22b ; xor edi, edi ; mov rax, rdi ; ret
0x00000000000e19ce : jp 0xe19b8 ; or al, 0 ; mov eax, 0x142 ; syscall
0x0000000000105702 : jrcxz 0x105778 ; ret
0x0000000000105c4c : jrcxz 0x105c9d ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010984a : jrcxz 0x109850 ; dec dword ptr [rbp - 0x77] ; retf 0xbf41
0x000000000010f698 : jrcxz 0x10f6a9 ; add byte ptr [rax + 0xf], cl ; ret 0x894c
0x000000000011afe8 : jrcxz 0x11aff1 ; loop 0x11aff2 ; dec dword ptr [rax - 0x7f] ; ret
0x000000000012a1dc : jrcxz 0x12a218 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000012a3dc : jrcxz 0x12a420 ; mov cs, word ptr [rax - 0x3f] ; clc ; add ecx, dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0xc083
0x000000000012bdf3 : jrcxz 0x12bdb8 ; cmp r11d, 0xa ; je 0x12be04 ; ret
0x000000000012c73b : jrcxz 0x12c741 ; add byte ptr [rax], al ; syscall
0x000000000012e31a : jrcxz 0x12e36c ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016abca : jrcxz 0x16abc5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016abc9 : jrcxz 0x16abc6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016bd59 : jrcxz 0x16bd42 ; add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000016c059 : jrcxz 0x16c03f ; add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000016c359 : jrcxz 0x16c33c ; add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000016c659 : jrcxz 0x16c639 ; add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000016c959 : jrcxz 0x16c936 ; add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000016cf59 : jrcxz 0x16cf30 ; add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000016d6ea : jrcxz 0x16d6e5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016d6e9 : jrcxz 0x16d6e6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000017f1f9 : jrcxz 0x17f1a9 ; add dword ptr [rax], eax ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000189fcc : jrcxz 0x189ffd ; enter -0x73b, 0x77 ; ret
0x000000000018c759 : jrcxz 0x18c72b ; add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000194dc4 : jrcxz 0x194e15 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000031ec0 : jrcxz 0x31f16 ; mov eax, dword ptr [rax] ; test rax, rax ; je 0x31ed6 ; call rax
0x0000000000078c0f : jrcxz 0x78b9c ; ret 0xc083
0x000000000008d562 : jrcxz 0x8d5b4 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009272a : jrcxz 0x92733 ; dec dword ptr [rax + 0x63] ; adc r11b, r13b ; ret
0x000000000009cfb4 : jrcxz 0x9cf44 ; dec byte ptr [rcx] ; mov edx, 0xffffffff ; cmovbe eax, edx ; ret
0x000000000009cfb4 : jrcxz 0x9cf45 ; dec byte ptr [rcx] ; mov edx, 0xffffffff ; cmovbe eax, edx ; ret
0x00000000000bd589 : jrcxz 0xbd52b ; stc ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000c2ac9 : jrcxz 0xc2ae7 ; add byte ptr [rax], al ; test r15d, r15d ; mov r14, rbp ; setne dl ; jmp 0xc2af3
0x00000000000ca529 : jrcxz 0xca546 ; add byte ptr [rax], al ; test r15d, r15d ; mov r14, rbp ; setne dl ; jmp 0xca553
0x00000000000db49b : jrcxz 0xdb4a1 ; inc dword ptr [rbp - 0x77] ; retf
0x00000000000dbf36 : jrcxz 0xdbfb4 ; out 0x5b, eax ; pop rbp ; pop r12 ; ret
0x00000000000e2dbb : jrcxz 0xe2dd3 ; add al, ch ; lodsd eax, dword ptr [rsi] ; and al, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000ecbe0 : jrcxz 0xecbf3 ; je 0xecb74 ; pop rbx ; ret
0x0000000000107136 : js 0x10719e ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010884f : js 0x10883b ; retf
0x0000000000109d37 : js 0x109d9f ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010a85f : js 0x10a86b ; add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x84 ; retf 6
0x000000000010b6f5 : js 0x10b711 ; cmp rbx, rax ; pop rbx ; setl al ; ret
0x000000000010b874 : js 0x10b88a ; adc dword ptr [rsi + 0x70], edi ; ret
0x0000000000112796 : js 0x1127aa ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x00000000001133db : js 0x11339c ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000117e34 : js 0x117deb ; hlt ; lcall [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000012091c : js 0x120935 ; add byte ptr [rax - 0x75], cl ; sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x0000000000121208 : js 0x121194 ; loopne 0x12121b ; movzx eax, ax ; ret
0x0000000000121338 : js 0x1212c1 ; loopne 0x121341 ; ret
0x00000000001213c8 : js 0x121354 ; loopne 0x1213d5 ; movzx eax, ax ; ret
0x00000000001216c8 : js 0x121654 ; loopne 0x1216d7 ; movzx eax, ax ; ret
0x0000000000121ba1 : js 0x121b2d ; loopne 0x121bb4 ; movzx eax, ax ; ret
0x0000000000121ca1 : js 0x121c2a ; loopne 0x121caa ; ret
0x0000000000121d21 : js 0x121cad ; loopne 0x121d2e ; movzx eax, ax ; ret
0x0000000000121fa1 : js 0x121f2d ; loopne 0x121fb0 ; movzx eax, ax ; ret
0x000000000012aca4 : js 0x12ac3a ; push rbp ; or byte ptr [rax - 0x77], 0xda ; movups xmmword ptr [rbp - 0x78], xmm4 ; call rax
0x000000000012b16c : js 0x12b102 ; push rbp ; or byte ptr [rcx + rcx*4 - 0x16], 0xf ; adc dword ptr [rbp - 0x78], esi ; call rax
0x000000000012b598 : js 0x12b52e ; push rbp ; or byte ptr [rcx + rcx*4 - 0x16], 0xf ; adc dword ptr [rbp - 0x78], edi ; call rax
0x000000000012fbc1 : js 0x12fc29 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000131489 : js 0x1314f1 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000131db9 : js 0x131e21 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000136e64 : js 0x136e8d ; or eax, dword ptr [rax] ; call rax
0x000000000013b7d8 : js 0x13b7f0 ; mov rax, rdx ; movsxd rdx, esi ; ret
0x0000000000143877 : js 0x1438df ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001456ea : js 0x145710 ; mov rsi, rbp ; mov rcx, rbx ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000014d3ac : js 0x14d3bf ; retf 0x5489
0x000000000014d3ab : js 0x14d3c0 ; retf 0x5489
0x0000000000151748 : js 0x1517b0 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000015aee3 : js 0x15aef8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000015d58a : js 0x15d5f2 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000185a64 : js 0x185aac ; add dword ptr [rax], eax ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000188b64 : js 0x188b6f ; add byte ptr [rax], al ; vzeroupper ; ret
0x000000000019645b : js 0x1964d6 ; ret 0x8b49
0x0000000000026f97 : js 0x26fa2 ; mov byte ptr [rdi], 0 ; pop rbx ; pop r14 ; ret
0x0000000000026fae : js 0x26fb9 ; mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x0000000000032457 : js 0x32462 ; mov byte ptr [rdi], 0 ; pop rbx ; pop r14 ; ret
0x000000000003246e : js 0x32479 ; mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x00000000000350b1 : js 0x3503d ; loopne 0x350c4 ; movzx eax, ax ; ret
0x00000000000350f1 : js 0x3507d ; loopne 0x350fe ; movzx eax, ax ; ret
0x0000000000035191 : js 0x3511d ; loopne 0x351a0 ; movzx eax, ax ; ret
0x0000000000035271 : js 0x351fa ; loopne 0x3527a ; ret
0x00000000000352ea : js 0x35273 ; loopne 0x352f3 ; ret
0x00000000000352fa : js 0x35286 ; loopne 0x3530d ; movzx eax, ax ; ret
0x000000000003533a : js 0x352c6 ; loopne 0x35347 ; movzx eax, ax ; ret
0x00000000000353da : js 0x35366 ; loopne 0x353e9 ; movzx eax, ax ; ret
0x0000000000035463 : js 0x354b4 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000035462 : js 0x354b5 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000472a8 : js 0x472cc ; call rdx
0x00000000000551f5 : js 0x551fe ; add byte ptr [rbp - 0xa], dh ; pop rbx ; ret
0x0000000000061efa : js 0x61f62 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006fc61 : js 0x6fc77 ; call 0x9c6a4
0x0000000000075837 : js 0x75806 ; test dword ptr [rax], ebp ; idiv edi ; call qword ptr [rax]
0x0000000000076558 : js 0x76527 ; test dword ptr [rax], ebp ; idiv edi ; call qword ptr [rax]
0x000000000008748a : js 0x874a7 ; mov qword ptr [rax + 0x40], rsi ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000008a50d : js 0x8a512 ; ret
0x000000000008e120 : js 0x8e13c ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000009c2e4 : js 0x9c2f2 ; add byte ptr [rax], al ; mov rdi, qword ptr [rdi + 0x48] ; mov rsi, rbp ; call rax
0x000000000009c604 : js 0x9c626 ; add byte ptr [rdi + rax*8], ah ; or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009dd2a : js 0x9dd92 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000009ee8a : js 0x9eef2 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000c991e : js 0xc9986 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000ce981 : js 0xce9c3 ; cmp eax, 0x19 ; jg 0xce9ab ; mov rax, rbx ; pop rbx ; ret
0x00000000000e2a61 : js 0xe2a67 ; add byte ptr [rax], al ; syscall
0x00000000000e2b47 : js 0xe2b65 ; add byte ptr [rbp - 0x47d58a40], al ; ja 0xe2b5d ; add byte ptr [rax], al ; syscall
0x00000000000e3767 : js 0xe3772 ; ret
0x00000000000f2fa3 : js 0xf300b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f5fd2 : js 0xf5fe5 ; add al, 0x75 ; mov edi, 0xf708588b ; ret
0x00000000000fab68 : js 0xfab55 ; retf
0x00000000000b94b8 : js 0xffffffffed3b971e ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000b94e6 : js 0xffffffffed3b994c ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000b9538 : js 0xffffffffed3b9d9e ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a2577 : lahf ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; ret
0x0000000000181285 : lahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6610
0x000000000017f4e0 : lahf ; add dword ptr [rax], eax ; mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000010bd2b : lahf ; add eax, dword ptr [rax] ; add dh, dh ; ret 0xf20
0x0000000000168e5d : lahf ; add eax, dword ptr [rip + 0x14634900] ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000094fe5 : lahf ; call qword ptr [rcx]
0x000000000007b0f4 : lahf ; cli ; dec dword ptr [rax - 0x77] ; ret 0xb848
0x000000000014b0e2 : lahf ; in eax, dx ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000014b337 : lahf ; in eax, dx ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000009dc9d : lahf ; je 0x9dc9e ; dec dword ptr [rax - 0x77] ; ret
0x000000000013a7d8 : lahf ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000001837cd : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000bb3ad : lahf ; or rax, 0x450f4800 ; ret 0x66c3
0x000000000013b47d : lahf ; popfq ; out dx, al ; dec dword ptr [rax + 0x63] ; retf
0x000000000007546a : lahf ; ret
0x00000000000930a6 : lahf ; ret 0x3949
0x000000000005cb1a : lahf ; ret 0x87e
0x000000000005d278 : lahf ; ret 0x8f0f
0x0000000000062f6d : lahf ; ret 0xc
0x0000000000069a98 : lahf ; ret 0xd629
0x000000000006800f : lahf ; ret 0xd729
0x00000000000931c2 : lahf ; ret 0xdfe9
0x000000000012ef8b : lahf ; ror dword ptr [rax - 0x77], 0xc6 ; add ecx, ecx ; jmp 0x8b1c9
0x00000000000f6e7f : lahf ; sar dword ptr [rbx], 0x9c ; and al, 0x9c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x0000000000153c45 : lahf ; xor byte ptr [rsi], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000183e5d : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000114fe3 : lcall [r8 + rax*4 + 0x3e] ; add byte ptr [rax - 0x73], cl ; push rsi ; add dword ptr [rbp - 0x2f], esi ; ret
0x0000000000117e37 : lcall [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x0000000000114fe4 : lcall [rax + rax*4 + 0x3e] ; add byte ptr [rax - 0x73], cl ; push rsi ; add dword ptr [rbp - 0x2f], esi ; ret
0x000000000013a5cd : lcall [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000133de0 : lcall [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x00000000000f4d5d : lcall [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x000000000009e6e5 : lcall [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000009cb2c : lcall [rbx + 0x44] ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000082391 : lcall [rbx + 0x48] ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000dbea3 : lcall [rbx + 0x5d] ; lea rax, [rax + rdx*8] ; ret
0x0000000000030bb3 : lcall [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000142fdc : lcall [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008d775 : lcall [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000046f52 : lcall [rbx + 0x5d] ; pop r12 ; ret
0x00000000000c5333 : lcall [rbx + 0x5d] ; pop r14 ; ret
0x0000000000084ab0 : lcall [rbx + 0x5d] ; ret
0x00000000000de0db : lcall [rbx - 0x77] ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000047cc3 : lcall [rbx - 0x7b] ; ror byte ptr [rdi], 0x48 ; ret 0xfc3
0x0000000000156d7d : lcall [rdx + 0x59] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000033a4e : lcall [rdx] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000016aa36 : lddqu xmm0, xmmword ptr [rsi - 0x10] ; movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000016b256 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000008732f : lea eax, [r8 - 1] ; ret
0x000000000013b14b : lea eax, [r9 + r8 + 2] ; pop rbx ; ret
0x00000000000cc9d0 : lea eax, [rax + rax - 1] ; ret
0x0000000000101c1b : lea eax, [rax + rax*8 + 5] ; ret
0x00000000000aa7c4 : lea eax, [rax + rdi + 0x10] ; ret
0x00000000000aa7d4 : lea eax, [rax + rdi + 0x20] ; ret
0x00000000000aaca4 : lea eax, [rax + rdi + 0x30] ; ret
0x00000000000aa7a4 : lea eax, [rax + rdi - 0x10] ; ret
0x0000000000151eb2 : lea eax, [rax + rdx*8] ; cmp qword ptr [rax], rbp ; je 0x151ecc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dbea7 : lea eax, [rax + rdx*8] ; ret
0x0000000000087330 : lea eax, [rax - 1] ; ret
0x000000000009a1fb : lea eax, [rax - 8] ; ret
0x0000000000087022 : lea eax, [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf
0x000000000014d4e2 : lea eax, [rax] ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010d474 : lea eax, [rax] ; add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x000000000011aa9f : lea eax, [rax] ; add byte ptr [rax], al ; call rax
0x0000000000113251 : lea eax, [rax] ; add byte ptr [rax], al ; syscall
0x00000000000e67b1 : lea eax, [rbx + 2] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e66c1 : lea eax, [rbx + 8] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013b300 : lea eax, [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x000000000008561a : lea eax, [rcx + 4] ; mov qword ptr [rdx + 0x20], rax ; mov eax, edi ; mov dword ptr [rcx], edi ; ret
0x000000000013b14c : lea eax, [rcx + rax + 2] ; pop rbx ; ret
0x00000000000b00ad : lea eax, [rcx + rsi] ; ret
0x00000000000b9c54 : lea eax, [rcx - 1] ; ret
0x00000000000b6bac : lea eax, [rdi + 0x10] ; ret
0x00000000000b6bc1 : lea eax, [rdi + 0x11] ; ret
0x00000000000b6bdf : lea eax, [rdi + 0x12] ; ret
0x00000000000b6bff : lea eax, [rdi + 0x13] ; ret
0x00000000000b6c22 : lea eax, [rdi + 0x14] ; ret
0x00000000000b6c41 : lea eax, [rdi + 0x15] ; ret
0x00000000000b6c61 : lea eax, [rdi + 0x16] ; ret
0x00000000000b6c81 : lea eax, [rdi + 0x17] ; ret
0x00000000000b6ca4 : lea eax, [rdi + 0x18] ; ret
0x00000000000b6cc9 : lea eax, [rdi + 0x19] ; ret
0x00000000000b6ce7 : lea eax, [rdi + 0x1a] ; ret
0x00000000000b6d07 : lea eax, [rdi + 0x1b] ; ret
0x00000000000b6d23 : lea eax, [rdi + 0x1c] ; ret
0x00000000000b6d43 : lea eax, [rdi + 0x1d] ; ret
0x00000000000b6d63 : lea eax, [rdi + 0x1e] ; ret
0x00000000000b6d83 : lea eax, [rdi + 0x1f] ; ret
0x00000000000b7be3 : lea eax, [rdi + 0x20] ; ret
0x00000000000b7e49 : lea eax, [rdi + 0x40] ; ret
0x0000000000188d49 : lea eax, [rdi + 0x41] ; vzeroupper ; ret
0x0000000000188eec : lea eax, [rdi + 0x80] ; vzeroupper ; ret
0x00000000000b6afd : lea eax, [rdi + 0xa] ; ret
0x00000000000b6b1d : lea eax, [rdi + 0xb] ; ret
0x00000000000b6b3f : lea eax, [rdi + 0xc] ; ret
0x00000000000b6b5f : lea eax, [rdi + 0xd] ; ret
0x00000000000b6b7f : lea eax, [rdi + 0xe] ; ret
0x00000000000b6b99 : lea eax, [rdi + 0xf] ; ret
0x00000000000b6a47 : lea eax, [rdi + 1] ; ret
0x00000000001885a7 : lea eax, [rdi + 1] ; vzeroupper ; ret
0x00000000000b6a5a : lea eax, [rdi + 2] ; ret
0x00000000001885bb : lea eax, [rdi + 2] ; vzeroupper ; ret
0x00000000000b6a65 : lea eax, [rdi + 3] ; ret
0x00000000001885d5 : lea eax, [rdi + 3] ; vzeroupper ; ret
0x00000000000b6a78 : lea eax, [rdi + 4] ; ret
0x00000000000b6a8d : lea eax, [rdi + 5] ; ret
0x00000000000b6aab : lea eax, [rdi + 6] ; ret
0x00000000000b6ab7 : lea eax, [rdi + 7] ; ret
0x00000000000b6aca : lea eax, [rdi + 8] ; ret
0x000000000013a470 : lea eax, [rdi + 9] ; and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x00000000000b6adf : lea eax, [rdi + 9] ; ret
0x00000000000aa7f9 : lea eax, [rdi + rax + 0x10] ; ret
0x00000000000aa809 : lea eax, [rdi + rax + 0x20] ; ret
0x00000000000aa703 : lea eax, [rdi + rax + 0x30] ; ret
0x000000000013a911 : lea eax, [rdi + rax + 2] ; cmp rdx, rax ; sbb eax, eax ; ret
0x0000000000186005 : lea eax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x00000000000a7199 : lea eax, [rdi + rax - 1] ; ret
0x00000000000afadc : lea eax, [rdi + rax] ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000018a62d : lea eax, [rdi + rax] ; cmp esi, dword ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x00000000000afcf7 : lea eax, [rdi + rax] ; ret
0x0000000000188ca3 : lea eax, [rdi + rax] ; vzeroupper ; ret
0x00000000001885ed : lea eax, [rdi + rdx] ; vzeroupper ; ret
0x000000000013b5f3 : lea eax, [rdi + rsi + 8] ; ret
0x0000000000034dfc : lea eax, [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x00000000000affa9 : lea eax, [rdi + rsi] ; ret
0x00000000000cde1e : lea eax, [rdi - 0x10] ; ret
0x00000000000cdf81 : lea eax, [rdi - 0xc] ; ret
0x00000000000cdfa1 : lea eax, [rdi - 4] ; ret
0x00000000000cdf91 : lea eax, [rdi - 8] ; ret
0x00000000000b6a33 : lea eax, [rdi] ; ret
0x0000000000188525 : lea eax, [rdi] ; vzeroupper ; ret
0x000000000017856d : lea eax, [rdx + 0xa] ; ret
0x000000000017858d : lea eax, [rdx + 0xb] ; ret
0x00000000001785af : lea eax, [rdx + 0xc] ; ret
0x00000000001785cf : lea eax, [rdx + 0xd] ; ret
0x000000000017a837 : lea eax, [rdx + 0xe] ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000001785ef : lea eax, [rdx + 0xe] ; ret
0x000000000017847f : lea eax, [rdx + 0xf] ; ret
0x00000000001784a7 : lea eax, [rdx + 1] ; ret
0x00000000001784bd : lea eax, [rdx + 2] ; ret
0x00000000001784d5 : lea eax, [rdx + 3] ; ret
0x00000000001784eb : lea eax, [rdx + 4] ; ret
0x00000000001784fd : lea eax, [rdx + 5] ; ret
0x000000000017851b : lea eax, [rdx + 6] ; ret
0x000000000017a8e2 : lea eax, [rdx + 7] ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x0000000000178427 : lea eax, [rdx + 7] ; ret
0x000000000017852d : lea eax, [rdx + 8] ; ret
0x000000000017854d : lea eax, [rdx + 9] ; ret
0x00000000000e8096 : lea eax, [rdx + rax*8] ; jmp 0xe8072
0x0000000000181332 : lea eax, [rdx + rcx] ; sub rax, rdi ; ret
0x000000000008731e : lea eax, [rdx + rdi] ; ret
0x00000000000ba6b3 : lea eax, [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000009a219 : lea eax, [rdx - 0x10] ; ret
0x0000000000044e20 : lea eax, [rdx - 1] ; mov dword ptr [rip + 0x19f37f], eax ; mov eax, edx ; ret
0x0000000000178495 : lea eax, [rdx] ; ret
0x00000000000a70ab : lea eax, [rip + 0x103787] ; movsxd rdx, dword ptr [rax + rdx*4] ; add rdx, rax ; jmp rdx
0x00000000000bb35d : lea eax, [rip + 0x116bd] ; cmove rax, rdx ; ret
0x00000000000cea6d : lea eax, [rip + 0x118d8d] ; add rsp, 8 ; ret
0x00000000000bad6d : lea eax, [rip + 0x11fdd] ; cmove rax, rdx ; ret
0x000000000009d46d : lea eax, [rip + 0x12a4d] ; cmove rax, rdx ; ret
0x00000000000baf7d : lea eax, [rip + 0x12a9d] ; cmove rax, rdx ; ret
0x00000000000bb0fd : lea eax, [rip + 0x12bad] ; cmove rax, rdx ; ret
0x00000000000bad93 : lea eax, [rip + 0x12d57] ; cmovne rax, rdx ; ret
0x00000000000bad2d : lea eax, [rip + 0x12ded] ; cmove rax, rdx ; ret
0x000000000009d2cd : lea eax, [rip + 0x12edd] ; cmove rax, rdx ; ret
0x000000000009d30d : lea eax, [rip + 0x1303d] ; cmove rax, rdx ; ret
0x00000000000bae5d : lea eax, [rip + 0x1341d] ; cmove rax, rdx ; ret
0x00000000000339c9 : lea eax, [rip + 0x17bf7d] ; ret
0x0000000000026c61 : lea eax, [rip + 0x188824] ; ret
0x0000000000026c71 : lea eax, [rip + 0x18a6ae] ; ret
0x00000000000536d8 : lea eax, [rip + 0x193d22] ; mov byte ptr [rax + rdx], 0 ; ret
0x0000000000048871 : lea eax, [rip + 0x1a18af] ; add rsp, 8 ; ret
0x0000000000033969 : lea eax, [rip + 0x1b2ed1] ; mov byte ptr [rip + 0x1b2f28], dl ; ret
0x000000000009e0e6 : lea eax, [rip + 0x1b854] ; cmove rax, rdx ; ret
0x000000000009e36a : lea eax, [rip + 0x1c090] ; cmovne rax, rdx ; ret
0x000000000009d733 : lea eax, [rip + 0x1c7e7] ; cmovne rax, rdx ; ret
0x000000000009d493 : lea eax, [rip + 0x1c9e7] ; cmovne rax, rdx ; ret
0x000000000009ceb3 : lea eax, [rip + 0x1cf27] ; cmovne rax, rdx ; ret
0x00000000000a726d : lea eax, [rip + 0x37bd] ; cmove rax, rdx ; ret
0x000000000012d35b : lea eax, [rip + 0x5c18f] ; cmove rax, rdx ; ret
0x000000000011f63f : lea eax, [rip + 0x8e57b] ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000151d29 : lea eax, [rip + 0x97c51] ; pop rbx ; ret
0x0000000000151c49 : lea eax, [rip + 0x97d39] ; pop rbx ; ret
0x0000000000151b69 : lea eax, [rip + 0x97e31] ; pop rbx ; ret
0x0000000000151a91 : lea eax, [rip + 0x97f29] ; pop rbx ; ret
0x000000000014513b : lea eax, [rip + 0xa47bf] ; ret
0x0000000000145113 : lea eax, [rip + 0xa47e7] ; add rsp, 8 ; ret
0x000000000009fd3d : lea eax, [rip + 0xaaed] ; cmove rax, rdx ; ret
0x000000000009e1bd : lea eax, [rip + 0xc33d] ; cmove rax, rdx ; ret
0x0000000000117dff : lea eax, [rip + 0xd025b] ; add rsp, 0x18 ; ret
0x0000000000117dab : lea eax, [rip + 0xd02ef] ; pop rbp ; pop r12 ; ret
0x0000000000117887 : lea eax, [rip + 0xd0783] ; add rsp, 8 ; ret
0x0000000000117828 : lea eax, [rip + 0xd0802] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000114bb5 : lea eax, [rip + 0xd321d] ; add rsp, 8 ; ret
0x000000000009e34b : lea eax, [rip + 0xeb1af] ; cmove rax, rdx ; ret
0x000000000009fd7d : lea eax, [rip + 0xff2d] ; cmove rax, rdx ; ret
0x000000000012d37a : lea eax, [rip - 0x72f90] ; cmovne rax, rdx ; ret
0x000000000010c393 : lea eax, [rip - 0xa9] ; cmove rax, rdx ; ret
0x0000000000121a41 : lea eax, [rsi + rax*4] ; mov eax, dword ptr [rax + rdx] ; shr eax, cl ; and eax, 1 ; ret
0x000000000007cc77 : lea eax, [rsi - 0x76b70006] ; ret
0x0000000000030a9d : lea eax, [rsp + 0xb0] ; call r14
0x00000000001966f0 : lea ebp, [rbx + rax*8 + 8] ; nop dword ptr [rax] ; call qword ptr [rbx]
0x00000000000e20df : lea ebp, [rdi] ; hlt ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000012aeb9 : lea ebp, [rdx - 0x77000000] ; ret 0x2944
0x000000000003000d : lea ebp, [rdx] ; add eax, 0x29480000 ; retf 0xe083
0x000000000004639e : lea ebp, [rsi + rbp] ; call rax
0x000000000002edd9 : lea ebp, [rsi] ; add eax, 0x29480000 ; retf 0xe083
0x0000000000076385 : lea ebx, [rax] ; idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000000762f9 : lea ebx, [rax] ; idiv edi ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000bb736 : lea ecx, [rax + 1] ; lea r9, [rsp + 0x38] ; call rbx
0x00000000000bbc52 : lea ecx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x00000000000bb89e : lea ecx, [rax + 4] ; lea r9, [rsp + 0x28] ; call rbx
0x00000000000e2ff6 : lea ecx, [rax + rax] ; mov esi, esi ; movsxd rax, dword ptr [rdx + rsi*4] ; add rax, rdx ; jmp rax
0x0000000000073483 : lea ecx, [rax - 0x17000006] ; ret
0x0000000000047582 : lea ecx, [rax - 0x77] ; ret 0x2e66
0x0000000000089c67 : lea ecx, [rbp - 0x40] ; call r12
0x00000000000807b6 : lea ecx, [rbx + 0x40] ; mov rdi, rbx ; call rax
0x0000000000163940 : lea ecx, [rbx + rcx] ; jmp r9
0x00000000000b52ee : lea ecx, [rbx + rcx] ; jmp rcx
0x0000000000163e01 : lea ecx, [rcx - 7] ; lea rdx, [rdx - 0x40] ; jmp r9
0x0000000000034de7 : lea ecx, [rdi + rcx*4] ; mov edx, dword ptr [rcx + rdx] ; test edx, edx ; jne 0x34e02 ; ret
0x000000000011e26a : lea ecx, [rdi + rdi] ; shr eax, cl ; and eax, 3 ; ret
0x0000000000175d76 : lea ecx, [rdx + 0x10] ; jne 0x1762c9 ; ret
0x0000000000176074 : lea ecx, [rdx + 0xa] ; jne 0x1762c9 ; ret
0x0000000000176094 : lea ecx, [rdx + 0xb] ; jne 0x1762c9 ; ret
0x00000000001760b4 : lea ecx, [rdx + 0xc] ; jne 0x1762c9 ; ret
0x00000000001760d6 : lea ecx, [rdx + 0xd] ; jne 0x1762c9 ; ret
0x00000000001760f6 : lea ecx, [rdx + 0xe] ; jne 0x1762c9 ; ret
0x0000000000176116 : lea ecx, [rdx + 0xf] ; jne 0x1762c9 ; ret
0x0000000000175f6c : lea ecx, [rdx + 1] ; jne 0x1762c9 ; ret
0x0000000000175f8e : lea ecx, [rdx + 2] ; jne 0x1762c9 ; ret
0x0000000000175fb4 : lea ecx, [rdx + 3] ; jne 0x1762c9 ; ret
0x0000000000175fcc : lea ecx, [rdx + 4] ; jne 0x1762c9 ; ret
0x0000000000084bd6 : lea ecx, [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000175ff2 : lea ecx, [rdx + 5] ; jne 0x1762c9 ; ret
0x0000000000176014 : lea ecx, [rdx + 6] ; jne 0x1762c9 ; ret
0x0000000000176032 : lea ecx, [rdx + 7] ; jne 0x1762c9 ; ret
0x0000000000175d0e : lea ecx, [rdx + 8] ; jne 0x1762c9 ; ret
0x0000000000176054 : lea ecx, [rdx + 9] ; jne 0x1762c9 ; ret
0x00000000001218e3 : lea ecx, [rdx + rcx*4] ; mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x1218fa ; ret
0x000000000012193e : lea ecx, [rdx + rcx*4] ; mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x12195a ; ret
0x0000000000122165 : lea ecx, [rdx + rcx*4] ; mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x12217a ; ret
0x00000000001221b2 : lea ecx, [rdx + rcx*4] ; mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x1221ca ; ret
0x00000000000567f0 : lea ecx, [rdx] ; jmp 0x56846
0x00000000000584b0 : lea ecx, [rdx] ; jmp 0x58506
0x000000000009b739 : lea ecx, [rip + 0x11420d] ; mov rdx, rcx ; jmp 0x9b6de
0x0000000000121b1e : lea ecx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000121b07 : lea ecx, [rsi + rcx*4] ; mov edx, dword ptr [rcx + rdx] ; test edx, edx ; jne 0x121b22 ; ret
0x0000000000122367 : lea ecx, [rsi + rcx*4] ; mov edx, dword ptr [rcx + rdx] ; test edx, edx ; jne 0x122382 ; ret
0x00000000001505f8 : lea ecx, [rsp + 0x14] ; call qword ptr [r10]
0x0000000000150f1c : lea ecx, [rsp + 0x1c] ; call qword ptr [r10]
0x000000000014617b : lea ecx, [rsp + 0x20] ; call qword ptr [rax]
0x0000000000089a5f : lea ecx, [rsp + 0x20] ; call rbx
0x00000000000bba29 : lea ecx, [rsp + 0x28] ; call r12
0x0000000000089965 : lea ecx, [rsp + 0x28] ; call rbx
0x0000000000145f8b : lea ecx, [rsp + 0x2c] ; call qword ptr [rax]
0x00000000000c9883 : lea ecx, [rsp + 0x30] ; call r12
0x00000000000bbe5f : lea ecx, [rsp + 0x30] ; call rbx
0x00000000000bb73a : lea ecx, [rsp + 0x38] ; call rbx
0x00000000001516e8 : lea ecx, [rsp + 0x3a] ; call qword ptr [rax]
0x000000000014669c : lea ecx, [rsp + 0x40] ; call qword ptr [rax]
0x000000000011568e : lea ecx, [rsp + 0xf] ; and r9, 0xfffffffffffffff0 ; mov rdx, r9 ; jmp 0x1156d4
0x000000000006fc60 : lea edi, [rax + 0x10] ; call 0x9c6a5
0x0000000000026fad : lea edi, [rax + 1] ; mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x0000000000026f96 : lea edi, [rax + 1] ; mov byte ptr [rdi], 0 ; pop rbx ; pop r14 ; ret
0x000000000014c86e : lea edi, [rbp + 0x10] ; call rax
0x00000000001023e4 : lea edi, [rbp - 0x14] ; call 0x2519a
0x000000000014f402 : lea edi, [rbx + 0x58] ; call rax
0x000000000014e962 : lea edi, [rbx + 0x68] ; call rax
0x000000000014bc85 : lea edi, [rbx + 0xc8] ; call rax
0x00000000000b5e5d : lea edi, [rdi + 0x10] ; jne 0xb6539 ; ret
0x00000000000b7551 : lea edi, [rdi + 0x10] ; jne 0xb7d59 ; ret
0x00000000000b5e80 : lea edi, [rdi + 0x11] ; jne 0xb6539 ; ret
0x00000000000b7574 : lea edi, [rdi + 0x11] ; jne 0xb7d59 ; ret
0x00000000000b5ea5 : lea edi, [rdi + 0x12] ; jne 0xb6539 ; ret
0x00000000000b7599 : lea edi, [rdi + 0x12] ; jne 0xb7d59 ; ret
0x00000000000b5ec3 : lea edi, [rdi + 0x13] ; jne 0xb6539 ; ret
0x00000000000b75c7 : lea edi, [rdi + 0x13] ; jne 0xb7d59 ; ret
0x00000000000b5ee3 : lea edi, [rdi + 0x14] ; jne 0xb6539 ; ret
0x00000000000b75f7 : lea edi, [rdi + 0x14] ; jne 0xb7d59 ; ret
0x00000000000b5f06 : lea edi, [rdi + 0x15] ; jne 0xb6539 ; ret
0x00000000000b762a : lea edi, [rdi + 0x15] ; jne 0xb7d59 ; ret
0x00000000000b5f25 : lea edi, [rdi + 0x16] ; jne 0xb6539 ; ret
0x00000000000b7659 : lea edi, [rdi + 0x16] ; jne 0xb7d59 ; ret
0x00000000000b5f45 : lea edi, [rdi + 0x17] ; jne 0xb6539 ; ret
0x00000000000b7689 : lea edi, [rdi + 0x17] ; jne 0xb7d59 ; ret
0x00000000000b5f65 : lea edi, [rdi + 0x18] ; jne 0xb6539 ; ret
0x00000000000b76b9 : lea edi, [rdi + 0x18] ; jne 0xb7d59 ; ret
0x00000000000b5f88 : lea edi, [rdi + 0x19] ; jne 0xb6539 ; ret
0x00000000000b76ec : lea edi, [rdi + 0x19] ; jne 0xb7d59 ; ret
0x00000000000b5fbd : lea edi, [rdi + 0x1a] ; jne 0xb6539 ; ret
0x00000000000b7721 : lea edi, [rdi + 0x1a] ; jne 0xb7d59 ; ret
0x00000000000b5feb : lea edi, [rdi + 0x1b] ; jne 0xb6539 ; ret
0x00000000000b774f : lea edi, [rdi + 0x1b] ; jne 0xb7d59 ; ret
0x00000000000b601b : lea edi, [rdi + 0x1c] ; jne 0xb6539 ; ret
0x00000000000b777f : lea edi, [rdi + 0x1c] ; jne 0xb7d59 ; ret
0x00000000000b6047 : lea edi, [rdi + 0x1d] ; jne 0xb6539 ; ret
0x00000000000b77ab : lea edi, [rdi + 0x1d] ; jne 0xb7d59 ; ret
0x00000000000b6077 : lea edi, [rdi + 0x1e] ; jne 0xb6539 ; ret
0x00000000000b77db : lea edi, [rdi + 0x1e] ; jne 0xb7d59 ; ret
0x00000000000b60a7 : lea edi, [rdi + 0x1f] ; jne 0xb6539 ; ret
0x00000000000b780b : lea edi, [rdi + 0x1f] ; jne 0xb7d59 ; ret
0x00000000000b60d7 : lea edi, [rdi + 0x20] ; jne 0xb6539 ; ret
0x00000000000b783b : lea edi, [rdi + 0x20] ; jne 0xb7d59 ; ret
0x00000000000b5da3 : lea edi, [rdi + 0xa] ; jne 0xb6539 ; ret
0x00000000000b7457 : lea edi, [rdi + 0xa] ; jne 0xb7d59 ; ret
0x00000000000b5dc1 : lea edi, [rdi + 0xb] ; jne 0xb6539 ; ret
0x00000000000b7485 : lea edi, [rdi + 0xb] ; jne 0xb7d59 ; ret
0x00000000000b5de1 : lea edi, [rdi + 0xc] ; jne 0xb6539 ; ret
0x00000000000b74a5 : lea edi, [rdi + 0xc] ; jne 0xb7d59 ; ret
0x00000000000b5e03 : lea edi, [rdi + 0xd] ; jne 0xb6539 ; ret
0x00000000000b74c7 : lea edi, [rdi + 0xd] ; jne 0xb7d59 ; ret
0x00000000000b5e23 : lea edi, [rdi + 0xe] ; jne 0xb6539 ; ret
0x00000000000b74f7 : lea edi, [rdi + 0xe] ; jne 0xb7d59 ; ret
0x00000000000b5e43 : lea edi, [rdi + 0xf] ; jne 0xb6539 ; ret
0x00000000000b7527 : lea edi, [rdi + 0xf] ; jne 0xb7d59 ; ret
0x0000000000187c7d : lea edi, [rdi + 1] ; jne 0x1880bc ; vzeroupper ; ret
0x0000000000188995 : lea edi, [rdi + 1] ; jne 0x188dec ; vzeroupper ; ret
0x00000000000b5c77 : lea edi, [rdi + 1] ; jne 0xb6539 ; ret
0x00000000000b732a : lea edi, [rdi + 1] ; jne 0xb7d59 ; ret
0x0000000000187e2b : lea edi, [rdi + 2] ; jne 0x1880bc ; vzeroupper ; ret
0x0000000000188b5f : lea edi, [rdi + 2] ; jne 0x188dec ; vzeroupper ; ret
0x00000000000b5c9b : lea edi, [rdi + 2] ; jne 0xb6539 ; ret
0x00000000000b734f : lea edi, [rdi + 2] ; jne 0xb7d59 ; ret
0x0000000000187e4f : lea edi, [rdi + 3] ; jne 0x1880bc ; vzeroupper ; ret
0x0000000000188b83 : lea edi, [rdi + 3] ; jne 0x188dec ; vzeroupper ; ret
0x00000000000b5cbe : lea edi, [rdi + 3] ; jne 0xb6539 ; ret
0x00000000000b7372 : lea edi, [rdi + 3] ; jne 0xb7d59 ; ret
0x0000000000187e69 : lea edi, [rdi + 4] ; jne 0x1880bc ; vzeroupper ; ret
0x0000000000188b9d : lea edi, [rdi + 4] ; jne 0x188dec ; vzeroupper ; ret
0x00000000000b5cd9 : lea edi, [rdi + 4] ; jne 0xb6539 ; ret
0x00000000000b738d : lea edi, [rdi + 4] ; jne 0xb7d59 ; ret
0x00000000000b5cfc : lea edi, [rdi + 5] ; jne 0xb6539 ; ret
0x00000000000b73b0 : lea edi, [rdi + 5] ; jne 0xb7d59 ; ret
0x00000000000b5d21 : lea edi, [rdi + 6] ; jne 0xb6539 ; ret
0x00000000000b73d5 : lea edi, [rdi + 6] ; jne 0xb7d59 ; ret
0x00000000000b5d3f : lea edi, [rdi + 7] ; jne 0xb6539 ; ret
0x00000000000b73f3 : lea edi, [rdi + 7] ; jne 0xb7d59 ; ret
0x00000000000b5d5b : lea edi, [rdi + 8] ; jne 0xb6539 ; ret
0x00000000000b740f : lea edi, [rdi + 8] ; jne 0xb7d59 ; ret
0x00000000000b5d7e : lea edi, [rdi + 9] ; jne 0xb6539 ; ret
0x00000000000b7432 : lea edi, [rdi + 9] ; jne 0xb7d59 ; ret
0x000000000005adfe : lea edi, [rdi + rax*8] ; call 0x57075
0x00000000000bb22b : lea edi, [rdx + 4] ; test ecx, ecx ; jne 0xbb22c ; xor edi, edi ; mov rax, rdi ; ret
0x00000000000df2bd : lea edi, [rdx] ; sub rsp, 0x80 ; call 0x12bdbb
0x00000000000884f5 : lea edi, [rip + 0x128415] ; call 0x34fd8
0x0000000000058da9 : lea edi, [rip + 0x156d06] ; call 0x34fd8
0x0000000000028d6b : lea edi, [rip + 0x1867a4] ; call 0x34fd8
0x000000000011614b : lea edi, [rip + 0x9b45c] ; call 0x823a8
0x0000000000136e62 : lea edi, [rip + 0xb2378] ; call rax
0x000000000012c98a : lea edi, [rip - 0x160] ; call rax
0x000000000013fdb1 : lea edi, [rsp + 0x20] ; mov edx, r14d ; call 0x13c8b9
0x0000000000028ea1 : lea edi, [rsp + 2] ; mov esi, 0x3a ; call 0x2514b
0x000000000013eb2d : lea edx, [rax + 0x18] ; lea rsi, [r13 + 1] ; mov rdi, r15 ; call 0x13b60c
0x000000000009267a : lea edx, [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000044e09 : lea edx, [rax + 1] ; mov dword ptr [rip + 0x19f39a], edx ; ret
0x000000000008d34b : lea edx, [rax + 1] ; mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000009328f : lea edx, [rax + 1] ; mov qword ptr [rip + 0x151037], rdx ; ret
0x00000000000710cd : lea edx, [rax + 8] ; mov qword ptr [rbp - 0x4d0], rdx ; jmp 0x6dbbd
0x0000000000071520 : lea edx, [rax + 8] ; mov qword ptr [rbp - 0x4d0], rdx ; jmp 0x6df80
0x000000000006a54e : lea edx, [rax + 8] ; mov qword ptr [rbp - 0x5a0], rdx ; jmp 0x66fdc
0x0000000000087450 : lea edx, [rax + rdx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000163a14 : lea edx, [rbx + rdx] ; jmp rdx
0x000000000012b242 : lea edx, [rcx + 0x70] ; movups xmmword ptr [rbp - 0x78], xmm7 ; call rax
0x000000000018434f : lea edx, [rcx + 1] ; add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x00000000000a6d5c : lea edx, [rcx + 1] ; mov byte ptr [rcx], 0 ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x000000000006deea : lea edx, [rcx + 4] ; cmp eax, 0x5d ; cmove r9, rdx ; jmp 0x6df15
0x00000000000dbea1 : lea edx, [rdi + rdi*8] ; pop rbx ; pop rbp ; lea rax, [rax + rdx*8] ; ret
0x00000000000bb213 : lea edx, [rdi - 4] ; test eax, eax ; jne 0xbb231 ; mov rax, rdi ; ret
0x000000000012c65c : lea edx, [rdi*8 + 2] ; mov edi, edx ; syscall
0x00000000000a7646 : lea edx, [rdx + rcx] ; jmp r10
0x00000000001218f6 : lea edx, [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000163e08 : lea edx, [rdx - 0x40] ; jmp r9
0x00000000000bc68a : lea edx, [rip + 0x11930] ; cmovne rax, rdx ; ret
0x000000000009cd6a : lea edx, [rip + 0x13800] ; cmovne rax, rdx ; ret
0x000000000009d36a : lea edx, [rip + 0x14e20] ; cmovne rax, rdx ; ret
0x0000000000055aae : lea edx, [rip + 0x159f58] ; jmp 0x55a80
0x000000000009e79c : lea edx, [rip + 0x1b84e] ; cmove rax, rdx ; ret
0x000000000009e44c : lea edx, [rip + 0x1bb7e] ; cmove rax, rdx ; ret
0x000000000009e2ec : lea edx, [rip + 0x1bcfe] ; cmove rax, rdx ; ret
0x0000000000150d29 : lea edx, [rip + 0x3711] ; call qword ptr [rax]
0x000000000012d2b6 : lea edx, [rip + 0x3bb44] ; cmovne rax, rdx ; ret
0x000000000012d136 : lea edx, [rip + 0x3bce4] ; cmovne rax, rdx ; ret
0x000000000012d1f6 : lea edx, [rip + 0x3e6f4] ; cmovne rax, rdx ; ret
0x000000000012d291 : lea edx, [rip + 0x5bd59] ; cmove rax, rdx ; ret
0x000000000012d1d1 : lea edx, [rip + 0x5be39] ; cmove rax, rdx ; ret
0x000000000012d111 : lea edx, [rip + 0x5bef9] ; cmove rax, rdx ; ret
0x000000000012d2e0 : lea edx, [rip + 0x60a4a] ; cmove rax, rdx ; ret
0x000000000012d220 : lea edx, [rip + 0x60b2a] ; cmove rax, rdx ; ret
0x000000000012d160 : lea edx, [rip + 0x60bea] ; cmove rax, rdx ; ret
0x000000000012d3a0 : lea edx, [rip + 0x60f3a] ; cmove rax, rdx ; ret
0x0000000000151878 : lea edx, [rip + 0x983c2] ; mov qword ptr fs:[rax], rdx ; ret
0x00000000001474e9 : lea edx, [rip + 0x9c671] ; jmp qword ptr [rdx + rax*8]
0x000000000009ce1a : lea edx, [rip + 0xc40b0] ; cmovne rax, rdx ; ret
0x000000000009d3d4 : lea edx, [rip + 0xc4d56] ; cmovne rax, rdx ; ret
0x000000000009e756 : lea edx, [rip + 0xca6d4] ; cmovne rax, rdx ; ret
0x000000000009e406 : lea edx, [rip + 0xcaa04] ; cmovne rax, rdx ; ret
0x000000000009e2a6 : lea edx, [rip + 0xcd654] ; cmovne rax, rdx ; ret
0x000000000009e63d : lea edx, [rip + 0xcfddd] ; cmovne rax, rdx ; ret
0x000000000009e59d : lea edx, [rip + 0xcfe6d] ; cmovne rax, rdx ; ret
0x000000000009e68d : lea edx, [rip + 0xd1edd] ; cmovne rax, rdx ; ret
0x000000000009e5ed : lea edx, [rip + 0xd1f6d] ; cmovne rax, rdx ; ret
0x00000000000bb3ab : lea edx, [rip + 0xd4b9f] ; cmovne rax, rdx ; ret
0x000000000009ce8a : lea edx, [rip + 0xd5c30] ; cmovne rax, rdx ; ret
0x000000000009d42a : lea edx, [rip + 0xd6e40] ; cmovne rax, rdx ; ret
0x000000000009e4ea : lea edx, [rip + 0xd8900] ; cmovne rax, rdx ; ret
0x000000000009e54a : lea edx, [rip + 0xda0b0] ; cmovne rax, rdx ; ret
0x0000000000146235 : lea edx, [rip + 0xe205] ; lea r9, [rsp + 0x20] ; call qword ptr [rax]
0x000000000009e731 : lea edx, [rip + 0xea8e9] ; cmove rax, rdx ; ret
0x000000000009e3e1 : lea edx, [rip + 0xeac19] ; cmove rax, rdx ; ret
0x000000000009e281 : lea edx, [rip + 0xead99] ; cmove rax, rdx ; ret
0x000000000009e780 : lea edx, [rip + 0xef5da] ; cmove rax, rdx ; ret
0x000000000009e430 : lea edx, [rip + 0xef90a] ; cmove rax, rdx ; ret
0x000000000009e2d0 : lea edx, [rip + 0xefa8a] ; cmove rax, rdx ; ret
0x000000000009e390 : lea edx, [rip + 0xeff5a] ; cmove rax, rdx ; ret
0x000000000009e20b : lea edx, [rip + 0xf05cf] ; cmovne rax, rdx ; ret
0x000000000009cdbd : lea edx, [rip + 0xf16fd] ; cmovne rax, rdx ; ret
0x000000000007ad3f : lea edx, [rip - 0x441] ; add rax, rdx ; jmp rax
0x000000000012d17c : lea edx, [rip - 0x731a2] ; cmove rax, rdx ; ret
0x000000000012d23c : lea edx, [rip - 0x73262] ; cmove rax, rdx ; ret
0x000000000012d2fc : lea edx, [rip - 0x73342] ; cmove rax, rdx ; ret
0x0000000000114fea : lea edx, [rsi + 1] ; jne 0x114fc5 ; ret
0x00000000000ba063 : lea edx, [rsi + rcx] ; cmp rdi, rdx ; jb 0xba078 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000112906 : lea edx, [rsp + 0x30] ; mov eax, 0x10 ; syscall
0x000000000013eb31 : lea esi, [rbp + 1] ; mov rdi, r15 ; call 0x13b608
0x000000000012c986 : lea esi, [rbp - 0x20] ; lea rdi, [rip - 0x160] ; call rax
0x0000000000085899 : lea esi, [rcx + 1] ; mov qword ptr [rdx + 0x28], rsi ; mov byte ptr [rcx], dil ; ret
0x0000000000085763 : lea esi, [rcx + 4] ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x0000000000144fb0 : lea esi, [rdi + 0x48] ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000059ddd : lea esi, [rdi + rax*8] ; mov rdi, qword ptr [rsp + 0x10] ; call 0x568aa
0x00000000000642cd : lea esi, [rip + 0x144ded] ; jmp 0x6429f
0x0000000000052e5f : lea esi, [rip + 0x7b] ; call rax
0x0000000000136a51 : lea esi, [rip + 0x7bfdd] ; call 0x142ca8
0x00000000001369ab : lea esi, [rip + 0x7c083] ; mov rdi, r14 ; call 0x142cab
0x00000000001160f8 : lea esi, [rip + 0x99464] ; call 0x823a8
0x00000000000e19cc : lea esi, [rip + 0xcdf7a] ; mov eax, 0x142 ; syscall
0x00000000000ba074 : lea esi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000154e95 : lea esi, [rsp + 0x10] ; call qword ptr [rax]
0x0000000000154684 : lea esi, [rsp + 0x10] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000147f0a : lea esi, [rsp + 0x18] ; call qword ptr [rax]
0x0000000000154675 : lea esi, [rsp + 8] ; call qword ptr [rax]
0x0000000000082543 : lea esi, [rsp + 8] ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000012f110 : lea esi, [rsp - 0x18] ; mov eax, 0x83 ; syscall
0x0000000000071cdb : lea esp, [rax + 0xffffffa] ; test byte ptr [rdi], ch ; ret
0x00000000000661a2 : lea esp, [rax - 0x39000005] ; add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x0000000000108e44 : lea esp, [rbp + rax] ; mov rdi, r12 ; call 0x250b9
0x00000000000dfa49 : lea esp, [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000046b21 : lea esp, [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000081315 : lea esp, [rbp - 0x20] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000047391 : lea esp, [rbx + rax*8 + 8] ; nop dword ptr [rax] ; call qword ptr [rbx]
0x0000000000028e7a : lea esp, [rdi + 2] ; call 0x25145
0x00000000000bbd36 : lea esp, [rip + 0x127164] ; jmp 0xbbc06
0x0000000000045492 : lea esp, [rsi + rax] ; mov r13, rax ; mov rdi, r12 ; call rbx
0x0000000000147f05 : lea esp, [rsp + 0x10] ; lea rsi, [rsp + 0x18] ; call qword ptr [rax]
0x00000000000a7645 : lea r10, [r10 + r9] ; jmp r10
0x0000000000055aad : lea r10, [rip + 0x159f58] ; jmp 0x55a81
0x0000000000108e43 : lea r12, [rbp + rax] ; mov rdi, r12 ; call 0x250ba
0x0000000000047390 : lea r12, [rbx + rax*8 + 8] ; nop dword ptr [rax] ; call qword ptr [rbx]
0x0000000000045491 : lea r12, [rsi + rax] ; mov r13, rax ; mov rdi, r12 ; call rbx
0x0000000000147f04 : lea r12, [rsp + 0x10] ; lea rsi, [rsp + 0x18] ; call qword ptr [rax]
0x0000000000028e79 : lea r12d, [r15 + 2] ; call 0x25146
0x000000000004639d : lea r13, [r14 + rbp] ; call rax
0x0000000000030a9c : lea r8, [rsp + 0xb0] ; call r14
0x000000000016393f : lea r9, [r11 + r9] ; jmp r9
0x0000000000163e00 : lea r9, [r9 - 7] ; lea rdx, [rdx - 0x40] ; jmp r9
0x0000000000089c66 : lea r9, [rbp - 0x40] ; call r12
0x00000000000567ef : lea r9, [rdx] ; jmp 0x56847
0x00000000000584af : lea r9, [rdx] ; jmp 0x58507
0x00000000001505f7 : lea r9, [rsp + 0x14] ; call qword ptr [r10]
0x0000000000150f1b : lea r9, [rsp + 0x1c] ; call qword ptr [r10]
0x000000000014617a : lea r9, [rsp + 0x20] ; call qword ptr [rax]
0x0000000000089a5e : lea r9, [rsp + 0x20] ; call rbx
0x00000000000bba28 : lea r9, [rsp + 0x28] ; call r12
0x0000000000089964 : lea r9, [rsp + 0x28] ; call rbx
0x0000000000145f8a : lea r9, [rsp + 0x2c] ; call qword ptr [rax]
0x00000000000c9882 : lea r9, [rsp + 0x30] ; call r12
0x00000000000bbe5e : lea r9, [rsp + 0x30] ; call rbx
0x00000000000bb739 : lea r9, [rsp + 0x38] ; call rbx
0x00000000001516e7 : lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x000000000014669b : lea r9, [rsp + 0x40] ; call qword ptr [rax]
0x000000000011568d : lea r9, [rsp + 0xf] ; and r9, 0xfffffffffffffff0 ; mov rdx, r9 ; jmp 0x1156d5
0x00000000000e3751 : lea rax, [rax + rax - 1] ; ret
0x00000000000aa7c3 : lea rax, [rax + rdi + 0x10] ; ret
0x00000000000aa7d3 : lea rax, [rax + rdi + 0x20] ; ret
0x00000000000aaca3 : lea rax, [rax + rdi + 0x30] ; ret
0x00000000000aa7a3 : lea rax, [rax + rdi - 0x10] ; ret
0x00000000000dbea6 : lea rax, [rax + rdx*8] ; ret
0x000000000009a1fa : lea rax, [rax - 8] ; ret
0x00000000000e67b0 : lea rax, [rbx + 2] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e66c0 : lea rax, [rbx + 8] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000085619 : lea rax, [rcx + 4] ; mov qword ptr [rdx + 0x20], rax ; mov eax, edi ; mov dword ptr [rcx], edi ; ret
0x00000000000b00ac : lea rax, [rcx + rsi] ; ret
0x00000000000b9c53 : lea rax, [rcx - 1] ; ret
0x00000000000b6bab : lea rax, [rdi + 0x10] ; ret
0x00000000000b6bc0 : lea rax, [rdi + 0x11] ; ret
0x00000000000b6bde : lea rax, [rdi + 0x12] ; ret
0x00000000000b6bfe : lea rax, [rdi + 0x13] ; ret
0x00000000000b6c21 : lea rax, [rdi + 0x14] ; ret
0x00000000000b6c40 : lea rax, [rdi + 0x15] ; ret
0x00000000000b6c60 : lea rax, [rdi + 0x16] ; ret
0x00000000000b6c80 : lea rax, [rdi + 0x17] ; ret
0x00000000000b6ca3 : lea rax, [rdi + 0x18] ; ret
0x00000000000b6cc8 : lea rax, [rdi + 0x19] ; ret
0x00000000000b6ce6 : lea rax, [rdi + 0x1a] ; ret
0x00000000000b6d06 : lea rax, [rdi + 0x1b] ; ret
0x00000000000b6d22 : lea rax, [rdi + 0x1c] ; ret
0x00000000000b6d42 : lea rax, [rdi + 0x1d] ; ret
0x00000000000b6d62 : lea rax, [rdi + 0x1e] ; ret
0x00000000000b6d82 : lea rax, [rdi + 0x1f] ; ret
0x00000000000b7be2 : lea rax, [rdi + 0x20] ; ret
0x00000000000b7e48 : lea rax, [rdi + 0x40] ; ret
0x0000000000188d48 : lea rax, [rdi + 0x41] ; vzeroupper ; ret
0x0000000000188eeb : lea rax, [rdi + 0x80] ; vzeroupper ; ret
0x00000000000b6afc : lea rax, [rdi + 0xa] ; ret
0x00000000000b6b1c : lea rax, [rdi + 0xb] ; ret
0x00000000000b6b3e : lea rax, [rdi + 0xc] ; ret
0x00000000000b6b5e : lea rax, [rdi + 0xd] ; ret
0x00000000000b6b7e : lea rax, [rdi + 0xe] ; ret
0x00000000000b6b98 : lea rax, [rdi + 0xf] ; ret
0x00000000000b6a46 : lea rax, [rdi + 1] ; ret
0x00000000001885a6 : lea rax, [rdi + 1] ; vzeroupper ; ret
0x00000000000b6a59 : lea rax, [rdi + 2] ; ret
0x00000000001885ba : lea rax, [rdi + 2] ; vzeroupper ; ret
0x00000000000b6a64 : lea rax, [rdi + 3] ; ret
0x00000000001885d4 : lea rax, [rdi + 3] ; vzeroupper ; ret
0x00000000000b6a77 : lea rax, [rdi + 4] ; ret
0x00000000000b6a8c : lea rax, [rdi + 5] ; ret
0x00000000000b6aaa : lea rax, [rdi + 6] ; ret
0x00000000000b6ab6 : lea rax, [rdi + 7] ; ret
0x00000000000b6ac9 : lea rax, [rdi + 8] ; ret
0x00000000000b6ade : lea rax, [rdi + 9] ; ret
0x0000000000188ca2 : lea rax, [rdi + r8] ; vzeroupper ; ret
0x00000000000aa7f8 : lea rax, [rdi + rax + 0x10] ; ret
0x00000000000aa808 : lea rax, [rdi + rax + 0x20] ; ret
0x00000000000aa702 : lea rax, [rdi + rax + 0x30] ; ret
0x000000000013a910 : lea rax, [rdi + rax + 2] ; cmp rdx, rax ; sbb eax, eax ; ret
0x0000000000186004 : lea rax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x00000000000a7198 : lea rax, [rdi + rax - 1] ; ret
0x00000000000afadb : lea rax, [rdi + rax] ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000afcf6 : lea rax, [rdi + rax] ; ret
0x00000000001885ec : lea rax, [rdi + rdx] ; vzeroupper ; ret
0x000000000013b5f2 : lea rax, [rdi + rsi + 8] ; ret
0x0000000000034dfb : lea rax, [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x00000000000affa8 : lea rax, [rdi + rsi] ; ret
0x00000000000cde1d : lea rax, [rdi - 0x10] ; ret
0x00000000000cdf80 : lea rax, [rdi - 0xc] ; ret
0x00000000000cdfa0 : lea rax, [rdi - 4] ; ret
0x00000000000cdf90 : lea rax, [rdi - 8] ; ret
0x00000000000b6a32 : lea rax, [rdi] ; ret
0x0000000000188524 : lea rax, [rdi] ; vzeroupper ; ret
0x000000000017856c : lea rax, [rdx + 0xa] ; ret
0x000000000017858c : lea rax, [rdx + 0xb] ; ret
0x00000000001785ae : lea rax, [rdx + 0xc] ; ret
0x00000000001785ce : lea rax, [rdx + 0xd] ; ret
0x000000000017a836 : lea rax, [rdx + 0xe] ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000001785ee : lea rax, [rdx + 0xe] ; ret
0x000000000017847e : lea rax, [rdx + 0xf] ; ret
0x00000000001784a6 : lea rax, [rdx + 1] ; ret
0x00000000001784bc : lea rax, [rdx + 2] ; ret
0x00000000001784d4 : lea rax, [rdx + 3] ; ret
0x00000000001784ea : lea rax, [rdx + 4] ; ret
0x00000000001784fc : lea rax, [rdx + 5] ; ret
0x000000000017851a : lea rax, [rdx + 6] ; ret
0x000000000017a8e1 : lea rax, [rdx + 7] ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x0000000000178426 : lea rax, [rdx + 7] ; ret
0x000000000017852c : lea rax, [rdx + 8] ; ret
0x000000000017854c : lea rax, [rdx + 9] ; ret
0x00000000000e8095 : lea rax, [rdx + rax*8] ; jmp 0xe8073
0x0000000000181331 : lea rax, [rdx + rcx] ; sub rax, rdi ; ret
0x000000000009a218 : lea rax, [rdx - 0x10] ; ret
0x0000000000178494 : lea rax, [rdx] ; ret
0x00000000000bb35c : lea rax, [rip + 0x116bd] ; cmove rax, rdx ; ret
0x00000000000cea6c : lea rax, [rip + 0x118d8d] ; add rsp, 8 ; ret
0x00000000000bad6c : lea rax, [rip + 0x11fdd] ; cmove rax, rdx ; ret
0x000000000009d46c : lea rax, [rip + 0x12a4d] ; cmove rax, rdx ; ret
0x00000000000baf7c : lea rax, [rip + 0x12a9d] ; cmove rax, rdx ; ret
0x00000000000bb0fc : lea rax, [rip + 0x12bad] ; cmove rax, rdx ; ret
0x00000000000bad92 : lea rax, [rip + 0x12d57] ; cmovne rax, rdx ; ret
0x00000000000bad2c : lea rax, [rip + 0x12ded] ; cmove rax, rdx ; ret
0x000000000009d2cc : lea rax, [rip + 0x12edd] ; cmove rax, rdx ; ret
0x000000000009d30c : lea rax, [rip + 0x1303d] ; cmove rax, rdx ; ret
0x00000000000bae5c : lea rax, [rip + 0x1341d] ; cmove rax, rdx ; ret
0x00000000000339c8 : lea rax, [rip + 0x17bf7d] ; ret
0x0000000000026c60 : lea rax, [rip + 0x188824] ; ret
0x0000000000026c70 : lea rax, [rip + 0x18a6ae] ; ret
0x00000000000536d7 : lea rax, [rip + 0x193d22] ; mov byte ptr [rax + rdx], 0 ; ret
0x0000000000048870 : lea rax, [rip + 0x1a18af] ; add rsp, 8 ; ret
0x000000000009e0e5 : lea rax, [rip + 0x1b854] ; cmove rax, rdx ; ret
0x000000000009e369 : lea rax, [rip + 0x1c090] ; cmovne rax, rdx ; ret
0x000000000009d732 : lea rax, [rip + 0x1c7e7] ; cmovne rax, rdx ; ret
0x000000000009d492 : lea rax, [rip + 0x1c9e7] ; cmovne rax, rdx ; ret
0x000000000009ceb2 : lea rax, [rip + 0x1cf27] ; cmovne rax, rdx ; ret
0x00000000000a726c : lea rax, [rip + 0x37bd] ; cmove rax, rdx ; ret
0x000000000012d35a : lea rax, [rip + 0x5c18f] ; cmove rax, rdx ; ret
0x000000000011f63e : lea rax, [rip + 0x8e57b] ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000151d28 : lea rax, [rip + 0x97c51] ; pop rbx ; ret
0x0000000000151c48 : lea rax, [rip + 0x97d39] ; pop rbx ; ret
0x0000000000151b68 : lea rax, [rip + 0x97e31] ; pop rbx ; ret
0x0000000000151a90 : lea rax, [rip + 0x97f29] ; pop rbx ; ret
0x000000000014513a : lea rax, [rip + 0xa47bf] ; ret
0x0000000000145112 : lea rax, [rip + 0xa47e7] ; add rsp, 8 ; ret
0x000000000009fd3c : lea rax, [rip + 0xaaed] ; cmove rax, rdx ; ret
0x000000000009e1bc : lea rax, [rip + 0xc33d] ; cmove rax, rdx ; ret
0x0000000000117dfe : lea rax, [rip + 0xd025b] ; add rsp, 0x18 ; ret
0x0000000000117daa : lea rax, [rip + 0xd02ef] ; pop rbp ; pop r12 ; ret
0x0000000000117886 : lea rax, [rip + 0xd0783] ; add rsp, 8 ; ret
0x0000000000117827 : lea rax, [rip + 0xd0802] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000114bb4 : lea rax, [rip + 0xd321d] ; add rsp, 8 ; ret
0x000000000009e34a : lea rax, [rip + 0xeb1af] ; cmove rax, rdx ; ret
0x000000000009fd7c : lea rax, [rip + 0xff2d] ; cmove rax, rdx ; ret
0x000000000012d379 : lea rax, [rip - 0x72f90] ; cmovne rax, rdx ; ret
0x000000000010c392 : lea rax, [rip - 0xa9] ; cmove rax, rdx ; ret
0x0000000000121a40 : lea rax, [rsi + rax*4] ; mov eax, dword ptr [rax + rdx] ; shr eax, cl ; and eax, 1 ; ret
0x00000000000cdf59 : lea rax, es:[rdi - 0x10] ; ret
0x00000000001966ef : lea rbp, [rbx + rax*8 + 8] ; nop dword ptr [rax] ; call qword ptr [rbx]
0x00000000000b52ed : lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000bb735 : lea rcx, [rax + 1] ; lea r9, [rsp + 0x38] ; call rbx
0x00000000000bbc51 : lea rcx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x00000000000bb89d : lea rcx, [rax + 4] ; lea r9, [rsp + 0x28] ; call rbx
0x00000000000807b5 : lea rcx, [rbx + 0x40] ; mov rdi, rbx ; call rax
0x0000000000034de6 : lea rcx, [rdi + rcx*4] ; mov edx, dword ptr [rcx + rdx] ; test edx, edx ; jne 0x34e03 ; ret
0x0000000000175d75 : lea rcx, [rdx + 0x10] ; jne 0x1762ca ; ret
0x0000000000176073 : lea rcx, [rdx + 0xa] ; jne 0x1762ca ; ret
0x0000000000176093 : lea rcx, [rdx + 0xb] ; jne 0x1762ca ; ret
0x00000000001760b3 : lea rcx, [rdx + 0xc] ; jne 0x1762ca ; ret
0x00000000001760d5 : lea rcx, [rdx + 0xd] ; jne 0x1762ca ; ret
0x00000000001760f5 : lea rcx, [rdx + 0xe] ; jne 0x1762ca ; ret
0x0000000000176115 : lea rcx, [rdx + 0xf] ; jne 0x1762ca ; ret
0x0000000000175f6b : lea rcx, [rdx + 1] ; jne 0x1762ca ; ret
0x0000000000175f8d : lea rcx, [rdx + 2] ; jne 0x1762ca ; ret
0x0000000000175fb3 : lea rcx, [rdx + 3] ; jne 0x1762ca ; ret
0x0000000000175fcb : lea rcx, [rdx + 4] ; jne 0x1762ca ; ret
0x0000000000084bd5 : lea rcx, [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000175ff1 : lea rcx, [rdx + 5] ; jne 0x1762ca ; ret
0x0000000000176013 : lea rcx, [rdx + 6] ; jne 0x1762ca ; ret
0x0000000000176031 : lea rcx, [rdx + 7] ; jne 0x1762ca ; ret
0x0000000000175d0d : lea rcx, [rdx + 8] ; jne 0x1762ca ; ret
0x0000000000176053 : lea rcx, [rdx + 9] ; jne 0x1762ca ; ret
0x00000000001218e2 : lea rcx, [rdx + rcx*4] ; mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x1218fb ; ret
0x000000000012193d : lea rcx, [rdx + rcx*4] ; mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x12195b ; ret
0x0000000000122164 : lea rcx, [rdx + rcx*4] ; mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x12217b ; ret
0x00000000001221b1 : lea rcx, [rdx + rcx*4] ; mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x1221cb ; ret
0x000000000009b738 : lea rcx, [rip + 0x11420d] ; mov rdx, rcx ; jmp 0x9b6df
0x0000000000121b1d : lea rcx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000121b06 : lea rcx, [rsi + rcx*4] ; mov edx, dword ptr [rcx + rdx] ; test edx, edx ; jne 0x121b23 ; ret
0x0000000000122366 : lea rcx, [rsi + rcx*4] ; mov edx, dword ptr [rcx + rdx] ; test edx, edx ; jne 0x122383 ; ret
0x0000000000028ea0 : lea rdi, [r12 + 2] ; mov esi, 0x3a ; call 0x2514c
0x000000000006fc5f : lea rdi, [rax + 0x10] ; call 0x9c6a6
0x0000000000026fac : lea rdi, [rax + 1] ; mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x0000000000026f95 : lea rdi, [rax + 1] ; mov byte ptr [rdi], 0 ; pop rbx ; pop r14 ; ret
0x000000000014c86d : lea rdi, [rbp + 0x10] ; call rax
0x00000000001023e3 : lea rdi, [rbp - 0x14] ; call 0x2519b
0x000000000014f401 : lea rdi, [rbx + 0x58] ; call rax
0x000000000014e961 : lea rdi, [rbx + 0x68] ; call rax
0x000000000014bc84 : lea rdi, [rbx + 0xc8] ; call rax
0x00000000000b5e5c : lea rdi, [rdi + 0x10] ; jne 0xb653a ; ret
0x00000000000b7550 : lea rdi, [rdi + 0x10] ; jne 0xb7d5a ; ret
0x00000000000b5e7f : lea rdi, [rdi + 0x11] ; jne 0xb653a ; ret
0x00000000000b7573 : lea rdi, [rdi + 0x11] ; jne 0xb7d5a ; ret
0x00000000000b5ea4 : lea rdi, [rdi + 0x12] ; jne 0xb653a ; ret
0x00000000000b7598 : lea rdi, [rdi + 0x12] ; jne 0xb7d5a ; ret
0x00000000000b5ec2 : lea rdi, [rdi + 0x13] ; jne 0xb653a ; ret
0x00000000000b75c6 : lea rdi, [rdi + 0x13] ; jne 0xb7d5a ; ret
0x00000000000b5ee2 : lea rdi, [rdi + 0x14] ; jne 0xb653a ; ret
0x00000000000b75f6 : lea rdi, [rdi + 0x14] ; jne 0xb7d5a ; ret
0x00000000000b5f05 : lea rdi, [rdi + 0x15] ; jne 0xb653a ; ret
0x00000000000b7629 : lea rdi, [rdi + 0x15] ; jne 0xb7d5a ; ret
0x00000000000b5f24 : lea rdi, [rdi + 0x16] ; jne 0xb653a ; ret
0x00000000000b7658 : lea rdi, [rdi + 0x16] ; jne 0xb7d5a ; ret
0x00000000000b5f44 : lea rdi, [rdi + 0x17] ; jne 0xb653a ; ret
0x00000000000b7688 : lea rdi, [rdi + 0x17] ; jne 0xb7d5a ; ret
0x00000000000b5f64 : lea rdi, [rdi + 0x18] ; jne 0xb653a ; ret
0x00000000000b76b8 : lea rdi, [rdi + 0x18] ; jne 0xb7d5a ; ret
0x00000000000b5f87 : lea rdi, [rdi + 0x19] ; jne 0xb653a ; ret
0x00000000000b76eb : lea rdi, [rdi + 0x19] ; jne 0xb7d5a ; ret
0x00000000000b5fbc : lea rdi, [rdi + 0x1a] ; jne 0xb653a ; ret
0x00000000000b7720 : lea rdi, [rdi + 0x1a] ; jne 0xb7d5a ; ret
0x00000000000b5fea : lea rdi, [rdi + 0x1b] ; jne 0xb653a ; ret
0x00000000000b774e : lea rdi, [rdi + 0x1b] ; jne 0xb7d5a ; ret
0x00000000000b601a : lea rdi, [rdi + 0x1c] ; jne 0xb653a ; ret
0x00000000000b777e : lea rdi, [rdi + 0x1c] ; jne 0xb7d5a ; ret
0x00000000000b6046 : lea rdi, [rdi + 0x1d] ; jne 0xb653a ; ret
0x00000000000b77aa : lea rdi, [rdi + 0x1d] ; jne 0xb7d5a ; ret
0x00000000000b6076 : lea rdi, [rdi + 0x1e] ; jne 0xb653a ; ret
0x00000000000b77da : lea rdi, [rdi + 0x1e] ; jne 0xb7d5a ; ret
0x00000000000b60a6 : lea rdi, [rdi + 0x1f] ; jne 0xb653a ; ret
0x00000000000b780a : lea rdi, [rdi + 0x1f] ; jne 0xb7d5a ; ret
0x00000000000b60d6 : lea rdi, [rdi + 0x20] ; jne 0xb653a ; ret
0x00000000000b783a : lea rdi, [rdi + 0x20] ; jne 0xb7d5a ; ret
0x00000000000b5da2 : lea rdi, [rdi + 0xa] ; jne 0xb653a ; ret
0x00000000000b7456 : lea rdi, [rdi + 0xa] ; jne 0xb7d5a ; ret
0x00000000000b5dc0 : lea rdi, [rdi + 0xb] ; jne 0xb653a ; ret
0x00000000000b7484 : lea rdi, [rdi + 0xb] ; jne 0xb7d5a ; ret
0x00000000000b5de0 : lea rdi, [rdi + 0xc] ; jne 0xb653a ; ret
0x00000000000b74a4 : lea rdi, [rdi + 0xc] ; jne 0xb7d5a ; ret
0x00000000000b5e02 : lea rdi, [rdi + 0xd] ; jne 0xb653a ; ret
0x00000000000b74c6 : lea rdi, [rdi + 0xd] ; jne 0xb7d5a ; ret
0x00000000000b5e22 : lea rdi, [rdi + 0xe] ; jne 0xb653a ; ret
0x00000000000b74f6 : lea rdi, [rdi + 0xe] ; jne 0xb7d5a ; ret
0x00000000000b5e42 : lea rdi, [rdi + 0xf] ; jne 0xb653a ; ret
0x00000000000b7526 : lea rdi, [rdi + 0xf] ; jne 0xb7d5a ; ret
0x00000000000b5c76 : lea rdi, [rdi + 1] ; jne 0xb653a ; ret
0x00000000000b7329 : lea rdi, [rdi + 1] ; jne 0xb7d5a ; ret
0x00000000000b5c9a : lea rdi, [rdi + 2] ; jne 0xb653a ; ret
0x00000000000b734e : lea rdi, [rdi + 2] ; jne 0xb7d5a ; ret
0x00000000000b5cbd : lea rdi, [rdi + 3] ; jne 0xb653a ; ret
0x00000000000b7371 : lea rdi, [rdi + 3] ; jne 0xb7d5a ; ret
0x00000000000b5cd8 : lea rdi, [rdi + 4] ; jne 0xb653a ; ret
0x00000000000b738c : lea rdi, [rdi + 4] ; jne 0xb7d5a ; ret
0x00000000000b5cfb : lea rdi, [rdi + 5] ; jne 0xb653a ; ret
0x00000000000b73af : lea rdi, [rdi + 5] ; jne 0xb7d5a ; ret
0x00000000000b5d20 : lea rdi, [rdi + 6] ; jne 0xb653a ; ret
0x00000000000b73d4 : lea rdi, [rdi + 6] ; jne 0xb7d5a ; ret
0x00000000000b5d3e : lea rdi, [rdi + 7] ; jne 0xb653a ; ret
0x00000000000b73f2 : lea rdi, [rdi + 7] ; jne 0xb7d5a ; ret
0x00000000000b5d5a : lea rdi, [rdi + 8] ; jne 0xb653a ; ret
0x00000000000b740e : lea rdi, [rdi + 8] ; jne 0xb7d5a ; ret
0x00000000000b5d7d : lea rdi, [rdi + 9] ; jne 0xb653a ; ret
0x00000000000b7431 : lea rdi, [rdi + 9] ; jne 0xb7d5a ; ret
0x000000000005adfd : lea rdi, [rdi + rax*8] ; call 0x57076
0x00000000000df2bc : lea rdi, [rdx] ; sub rsp, 0x80 ; call 0x12bdbc
0x00000000000884f4 : lea rdi, [rip + 0x128415] ; call 0x34fd9
0x0000000000058da8 : lea rdi, [rip + 0x156d06] ; call 0x34fd9
0x0000000000028d6a : lea rdi, [rip + 0x1867a4] ; call 0x34fd9
0x000000000011614a : lea rdi, [rip + 0x9b45c] ; call 0x823a9
0x0000000000136e61 : lea rdi, [rip + 0xb2378] ; call rax
0x000000000012c989 : lea rdi, [rip - 0x160] ; call rax
0x000000000013fdb0 : lea rdi, [rsp + 0x20] ; mov edx, r14d ; call 0x13c8ba
0x0000000000163a13 : lea rdx, [r11 + rdx] ; jmp rdx
0x000000000008744f : lea rdx, [r8 + rdx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000006dee9 : lea rdx, [r9 + 4] ; cmp eax, 0x5d ; cmove r9, rdx ; jmp 0x6df16
0x0000000000092679 : lea rdx, [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000008d34a : lea rdx, [rax + 1] ; mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000009328e : lea rdx, [rax + 1] ; mov qword ptr [rip + 0x151037], rdx ; ret
0x000000000012b241 : lea rdx, [rcx + 0x70] ; movups xmmword ptr [rbp - 0x78], xmm7 ; call rax
0x00000000000a6d5b : lea rdx, [rcx + 1] ; mov byte ptr [rcx], 0 ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00000000000dbea0 : lea rdx, [rdi + rdi*8] ; pop rbx ; pop rbp ; lea rax, [rax + rdx*8] ; ret
0x00000000000bb212 : lea rdx, [rdi - 4] ; test eax, eax ; jne 0xbb232 ; mov rax, rdi ; ret
0x00000000001218f5 : lea rdx, [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000163e07 : lea rdx, [rdx - 0x40] ; jmp r9
0x00000000000bc689 : lea rdx, [rip + 0x11930] ; cmovne rax, rdx ; ret
0x000000000009cd69 : lea rdx, [rip + 0x13800] ; cmovne rax, rdx ; ret
0x000000000009d369 : lea rdx, [rip + 0x14e20] ; cmovne rax, rdx ; ret
0x000000000009e79b : lea rdx, [rip + 0x1b84e] ; cmove rax, rdx ; ret
0x000000000009e44b : lea rdx, [rip + 0x1bb7e] ; cmove rax, rdx ; ret
0x000000000009e2eb : lea rdx, [rip + 0x1bcfe] ; cmove rax, rdx ; ret
0x0000000000150d28 : lea rdx, [rip + 0x3711] ; call qword ptr [rax]
0x000000000012d2b5 : lea rdx, [rip + 0x3bb44] ; cmovne rax, rdx ; ret
0x000000000012d135 : lea rdx, [rip + 0x3bce4] ; cmovne rax, rdx ; ret
0x000000000012d1f5 : lea rdx, [rip + 0x3e6f4] ; cmovne rax, rdx ; ret
0x000000000012d290 : lea rdx, [rip + 0x5bd59] ; cmove rax, rdx ; ret
0x000000000012d1d0 : lea rdx, [rip + 0x5be39] ; cmove rax, rdx ; ret
0x000000000012d110 : lea rdx, [rip + 0x5bef9] ; cmove rax, rdx ; ret
0x000000000012d2df : lea rdx, [rip + 0x60a4a] ; cmove rax, rdx ; ret
0x000000000012d21f : lea rdx, [rip + 0x60b2a] ; cmove rax, rdx ; ret
0x000000000012d15f : lea rdx, [rip + 0x60bea] ; cmove rax, rdx ; ret
0x000000000012d39f : lea rdx, [rip + 0x60f3a] ; cmove rax, rdx ; ret
0x0000000000151877 : lea rdx, [rip + 0x983c2] ; mov qword ptr fs:[rax], rdx ; ret
0x00000000001474e8 : lea rdx, [rip + 0x9c671] ; jmp qword ptr [rdx + rax*8]
0x000000000009ce19 : lea rdx, [rip + 0xc40b0] ; cmovne rax, rdx ; ret
0x000000000009d3d3 : lea rdx, [rip + 0xc4d56] ; cmovne rax, rdx ; ret
0x000000000009e755 : lea rdx, [rip + 0xca6d4] ; cmovne rax, rdx ; ret
0x000000000009e405 : lea rdx, [rip + 0xcaa04] ; cmovne rax, rdx ; ret
0x000000000009e2a5 : lea rdx, [rip + 0xcd654] ; cmovne rax, rdx ; ret
0x000000000009e63c : lea rdx, [rip + 0xcfddd] ; cmovne rax, rdx ; ret
0x000000000009e59c : lea rdx, [rip + 0xcfe6d] ; cmovne rax, rdx ; ret
0x000000000009e68c : lea rdx, [rip + 0xd1edd] ; cmovne rax, rdx ; ret
0x000000000009e5ec : lea rdx, [rip + 0xd1f6d] ; cmovne rax, rdx ; ret
0x00000000000bb3aa : lea rdx, [rip + 0xd4b9f] ; cmovne rax, rdx ; ret
0x000000000009ce89 : lea rdx, [rip + 0xd5c30] ; cmovne rax, rdx ; ret
0x000000000009d429 : lea rdx, [rip + 0xd6e40] ; cmovne rax, rdx ; ret
0x000000000009e4e9 : lea rdx, [rip + 0xd8900] ; cmovne rax, rdx ; ret
0x000000000009e549 : lea rdx, [rip + 0xda0b0] ; cmovne rax, rdx ; ret
0x0000000000146234 : lea rdx, [rip + 0xe205] ; lea r9, [rsp + 0x20] ; call qword ptr [rax]
0x000000000009e730 : lea rdx, [rip + 0xea8e9] ; cmove rax, rdx ; ret
0x000000000009e3e0 : lea rdx, [rip + 0xeac19] ; cmove rax, rdx ; ret
0x000000000009e280 : lea rdx, [rip + 0xead99] ; cmove rax, rdx ; ret
0x000000000009e77f : lea rdx, [rip + 0xef5da] ; cmove rax, rdx ; ret
0x000000000009e42f : lea rdx, [rip + 0xef90a] ; cmove rax, rdx ; ret
0x000000000009e2cf : lea rdx, [rip + 0xefa8a] ; cmove rax, rdx ; ret
0x000000000009e38f : lea rdx, [rip + 0xeff5a] ; cmove rax, rdx ; ret
0x000000000009e20a : lea rdx, [rip + 0xf05cf] ; cmovne rax, rdx ; ret
0x000000000009cdbc : lea rdx, [rip + 0xf16fd] ; cmovne rax, rdx ; ret
0x000000000007ad3e : lea rdx, [rip - 0x441] ; add rax, rdx ; jmp rax
0x000000000012d17b : lea rdx, [rip - 0x731a2] ; cmove rax, rdx ; ret
0x000000000012d23b : lea rdx, [rip - 0x73262] ; cmove rax, rdx ; ret
0x000000000012d2fb : lea rdx, [rip - 0x73342] ; cmove rax, rdx ; ret
0x0000000000114fe9 : lea rdx, [rsi + 1] ; jne 0x114fc6 ; ret
0x00000000000ba062 : lea rdx, [rsi + rcx] ; cmp rdi, rdx ; jb 0xba079 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000112905 : lea rdx, [rsp + 0x30] ; mov eax, 0x10 ; syscall
0x000000000013eb30 : lea rsi, [r13 + 1] ; mov rdi, r15 ; call 0x13b609
0x000000000012c985 : lea rsi, [rbp - 0x20] ; lea rdi, [rip - 0x160] ; call rax
0x0000000000085898 : lea rsi, [rcx + 1] ; mov qword ptr [rdx + 0x28], rsi ; mov byte ptr [rcx], dil ; ret
0x0000000000085762 : lea rsi, [rcx + 4] ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x0000000000144faf : lea rsi, [rdi + 0x48] ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000059ddc : lea rsi, [rdi + rax*8] ; mov rdi, qword ptr [rsp + 0x10] ; call 0x568ab
0x00000000000642cc : lea rsi, [rip + 0x144ded] ; jmp 0x642a0
0x0000000000052e5e : lea rsi, [rip + 0x7b] ; call rax
0x0000000000136a50 : lea rsi, [rip + 0x7bfdd] ; call 0x142ca9
0x00000000001369aa : lea rsi, [rip + 0x7c083] ; mov rdi, r14 ; call 0x142cac
0x00000000001160f7 : lea rsi, [rip + 0x99464] ; call 0x823a9
0x00000000000e19cb : lea rsi, [rip + 0xcdf7a] ; mov eax, 0x142 ; syscall
0x00000000000ba073 : lea rsi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000154e94 : lea rsi, [rsp + 0x10] ; call qword ptr [rax]
0x0000000000154683 : lea rsi, [rsp + 0x10] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000147f09 : lea rsi, [rsp + 0x18] ; call qword ptr [rax]
0x0000000000154674 : lea rsi, [rsp + 8] ; call qword ptr [rax]
0x0000000000082542 : lea rsi, [rsp + 8] ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000012f10f : lea rsi, [rsp - 0x18] ; mov eax, 0x83 ; syscall
0x00000000000dfa48 : lea rsp, [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000046b20 : lea rsp, [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000081314 : lea rsp, [rbp - 0x20] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000314ee : leave ; adc al, byte ptr [rax] ; mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x00000000000ddab7 : leave ; adc byte ptr [rax], al ; test eax, eax ; jne 0xddaf4 ; mov eax, 0x74 ; syscall
0x000000000016cd17 : leave ; add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000001635a7 : leave ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000c7c73 : leave ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000e556b : leave ; add cl, byte ptr [rax - 0x7d] ; ret 0xeb02
0x000000000009d496 : leave ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000017d277 : leave ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001645b3 : leave ; add rax, 0x14634900 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000018159e : leave ; add rax, rcx ; sub rax, rdi ; ret
0x00000000000ef635 : leave ; add rdx, rax ; jmp 0xef658
0x000000000014f486 : leave ; call 0x13b6d3
0x00000000000b9f16 : leave ; cmove rax, rdx ; ret
0x00000000000863f1 : leave ; cmovne eax, edx ; mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000d2a76 : leave ; cmp edi, ecx ; je 0xd2a86 ; ret
0x000000000013df91 : leave ; je 0x13df4c ; cmp r11d, r9d ; jg 0x13df5a ; mov byte ptr [r10], 0 ; ret
0x0000000000031fdc : leave ; je 0x31fe4 ; call rcx
0x00000000000cdacc : leave ; je 0xcdadd ; xor eax, eax ; ret
0x00000000000fda44 : leave ; je 0xfda28 ; mov rax, qword ptr [rax + 0x20] ; mov qword ptr [rcx + 0x20], rax ; jmp 0xfda28
0x00000000000792bf : leave ; jg 0x792da ; add r9d, edx ; mov rax, r10 ; jmp 0x7929e
0x000000000012ef91 : leave ; jmp 0x8b1c3
0x00000000000a22c5 : leave ; jmp 0xa2294
0x00000000000a22c4 : leave ; jmp 0xa2295
0x00000000000d6934 : leave ; jmp 0xd3373
0x00000000000a6fe3 : leave ; jmp rcx
0x00000000001218ea : leave ; jne 0x1218f3 ; ret
0x0000000000121945 : leave ; jne 0x121953 ; ret
0x000000000012216c : leave ; jne 0x122173 ; ret
0x00000000001221b9 : leave ; jne 0x1221c3 ; ret
0x000000000013de45 : leave ; jne 0x13de82 ; pop rbx ; ret
0x00000000001926f3 : leave ; jne 0x192703 ; add byte ptr [rsi + 0x63], cl ; and al, 0xa2 ; add rdx, r12 ; jmp rdx
0x00000000000898a8 : leave ; jne 0x898c4 ; mov eax, dword ptr [rdx + 0x4c] ; cmp dword ptr [rdx + 0x48], eax ; cmovne eax, ecx ; ret
0x00000000000a6df9 : leave ; jne 0xa6deb ; ret
0x00000000000a6f48 : leave ; jne 0xa6f3d ; xor eax, eax ; ret
0x00000000000b9a30 : leave ; jne 0xb9a23 ; ret
0x00000000000b9ae0 : leave ; jne 0xb9ad3 ; ret
0x00000000000b9da0 : leave ; jne 0xb9d97 ; sub rax, 1 ; ret
0x00000000000baf25 : leave ; jne 0xbaef3 ; ret
0x00000000000bb14c : leave ; jne 0xbb143 ; ret
0x00000000000bb22f : leave ; jne 0xbb228 ; xor edi, edi ; mov rax, rdi ; ret
0x00000000000ce25a : leave ; jne 0xce216 ; mov rax, rdx ; ret
0x00000000000dbdac : leave ; jne 0xdbd68 ; nop ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000181330 : leave ; lea rax, [rdx + rcx] ; sub rax, rdi ; ret
0x0000000000116743 : leave ; mov al, byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000018281f : leave ; mov al, byte ptr [rdi + rdx - 1] ; mov cl, byte ptr [rsi + rdx - 1] ; sub eax, ecx ; ret
0x00000000000b4c11 : leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000007e21e : leave ; mov dword ptr [rbp - 0x4c8], 1 ; jmp rax
0x000000000012dfd1 : leave ; mov rax, rcx ; ret
0x00000000000a8bac : leave ; movzx eax, byte ptr [rax + rcx] ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x0000000000140123 : leave ; or al, byte ptr ds:[rax] ; mov rax, qword ptr fs:[rax] ; ret
0x000000000014d1f7 : leave ; or dword ptr [rax], eax ; call 0x4892a
0x0000000000058373 : leave ; ret
0x0000000000135290 : leave ; rol byte ptr [rdi], cl ; add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x0000000000167373 : leave ; sbb al, 5 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000127bb2 : leave ; shr eax, 0x1f ; cmp sil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x00000000000ed5dc : leave ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000027ab7 : leave ; xor edx, edx ; movzx eax, al ; add eax, 1 ; push rax ; call rbx
0x000000000011eea2 : leave ; xor r8d, r8d ; mov eax, 0x2c ; syscall
0x000000000011ec82 : leave ; xor r8d, r8d ; mov eax, 0x2d ; syscall
0x000000000013a0d5 : ljmp [rax + 0x4e850f02] ; add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret 0xe183
0x0000000000181a08 : ljmp [rcx] ; enter -0x73b, 0x77 ; ret
0x0000000000058667 : ljmp [rcx] ; enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000f6139 : ljmp [rcx] ; ret
0x00000000000f6b2b : ljmp [rcx] ; ret 0x6348
0x00000000000784e6 : ljmp [rcx] ; retf 0x2944
0x000000000018b2ae : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000009cb66 : lock add dword ptr [rax - 0x7b], ecx ; ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd084
0x0000000000105e46 : lock add qword ptr [rbx], r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001122a8 : lock and byte ptr [rax - 0x77], cl ; ret
0x00000000001162d1 : lock dec dword ptr [rax - 0x77] ; ret
0x0000000000122513 : lock dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000001225c8 : lock dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000115e43 : lock dec dword ptr [rax - 0x77] ; ret 0x8d48
0x000000000013fac8 : lock dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret 0x1be
0x0000000000129651 : lock dec dword ptr [rax - 0x7d] ; ret
0x0000000000116809 : lock inc dword ptr [rbp - 0x7cee8b40] ; ret
0x000000000008f120 : lodsb al, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000017c370 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000018f9c0 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000000000196260 : lodsb al, byte ptr [rsi] ; add eax, 0x39480005 ; ret
0x000000000004b221 : lodsb al, byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret 0x4418
0x00000000000fc05f : lodsb al, byte ptr [rsi] ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x00000000000ecbde : lodsb al, byte ptr [rsi] ; and ebx, 8 ; je 0xecb76 ; pop rbx ; ret
0x000000000007fdee : lodsb al, byte ptr [rsi] ; call qword ptr [rdx]
0x000000000007a540 : lodsb al, byte ptr [rsi] ; cli ; dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; retf
0x00000000000537b0 : lodsb al, byte ptr [rsi] ; cmp al, 0x19 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000013df93 : lodsb al, byte ptr [rsi] ; cmp r11d, r9d ; jg 0x13df58 ; mov byte ptr [r10], 0 ; ret
0x0000000000039450 : lodsb al, byte ptr [rsi] ; mov esp, 0xc085fffe ; jns 0x3942c ; mov r15, r12 ; jmp 0x39433
0x000000000017c994 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001062a6 : lodsb al, byte ptr [rsi] ; pop rbx ; mov eax, 5 ; pop rbp ; pop r12 ; ret
0x0000000000163ad0 : lodsb al, byte ptr [rsi] ; push rbx ; add eax, 0x14634900 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000012c8b8 : lodsb al, byte ptr [rsi] ; ret
0x00000000000637e8 : lodsb al, byte ptr [rsi] ; retf
0x00000000000823bf : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e2dbf : lodsd eax, dword ptr [rsi] ; and al, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000065593 : lodsd eax, dword ptr [rsi] ; cmp cl, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000570eb : lodsd eax, dword ptr [rsi] ; enter -0x76b4, 7 ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000015977f : lodsd eax, dword ptr [rsi] ; mov ecx, 0x8948ffec ; ret 0x8d48
0x00000000000dbdae : lodsd eax, dword ptr [rsi] ; nop ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000180500 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000f6efb : lodsd eax, dword ptr [rsi] ; pop rax ; or eax, dword ptr [rax] ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x0000000000057122 : lodsd eax, dword ptr [rsi] ; ret
0x00000000000ebe0f : lodsd eax, dword ptr [rsi] ; ret 0xc
0x000000000016658f : lodsd eax, dword ptr [rsi] ; sub al, byte ptr [rip + 0x14634900] ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000bb0ff : lodsd eax, dword ptr [rsi] ; sub eax, dword ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000bd5e7 : lodsd eax, dword ptr [rsi] ; verw cx ; retf 0xfffd
0x000000000010cfa7 : loop 0x10cffc ; mov esi, ebp ; mov edi, ebx ; mov r8d, eax ; xor eax, eax ; syscall
0x0000000000112104 : loop 0x112159 ; mov esi, ebp ; mov edi, ebx ; mov eax, 0x146 ; syscall
0x0000000000112512 : loop 0x1124dd ; adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x48 ; syscall
0x0000000000116638 : loop 0x116602 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, eax ; call 0x1128ea
0x00000000001174b5 : loop 0x11750f ; mov esi, ebp ; mov rdi, rbp ; mov eax, 9 ; syscall
0x000000000011afea : loop 0x11aff0 ; dec dword ptr [rax - 0x7f] ; ret
0x000000000011d8b1 : loop 0x11d8be ; sldt word ptr [rax] ; and eax, 0xfffff000 ; or eax, edx ; ret
0x000000000011dc73 : loop 0x11dcca ; mov esi, edi ; mov eax, 0x119 ; syscall
0x00000000001340f4 : loop 0x1340ef ; dec dword ptr [rax - 0x77] ; ret
0x000000000013c937 : loop 0x13c975 ; sar byte ptr [rsi + 0x8912], 0x89 ; fucomip st(0) ; retf 0xfd6a
0x0000000000146238 : loop 0x146242 ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call qword ptr [rax]
0x00000000001493de : loop 0x1493f0 ; xor rax, rdx ; mov qword ptr [rdi], r8 ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000149c9c : loop 0x149d26 ; movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x000000000014a6e8 : loop 0x14a66f ; ret 0x8901
0x000000000015132c : loop 0x1512be ; xor cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000015e77d : loop 0x15e7d2 ; shr eax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x000000000016ab3a : loop 0x16ab35 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016ab39 : loop 0x16ab36 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016cc5a : loop 0x16cc34 ; add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000016d65a : loop 0x16d655 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016d659 : loop 0x16d656 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000000436ca : loop 0x436d1 ; adc al, 0 ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000047c67 : loop 0x47c8e ; or rax, rdx ; ret
0x0000000000057ec8 : loop 0x57eb4 ; ret 0xffff
0x00000000000616a5 : loop 0x61692 ; jmp rsp
0x0000000000077943 : loop 0x77980 ; ret 0x820f
0x000000000007aed1 : loop 0x7af0e ; ret 0x820f
0x000000000007dbcc : loop 0x7dc09 ; ret 0x820f
0x00000000000a8c9d : loop 0xa8cd5 ; shr byte ptr [rcx], 0xc8 ; ret
0x00000000000b5f4a : loop 0xb5f55 ; add byte ptr [rax], al ; ret
0x00000000000ba67f : loop 0xba699 ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000ba97d : loop 0xba988 ; add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe3e], al ; ret 0xe9e9
0x00000000000bac5d : loop 0xbac27 ; nop ; xor eax, eax ; ret
0x00000000000cd9b7 : loop 0xcd9d4 ; je 0xcd9dc ; mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0xcda0c ; ret
0x00000000000e856a : loop 0xe85e3 ; retf
0x00000000000ecb80 : loop 0xecb8d ; and ecx, 0x80 ; cmovne eax, edx ; pop rbx ; ret
0x00000000000ecb80 : loop 0xecb8f ; and ecx, 0x80 ; cmovne eax, edx ; pop rbx ; ret
0x00000000000f3d55 : loop 0xf3d61 ; xor esi, esi ; call 0x25228
0x00000000000fd9de : loop 0xfd9e5 ; add ah, bh ; dec dword ptr [rcx] ; retf 0x5089
0x00000000001026ee : loope 0x1026f9 ; and byte ptr [rax + rax*8 - 0x76b2248b], al ; ret 0x894d
0x000000000011437a : loope 0x114381 ; mov eax, 0xa9 ; syscall
0x0000000000115694 : loope 0x11568a ; mov rdx, r9 ; jmp 0x1156ce
0x000000000012c895 : loope 0x12c8fc ; mov eax, 5 ; pop r12 ; pop rbp ; ret
0x0000000000136a95 : loope 0x136a9c ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000013ff4b : loope 0x13ffa4 ; out dx, al ; dec dword ptr [rax + 0x39] ; ret
0x000000000014bc4e : loope 0x14bbe2 ; ret
0x0000000000160bc0 : loope 0x160bac ; retf 0xf9e5
0x000000000016aaaa : loope 0x16aaa5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016aaa9 : loope 0x16aaa6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016d5ca : loope 0x16d5c5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016d5c9 : loope 0x16d5c6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001760db : loope 0x1760e2 ; add byte ptr [rax], al ; ret
0x000000000018190e : loope 0x18193f ; enter -0x73b, 0x77 ; ret
0x0000000000188653 : loope 0x1886a5 ; lea eax, [rdi + rdx] ; vzeroupper ; ret
0x000000000018e6eb : loope 0x18e6f5 ; add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x00000000001962ae : loope 0x196310 ; pop rbp ; pop r12 ; ret
0x0000000000196686 : loope 0x1966e5 ; ret
0x000000000004c37c : loope 0x4c38a ; movsxd r8, r8d ; call 0x4a11b
0x0000000000056fb7 : loope 0x57009 ; mov dword ptr [rdi], ecx ; ret
0x0000000000056fe8 : loope 0x5703b ; mov dword ptr [rdi - 8], ecx ; ret
0x000000000005705d : loope 0x570b0 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x00000000000632cb : loope 0x632db ; add byte ptr [rax], al ; test eax, eax ; jne 0x632ec ; mov rax, rbx ; pop rbx ; ret
0x000000000006e702 : loope 0x6e707 ; push rsi ; ret 0xf0a
0x000000000008a2f1 : loope 0x8a2c6 ; mov dword ptr [rdi], ecx ; ret
0x00000000000b66c9 : loope 0xb673b ; nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000000b7ee9 : loope 0xb7f5b ; nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000000b914f : loope 0xb917a ; str word ptr [rbx + 0x63] ; or al, 0x83 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000b9929 : loope 0xb9998 ; nop dword ptr [rax + rax] ; ret
0x00000000000ce45e : loope 0xce473 ; je 0xce484 ; ret
0x00000000000d6010 : loope 0xd6016 ; dec dword ptr [rax - 0x41] ; ret
0x00000000000ecb83 : loope 0xecb0c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc35b
0x00000000000ecb83 : loope 0xecb0e ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc35b
0x00000000000ecb56 : loope 0xecb5b ; add esi, esi ; ret
0x00000000000ecbca : loope 0xecbd5 ; jne 0xecb3a ; ret
0x00000000000ed629 : loope 0xed637 ; jne 0xed688 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f5ffa : loope 0xf5fff ; add esi, esi ; ret
0x00000000000f776e : loope 0xf7773 ; add esi, esi ; ret 0xf04
0x0000000000101c05 : loopne 0x101c18 ; ret
0x000000000010bce4 : loopne 0x10bcde ; ret 0x7504
0x000000000010c36f : loopne 0x10c3b5 ; pop rsp ; ret
0x000000000010c35c : loopne 0x10c3be ; pop rbp ; pop r12 ; ret
0x0000000000114a0a : loopne 0x114a6c ; pop rbp ; pop r12 ; ret
0x0000000000114a0a : loopne 0x114a71 ; pop rbp ; pop r12 ; ret
0x0000000000115454 : loopne 0x11544e ; mov qword ptr [rbp - 0x50], rax ; mov rdx, rax ; jmp 0x115491
0x00000000001155d4 : loopne 0x1155cd ; mov r13, r8 ; mov rdx, r8 ; jmp 0x115610
0x0000000000118779 : loopne 0x118785 ; mov rsi, qword ptr [rax + 8] ; test sil, 1 ; jne 0x1187ac ; ret
0x00000000001187ff : loopne 0x11880c ; or rdi, rax ; mov qword ptr [rdx], rdi ; pop rbx ; pop rbp ; ret
0x000000000011aafa : loopne 0x11ab04 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011acae : loopne 0x11acbc ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011d90c : loopne 0x11d936 ; and rax, rdi ; or rax, rsi ; ret
0x000000000011d961 : loopne 0x11d9ba ; test esp, esp ; je 0x11d97c ; mov rdi, rbp ; call r12
0x000000000011e270 : loopne 0x11e277 ; ret
0x00000000001211ee : loopne 0x1211f3 ; ret
0x000000000012120a : loopne 0x121219 ; movzx eax, ax ; ret
0x000000000012127e : loopne 0x121283 ; ret
0x000000000012131e : loopne 0x121323 ; ret
0x000000000012133a : loopne 0x12133f ; ret
0x00000000001213ae : loopne 0x1213b3 ; ret
0x00000000001213ca : loopne 0x1213d3 ; movzx eax, ax ; ret
0x000000000012143e : loopne 0x121443 ; ret
0x00000000001214ce : loopne 0x1214d3 ; ret
0x000000000012156e : loopne 0x121573 ; ret
0x000000000012160e : loopne 0x121613 ; ret
0x00000000001216ae : loopne 0x1216b3 ; ret
0x00000000001216ca : loopne 0x1216d5 ; movzx eax, ax ; ret
0x000000000012173e : loopne 0x121743 ; ret
0x00000000001217d9 : loopne 0x1217de ; ret
0x000000000012186e : loopne 0x121873 ; ret
0x0000000000121a4a : loopne 0x121a4f ; ret
0x0000000000121b90 : loopne 0x121b95 ; ret
0x0000000000121ba3 : loopne 0x121bb2 ; movzx eax, ax ; ret
0x0000000000121c10 : loopne 0x121c15 ; ret
0x0000000000121c90 : loopne 0x121c95 ; ret
0x0000000000121ca3 : loopne 0x121ca8 ; ret
0x0000000000121d10 : loopne 0x121d15 ; ret
0x0000000000121d23 : loopne 0x121d2c ; movzx eax, ax ; ret
0x0000000000121d90 : loopne 0x121d95 ; ret
0x0000000000121e10 : loopne 0x121e15 ; ret
0x0000000000121e90 : loopne 0x121e95 ; ret
0x0000000000121f10 : loopne 0x121f15 ; ret
0x0000000000121f90 : loopne 0x121f95 ; ret
0x0000000000121fa3 : loopne 0x121fae ; movzx eax, ax ; ret
0x0000000000122010 : loopne 0x122015 ; ret
0x000000000012208d : loopne 0x122092 ; ret
0x0000000000122110 : loopne 0x122115 ; ret
0x00000000001222ba : loopne 0x1222bf ; ret
0x000000000012a03e : loopne 0x12a048 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012b74b : loopne 0x12b750 ; ret
0x000000000012b7ff : loopne 0x12b7bf ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000012be58 : loopne 0x12be6d ; cmp eax, 4 ; je 0x12be67 ; ret
0x000000000012c00b : loopne 0x12c01d ; pop rbx ; pop rbp ; ret
0x000000000012c988 : loopne 0x12c9da ; lea edi, [rip - 0x160] ; call rax
0x0000000000133ecc : loopne 0x133ec2 ; lcall [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000013a474 : loopne 0x13a473 ; add eax, 0x10 ; ret
0x000000000013b5bb : loopne 0x13b5c9 ; shr rax, 4 ; and eax, 0x7f ; ret
0x000000000013b5c2 : loopne 0x13b645 ; ret
0x0000000000142f2d : loopne 0x142f38 ; pop r14 ; sub eax, 1 ; ret
0x00000000001447ea : loopne 0x14484e ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000144ea1 : loopne 0x144f10 ; nop dword ptr [rax + rax] ; ret
0x0000000000163e61 : loopne 0x163e78 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000163e60 : loopne 0x163e79 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000163fb1 : loopne 0x163fc8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000163fb0 : loopne 0x163fc9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000164101 : loopne 0x164118 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000164100 : loopne 0x164119 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000164251 : loopne 0x164268 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000164250 : loopne 0x164269 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001643a1 : loopne 0x1643b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001643a0 : loopne 0x1643b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001644f1 : loopne 0x164508 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001644f0 : loopne 0x164509 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000164641 : loopne 0x164658 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000164640 : loopne 0x164659 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016478f : loopne 0x1647a6 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016478e : loopne 0x1647a7 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001648e1 : loopne 0x1648f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001648e0 : loopne 0x1648f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000164a31 : loopne 0x164a48 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000164a30 : loopne 0x164a49 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000164b81 : loopne 0x164b98 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000164b80 : loopne 0x164b99 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000164cd1 : loopne 0x164ce8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000164cd0 : loopne 0x164ce9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000164e21 : loopne 0x164e38 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000164e20 : loopne 0x164e39 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000164f71 : loopne 0x164f88 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000164f70 : loopne 0x164f89 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001650c1 : loopne 0x1650d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001650c0 : loopne 0x1650d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001662ef : loopne 0x1662fd ; add byte ptr [rax + 0x39], cl ; retf 0x8949
0x0000000000166831 : loopne 0x166848 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000166830 : loopne 0x166849 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000166981 : loopne 0x166998 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000166980 : loopne 0x166999 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000166ad1 : loopne 0x166ae8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000166ad0 : loopne 0x166ae9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000166c21 : loopne 0x166c38 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000166c20 : loopne 0x166c39 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000166d71 : loopne 0x166d88 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000166d70 : loopne 0x166d89 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000166ec1 : loopne 0x166ed8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000166ec0 : loopne 0x166ed9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000167011 : loopne 0x167028 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000167010 : loopne 0x167029 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016715f : loopne 0x167176 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016715e : loopne 0x167177 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001672b1 : loopne 0x1672c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001672b0 : loopne 0x1672c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000167401 : loopne 0x167418 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000167400 : loopne 0x167419 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000167551 : loopne 0x167568 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000167550 : loopne 0x167569 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001676a1 : loopne 0x1676b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001676a0 : loopne 0x1676b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001677f1 : loopne 0x167808 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001677f0 : loopne 0x167809 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000167941 : loopne 0x167958 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000167940 : loopne 0x167959 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000167a91 : loopne 0x167aa8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000167a90 : loopne 0x167aa9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000017a52c : loopne 0x17a53a ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x0000000000187445 : loopne 0x187492 ; mov byte ptr [rdi + rax], 0 ; vzeroupper ; ret
0x0000000000188d25 : loopne 0x188d79 ; lea eax, [rdi + rax] ; vzeroupper ; ret
0x000000000018db73 : loopne 0x18db43 ; vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000031ec4 : loopne 0x31f14 ; test eax, eax ; je 0x31ed2 ; call rax
0x00000000000350b3 : loopne 0x350c2 ; movzx eax, ax ; ret
0x00000000000350f3 : loopne 0x350fc ; movzx eax, ax ; ret
0x0000000000035193 : loopne 0x3519e ; movzx eax, ax ; ret
0x0000000000035273 : loopne 0x35278 ; ret
0x00000000000352ec : loopne 0x352f1 ; ret
0x00000000000352fc : loopne 0x3530b ; movzx eax, ax ; ret
0x000000000003533c : loopne 0x35345 ; movzx eax, ax ; ret
0x00000000000352c3 : loopne 0x35346 ; ret
0x00000000000353dc : loopne 0x353e7 ; movzx eax, ax ; ret
0x000000000003994e : loopne 0x399b6 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000039d68 : loopne 0x39dce ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000042cc7 : loopne 0x42cae ; fsub dword ptr [rip + 0x200] ; ret
0x0000000000043455 : loopne 0x43461 ; ret
0x0000000000043984 : loopne 0x43990 ; ret
0x0000000000043e88 : loopne 0x43e96 ; add byte ptr [rax], al ; movaps xmmword ptr [rsp + 0xf0], xmm0 ; syscall
0x000000000004490c : loopne 0x4495c ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000044984 : loopne 0x449d8 ; test dword ptr [rdi], eax ; setne al ; movzx eax, al ; ret
0x0000000000053629 : loopne 0x5364d ; or eax, edx ; ret
0x0000000000055df0 : loopne 0x55e16 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000568cd : loopne 0x568d6 ; sub eax, 1 ; ret
0x000000000005adf9 : loopne 0x5ae4e ; mov ebp, edi ; lea rdi, [rdi + rax*8] ; call 0x5707a
0x000000000005c2cf : loopne 0x5c31d ; mov eax, esi ; ret
0x000000000005c2f7 : loopne 0x5c345 ; mov eax, esi ; ret
0x00000000000600df : loopne 0x6006c ; ret
0x0000000000080561 : loopne 0x805c7 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000080d2c : loopne 0x80d90 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000081317 : loopne 0x8137d ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000081316 : loopne 0x8137e ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000824bc : loopne 0x824c2 ; add byte ptr [rax], al ; jmp rax
0x00000000000824f8 : loopne 0x824fe ; add byte ptr [rax], al ; call rax
0x00000000000824c1 : loopne 0x82513 ; mov eax, 0xffffffff ; ret
0x000000000008254a : loopne 0x82550 ; add byte ptr [rax], al ; call rax
0x000000000008258c : loopne 0x82592 ; add byte ptr [rax], al ; jmp rax
0x0000000000082591 : loopne 0x82602 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000840ed : loopne 0x84161 ; nop ; cmp qword ptr [rdi + 0x48], 0 ; je 0x840bc ; call 0x90b8c
0x0000000000085d4f : loopne 0x85db3 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000086f99 : loopne 0x87001 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000088dd5 : loopne 0x88e49 ; nop dword ptr cs:[rax + rax] ; pop rbx ; ret
0x000000000008a3ec : loopne 0x8a3f5 ; mov edx, eax ; mov eax, edx ; ret
0x000000000008a400 : loopne 0x8a406 ; mov edx, eax ; jmp 0x8a3ad
0x000000000008a4dc : loopne 0x8a4e5 ; mov edx, eax ; mov eax, edx ; ret
0x000000000008a4f0 : loopne 0x8a4f6 ; mov edx, eax ; jmp 0x8a49d
0x000000000008b3e9 : loopne 0x8b44d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008c94a : loopne 0x8c9ac ; pop rbp ; pop r12 ; ret
0x000000000008d2f6 : loopne 0x8d2fb ; ret
0x000000000008d306 : loopne 0x8d30b ; ret
0x000000000008eb31 : loopne 0x8eb99 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000009a20a : loopne 0x9a212 ; cmovne rax, rdx ; ret
0x000000000009a20a : loopne 0x9a213 ; cmovne rax, rdx ; ret
0x000000000009feb7 : loopne 0x9fefd ; pop rsp ; ret
0x000000000009fea3 : loopne 0x9ff05 ; pop rbp ; pop r12 ; ret
0x00000000000a0a13 : loopne 0xa0a73 ; pop rbp ; ret
0x00000000000b01dd : loopne 0xb0250 ; pmovmskb edx, mm4 ; test edx, edx ; je 0xb01f5 ; bsf eax, edx ; ret
0x00000000000b01dd : loopne 0xb0251 ; pmovmskb edx, mm4 ; test edx, edx ; je 0xb01f6 ; bsf eax, edx ; ret
0x00000000000b604c : loopne 0xb6056 ; add byte ptr [rax], al ; ret
0x00000000000ba190 : loopne 0xba1ac ; adc dword ptr [rdi + rdx - 0x30], esi ; movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x00000000000ba249 : loopne 0xba299 ; movups xmmword ptr [rcx - 0x30], xmm0 ; movups xmmword ptr [r11], xmm4 ; ret
0x00000000000ba337 : loopne 0xba387 ; movups xmmword ptr [rcx - 0x30], xmm0 ; movups xmmword ptr [r11], xmm4 ; ret
0x00000000000ba5ed : loopne 0xba607 ; movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x00000000000ba5c1 : loopne 0xba633 ; nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x00000000000cdf52 : loopne 0xcdf7f ; je 0xcdfbc ; test al, 0xf0 ; jne 0xcdf8c ; lea rax, [rdi - 0x10] ; ret
0x00000000000cf981 : loopne 0xcf988 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000dbb7f : loopne 0xdbbe5 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000dc2bb : loopne 0xdc323 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000dc3ae : loopne 0xdc3b5 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000dc44a : loopne 0xdc451 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000e17c5 : loopne 0xe1829 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e1802 : loopne 0xe1866 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000eaf6e : loopne 0xeaff3 ; out dx, eax ; jmp 0xeaf41
0x00000000000ecaa9 : loopne 0xecab2 ; add eax, 8 ; ret
0x00000000000f0d75 : loopne 0xf0ddd ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f4548 : loopne 0xf4534 ; retf 0xf30d
0x00000000000d236d : lsl eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000014bce8 : mov ah, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000011e691 : mov ah, 0 ; add byte ptr [rax], al ; syscall
0x000000000004a014 : mov ah, 0x15 ; add byte ptr [rax + 0x63], cl ; ret 0xc748
0x000000000005ca56 : mov ah, 0x15 ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x00000000000f8072 : mov ah, 0x24 ; cwde ; add dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000058683 : mov ah, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000013583f : mov ah, 0xe8 ; retf
0x0000000000096c8f : mov ah, 0xe9 ; retf
0x00000000001961ab : mov ah, 1 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000168ea1 : mov ah, 7 ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000011614e : mov ah, 9 ; add al, ch ; ret 0xfff6
0x00000000001160f4 : mov ah, 9 ; add byte ptr [rax - 0x73], cl ; xor eax, 0x99464 ; call 0x823ac
0x000000000017b960 : mov ah, byte ptr [rsi + 0xf] ; je 0x17b930 ; lea r10, [r10 + r9] ; jmp r10
0x000000000017c730 : mov ah, byte ptr [rsi + 0xf] ; je 0x17c700 ; lea r10, [r10 + r9] ; jmp r10
0x000000000017d770 : mov ah, byte ptr [rsi + 0xf] ; je 0x17d740 ; lea r10, [r10 + r9] ; jmp r10
0x000000000017f340 : mov ah, byte ptr [rsi + 0xf] ; je 0x17f310 ; lea r10, [r10 + r9] ; jmp r10
0x0000000000030aa0 : mov al, 0 ; add byte ptr [rax], al ; call r14
0x000000000008dab1 : mov al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011e421 : mov al, 0 ; add byte ptr [rax], al ; syscall
0x00000000001478ad : mov al, 0x23 ; add byte ptr [rax], al ; pop rbp ; jmp rcx
0x000000000009ce1c : mov al, 0x40 ; or al, 0 ; cmovne rax, rdx ; ret
0x0000000000118acd : mov al, 0x41 ; call rsi
0x0000000000115459 : mov al, 0x48 ; mov edx, eax ; jmp 0x11548c
0x00000000000f3d52 : mov al, 0x48 ; shl edx, 2 ; xor esi, esi ; call 0x2522b
0x0000000000028f65 : mov al, 0x4c ; mov edi, esi ; mov rsi, r13 ; call 0x25269
0x000000000009e54c : mov al, 0xa0 ; or eax, 0x450f4800 ; ret 0x66c3
0x00000000000e658f : mov al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000185c9f : mov al, 0xc5 ; std ; xlatb ; ret
0x0000000000026b03 : mov al, 0xe8 ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x85 ; retf
0x000000000013b748 : mov al, 0xe8 ; ret 0xff3a
0x000000000017a55c : mov al, 1 ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000015d981 : mov al, 1 ; add byte ptr [rax], al ; jmp rax
0x0000000000119317 : mov al, 1 ; add byte ptr [rax], al ; mov rdi, qword ptr [r14] ; call r12
0x00000000001141ab : mov al, 1 ; add byte ptr [rsi - 0x70], ah ; mov eax, 0xa3 ; syscall
0x0000000000044c6e : mov al, 1 ; movups xmmword ptr [rdi], xmm0 ; ret
0x00000000000b607c : mov al, 4 ; add byte ptr [rax], al ; ret
0x00000000000b5c7c : mov al, 8 ; add byte ptr [rax], al ; ret
0x0000000000097f8b : mov al, byte ptr [rax + 2] ; add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000010c9e1 : mov al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000017a382 : mov al, byte ptr [rbx] ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000001784b6 : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; lea rax, [rdx + 2] ; ret
0x00000000000b1feb : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000001784e4 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; lea rax, [rdx + 4] ; ret
0x00000000000b2019 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000b209d : mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x0000000000116744 : mov al, byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000178490 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x00000000000b1fc5 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000182820 : mov al, byte ptr [rdi + rdx - 1] ; mov cl, byte ptr [rsi + rdx - 1] ; sub eax, ecx ; ret
0x0000000000080cca : mov al, byte ptr [rdx] ; add byte ptr [rax], al ; mov eax, r11d ; jmp 0x80c9d
0x000000000011b22b : mov al, ch ; mov edi, 0xe9ffff71 ; ret 0xfffe
0x0000000000182b70 : mov al, ch ; stc ; je 0x182b40 ; lea r10, [r10 + r9] ; jmp r10
0x0000000000184200 : mov al, ch ; stc ; je 0x1841d0 ; lea r10, [r10 + r9] ; jmp r10
0x00000000001172bc : mov al, dl ; or al, 0 ; ret
0x00000000001784f4 : mov ax, word ptr [rcx + 4] ; mov word ptr [rdx + 4], ax ; lea rax, [rdx + 5] ; ret
0x00000000000b2039 : mov ax, word ptr [rcx + 4] ; mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x00000000000b20bd : mov ax, word ptr [rcx + 8] ; mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x00000000001784a0 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x00000000000b1fd5 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000009bea4 : mov bh, 0x14 ; add byte ptr [rax], al ; je 0x9beb6 ; ret
0x00000000000d6406 : mov bh, 0x15 ; retf 0xd4f
0x00000000001885a1 : mov bh, 0x16 ; mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; vzeroupper ; ret
0x0000000000188c81 : mov bh, 0x16 ; mov word ptr [rdi], dx ; lea rax, [rdi + 2] ; vzeroupper ; ret
0x00000000001873a1 : mov bh, 0x16 ; mov word ptr [rdi], dx ; mov byte ptr [rdi + 2], 0 ; vzeroupper ; ret
0x000000000016b871 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000186b11 : mov bh, 0x16 ; mov word ptr [rdi], dx ; vzeroupper ; ret
0x0000000000134315 : mov bh, 0x1c ; jns 0x13438a ; and r11d, 0x840f2000 ; ret
0x00000000000ba132 : mov bh, 0x36 ; mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x0000000000140c31 : mov bh, 0x40 ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x00000000000a712f : mov bh, 0x44 ; and al, 0xec ; mov word ptr [rdi + 4], ax ; mov rax, rdi ; ret
0x0000000000152e6e : mov bh, 0x44 ; and al, 6 ; jmp 0x152e23
0x00000000000cfb50 : mov bh, 0x47 ; adc byte ptr [rcx], ch ; ror byte ptr [rbp + 0x480f0750], 1 ; ret 0xfd83
0x0000000000030def : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x00000000000d8e5a : mov bh, 0x48 ; add eax, edi ; jmp rax
0x000000000018e588 : mov bh, 0x48 ; lea eax, [rdi + 7] ; ret
0x00000000001643c5 : mov bh, 0x4a ; add eax, 0x14634900 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000cfa8f : mov bh, 0x4c ; dec byte ptr [r13 - 0x77] ; retf 0x694d
0x00000000000a7062 : mov bh, 0x54 ; and al, 0xc ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a7214 : mov bh, 0x54 ; and al, 0xec ; mov word ptr [rdi + 4], dx ; ret
0x00000000000fc520 : mov bh, 0x80 ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0f002], al ; ret 0
0x0000000000034dfe : mov bh, 0x8b ; add al, 0x10 ; ret
0x000000000009c64d : mov bh, 0x8c ; clc ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000011ec74 : mov bh, 0xc ; add byte ptr [rcx - 0x77], al ; retf 0x8b
0x00000000000350b6 : mov bh, 0xc0 ; ret
0x000000000012f334 : mov bh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x00000000000f885d : mov bh, 0xca ; dec dword ptr [rcx - 0x75] ; jg 0xf887f ; call 0x25322
0x0000000000186b21 : mov bh, 0xe ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], 0 ; vzeroupper ; ret
0x000000000012bf01 : mov bh, 0xe4 ; or eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000112fc4 : mov bh, 0xe8 ; ret 1
0x00000000001563a3 : mov bh, 0xff ; dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x000000000011f63c : mov bh, 0xff ; lea rax, [rip + 0x8e57b] ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000121206 : mov bh, 4 ; js 0x121196 ; loopne 0x12121d ; movzx eax, ax ; ret
0x0000000000121336 : mov bh, 4 ; js 0x1212c3 ; loopne 0x121343 ; ret
0x00000000001213c6 : mov bh, 4 ; js 0x121356 ; loopne 0x1213d7 ; movzx eax, ax ; ret
0x00000000001216c6 : mov bh, 4 ; js 0x121656 ; loopne 0x1216d9 ; movzx eax, ax ; ret
0x0000000000121b9f : mov bh, 4 ; js 0x121b2f ; loopne 0x121bb6 ; movzx eax, ax ; ret
0x0000000000121c9f : mov bh, 4 ; js 0x121c2c ; loopne 0x121cac ; ret
0x0000000000121d1f : mov bh, 4 ; js 0x121caf ; loopne 0x121d30 ; movzx eax, ax ; ret
0x0000000000121f9f : mov bh, 4 ; js 0x121f2f ; loopne 0x121fb2 ; movzx eax, ax ; ret
0x00000000000350af : mov bh, 4 ; js 0x3503f ; loopne 0x350c6 ; movzx eax, ax ; ret
0x00000000000350ef : mov bh, 4 ; js 0x3507f ; loopne 0x35100 ; movzx eax, ax ; ret
0x000000000003518f : mov bh, 4 ; js 0x3511f ; loopne 0x351a2 ; movzx eax, ax ; ret
0x000000000003526f : mov bh, 4 ; js 0x351fc ; loopne 0x3527c ; ret
0x00000000000352e8 : mov bh, 4 ; js 0x35275 ; loopne 0x352f5 ; ret
0x00000000000352f8 : mov bh, 4 ; js 0x35288 ; loopne 0x3530f ; movzx eax, ax ; ret
0x0000000000035338 : mov bh, 4 ; js 0x352c8 ; loopne 0x35349 ; movzx eax, ax ; ret
0x00000000000353d8 : mov bh, 4 ; js 0x35368 ; loopne 0x353eb ; movzx eax, ax ; ret
0x000000000012b743 : mov bh, 4 ; push rax ; shr ax, 0xe ; and eax, 1 ; ret
0x000000000010b8d1 : mov bh, 7 ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000000e915e : mov bh, byte ptr [rcx] ; ret 0x840f
0x000000000011e754 : mov bl, 0 ; add byte ptr [rax], al ; syscall
0x000000000018fe7e : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000005ca7f : mov bl, 0x15 ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x25e8
0x00000000000fa0c6 : mov bl, 0x48 ; add eax, ebx ; jmp rax
0x00000000000ce25c : mov bl, 0x48 ; mov eax, edx ; ret
0x0000000000064069 : mov bl, 0x4d ; adc al, 0 ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x00000000000268e9 : mov bl, 0x66 ; nop dword ptr [rax + rax] ; ret
0x00000000000fe399 : mov bl, 0x6c ; dec dword ptr [rax - 0x77] ; ret
0x000000000011eff4 : mov bl, 0xc ; add byte ptr [rcx - 0x77], al ; retf 0x8b
0x00000000000269d4 : mov bl, byte ptr [rax] ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x4864
0x000000000016a882 : mov bl, byte ptr [rdx + 0x39480007] ; retf 0x377
0x000000000013df99 : mov byte ptr [r10], 0 ; ret
0x0000000000120060 : mov byte ptr [r13 + 0x26], 0 ; mov byte ptr [rbp - 0x7c9], 0x73 ; syscall
0x00000000000a5236 : mov byte ptr [r8 - 0x77], r9b ; ret
0x0000000000115c9b : mov byte ptr [r8 - 1], 0 ; ret
0x00000000000a3b35 : mov byte ptr [rax + 0x6348c145], cl ; retf 0xd889
0x000000000013b490 : mov byte ptr [rax + 1], cl ; pop rbx ; ret
0x00000000000d58a5 : mov byte ptr [rax + 1], cl ; ret 0x8d48
0x000000000013b488 : mov byte ptr [rax + 2], 0 ; shr rcx, 3 ; mov byte ptr [rax + 1], cl ; pop rbx ; ret
0x000000000012d5a1 : mov byte ptr [rax + 3], al ; test r8b, r8b ; jne 0x12d549 ; mov rax, rdi ; ret
0x000000000012d5a0 : mov byte ptr [rax + 3], r8b ; test r8b, r8b ; jne 0x12d54a ; mov rax, rdi ; ret
0x00000000000610d4 : mov byte ptr [rax + rax + 0x63490000], al ; ret 0x8d49
0x000000000016d017 : mov byte ptr [rax + rax], 0x49 ; movsxd rdx, dword ptr [rbx + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000014d6e4 : mov byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000bb51d : mov byte ptr [rax + rbp*8], al ; cld ; pushfq ; idiv bh ; mov rax, rbx ; pop rbx ; ret
0x000000000004659c : mov byte ptr [rax + rcx*2], 0x83 ; ret
0x00000000000536de : mov byte ptr [rax + rdx], 0 ; ret
0x00000000000a5237 : mov byte ptr [rax - 0x77], cl ; ret
0x0000000000029e33 : mov byte ptr [rax - 0x7c], 0xf6 ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x0000000000115c9c : mov byte ptr [rax - 1], 0 ; ret
0x00000000000a0676 : mov byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000a6c69 : mov byte ptr [rax], 0 ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000026fb0 : mov byte ptr [rax], 0x2f ; mov byte ptr [rdi], 0 ; ret
0x000000000010b8e7 : mov byte ptr [rax], 0xff ; jne 0x10b8fb ; mov word ptr [rdi], si ; xor eax, eax ; ret
0x0000000000043d82 : mov byte ptr [rax], al ; add byte ptr [rax], al ; call 0x4414b
0x0000000000063b36 : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdx + 8], r9 ; add dword ptr [rdx + 4], 1 ; ret
0x000000000011b54f : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000011ad78 : mov byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000055e79 : mov byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000008a623 : mov byte ptr [rax], bh ; mov eax, r10d ; ret
0x0000000000061c63 : mov byte ptr [rax], bl ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x7c], 0x83 ; retf 0xebff
0x00000000001260ed : mov byte ptr [rax], bl ; movsx eax, bl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000064586 : mov byte ptr [rax], ch ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000129d39 : mov byte ptr [rax], cl ; add byte ptr [rax - 0x77], cl ; ret 0x85e9
0x00000000000b4c12 : mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000008a622 : mov byte ptr [rax], dil ; mov eax, r10d ; ret
0x000000000011297d : mov byte ptr [rbp + 0x23], dl ; mov rdx, rbp ; mov word ptr [rbp + 0x21], cx ; syscall
0x0000000000120061 : mov byte ptr [rbp + 0x26], 0 ; mov byte ptr [rbp - 0x7c9], 0x73 ; syscall
0x000000000018140e : mov byte ptr [rbp + 0x48dd74d2], 0x63 ; ror dword ptr [rax + 1], 0xf8 ; ret
0x00000000000a6aed : mov byte ptr [rbp - 0x3e], bh ; mov edi, 2 ; jmp 0xa2df7
0x00000000000a6aec : mov byte ptr [rbp - 0x3e], dil ; mov edi, 2 ; jmp 0xa2df8
0x0000000000120065 : mov byte ptr [rbp - 0x7c9], 0x73 ; syscall
0x000000000007ae8f : mov byte ptr [rbp - 0x95c], cl ; call rax
0x000000000007ae8e : mov byte ptr [rbp - 0x95c], r9b ; call rax
0x00000000000cdb0a : mov byte ptr [rbx + rcx*4], 0x56 ; cld ; mov dword ptr [rsi + rcx], edx ; test edx, edx ; jne 0xcdb13 ; ret
0x00000000000cdb0a : mov byte ptr [rbx + rcx*4], 0x56 ; cld ; mov dword ptr [rsi + rcx], edx ; test edx, edx ; jne 0xcdb14 ; ret
0x0000000000114716 : mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x0000000000052e2e : mov byte ptr [rbx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000154b49 : mov byte ptr [rbx], bpl ; mov eax, 1 ; jmp 0x154b27
0x0000000000154bd9 : mov byte ptr [rbx], bpl ; mov eax, 1 ; jmp 0x154bb7
0x0000000000154b4a : mov byte ptr [rbx], ch ; mov eax, 1 ; jmp 0x154b26
0x0000000000154bda : mov byte ptr [rbx], ch ; mov eax, 1 ; jmp 0x154bb6
0x000000000002535a : mov byte ptr [rbx], dl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000293ed : mov byte ptr [rcx + 0xf], 0x95 ; ret
0x00000000000cfb6d : mov byte ptr [rcx + 1], cl ; retf
0x0000000000176153 : mov byte ptr [rcx + 2], dl ; ret
0x0000000000176172 : mov byte ptr [rcx + 4], dl ; ret
0x00000000001761b3 : mov byte ptr [rcx + 8], dl ; ret
0x00000000000777c3 : mov byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x0000000000032c79 : mov byte ptr [rcx + rax - 0x3a], cl ; jmp rsi
0x0000000000147081 : mov byte ptr [rcx + rax - 0x3e], cl ; jmp rdx
0x00000000000c87d4 : mov byte ptr [rcx + rcx*2], 0x83 ; ret
0x00000000000a6c18 : mov byte ptr [rcx - 1], 0 ; mov qword ptr [rdx], rcx ; ret
0x00000000000a6d5f : mov byte ptr [rcx], 0 ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00000000001268d2 : mov byte ptr [rcx], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000115613 : mov byte ptr [rcx], 0xc7 ; add bl, byte ptr [rax + rsi + 0x34] ; xor byte ptr [rax - 0x7d], cl ; ret 0x4104
0x000000000012ef8f : mov byte ptr [rcx], 0xc9 ; jmp 0x8b1c5
0x00000000000745c4 : mov byte ptr [rcx], ah ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011fc2e : mov byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; retf
0x00000000000858a1 : mov byte ptr [rcx], bh ; ret
0x00000000000858a0 : mov byte ptr [rcx], dil ; ret
0x0000000000176130 : mov byte ptr [rcx], dl ; ret
0x00000000000b961a : mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000b79fb : mov byte ptr [rdi + 0x10], cl ; lea rax, [rdi + 0x11] ; ret
0x00000000000b620b : mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000b962b : mov byte ptr [rdi + 0x10], cl ; xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000b6ba8 : mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x00000000000b5538 : mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000b9630 : mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000b9652 : mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000b9670 : mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000b9690 : mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000b6c1e : mov byte ptr [rdi + 0x14], dh ; lea rax, [rdi + 0x14] ; ret
0x00000000000b558e : mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000b7a81 : mov byte ptr [rdi + 0x14], dl ; lea rax, [rdi + 0x15] ; ret
0x00000000000b6261 : mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000b96b1 : mov byte ptr [rdi + 0x14], dl ; xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000b96b6 : mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000b96d2 : mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000b96f2 : mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000b9712 : mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000b7b03 : mov byte ptr [rdi + 0x18], cl ; lea rax, [rdi + 0x19] ; ret
0x00000000000b62e3 : mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000b9733 : mov byte ptr [rdi + 0x18], cl ; xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000b6ca0 : mov byte ptr [rdi + 0x18], dh ; lea rax, [rdi + 0x18] ; ret
0x00000000000b5610 : mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000b9738 : mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000b975a : mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000b9778 : mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000b9798 : mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000b97b4 : mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000b97d4 : mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000b97f4 : mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000b9814 : mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000b63e5 : mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000b9835 : mov byte ptr [rdi + 0x20], cl ; xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000b983a : mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000b988a : mov byte ptr [rdi + 0x40], ch ; ret
0x0000000000188d45 : mov byte ptr [rdi + 0x40], cl ; lea rax, [rdi + 0x41] ; vzeroupper ; ret
0x0000000000187465 : mov byte ptr [rdi + 0x40], cl ; mov byte ptr [rdi + 0x41], 0 ; vzeroupper ; ret
0x0000000000188015 : mov byte ptr [rdi + 0x40], cl ; vzeroupper ; ret
0x0000000000187468 : mov byte ptr [rdi + 0x41], 0 ; vzeroupper ; ret
0x00000000001874bb : mov byte ptr [rdi + 0x80], 0 ; vzeroupper ; ret
0x00000000000b9560 : mov byte ptr [rdi + 0xa], ch ; ret
0x000000000013280c : mov byte ptr [rdi + 0xb], ah ; add al, ch ; cmp ebp, dword ptr [rax] ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000b957e : mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000b959e : mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000b95c0 : mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000b95e0 : mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000b9600 : mov byte ptr [rdi + 0xf], ch ; ret
0x0000000000187395 : mov byte ptr [rdi + 1], 0 ; vzeroupper ; ret
0x00000000000b9496 : mov byte ptr [rdi + 1], ch ; ret
0x000000000013b091 : mov byte ptr [rdi + 1], dh ; ret
0x000000000013b090 : mov byte ptr [rdi + 1], sil ; ret
0x00000000001885b6 : mov byte ptr [rdi + 2], 0 ; lea rax, [rdi + 2] ; vzeroupper ; ret
0x0000000000186b26 : mov byte ptr [rdi + 2], 0 ; vzeroupper ; ret
0x00000000000a70fd : mov byte ptr [rdi + 2], al ; mov rax, rdi ; ret
0x00000000000b94a8 : mov byte ptr [rdi + 2], ch ; ret
0x00000000000b6a56 : mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x00000000000b5456 : mov byte ptr [rdi + 2], dh ; ret
0x00000000000b7889 : mov byte ptr [rdi + 2], dl ; lea rax, [rdi + 3] ; ret
0x00000000000a7030 : mov byte ptr [rdi + 2], dl ; ret
0x00000000000b94b9 : mov byte ptr [rdi + 2], dl ; xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000b94be : mov byte ptr [rdi + 3], ch ; ret
0x000000000013b4c8 : mov byte ptr [rdi + 3], cl ; movdqu xmm0, xmmword ptr [rsi] ; movups xmmword ptr [rdi + rdx + 8], xmm0 ; ret
0x00000000000a711b : mov byte ptr [rdi + 4], al ; mov rax, rdi ; ret
0x00000000000b94d6 : mov byte ptr [rdi + 4], ch ; ret
0x00000000000b6a72 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x00000000000b5472 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000b78b7 : mov byte ptr [rdi + 4], dl ; lea rax, [rdi + 5] ; ret
0x00000000000a704e : mov byte ptr [rdi + 4], dl ; ret
0x00000000000b94e7 : mov byte ptr [rdi + 4], dl ; xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000b94ec : mov byte ptr [rdi + 5], ch ; ret
0x00000000000a7154 : mov byte ptr [rdi + 6], al ; mov rax, rdi ; ret
0x00000000000b94fe : mov byte ptr [rdi + 6], ch ; ret
0x00000000000a7087 : mov byte ptr [rdi + 6], dl ; ret
0x0000000000149ca2 : mov byte ptr [rdi + 7], al ; ret
0x00000000000b951c : mov byte ptr [rdi + 7], ch ; ret
0x000000000005c196 : mov byte ptr [rdi + 8], 0 ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x00000000000eaa70 : mov byte ptr [rdi + 8], 0x15 ; mov eax, 1 ; ret
0x00000000000eaa25 : mov byte ptr [rdi + 8], 0x16 ; mov eax, 1 ; ret
0x00000000000ea9f4 : mov byte ptr [rdi + 8], 0x19 ; mov eax, 1 ; ret
0x00000000000eaaa0 : mov byte ptr [rdi + 8], 0x1a ; mov eax, 2 ; ret
0x00000000000eaab0 : mov byte ptr [rdi + 8], 0x1c ; mov eax, 2 ; ret
0x00000000000eaac5 : mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x00000000000eaa8a : mov byte ptr [rdi + 8], 1 ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000eaa5c : mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; mov byte ptr [rdi], 0x5b ; ret
0x00000000000eaa0d : mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; ret
0x00000000000eaa30 : mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000b9528 : mov byte ptr [rdi + 8], ch ; ret
0x00000000000b6ac3 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x00000000000b54b3 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000000b7909 : mov byte ptr [rdi + 8], dl ; lea rax, [rdi + 9] ; ret
0x00000000000b6189 : mov byte ptr [rdi + 8], dl ; ret
0x00000000000b9539 : mov byte ptr [rdi + 8], dl ; xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000b953e : mov byte ptr [rdi + 9], ch ; ret
0x00000000001873c2 : mov byte ptr [rdi + r8], 0 ; vzeroupper ; ret
0x00000000001873c3 : mov byte ptr [rdi + rax], 0 ; vzeroupper ; ret
0x000000000013b246 : mov byte ptr [rdi + rdx], 0 ; ret
0x000000000016548b : mov byte ptr [rdi - 1], dl ; ret
0x00000000000a71a0 : mov byte ptr [rdi], 0 ; lea rax, [rdi + rax - 1] ; ret
0x0000000000188521 : mov byte ptr [rdi], 0 ; lea rax, [rdi] ; vzeroupper ; ret
0x00000000000a70d0 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x0000000000026f99 : mov byte ptr [rdi], 0 ; pop rbx ; pop r14 ; ret
0x0000000000039c46 : mov byte ptr [rdi], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000026fb3 : mov byte ptr [rdi], 0 ; ret
0x0000000000186a91 : mov byte ptr [rdi], 0 ; vzeroupper ; ret
0x00000000000eaa65 : mov byte ptr [rdi], 0x5b ; ret
0x00000000000eaa8e : mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000b9482 : mov byte ptr [rdi], ch ; ret
0x00000000000f088e : mov byte ptr [rdi], cl ; mov ebx, ds ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret 0x2f73
0x00000000000ba10b : mov byte ptr [rdi], cl ; ret
0x00000000001895d5 : mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000000a7001 : mov byte ptr [rdi], dh ; add rax, rdi ; ret
0x00000000000b6a30 : mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x00000000000b5430 : mov byte ptr [rdi], dh ; ret
0x00000000000b7862 : mov byte ptr [rdi], dl ; lea rax, [rdi + 1] ; ret
0x0000000000188c73 : mov byte ptr [rdi], dl ; lea rax, [rdi + 1] ; vzeroupper ; ret
0x0000000000187393 : mov byte ptr [rdi], dl ; mov byte ptr [rdi + 1], 0 ; vzeroupper ; ret
0x00000000000b6102 : mov byte ptr [rdi], dl ; ret
0x00000000000933e2 : mov byte ptr [rdi], dl ; test rsi, rsi ; je 0x9343c ; mov qword ptr [rsi], rdi ; ret
0x0000000000187f43 : mov byte ptr [rdi], dl ; vzeroupper ; ret
0x00000000000b9492 : mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a7000 : mov byte ptr [rdi], sil ; add rax, rdi ; ret
0x00000000000b4d9a : mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x00000000000afa54 : mov byte ptr [rdx + 0xc8b000e], bl ; mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x00000000000b1fc2 : mov byte ptr [rdx + 1], ah ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000000b1fd2 : mov byte ptr [rdx + 2], ah ; mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000001784b9 : mov byte ptr [rdx + 2], al ; lea rax, [rdx + 2] ; ret
0x00000000000b1fee : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000000b2002 : mov byte ptr [rdx + 4], ah ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000001784e7 : mov byte ptr [rdx + 4], al ; lea rax, [rdx + 4] ; ret
0x00000000000b201c : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000b4d30 : mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000000b20a0 : mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x000000000018f9bb : mov byte ptr [rdx + rdx*8 + 0xac840f], 0 ; add dh, dh ; ret 0x7501
0x000000000013b145 : mov byte ptr [rdx - 1], al ; mov qword ptr [rax], r10 ; lea eax, [r9 + r8 + 2] ; pop rbx ; ret
0x000000000011b68e : mov byte ptr [rdx], 0 ; mov rax, rbx ; pop rbx ; ret
0x0000000000133e79 : mov byte ptr [rdx], 0 ; pop r12 ; pop r13 ; ret
0x000000000013df9a : mov byte ptr [rdx], 0 ; ret
0x000000000012687d : mov byte ptr [rdx], 0xa ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000071836 : mov byte ptr [rdx], al ; jmp 0x6db05
0x0000000000178492 : mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x00000000000b1fc7 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000003396f : mov byte ptr [rip + 0x1b2f28], dl ; ret
0x0000000000115d06 : mov byte ptr [rip + 0xd2204], cl ; mov byte ptr [r8 - 1], 0 ; ret
0x000000000017ebc6 : mov byte ptr [rip - 0x7cb80000], 0xc2 ; adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000133b5e : mov byte ptr [rsi + 5], dl ; mov rax, rsi ; pop rbx ; ret
0x0000000000097969 : mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x000000000009f330 : mov byte ptr [rsi + rdx + 1], al ; jne 0x9f326 ; ret
0x000000000009f32d : mov byte ptr [rsi + rdx], cl ; mov byte ptr [rsi + rdx + 1], al ; jne 0x9f329 ; ret
0x000000000007a9b3 : mov byte ptr [rsi - 0x9ffffe3], al ; ret 0xf40
0x000000000005c333 : mov byte ptr [rsi], al ; cmp rdi, 9 ; ja 0x5c31b ; mov rax, rsi ; ret
0x000000000002c465 : mov byte ptr [rsi], dh ; add al, 0 ; add bh, dh ; ret 0xf800
0x000000000005c2a3 : mov byte ptr [rsi], dl ; cmp rdi, r8 ; jae 0x5c29a ; mov rax, rsi ; ret
0x00000000000baca9 : mov byte ptr [rsp + rbx*8 - 0x3d], dh ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000015a8f4 : mov ch, 0 ; add byte ptr [rax], al ; syscall
0x000000000013df98 : mov ch, 0x41 ; mov byte ptr [rdx], 0 ; ret
0x00000000000f4ad5 : mov ch, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x00000000000dcbca : mov ch, 0x89 ; rol dword ptr [rbx - 0x7df0f706], 1 ; retf 0
0x000000000011ee94 : mov ch, 0xc ; add byte ptr [rcx - 0x77], al ; retf 0x8b
0x00000000000d9bf7 : mov ch, 0xf4 ; inc edi ; add ecx, dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000d1f3e : mov ch, 0xfb ; dec dword ptr [rax + 0x39] ; ret
0x000000000018be26 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007b8aa : mov ch, 8 ; idiv edi ; dec dword ptr [rax + 0x29] ; ret 0xb8
0x00000000000ce470 : mov ch, dh ; and ch, 0xf ; je 0xce49b ; add rax, 2 ; ret
0x000000000009b4bd : mov cl, 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000011e4e1 : mov cl, 0 ; add byte ptr [rax], al ; syscall
0x0000000000099ac4 : mov cl, 0x14 ; add dh, dh ; ret 0x7404
0x00000000001580e0 : mov cl, 0x15 ; retf 0x923
0x0000000000028803 : mov cl, 0x17 ; sbb al, 0 ; ret
0x00000000000392d3 : mov cl, 0x35 ; call rsi
0x000000000012c26d : mov cl, 0x35 ; lodsd eax, dword ptr [rsi] ; ret
0x000000000014d191 : mov cl, 0x35 ; push rbp ; retf 9
0x000000000013268f : mov cl, 0x35 ; retf
0x0000000000194737 : mov cl, 0x45 ; xor edx, edx ; jmp 0x19470d
0x0000000000144e98 : mov cl, 0x48 ; shr edx, 3 ; add rax, rcx ; jmp rax
0x0000000000060d3b : mov cl, 0x59 ; add al, byte ptr [rax] ; cmp eax, -1 ; sete al ; jmp 0x60d15
0x000000000011fafb : mov cl, 0x6e ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x0000000000085106 : mov cl, 0x89 ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006d4f7 : mov cl, 0xc3 ; adc eax, dword ptr [rax] ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000009e34e : mov cl, 0xe ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000015d3d0 : mov cl, 0xe9 ; add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000116f83 : mov cl, 0xf2 ; lock dec dword ptr [rax - 0x77] ; ret
0x0000000000033728 : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x0000000000129ac3 : mov cl, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001218e5 : mov cl, byte ptr [rbx - 0x367acef4] ; jne 0x1218f8 ; ret
0x0000000000121940 : mov cl, byte ptr [rbx - 0x367acef4] ; jne 0x121958 ; ret
0x0000000000122167 : mov cl, byte ptr [rbx - 0x367acef4] ; jne 0x122178 ; ret
0x00000000001221b4 : mov cl, byte ptr [rbx - 0x367acef4] ; jne 0x1221c8 ; ret
0x00000000000ad415 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x000000000015d8b5 : mov cl, byte ptr [rcx - 0x75] ; or byte ptr [rax - 0x75], cl ; adc ecx, dword ptr [rax + 1] ; ret 0x3949
0x00000000000a7644 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x00000000000b6204 : mov cl, byte ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x0000000000182824 : mov cl, byte ptr [rsi + rdx - 1] ; sub eax, ecx ; ret
0x000000000018d4e0 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000ce45b : mov cl, dl ; and cl, 0xf ; je 0xce487 ; ret
0x000000000012a3de : mov cs, word ptr [rax - 0x3f] ; clc ; add ecx, dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0xc083
0x0000000000121b09 : mov cs, word ptr [rbx - 0x2d7aeeec] ; jne 0x121b20 ; ret
0x0000000000122369 : mov cs, word ptr [rbx - 0x2d7aeeec] ; jne 0x122380 ; ret
0x000000000012fed9 : mov cs, word ptr [rbx] ; add al, ch ; outsd dx, dword ptr [rsi] ; push rcx ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000d236c : mov cs, word ptr [rdi] ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000106a54 : mov cs, word ptr [rdx] ; add al, ch ; je 0x106ac9 ; stc ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000001832de : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x0000000000124476 : mov cs, word ptr [rsi] ; lock dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000018d4ce : mov cx, word ptr [rcx - 2] ; mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x00000000000b5544 : mov cx, word ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000001658d4 : mov cx, word ptr [rsi - 2] ; mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x00000000000b6120 : mov cx, word ptr [rsi] ; mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x000000000016b804 : mov cx, word ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000000b5450 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000015a944 : mov dh, 0 ; add byte ptr [rax], al ; syscall
0x000000000008ea2d : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008d353 : mov dh, 0 ; ret
0x000000000008aaf3 : mov dh, 0x10 ; pop rbx ; mov eax, edx ; ret
0x00000000000a6cd7 : mov dh, 0x11 ; test dl, dl ; jne 0xa6cd3 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00000000000efcba : mov dh, 0x14 ; adc dword ptr [rcx], eax ; ret 0x428d
0x000000000009a281 : mov dh, 0x14 ; add dword ptr [rax + rdi - 0x3e], eax ; jne 0x9a27c ; sub rax, 0x10 ; ret
0x0000000000188c71 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; lea rax, [rdi + 1] ; vzeroupper ; ret
0x0000000000187391 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; mov byte ptr [rdi + 1], 0 ; vzeroupper ; ret
0x000000000016b8e1 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000187f41 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; vzeroupper ; ret
0x00000000000aaed4 : mov dh, 0x16 ; sub eax, edx ; ret
0x0000000000041e79 : mov dh, 0x17 ; test dl, dl ; jne 0x41e5e ; ret
0x0000000000154b46 : mov dh, 0x2c ; and al, 0x40 ; mov byte ptr [rbx], ch ; mov eax, 1 ; jmp 0x154b2a
0x0000000000154bd6 : mov dh, 0x2c ; and al, 0x40 ; mov byte ptr [rbx], ch ; mov eax, 1 ; jmp 0x154bba
0x00000000000a6c0a : mov dh, 0x31 ; test sil, sil ; jne 0xa6c0a ; mov qword ptr [rdx], rcx ; ret
0x00000000000418d9 : mov dh, 0x3c ; or cl, ch ; ret 0xfffc
0x00000000000d6a01 : mov dh, 0x40 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000e5567 : mov dh, 0x42 ; add al, byte ptr [rbx - 0x7cb7fd37] ; ret 0xeb02
0x00000000000e5529 : mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000e5539 : mov dh, 0x42 ; add dword ptr [rbx - 0x7cb7fb37], eax ; ret 0xeb01
0x000000000013b356 : mov dh, 0x42 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x000000000014213c : mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000e6781 : mov dh, 0x43 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a7150 : mov dh, 0x44 ; and al, 0xe ; mov byte ptr [rdi + 6], al ; mov rax, rdi ; ret
0x0000000000196da9 : mov dh, 0x44 ; and al, 0xf ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000a7117 : mov dh, 0x44 ; and al, 0xf4 ; mov byte ptr [rdi + 4], al ; mov rax, rdi ; ret
0x00000000000a70f9 : mov dh, 0x44 ; and al, 0xfa ; mov byte ptr [rdi + 2], al ; mov rax, rdi ; ret
0x0000000000074c99 : mov dh, 0x46 ; or al, 0x83 ; ret
0x000000000018fa51 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000018fa41 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000018fa11 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000018fa31 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000018fa21 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x00000000001133dc : mov dh, 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000efce2 : mov dh, 0x48 ; movsxd rdx, edx ; mov eax, 1 ; add rdx, rcx ; jmp 0xefd0c
0x00000000000fe22d : mov dh, 0x4a ; or byte ptr [rax + 0x63], cl ; or al, 0x8f ; add rcx, rdi ; jmp rcx
0x00000000000d6b71 : mov dh, 0x4b ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000600c2 : mov dh, 0x50 ; or al, 0xf6 ; ret 0xf01
0x00000000000f2cb5 : mov dh, 0x50 ; or al, byte ptr [rcx - 0x77] ; retf 0xeac0
0x00000000000fac0d : mov dh, 0x54 ; adc eax, 0x105c8d00 ; add dword ptr [rax + 0x63], ecx ; ret
0x00000000000a7083 : mov dh, 0x54 ; and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x00000000000a7235 : mov dh, 0x54 ; and al, 0xe ; mov byte ptr [rdi + 6], dl ; ret
0x00000000000a704a : mov dh, 0x54 ; and al, 0xf4 ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a702c : mov dh, 0x54 ; and al, 0xfa ; mov byte ptr [rdi + 2], dl ; ret
0x00000000001817b6 : mov dh, 0x54 ; cmp ah, byte ptr [rax] ; sub eax, edx ; vzeroupper ; ret
0x000000000018fa55 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x000000000018fa45 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x000000000018fa15 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x0000000000061f32 : mov dh, 0x56 ; or al, 0xf6 ; ret 0x7401
0x000000000006221d : mov dh, 0x56 ; or al, 0xf6 ; ret 0x7440
0x000000000018fa25 : mov dh, 0x56 ; sub eax, edx ; ret
0x00000000000f6ae3 : mov dh, 0x57 ; cmp dh, dh ; ret 0xf08
0x000000000007a9ef : mov dh, 0x57 ; or al, 0x83 ; ret
0x000000000007a9ad : mov dh, 0x57 ; or al, 0x84 ; ror byte ptr [rdi], cl ; mov byte ptr [rsi - 0x9ffffe3], al ; ret 0xf40
0x000000000007a983 : mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x00000000000f7283 : mov dh, 0x58 ; cmp dh, dh ; ret
0x000000000005de50 : mov dh, 0x58 ; or al, 0x89 ; fdiv st(6) ; ret
0x000000000005d004 : mov dh, 0x58 ; or al, 0xf6 ; ret
0x0000000000141409 : mov dh, 0x66 ; nop dword ptr [rax + rax] ; ret
0x000000000009162d : mov dh, 0x70 ; adc eax, dword ptr [rcx - 0x78] ; je 0x91662 ; adc ecx, dword ptr [rax - 0x7d] ; ret 0x4901
0x0000000000066d5b : mov dh, 0x70 ; add ch, cl ; retf
0x00000000000495a9 : mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000a6289 : mov dh, 0x74 ; syscall
0x00000000000ef18b : mov dh, 0x7b ; or byte ptr [rbx - 0x76bac7b2], cl ; ret 0x418d
0x00000000000d5f1d : mov dh, 0x83 ; ret 0x4c01
0x00000000000fbf11 : mov dh, 0xbc ; and al, 0x18 ; add dword ptr [rax], eax ; add al, ch ; ret
0x00000000000a4482 : mov dh, 0xc ; add byte ptr [rbp + 0x38], al ; retf 0x7675
0x000000000011ed34 : mov dh, 0xc ; add byte ptr [rcx - 0x77], al ; retf 0x8b
0x00000000000eb269 : mov dh, 0xc ; or byte ptr [rax + 0x63], cl ; ret
0x0000000000027abb : mov dh, 0xc0 ; add eax, 1 ; push rax ; call rbx
0x000000000014cab7 : mov dh, 0xc0 ; add eax, 1 ; ret
0x000000000015614c : mov dh, 0xc0 ; add rsp, 0x18 ; ret
0x000000000010e992 : mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x0000000000148f41 : mov dh, 0xc0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000015e3d2 : mov dh, 0xc0 ; jmp 0x15e3a3
0x00000000000cc9ce : mov dh, 0xc0 ; lea eax, [rax + rax - 1] ; ret
0x00000000000e374f : mov dh, 0xc0 ; lea rax, [rax + rax - 1] ; ret
0x00000000000e9110 : mov dh, 0xc0 ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x0000000000064bd5 : mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000065ceb : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000639f8 : mov dh, 0xc0 ; neg eax ; pop rbx ; ret
0x00000000000639ca : mov dh, 0xc0 ; neg eax ; ret
0x000000000008d3da : mov dh, 0xc0 ; pop rbx ; neg eax ; ret
0x000000000014798f : mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x000000000004498c : mov dh, 0xc0 ; ret
0x00000000000aaef4 : mov dh, 0xc0 ; sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00000000000d6af6 : mov dh, 0xc1 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000ba651 : mov dh, 0xc1 ; pop rbx ; ret
0x000000000013e38f : mov dh, 0xc3 ; neg eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000090036 : mov dh, 0xc5 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ba45e : mov dh, 0xc6 ; mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000012f351 : mov dh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x0000000000029e32 : mov dh, 0xc6 ; test sil, sil ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x00000000000f8a4c : mov dh, 0xd1 ; movsxd rax, dword ptr [rsi + rdx*4] ; mov r11, rdi ; add rax, rsi ; jmp rax
0x00000000000fdaf7 : mov dh, 0xd1 ; movsxd rdx, dword ptr [r8 + rdx*4] ; add rdx, r8 ; jmp rdx
0x000000000018b946 : mov dh, 0xd2 ; add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00000000000aaefa : mov dh, 0xd2 ; sub eax, edx ; ret
0x000000000011d8c5 : mov dh, 0xd7 ; shr rax, 0xc ; xor al, al ; or eax, edx ; ret
0x00000000000ba109 : mov dh, 0xe ; mov byte ptr [rdi], cl ; ret
0x00000000000a89f1 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000181df1 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; vzeroupper ; ret
0x0000000000182834 : mov dh, 0xe ; sub eax, ecx ; ret
0x00000000000ee743 : mov dh, 0xe4 ; movsxd rax, dword ptr [rcx + r12*4] ; add rax, rcx ; jmp rax
0x0000000000043826 : mov dh, 0xed ; adc al, 0 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000fc7da : mov dh, 0xed ; movsxd rax, dword ptr [rdi + r13*4] ; add rax, rdi ; jmp rax
0x00000000000ee83a : mov dh, 0xed ; movsxd rax, dword ptr [rdx + r13*4] ; add rax, rdx ; jmp rax
0x00000000000fa0c1 : mov dh, 0xf6 ; movsxd rax, dword ptr [rbx + rsi*4] ; add rax, rbx ; jmp rax
0x00000000000fca5c : mov dh, 0xf6 ; movsxd rax, dword ptr [rdi + rsi*4] ; add rax, rdi ; jmp rax
0x000000000004189e : mov dh, 0xf8 ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000008fec1 : mov dh, 2 ; ret
0x00000000000c5244 : mov dh, 4 ; add bh, byte ptr [rip + 0xff] ; je 0xc5259 ; ret
0x000000000007763b : mov dh, 4 ; add byte ptr [rax + 0x63], cl ; add al, 0x87 ; add rax, r14 ; jmp rax
0x00000000000416a8 : mov dh, 4 ; or byte ptr [rax - 0x77], cl ; ret 0xc085
0x00000000000e6541 : mov dh, 7 ; add rdi, 1 ; test al, al ; jne 0xe652d ; xor eax, eax ; ret
0x0000000000182831 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000aaed1 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000000a89f4 : mov dh, 7 ; sub eax, ecx ; ret
0x0000000000181df4 : mov dh, 7 ; sub eax, ecx ; vzeroupper ; ret
0x00000000000dc82c : mov dh, ah ; dec dword ptr [rax - 0x77] ; ret
0x000000000002e39a : mov dl, 0 ; add byte ptr [rax], al ; mov rsi, rax ; jmp 0x2e36d
0x000000000011e724 : mov dl, 0 ; add byte ptr [rax], al ; syscall
0x00000000000394d7 : mov dl, 0x1a ; add byte ptr [rax - 0x77], cl ; ret
0x000000000016718a : mov dl, 0x1e ; add eax, 0x14634900 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000e2ffe : mov dl, 0x48 ; add eax, edx ; jmp rax
0x0000000000196c1d : mov dl, 0x66 ; nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c6b43 : mov dl, 0x83 ; ret
0x00000000001471bd : mov dl, 0x8b ; push rax ; or byte ptr [rdi], cl ; retf 0xd189
0x000000000010a0e2 : mov dl, 0xf1 ; dec dword ptr [rax - 0x7d] ; ret
0x000000000009bebf : mov dl, 0xfa ; dec dword ptr [rax - 0x77] ; ret
0x00000000001218f8 : mov dl, 3 ; add al, 0xa ; ret
0x000000000017a35a : mov dl, 3 ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x0000000000121912 : mov dl, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x8b40
0x0000000000122136 : mov dl, al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x74b7fe3f], al ; push rsp ; retf 0x8b40
0x00000000000b6123 : mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000b78b2 : mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, [rdi + 5] ; ret
0x00000000000b6142 : mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000b6183 : mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x0000000000165510 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000000b7860 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, [rdi + 1] ; ret
0x00000000000b6100 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000b9490 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x0000000000058f83 : mov ds, eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xc001
0x00000000001019b6 : mov dword ptr [0x40], 0 ; ret
0x00000000000ce8ad : mov dword ptr [r11 + 0xc], r8d ; ret
0x00000000000f4dfb : mov dword ptr [r12 + 4], r13d ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000030f92 : mov dword ptr [r12], edx ; jmp 0x30f5f
0x0000000000139841 : mov dword ptr [r14], r15d ; mov eax, 3 ; mov edi, dword ptr [rbp - 0x60] ; syscall
0x000000000014ea50 : mov dword ptr [r8 + 0x48], eax ; mov eax, 1 ; ret
0x000000000014e9b5 : mov dword ptr [r8 + 0x54], eax ; mov eax, 1 ; ret
0x000000000014ea7d : mov dword ptr [r8 + 0x58], eax ; mov eax, 1 ; ret
0x000000000014bdd0 : mov dword ptr [r8 + 0xa8], eax ; mov eax, 1 ; ret
0x000000000014bce5 : mov dword ptr [r8 + 0xb4], eax ; mov eax, 1 ; ret
0x000000000014bdfd : mov dword ptr [r8 + 0xb8], eax ; mov eax, 1 ; ret
0x00000000000baf20 : mov dword ptr [r8 + 4], ecx ; test ecx, ecx ; jne 0xbaef8 ; ret
0x000000000013b35d : mov dword ptr [r8], eax ; mov eax, edx ; mov qword ptr [r9], r10 ; ret
0x000000000012c680 : mov dword ptr [r8], edx ; xor eax, eax ; ret
0x000000000013b3b8 : mov dword ptr [r8], r10d ; mov qword ptr [r9], rax ; mov eax, edx ; ret
0x000000000018d4d6 : mov dword ptr [r9 - 2], ecx ; ret
0x000000000018d4c1 : mov dword ptr [r9 - 4], ecx ; ret
0x0000000000086397 : mov dword ptr [rax + 0x10], ecx ; mov qword ptr [rax + 0x40], rdx ; movups xmmword ptr [rax], xmm0 ; ret
0x0000000000087489 : mov dword ptr [rax + 0x10], edi ; mov qword ptr [rax + 0x40], rsi ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000086359 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000014e9c7 : mov dword ptr [rax + 0x18], 1 ; movups xmmword ptr [r8 + 8], xmm0 ; ret
0x0000000000086b48 : mov dword ptr [rax + 0x18], edx ; xor eax, eax ; mov dword ptr [rbx], ecx ; pop rbx ; ret
0x00000000000937d3 : mov dword ptr [rax + 0x20], edx ; add rsp, 0x18 ; ret
0x000000000008c21c : mov dword ptr [rax + 0x20], edx ; pop rbx ; ret
0x0000000000086b44 : mov dword ptr [rax + 0x28], edx ; mov qword ptr [rax + 0x18], rdx ; xor eax, eax ; mov dword ptr [rbx], ecx ; pop rbx ; ret
0x000000000008635d : mov dword ptr [rax + 0x40], ecx ; ret
0x000000000008639b : mov dword ptr [rax + 0x40], edx ; movups xmmword ptr [rax], xmm0 ; ret
0x000000000008748d : mov dword ptr [rax + 0x40], esi ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000014ea51 : mov dword ptr [rax + 0x48], eax ; mov eax, 1 ; ret
0x00000000000871ce : mov dword ptr [rax + 0x50], 0 ; movups xmmword ptr [rax + 0x40], xmm0 ; pop rbx ; ret
0x000000000014e9b6 : mov dword ptr [rax + 0x54], eax ; mov eax, 1 ; ret
0x000000000014ea7e : mov dword ptr [rax + 0x58], eax ; mov eax, 1 ; ret
0x000000000014bdd1 : mov dword ptr [rax + 0xa8], eax ; mov eax, 1 ; ret
0x000000000014bce6 : mov dword ptr [rax + 0xb4], eax ; mov eax, 1 ; ret
0x000000000014bdfe : mov dword ptr [rax + 0xb8], eax ; mov eax, 1 ; ret
0x000000000012e5e3 : mov dword ptr [rax + 0xc], edx ; test r10d, r10d ; jne 0x12e58f ; mov rax, rdi ; ret
0x000000000010b6a2 : mov dword ptr [rax + 0xc], esp ; xor eax, eax ; mov dword ptr [rbx + 4], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e5e2 : mov dword ptr [rax + 0xc], r10d ; test r10d, r10d ; jne 0x12e590 ; mov rax, rdi ; ret
0x000000000014bda1 : mov dword ptr [rax + 4], 0 ; mov eax, 1 ; ret
0x000000000014bd91 : mov dword ptr [rax + 4], 1 ; mov eax, 1 ; ret
0x00000000000baf21 : mov dword ptr [rax + 4], ecx ; test ecx, ecx ; jne 0xbaef7 ; ret
0x00000000001401fe : mov dword ptr [rax + 8], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000091991 : mov dword ptr [rax + 8], 0 ; ret
0x0000000000118840 : mov dword ptr [rax + 8], ecx ; jmp 0x11880b
0x000000000008c214 : mov dword ptr [rax + 8], edx ; mov rdx, qword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x0000000000056524 : mov dword ptr [rax + rcx*8], edx ; xor eax, eax ; ret
0x00000000000e26cd : mov dword ptr [rax + rdx - 2], ecx ; jmp 0xe260d
0x0000000000159a7b : mov dword ptr [rax - 0x76b70014], edi ; ret
0x0000000000155bcc : mov dword ptr [rax - 4], edx ; mov qword ptr [rdi + 0x18], rax ; mov eax, 1 ; ret
0x000000000014cc84 : mov dword ptr [rax], 0 ; mov eax, 0xffffffff ; jmp 0x14cc68
0x00000000001563bd : mov dword ptr [rax], 0 ; pop rbx ; ret
0x000000000013dfd2 : mov dword ptr [rax], 0 ; ret
0x000000000010e05a : mov dword ptr [rax], 0x16 ; jmp 0x10e033
0x0000000000043f38 : mov dword ptr [rax], 0x16 ; mov eax, 0xffffffff ; ret
0x0000000000111588 : mov dword ptr [rax], 0x16 ; mov eax, 1 ; ret
0x000000000005f56d : mov dword ptr [rax], 0x16 ; mov eax, edx ; ret
0x0000000000118418 : mov dword ptr [rax], 0x16 ; ret
0x00000000000ceab8 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x000000000008ccf8 : mov dword ptr [rax], 0x1c ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000043a94 : mov dword ptr [rax], 0x22 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000042d32 : mov dword ptr [rax], 0x22 ; add rsp, 8 ; ret
0x00000000000449b8 : mov dword ptr [rax], 0x26 ; mov eax, 0xffffffff ; ret
0x000000000015e868 : mov dword ptr [rax], 0x26 ; xor eax, eax ; ret
0x0000000000042108 : mov dword ptr [rax], 0x2a ; mov rax, rcx ; ret
0x00000000000ce9aa : mov dword ptr [rax], 0x4b ; mov rax, rbx ; pop rbx ; ret
0x00000000000cea98 : mov dword ptr [rax], 0x4b ; xor eax, eax ; add rsp, 8 ; ret
0x000000000010cbd8 : mov dword ptr [rax], 0x5f ; mov eax, 0xffffffff ; ret
0x000000000005c56f : mov dword ptr [rax], 0x89482275 ; ret 0x8948
0x0000000000113340 : mov dword ptr [rax], 0xc ; mov eax, 0xffffffff ; ret
0x000000000009799a : mov dword ptr [rax], 0xc ; mov rax, rsi ; ret
0x000000000009c7e4 : mov dword ptr [rax], 0xc ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000999e0 : mov dword ptr [rax], 0xc ; xor eax, eax ; pop rbx ; ret
0x000000000009c608 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x000000000011332c : mov dword ptr [rax], 0xffffffff ; xor eax, eax ; ret
0x000000000011ba48 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x0000000000048c08 : mov dword ptr [rax], 5 ; mov eax, 0xffffffff ; ret
0x0000000000042168 : mov dword ptr [rax], 9 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000089275 : mov dword ptr [rax], 9 ; mov eax, 0xffffffff ; ret
0x0000000000027418 : mov dword ptr [rax], 9 ; mov eax, edi ; ret
0x0000000000155d5b : mov dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cd973 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000010c9b1 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000101984 : mov dword ptr [rax], eax ; mov eax, 0xffffffff ; ret
0x000000000013b35e : mov dword ptr [rax], eax ; mov eax, edx ; mov qword ptr [r9], r10 ; ret
0x000000000006c559 : mov dword ptr [rax], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000084bda : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x0000000000071d48 : mov dword ptr [rax], edi ; jmp 0x6e019
0x0000000000115ba1 : mov dword ptr [rax], edi ; mov eax, 0xffffffff ; ret
0x0000000000098a3c : mov dword ptr [rax], edi ; ret
0x000000000011d9c3 : mov dword ptr [rax], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013b149 : mov dword ptr [rax], edx ; lea eax, [r9 + r8 + 2] ; pop rbx ; ret
0x00000000001019d2 : mov dword ptr [rax], edx ; mov eax, 0xffffffff ; ret
0x00000000001480c3 : mov dword ptr [rax], edx ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000086c65 : mov dword ptr [rax], edx ; mov eax, dword ptr [rcx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013b3b9 : mov dword ptr [rax], edx ; mov qword ptr [r9], rax ; mov eax, edx ; ret
0x0000000000086356 : mov dword ptr [rax], edx ; mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000094be2 : mov dword ptr [rax], edx ; mov rax, rdx ; add rsp, 8 ; ret
0x0000000000034d68 : mov dword ptr [rax], edx ; ret
0x00000000000bb47f : mov dword ptr [rax], edx ; test edx, edx ; jne 0xbb47e ; ret
0x0000000000087454 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x00000000001062f7 : mov dword ptr [rax], esi ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000098a32 : mov dword ptr [rax], esi ; mov rax, qword ptr [rip + 0x14b4a5] ; mov qword ptr [rax], rdi ; ret
0x0000000000093898 : mov dword ptr [rax], esi ; mov rax, qword ptr [rip + 0x15063f] ; mov qword ptr [rax], rdx ; ret
0x00000000000eaee5 : mov dword ptr [rax], esp ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000eaee4 : mov dword ptr [rax], r12d ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000071d47 : mov dword ptr [rax], r15d ; jmp 0x6e01a
0x0000000000101983 : mov dword ptr [rax], r8d ; mov eax, 0xffffffff ; ret
0x00000000000bbff3 : mov dword ptr [rbp + 0x12], edx ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000112984 : mov dword ptr [rbp + 0x21], ecx ; syscall
0x00000000000a0835 : mov dword ptr [rbp + 0x38], 0x940f41d0 ; ret
0x000000000014cb20 : mov dword ptr [rbp + 0x58], 0x28 ; pop rbp ; pop r12 ; ret
0x00000000000bfc0d : mov dword ptr [rbp + rdx*8], eax ; jmp 0xbfb74
0x00000000000e87e8 : mov dword ptr [rbp - 0x2920], edx ; call 0x25258
0x00000000000e87e7 : mov dword ptr [rbp - 0x2920], r10d ; call 0x25259
0x0000000000071d41 : mov dword ptr [rbp - 0x470], edx ; mov dword ptr [rax], r15d ; jmp 0x6e020
0x0000000000073b86 : mov dword ptr [rbp - 0x4b8], eax ; jmp 0x72a96
0x0000000000073a3c : mov dword ptr [rbp - 0x4b8], eax ; jmp 0x72c5f
0x000000000007e21f : mov dword ptr [rbp - 0x4c8], 1 ; jmp rax
0x00000000000710d1 : mov dword ptr [rbp - 0x4d0], edx ; jmp 0x6dbb9
0x0000000000071524 : mov dword ptr [rbp - 0x4d0], edx ; jmp 0x6df7c
0x0000000000077779 : mov dword ptr [rbp - 0x4f0], 1 ; jmp rax
0x000000000007cf32 : mov dword ptr [rbp - 0x4f0], edi ; jmp rax
0x000000000007d148 : mov dword ptr [rbp - 0x4f8], 0 ; jmp rax
0x000000000007e0c0 : mov dword ptr [rbp - 0x4f8], 1 ; jmp rax
0x0000000000077733 : mov dword ptr [rbp - 0x500], 1 ; jmp rax
0x000000000007dfd8 : mov dword ptr [rbp - 0x508], 0x20 ; jmp rax
0x0000000000076f7b : mov dword ptr [rbp - 0x508], ecx ; jmp rax
0x000000000012cd39 : mov dword ptr [rbp - 0x50], eax ; jmp 0x12ccc0
0x0000000000115457 : mov dword ptr [rbp - 0x50], eax ; mov rdx, rax ; jmp 0x11548e
0x0000000000118acb : mov dword ptr [rbp - 0x50], edi ; call r14
0x0000000000118aca : mov dword ptr [rbp - 0x50], r15d ; call r14
0x0000000000073597 : mov dword ptr [rbp - 0x524], ebx ; jmp 0x6c82c
0x0000000000071fd2 : mov dword ptr [rbp - 0x528], eax ; jmp 0x6e22d
0x000000000007dec8 : mov dword ptr [rbp - 0x530], 0 ; jmp rax
0x0000000000071eba : mov dword ptr [rbp - 0x558], esp ; mov qword ptr [rdi], rax ; jmp 0x6e939
0x000000000007780e : mov dword ptr [rbp - 0x560], 1 ; jmp rax
0x00000000000736bc : mov dword ptr [rbp - 0x570], eax ; jmp 0x701b9
0x000000000006a552 : mov dword ptr [rbp - 0x5a0], edx ; jmp 0x66fd8
0x0000000000028e42 : mov dword ptr [rbp - 0x68], eax ; mov esi, 0x3a ; call 0x2514a
0x000000000010c95b : mov dword ptr [rbp - 0x77], 0xca8948c2 ; mov eax, 0x106 ; syscall
0x000000000012ae29 : mov dword ptr [rbp - 0x80], 0 ; movups xmmword ptr [rbp - 0x78], xmm7 ; call rcx
0x000000000012abb1 : mov dword ptr [rbp - 0x80], eax ; movups xmmword ptr [rbp - 0x78], xmm2 ; call r8
0x000000000012ad59 : mov dword ptr [rbp - 0x80], eax ; movups xmmword ptr [rbp - 0x78], xmm3 ; call r8
0x000000000012b23e : mov dword ptr [rbp - 0x80], edx ; lea rdx, [rcx + 0x70] ; movups xmmword ptr [rbp - 0x78], xmm7 ; call rax
0x000000000012b16d : mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; movups xmmword ptr [rbp - 0x78], xmm6 ; call rax
0x000000000012b599 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; movups xmmword ptr [rbp - 0x78], xmm7 ; call rax
0x000000000012aa0c : mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; movups xmmword ptr [rbp - 0x78], xmm1 ; call rax
0x000000000012ac3a : mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; movups xmmword ptr [rbp - 0x78], xmm5 ; call rax
0x000000000012aca5 : mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; movups xmmword ptr [rbp - 0x78], xmm4 ; call rax
0x000000000019611c : mov dword ptr [rbp - 0x80], esp ; mov rdx, qword ptr [rax + rbx*8] ; test rdx, rdx ; je 0x196136 ; call rdx
0x000000000011fe97 : mov dword ptr [rbp - 0x830], eax ; mov eax, r14d ; syscall
0x00000000000750fe : mov dword ptr [rbp - 0x930], eax ; call rax
0x00000000000750fd : mov dword ptr [rbp - 0x930], r8d ; call rax
0x00000000001292b1 : mov dword ptr [rbp - 0xa8], ecx ; call 0x125d88
0x00000000000a0157 : mov dword ptr [rbp], 0 ; pop rbp ; pop r12 ; ret
0x00000000000a0112 : mov dword ptr [rbp], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009e7d9 : mov dword ptr [rbp], eax ; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000925a9 : mov dword ptr [rbp], eax ; mov qword ptr [rbx + 0x60], rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009e155 : mov dword ptr [rbp], eax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009add4 : mov dword ptr [rbp], eax ; test rax, rax ; je 0x9aeb4 ; call rax
0x00000000000489ba : mov dword ptr [rbp], eax ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a000f : mov dword ptr [rbp], ebp ; xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010b489 : mov dword ptr [rbp], ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009e161 : mov dword ptr [rbp], ebx ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000047bd6 : mov dword ptr [rbp], edx ; mov rdi, qword ptr [rbx + 8] ; call rax
0x00000000000dd0e6 : mov dword ptr [rbp], esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a0da9 : mov dword ptr [rbp], esp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000139222 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000139221 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000314f2 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x000000000014dd67 : mov dword ptr [rbx + 0x10], eax ; jmp 0x14dd33
0x000000000013cc30 : mov dword ptr [rbx + 0x10], eax ; mov eax, 0x14 ; add edx, 1 ; syscall
0x000000000008c231 : mov dword ptr [rbx + 0x10], eax ; mov rax, qword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x000000000013b97d : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015da56 : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000012618f : mov dword ptr [rbx + 0x10], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000155f15 : mov dword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x000000000015da0e : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000001261df : mov dword ptr [rbx + 0x18], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008b61e : mov dword ptr [rbx + 0x18], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000148c11 : mov dword ptr [rbx + 0x20], eax ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000090b51 : mov dword ptr [rbx + 0x20], eax ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014852b : mov dword ptr [rbx + 0x20], ecx ; mov eax, 1 ; jmp 0x148500
0x000000000003161f : mov dword ptr [rbx + 0x20], edx ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000155f78 : mov dword ptr [rbx + 0x20], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ff02b : mov dword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x000000000008c239 : mov dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x00000000000f081f : mov dword ptr [rbx + 0x30], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f06f5 : mov dword ptr [rbx + 0x30], esi ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000f081e : mov dword ptr [rbx + 0x30], r8d ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000eae5a : mov dword ptr [rbx + 0x34], esp ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000eae59 : mov dword ptr [rbx + 0x34], r12d ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001268cf : mov dword ptr [rbx + 0x38], eax ; mov byte ptr [rcx], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012687a : mov dword ptr [rbx + 0x38], eax ; mov byte ptr [rdx], 0xa ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011c1fd : mov dword ptr [rbx + 0x38], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000043b77 : mov dword ptr [rbx + 0x40], esi ; pop rbx ; ret
0x0000000000043b58 : mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x0000000000090b9a : mov dword ptr [rbx + 0x58], 0 ; movups xmmword ptr [rbx + 0x48], xmm0 ; pop rbx ; ret
0x0000000000114a05 : mov dword ptr [rbx + 0x60], eax ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008737a : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000925ad : mov dword ptr [rbx + 0x60], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008ee32 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000863f5 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000086a1f : mov dword ptr [rbx + 0x74], edx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000008d7cb : mov dword ptr [rbx + 0x90], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000ce8ae : mov dword ptr [rbx + 0xc], eax ; ret
0x00000000000823fc : mov dword ptr [rbx + 0xd8], eax ; call 0x8ee18
0x000000000010b7b8 : mov dword ptr [rbx + 4], edx ; add rsp, 0x10 ; pop rbx ; ret
0x000000000010b74a : mov dword ptr [rbx + 4], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010b6a7 : mov dword ptr [rbx + 4], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000164af3 : mov dword ptr [rbx + 5], eax ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000009c7fc : mov dword ptr [rbx + 8], 0x400 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000926fb : mov dword ptr [rbx + 8], eax ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000152d35 : mov dword ptr [rbx + 8], eax ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000031507 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000012613f : mov dword ptr [rbx + 8], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009c65f : mov dword ptr [rbx + 8], ebp ; mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009c6e1 : mov dword ptr [rbx + 8], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000090f0d : mov dword ptr [rbx + 8], edx ; movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008ac0f : mov dword ptr [rbx + 8], edx ; movzx edx, byte ptr [rax] ; pop rbx ; mov eax, edx ; ret
0x00000000000bb15e : mov dword ptr [rbx + rbp*8], 0xc031c3ce ; ret
0x0000000000031fd3 : mov dword ptr [rbx + rsi*8], ecx ; mov rcx, qword ptr [rax + r14*8] ; test rcx, rcx ; je 0x31fed ; call rcx
0x0000000000028853 : mov dword ptr [rbx], 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014caed : mov dword ptr [rbx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000118402 : mov dword ptr [rbx], 0 ; pop rbx ; ret
0x000000000009102d : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000147e89 : mov dword ptr [rbx], eax ; mov eax, 1 ; jmp 0x147e64
0x00000000001544a9 : mov dword ptr [rbx], eax ; mov eax, 1 ; jmp 0x154484
0x0000000000154529 : mov dword ptr [rbx], eax ; mov eax, 1 ; jmp 0x154504
0x00000000001545e9 : mov dword ptr [rbx], eax ; mov eax, 1 ; jmp 0x1545c4
0x0000000000154cf9 : mov dword ptr [rbx], eax ; mov eax, 1 ; jmp 0x154cd4
0x000000000009c79d : mov dword ptr [rbx], eax ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015df11 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000001519ce : mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000001183ac : mov dword ptr [rbx], eax ; pop rbx ; setne al ; movzx eax, al ; ret
0x000000000004896b : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012dfba : mov dword ptr [rbx], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000031ebe : mov dword ptr [rbx], ebp ; mov rax, qword ptr [rax + r12*8] ; test rax, rax ; je 0x31ed8 ; call rax
0x0000000000084f05 : mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000086b4d : mov dword ptr [rbx], ecx ; pop rbx ; ret
0x000000000009c13c : mov dword ptr [rbx], edi ; call rcx
0x000000000009c663 : mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015e820 : mov dword ptr [rbx], edx ; pop rbx ; ret
0x000000000009aa26 : mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000009c213 : mov dword ptr [rbx], esi ; call rcx
0x0000000000082663 : mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000118839 : mov dword ptr [rcx + 0x10], ecx ; or r9, rdx ; mov qword ptr [rax + 8], r9 ; jmp 0x118812
0x00000000000fda4c : mov dword ptr [rcx + 0x20], eax ; jmp 0xfda20
0x0000000000176192 : mov dword ptr [rcx + 3], edx ; ret
0x00000000000baed2 : mov dword ptr [rcx + 4], 0 ; ret
0x0000000000176183 : mov dword ptr [rcx + 4], edx ; ret
0x00000000001761f4 : mov dword ptr [rcx + 5], edx ; ret
0x0000000000176204 : mov dword ptr [rcx + 6], edx ; ret
0x00000000001761d3 : mov dword ptr [rcx + 7], edx ; ret
0x00000000001761c4 : mov dword ptr [rcx + 8], edx ; ret
0x00000000000a6fe0 : mov dword ptr [rcx + rax - 0x37], ecx ; jmp rcx
0x000000000005c5b8 : mov dword ptr [rcx + rdx*8], eax ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000bace5 : mov dword ptr [rcx + rdx], eax ; add rdx, 4 ; test r8d, r8d ; jne 0xbacec ; ret
0x00000000000a6fa7 : mov dword ptr [rcx - 0x7c], 0xc3db75f9 ; nop ; ret
0x000000000019328b : mov dword ptr [rcx - 0x7d], 0x894c07e7 ; ret 0x8d4f
0x000000000018d4d7 : mov dword ptr [rcx - 2], ecx ; ret
0x000000000018d4c2 : mov dword ptr [rcx - 4], ecx ; ret
0x000000000018d4b1 : mov dword ptr [rcx - 8], ecx ; ret
0x000000000011e1bc : mov dword ptr [rcx], 0x16 ; mov eax, 0xffffffff ; ret
0x000000000009d736 : mov dword ptr [rcx], 0x450f4800 ; ret 0x66c3
0x000000000002a54a : mov dword ptr [rcx], 0x83481389 ; ret
0x000000000002a412 : mov dword ptr [rcx], 0x83481389 ; rol dword ptr [rax + rcx*2], 0x83 ; ret
0x00000000000e6545 : mov dword ptr [rcx], 0xd675c084 ; xor eax, eax ; ret
0x0000000000113307 : mov dword ptr [rcx], eax ; cmp rdi, rax ; ja 0x113341 ; xor eax, eax ; ret
0x000000000010d6d4 : mov dword ptr [rcx], eax ; mov eax, 0xffffffff ; jmp 0x10d6a7
0x0000000000114284 : mov dword ptr [rcx], eax ; mov eax, 0xffffffff ; jmp 0x114257
0x0000000000114334 : mov dword ptr [rcx], eax ; mov eax, 0xffffffff ; jmp 0x114307
0x00000000000e16ac : mov dword ptr [rcx], eax ; mov eax, 0xffffffff ; jmp 0xe1680
0x000000000013b3bc : mov dword ptr [rcx], eax ; mov eax, edx ; ret
0x00000000000441ca : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000008576a : mov dword ptr [rcx], eax ; ret
0x000000000008a086 : mov dword ptr [rcx], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000084a9c : mov dword ptr [rcx], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000085623 : mov dword ptr [rcx], edi ; ret
0x0000000000176151 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 2], dl ; ret
0x0000000000176170 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x00000000001761b1 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 8], dl ; ret
0x0000000000176190 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x00000000001761d1 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 7], edx ; ret
0x00000000001761e1 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 8], edx ; ret
0x00000000001761f1 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 5], rdx ; ret
0x0000000000176201 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 6], rdx ; ret
0x0000000000176211 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 7], rdx ; ret
0x0000000000176221 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 8], rdx ; ret
0x0000000000176180 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x00000000001761c1 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 8], dx ; ret
0x000000000013b363 : mov dword ptr [rcx], edx ; ret
0x000000000010c272 : mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x000000000014c82c : mov dword ptr [rdi + 0x10], 2 ; add rdi, 0x10 ; jmp rcx
0x00000000000b6bbd : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x11] ; ret
0x00000000000b7a1d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x12] ; ret
0x00000000000b6bfb : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000000b7a5b : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x14] ; ret
0x00000000000b6c7d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x17] ; ret
0x00000000000b7add : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x18] ; ret
0x00000000000b6c1b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; lea rax, [rdi + 0x14] ; ret
0x00000000000b558b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000b7a7e : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; lea rax, [rdi + 0x15] ; ret
0x00000000000b625e : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000b96ae : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000b6c9d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; lea rax, [rdi + 0x18] ; ret
0x00000000000b560d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000005716f : mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000b964d : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000b968b : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000b970d : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000b7b00 : mov dword ptr [rdi + 0x10], edx ; mov byte ptr [rdi + 0x18], cl ; lea rax, [rdi + 0x19] ; ret
0x00000000000b62e0 : mov dword ptr [rdi + 0x10], edx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000b9730 : mov dword ptr [rdi + 0x10], edx ; mov byte ptr [rdi + 0x18], cl ; xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000b6ce0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1a] ; ret
0x00000000000b7b40 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1b] ; ret
0x00000000000b5650 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000b9770 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000b6d00 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1b] ; ret
0x00000000000b7b60 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1c] ; ret
0x00000000000b5670 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000b9790 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000b6cc1 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x19] ; ret
0x00000000000b7b21 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x1a] ; ret
0x00000000000b5631 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000b9751 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x000000000010c25a : mov dword ptr [rdi + 0x10c], esi ; xor eax, eax ; ret
0x0000000000112d08 : mov dword ptr [rdi + 0x16], eax ; ret
0x00000000000b6ce3 : mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1a] ; ret
0x00000000000b7b43 : mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1b] ; ret
0x00000000000b5653 : mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000b9773 : mov dword ptr [rdi + 0x17], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x0000000000155bd0 : mov dword ptr [rdi + 0x18], eax ; mov eax, 1 ; ret
0x0000000000090aa3 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000008c777 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000000b6cc5 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x19] ; ret
0x00000000000b7b25 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1a] ; ret
0x00000000000b6d03 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1b] ; ret
0x00000000000b7b63 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1c] ; ret
0x00000000000b5635 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000b9755 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000b9793 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x0000000000090ad0 : mov dword ptr [rdi + 0x18], edx ; mov qword ptr [rdi + 0x48], rax ; movups xmmword ptr [rdi + 8], xmm0 ; ret
0x0000000000155c67 : mov dword ptr [rdi + 0x18], edx ; ret
0x0000000000155b6a : mov dword ptr [rdi + 0x18], esi ; mov eax, 1 ; mov dword ptr [rdi + 0x28], edx ; ret
0x0000000000155ba8 : mov dword ptr [rdi + 0x18], esi ; ret
0x0000000000156389 : mov dword ptr [rdi + 0x20], 0 ; ret
0x00000000000cfbc0 : mov dword ptr [rdi + 0x20], ecx ; pop r14 ; pop r15 ; ret
0x0000000000155ba1 : mov dword ptr [rdi + 0x28], edx ; add rsi, rax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x0000000000155b72 : mov dword ptr [rdi + 0x28], edx ; ret
0x0000000000047df3 : mov dword ptr [rdi + 0x39480019], edx ; ret
0x0000000000090ad4 : mov dword ptr [rdi + 0x48], eax ; movups xmmword ptr [rdi + 8], xmm0 ; ret
0x0000000000090a9f : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000014f25c : mov dword ptr [rdi + 0x58], 2 ; add rdi, 0x58 ; jmp rcx
0x000000000014e91c : mov dword ptr [rdi + 0x68], 2 ; add rdi, 0x68 ; jmp rcx
0x00000000000bb04f : mov dword ptr [rdi + 0xc], eax ; mov rax, rbx ; pop rbx ; ret
0x000000000013a49a : mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x00000000000b6c3d : mov dword ptr [rdi + 0xe], ecx ; lea rax, [rdi + 0x15] ; ret
0x00000000000b7a9d : mov dword ptr [rdi + 0xe], ecx ; lea rax, [rdi + 0x16] ; ret
0x00000000000b55ad : mov dword ptr [rdi + 0xe], ecx ; ret
0x00000000000b96cd : mov dword ptr [rdi + 0xe], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000b6bdb : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x00000000000b7a3b : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000000b6c5d : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x16] ; ret
0x00000000000b7abd : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x17] ; ret
0x00000000000b556b : mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000b966b : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000b96ed : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x000000000016b725 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000016b568 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000016b808 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x000000000016b6b5 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000016b4f8 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000b6aa7 : mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x00000000000b78e7 : mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 7] ; ret
0x000000000016b645 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000016b488 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000b5497 : mov dword ptr [rdi + 3], edx ; ret
0x00000000000b9517 : mov dword ptr [rdi + 3], edx ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a7134 : mov dword ptr [rdi + 4], eax ; mov rax, rdi ; ret
0x0000000000048ab5 : mov dword ptr [rdi + 4], eax ; xor eax, eax ; ret
0x00000000000b6a89 : mov dword ptr [rdi + 4], edx ; lea rax, [rdi + 5] ; ret
0x00000000000b78c9 : mov dword ptr [rdi + 4], edx ; lea rax, [rdi + 6] ; ret
0x000000000016b418 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a707f : mov dword ptr [rdi + 4], edx ; movzx edx, byte ptr [rsp + 0x16] ; mov byte ptr [rdi + 6], dl ; ret
0x00000000000a7231 : mov dword ptr [rdi + 4], edx ; movzx edx, byte ptr [rsp + 0xe] ; mov byte ptr [rdi + 6], dl ; ret
0x00000000000a7067 : mov dword ptr [rdi + 4], edx ; ret
0x00000000000b94f9 : mov dword ptr [rdi + 4], edx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x000000000010b910 : mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000b6b3b : mov dword ptr [rdi + 5], edx ; lea rax, [rdi + 0xc] ; ret
0x00000000000b798b : mov dword ptr [rdi + 5], edx ; lea rax, [rdi + 0xd] ; ret
0x000000000016b3a8 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000b54fb : mov dword ptr [rdi + 5], edx ; ret
0x00000000000b95bb : mov dword ptr [rdi + 5], edx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000b6b5b : mov dword ptr [rdi + 6], edx ; lea rax, [rdi + 0xd] ; ret
0x00000000000b79ab : mov dword ptr [rdi + 6], edx ; lea rax, [rdi + 0xe] ; ret
0x000000000016b338 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000b550b : mov dword ptr [rdi + 6], edx ; ret
0x00000000000b95db : mov dword ptr [rdi + 6], edx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000b6af9 : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x00000000000b7949 : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xb] ; ret
0x00000000000b6b7b : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xe] ; ret
0x00000000000b79cb : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xf] ; ret
0x000000000016b2c8 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000b54d9 : mov dword ptr [rdi + 7], edx ; ret
0x00000000000b9579 : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000b95fb : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x000000000009cb8b : mov dword ptr [rdi + 8], 0 ; xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x00000000000bb575 : mov dword ptr [rdi + 8], eax ; cmove rbx, rdx ; mov rax, rbx ; pop rbx ; ret
0x0000000000112cff : mov dword ptr [rdi + 8], eax ; mov eax, 0x100 ; mov word ptr [rdi + 0x16], ax ; ret
0x0000000000058826 : mov dword ptr [rdi + 8], eax ; mov eax, 2 ; ret
0x0000000000155d19 : mov dword ptr [rdi + 8], eax ; movups xmmword ptr [rdi + 0x18], xmm0 ; mov dword ptr [rdi + 0x28], edx ; ret
0x0000000000090aa7 : mov dword ptr [rdi + 8], eax ; ret
0x0000000000057168 : mov dword ptr [rdi + 8], eax ; shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x00000000001127d0 : mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x000000000008aaef : mov dword ptr [rdi + 8], ecx ; movzx edx, byte ptr [rax] ; pop rbx ; mov eax, edx ; ret
0x00000000000570f4 : mov dword ptr [rdi + 8], ecx ; ret
0x00000000000b792b : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xa] ; ret
0x00000000000b6b19 : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x00000000000b7969 : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xc] ; ret
0x00000000000b6adb : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 9] ; ret
0x0000000000056890 : mov dword ptr [rdi + 8], edx ; mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000056754 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x000000000008d34f : mov dword ptr [rdi + 8], edx ; movzx eax, byte ptr [rax] ; ret
0x00000000000b54cb : mov dword ptr [rdi + 8], edx ; ret
0x00000000000b955b : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000b9599 : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x000000000011281b : mov dword ptr [rdi + 8], esi ; ret
0x0000000000188c9d : mov dword ptr [rdi + r8 - 2], edx ; lea rax, [rdi + r8] ; vzeroupper ; ret
0x0000000000187f6d : mov dword ptr [rdi + r8 - 2], edx ; vzeroupper ; ret
0x0000000000188cb9 : mov dword ptr [rdi + r8 - 4], edx ; lea rax, [rdi + r8] ; vzeroupper ; ret
0x0000000000187f89 : mov dword ptr [rdi + r8 - 4], edx ; vzeroupper ; ret
0x0000000000188c9e : mov dword ptr [rdi + rax - 2], edx ; lea rax, [rdi + r8] ; vzeroupper ; ret
0x00000000001873be : mov dword ptr [rdi + rax - 2], edx ; mov byte ptr [rdi + r8], 0 ; vzeroupper ; ret
0x0000000000187f6e : mov dword ptr [rdi + rax - 2], edx ; vzeroupper ; ret
0x0000000000188cba : mov dword ptr [rdi + rax - 4], edx ; lea rax, [rdi + r8] ; vzeroupper ; ret
0x00000000001873da : mov dword ptr [rdi + rax - 4], edx ; mov byte ptr [rdi + r8], 0 ; vzeroupper ; ret
0x0000000000187f8a : mov dword ptr [rdi + rax - 4], edx ; vzeroupper ; ret
0x0000000000188cdc : mov dword ptr [rdi + rax - 8], edx ; lea rax, [rdi + r8] ; vzeroupper ; ret
0x00000000001873fc : mov dword ptr [rdi + rax - 8], edx ; mov byte ptr [rdi + r8], 0 ; vzeroupper ; ret
0x0000000000187fac : mov dword ptr [rdi + rax - 8], edx ; vzeroupper ; ret
0x00000000000576bd : mov dword ptr [rdi + rbx*8 + 8], ecx ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x00000000000ba55b : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], cx ; ret
0x0000000000189600 : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], cx ; vzeroupper ; ret
0x00000000000ba135 : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], si ; ret
0x00000000001885e8 : mov dword ptr [rdi + rdx - 3], ecx ; lea rax, [rdi + rdx] ; vzeroupper ; ret
0x0000000000186b48 : mov dword ptr [rdi + rdx - 3], ecx ; vzeroupper ; ret
0x00000000000ba553 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000001895f5 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x00000000000ba125 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000018860c : mov dword ptr [rdi + rdx - 7], ecx ; lea rax, [rdi + rdx] ; vzeroupper ; ret
0x0000000000186b5c : mov dword ptr [rdi + rdx - 7], ecx ; vzeroupper ; ret
0x00000000000ba54b : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rcx ; ret
0x00000000001895ea : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x00000000000ba117 : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rsi ; ret
0x00000000001651d5 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000165213 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000005705f : mov dword ptr [rdi - 0x10], ecx ; ret
0x0000000000165388 : mov dword ptr [rdi - 0x11], ebx ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000165484 : mov dword ptr [rdi - 0x11], ebx ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001653d0 : mov dword ptr [rdi - 0x11], ebx ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000165558 : mov dword ptr [rdi - 0x12], ebx ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000165738 : mov dword ptr [rdi - 0x13], ebx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000165928 : mov dword ptr [rdi - 0x14], ebx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000165af9 : mov dword ptr [rdi - 0x15], ebx ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000165cf9 : mov dword ptr [rdi - 0x16], ebx ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000165ef9 : mov dword ptr [rdi - 0x17], ebx ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001651d1 : mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016520f : mov dword ptr [rdi - 0x18], edx ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000011f443 : mov dword ptr [rdi - 0x76befff4], ebp ; retf 0x8b
0x000000000016555c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016ad78 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016573c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016acf8 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016592c : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016ac78 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000165afd : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000016abe9 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000165cfd : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000016ab59 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000165efd : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000016aac9 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000b6420 : mov dword ptr [rdi - 1], edx ; ret
0x00000000001658dd : mov dword ptr [rdi - 2], ecx ; ret
0x00000000001656f5 : mov dword ptr [rdi - 2], edx ; ret
0x00000000001658d9 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000165cb9 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000016538f : mov dword ptr [rdi - 4], edx ; ret
0x0000000000165cb6 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000165eb6 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001660b6 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000057058 : mov dword ptr [rdi - 8], eax ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000056fea : mov dword ptr [rdi - 8], ecx ; ret
0x0000000000165217 : mov dword ptr [rdi - 8], edx ; ret
0x000000000016538c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000165488 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001653d4 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016adf8 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000047d92 : mov dword ptr [rdi], 0 ; pop rbx ; ret
0x000000000014785c : mov dword ptr [rdi], 2 ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rcx
0x000000000016b97c : mov dword ptr [rdi], eax ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x00000000000a7039 : mov dword ptr [rdi], eax ; add rax, rdi ; ret
0x0000000000069d2a : mov dword ptr [rdi], eax ; jmp 0x65fed
0x0000000000071ec1 : mov dword ptr [rdi], eax ; jmp 0x6e932
0x00000000001493e4 : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000005c19b : mov dword ptr [rdi], eax ; mov rax, rdi ; ret
0x0000000000056fe4 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x00000000000570ee : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000048aae : mov dword ptr [rdi], eax ; shr rax, 0x20 ; mov word ptr [rdi + 4], ax ; xor eax, eax ; ret
0x000000000011282e : mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000061b74 : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b6a75 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x00000000000b6ac7 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 8] ; ret
0x00000000000a71e0 : mov dword ptr [rdi], ecx ; lea rax, [rdi + rax - 1] ; ret
0x0000000000186b24 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], 0 ; vzeroupper ; ret
0x00000000000b6a54 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x00000000000b5454 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000b7887 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; lea rax, [rdi + 3] ; ret
0x00000000000b6127 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000b94b7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000b78b5 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, [rdi + 5] ; ret
0x00000000000b6145 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000b94e5 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000b7907 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; lea rax, [rdi + 9] ; ret
0x00000000000b6187 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000b9537 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000b6aa5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x00000000000b78e5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 7] ; ret
0x00000000000b5495 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000000b9515 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000b6af7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x00000000000b7947 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xb] ; ret
0x00000000000b54d7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000b9577 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000b6b17 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x00000000000b7967 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xc] ; ret
0x00000000000b54e7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000b9597 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x0000000000187f87 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + r8 - 4], edx ; vzeroupper ; ret
0x000000000018db97 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x00000000000b6b38 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xc] ; ret
0x00000000000b7988 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xd] ; ret
0x00000000000b54f8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000b95b8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000b6b58 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xd] ; ret
0x00000000000b79a8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xe] ; ret
0x00000000000b5508 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000b95d8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000b6b78 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xe] ; ret
0x00000000000b79c8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xf] ; ret
0x00000000000b5518 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000000b95f8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x0000000000187fa9 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + r8 - 8], rdx ; vzeroupper ; ret
0x0000000000186b59 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + rdx - 7], r9 ; vzeroupper ; ret
0x00000000000a7108 : mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00000000000b6a86 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, [rdi + 5] ; ret
0x00000000000b78c6 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, [rdi + 6] ; ret
0x00000000000b5486 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000b94f6 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000b7928 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; lea rax, [rdi + 0xa] ; ret
0x00000000000b6ad8 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; lea rax, [rdi + 9] ; ret
0x00000000000b54c8 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000b9558 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x0000000000187f6a : mov dword ptr [rdi], ecx ; mov word ptr [rdi + r8 - 2], dx ; vzeroupper ; ret
0x000000000018dba3 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x000000000004307a : mov dword ptr [rdi], ecx ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000056fb9 : mov dword ptr [rdi], ecx ; ret
0x00000000001895ef : mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x00000000001678b3 : mov dword ptr [rdi], edx ; add eax, 0x14634900 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000a6ff6 : mov dword ptr [rdi], edx ; add rax, rdi ; ret
0x00000000000b6a44 : mov dword ptr [rdi], edx ; lea rax, [rdi + 1] ; ret
0x00000000001885a4 : mov dword ptr [rdi], edx ; lea rax, [rdi + 1] ; vzeroupper ; ret
0x00000000000b7874 : mov dword ptr [rdi], edx ; lea rax, [rdi + 2] ; ret
0x0000000000188c84 : mov dword ptr [rdi], edx ; lea rax, [rdi + 2] ; vzeroupper ; ret
0x00000000000b6a62 : mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x00000000001885d2 : mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; vzeroupper ; ret
0x00000000000b78a2 : mov dword ptr [rdi], edx ; lea rax, [rdi + 4] ; ret
0x00000000000b6ab4 : mov dword ptr [rdi], edx ; lea rax, [rdi + 7] ; ret
0x00000000000b78f4 : mov dword ptr [rdi], edx ; lea rax, [rdi + 8] ; ret
0x00000000000a7196 : mov dword ptr [rdi], edx ; lea rax, [rdi + rax - 1] ; ret
0x00000000001873a4 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 2], 0 ; vzeroupper ; ret
0x00000000000b6440 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000b6481 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000b64a1 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000b64b1 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000188050 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + r8 - 4], edx ; vzeroupper ; ret
0x000000000013dfcf : mov dword ptr [rdi], edx ; mov qword ptr [rax], 0 ; ret
0x00000000000b64c1 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000b64d1 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000188061 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + r8 - 8], rdx ; vzeroupper ; ret
0x00000000000b6450 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000b6491 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000188041 : mov dword ptr [rdi], edx ; mov word ptr [rdi + r8 - 2], dx ; vzeroupper ; ret
0x00000000000a7047 : mov dword ptr [rdi], edx ; movzx edx, byte ptr [rsp - 0xc] ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a7029 : mov dword ptr [rdi], edx ; movzx edx, byte ptr [rsp - 6] ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000a705f : mov dword ptr [rdi], edx ; movzx edx, word ptr [rsp + 0xc] ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a7211 : mov dword ptr [rdi], edx ; movzx edx, word ptr [rsp - 0x14] ; mov word ptr [rdi + 4], dx ; ret
0x0000000000042eb6 : mov dword ptr [rdi], edx ; ret
0x0000000000186b14 : mov dword ptr [rdi], edx ; vzeroupper ; ret
0x00000000000b94a4 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000b94d2 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000b9524 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000a71b1 : mov dword ptr [rdi], esi ; lea rax, [rdi + rax - 1] ; ret
0x000000000018d4bf : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000000585bd : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000009ca91 : mov dword ptr [rdi], esi ; mov eax, 1 ; ret
0x000000000018d4ae : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x00000000000a70e1 : mov dword ptr [rdi], esi ; mov rax, rdi ; ret
0x000000000018d4d3 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x0000000000061aa0 : mov dword ptr [rdi], esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000585eb : mov dword ptr [rdi], esi ; ret
0x000000000010b8ed : mov dword ptr [rdi], esi ; xor eax, eax ; ret
0x0000000000163df2 : mov dword ptr [rdi], esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x00000000000a7038 : mov dword ptr [rdi], r8d ; add rax, rdi ; ret
0x000000000010fb92 : mov dword ptr [rdx + 0x10], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014f3ac : mov dword ptr [rdx + 0x10], eax ; mov eax, 1 ; ret
0x0000000000082297 : mov dword ptr [rdx + 0x130], ecx ; ret
0x000000000008d985 : mov dword ptr [rdx + 0x130], edi ; pop rbx ; ret
0x000000000008561e : mov dword ptr [rdx + 0x20], eax ; mov eax, edi ; mov dword ptr [rcx], edi ; ret
0x0000000000085767 : mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x0000000000084a99 : mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000148008 : mov dword ptr [rdx + 0x20], esi ; ret
0x000000000008589d : mov dword ptr [rdx + 0x28], esi ; mov byte ptr [rcx], dil ; ret
0x0000000000147fde : mov dword ptr [rdx + 0x58], edi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000147fe2 : mov dword ptr [rdx + 0x68], ecx ; ret
0x000000000014bd76 : mov dword ptr [rdx + 0x6c], eax ; mov eax, 1 ; ret
0x000000000014f2ac : mov dword ptr [rdx + 0xc], eax ; mov eax, 1 ; ret
0x0000000000178517 : mov dword ptr [rdx + 3], eax ; lea rax, [rdx + 6] ; ret
0x00000000000b205c : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000063b8e : mov dword ptr [rdx + 4], 1 ; ret
0x00000000001784f9 : mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x00000000000b203e : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000000c9a5f : mov dword ptr [rdx + 4], ecx ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x00000000001785ab : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 0xc] ; ret
0x0000000000178529 : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 8] ; ret
0x00000000001741d9 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x00000000001785cb : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 0xd] ; ret
0x0000000000178549 : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 9] ; ret
0x00000000001741e9 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000178569 : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xa] ; ret
0x00000000001785eb : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xe] ; ret
0x00000000000b20e0 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000178589 : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xb] ; ret
0x000000000017847b : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xf] ; ret
0x00000000000b20c2 : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000115bfd : mov dword ptr [rdx + 8], eax ; test rax, rax ; je 0x115c13 ; mov qword ptr [rax], rdx ; ret
0x0000000000063b3b : mov dword ptr [rdx + 8], ecx ; add dword ptr [rdx + 4], 1 ; ret
0x0000000000063b8b : mov dword ptr [rdx + 8], ecx ; mov dword ptr [rdx + 4], 1 ; ret
0x00000000000585d0 : mov dword ptr [rdx], 0 ; mov eax, 1 ; ret
0x00000000000587bc : mov dword ptr [rdx], 0 ; mov eax, 2 ; ret
0x00000000001935e7 : mov dword ptr [rdx], 0x801f0f ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc149
0x000000000018c629 : mov dword ptr [rdx], 0xc634900 ; xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x00000000000586a2 : mov dword ptr [rdx], 0xffffc002 ; ret
0x0000000000117ca3 : mov dword ptr [rdx], eax ; add dword ptr [rbx], ebp ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000073fc8 : mov dword ptr [rdx], eax ; jmp 0x73d6b
0x00000000001784a4 : mov dword ptr [rdx], eax ; lea rax, [rdx + 1] ; ret
0x00000000001784d2 : mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x0000000000178424 : mov dword ptr [rdx], eax ; lea rax, [rdx + 7] ; ret
0x00000000001784b4 : mov dword ptr [rdx], eax ; mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; lea rax, [rdx + 2] ; ret
0x00000000000b1fe9 : mov dword ptr [rdx], eax ; mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000001784e2 : mov dword ptr [rdx], eax ; mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; lea rax, [rdx + 4] ; ret
0x00000000000b2017 : mov dword ptr [rdx], eax ; mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000112612 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; jmp 0x1125d4
0x00000000001126aa : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; jmp 0x112669
0x00000000001159d2 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; jmp 0x1159ae
0x0000000000115aa2 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; jmp 0x115a7d
0x000000000004419a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000585bf : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000005880f : mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x0000000000178512 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; lea rax, [rdx + 6] ; ret
0x00000000000b2057 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000178524 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 8] ; ret
0x00000000001741d4 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000178544 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 9] ; ret
0x00000000001741e4 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000178564 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xa] ; ret
0x00000000001741f4 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000178584 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xb] ; ret
0x0000000000174204 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000000de44d : mov dword ptr [rdx], eax ; mov eax, esi ; add rsp, 0x48 ; ret
0x0000000000048b5a : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x00000000000b1fd9 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000000ddbe2 : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x000000000003553d : mov dword ptr [rdx], eax ; ret
0x00000000000c9a62 : mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x00000000000d333f : mov dword ptr [rdx], eax ; xor edx, edx ; add rsp, 8 ; mov rax, rdx ; ret
0x000000000007a311 : mov dword ptr [rdx], ebp ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009d832 : mov dword ptr [rdx], ebx ; mov rax, r10 ; pop rbx ; ret
0x00000000000485ea : mov dword ptr [rdx], ecx ; mov dword ptr [rsi], ecx ; ret
0x00000000000866ca : mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000001016d7 : mov dword ptr [rdx], ecx ; pop rdx ; pop rcx ; pop rbx ; ret
0x00000000000a6c12 : mov dword ptr [rdx], ecx ; ret
0x0000000000118805 : mov dword ptr [rdx], edi ; pop rbx ; pop rbp ; ret
0x00000000000fe75b : mov dword ptr [rdx], edi ; ret
0x00000000000de2a3 : mov dword ptr [rdx], esi ; add rsp, 0x18 ; ret
0x00000000000de36d : mov dword ptr [rdx], esi ; add rsp, 8 ; ret
0x000000000009e923 : mov dword ptr [rdx], esp ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000de44c : mov dword ptr [rdx], r8d ; mov eax, esi ; add rsp, 0x48 ; ret
0x00000000000ddbe1 : mov dword ptr [rdx], r8d ; mov rax, rsi ; add rsp, 8 ; ret
0x000000000009d4f4 : mov dword ptr [rip + 0x14a1ae], eax ; add rsp, 8 ; ret
0x000000000009d4b2 : mov dword ptr [rip + 0x14a1f0], eax ; ret
0x00000000000989c6 : mov dword ptr [rip + 0x14ec08], 0 ; ret
0x000000000009355e : mov dword ptr [rip + 0x150d48], eax ; ret
0x000000000009353c : mov dword ptr [rip + 0x150d4e], eax ; ret
0x000000000009350f : mov dword ptr [rip + 0x150d73], eax ; ret
0x00000000000934ef : mov dword ptr [rip + 0x150d8b], eax ; ret
0x00000000000932b5 : mov dword ptr [rip + 0x15102d], eax ; ret
0x00000000000932a5 : mov dword ptr [rip + 0x151035], eax ; ret
0x0000000000093293 : mov dword ptr [rip + 0x151037], edx ; ret
0x0000000000093255 : mov dword ptr [rip + 0x15103d], eax ; ret
0x0000000000093245 : mov dword ptr [rip + 0x151055], eax ; ret
0x0000000000093574 : mov dword ptr [rip + 0x154072], eax ; ret
0x0000000000092a4c : mov dword ptr [rip + 0x154b12], 0 ; ret
0x0000000000044e23 : mov dword ptr [rip + 0x19f37f], eax ; mov eax, edx ; ret
0x0000000000044e0c : mov dword ptr [rip + 0x19f39a], edx ; ret
0x000000000002641c : mov dword ptr [rip + 0x1c3d26], eax ; ret
0x000000000002539e : mov dword ptr [rip + 0x1c4c0c], edx ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000009e4ed : mov dword ptr [rip + 0x450f4800], ecx ; ret 0x66c3
0x000000000019658a : mov dword ptr [rip + 0x5048c], 0 ; ret
0x000000000019667c : mov dword ptr [rip + 0x50ebe], ebx ; test rbx, rbx ; jne 0x196674 ; pop rbx ; ret
0x00000000001967a5 : mov dword ptr [rip + 0x510e1], 0 ; ret
0x0000000000196962 : mov dword ptr [rip + 0x522fc], 0 ; ret
0x0000000000196a94 : mov dword ptr [rip + 0x52d82], 0 ; pop rbx ; ret
0x000000000015e954 : mov dword ptr [rip + 0x88c96], esi ; ret
0x000000000015afd6 : mov dword ptr [rip + 0x8a574], edx ; add rsp, 8 ; ret
0x0000000000151cb7 : mov dword ptr [rip + 0x97f5f], 2 ; ret
0x0000000000151bd7 : mov dword ptr [rip + 0x9803f], 2 ; ret
0x0000000000151af7 : mov dword ptr [rip + 0x9811f], 2 ; ret
0x0000000000151a2f : mov dword ptr [rip + 0x981e7], 2 ; ret
0x0000000000151978 : mov dword ptr [rip + 0x9829e], 2 ; ret
0x0000000000148d36 : mov dword ptr [rip + 0xa0d2c], eax ; jmp 0x148c85
0x0000000000145d39 : mov dword ptr [rip + 0xa3c3d], eax ; add rsp, 8 ; ret
0x00000000001376df : mov dword ptr [rip + 0xb2f3b], eax ; add rsp, 8 ; ret
0x000000000012c918 : mov dword ptr [rip + 0xbc352], eax ; pop rbp ; ret
0x000000000012beff : mov dword ptr [rip + 0xbe4b7], 1 ; ret
0x0000000000120548 : mov dword ptr [rip + 0xc3e0e], 0 ; ret
0x000000000012051f : mov dword ptr [rip + 0xc3e37], 0 ; ret
0x00000000001204ee : mov dword ptr [rip + 0xc3e68], 2 ; ret
0x00000000001204c8 : mov dword ptr [rip + 0xc3e8e], 0 ; ret
0x00000000001203b1 : mov dword ptr [rip + 0xc3fa9], ebx ; pop rbx ; ret
0x000000000012039b : mov dword ptr [rip + 0xc3fbf], ebx ; pop rbx ; ret
0x00000000001172ba : mov dword ptr [rip + 0xcd088], edi ; ret
0x000000000011654a : mov dword ptr [rip + 0xd19e0], eax ; add rsp, 8 ; ret
0x00000000001164d8 : mov dword ptr [rip + 0xd1a52], edx ; add rsp, 8 ; ret
0x00000000001164a9 : mov dword ptr [rip + 0xd1a81], edx ; ret
0x0000000000114eef : mov dword ptr [rip + 0xd566b], eax ; add rsp, 8 ; ret
0x00000000000418d3 : mov dword ptr [rip + 0xf440016], esi ; mov dh, 0x3c ; or cl, ch ; ret 0xfffc
0x00000000000ff528 : mov dword ptr [rsi + 0x10], eax ; ret
0x00000000000489e6 : mov dword ptr [rsi + 0x10], eax ; xor eax, eax ; mov dword ptr [rsi + 0xc], 0x1000b ; ret
0x0000000000048a35 : mov dword ptr [rsi + 0x10], eax ; xor eax, eax ; ret
0x0000000000048534 : mov dword ptr [rsi + 0x10], ecx ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x0000000000048538 : mov dword ptr [rsi + 0x28], eax ; xor eax, eax ; ret
0x000000000008a61f : mov dword ptr [rsi + 0x28], ecx ; mov byte ptr [rax], dil ; mov eax, r10d ; ret
0x00000000001122ab : mov dword ptr [rsi + 0x48], eax ; ret
0x00000000001122a3 : mov dword ptr [rsi + 0x50], ecx ; xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x0000000000111576 : mov dword ptr [rsi + 0x66], edx ; xor eax, eax ; ret
0x00000000000489eb : mov dword ptr [rsi + 0xc], 0x1000b ; ret
0x0000000000048a77 : mov dword ptr [rsi + 0xe], eax ; xor eax, eax ; ret
0x00000000001470e7 : mov dword ptr [rsi + 8], 0 ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000ff543 : mov dword ptr [rsi + 8], 0 ; ret
0x0000000000147043 : mov dword ptr [rsi + 8], 1 ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000147013 : mov dword ptr [rsi + 8], eax ; ret
0x00000000000ff524 : mov dword ptr [rsi + 8], ecx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x00000000000562b4 : mov dword ptr [rsi + rax*8], edx ; xor eax, eax ; ret
0x00000000000cdb0f : mov dword ptr [rsi + rcx], edx ; test edx, edx ; jne 0xcdb0e ; ret
0x00000000000cdb0f : mov dword ptr [rsi + rcx], edx ; test edx, edx ; jne 0xcdb0f ; ret
0x000000000018dba6 : mov dword ptr [rsi - 2], ecx ; ret
0x000000000018db99 : mov dword ptr [rsi - 4], ecx ; ret
0x0000000000147027 : mov dword ptr [rsi], 0 ; ret
0x000000000014700c : mov dword ptr [rsi], 0x10 ; mov qword ptr [rsi + 8], rax ; ret
0x00000000001470b0 : mov dword ptr [rsi], 0xa ; ret
0x00000000001470a0 : mov dword ptr [rsi], 0xb ; ret
0x00000000001470d0 : mov dword ptr [rsi], 0xc ; ret
0x0000000000147065 : mov dword ptr [rsi], 6 ; movups xmmword ptr [rsi + 8], xmm1 ; ret
0x0000000000147053 : mov dword ptr [rsi], 7 ; mov dword ptr [rsi + 8], eax ; ret
0x00000000001470c0 : mov dword ptr [rsi], 8 ; ret
0x0000000000147095 : mov dword ptr [rsi], 9 ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x0000000000155c5f : mov dword ptr [rsi], eax ; mov eax, 1 ; mov qword ptr [rdi + 0x18], rdx ; ret
0x000000000008c77b : mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000485ec : mov dword ptr [rsi], ecx ; ret
0x0000000000139842 : mov dword ptr [rsi], edi ; mov eax, 3 ; mov edi, dword ptr [rbp - 0x60] ; syscall
0x00000000000933ea : mov dword ptr [rsi], edi ; ret
0x000000000013a9df : mov dword ptr [rsi], edi ; xor eax, eax ; ret
0x0000000000155bfc : mov dword ptr [rsi], edx ; mov qword ptr [rdi + 0x18], rax ; mov eax, 1 ; ret
0x00000000000ff521 : mov dword ptr [rsi], edx ; mov qword ptr [rsi + 8], rcx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x000000000012ef55 : mov dword ptr [rsp + 0x10], eax ; call 0x8b1c6
0x0000000000042ab5 : mov dword ptr [rsp + 0x10], eax ; fld xword ptr [rsp + 8] ; ret
0x0000000000108e6b : mov dword ptr [rsp + 0x10], ecx ; call 0x25146
0x0000000000088710 : mov dword ptr [rsp + 0x10], ecx ; mov rdi, r13 ; call rax
0x0000000000095c2d : mov dword ptr [rsp + 0x10], edx ; call 0x1126f6
0x0000000000044f9b : mov dword ptr [rsp + 0x14], eax ; mov edi, r12d ; mov eax, 0x81 ; syscall
0x0000000000096620 : mov dword ptr [rsp + 0x18], eax ; call rdx
0x00000000000965eb : mov dword ptr [rsp + 0x18], eax ; mov qword ptr [rsp + 8], r11 ; call rcx
0x000000000008b585 : mov dword ptr [rsp + 0x18], ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000146697 : mov dword ptr [rsp + 0x18], edx ; lea r9, [rsp + 0x40] ; call qword ptr [rax]
0x0000000000096289 : mov dword ptr [rsp + 0x18], edx ; mov rdi, r12 ; mov qword ptr [rsp + 8], r11 ; call qword ptr [rax]
0x0000000000146d1b : mov dword ptr [rsp + 0x192], eax ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000014f47e : mov dword ptr [rsp + 0x1c8], ecx ; xor ecx, ecx ; call 0x13b6db
0x0000000000114944 : mov dword ptr [rsp + 0x20], eax ; mov eax, 0x65 ; syscall
0x0000000000112adb : mov dword ptr [rsp + 0x28], eax ; xor eax, eax ; mov rdx, rsp ; mov eax, ecx ; syscall
0x000000000011da9b : mov dword ptr [rsp + 0x30], eax ; mov qword ptr [rsp + 0x38], r9 ; syscall
0x00000000000d8765 : mov dword ptr [rsp + 0x30], ecx ; mov rbp, r15 ; call 0x25229
0x000000000008b619 : mov dword ptr [rsp + 0x30], edx ; mov qword ptr [rbx + 0x18], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011daa0 : mov dword ptr [rsp + 0x38], ecx ; syscall
0x00000000000417ca : mov dword ptr [rsp + 0x40], edx ; call 0x3da36
0x00000000000417c5 : mov dword ptr [rsp + 0x48], eax ; mov qword ptr [rsp + 0x40], rdx ; call 0x3da3b
0x00000000001586c9 : mov dword ptr [rsp + 0x48], eax ; xor eax, eax ; call 0x25138
0x00000000000d8661 : mov dword ptr [rsp + 0x48], edx ; mov rdi, qword ptr [rdi + rax*8 + 0x40] ; call 0x2513b
0x00000000000cec7b : mov dword ptr [rsp + 0x50], edi ; call rbx
0x00000000000ced0f : mov dword ptr [rsp + 0x50], esp ; mov rsi, r13 ; mov rdi, rbp ; call rbx
0x00000000000cec74 : mov dword ptr [rsp + 0x58], eax ; xor eax, eax ; mov qword ptr [rsp + 0x50], r15 ; call rbx
0x000000000004a486 : mov dword ptr [rsp + 0xc], ecx ; call 0x5707b
0x000000000004a485 : mov dword ptr [rsp + 0xc], r9d ; call 0x5707c
0x00000000001526c6 : mov dword ptr [rsp + 0xd0], 1 ; call rax
0x000000000015262c : mov dword ptr [rsp + 0xd0], 2 ; call rax
0x00000000000f4dfc : mov dword ptr [rsp + 4], ebp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000135835 : mov dword ptr [rsp + 4], esi ; mov esi, 0x10 ; jmp 0x135800
0x00000000000f88d3 : mov dword ptr [rsp + 8], eax ; call 0x2531e
0x000000000009752b : mov dword ptr [rsp + 8], eax ; call 0x93766
0x00000000001196ae : mov dword ptr [rsp + 8], eax ; call r12
0x0000000000095c28 : mov dword ptr [rsp + 8], eax ; mov qword ptr [rsp + 0x10], r10 ; call 0x1126fb
0x000000000003d3b7 : mov dword ptr [rsp + 8], eax ; mov qword ptr [rsp], rdx ; call 0x39eca
0x0000000000096291 : mov dword ptr [rsp + 8], ebx ; call qword ptr [rax]
0x00000000000965f0 : mov dword ptr [rsp + 8], ebx ; call rcx
0x000000000011891a : mov dword ptr [rsp + 8], ebx ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000001434f4 : mov dword ptr [rsp + 8], ecx ; call r12
0x000000000013b743 : mov dword ptr [rsp + 8], edx ; jmp 0x13b700
0x0000000000096523 : mov dword ptr [rsp + 8], edx ; xor edi, edi ; call qword ptr [rax]
0x0000000000102f4d : mov dword ptr [rsp + 8], esp ; jmp 0x102936
0x0000000000042c80 : mov dword ptr [rsp - 0x10], eax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000042b12 : mov dword ptr [rsp - 0x10], eax ; fstp xword ptr [rdi] ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000485c6 : mov dword ptr [rsp - 0x10], eax ; movhps xmm0, qword ptr [rsp - 0x10] ; movups xmmword ptr [rdi], xmm0 ; ret
0x0000000000115bd0 : mov dword ptr [rsp - 0x10], esi ; movhps xmm0, qword ptr [rsp - 0x10] ; movups xmmword ptr [rdi], xmm0 ; ret
0x0000000000042b5c : mov dword ptr [rsp - 0x18], 0 ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000058753 : mov dword ptr [rsp - 0x18], eax ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000435b5 : mov dword ptr [rsp - 0x30], edx ; movdqa xmm0, xmmword ptr [rsp - 0x38] ; ret
0x00000000000433fa : mov dword ptr [rsp - 4], eax ; movss xmm0, dword ptr [rsp - 4] ; mov dword ptr [rdi], edx ; ret
0x000000000004321f : mov dword ptr [rsp - 4], edx ; movd xmm0, dword ptr [rsp - 4] ; ret
0x00000000000432ea : mov dword ptr [rsp - 4], edx ; movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000043076 : mov dword ptr [rsp - 8], edx ; mov dword ptr [rdi], ecx ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000042e2b : mov dword ptr [rsp - 8], edx ; movq xmm0, qword ptr [rsp - 8] ; ret
0x0000000000042f1e : mov dword ptr [rsp - 8], edx ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000013ba37 : mov dword ptr [rsp], 0 ; call rax
0x00000000000a0039 : mov dword ptr [rsp], 0 ; jmp 0xa0015
0x00000000000bb1e4 : mov dword ptr [rsp], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015441a : mov dword ptr [rsp], 2 ; call rdx
0x000000000013b73f : mov dword ptr [rsp], eax ; mov qword ptr [rsp + 8], rdx ; jmp 0x13b704
0x00000000000bb1b2 : mov dword ptr [rsp], eax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008e14a : mov dword ptr [rsp], eax ; mov rdi, rbx ; call rax
0x000000000009afd9 : mov dword ptr [rsp], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009acaa : mov dword ptr [rsp], eax ; test rax, rax ; je 0x9ad94 ; call rax
0x00000000000fa448 : mov dword ptr [rsp], ebp ; jmp 0xfa414
0x0000000000108883 : mov dword ptr [rsp], edx ; call 0x2531d
0x000000000003d3bc : mov dword ptr [rsp], edx ; call 0x39ec5
0x0000000000030f93 : mov dword ptr [rsp], edx ; jmp 0x30f5e
0x0000000000055aaa : mov dword ptr [rsp], edx ; lea r10, [rip + 0x159f58] ; jmp 0x55a84
0x00000000001019b5 : mov dword ptr fs:[0x40], 0 ; ret
0x0000000000139840 : mov dword ptr fs:[r14], r15d ; mov eax, 3 ; mov edi, dword ptr [rbp - 0x60] ; syscall
0x000000000010e059 : mov dword ptr fs:[rax], 0x16 ; jmp 0x10e034
0x0000000000043f37 : mov dword ptr fs:[rax], 0x16 ; mov eax, 0xffffffff ; ret
0x0000000000111587 : mov dword ptr fs:[rax], 0x16 ; mov eax, 1 ; ret
0x000000000005f56c : mov dword ptr fs:[rax], 0x16 ; mov eax, edx ; ret
0x0000000000118417 : mov dword ptr fs:[rax], 0x16 ; ret
0x00000000000ceab7 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x0000000000043a93 : mov dword ptr fs:[rax], 0x22 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000042d31 : mov dword ptr fs:[rax], 0x22 ; add rsp, 8 ; ret
0x00000000000449b7 : mov dword ptr fs:[rax], 0x26 ; mov eax, 0xffffffff ; ret
0x000000000015e867 : mov dword ptr fs:[rax], 0x26 ; xor eax, eax ; ret
0x0000000000042107 : mov dword ptr fs:[rax], 0x2a ; mov rax, rcx ; ret
0x00000000000ce9a9 : mov dword ptr fs:[rax], 0x4b ; mov rax, rbx ; pop rbx ; ret
0x000000000010cbd7 : mov dword ptr fs:[rax], 0x5f ; mov eax, 0xffffffff ; ret
0x000000000011333f : mov dword ptr fs:[rax], 0xc ; mov eax, 0xffffffff ; ret
0x0000000000097999 : mov dword ptr fs:[rax], 0xc ; mov rax, rsi ; ret
0x00000000000999df : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; pop rbx ; ret
0x000000000009c607 : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x000000000011ba47 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x0000000000048c07 : mov dword ptr fs:[rax], 5 ; mov eax, 0xffffffff ; ret
0x0000000000089274 : mov dword ptr fs:[rax], 9 ; mov eax, 0xffffffff ; ret
0x0000000000027417 : mov dword ptr fs:[rax], 9 ; mov eax, edi ; ret
0x0000000000115ba0 : mov dword ptr fs:[rax], edi ; mov eax, 0xffffffff ; ret
0x00000000001019d1 : mov dword ptr fs:[rax], edx ; mov eax, 0xffffffff ; ret
0x0000000000101982 : mov dword ptr fs:[rax], r8d ; mov eax, 0xffffffff ; ret
0x0000000000139220 : mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011e1bb : mov dword ptr fs:[rcx], 0x16 ; mov eax, 0xffffffff ; ret
0x000000000010d6d3 : mov dword ptr fs:[rcx], eax ; mov eax, 0xffffffff ; jmp 0x10d6a8
0x0000000000114283 : mov dword ptr fs:[rcx], eax ; mov eax, 0xffffffff ; jmp 0x114258
0x0000000000114333 : mov dword ptr fs:[rcx], eax ; mov eax, 0xffffffff ; jmp 0x114308
0x00000000000e16ab : mov dword ptr fs:[rcx], eax ; mov eax, 0xffffffff ; jmp 0xe1681
0x00000000000441c9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000112611 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; jmp 0x1125d5
0x00000000001126a9 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; jmp 0x11266a
0x00000000001159d1 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; jmp 0x1159af
0x0000000000115aa1 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; jmp 0x115a7e
0x0000000000044199 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000048b59 : mov dword ptr fs:[rdx], eax ; mov rax, -1 ; ret
0x00000000000de2a2 : mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00000000000de36c : mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x00000000000de44b : mov dword ptr fs:[rdx], r8d ; mov eax, esi ; add rsp, 0x48 ; ret
0x00000000000ddbe0 : mov dword ptr fs:[rdx], r8d ; mov rax, rsi ; add rsp, 8 ; ret
0x00000000000ba124 : mov dword ptr ss:[rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x00000000000b5482 : mov dx, word ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000b54c3 : mov dx, word ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x00000000001656f0 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000000b6a40 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x00000000000b7870 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 2] ; ret
0x00000000000b5440 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000b94a0 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x0000000000194aeb : mov eax, 0 ; add byte ptr [rax - 0x7ab70000], al ; ret 0x7775
0x0000000000194bd9 : mov eax, 0 ; add byte ptr [rax - 0x7ab80000], al ; ret
0x0000000000049535 : mov eax, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x3dbbf0b8], al ; jmp 0x49564
0x00000000000ba693 : mov eax, 0 ; and ch, 0xf0 ; pop rbx ; cmovne rax, rdx ; ret
0x0000000000111883 : mov eax, 0 ; cmova eax, edx ; ret
0x0000000000114744 : mov eax, 0 ; cmove rax, rbx ; pop rbx ; ret
0x0000000000126227 : mov eax, 0 ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000000ecb92 : mov eax, 0 ; jne 0xecbb3 ; cmp byte ptr [rsi], cl ; je 0xecb3d ; ret
0x00000000000a0994 : mov eax, 0 ; test dl, dl ; cmovne rax, rdi ; ret
0x0000000000145704 : mov eax, 0x10 ; pop rbx ; pop rbp ; ret
0x00000000000ba6e0 : mov eax, 0x10 ; pop rbx ; ret
0x0000000000063ba0 : mov eax, 0x10 ; ret
0x000000000011290a : mov eax, 0x10 ; syscall
0x0000000000147c71 : mov eax, 0x100 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000112d02 : mov eax, 0x100 ; mov word ptr [rdi + 0x16], ax ; ret
0x000000000013ace9 : mov eax, 0x100 ; ret
0x000000000013ace0 : mov eax, 0x101 ; ret
0x000000000010ce4c : mov eax, 0x101 ; syscall
0x000000000013acd7 : mov eax, 0x102 ; cmovne eax, edx ; ret
0x000000000010cc20 : mov eax, 0x102 ; syscall
0x000000000010c90a : mov eax, 0x103 ; syscall
0x000000000010e1e3 : mov eax, 0x104 ; syscall
0x0000000000115ad5 : mov eax, 0x105 ; syscall
0x000000000010c962 : mov eax, 0x106 ; syscall
0x000000000010eaf0 : mov eax, 0x107 ; syscall
0x0000000000063a43 : mov eax, 0x108 ; syscall
0x000000000010e9d3 : mov eax, 0x109 ; syscall
0x000000000010ea30 : mov eax, 0x10a ; syscall
0x000000000010ea93 : mov eax, 0x10b ; syscall
0x000000000010cb8d : mov eax, 0x10c ; syscall
0x000000000010d363 : mov eax, 0x10d ; syscall
0x0000000000114156 : mov eax, 0x10e ; mov edi, dword ptr [rsp + 0x14] ; syscall
0x00000000001140f2 : mov eax, 0x10e ; syscall
0x00000000001117c3 : mov eax, 0x10f ; syscall
0x000000000010b310 : mov eax, 0x11 ; syscall
0x000000000011e7b0 : mov eax, 0x110 ; syscall
0x000000000011e000 : mov eax, 0x113 ; syscall
0x000000000011dea0 : mov eax, 0x114 ; syscall
0x00000000001122c0 : mov eax, 0x115 ; syscall
0x000000000011df50 : mov eax, 0x116 ; syscall
0x00000000001121a8 : mov eax, 0x118 ; syscall
0x000000000011dc26 : mov eax, 0x119 ; syscall
0x000000000011e810 : mov eax, 0x11b ; syscall
0x0000000000111aaa : mov eax, 0x11d ; mov rdx, rsi ; xor esi, esi ; syscall
0x0000000000112360 : mov eax, 0x11d ; syscall
0x000000000011e843 : mov eax, 0x11e ; syscall
0x000000000011e870 : mov eax, 0x11f ; syscall
0x000000000010b3c0 : mov eax, 0x12 ; syscall
0x000000000011f450 : mov eax, 0x120 ; syscall
0x000000000011dcd3 : mov eax, 0x121 ; mov edx, 8 ; syscall
0x000000000011dd10 : mov eax, 0x122 ; syscall
0x000000000011e480 : mov eax, 0x123 ; syscall
0x000000000010d740 : mov eax, 0x124 ; syscall
0x000000000010d7a0 : mov eax, 0x125 ; syscall
0x000000000011e5a0 : mov eax, 0x126 ; syscall
0x0000000000113593 : mov eax, 0x127 ; syscall
0x0000000000113643 : mov eax, 0x128 ; syscall
0x000000000011f4f0 : mov eax, 0x12b ; syscall
0x000000000011e8a0 : mov eax, 0x12c ; syscall
0x000000000011e303 : mov eax, 0x12d ; syscall
0x000000000011dd93 : mov eax, 0x12e ; syscall
0x0000000000112de7 : mov eax, 0x12e ; xor edi, edi ; syscall
0x000000000011e8d3 : mov eax, 0x12f ; syscall
0x000000000011344d : mov eax, 0x13 ; syscall
0x000000000011e0bd : mov eax, 0x130 ; syscall
0x000000000011e3c0 : mov eax, 0x131 ; syscall
0x0000000000114340 : mov eax, 0x132 ; syscall
0x000000000011f5a0 : mov eax, 0x133 ; syscall
0x000000000011e900 : mov eax, 0x134 ; syscall
0x000000000010c437 : mov eax, 0x135 ; syscall
0x000000000011e933 : mov eax, 0x136 ; syscall
0x000000000011e963 : mov eax, 0x137 ; syscall
0x0000000000048aed : mov eax, 0x13e ; syscall
0x000000000011e990 : mov eax, 0x13f ; syscall
0x000000000013cc33 : mov eax, 0x14 ; add edx, 1 ; syscall
0x00000000001134ed : mov eax, 0x14 ; syscall
0x00000000000e19d2 : mov eax, 0x142 ; syscall
0x00000000001120cf : mov eax, 0x146 ; syscall
0x0000000000113717 : mov eax, 0x147 ; syscall
0x0000000000113877 : mov eax, 0x148 ; syscall
0x000000000011e1d8 : mov eax, 0x149 ; syscall
0x000000000011e9c0 : mov eax, 0x14a ; syscall
0x000000000011e9f0 : mov eax, 0x14b ; syscall
0x000000000010c6cc : mov eax, 0x14c ; syscall
0x000000000010d0e0 : mov eax, 0x15 ; syscall
0x0000000000130718 : mov eax, 0x16 ; jmp 0x1304c3
0x0000000000130c48 : mov eax, 0x16 ; jmp 0x130a0a
0x00000000000a733e : mov eax, 0x16 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009aa30 : mov eax, 0x16 ; ret
0x000000000010d770 : mov eax, 0x16 ; syscall
0x0000000000114000 : mov eax, 0x17 ; syscall
0x0000000000101860 : mov eax, 0x18 ; syscall
0x000000000011e663 : mov eax, 0x19 ; syscall
0x00000000001175cd : mov eax, 0x1a ; syscall
0x0000000000117690 : mov eax, 0x1b ; syscall
0x000000000010c287 : mov eax, 0x1c ; syscall
0x000000000011fa53 : mov eax, 0x1d ; syscall
0x000000000011f9f0 : mov eax, 0x1e ; syscall
0x000000000011fa80 : mov eax, 0x1f ; syscall
0x00000000000e3692 : mov eax, 0x20 ; cmovne rax, rdx ; ret
0x00000000000ba700 : mov eax, 0x20 ; pop rbx ; ret
0x000000000010d6e0 : mov eax, 0x20 ; syscall
0x0000000000035297 : mov eax, 0x200 ; ret
0x000000000010d710 : mov eax, 0x21 ; syscall
0x00000000000a72d5 : mov eax, 0x22 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e15bd : mov eax, 0x22 ; syscall
0x00000000000e163d : mov eax, 0x23 ; syscall
0x00000000000d2980 : mov eax, 0x24 ; syscall
0x00000000000e1510 : mov eax, 0x25 ; syscall
0x00000000000d29b0 : mov eax, 0x26 ; syscall
0x00000000000e26e0 : mov eax, 0x27 ; syscall
0x0000000000111d53 : mov eax, 0x28 ; syscall
0x000000000011f110 : mov eax, 0x29 ; syscall
0x000000000011eb1d : mov eax, 0x2a ; syscall
0x000000000011ea4d : mov eax, 0x2b ; syscall
0x000000000011eea6 : mov eax, 0x2c ; syscall
0x000000000011ec86 : mov eax, 0x2d ; syscall
0x000000000011ef5d : mov eax, 0x2e ; syscall
0x000000000011edfd : mov eax, 0x2f ; syscall
0x00000000000ba6f0 : mov eax, 0x30 ; pop rbx ; ret
0x000000000011f0e0 : mov eax, 0x30 ; syscall
0x000000000011eae0 : mov eax, 0x31 ; syscall
0x000000000011ec40 : mov eax, 0x32 ; syscall
0x000000000011ebe0 : mov eax, 0x33 ; syscall
0x000000000011ebb0 : mov eax, 0x34 ; syscall
0x000000000011f143 : mov eax, 0x35 ; syscall
0x000000000011f0b3 : mov eax, 0x36 ; syscall
0x000000000011ec13 : mov eax, 0x37 ; syscall
0x00000000000e1707 : mov eax, 0x38 ; syscall
0x00000000000e18c1 : mov eax, 0x3a ; syscall
0x00000000000e1950 : mov eax, 0x3b ; syscall
0x000000000011db22 : mov eax, 0x3c ; syscall
0x00000000000e12ea : mov eax, 0x3d ; syscall
0x0000000000052ee9 : mov eax, 0x3e ; mov edi, dword ptr [rdi + 0x10] ; syscall
0x00000000000441b0 : mov eax, 0x3e ; syscall
0x00000000000e1240 : mov eax, 0x3f ; syscall
0x00000000000ba720 : mov eax, 0x40 ; pop rbx ; ret
0x00000000000e35e8 : mov eax, 0x40 ; ret
0x000000000011f8f0 : mov eax, 0x40 ; syscall
0x000000000011f8c0 : mov eax, 0x41 ; syscall
0x000000000011f952 : mov eax, 0x42 ; syscall
0x000000000011fa20 : mov eax, 0x43 ; syscall
0x0000000000111432 : mov eax, 0x4389ffff ; cmp al, 0x85 ; ror byte ptr [rdi], 0x88 ; ret
0x000000000011f860 : mov eax, 0x44 ; syscall
0x000000000011f720 : mov eax, 0x45 ; syscall
0x000000000011f7c0 : mov eax, 0x46 ; syscall
0x000000000011f890 : mov eax, 0x47 ; syscall
0x000000000010d48d : mov eax, 0x48 ; syscall
0x000000000015da51 : mov eax, 0x48000001 ; mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000015df0c : mov eax, 0x48000001 ; mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000063bf4 : mov eax, 0x48000c81 ; add esp, 0x80 ; ret
0x0000000000028cd4 : mov eax, 0x4800134c ; mov edi, ebx ; call r14
0x000000000010c30b : mov eax, 0x48d001d2 ; cmp edi, esi ; ja 0x10c309 ; ret
0x000000000010d510 : mov eax, 0x49 ; syscall
0x000000000011421d : mov eax, 0x4a ; syscall
0x00000000001142cd : mov eax, 0x4b ; syscall
0x0000000000115b10 : mov eax, 0x4c ; syscall
0x0000000000115b40 : mov eax, 0x4d ; syscall
0x000000000010d93b : mov eax, 0x4f ; syscall
0x000000000010d860 : mov eax, 0x50 ; syscall
0x000000000010d890 : mov eax, 0x51 ; syscall
0x0000000000063a10 : mov eax, 0x52 ; syscall
0x000000000010cbf0 : mov eax, 0x53 ; syscall
0x000000000010eb20 : mov eax, 0x54 ; syscall
0x000000000010d7dd : mov eax, 0x55 ; syscall
0x000000000010e9a0 : mov eax, 0x56 ; syscall
0x000000000010eac0 : mov eax, 0x57 ; syscall
0x000000000010ea00 : mov eax, 0x58 ; syscall
0x000000000010ea60 : mov eax, 0x59 ; syscall
0x000000000010cb00 : mov eax, 0x5a ; syscall
0x000000000010cb30 : mov eax, 0x5b ; syscall
0x0000000000030e48 : mov eax, 0x5b000000 ; pop r12 ; ret
0x00000000001163d3 : mov eax, 0x5b000000 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001504ee : mov eax, 0x5b000000 ; pop rbp ; ret
0x000000000010e150 : mov eax, 0x5c ; syscall
0x000000000010e180 : mov eax, 0x5d ; syscall
0x000000000010e1b0 : mov eax, 0x5e ; syscall
0x000000000010caf0 : mov eax, 0x5f ; syscall
0x00000000000ba710 : mov eax, 0x60 ; pop rbx ; ret
0x00000000000cf780 : mov eax, 0x60 ; syscall
0x0000000000112e60 : mov eax, 0x62 ; syscall
0x000000000011e780 : mov eax, 0x63 ; syscall
0x00000000000e1270 : mov eax, 0x64 ; syscall
0x0000000000114948 : mov eax, 0x65 ; syscall
0x00000000000e2700 : mov eax, 0x66 ; syscall
0x000000000011e600 : mov eax, 0x67 ; syscall
0x00000000000e2720 : mov eax, 0x68 ; syscall
0x00000000000e278e : mov eax, 0x69 ; syscall
0x00000000000e281e : mov eax, 0x6a ; syscall
0x00000000000e2710 : mov eax, 0x6b ; syscall
0x00000000000e2730 : mov eax, 0x6c ; syscall
0x00000000000e2970 : mov eax, 0x6d ; syscall
0x00000000000e26f0 : mov eax, 0x6e ; syscall
0x00000000000e29a0 : mov eax, 0x6f ; syscall
0x00000000000e2a00 : mov eax, 0x70 ; syscall
0x00000000001139be : mov eax, 0x71 ; syscall
0x0000000000113a6e : mov eax, 0x72 ; syscall
0x00000000000e2740 : mov eax, 0x73 ; syscall
0x00000000000ddabe : mov eax, 0x74 ; syscall
0x0000000000113b2e : mov eax, 0x75 ; mov edi, edx ; syscall
0x00000000000e2aae : mov eax, 0x75 ; syscall
0x000000000012c264 : mov eax, 0x75000bc3 ; or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; lodsd eax, dword ptr [rsi] ; ret
0x00000000000326e3 : mov eax, 0x75b7e8 ; add byte ptr [rcx - 0x77], al ; ret 0xf883
0x00000000000e2a30 : mov eax, 0x76 ; syscall
0x0000000000113bfe : mov eax, 0x77 ; mov edi, edx ; syscall
0x00000000000e2b4e : mov eax, 0x77 ; syscall
0x00000000000e2a60 : mov eax, 0x78 ; syscall
0x00000000000e2940 : mov eax, 0x79 ; syscall
0x000000000011dbb0 : mov eax, 0x7a ; syscall
0x000000000011dbe0 : mov eax, 0x7b ; syscall
0x00000000000e29d0 : mov eax, 0x7c ; syscall
0x000000000011e360 : mov eax, 0x7d ; syscall
0x00000000000e3570 : mov eax, 0x7e ; ret
0x000000000011e390 : mov eax, 0x7e ; syscall
0x00000000000e3542 : mov eax, 0x7f ; cmovne rax, rdx ; ret
0x00000000000441e5 : mov eax, 0x7f ; syscall
0x000000000013b870 : mov eax, 0x7fffffff ; ret
0x00000000000ba6c0 : mov eax, 0x80 ; pop rbx ; ret
0x00000000000ba5d7 : mov eax, 0x80000006 ; cpuid ; jmp 0xba5ab
0x0000000000044fa2 : mov eax, 0x81 ; syscall
0x0000000000044222 : mov eax, 0x82 ; syscall
0x0000000000044760 : mov eax, 0x83 ; syscall
0x000000000010c4e0 : mov eax, 0x84 ; syscall
0x000000000010c8a6 : mov eax, 0x85 ; syscall
0x000000000011e7e0 : mov eax, 0x86 ; syscall
0x000000000011ddc0 : mov eax, 0x87 ; syscall
0x000000000011ad77 : mov eax, 0x88 ; syscall
0x000000000010c9b0 : mov eax, 0x89 ; syscall
0x000000000012cc60 : mov eax, 0x89483f74 ; ret
0x0000000000159a7c : mov eax, 0x8948ffec ; ret
0x00000000000f05d4 : mov eax, 0x89ffffa8 ; ret 0xc031
0x000000000010c9e0 : mov eax, 0x8a ; syscall
0x00000000000ec8fc : mov eax, 0x8b90c0eb ; add al, 0x8b ; push rbp ; add al, 1 ; ret 0x341
0x0000000000113210 : mov eax, 0x8c ; syscall
0x0000000000113250 : mov eax, 0x8d ; syscall
0x00000000001017a0 : mov eax, 0x8e ; syscall
0x00000000001017d0 : mov eax, 0x8f ; syscall
0x0000000000101800 : mov eax, 0x90 ; syscall
0x0000000000101830 : mov eax, 0x91 ; syscall
0x0000000000101890 : mov eax, 0x92 ; syscall
0x00000000001018c0 : mov eax, 0x93 ; syscall
0x00000000001018f0 : mov eax, 0x94 ; syscall
0x00000000001176f0 : mov eax, 0x95 ; syscall
0x0000000000117720 : mov eax, 0x96 ; syscall
0x0000000000117750 : mov eax, 0x97 ; syscall
0x0000000000117780 : mov eax, 0x98 ; syscall
0x0000000000114670 : mov eax, 0x99 ; syscall
0x000000000011e2c0 : mov eax, 0x9a ; syscall
0x000000000011e6c0 : mov eax, 0x9b ; syscall
0x000000000011e6f3 : mov eax, 0x9d ; syscall
0x000000000011e290 : mov eax, 0x9e ; syscall
0x000000000011e330 : mov eax, 0x9f ; syscall
0x0000000000117590 : mov eax, 0xa ; syscall
0x00000000001141e0 : mov eax, 0xa1 ; syscall
0x0000000000114290 : mov eax, 0xa2 ; syscall
0x00000000001141b0 : mov eax, 0xa3 ; syscall
0x00000000000cf860 : mov eax, 0xa4 ; syscall
0x000000000011e633 : mov eax, 0xa5 ; syscall
0x000000000011db50 : mov eax, 0xa6 ; syscall
0x00000000001146a0 : mov eax, 0xa7 ; syscall
0x00000000001146d0 : mov eax, 0xa8 ; syscall
0x000000000011437c : mov eax, 0xa9 ; syscall
0x0000000000113e70 : mov eax, 0xaa ; syscall
0x0000000000113fc0 : mov eax, 0xab ; syscall
0x000000000011da10 : mov eax, 0xac ; syscall
0x000000000011d9e0 : mov eax, 0xad ; syscall
0x000000000011e3f0 : mov eax, 0xae ; syscall
0x000000000011e513 : mov eax, 0xaf ; syscall
0x0000000000117560 : mov eax, 0xb ; syscall
0x000000000011e420 : mov eax, 0xb0 ; syscall
0x000000000011e4e0 : mov eax, 0xb1 ; syscall
0x000000000011e723 : mov eax, 0xb2 ; syscall
0x000000000011e753 : mov eax, 0xb3 ; syscall
0x000000000011e690 : mov eax, 0xb4 ; syscall
0x000000000015a8f3 : mov eax, 0xb5 ; syscall
0x000000000015a943 : mov eax, 0xb6 ; syscall
0x000000000014be00 : mov eax, 0xb8000000 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000043ea2 : mov eax, 0xba ; syscall
0x000000000011db80 : mov eax, 0xbb ; syscall
0x000000000011b9d3 : mov eax, 0xbc ; syscall
0x000000000011b973 : mov eax, 0xbd ; syscall
0x000000000011b853 : mov eax, 0xbe ; syscall
0x000000000011b883 : mov eax, 0xbf ; syscall
0x00000000000eae81 : mov eax, 0xc ; pop rbp ; pop r12 ; ret
0x000000000010b49c : mov eax, 0xc ; pop rbx ; pop rbp ; ret
0x00000000001132f0 : mov eax, 0xc ; syscall
0x000000000011b8e3 : mov eax, 0xc0 ; syscall
0x000000000011b7c3 : mov eax, 0xc1 ; syscall
0x000000000011b8b0 : mov eax, 0xc2 ; syscall
0x000000000011b910 : mov eax, 0xc3 ; syscall
0x000000000011b7f0 : mov eax, 0xc4 ; syscall
0x000000000011b9a0 : mov eax, 0xc5 ; syscall
0x000000000011b940 : mov eax, 0xc6 ; syscall
0x000000000011b820 : mov eax, 0xc7 ; syscall
0x00000000001563ba : mov eax, 0xc7ffff ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000cf6c0 : mov eax, 0xc9 ; syscall
0x000000000012bd95 : mov eax, 0xca ; syscall
0x000000000011e450 : mov eax, 0xd5 ; syscall
0x00000000001176c3 : mov eax, 0xd8 ; syscall
0x00000000000dc9c0 : mov eax, 0xd9 ; syscall
0x000000000011f9c3 : mov eax, 0xdc ; syscall
0x0000000000111873 : mov eax, 0xdd ; syscall
0x0000000000043ed0 : mov eax, 0xe ; syscall
0x000000000012c73a : mov eax, 0xe3 ; syscall
0x00000000000dbac7 : mov eax, 0xe4 ; syscall
0x00000000000e3903 : mov eax, 0xe5 ; syscall
0x000000000012c7a5 : mov eax, 0xe6 ; syscall
0x000000000011de00 : mov eax, 0xe8 ; syscall
0x0000000000046e94 : mov eax, 0xe8df8948 ; ret
0x000000000011e4b3 : mov eax, 0xe9 ; syscall
0x00000000000719e7 : mov eax, 0xe9fffffa ; retf
0x0000000000043eae : mov eax, 0xea ; syscall
0x00000000001158f0 : mov eax, 0xeb ; syscall
0x000000000007bd7a : mov eax, 0xebfffff6 ; add ecx, dword ptr [rax - 0x77] ; ror byte ptr [rax - 0x77], 1 ; ret 0x8348
0x0000000000101b79 : mov eax, 0xf ; cmp dx, 2 ; je 0x101b93 ; ret
0x0000000000043f61 : mov eax, 0xf ; syscall
0x000000000005f8b4 : mov eax, 0xf001585 ; push rax ; fsub qword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x000000000009e0e9 : mov eax, 0xf480001 ; ret 0x66c3
0x000000000018bfb9 : mov eax, 0xf66b8b2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000e1473 : mov eax, 0xf7 ; syscall
0x00000000000e3560 : mov eax, 0xfc17 ; ret
0x000000000011e570 : mov eax, 0xfd ; syscall
0x00000000000e34d1 : mov eax, 0xfde8 ; cmovne rax, rdx ; ret
0x000000000011e540 : mov eax, 0xfe ; syscall
0x00000000000e35db : mov eax, 0xff ; cmovne rax, rdx ; ret
0x000000000011e5d0 : mov eax, 0xff ; syscall
0x00000000000e349b : mov eax, 0xfffa ; cmovne rax, rdx ; ret
0x00000000000e3580 : mov eax, 0xfffa ; ret
0x0000000000042a81 : mov eax, 0xfffe ; sub eax, edx ; sar eax, 0x10 ; ret
0x00000000000a6a5e : mov eax, 0xfffffff0 ; mov edi, 4 ; jmp 0xa2d6a
0x00000000000ea937 : mov eax, 0xfffffffe ; jmp 0xea69e
0x000000000015e961 : mov eax, 0xfffffffe ; ret
0x000000000010c4b3 : mov eax, 0xffffffff ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013ac92 : mov eax, 0xffffffff ; cmove eax, edx ; ret
0x0000000000087563 : mov eax, 0xffffffff ; cmp rdx, rcx ; jae 0x8757b ; mov eax, dword ptr [rdx] ; ret
0x000000000010d6d6 : mov eax, 0xffffffff ; jmp 0x10d6a5
0x0000000000112614 : mov eax, 0xffffffff ; jmp 0x1125d2
0x00000000001126ac : mov eax, 0xffffffff ; jmp 0x112667
0x0000000000114286 : mov eax, 0xffffffff ; jmp 0x114255
0x0000000000114336 : mov eax, 0xffffffff ; jmp 0x114305
0x00000000001159d4 : mov eax, 0xffffffff ; jmp 0x1159ac
0x0000000000115aa4 : mov eax, 0xffffffff ; jmp 0x115a7b
0x0000000000118213 : mov eax, 0xffffffff ; jmp 0x1181eb
0x00000000001426e8 : mov eax, 0xffffffff ; jmp 0x142476
0x000000000014cc8a : mov eax, 0xffffffff ; jmp 0x14cc62
0x000000000004483f : mov eax, 0xffffffff ; jmp 0x44817
0x00000000000474b8 : mov eax, 0xffffffff ; jmp 0x4748f
0x00000000000e16ae : mov eax, 0xffffffff ; jmp 0xe167e
0x000000000013b7e9 : mov eax, 0xffffffff ; mov rdx, rax ; ret
0x000000000013a5c9 : mov eax, 0xffffffff ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000133ddc : mov eax, 0xffffffff ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008d771 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000046f4e : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c532f : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r14 ; ret
0x0000000000084aac : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000004216e : mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000043dff : mov eax, 0xffffffff ; ret
0x000000000008c75a : mov eax, 0xffffffff ; test edx, edx ; je 0x8c771 ; ret
0x000000000008c759 : mov eax, 0xffffffff ; test edx, edx ; je 0x8c772 ; ret
0x000000000008cb8a : mov eax, 0xffffffff ; test edx, edx ; je 0x8cba1 ; ret
0x000000000008cb89 : mov eax, 0xffffffff ; test edx, edx ; je 0x8cba2 ; ret
0x00000000000efce6 : mov eax, 1 ; add rdx, rcx ; jmp 0xefd08
0x0000000000125e0d : mov eax, 1 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000082c97 : mov eax, 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000114aaf : mov eax, 1 ; add rsp, 8 ; ret
0x0000000000155d77 : mov eax, 1 ; cmp esi, 2 ; je 0x155d6a ; jmp 0x155d51
0x0000000000190550 : mov eax, 1 ; jg 0x190569 ; neg eax ; ret
0x00000000000cda00 : mov eax, 1 ; jg 0xcda12 ; neg eax ; ret
0x000000000018d326 : mov eax, 1 ; jl 0x18d339 ; neg eax ; ret
0x0000000000147e8b : mov eax, 1 ; jmp 0x147e62
0x000000000014852e : mov eax, 1 ; jmp 0x1484fd
0x00000000001544ab : mov eax, 1 ; jmp 0x154482
0x000000000015452b : mov eax, 1 ; jmp 0x154502
0x00000000001545eb : mov eax, 1 ; jmp 0x1545c2
0x0000000000154b4c : mov eax, 1 ; jmp 0x154b24
0x0000000000154bdc : mov eax, 1 ; jmp 0x154bb4
0x0000000000154cfb : mov eax, 1 ; jmp 0x154cd2
0x0000000000066793 : mov eax, 1 ; jmp 0x66788
0x00000000000eaa60 : mov eax, 1 ; mov byte ptr [rdi], 0x5b ; ret
0x0000000000155b6d : mov eax, 1 ; mov dword ptr [rdi + 0x28], edx ; ret
0x000000000005869d : mov eax, 1 ; mov dword ptr [rdx], 0xffffc002 ; ret
0x0000000000155c61 : mov eax, 1 ; mov qword ptr [rdi + 0x18], rdx ; ret
0x00000000000585e5 : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x0000000000048a71 : mov eax, 1 ; mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x000000000014f2f4 : mov eax, 1 ; movups xmmword ptr [r8 + 0x20], xmm2 ; ret
0x000000000014bd0e : mov eax, 1 ; movups xmmword ptr [rdx], xmm1 ; ret
0x000000000014e9f6 : mov eax, 1 ; movups xmmword ptr [rdx], xmm2 ; ret
0x000000000014f306 : mov eax, 1 ; movups xmmword ptr [rdx], xmm3 ; ret
0x000000000014f2e6 : mov eax, 1 ; movups xmmword ptr [rdx], xmm4 ; ret
0x0000000000061abb : mov eax, 1 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000061b8d : mov eax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000147925 : mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00000000001064b2 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000056457 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014475c : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000010b708 : mov eax, 1 ; pop rbx ; ret
0x00000000000562e3 : mov eax, 1 ; ret
0x000000000010d01d : mov eax, 1 ; syscall
0x00000000000e3760 : mov eax, 1 ; test edi, edi ; js 0xe3779 ; ret
0x000000000011bffc : mov eax, 2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000587c2 : mov eax, 2 ; ret
0x000000000013b088 : mov eax, 2 ; sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x000000000012c675 : mov eax, 3 ; cmovne eax, edx ; ret
0x0000000000139844 : mov eax, 3 ; mov edi, dword ptr [rbp - 0x60] ; syscall
0x00000000000ce4d1 : mov eax, 3 ; ret
0x000000000010d66d : mov eax, 3 ; syscall
0x00000000000ce4e1 : mov eax, 4 ; ret
0x000000000010c5be : mov eax, 4 ; syscall
0x000000000012c897 : mov eax, 5 ; pop r12 ; pop rbp ; ret
0x00000000001062a8 : mov eax, 5 ; pop rbp ; pop r12 ; ret
0x00000000001063a4 : mov eax, 5 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ce4f1 : mov eax, 5 ; ret
0x000000000010c60c : mov eax, 5 ; syscall
0x00000000000ce501 : mov eax, 6 ; ret
0x000000000010c65e : mov eax, 6 ; syscall
0x00000000000ce511 : mov eax, 7 ; ret
0x00000000001116ed : mov eax, 7 ; syscall
0x00000000000ba6d0 : mov eax, 8 ; pop rbx ; ret
0x0000000000027b00 : mov eax, 8 ; ret
0x000000000010d0b0 : mov eax, 8 ; syscall
0x000000000010b6b1 : mov eax, 9 ; pop rbp ; pop r12 ; ret
0x00000000001174bc : mov eax, 9 ; syscall
0x000000000012c382 : mov eax, dword ptr [0x10] ; ret
0x00000000000baca2 : mov eax, dword ptr [r8 + rax*4] ; sub eax, dword ptr [r8 + r9*4] ; je 0xbac92 ; ret
0x000000000014bd80 : mov eax, dword ptr [r8] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000154398 : mov eax, dword ptr [rax + 0x10] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000012c2df : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; je 0x12c2f1 ; call rax
0x000000000012c2df : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; je 0x12c2f5 ; call rax
0x0000000000088dca : mov eax, dword ptr [rax + 0x130] ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000120820 : mov eax, dword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x0000000000154d7d : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000001543c8 : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000120920 : mov eax, dword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x0000000000140037 : mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x140047 ; ret
0x0000000000113ca8 : mov eax, dword ptr [rax + 0x18] ; test rax, rax ; je 0x113cb9 ; ret
0x000000000011ba61 : mov eax, dword ptr [rax + 0x1a0] ; ret
0x000000000015d97f : mov eax, dword ptr [rax + 0x1b0] ; jmp rax
0x0000000000088dd1 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x00000000000fda48 : mov eax, dword ptr [rax + 0x20] ; mov qword ptr [rcx + 0x20], rax ; jmp 0xfda24
0x000000000012b6f9 : mov eax, dword ptr [rax + 0x30] ; ret
0x00000000001210b7 : mov eax, dword ptr [rax + 0x38] ; ret
0x000000000011b7ac : mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x000000000014509c : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x1450b4 ; mov rdi, rbx ; call rax
0x00000000001459f3 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x145a0b ; mov rdi, rbp ; call rax
0x0000000000146a07 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x146a1f ; mov rdi, rbx ; call rax
0x0000000000146d72 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x146d8a ; mov rdi, rbx ; call rax
0x000000000014c67d : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x14c695 ; mov rdi, r12 ; call rax
0x000000000014c865 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x14c87f ; lea rdi, [rbp + 0x10] ; call rax
0x000000000014db1b : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x14db33 ; mov rdi, rbp ; call rax
0x000000000014dbfa : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x14dc12 ; mov rdi, r12 ; call rax
0x000000000014e959 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x14e973 ; lea rdi, [rbx + 0x68] ; call rax
0x000000000014f083 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x14f09b ; mov rdi, r12 ; call rax
0x000000000014f3f9 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x14f413 ; lea rdi, [rbx + 0x58] ; call rax
0x0000000000152ac5 : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x152adf ; lea rdi, [rbp + 0x10] ; call rax
0x000000000015321e : mov eax, dword ptr [rax + 0x38] ; test rax, rax ; je 0x153238 ; lea rdi, [rbp + 0x10] ; call rax
0x000000000014e8fd : mov eax, dword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000352b2 : mov eax, dword ptr [rax + 0x48] ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x00000000000898d4 : mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000014f23d : mov eax, dword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000035292 : mov eax, dword ptr [rax + 0x58] ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x0000000000047cf6 : mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000091918 : mov eax, dword ptr [rax + 0x68] ; test rax, rax ; jne 0x91918 ; ret
0x000000000014bc20 : mov eax, dword ptr [rax + 0xa0] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000339ee : mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000011ba3a : mov eax, dword ptr [rax + 8] ; ret
0x000000000012c31f : mov eax, dword ptr [rax + 8] ; test rax, rax ; je 0x12c331 ; call rax
0x000000000012c31f : mov eax, dword ptr [rax + 8] ; test rax, rax ; je 0x12c335 ; call rax
0x000000000009c4eb : mov eax, dword ptr [rax + 8] ; test rax, rax ; jne 0x9c4ea ; xor eax, eax ; ret
0x00000000000baca3 : mov eax, dword ptr [rax + rax*4] ; sub eax, dword ptr [r8 + r9*4] ; je 0xbac91 ; ret
0x00000000001211e6 : mov eax, dword ptr [rax + rcx] ; mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x0000000000035295 : mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x0000000000035457 : mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000034daf : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000034dff : mov eax, dword ptr [rax + rdx] ; ret
0x0000000000121a44 : mov eax, dword ptr [rax + rdx] ; shr eax, cl ; and eax, 1 ; ret
0x0000000000048bd8 : mov eax, dword ptr [rax] ; cmp eax, 4 ; je 0x48bac ; mov eax, 0xffffffff ; ret
0x0000000000071fd0 : mov eax, dword ptr [rax] ; mov dword ptr [rbp - 0x528], eax ; jmp 0x6e22f
0x000000000014bd81 : mov eax, dword ptr [rax] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000339ec : mov eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x0000000000034dac : mov eax, dword ptr [rax] ; mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x00000000000339e9 : mov eax, dword ptr [rax] ; mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000003526c : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000000350ec : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 2 ; movzx eax, ax ; ret
0x000000000003518c : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 4 ; movzx eax, ax ; ret
0x00000000000350ac : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 8 ; movzx eax, ax ; ret
0x0000000000047cf3 : mov eax, dword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000140129 : mov eax, dword ptr [rax] ; ret
0x000000000010b30a : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x10b32b ; mov eax, 0x11 ; syscall
0x000000000010b3ba : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x10b3db ; mov eax, 0x12 ; syscall
0x000000000010ce46 : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x10cebc ; mov eax, 0x101 ; syscall
0x000000000010cf77 : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x10cf98 ; xor eax, eax ; syscall
0x000000000010d017 : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x10d03b ; mov eax, 1 ; syscall
0x000000000010d487 : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x10d4bb ; mov eax, 0x48 ; syscall
0x000000000010d667 : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x10d68b ; mov eax, 3 ; syscall
0x000000000010d7d7 : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x10d7fb ; mov eax, 0x55 ; syscall
0x00000000001116e7 : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x11170b ; mov eax, 7 ; syscall
0x00000000001122ba : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x1122db ; mov eax, 0x115 ; syscall
0x000000000011235a : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x11237b ; mov eax, 0x11d ; syscall
0x0000000000113447 : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x11346b ; mov eax, 0x13 ; syscall
0x00000000001134e7 : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x11350b ; mov eax, 0x14 ; syscall
0x0000000000113ffa : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x11401b ; mov eax, 0x17 ; syscall
0x0000000000114217 : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x11423b ; mov eax, 0x4a ; syscall
0x00000000001142c7 : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x1142eb ; mov eax, 0x4b ; syscall
0x00000000001175c7 : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x1175eb ; mov eax, 0x1a ; syscall
0x000000000011ddfa : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x11de1b ; mov eax, 0xe8 ; syscall
0x000000000011de9a : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x11debb ; mov eax, 0x114 ; syscall
0x000000000011df4a : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x11df6b ; mov eax, 0x116 ; syscall
0x000000000011dffa : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x11e01b ; mov eax, 0x113 ; syscall
0x000000000011e0b7 : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x11e0db ; mov eax, 0x130 ; syscall
0x000000000011ea47 : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x11ea6b ; mov eax, 0x2b ; syscall
0x000000000011eb17 : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x11eb3b ; mov eax, 0x2a ; syscall
0x000000000011ed3a : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x11ed5b ; mov eax, 0x2d ; syscall
0x000000000011edf7 : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x11ee1b ; mov eax, 0x2f ; syscall
0x000000000011ef57 : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x11ef7b ; mov eax, 0x2e ; syscall
0x000000000011effa : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x11f01b ; mov eax, 0x2c ; syscall
0x000000000011f44a : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x11f46b ; mov eax, 0x120 ; syscall
0x000000000011f4ea : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x11f50b ; mov eax, 0x12b ; syscall
0x000000000011f59a : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x11f5bb ; mov eax, 0x133 ; syscall
0x000000000011f71a : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x11f73b ; mov eax, 0x45 ; syscall
0x000000000011f7ba : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x11f7db ; mov eax, 0x46 ; syscall
0x000000000012c3bd : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x12c3fb ; mov eax, 0x23 ; syscall
0x000000000012c79f : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x12c7eb ; mov eax, 0xe6 ; syscall
0x0000000000048ae7 : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x48b0b ; mov eax, 0x13e ; syscall
0x00000000000e15b7 : mov eax, dword ptr [rax] ; test eax, eax ; jne 0xe15db ; mov eax, 0x22 ; syscall
0x00000000000e1637 : mov eax, dword ptr [rax] ; test eax, eax ; jne 0xe165b ; mov eax, 0x23 ; syscall
0x000000000011aa98 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x11ab3b ; call rax
0x000000000011ac23 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x11ad4b ; call rax
0x000000000012c21f : mov eax, dword ptr [rax] ; test rax, rax ; je 0x12c22f ; call rax
0x0000000000031ec2 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x31ed4 ; call rax
0x000000000009411c : mov eax, dword ptr [rax] ; test rax, rax ; je 0x9412f ; call rax
0x0000000000026bf8 : mov eax, dword ptr [rbp + 0x18] ; test rax, rax ; je 0x26c10 ; mov rdi, rbp ; call rax
0x0000000000086daa : mov eax, dword ptr [rbp + 0x20] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000086c2e : mov eax, dword ptr [rbp + 0x28] ; add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000083ee4 : mov eax, dword ptr [rbp + 0x48] ; add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000035c5c : mov eax, dword ptr [rbp + 8] ; sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000eaf68 : mov eax, dword ptr [rbp + rcx - 4] ; cmp eax, r12d ; jg 0xeaf6a ; jmp 0xeaf47
0x000000000006fc59 : mov eax, dword ptr [rbp - 0x550] ; lea rdi, [rax + 0x10] ; call 0x9c6ac
0x000000000002841b : mov eax, dword ptr [rbp - 0x68] ; call rax
0x0000000000140165 : mov eax, dword ptr [rbx + 0x10] ; test eax, eax ; jne 0x140183 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000090bfd : mov eax, dword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000008c235 : mov eax, dword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x000000000008ac74 : mov eax, dword ptr [rbx + 0x28] ; sub rax, rdx ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000091379 : mov eax, dword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000009c48c : mov eax, dword ptr [rbx + 0x40] ; je 0x9c4d2 ; mov rdi, qword ptr [rbx + 0x48] ; mov rsi, r13 ; call rax
0x000000000009c554 : mov eax, dword ptr [rbx + 0x40] ; test byte ptr [rbx + 0x50], 1 ; jne 0x9c53c ; mov rdi, rsi ; call rax
0x0000000000091829 : mov eax, dword ptr [rbx + 0x48] ; add rsp, 0x20 ; mov ecx, edx ; xor edx, edx ; pop rbx ; jmp rax
0x0000000000154680 : mov eax, dword ptr [rbx + 8] ; lea rsi, [rsp + 0x10] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000147f15 : mov eax, dword ptr [rbx + 8] ; mov rsi, r12 ; mov rdi, rbx ; call qword ptr [rax]
0x00000000001390e2 : mov eax, dword ptr [rbx] ; test eax, eax ; jne 0x1390db ; mov rdi, r15 ; call 0x25323
0x000000000015194a : mov eax, dword ptr [rbx] ; test rax, rax ; je 0x151960 ; pop rbx ; ret
0x0000000000178514 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; lea rax, [rdx + 6] ; ret
0x00000000000b2059 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00000000001784f5 : mov eax, dword ptr [rcx + 4] ; mov word ptr [rdx + 4], ax ; lea rax, [rdx + 5] ; ret
0x00000000000b203a : mov eax, dword ptr [rcx + 4] ; mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x0000000000178526 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 8] ; ret
0x00000000001741d6 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x00000000001785a7 : mov eax, dword ptr [rcx + 5] ; mov qword ptr [rdx + 5], rax ; lea rax, [rdx + 0xc] ; ret
0x0000000000174217 : mov eax, dword ptr [rcx + 5] ; mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x0000000000178546 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 9] ; ret
0x00000000001741e6 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00000000001785c7 : mov eax, dword ptr [rcx + 6] ; mov qword ptr [rdx + 6], rax ; lea rax, [rdx + 0xd] ; ret
0x0000000000174237 : mov eax, dword ptr [rcx + 6] ; mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x0000000000178566 : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xa] ; ret
0x00000000000b20dd : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000001785e7 : mov eax, dword ptr [rcx + 7] ; mov qword ptr [rdx + 7], rax ; lea rax, [rdx + 0xe] ; ret
0x0000000000174257 : mov eax, dword ptr [rcx + 7] ; mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x0000000000178586 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xb] ; ret
0x00000000000b20fd : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000178477 : mov eax, dword ptr [rcx + 8] ; mov qword ptr [rdx + 8], rax ; lea rax, [rdx + 0xf] ; ret
0x0000000000174147 : mov eax, dword ptr [rcx + 8] ; mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x00000000000b20be : mov eax, dword ptr [rcx + 8] ; mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x000000000017d8da : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000000bac55 : mov eax, dword ptr [rcx + rax*4] ; sub eax, dword ptr [rcx + r8*4] ; je 0xbac49 ; ret
0x000000000017f1b2 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000086c67 : mov eax, dword ptr [rcx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001784d0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x00000000000b2005 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000178421 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x00000000001740f1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000001784a1 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x00000000000b1fd6 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000010bd94 : mov eax, dword ptr [rcx] ; movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x000000000010c1d0 : mov eax, dword ptr [rdi + 0x108] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000cd90b : mov eax, dword ptr [rdi + 0x10] ; cmp eax, dword ptr [rsi + 0x10] ; jne 0xcda0c ; ret
0x00000000000873ce : mov eax, dword ptr [rdi + 0x10] ; sar rdx, 2 ; sub eax, edx ; ret
0x0000000000092690 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000000926b8 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000119646 : mov eax, dword ptr [rdi + 0x10] ; test rax, rax ; jne 0x11969b ; mov rdi, qword ptr [r15] ; call r12
0x000000000010c1c0 : mov eax, dword ptr [rdi + 0x10c] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000cd920 : mov eax, dword ptr [rdi + 0x14] ; cmp eax, dword ptr [rsi + 0x14] ; jne 0xcda0c ; ret
0x0000000000155f3b : mov eax, dword ptr [rdi + 0x18] ; cmp dword ptr [rdi + 0x20], esi ; jbe 0x155f5b ; add dword ptr [rdi + 0x28], esi ; ret
0x00000000000cd935 : mov eax, dword ptr [rdi + 0x18] ; cmp eax, dword ptr [rsi + 0x18] ; jne 0xcda0c ; ret
0x0000000000155b31 : mov eax, dword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000cd950 : mov eax, dword ptr [rdi + 0x1c] ; cmp eax, dword ptr [rsi + 0x1c] ; jne 0xcda0c ; ret
0x00000000000cd96b : mov eax, dword ptr [rdi + 0x20] ; cmp eax, dword ptr [rsi + 0x20] ; jne 0xcda0c ; ret
0x0000000000147050 : mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi], 7 ; mov dword ptr [rsi + 8], eax ; ret
0x00000000000330e2 : mov eax, dword ptr [rdi + 0x20] ; mov rbx, rdi ; test rax, rax ; je 0x330fa ; call rax
0x00000000000dc9b1 : mov eax, dword ptr [rdi + 0x20] ; ret
0x000000000019621d : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x196234 ; call rax
0x00000000000cd980 : mov eax, dword ptr [rdi + 0x24] ; cmp eax, dword ptr [rsi + 0x24] ; jne 0xcda08 ; ret
0x00000000000cd995 : mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0xcda08 ; ret
0x00000000000937cf : mov eax, dword ptr [rdi + 0x28] ; mov qword ptr [rax + 0x20], rdx ; add rsp, 0x18 ; ret
0x0000000000155ec0 : mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000008c281 : mov eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000cd9a0 : mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xcda08 ; ret
0x00000000000cd9bb : mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0xcda08 ; ret
0x00000000000cd9d0 : mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0xcda08 ; ret
0x00000000000cd9e5 : mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0xcda08 ; ret
0x00000000000cd9f0 : mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xcda08 ; ret
0x000000000008c171 : mov eax, dword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x00000000000898d1 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000000eca90 : mov eax, dword ptr [rdi + 0x4c] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ecab0 : mov eax, dword ptr [rdi + 0x4c] ; ret
0x0000000000092971 : mov eax, dword ptr [rdi + 0x68] ; ret
0x000000000008a508 : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x8a517 ; ret
0x00000000000cd8f0 : mov eax, dword ptr [rdi + 0xc] ; cmp eax, dword ptr [rsi + 0xc] ; jne 0xcda0c ; ret
0x00000000000cd8c0 : mov eax, dword ptr [rdi + 4] ; cmp eax, dword ptr [rsi + 4] ; jne 0xcda0c ; ret
0x000000000010b900 : mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000112780 : mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x00000000000cd8d5 : mov eax, dword ptr [rdi + 8] ; cmp eax, dword ptr [rsi + 8] ; jne 0xcda0c ; ret
0x000000000008ea01 : mov eax, dword ptr [rdi + 8] ; cmp rax, qword ptr [rdi + 0x10] ; jae 0x8ea1c ; movzx eax, byte ptr [rax] ; ret
0x0000000000092a87 : mov eax, dword ptr [rdi + 8] ; cmp rax, rdx ; jae 0x92abb ; movzx eax, byte ptr [rax] ; ret
0x0000000000154576 : mov eax, dword ptr [rdi + 8] ; jmp qword ptr [rax]
0x0000000000154e91 : mov eax, dword ptr [rdi + 8] ; lea rsi, [rsp + 0x10] ; call qword ptr [rax]
0x0000000000154671 : mov eax, dword ptr [rdi + 8] ; lea rsi, [rsp + 8] ; call qword ptr [rax]
0x000000000015250c : mov eax, dword ptr [rdi + 8] ; mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x0000000000147e79 : mov eax, dword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x0000000000190417 : mov eax, dword ptr [rdi - 0x10] ; cmp eax, dword ptr [rsi - 0x10] ; jne 0x19055c ; ret
0x0000000000190430 : mov eax, dword ptr [rdi - 0xc] ; cmp eax, dword ptr [rsi - 0xc] ; jne 0x19055c ; ret
0x0000000000190540 : mov eax, dword ptr [rdi - 4] ; cmp eax, dword ptr [rsi - 4] ; jne 0x19055a ; xor eax, eax ; ret
0x0000000000190460 : mov eax, dword ptr [rdi - 4] ; cmp eax, dword ptr [rsi - 4] ; jne 0x19055c ; ret
0x0000000000190445 : mov eax, dword ptr [rdi - 8] ; cmp eax, dword ptr [rsi - 8] ; jne 0x19055c ; ret
0x000000000008c1e0 : mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x000000000008c1b0 : mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x00000000000cd8ab : mov eax, dword ptr [rdi] ; cmp eax, dword ptr [rsi] ; jne 0xcda0a ; ret
0x0000000000093521 : mov eax, dword ptr [rdi] ; cmp rax, 0x2000000 ; jbe 0x9353a ; ret
0x000000000011fac1 : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x000000000009267e : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000012be9c : mov eax, dword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x0000000000093571 : mov eax, dword ptr [rdi] ; nop ; mov dword ptr [rip + 0x154072], eax ; ret
0x00000000000932b1 : mov eax, dword ptr [rdi] ; nop ; mov qword ptr [rip + 0x15102d], rax ; ret
0x00000000000932a1 : mov eax, dword ptr [rdi] ; nop ; mov qword ptr [rip + 0x151035], rax ; ret
0x0000000000093251 : mov eax, dword ptr [rdi] ; nop ; mov qword ptr [rip + 0x15103d], rax ; ret
0x0000000000093241 : mov eax, dword ptr [rdi] ; nop ; mov qword ptr [rip + 0x151055], rax ; ret
0x0000000000101b61 : mov eax, dword ptr [rdi] ; or qword ptr [rax + 8], 0x2000 ; ret
0x00000000000dc9f0 : mov eax, dword ptr [rdi] ; ret
0x000000000008d2f0 : mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x000000000008d300 : mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x000000000014ca94 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x14caa6 ; ret
0x000000000014ca93 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x14caa7 ; ret
0x0000000000152cc4 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x152cd6 ; ret
0x0000000000152cc3 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x152cd7 ; ret
0x000000000008c272 : mov eax, dword ptr [rdx + 0x20] ; sub rax, qword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x000000000008c162 : mov eax, dword ptr [rdx + 0x38] ; sub rax, qword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x00000000000898ab : mov eax, dword ptr [rdx + 0x4c] ; cmp dword ptr [rdx + 0x48], eax ; cmovne eax, ecx ; ret
0x0000000000101bb1 : mov eax, dword ptr [rdx + 8] ; ret
0x0000000000035223 : mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x00000000000ad416 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000013616d : mov eax, dword ptr [rdx + rax*8 + 4] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000339bd : mov eax, dword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000120804 : mov eax, dword ptr [rdx] ; cmp eax, -1 ; je 0x12081c ; add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x00000000000fe758 : mov eax, dword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x0000000000084bdc : mov eax, dword ptr [rdx] ; ret
0x0000000000092671 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x9266f ; ret
0x00000000000d1d47 : mov eax, dword ptr [rip + 0x115bf3] ; jmp 0xd1d69
0x000000000009c472 : mov eax, dword ptr [rip + 0x147ad8] ; call qword ptr [rax]
0x000000000009c291 : mov eax, dword ptr [rip + 0x147cb9] ; call qword ptr [rax]
0x000000000009c1b1 : mov eax, dword ptr [rip + 0x147d99] ; call qword ptr [rax]
0x0000000000098a35 : mov eax, dword ptr [rip + 0x14b4a5] ; mov qword ptr [rax], rdi ; ret
0x000000000009389b : mov eax, dword ptr [rip + 0x15063f] ; mov qword ptr [rax], rdx ; ret
0x0000000000092951 : mov eax, dword ptr [rip + 0x152d09] ; ret
0x0000000000044de0 : mov eax, dword ptr [rip + 0x19f3c2] ; ret
0x0000000000044dd0 : mov eax, dword ptr [rip + 0x19f3d6] ; ret
0x0000000000034d61 : mov eax, dword ptr [rip + 0x1af081] ; mov qword ptr [rax], rdx ; ret
0x0000000000030cf1 : mov eax, dword ptr [rip + 0x1b5a11] ; ret
0x0000000000029b70 : mov eax, dword ptr [rip + 0x1bcb7e] ; test eax, eax ; je 0x29b8a ; ret
0x0000000000028801 : mov eax, dword ptr [rip + 0x1c17b1] ; ret
0x00000000000287f1 : mov eax, dword ptr [rip + 0x1c17d1] ; ret
0x000000000015b184 : mov eax, dword ptr [rip + 0x8a3c6] ; call qword ptr [rax]
0x000000000015abb7 : mov eax, dword ptr [rip + 0x8a993] ; call qword ptr [rax]
0x000000000015db51 : mov eax, dword ptr [rip + 0x8c431] ; call qword ptr [rax]
0x0000000000145d20 : mov eax, dword ptr [rip + 0xa3c56] ; test eax, eax ; je 0x145d3a ; ret
0x0000000000140121 : mov eax, dword ptr [rip + 0xa3ec9] ; mov rax, qword ptr fs:[rax] ; ret
0x0000000000141e01 : mov eax, dword ptr [rip + 0xa7a19] ; test rax, rax ; jne 0x141e1b ; ret
0x0000000000140980 : mov eax, dword ptr [rip + 0xa8e9a] ; test rax, rax ; je 0x14099b ; ret
0x000000000013fbf0 : mov eax, dword ptr [rip + 0xa99ce] ; test eax, eax ; je 0x13fc0a ; ret
0x00000000001210b1 : mov eax, dword ptr [rip + 0xc2da9] ; mov eax, dword ptr [rax + 0x38] ; ret
0x0000000000117d75 : mov eax, dword ptr [rip + 0xd27f5] ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000121c99 : mov eax, dword ptr [rsi + 0x68] ; mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000035451 : mov eax, dword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000035461 : mov eax, dword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000bb04c : mov eax, dword ptr [rsi + 8] ; mov dword ptr [rdi + 0xc], eax ; mov rax, rbx ; pop rbx ; ret
0x00000000000339d1 : mov eax, dword ptr [rsi + rax*8 + 0x80] ; ret
0x00000000000567ec : mov eax, dword ptr [rsi + rbx*8] ; lea r9, [rdx] ; jmp 0x5684a
0x00000000000584ac : mov eax, dword ptr [rsi + rbx*8] ; lea r9, [rdx] ; jmp 0x5850a
0x000000000010c270 : mov eax, dword ptr [rsi] ; mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x000000000015d551 : mov eax, dword ptr [rsp + 0x10] ; call rax
0x00000000000a70c1 : mov eax, dword ptr [rsp + 0x10] ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x0000000000026b65 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x00000000000c026d : mov eax, dword ptr [rsp + 0x18] ; mov r10, rbp ; test eax, eax ; setne dl ; jmp 0xc0292
0x000000000002c3b8 : mov eax, dword ptr [rsp + 0x20] ; call rax
0x00000000001351ad : mov eax, dword ptr [rsp + 0x20] ; mov rdx, qword ptr [rax] ; xor eax, eax ; call 0x814ab
0x000000000002d471 : mov eax, dword ptr [rsp + 0x28] ; call rax
0x00000000000cf241 : mov eax, dword ptr [rsp + 0x30] ; call rax
0x00000000000e13ce : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000044269 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e1683 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e15f3 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x000000000011249d : mov eax, dword ptr [rsp + 0xc] ; jne 0x112472 ; neg eax ; jmp 0x112472
0x0000000000048b3f : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000359c2 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000462dc : mov eax, dword ptr [rsp + 8] ; call rax
0x0000000000046399 : mov eax, dword ptr [rsp + 8] ; lea r13, [r14 + rbp] ; call rax
0x00000000001376ab : mov eax, dword ptr [rsp + 8] ; mov rdi, rbx ; call rax
0x00000000001551f6 : mov eax, dword ptr [rsp + 8] ; mov rsi, rsp ; mov rdi, r12 ; call qword ptr [rax]
0x0000000000121113 : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x0000000000121174 : mov eax, dword ptr [rsp] ; add rsp, 0x40 ; ret
0x000000000014d244 : mov eax, dword ptr [rsp] ; jne 0x14d25b ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000147e86 : mov eax, dword ptr [rsp] ; mov dword ptr [rbx], eax ; mov eax, 1 ; jmp 0x147e67
0x00000000001544a6 : mov eax, dword ptr [rsp] ; mov dword ptr [rbx], eax ; mov eax, 1 ; jmp 0x154487
0x0000000000154526 : mov eax, dword ptr [rsp] ; mov dword ptr [rbx], eax ; mov eax, 1 ; jmp 0x154507
0x0000000000154cf6 : mov eax, dword ptr [rsp] ; mov dword ptr [rbx], eax ; mov eax, 1 ; jmp 0x154cd7
0x00000000001545e5 : mov eax, dword ptr [rsp] ; mov qword ptr [rbx], rax ; mov eax, 1 ; jmp 0x1545c8
0x0000000000071fcf : mov eax, dword ptr fs:[rax] ; mov dword ptr [rbp - 0x528], eax ; jmp 0x6e230
0x000000000008dd05 : mov eax, eax ; add byte ptr [rax], al ; add byte ptr [rbp + 0x4f0f48c9], al ; ret 0x8948
0x0000000000094d60 : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009cb78 : mov eax, eax ; cmp qword ptr [rdi + 8], rsi ; jb 0x9cb93 ; mov qword ptr [rdi], rsi ; ret
0x0000000000043ee9 : mov eax, eax ; jne 0x43f17 ; add rsp, 0x118 ; ret
0x00000000000cf97a : mov eax, eax ; jne 0xcf9de ; add rsp, 0xe0 ; pop rbx ; ret
0x000000000013b244 : mov eax, eax ; mov byte ptr [rdi + rdx], 0 ; ret
0x0000000000112c39 : mov eax, eax ; mov eax, 0x10 ; syscall
0x000000000011347e : mov eax, eax ; mov eax, 0x13 ; syscall
0x000000000011e0ee : mov eax, eax ; mov eax, 0x130 ; syscall
0x0000000000048b20 : mov eax, eax ; mov eax, 0x13e ; syscall
0x000000000011351e : mov eax, eax ; mov eax, 0x14 ; syscall
0x0000000000117600 : mov eax, eax ; mov eax, 0x1a ; syscall
0x000000000011eb4e : mov eax, eax ; mov eax, 0x2a ; syscall
0x000000000011ea7e : mov eax, eax ; mov eax, 0x2b ; syscall
0x000000000011ef8e : mov eax, eax ; mov eax, 0x2e ; syscall
0x000000000011ee2e : mov eax, eax ; mov eax, 0x2f ; syscall
0x000000000010d04e : mov eax, eax ; mov eax, 1 ; syscall
0x0000000000111720 : mov eax, eax ; mov eax, 7 ; syscall
0x00000000000e1316 : mov eax, eax ; mov edi, 0xffffffff ; mov eax, 0x3d ; syscall
0x000000000010d4ca : mov eax, eax ; mov edi, dword ptr [rsp + 8] ; mov eax, 0x48 ; syscall
0x000000000010b344 : mov eax, eax ; mov edi, ebx ; mov eax, 0x11 ; syscall
0x000000000011ded2 : mov eax, eax ; mov edi, ebx ; mov eax, 0x114 ; syscall
0x00000000001122f4 : mov eax, eax ; mov edi, ebx ; mov eax, 0x115 ; syscall
0x000000000011df84 : mov eax, eax ; mov edi, ebx ; mov eax, 0x116 ; syscall
0x0000000000112392 : mov eax, eax ; mov edi, ebx ; mov eax, 0x11d ; syscall
0x000000000010b3f4 : mov eax, eax ; mov edi, ebx ; mov eax, 0x12 ; syscall
0x000000000011f484 : mov eax, eax ; mov edi, ebx ; mov eax, 0x120 ; syscall
0x000000000011f5d4 : mov eax, eax ; mov edi, ebx ; mov eax, 0x133 ; syscall
0x00000000000e13af : mov eax, eax ; mov edi, ebx ; mov eax, 0x3d ; syscall
0x000000000011f754 : mov eax, eax ; mov edi, ebx ; mov eax, 0x45 ; syscall
0x000000000011de34 : mov eax, eax ; mov edi, ebx ; mov eax, 0xe8 ; syscall
0x000000000014bdb9 : mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x0000000000027294 : mov eax, eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000099ab2 : mov eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008571f : mov eax, eax ; pop rbx ; ret
0x00000000000ba73b : mov eax, eax ; ret
0x000000000018ad44 : mov eax, eax ; shr rax, 2 ; vzeroupper ; ret
0x00000000000e1922 : mov eax, eax ; syscall
0x00000000001863d1 : mov eax, eax ; vzeroupper ; ret
0x000000000010cfae : mov eax, eax ; xor eax, eax ; syscall
0x000000000008e95e : mov eax, ebp ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000063264 : mov eax, ebp ; jne 0x6329f ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000f081c : mov eax, ebp ; mov dword ptr [rbx + 0x30], r8d ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000143237 : mov eax, ebp ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x0000000000034a06 : mov eax, ebp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001186a4 : mov eax, ebp ; pop rbp ; pop r12 ; jmp rax
0x00000000000349e0 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000082478 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000035aa7 : mov eax, ebp ; pop rbp ; pop r12 ; ret
0x0000000000119087 : mov eax, ebp ; pop rbx ; pop rbp ; jmp rax
0x0000000000055121 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008245e : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000035a89 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005c58b : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000056893 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x000000000008fb4e : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008cd5b : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012be55 : mov eax, ebx ; and eax, 0xc ; cmp eax, 4 ; je 0x12be6a ; ret
0x00000000001236d9 : mov eax, ebx ; jmp 0x1234a9
0x0000000000123b39 : mov eax, ebx ; jmp 0x123901
0x0000000000072f19 : mov eax, ebx ; jmp 0x6f16d
0x0000000000080ccf : mov eax, ebx ; jmp 0x80c98
0x00000000001515cf : mov eax, ebx ; jne 0x151601 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000015aa7f : mov eax, ebx ; jne 0x15aaaa ; add rsp, 0x520 ; pop rbx ; ret
0x000000000015e603 : mov eax, ebx ; jne 0x15e631 ; add rsp, 0x110 ; pop rbx ; ret
0x00000000001140f0 : mov eax, ebx ; mov eax, 0x10e ; syscall
0x00000000000a0dd6 : mov eax, ebx ; pop rbx ; cmovne rax, rdi ; ret
0x0000000000041ef6 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000082993 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008d5e8 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003164a : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000039525 : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000048018 : mov eax, ebx ; pop rbx ; ret
0x0000000000117e3a : mov eax, ebx ; pop rdx ; pop rbx ; ret
0x0000000000056757 : mov eax, ecx ; adc eax, eax ; ret
0x00000000000ba74c : mov eax, ecx ; and eax, 0x7ff80000 ; div esi ; mov eax, eax ; ret
0x000000000008744d : mov eax, ecx ; lea rdx, [r8 + rdx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000011db03 : mov eax, ecx ; mov r10, qword ptr [rsp + 8] ; mov eax, 0x38 ; syscall
0x00000000001172e0 : mov eax, ecx ; mov r9, qword ptr [rsp + 8] ; syscall
0x000000000007a0a8 : mov eax, ecx ; pop r14 ; ret
0x0000000000079ff7 : mov eax, ecx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009687a : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000009ae6a : mov eax, ecx ; pop rbx ; pop rbp ; ret
0x00000000000ba618 : mov eax, ecx ; pop rbx ; shr eax, 0xe ; and eax, 0x3fc00 ; ret
0x00000000000ba663 : mov eax, ecx ; pop rbx ; shr eax, 6 ; and eax, 0x3fffc00 ; ret
0x00000000000420fc : mov eax, ecx ; ret
0x0000000000053626 : mov eax, ecx ; shl eax, 0x1e ; or eax, edx ; ret
0x0000000000043e9b : mov eax, ecx ; syscall
0x00000000000d6931 : mov eax, ecx ; xor ecx, ecx ; jmp 0xd3376
0x000000000013b85a : mov eax, edi ; add eax, edx ; mov edx, 0x7fffffff ; cmovs eax, edx ; ret
0x00000000000352c0 : mov eax, edi ; and eax, 0x7f ; ret
0x000000000012f300 : mov eax, edi ; and eax, 0xffffff ; ret
0x000000000012f2c0 : mov eax, edi ; bswap eax ; ret
0x0000000000047c60 : mov eax, edi ; cdq ; idiv esi ; shl rdx, 0x20 ; or rax, rdx ; ret
0x000000000011ad70 : mov eax, edi ; cmp rdi, rax ; jne 0x11adb4 ; mov eax, 0x88 ; syscall
0x0000000000047c71 : mov eax, edi ; cqo ; idiv rsi ; ret
0x0000000000081156 : mov eax, edi ; jmp 0x81120
0x0000000000084f03 : mov eax, edi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000085621 : mov eax, edi ; mov dword ptr [rcx], edi ; ret
0x000000000002740b : mov eax, edi ; neg eax ; ret
0x0000000000084f1e : mov eax, edi ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000094fa3 : mov eax, edi ; pop rbp ; pop r12 ; ret
0x000000000004536d : mov eax, edi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000a7565 : mov eax, edi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002741e : mov eax, edi ; ret
0x000000000012f2d0 : mov eax, edi ; rol ax, 8 ; ret
0x0000000000047c12 : mov eax, edi ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x000000000012f18a : mov eax, edi ; sar rax, 6 ; ret
0x0000000000047c24 : mov eax, edi ; sar rdx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x000000000012f380 : mov eax, edi ; shr eax, 0x18 ; ret
0x00000000001882a1 : mov eax, edi ; vzeroupper ; ret
0x0000000000094be5 : mov eax, edx ; add rsp, 8 ; ret
0x0000000000127b7c : mov eax, edx ; cmove eax, ecx ; ret
0x00000000000a009c : mov eax, edx ; cmovne rax, rdi ; ret
0x00000000000792c6 : mov eax, edx ; jmp 0x79297
0x0000000000113027 : mov eax, edx ; jne 0x113059 ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000113d16 : mov eax, edx ; jne 0x113d2f ; add rsp, 0x28 ; ret
0x0000000000114825 : mov eax, edx ; jne 0x114836 ; add rsp, 0x58 ; ret
0x000000000014d60a : mov eax, edx ; jne 0x14d699 ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015077b : mov eax, edx ; jne 0x15078e ; sub rsp, -0x80 ; pop rbx ; ret
0x0000000000150e6e : mov eax, edx ; jne 0x150e90 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000156213 : mov eax, edx ; jne 0x156226 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000156286 : mov eax, edx ; jne 0x156299 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000160c03 : mov eax, edx ; jne 0x160c16 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000160c89 : mov eax, edx ; jne 0x160c9c ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000043db0 : mov eax, edx ; jne 0x43dc7 ; add rsp, 0x148 ; ret
0x0000000000044a53 : mov eax, edx ; jne 0x44a6a ; add rsp, 0x148 ; ret
0x00000000000ceb36 : mov eax, edx ; jne 0xceb47 ; add rsp, 0x28 ; ret
0x000000000011297b : mov eax, edx ; mov byte ptr [rbp + 0x23], dl ; mov rdx, rbp ; mov word ptr [rbp + 0x21], cx ; syscall
0x000000000013b360 : mov eax, edx ; mov qword ptr [r9], r10 ; ret
0x00000000001129ad : mov eax, edx ; mov r12d, dword ptr fs:[r8] ; syscall
0x000000000013b7db : mov eax, edx ; movsxd rdx, esi ; ret
0x00000000000de1b4 : mov eax, edx ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000098fb5 : mov eax, edx ; pop r12 ; ret
0x00000000000de0dd : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000098c18 : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000005f51e : mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000393c5 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000de1a3 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006196a : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000055cbe : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000053817 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000055232 : mov eax, edx ; pop rbx ; ret
0x0000000000044e29 : mov eax, edx ; ret
0x0000000000048bae : mov eax, edx ; sub rsi, r8 ; syscall
0x0000000000026bd2 : mov eax, edx ; syscall
0x000000000012bd9c : mov eax, edx ; xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x12bd9f ; pop rdx ; pop r10 ; ret
0x00000000000de44f : mov eax, esi ; add rsp, 0x48 ; ret
0x00000000000ddbe5 : mov eax, esi ; add rsp, 8 ; ret
0x00000000000dd515 : mov eax, esi ; call rax
0x000000000015e735 : mov eax, esi ; jne 0x15e74c ; add rsp, 0x38 ; ret
0x00000000000815ce : mov eax, esi ; jne 0x81633 ; add rsp, 0xd0 ; pop rbx ; ret
0x0000000000115c99 : mov eax, esi ; mov byte ptr [r8 - 1], 0 ; ret
0x0000000000043c77 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000014f2bc : mov eax, esi ; movups xmmword ptr [r8 + 0x30], xmm0 ; ret
0x000000000014bcfc : mov eax, esi ; movups xmmword ptr [r8 + 8], xmm0 ; ret
0x0000000000105e62 : mov eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fc5b0 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000097dcf : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000082815 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000082075 : mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000081486 : mov eax, esi ; pop rbx ; ret
0x000000000005c2ab : mov eax, esi ; ret
0x00000000000e1912 : mov eax, esi ; syscall
0x000000000009feb6 : mov eax, esp ; pop r12 ; ret
0x000000000003994d : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000039d67 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000080d2b : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008c949 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001129ac : mov eax, r10d ; mov r12d, dword ptr fs:[r8] ; syscall
0x000000000008a606 : mov eax, r10d ; pop rbx ; ret
0x000000000008a625 : mov eax, r10d ; ret
0x0000000000048bad : mov eax, r10d ; sub rsi, r8 ; syscall
0x000000000008c5fc : mov eax, r10d ; syscall
0x000000000012be54 : mov eax, r11d ; and eax, 0xc ; cmp eax, 4 ; je 0x12be6b ; ret
0x0000000000080cce : mov eax, r11d ; jmp 0x80c99
0x000000000010c36d : mov eax, r12d ; pop r12 ; ret
0x0000000000039d66 : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000085d4d : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010c35a : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000085028 : mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ec76f : mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000011fe9d : mov eax, r14d ; syscall
0x0000000000043ee8 : mov eax, r8d ; jne 0x43f18 ; add rsp, 0x118 ; ret
0x000000000013b243 : mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x000000000008571e : mov eax, r8d ; pop rbx ; ret
0x000000000013b23b : mov eax, r8d ; ret
0x00000000000e1921 : mov eax, r8d ; syscall
0x000000000005f452 : mov eax, r9d ; ret
0x000000000008c3a1 : mov eax, r9d ; syscall
0x0000000000061b8b : mov ebp, 0x1b85b ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000182551 : mov ebp, 0x20c083c0 ; add rax, rdi ; vzeroupper ; ret
0x000000000012e696 : mov ebp, 0x2148fff8 ; retf 0x3948
0x00000000001045ed : mov ebp, 0x31000004 ; fild dword ptr [rbx - 0x6bf0fb08] ; ret
0x000000000009c693 : mov ebp, 0x400 ; xor eax, eax ; jmp 0x9c666
0x0000000000182561 : mov ebp, 0x40c083c0 ; add rax, rdi ; vzeroupper ; ret
0x00000000000e5572 : mov ebp, 0x441f0f ; add dh, dh ; test dword ptr [rbx + rdi*8 - 1], ecx ; call qword ptr [rax]
0x00000000000aac91 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000aaca1 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x00000000000aac81 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000112f04 : mov ebp, 0x48000000 ; add esp, 0x70 ; pop rbx ; ret
0x00000000000a726f : mov ebp, 0x48000037 ; cmove eax, edx ; ret
0x00000000000bb35f : mov ebp, 0x48000116 ; cmove eax, edx ; ret
0x0000000000163bbf : mov ebp, 0x49000552 ; movsxd rdx, dword ptr [rbx + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000182571 : mov ebp, 0x60c083c0 ; add rax, rdi ; ret
0x000000000018cf77 : mov ebp, 0x63490002 ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000006315f : mov ebp, 0x89000013 ; ret
0x0000000000098d5a : mov ebp, 0x8948ffff ; ret
0x000000000006bd21 : mov ebp, 0x894cffff ; ret 0xdee9
0x000000000012954a : mov ebp, 0x8b49ffef ; cmp byte ptr [rax - 0x77], r9b ; ret 0x2b49
0x00000000001824c8 : mov ebp, 0xea8148c0 ; add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret 0x8c0f
0x00000000000aad01 : mov ebp, 0xea8348c0 ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x00000000001825a1 : mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x147c
0x00000000000aace1 : mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x347c
0x00000000000aacc1 : mov ebp, 0xea8348c0 ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x000000000012d294 : mov ebp, 0xf480005 ; ret 0xfc3
0x000000000018bcb9 : mov ebp, 0xf66bdb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018263b : mov ebp, 0xf80148c0 ; add rax, r8 ; vzeroupper ; ret
0x00000000000aada7 : mov ebp, 0xf80148c0 ; add rax, rsi ; ret
0x00000000000aabd7 : mov ebp, 0xf80148c0 ; ret
0x0000000000182460 : mov ebp, 0xf80148c0 ; vzeroupper ; ret
0x00000000000b019c : mov ebp, 0xf80148c6 ; ret
0x00000000000750f8 : mov ebp, 0xfffff750 ; mov dword ptr [rbp - 0x930], r8d ; call rax
0x0000000000071119 : mov ebp, 0xfffffa90 ; add byte ptr [rdi], cl ; test dword ptr [rax], ebx ; retf
0x000000000007cf33 : mov ebp, 0xfffffb10 ; jmp rax
0x000000000015f6bb : mov ebp, 0xfffffb20 ; mov rdx, rax ; jmp 0x15f6dd
0x00000000000e55bb : mov ebp, 0xfffffb20 ; mov rdx, rax ; jmp 0xe55dd
0x0000000000103c13 : mov ebp, 0xfffffe68 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd009
0x00000000001040aa : mov ebp, 0xfffffe70 ; call r15
0x000000000010426c : mov ebp, 0xfffffe70 ; mov rcx, qword ptr [r14] ; call r12
0x000000000005e587 : mov ebp, 0xffffff40 ; call rax
0x00000000001288cd : mov ebp, 0xffffff78 ; call 0x2531f
0x000000000008c5f7 : mov ebp, 0xffffff7c ; mov eax, r10d ; syscall
0x0000000000138398 : mov ebp, 0xfffffffe ; jmp 0x138368
0x000000000006a7d8 : mov ebp, ds ; sar dl, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x00000000001190e4 : mov ebp, dword ptr [rbx + 0x10] ; test rbp, rbp ; jne 0x119124 ; mov rdi, qword ptr [rbx] ; call r12
0x0000000000111407 : mov ebp, dword ptr [rsi] ; call 0x10d664
0x00000000000fbff3 : mov ebp, dword ptr [rsp + 0x70] ; jmp 0xfb0f7
0x00000000000266a1 : mov ebp, eax ; call 0xba578
0x0000000000026569 : mov ebp, eax ; call 0xbaa98
0x0000000000073ea6 : mov ebp, eax ; jmp 0x73da8
0x0000000000045496 : mov ebp, eax ; mov rdi, r12 ; call rbx
0x00000000001155d7 : mov ebp, eax ; mov rdx, r8 ; jmp 0x11560d
0x0000000000043c7d : mov ebp, ecx ; nop ; jmp rdx
0x00000000000d876a : mov ebp, edi ; call 0x25224
0x000000000005adfb : mov ebp, edi ; lea rdi, [rdi + rax*8] ; call 0x57078
0x00000000001456c2 : mov ebp, edx ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; call 0x15194c
0x000000000012c8ae : mov ebp, esp ; call 0x15dabb
0x000000000016afb7 : mov ebx, 0x46f00ff2 ; retf
0x000000000016afb2 : mov ebx, 0x477f0ff3 ; mov ebx, 0x46f00ff2 ; retf
0x000000000010ccea : mov ebx, 0x48000000 ; add esp, 0x68 ; ret
0x00000000000b5bc1 : mov ebx, 0x4b000f4f ; movsxd rcx, dword ptr [rbx + rax*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000165b14 : mov ebx, 0x4e6f0ff3 ; retf
0x0000000000165b32 : mov ebx, 0x4f7f0ff3 ; retf
0x00000000000289f1 : mov ebx, 0x83000085 ; clc ; add dh, byte ptr [rsi - 0x77] ; ret 0x3d83
0x00000000000728b1 : mov ebx, 0x83001715 ; retf
0x0000000000109742 : mov ebx, 0x894cfff1 ; imul eax ; retf
0x000000000012bdf4 : mov ebx, 0xafb8341 ; je 0x12be03 ; ret
0x00000000001528cf : mov ebx, 0xbc0f48eb ; ret
0x000000000014bc86 : mov ebx, 0xc8 ; call rax
0x0000000000037e4e : mov ebx, 0xf000001 ; retf 0xd289
0x000000000009e44f : mov ebx, 0xf480001 ; ret 0x66c3
0x000000000012d2b9 : mov ebx, 0xf480003 ; ret 0xfc3
0x000000000018be39 : mov ebx, 0xf66bbb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001515f0 : mov ebx, 0xffffffff ; jmp 0x1515c7
0x00000000000f0890 : mov ebx, ds ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret 0x2f73
0x0000000000073632 : mov ebx, dword ptr [rbp - 0x524] ; jmp 0x6c82c
0x000000000006cd27 : mov ebx, dword ptr [rbp - 0x5a8] ; add rax, rsi ; jmp rax
0x00000000000e1dd2 : mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x00000000000df979 : mov ebx, dword ptr [rcx - 0xc] ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000001288a9 : mov ebx, dword ptr [rdi + 0x28] ; call 0x2531d
0x00000000000a060b : mov ebx, eax ; call 0x9d024
0x000000000002b749 : mov ebx, eax ; jmp 0x2b635
0x000000000007358d : mov ebx, eax ; jmp 0x6c828
0x00000000000d6ab1 : mov ebx, eax ; jmp 0xd6a83
0x000000000008d54f : mov ebx, eax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015e5c1 : mov ebx, eax ; mov rdi, qword ptr [rsp + 0x18] ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x000000000012e25d : mov ebx, ebp ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001962a8 : mov ebx, ebp ; test rbp, rbp ; jne 0x19629b ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f8a53 : mov ebx, edi ; add rax, rsi ; jmp rax
0x0000000000052ee7 : mov ebx, edi ; mov eax, 0x3e ; mov edi, dword ptr [rdi + 0x10] ; syscall
0x000000000011d92d : mov ebx, edi ; mov rdi, rcx ; sub rsp, 8 ; call rsi
0x0000000000043b52 : mov ebx, edi ; test esi, esi ; jne 0x43b6c ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x00000000000330e6 : mov ebx, edi ; test rax, rax ; je 0x330f6 ; call rax
0x0000000000038e66 : mov ebx, esi ; call 0x25144
0x0000000000118321 : mov ebx, esi ; je 0x118335 ; pop rbx ; ret
0x0000000000194731 : mov ebx, esi ; or rbx, r8 ; je 0x1946f4 ; xor r10d, r10d ; jmp 0x194713
0x00000000001456c6 : mov ebx, esi ; sub rsp, 8 ; call 0x151948
0x000000000008d561 : mov ebx, esp ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000063a78 : mov ecx, 0x13c ; mov eax, ecx ; syscall
0x000000000011e154 : mov ecx, 0x145 ; mov eax, ecx ; syscall
0x0000000000089259 : mov ecx, 0x18c48348 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000043e96 : mov ecx, 0x27 ; mov eax, ecx ; syscall
0x00000000000f5562 : mov ecx, 0x441f0f ; add byte ptr [rcx - 0x762e7638], cl ; ret 0x9066
0x0000000000166f83 : mov ecx, 0x49000520 ; movsxd rdx, dword ptr [rbx + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000001641c3 : mov ecx, 0x4900054c ; movsxd rdx, dword ptr [rbx + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000001284eb : mov ecx, 0x6348000b ; ret 0x4864
0x0000000000082ab3 : mov ecx, 0x89001613 ; ret 0x8b64
0x0000000000159780 : mov ecx, 0x8948ffec ; ret 0x8d48
0x0000000000101990 : mov ecx, 0xcb ; mov eax, ecx ; syscall
0x000000000012c710 : mov ecx, 0xe4 ; mov rsi, rbp ; mov edi, ebx ; mov eax, ecx ; syscall
0x00000000000bbd3d : mov ecx, 0xe8fffffe ; retf 0x734
0x000000000018bf39 : mov ecx, 0xf66b9b2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000011dc21 : mov ecx, 8 ; mov eax, 0x119 ; syscall
0x000000000008a3fb : mov ecx, dword ptr [r8 + 4] ; and eax, 1 ; mov edx, eax ; jmp 0x8a3b2
0x000000000008a4eb : mov ecx, dword ptr [r8 + 4] ; and eax, 1 ; mov edx, eax ; jmp 0x8a4a2
0x00000000000420f2 : mov ecx, dword ptr [r8 + rax*4 + 8] ; add rcx, qword ptr [rdi + 0x20] ; mov rax, rcx ; ret
0x000000000008a3fc : mov ecx, dword ptr [rax + 4] ; and eax, 1 ; mov edx, eax ; jmp 0x8a3b1
0x000000000008a4ec : mov ecx, dword ptr [rax + 4] ; and eax, 1 ; mov edx, eax ; jmp 0x8a4a1
0x00000000000420f3 : mov ecx, dword ptr [rax + rax*4 + 8] ; add rcx, qword ptr [rdi + 0x20] ; mov rax, rcx ; ret
0x00000000001243c1 : mov ecx, dword ptr [rax + rsi*8] ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000031fd7 : mov ecx, dword ptr [rax + rsi*8] ; test rcx, rcx ; je 0x31fe9 ; call rcx
0x0000000000056aa4 : mov ecx, dword ptr [rax - 0x77] ; retf 0x8b49
0x000000000007ebc3 : mov ecx, dword ptr [rbp - 0x500] ; jmp rax
0x0000000000028369 : mov ecx, dword ptr [rbp - 0x70] ; call rcx
0x0000000000144fb7 : mov ecx, dword ptr [rcx + 0x18] ; jmp rcx
0x00000000001218e6 : mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x1218f7 ; ret
0x0000000000121941 : mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x121957 ; ret
0x0000000000122168 : mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x122177 ; ret
0x00000000001221b5 : mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x1221c7 ; ret
0x000000000018d4cf : mov ecx, dword ptr [rcx - 2] ; mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x000000000018d4bc : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000018d4aa : mov ecx, dword ptr [rcx - 8] ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000155c70 : mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jae 0x155c89 ; xor eax, eax ; ret
0x0000000000155cb0 : mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jae 0x155cc9 ; xor eax, eax ; ret
0x000000000011fab1 : mov ecx, dword ptr [rdi + 8] ; xor eax, eax ; cmp byte ptr [rcx], 0 ; je 0x11faca ; ret
0x00000000000ce255 : mov ecx, dword ptr [rdi + rdx*4] ; test r9d, r9d ; jne 0xce21b ; mov rax, rdx ; ret
0x000000000018a123 : mov ecx, dword ptr [rdi + rdx] ; cmp ecx, dword ptr [rsi + rdx] ; jne 0x18a100 ; vzeroupper ; ret
0x000000000016393e : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x0000000000055e73 : mov ecx, dword ptr [rdx + 0x30] ; mov rdx, qword ptr [rdx + 0x88] ; xor eax, eax ; ret
0x00000000000ad413 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000015e1f5 : mov ecx, dword ptr [rdx] ; mov rdx, r14 ; add r9, qword ptr [rsp + 8] ; call rax
0x00000000000bb149 : mov ecx, dword ptr [rdx] ; test ecx, ecx ; jne 0xbb146 ; ret
0x00000000001016d1 : mov ecx, dword ptr [rip + 0xe6611] ; mov dword ptr [rdx], ecx ; pop rdx ; pop rcx ; pop rbx ; ret
0x00000000000b5574 : mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000b55e5 : mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000b5545 : mov ecx, dword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000b55a5 : mov ecx, dword ptr [rsi + 0xe] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000b5564 : mov ecx, dword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000b55c5 : mov ecx, dword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000186b44 : mov ecx, dword ptr [rsi + rdx - 3] ; mov dword ptr [rdi + rdx - 3], ecx ; vzeroupper ; ret
0x00000000000ba11f : mov ecx, dword ptr [rsi + rdx - 4] ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x0000000000189fc6 : mov ecx, dword ptr [rsi + rdx] ; test eax, eax ; jne 0x189fbc ; sub eax, ecx ; vzeroupper ; ret
0x000000000018a49b : mov ecx, dword ptr [rsi + rdx] ; test eax, eax ; jne 0x18a48c ; sub eax, ecx ; vzeroupper ; ret
0x00000000001658d5 : mov ecx, dword ptr [rsi - 2] ; mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000165cb3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000165eb3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001660b3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016ad74 : mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016acf4 : mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016ac74 : mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016adf4 : mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000018c4a7 : mov ecx, dword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x18c4dd ; xor eax, eax ; ret
0x000000000018d2e7 : mov ecx, dword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x18d31d ; xor eax, eax ; ret
0x000000000016abe5 : mov ecx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016ab55 : mov ecx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016aac5 : mov ecx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000ff0d9 : mov ecx, dword ptr [rsi] ; add byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x77] ; ret 0x69e8
0x0000000000104272 : mov ecx, dword ptr [rsi] ; call r12
0x00000000000b6a70 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x00000000000b5470 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000b6ac1 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x00000000000b54b1 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000000b6121 : mov ecx, dword ptr [rsi] ; mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000b6140 : mov ecx, dword ptr [rsi] ; mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000b6181 : mov ecx, dword ptr [rsi] ; mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000baf1e : mov ecx, dword ptr [rsi] ; mov dword ptr [r8 + 4], ecx ; test ecx, ecx ; jne 0xbaefa ; ret
0x000000000016b723 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000016b6b3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000016b643 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000000b5480 : mov ecx, dword ptr [rsi] ; mov dx, word ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000b5490 : mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000000b54d1 : mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000b54e1 : mov ecx, dword ptr [rsi] ; mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000016b565 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000016b4f5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000016b485 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000016b415 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000016b3a5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000016b335 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000016b2c5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000016b805 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000000b6a51 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x00000000000b5451 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000bc24b : mov ecx, dword ptr [rsp + 0x10] ; mov rdi, rbp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000014bf50 : mov ecx, dword ptr [rsp + 0x28] ; call rcx
0x000000000014f603 : mov ecx, dword ptr [rsp + 0x30] ; call rcx
0x000000000014f518 : mov ecx, dword ptr [rsp + 8] ; call 0x13b786
0x0000000000146c70 : mov ecx, dword ptr [rsp + 8] ; call rcx
0x000000000012110e : mov ecx, dword ptr [rsp + 8] ; mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000012116f : mov ecx, dword ptr [rsp + 8] ; mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x00000000001172e3 : mov ecx, dword ptr [rsp + 8] ; syscall
0x000000000018d4bb : mov ecx, dword ptr ss:[rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000009ae63 : mov ecx, eax ; add rsp, 0x18 ; mov rax, rcx ; pop rbx ; pop rbp ; ret
0x0000000000121b18 : mov ecx, eax ; and ecx, dword ptr [rsi + 0x10] ; lea rcx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000009c711 : mov ecx, eax ; jmp 0x9c6db
0x00000000000bac53 : mov ecx, eax ; mov eax, dword ptr [rcx + rax*4] ; sub eax, dword ptr [rcx + r8*4] ; je 0xbac4b ; ret
0x00000000000e14ab : mov ecx, eax ; mov esi, ebp ; mov edi, ebx ; mov eax, 0xf7 ; syscall
0x000000000010935a : mov ecx, eax ; mov rdi, qword ptr [rbx] ; call 0x105dc7
0x000000000011f527 : mov ecx, eax ; mov rsi, r14 ; mov edi, ebx ; mov eax, 0x12b ; syscall
0x0000000000114039 : mov ecx, eax ; mov rsi, r14 ; mov edi, ebx ; mov eax, 0x17 ; syscall
0x000000000011f7f9 : mov ecx, eax ; mov rsi, r14 ; mov edi, ebx ; mov eax, 0x46 ; syscall
0x00000000001135cc : mov ecx, eax ; mov rsi, rbp ; mov edi, ebx ; mov eax, 0x127 ; syscall
0x000000000011367c : mov ecx, eax ; mov rsi, rbp ; mov edi, ebx ; mov eax, 0x128 ; syscall
0x00000000000a6fdb : mov ecx, eax ; movsxd rcx, dword ptr [r9 + rcx*4] ; add rcx, r9 ; jmp rcx
0x000000000014707c : mov ecx, eax ; movsxd rdx, dword ptr [r8 + rcx*4] ; add rdx, r8 ; jmp rdx
0x000000000007a0a1 : mov ecx, eax ; pop r12 ; pop r13 ; mov rax, r9 ; pop r14 ; ret
0x00000000000a6c29 : mov ecx, eax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x0000000000136a91 : mov ecx, ebp ; call 0x144c09
0x000000000014364d : mov ecx, ebp ; call r10
0x00000000001093a0 : mov ecx, ebp ; mov rsi, qword ptr [rsp] ; mov rdi, qword ptr [rbx] ; call 0x105dcb
0x00000000000468cc : mov ecx, ebx ; mov rdx, r15 ; call 0x4538b
0x00000000001456f0 : mov ecx, ebx ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000007e21d : mov ecx, ecx ; mov dword ptr [rbp - 0x4c8], 1 ; jmp rax
0x00000000001211e9 : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x00000000000ba0f2 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000091830 : mov ecx, edx ; xor edx, edx ; pop rbx ; jmp rax
0x000000000007edcb : mov ecx, esi ; jmp rax
0x000000000007d146 : mov ecx, esi ; mov dword ptr [rbp - 0x4f8], 0 ; jmp rax
0x000000000007e0be : mov ecx, esi ; mov dword ptr [rbp - 0x4f8], 1 ; jmp rax
0x000000000007dfd6 : mov ecx, esi ; mov dword ptr [rbp - 0x508], 0x20 ; jmp rax
0x000000000007dec6 : mov ecx, esi ; mov dword ptr [rbp - 0x530], 0 ; jmp rax
0x000000000014323a : mov ecx, esi ; mov rdi, r13 ; call r12
0x00000000001605c6 : mov ecx, esi ; mov rdx, rsi ; mov esi, 0x80 ; mov eax, ecx ; syscall
0x0000000000027a43 : mov ecx, esi ; mov rsi, qword ptr [rsp + 0x10] ; xor r8d, r8d ; call rbx
0x00000000000bbfb0 : mov ecx, esi ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000007e163 : mov ecx, esi ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdx ; jmp rax
0x000000000014bcd4 : mov ecx, esi ; movsxd rax, dword ptr [rdi + rcx*4] ; add rax, rdi ; jmp rax
0x000000000014c805 : mov ecx, esi ; xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x00000000000d6400 : mov ecx, fs ; add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov bh, 0x15 ; retf 0xd4f
0x0000000000139008 : mov edi, 0x10 ; call 0x2530f
0x00000000000636a6 : mov edi, 0x10842109 ; or byte ptr [rcx], spl ; test byte ptr [rax - 0x77], cl ; ret
0x00000000000e1702 : mov edi, 0x1200011 ; mov eax, 0x38 ; syscall
0x000000000012640a : mov edi, 0x2000004 ; call rcx
0x000000000015976d : mov edi, 0x31ffecb9 ; ror byte ptr [rax - 0x77], cl ; ret
0x0000000000136a54 : mov edi, 0x44e80007 ; ret 0
0x000000000007620b : mov edi, 0x450f48d2 ; ret 0x9be9
0x00000000000339cc : mov edi, 0x48c30017 ; mov eax, dword ptr [rsi + rax*8 + 0x80] ; ret
0x000000000007ad41 : mov edi, 0x48fffffb ; add eax, edx ; jmp rax
0x000000000018b83d : mov edi, 0x490002d3 ; movsxd rcx, dword ptr [rbx + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016903d : mov edi, 0x49000501 ; movsxd rdx, dword ptr [rbx + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000012039d : mov edi, 0x5b000c3f ; ret
0x0000000000025625 : mov edi, 0x7f ; call 0xe18f7
0x0000000000140f92 : mov edi, 0x80 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000153d42 : mov edi, 0x8337e983 ; clc ; sbb cl, byte ptr [rcx + 0x430f41c8] ; ret 0xf801
0x0000000000058f45 : mov edi, 0x8c0fffff ; add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000824f7 : mov edi, 0xe0 ; call rax
0x00000000000824bb : mov edi, 0xe0 ; jmp rax
0x000000000011b22d : mov edi, 0xe9ffff71 ; ret 0xfffe
0x000000000018bae9 : mov edi, 0xf66bfb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000f5fd6 : mov edi, 0xf708588b ; ret
0x000000000010c1a8 : mov edi, 0xf8 ; movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x000000000010c23c : mov edi, 0xf8 ; ret
0x0000000000114377 : mov edi, 0xfee1dead ; mov eax, 0xa9 ; syscall
0x0000000000115992 : mov edi, 0xffffff9c ; mov eax, 0x118 ; syscall
0x000000000010ccc7 : mov edi, 0xffffff9c ; syscall
0x00000000000e12e5 : mov edi, 0xffffffff ; mov eax, 0x3d ; syscall
0x000000000010fc2c : mov edi, 1 ; jne 0x10fca1 ; call 0x10c659
0x00000000000e38fe : mov edi, 1 ; mov eax, 0xe5 ; syscall
0x00000000001458e1 : mov edi, 2 ; jmp 0x1458b8
0x00000000000a6af0 : mov edi, 2 ; jmp 0xa2df4
0x0000000000043ecb : mov edi, 2 ; mov eax, 0xe ; syscall
0x00000000000a6a63 : mov edi, 4 ; jmp 0xa2d65
0x00000000000472a7 : mov edi, dword ptr [rax + 0x20] ; call rdx
0x0000000000099108 : mov edi, dword ptr [rax] ; call 0x81e59
0x00000000001196ab : mov edi, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call r12
0x0000000000194d0c : mov edi, dword ptr [rbp + 0x10] ; add rdi, rbp ; call r12
0x0000000000110e29 : mov edi, dword ptr [rbp + 0x28] ; call 0x10d895
0x00000000001113ef : mov edi, dword ptr [rbp + 0x3c] ; call 0x10d665
0x00000000001040a9 : mov edi, dword ptr [rbp - 0x190] ; call r15
0x000000000010426b : mov edi, dword ptr [rbp - 0x190] ; mov rcx, qword ptr [r14] ; call r12
0x000000000015f6ba : mov edi, dword ptr [rbp - 0x4e0] ; mov rdx, rax ; jmp 0x15f6de
0x00000000000e55ba : mov edi, dword ptr [rbp - 0x4e0] ; mov rdx, rax ; jmp 0xe55de
0x0000000000139849 : mov edi, dword ptr [rbp - 0x60] ; syscall
0x000000000011b229 : mov edi, dword ptr [rbp - 0x78] ; call 0x1123f9
0x000000000008c5f6 : mov edi, dword ptr [rbp - 0x84] ; mov eax, r10d ; syscall
0x00000000001288cc : mov edi, dword ptr [rbp - 0x88] ; call 0x25320
0x000000000005e586 : mov edi, dword ptr [rbp - 0xc0] ; call rax
0x0000000000119130 : mov edi, dword ptr [rbp] ; call r12
0x000000000011137a : mov edi, dword ptr [rbx + 0x3c] ; call 0x10d665
0x000000000009c531 : mov edi, dword ptr [rbx + 0x48] ; call rax
0x000000000009c492 : mov edi, dword ptr [rbx + 0x48] ; mov rsi, r13 ; call rax
0x0000000000136d2d : mov edi, dword ptr [rbx + 0x48] ; test rdi, rdi ; jne 0x136d29 ; pop rbx ; ret
0x0000000000047bda : mov edi, dword ptr [rbx + 8] ; call rax
0x000000000010935d : mov edi, dword ptr [rbx] ; call 0x105dc4
0x00000000001190ed : mov edi, dword ptr [rbx] ; call r12
0x00000000001504f9 : mov edi, dword ptr [rbx] ; jmp 0x1504c3
0x0000000000139630 : mov edi, dword ptr [rbx] ; mov eax, 3 ; syscall
0x0000000000046539 : mov edi, dword ptr [rbx] ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000127239 : mov edi, dword ptr [rdi + 0x10] ; call 0x2513c
0x00000000000f8862 : mov edi, dword ptr [rdi + 0x10] ; call 0x2531d
0x0000000000052eee : mov edi, dword ptr [rdi + 0x10] ; syscall
0x00000000000f886b : mov edi, dword ptr [rdi + 0x18] ; call 0x2531d
0x000000000003dbde : mov edi, dword ptr [rdi + 0x18] ; call 0x39ec5
0x00000000000f8874 : mov edi, dword ptr [rdi + 0x20] ; call 0x2531d
0x00000000000f887d : mov edi, dword ptr [rdi + 0x28] ; call 0x2531d
0x0000000000043c74 : mov edi, dword ptr [rdi + 0x28] ; mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000014ca91 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x14caa9 ; ret
0x0000000000152cc1 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x152cd9 ; ret
0x000000000009c2e9 : mov edi, dword ptr [rdi + 0x48] ; mov rsi, rbp ; call rax
0x00000000000824f6 : mov edi, dword ptr [rdi + 0xe0] ; call rax
0x00000000000824ba : mov edi, dword ptr [rdi + 0xe0] ; jmp rax
0x00000000000f8859 : mov edi, dword ptr [rdi + 8] ; call 0x2531d
0x00000000000d8666 : mov edi, dword ptr [rdi + rax*8 + 0x40] ; call 0x25136
0x00000000000f8851 : mov edi, dword ptr [rdi] ; call 0x2531c
0x00000000001193d6 : mov edi, dword ptr [rdi] ; call r12
0x0000000000139580 : mov edi, dword ptr [rdi] ; mov eax, 3 ; syscall
0x000000000012a5b4 : mov edi, dword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x000000000011936b : mov edi, dword ptr [rsi + 0x10] ; test r15, r15 ; jne 0x1193c6 ; mov rdi, qword ptr [r14] ; call r12
0x000000000011939f : mov edi, dword ptr [rsi + 0x10] ; test r15, r15 ; jne 0x11941f ; mov rdi, qword ptr [r14] ; call r12
0x000000000011925c : mov edi, dword ptr [rsi] ; call r12
0x00000000000bba24 : mov edi, dword ptr [rsi] ; push 0 ; lea r9, [rsp + 0x28] ; call r12
0x00000000000c987e : mov edi, dword ptr [rsi] ; push 0 ; lea r9, [rsp + 0x30] ; call r12
0x0000000000059de1 : mov edi, dword ptr [rsp + 0x10] ; call 0x568a6
0x0000000000141f45 : mov edi, dword ptr [rsp + 0x10] ; mov eax, 0x81 ; syscall
0x0000000000026b5d : mov edi, dword ptr [rsp + 0x14] ; mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000011415b : mov edi, dword ptr [rsp + 0x14] ; syscall
0x00000000000454ac : mov edi, dword ptr [rsp + 0x18] ; call rbx
0x000000000010ced9 : mov edi, dword ptr [rsp + 0x18] ; mov eax, 0x101 ; syscall
0x000000000015e5c4 : mov edi, dword ptr [rsp + 0x18] ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x00000000000dd6a3 : mov edi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000110572 : mov edi, dword ptr [rsp + 0x20] ; or word ptr [rax + 0x64], 1 ; call 0xdc86b
0x000000000005599b : mov edi, dword ptr [rsp + 0x24] ; call rax
0x0000000000145642 : mov edi, dword ptr [rsp + 0x28] ; call 0x25322
0x000000000002a25c : mov edi, dword ptr [rsp + 0x30] ; call r14
0x000000000002aa6d : mov edi, dword ptr [rsp + 0x30] ; call r15
0x000000000002acdb : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x000000000002a06e : mov edi, dword ptr [rsp + 0x30] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000002af12 : mov edi, dword ptr [rsp + 0x38] ; call r12
0x000000000002a495 : mov edi, dword ptr [rsp + 0x38] ; call r14
0x000000000002b52c : mov edi, dword ptr [rsp + 0x38] ; call r15
0x000000000002bdd2 : mov edi, dword ptr [rsp + 0x38] ; call rbx
0x000000000002c914 : mov edi, dword ptr [rsp + 0x40] ; call r15
0x000000000002efe6 : mov edi, dword ptr [rsp + 0x40] ; call rbx
0x000000000002c3b3 : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000002da22 : mov edi, dword ptr [rsp + 0x48] ; call r14
0x0000000000108e66 : mov edi, dword ptr [rsp + 0x48] ; mov qword ptr [rsp + 0x10], r9 ; call 0x2514b
0x000000000002d46c : mov edi, dword ptr [rsp + 0x48] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000135221 : mov edi, dword ptr [rsp + 0x60] ; call 0x105c2a
0x00000000001461ba : mov edi, dword ptr [rsp + 0xc] ; call 0x1123f6
0x00000000000dd3f6 : mov edi, dword ptr [rsp + 8] ; call r12
0x00000000000913a7 : mov edi, dword ptr [rsp + 8] ; jmp 0x9137d
0x000000000011181b : mov edi, dword ptr [rsp + 8] ; mov eax, 0x10f ; syscall
0x000000000010d4cc : mov edi, dword ptr [rsp + 8] ; mov eax, 0x48 ; syscall
0x000000000012c808 : mov edi, dword ptr [rsp + 8] ; mov eax, 0xe6 ; syscall
0x0000000000151444 : mov edi, dword ptr [rsp] ; call rax
0x0000000000044eb5 : mov edi, dword ptr [rsp] ; mov eax, ecx ; syscall
0x000000000015d97b : mov edi, dword ptr [rsp] ; mov rax, qword ptr [rax + 0x1b0] ; jmp rax
0x000000000011663e : mov edi, eax ; call 0x1128e4
0x000000000012c8c9 : mov edi, eax ; call 0x15db8b
0x0000000000044a27 : mov edi, eax ; call 0x44149
0x0000000000146cd2 : mov edi, eax ; call 0x62f84
0x00000000001505f5 : mov edi, eax ; lea r9, [rsp + 0x14] ; call qword ptr [r10]
0x0000000000150f19 : mov edi, eax ; lea r9, [rsp + 0x1c] ; call qword ptr [r10]
0x00000000000e15d9 : mov edi, eax ; mov eax, 0x22 ; syscall
0x000000000011db20 : mov edi, eax ; mov eax, 0x3c ; syscall
0x0000000000160ddd : mov edi, eax ; mov eax, 0x3e ; syscall
0x000000000010c8a4 : mov edi, eax ; mov eax, 0x85 ; syscall
0x0000000000043ea0 : mov edi, eax ; mov eax, 0xba ; syscall
0x0000000000048bab : mov edi, eax ; mov eax, r10d ; sub rsi, r8 ; syscall
0x000000000015070d : mov edi, eax ; mov esi, 9 ; call qword ptr [r10]
0x0000000000144fb4 : mov edi, eax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000010c5b9 : mov edi, eax ; mov rsi, rdx ; mov eax, 4 ; syscall
0x000000000010c607 : mov edi, eax ; mov rsi, rdx ; mov eax, 5 ; syscall
0x000000000010c659 : mov edi, eax ; mov rsi, rdx ; mov eax, 6 ; syscall
0x0000000000117350 : mov edi, ebp ; call 0x1123fb
0x00000000001149e9 : mov edi, ebp ; call 0x11587b
0x0000000000129141 : mov edi, ebp ; call 0x1257e8
0x000000000014c0ca : mov edi, ebp ; call 0x148b94
0x0000000000148eea : mov edi, ebp ; call 0x1551a4
0x0000000000108e16 : mov edi, ebp ; call 0x250b4
0x00000000000e6432 : mov edi, ebp ; call 0x25320
0x0000000000147ad2 : mov edi, ebp ; call qword ptr [rbx]
0x000000000011d968 : mov edi, ebp ; call r12
0x000000000011a374 : mov edi, ebp ; call r14
0x0000000000026c01 : mov edi, ebp ; call rax
0x00000000000454e7 : mov edi, ebp ; call rbx
0x0000000000155d51 : mov edi, ebp ; call rcx
0x0000000000147595 : mov edi, ebp ; call rdx
0x0000000000146178 : mov edi, ebp ; lea r9, [rsp + 0x20] ; call qword ptr [rax]
0x00000000000bbe5c : mov edi, ebp ; lea r9, [rsp + 0x30] ; call rbx
0x0000000000118ac8 : mov edi, ebp ; mov dword ptr [rbp - 0x50], r15d ; call r14
0x00000000001174ba : mov edi, ebp ; mov eax, 9 ; syscall
0x000000000008c39f : mov edi, ebp ; mov eax, r9d ; syscall
0x00000000001292ae : mov edi, ebp ; mov qword ptr [rbp - 0xa8], rcx ; call 0x125d8b
0x00000000000d8762 : mov edi, ebp ; mov qword ptr [rsp + 0x30], rcx ; mov rbp, r15 ; call 0x2522c
0x000000000014bf4d : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x000000000014c15c : mov edi, ebp ; mov rdx, qword ptr [rsp + 0x20] ; call rdx
0x00000000000bc250 : mov edi, ebp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x0000000000136f01 : mov edi, ebp ; mov rsi, qword ptr [rsp] ; call r12
0x0000000000146ead : mov edi, ebp ; pop rbx ; xor eax, eax ; pop rbp ; jmp rdx
0x0000000000155169 : mov edi, ebp ; xor eax, eax ; call rcx
0x00000000000bc153 : mov edi, ebp ; xor r8d, r8d ; lea r9, [rsp + 0x28] ; call rbx
0x0000000000119080 : mov edi, ebx ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x00000000000f8849 : mov edi, ebx ; call 0x2531c
0x0000000000063f48 : mov edi, ebx ; call 0x919aa
0x00000000000d0658 : mov edi, ebx ; call 0xd00a8
0x0000000000160739 : mov edi, ebx ; call 0xdca04
0x0000000000147f1c : mov edi, ebx ; call qword ptr [rax]
0x0000000000027d3c : mov edi, ebx ; call r12
0x0000000000028cd9 : mov edi, ebx ; call r14
0x00000000000807ba : mov edi, ebx ; call rax
0x00000000000f88d1 : mov edi, ebx ; mov dword ptr [rsp + 8], eax ; call 0x25320
0x000000000010b346 : mov edi, ebx ; mov eax, 0x11 ; syscall
0x000000000011e049 : mov edi, ebx ; mov eax, 0x113 ; syscall
0x000000000011ded4 : mov edi, ebx ; mov eax, 0x114 ; syscall
0x00000000001122f6 : mov edi, ebx ; mov eax, 0x115 ; syscall
0x000000000011df86 : mov edi, ebx ; mov eax, 0x116 ; syscall
0x0000000000112394 : mov edi, ebx ; mov eax, 0x11d ; syscall
0x000000000010b3f6 : mov edi, ebx ; mov eax, 0x12 ; syscall
0x000000000011f486 : mov edi, ebx ; mov eax, 0x120 ; syscall
0x00000000001135d1 : mov edi, ebx ; mov eax, 0x127 ; syscall
0x0000000000113681 : mov edi, ebx ; mov eax, 0x128 ; syscall
0x000000000011f52c : mov edi, ebx ; mov eax, 0x12b ; syscall
0x000000000011f5d6 : mov edi, ebx ; mov eax, 0x133 ; syscall
0x000000000010c435 : mov edi, ebx ; mov eax, 0x135 ; syscall
0x000000000011fda0 : mov edi, ebx ; mov eax, 0x14 ; syscall
0x0000000000112108 : mov edi, ebx ; mov eax, 0x146 ; syscall
0x000000000011403e : mov edi, ebx ; mov eax, 0x17 ; syscall
0x000000000011eeed : mov edi, ebx ; mov eax, 0x2c ; syscall
0x000000000011eccd : mov edi, ebx ; mov eax, 0x2d ; syscall
0x00000000000e13b1 : mov edi, ebx ; mov eax, 0x3d ; syscall
0x000000000011f756 : mov edi, ebx ; mov eax, 0x45 ; syscall
0x000000000011f7fe : mov edi, ebx ; mov eax, 0x46 ; syscall
0x000000000011de36 : mov edi, ebx ; mov eax, 0xe8 ; syscall
0x00000000000e14af : mov edi, ebx ; mov eax, 0xf7 ; syscall
0x000000000010c4cb : mov edi, ebx ; mov eax, ecx ; syscall
0x000000000011ff29 : mov edi, ebx ; mov eax, r14d ; syscall
0x00000000000e1665 : mov edi, ebx ; mov edx, eax ; mov eax, 0x23 ; syscall
0x000000000011423c : mov edi, ebx ; mov edx, eax ; mov eax, 0x4a ; syscall
0x00000000001142ec : mov edi, ebx ; mov edx, eax ; mov eax, 0x4b ; syscall
0x000000000010d803 : mov edi, ebx ; mov edx, eax ; mov eax, 0x55 ; syscall
0x000000000004424b : mov edi, ebx ; mov edx, eax ; mov eax, 0x82 ; syscall
0x000000000010d68c : mov edi, ebx ; mov edx, eax ; mov eax, 3 ; syscall
0x000000000011fe94 : mov edi, ebx ; mov qword ptr [rbp - 0x830], rax ; mov eax, r14d ; syscall
0x00000000000823f9 : mov edi, ebx ; mov qword ptr [rbx + 0xd8], rax ; call 0x8ee1b
0x00000000001434f1 : mov edi, ebx ; mov qword ptr [rsp + 8], rcx ; call r12
0x0000000000111403 : mov edi, ebx ; mov r13d, dword ptr fs:[r14] ; call 0x10d668
0x0000000000112c36 : mov edi, ebx ; mov r8d, eax ; mov eax, 0x10 ; syscall
0x000000000011347b : mov edi, ebx ; mov r8d, eax ; mov eax, 0x13 ; syscall
0x000000000011e0eb : mov edi, ebx ; mov r8d, eax ; mov eax, 0x130 ; syscall
0x0000000000048b1d : mov edi, ebx ; mov r8d, eax ; mov eax, 0x13e ; syscall
0x000000000011351b : mov edi, ebx ; mov r8d, eax ; mov eax, 0x14 ; syscall
0x00000000001175fd : mov edi, ebx ; mov r8d, eax ; mov eax, 0x1a ; syscall
0x000000000011eb4b : mov edi, ebx ; mov r8d, eax ; mov eax, 0x2a ; syscall
0x000000000011ea7b : mov edi, ebx ; mov r8d, eax ; mov eax, 0x2b ; syscall
0x000000000011ef8b : mov edi, ebx ; mov r8d, eax ; mov eax, 0x2e ; syscall
0x000000000011ee2b : mov edi, ebx ; mov r8d, eax ; mov eax, 0x2f ; syscall
0x000000000010d04b : mov edi, ebx ; mov r8d, eax ; mov eax, 1 ; syscall
0x000000000011171d : mov edi, ebx ; mov r8d, eax ; mov eax, 7 ; syscall
0x000000000010cfab : mov edi, ebx ; mov r8d, eax ; xor eax, eax ; syscall
0x000000000015d54e : mov edi, ebx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000000462d9 : mov edi, ebx ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000046396 : mov edi, ebx ; mov rax, qword ptr [rsp + 8] ; lea r13, [r14 + rbp] ; call rax
0x000000000014364a : mov edi, ebx ; mov rcx, r13 ; call r10
0x00000000001186a0 : mov edi, ebx ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; jmp rax
0x0000000000083eec : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x000000000008672f : mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000008deca : mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000196388 : mov edi, ebx ; test rbx, rbx ; jne 0x196383 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001965d7 : mov edi, ebx ; test rbx, rbx ; jne 0x1965d0 ; pop rbx ; ret
0x0000000000146c6b : mov edi, ebx ; xor eax, eax ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x00000000000f88b1 : mov edi, ebx ; xor ebx, ebx ; call 0x2531e
0x00000000000840e2 : mov edi, ebx ; xor edx, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000047953 : mov edi, ecx ; call rdx
0x000000000010c908 : mov edi, ecx ; mov eax, 0x103 ; syscall
0x000000000011d930 : mov edi, ecx ; sub rsp, 8 ; call rsi
0x000000000013eb35 : mov edi, edi ; call 0x13b604
0x00000000000d870a : mov edi, edi ; call 0x25194
0x00000000001390e9 : mov edi, edi ; call 0x2531c
0x0000000000152513 : mov edi, edi ; call qword ptr [rax]
0x00000000000f82a0 : mov edi, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000089c64 : mov edi, edi ; lea r9, [rbp - 0x40] ; call r12
0x000000000014f600 : mov edi, edi ; mov rcx, qword ptr [rsp + 0x30] ; call rcx
0x000000000009bdb7 : mov edi, edi ; mov rdx, rbx ; mov rsi, r12 ; call rax
0x0000000000121c9c : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000121d1c : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 2 ; movzx eax, ax ; ret
0x0000000000121f9c : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 4 ; movzx eax, ax ; ret
0x0000000000121b9c : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 8 ; movzx eax, ax ; ret
0x000000000007c569 : mov edi, edx ; dec dword ptr [rax - 0x77] ; ret 0x86e9
0x000000000012be9f : mov edi, edx ; jmp rax
0x000000000010bfcf : mov edi, edx ; mov eax, 0x75 ; syscall
0x000000000010bff7 : mov edi, edx ; mov eax, 0x77 ; syscall
0x00000000000e1910 : mov edi, edx ; mov eax, esi ; syscall
0x00000000000e191f : mov edi, edx ; mov eax, r8d ; syscall
0x0000000000113b33 : mov edi, edx ; syscall
0x0000000000129b29 : mov edi, esi ; call 0x125d84
0x000000000015eceb : mov edi, esi ; call 0x12b794
0x0000000000143d5b : mov edi, esi ; call 0x140834
0x00000000001369b2 : mov edi, esi ; call 0x142ca4
0x0000000000038f1e : mov edi, esi ; call 0x25144
0x000000000009c55e : mov edi, esi ; call rax
0x000000000010d939 : mov edi, esi ; mov eax, 0x4f ; syscall
0x0000000000028418 : mov edi, esi ; mov rax, qword ptr [rbp - 0x68] ; call rax
0x0000000000038e63 : mov edi, esi ; mov rbx, r14 ; call 0x25147
0x0000000000028f67 : mov edi, esi ; mov rsi, r13 ; call 0x25267
0x0000000000108e49 : mov edi, esp ; call 0x250b4
0x000000000004a3be : mov edi, esp ; call 0x57079
0x00000000001551fe : mov edi, esp ; call qword ptr [rax]
0x000000000009bc44 : mov edi, esp ; call rax
0x0000000000045499 : mov edi, esp ; call rbx
0x0000000000039459 : mov edi, esp ; jmp 0x3942a
0x0000000000089a5c : mov edi, esp ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000089962 : mov edi, esp ; lea r9, [rsp + 0x28] ; call rbx
0x0000000000154418 : mov edi, esp ; mov dword ptr [rsp], 2 ; call rdx
0x00000000001137c0 : mov edi, esp ; mov eax, 0x147 ; syscall
0x0000000000113920 : mov edi, esp ; mov eax, 0x148 ; syscall
0x0000000000044fa0 : mov edi, esp ; mov eax, 0x81 ; syscall
0x000000000009628e : mov edi, esp ; mov qword ptr [rsp + 8], r11 ; call qword ptr [rax]
0x0000000000028366 : mov edi, esp ; mov rcx, qword ptr [rbp - 0x70] ; call rcx
0x0000000000136a8e : mov edi, esp ; mov rcx, r13 ; call 0x144c0c
0x00000000001137bf : mov edi, r12d ; mov eax, 0x147 ; syscall
0x000000000011391f : mov edi, r12d ; mov eax, 0x148 ; syscall
0x0000000000044f9f : mov edi, r12d ; mov eax, 0x81 ; syscall
0x000000000008c39e : mov edi, r13d ; mov eax, r9d ; syscall
0x0000000000044a26 : mov edi, r8d ; call 0x4414a
0x000000000010c907 : mov edi, r9d ; mov eax, 0x103 ; syscall
0x000000000011f686 : mov edx, 0 ; cmovb rax, rdx ; ret
0x00000000000a08b0 : mov edx, 0 ; cmovne rax, rdx ; ret
0x00000000000e128c : mov edx, 0 ; cmovne rdx, rax ; mov rax, rdx ; ret
0x000000000013acd2 : mov edx, 0 ; mov eax, 0x102 ; cmovne eax, edx ; ret
0x00000000000ba606 : mov edx, 0 ; pop rbx ; cmove rax, rdx ; ret
0x000000000013acad : mov edx, 0x104 ; cmove eax, edx ; ret
0x000000000013ac8d : mov edx, 0x107 ; mov eax, 0xffffffff ; cmove eax, edx ; ret
0x000000000008d986 : mov edx, 0x130 ; pop rbx ; ret
0x000000000011321f : mov edx, 0x14 ; sub edx, eax ; test eax, eax ; cmovns eax, edx ; ret
0x00000000000e3619 : mov edx, 0x20 ; cmovne rax, rdx ; ret
0x00000000000e3b92 : mov edx, 0x2000 ; jmp 0xe392c
0x0000000000193629 : mov edx, 0x21482fea ; ret 0x41e9
0x000000000016af37 : mov edx, 0x46f00ff2 ; retf 0xff3
0x000000000016af32 : mov edx, 0x477f0ff3 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x00000000000aff12 : mov edx, 0x48000001 ; bsr eax, eax ; add rax, rdi ; ret
0x0000000000165d14 : mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x0000000000165d32 : mov edx, 0x4f7f0ff3 ; retf 0x894c
0x000000000011b7a7 : mov edx, 0x64 ; mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x00000000000e3506 : mov edx, 0x7f ; cmovne rax, rdx ; ret
0x00000000000e3b34 : mov edx, 0x7f ; jmp 0xe392c
0x000000000013b85e : mov edx, 0x7fffffff ; cmovs eax, edx ; ret
0x0000000000058822 : mov edx, 0x894830e8 ; or byte ptr [r8 + 2], r15b ; ret
0x00000000000396b5 : mov edx, 0x8948fffe ; ret 0xf748
0x0000000000190d50 : mov edx, 0x894c33f0 ; ret 0x5e9
0x0000000000043769 : mov edx, 0x9483ff2 ; ret 0x840f
0x0000000000191b7f : mov edx, 0x94c3ff3 ; retf
0x0000000000190f74 : mov edx, 0xe28333f0 ; add dword ptr [rax - 0x2f], ecx ; jmp 0x48e318d4
0x0000000000043ea3 : mov edx, 0xf000000 ; add eax, 0x8944c689 ; ret 0xeab8
0x000000000018beb9 : mov edx, 0xf66bab2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000148ee4 : mov edx, 0xff ; mov rdi, rbp ; call 0x1551aa
0x000000000009cfb8 : mov edx, 0xffffffff ; cmovbe eax, edx ; ret
0x0000000000034c94 : mov edx, 0xffffffff ; cmove rax, rdx ; ret
0x0000000000029e37 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x0000000000055d08 : mov edx, 0xffffffff ; mov eax, edx ; ret
0x0000000000155d48 : mov edx, 0xffffffff ; mov rsi, rbx ; mov rdi, rbp ; call rcx
0x0000000000047cbf : mov edx, 0xffffffff ; pop rbx ; test eax, eax ; cmovs eax, edx ; ret
0x0000000000044b29 : mov edx, 1 ; cmove eax, edx ; ret
0x000000000012bdbd : mov edx, 1 ; mov eax, 0xca ; syscall
0x0000000000101bf4 : mov edx, 2 ; cmove eax, edx ; ret
0x00000000000e3b7c : mov edx, 8 ; jmp 0xe392c
0x0000000000044171 : mov edx, 8 ; mov eax, 0xe ; syscall
0x0000000000044027 : mov edx, 8 ; mov eax, ecx ; syscall
0x0000000000044eaf : mov edx, 8 ; mov rdi, qword ptr [rsp] ; mov eax, ecx ; syscall
0x000000000011dcd8 : mov edx, 8 ; syscall
0x000000000008c218 : mov edx, dword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x000000000014758c : mov edx, dword ptr [rax + 0x38] ; test rdx, rdx ; je 0x1475a4 ; mov rdi, rbp ; call rdx
0x00000000000562b0 : mov edx, dword ptr [rax + rax*8] ; mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000196120 : mov edx, dword ptr [rax + rbx*8] ; test rdx, rdx ; je 0x196132 ; call rdx
0x0000000000056520 : mov edx, dword ptr [rax + rcx*8] ; mov qword ptr [rax + rcx*8], rdx ; xor eax, eax ; ret
0x00000000000866cc : mov edx, dword ptr [rax] ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000063aa0 : mov edx, dword ptr [rax] ; cmp edx, 0x26 ; je 0x63ad2 ; mov eax, 0xffffffff ; ret
0x00000000000bc6b4 : mov edx, dword ptr [rax] ; cmp edx, esi ; je 0xbc6c7 ; test edx, edx ; jne 0xbc6b9 ; ret
0x00000000000bc6b4 : mov edx, dword ptr [rax] ; cmp edx, esi ; je 0xbc6c8 ; test edx, edx ; jne 0xbc6ba ; ret
0x0000000000026b62 : mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000001351b2 : mov edx, dword ptr [rax] ; xor eax, eax ; call 0x814a6
0x0000000000078eef : mov edx, dword ptr [rbp - 0x4f8] ; jmp 0x78ec1
0x0000000000028f63 : mov edx, dword ptr [rbp - 0x50] ; mov rdi, r14 ; mov rsi, r13 ; call 0x2526b
0x000000000007893a : mov edx, dword ptr [rbp - 0x518] ; jmp rax
0x000000000011d9c0 : mov edx, dword ptr [rbx] ; mov qword ptr [rax], rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000017f1af : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000017d8dd : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000121b0a : mov edx, dword ptr [rcx + rdx] ; test edx, edx ; jne 0x121b1f ; ret
0x000000000012236a : mov edx, dword ptr [rcx + rdx] ; test edx, edx ; jne 0x12237f ; ret
0x0000000000034dea : mov edx, dword ptr [rcx + rdx] ; test edx, edx ; jne 0x34dff ; ret
0x000000000011e174 : mov edx, dword ptr [rcx] ; cmp edx, 0x26 ; je 0x11e1c2 ; ret
0x0000000000071834 : mov edx, dword ptr [rcx] ; mov byte ptr [rdx], al ; jmp 0x6db07
0x000000000012b77f : mov edx, dword ptr [rdi + 0x28] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x000000000012be98 : mov edx, dword ptr [rdi + 8] ; mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x0000000000189742 : mov edx, dword ptr [rdi] ; cmp edx, dword ptr [rsi] ; jne 0x189732 ; ret
0x0000000000143234 : mov edx, dword ptr [rdi] ; mov r8, rbp ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x0000000000044b25 : mov edx, dword ptr [rdi] ; test edx, edx ; mov edx, 1 ; cmove eax, edx ; ret
0x00000000000bb91a : mov edx, dword ptr [rdi] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x0000000000143294 : mov edx, dword ptr [rdi] ; xor r8d, r8d ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x0000000000035250 : mov edx, dword ptr [rdx + 0x48] ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x0000000000035220 : mov edx, dword ptr [rdx + 0x58] ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x0000000000098893 : mov edx, dword ptr [rdx + 0x870] ; cmp rdx, r8 ; jne 0x9886b ; ret
0x0000000000055e77 : mov edx, dword ptr [rdx + 0x88] ; xor eax, eax ; ret
0x000000000009c5d5 : mov edx, dword ptr [rdx + 8] ; test rdx, rdx ; jne 0x9c5d8 ; ret
0x00000000001205b4 : mov edx, dword ptr [rip + 0xc7c3e] ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000000fe751 : mov edx, dword ptr [rip + 0xe5861] ; mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x000000000016b720 : mov edx, dword ptr [rsi + 1] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000016b6b0 : mov edx, dword ptr [rsi + 2] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000000b6aa2 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x00000000000b78e2 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 7] ; ret
0x00000000000b5492 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000016b640 : mov edx, dword ptr [rsi + 3] ; mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000000b5483 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000b54f4 : mov edx, dword ptr [rsi + 5] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000b5504 : mov edx, dword ptr [rsi + 6] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000b54d3 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000b5514 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000000b54e3 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000b54c4 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x00000000001656f1 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000165ab0 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000cdb0c : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rsi + rcx], edx ; test edx, edx ; jne 0xcdb11 ; ret
0x00000000000cdb0c : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rsi + rcx], edx ; test edx, edx ; jne 0xcdb12 ; ret
0x00000000001656e4 : mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001658c4 : mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000165aa4 : mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000165504 : mov edx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000165cb0 : mov edx, dword ptr [rsi - 5] ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000165eb0 : mov edx, dword ptr [rsi - 6] ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001660b0 : mov edx, dword ptr [rsi - 7] ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000165325 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000165c95 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000165e95 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000166095 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000165341 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000b6a60 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x00000000001885d0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; vzeroupper ; ret
0x00000000000b78a0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 4] ; ret
0x00000000000b5460 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000186b30 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; vzeroupper ; ret
0x00000000000b94d0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000b6ab1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x00000000000b78f1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 8] ; ret
0x00000000000b54a1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000b9521 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000b6a41 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x00000000000b7871 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 2] ; ret
0x00000000000b5441 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000b94a1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x000000000015e5c9 : mov edx, dword ptr [rsp + 0x10] ; call rdx
0x00000000000a7191 : mov edx, dword ptr [rsp + 0x10] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + rax - 1] ; ret
0x00000000000bbfab : mov edx, dword ptr [rsp + 0x10] ; mov r9, r14 ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x0000000000126683 : mov edx, dword ptr [rsp + 0x10] ; mov rsi, r13 ; xor r15d, r15d ; call rax
0x0000000000126404 : mov edx, dword ptr [rsp + 0x10] ; xor esi, esi ; mov edi, 0x2000004 ; call rcx
0x0000000000109b1e : mov edx, dword ptr [rsp + 0x18] ; jmp 0x108462
0x00000000000a6ff1 : mov edx, dword ptr [rsp + 0x18] ; mov qword ptr [rdi], rdx ; add rax, rdi ; ret
0x000000000014c15f : mov edx, dword ptr [rsp + 0x20] ; call rdx
0x00000000000cbf43 : mov edx, dword ptr [rsp + 0x20] ; jmp 0xca903
0x0000000000145c1b : mov edx, dword ptr [rsp + 0x28] ; mov rsi, qword ptr [rsp + 0x20] ; call qword ptr [rax]
0x0000000000108436 : mov edx, dword ptr [rsp + 0x30] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000009cc71 : mov edx, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000009cbdc : mov edx, dword ptr [rsp + 8] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013b711 : mov edx, dword ptr [rsp + 8] ; jne 0x13b753 ; add rsp, 0x38 ; ret
0x000000000011db06 : mov edx, dword ptr [rsp + 8] ; mov eax, 0x38 ; syscall
0x0000000000136efc : mov edx, dword ptr [rsp + 8] ; mov rdi, r13 ; mov rsi, qword ptr [rsp] ; call r12
0x0000000000095b21 : mov edx, dword ptr [rsp] ; jmp 0x95972
0x000000000014f514 : mov edx, dword ptr [rsp] ; mov rcx, qword ptr [rsp + 8] ; call 0x13b78a
0x000000000011e173 : mov edx, dword ptr fs:[rcx] ; cmp edx, 0x26 ; je 0x11e1c3 ; ret
0x00000000000ba67c : mov edx, eax ; and edx, 0xf ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x000000000011545b : mov edx, eax ; jmp 0x11548a
0x00000000001155da : mov edx, eax ; jmp 0x11560a
0x000000000014e6f0 : mov edx, eax ; jmp 0x14e6bb
0x000000000015ec24 : mov edx, eax ; jmp 0x15ebe9
0x000000000015f6c1 : mov edx, eax ; jmp 0x15f6d7
0x0000000000084a4a : mov edx, eax ; jmp 0x849de
0x000000000008a402 : mov edx, eax ; jmp 0x8a3ab
0x000000000008a4f2 : mov edx, eax ; jmp 0x8a49b
0x000000000008ab08 : mov edx, eax ; jmp 0x8aa96
0x000000000008ac25 : mov edx, eax ; jmp 0x8abb1
0x00000000000a0324 : mov edx, eax ; jmp 0xa0344
0x00000000000a468a : mov edx, eax ; jmp 0xa4632
0x00000000000a6182 : mov edx, eax ; jmp 0xa6123
0x00000000000e4b24 : mov edx, eax ; jmp 0xe4ae9
0x00000000000e55c1 : mov edx, eax ; jmp 0xe55d7
0x000000000013dfa1 : mov edx, eax ; mov byte ptr [r10], 0 ; ret
0x00000000000e1667 : mov edx, eax ; mov eax, 0x23 ; syscall
0x000000000011423e : mov edx, eax ; mov eax, 0x4a ; syscall
0x00000000001142ee : mov edx, eax ; mov eax, 0x4b ; syscall
0x000000000010d805 : mov edx, eax ; mov eax, 0x55 ; syscall
0x000000000004424d : mov edx, eax ; mov eax, 0x82 ; syscall
0x0000000000043eac : mov edx, eax ; mov eax, 0xea ; syscall
0x000000000010d68e : mov edx, eax ; mov eax, 3 ; syscall
0x00000000000baca0 : mov edx, eax ; mov eax, dword ptr [r8 + rax*4] ; sub eax, dword ptr [r8 + r9*4] ; je 0xbac94 ; ret
0x000000000008a3ee : mov edx, eax ; mov eax, edx ; ret
0x00000000001172dd : mov edx, eax ; mov r8, r9 ; mov r9, qword ptr [rsp + 8] ; syscall
0x000000000009266e : mov edx, eax ; mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x92672 ; ret
0x000000000010c95d : mov edx, eax ; mov rdx, rcx ; mov eax, 0x106 ; syscall
0x00000000000a7180 : mov edx, eax ; movsxd rdx, dword ptr [r8 + rdx*4] ; add rdx, r8 ; jmp rdx
0x00000000000d8e9a : mov edx, eax ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x0000000000055f78 : mov edx, eax ; movsxd rdx, dword ptr [rsi + rdx*4] ; add rdx, rsi ; cmp ecx, 0x2f ; jmp rdx
0x000000000013b7f0 : mov edx, eax ; ret
0x0000000000135297 : mov edx, eax ; xor eax, eax ; call 0x814a6
0x00000000000d8707 : mov edx, ebp ; mov rdi, r15 ; call 0x25197
0x0000000000045d3f : mov edx, ebp ; mov rsi, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000015143c : mov edx, ebp ; mov rsi, qword ptr [rsp + 8] ; mov rdi, qword ptr [rsp] ; call rax
0x000000000011e044 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebx ; mov eax, 0x113 ; syscall
0x000000000011eee8 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebx ; mov eax, 0x2c ; syscall
0x000000000011ecc8 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebx ; mov eax, 0x2d ; syscall
0x00000000000454a6 : mov edx, ebp ; mov rsi, r12 ; mov rdi, qword ptr [rsp + 0x18] ; call rbx
0x00000000000454e1 : mov edx, ebp ; mov rsi, r12 ; mov rdi, r13 ; call rbx
0x0000000000045814 : mov edx, ebp ; mov rsi, r14 ; mov rdi, r12 ; call rbx
0x000000000005e580 : mov edx, ebp ; mov rsi, r15 ; mov rdi, qword ptr [rbp - 0xc0] ; call rax
0x00000000000454fc : mov edx, ebp ; mov rsi, r15 ; mov rdi, r12 ; call rbx
0x0000000000112981 : mov edx, ebp ; mov word ptr [rbp + 0x21], cx ; syscall
0x000000000012b171 : mov edx, ebp ; movups xmmword ptr [rbp - 0x78], xmm6 ; call rax
0x000000000012b59d : mov edx, ebp ; movups xmmword ptr [rbp - 0x78], xmm7 ; call rax
0x000000000014ee45 : mov edx, ebp ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000126050 : mov edx, ebp ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x00000000000c0272 : mov edx, ebp ; test eax, eax ; setne dl ; jmp 0xc028d
0x00000000001117c1 : mov edx, ebx ; mov eax, 0x10f ; syscall
0x000000000010fc2a : mov edx, ebx ; mov edi, 1 ; jne 0x10fca3 ; call 0x10c65b
0x000000000009bdba : mov edx, ebx ; mov rsi, r12 ; call rax
0x000000000009b837 : mov edx, ebx ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000012aca9 : mov edx, ebx ; movups xmmword ptr [rbp - 0x78], xmm4 ; call rax
0x000000000011e1d1 : mov edx, ecx ; cmp ecx, -1 ; je 0x11e214 ; mov eax, 0x149 ; syscall
0x0000000000115697 : mov edx, ecx ; jmp 0x1156cb
0x000000000011b66c : mov edx, ecx ; jmp 0x11b677
0x000000000011b6a2 : mov edx, ecx ; jmp 0x11b68f
0x00000000000485f1 : mov edx, ecx ; jmp 0x485b9
0x00000000000485f1 : mov edx, ecx ; jmp 0x485bb
0x000000000008123a : mov edx, ecx ; jmp 0x811d0
0x000000000009b740 : mov edx, ecx ; jmp 0x9b6d7
0x00000000000efae2 : mov edx, ecx ; jmp 0xefaa7
0x000000000010e1e1 : mov edx, ecx ; mov eax, 0x104 ; syscall
0x000000000010c960 : mov edx, ecx ; mov eax, 0x106 ; syscall
0x0000000000063a41 : mov edx, ecx ; mov eax, 0x108 ; syscall
0x000000000010e9d1 : mov edx, ecx ; mov eax, 0x109 ; syscall
0x000000000010ea91 : mov edx, ecx ; mov eax, 0x10b ; syscall
0x000000000011e841 : mov edx, ecx ; mov eax, 0x11e ; syscall
0x000000000011e301 : mov edx, ecx ; mov eax, 0x12d ; syscall
0x000000000011dd91 : mov edx, ecx ; mov eax, 0x12e ; syscall
0x000000000011e8d1 : mov edx, ecx ; mov eax, 0x12f ; syscall
0x000000000011e931 : mov edx, ecx ; mov eax, 0x136 ; syscall
0x000000000011e961 : mov edx, ecx ; mov eax, 0x137 ; syscall
0x00000000001120cd : mov edx, ecx ; mov eax, 0x146 ; syscall
0x000000000011e661 : mov edx, ecx ; mov eax, 0x19 ; syscall
0x0000000000111d51 : mov edx, ecx ; mov eax, 0x28 ; syscall
0x000000000011f141 : mov edx, ecx ; mov eax, 0x35 ; syscall
0x000000000011f0b1 : mov edx, ecx ; mov eax, 0x36 ; syscall
0x000000000011ec11 : mov edx, ecx ; mov eax, 0x37 ; syscall
0x00000000000e1431 : mov edx, ecx ; mov eax, 0x3d ; syscall
0x000000000011e6f1 : mov edx, ecx ; mov eax, 0x9d ; syscall
0x000000000011e631 : mov edx, ecx ; mov eax, 0xa5 ; syscall
0x000000000011e511 : mov edx, ecx ; mov eax, 0xaf ; syscall
0x000000000011e721 : mov edx, ecx ; mov eax, 0xb2 ; syscall
0x000000000011e751 : mov edx, ecx ; mov eax, 0xb3 ; syscall
0x000000000015a8f1 : mov edx, ecx ; mov eax, 0xb5 ; syscall
0x000000000015a941 : mov edx, ecx ; mov eax, 0xb6 ; syscall
0x000000000011b9d1 : mov edx, ecx ; mov eax, 0xbc ; syscall
0x000000000011b971 : mov edx, ecx ; mov eax, 0xbd ; syscall
0x000000000011b851 : mov edx, ecx ; mov eax, 0xbe ; syscall
0x000000000011b881 : mov edx, ecx ; mov eax, 0xbf ; syscall
0x000000000011b8e1 : mov edx, ecx ; mov eax, 0xc0 ; syscall
0x000000000011b7c1 : mov edx, ecx ; mov eax, 0xc1 ; syscall
0x00000000001176c1 : mov edx, ecx ; mov eax, 0xd8 ; syscall
0x000000000011f9c1 : mov edx, ecx ; mov eax, 0xdc ; syscall
0x0000000000111871 : mov edx, ecx ; mov eax, 0xdd ; syscall
0x000000000011e4b1 : mov edx, ecx ; mov eax, 0xe9 ; syscall
0x0000000000063a76 : mov edx, ecx ; mov ecx, 0x13c ; mov eax, ecx ; syscall
0x000000000010c905 : mov edx, ecx ; mov edi, r9d ; mov eax, 0x103 ; syscall
0x00000000001121a1 : mov edx, ecx ; test rsi, rsi ; je 0x1121de ; mov eax, 0x118 ; syscall
0x0000000000113712 : mov edx, ecx ; xor r8d, r8d ; mov eax, 0x147 ; syscall
0x0000000000113872 : mov edx, ecx ; xor r8d, r8d ; mov eax, 0x148 ; syscall
0x00000000000468cf : mov edx, edi ; call 0x45388
0x0000000000047c10 : mov edx, edi ; mov eax, edi ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x000000000009b19f : mov edx, edi ; mov rdi, r13 ; call rax
0x0000000000133c0f : mov edx, edi ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00000000000ba461 : mov edx, edi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000160dcb : mov edx, edi ; test eax, eax ; jne 0x160df1 ; mov eax, 0x27 ; syscall
0x0000000000101935 : mov edx, edx ; cmovbe rsi, r9 ; mov eax, ecx ; syscall
0x0000000000078aeb : mov edx, edx ; jmp r11
0x000000000007780c : mov edx, edx ; mov dword ptr [rbp - 0x560], 1 ; jmp rax
0x0000000000111aa8 : mov edx, edx ; mov eax, 0x11d ; mov rdx, rsi ; xor esi, esi ; syscall
0x000000000011dcd1 : mov edx, edx ; mov eax, 0x121 ; mov edx, 8 ; syscall
0x000000000007719c : mov edx, edx ; xor esi, esi ; jmp rax
0x000000000015e1f8 : mov edx, esi ; add r9, qword ptr [rsp + 8] ; call rax
0x000000000013fdb6 : mov edx, esi ; call 0x13c8b4
0x00000000001605c9 : mov edx, esi ; mov esi, 0x80 ; mov eax, ecx ; syscall
0x000000000010cd4d : mov edx, esi ; mov rsi, rdi ; mov edi, 0xffffff9c ; syscall
0x000000000012aa10 : mov edx, esi ; movups xmmword ptr [rbp - 0x78], xmm1 ; call rax
0x000000000012ac3e : mov edx, esi ; movups xmmword ptr [rbp - 0x78], xmm5 ; call rax
0x0000000000111ab0 : mov edx, esi ; xor esi, esi ; syscall
0x00000000001121f5 : mov edx, esi ; xor r10d, r10d ; xor esi, esi ; mov eax, 0x118 ; syscall
0x000000000010d361 : mov edx, esp ; mov eax, 0x10d ; syscall
0x0000000000112ae2 : mov edx, esp ; mov eax, ecx ; syscall
0x000000000009c691 : mov edx, esp ; mov ebp, 0x400 ; xor eax, eax ; jmp 0x9c668
0x0000000000112511 : mov edx, esp ; mov esi, 0x10 ; mov eax, 0x48 ; syscall
0x0000000000116637 : mov edx, esp ; mov esi, 2 ; mov edi, eax ; call 0x1128eb
0x000000000011dc72 : mov edx, esp ; mov rsi, r15 ; mov eax, 0x119 ; syscall
0x0000000000112103 : mov edx, esp ; mov rsi, rbp ; mov edi, ebx ; mov eax, 0x146 ; syscall
0x000000000010cfa6 : mov edx, esp ; mov rsi, rbp ; mov edi, ebx ; mov r8d, eax ; xor eax, eax ; syscall
0x000000000010d360 : mov edx, r12d ; mov eax, 0x10d ; syscall
0x000000000011dc71 : mov edx, r12d ; mov rsi, r15 ; mov eax, 0x119 ; syscall
0x000000000014ee44 : mov edx, r13d ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013fdb5 : mov edx, r14d ; call 0x13c8b5
0x0000000000043eab : mov edx, r8d ; mov eax, 0xea ; syscall
0x000000000004afd9 : mov es, edx ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d44
0x00000000001017a1 : mov es, word ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000121b20 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x00000000000b76be : mov es, word ptr [rsi] ; add byte ptr [rax], al ; ret
0x000000000004e266 : mov es, word ptr [rsi] ; or eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], al ; ret 0x4835
0x0000000000135839 : mov esi, 0x10 ; jmp 0x1357fc
0x0000000000112485 : mov esi, 0x10 ; mov eax, 0x48 ; syscall
0x00000000000a6ef6 : mov esi, 0x39410704 ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x3941
0x00000000000c50d5 : mov esi, 0x39cc05d9 ; str word ptr [rax - 0x77] ; ret 0xc148
0x0000000000028e45 : mov esi, 0x3a ; call 0x25147
0x0000000000028e74 : mov esi, 0x3a ; lea r12d, [r15 + 2] ; call 0x2514b
0x0000000000100d1a : mov esi, 0x441fe830 ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x000000000010ce6f : mov esi, 0x48000000 ; add esp, 0x78 ; ret
0x00000000000cdebe : mov esi, 0x48000000 ; lea eax, [rdi - 0x10] ; ret
0x000000000019667e : mov esi, 0x4800050e ; test ebx, ebx ; jne 0x196672 ; pop rbx ; ret
0x000000000012d2fe : mov esi, 0x48fff8cc ; cmove eax, edx ; ret
0x00000000001129a7 : mov esi, 0x5401 ; mov eax, r10d ; mov r12d, dword ptr fs:[r8] ; syscall
0x0000000000112c02 : mov esi, 0x5409 ; mov eax, 0x10 ; syscall
0x000000000007e1ac : mov esi, 0x63480012 ; add al, 0x88 ; add rax, rdx ; jmp rax
0x000000000018ce6e : mov esi, 0x63490002 ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00000000000a6dd1 : mov esi, 0x74c08407 ; xor dword ptr [rcx], edi ; ret 0x2d74
0x00000000000a6f45 : mov esi, 0x75c98408 ; in eax, dx ; xor eax, eax ; ret
0x00000000001605cb : mov esi, 0x80 ; mov eax, ecx ; syscall
0x000000000012be78 : mov esi, 0x80 ; syscall
0x000000000015e2be : mov esi, 0x81 ; mov eax, 0xca ; syscall
0x00000000000292e2 : mov esi, 0x83480147 ; ret
0x0000000000083786 : mov esi, 0x841f0f66 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0xe8
0x0000000000108e59 : mov esi, 0x84400075 ; test byte ptr [rdi], 0x84 ; retf
0x0000000000065410 : mov esi, 0x8900002a ; retf 0xc183
0x000000000005417d : mov esi, 0x89410252 ; ret
0x000000000005a90f : mov esi, 0x89412404 ; ret
0x000000000013f736 : mov esi, 0x89480045 ; ret
0x0000000000029956 : mov esi, 0x89480045 ; ret 0xf641
0x0000000000129bd6 : mov esi, 0x89482404 ; ret 0xe883
0x0000000000102b26 : mov esi, 0x894d024e ; ret 0x8d4c
0x00000000000df1bc : mov esi, 0x8b486408 ; xor cl, byte ptr [rax - 0x77] ; retf 0x44f6
0x0000000000038f18 : mov esi, 0xa ; mov rdi, r14 ; call 0x2514a
0x0000000000145527 : mov esi, 0xc0834808 ; add dword ptr [rax - 0x77], ecx ; retf 0x44f6
0x00000000001260f0 : mov esi, 0xc48348c3 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000005f44b : mov esi, 0xc7394406 ; ja 0x5f43a ; mov eax, r9d ; ret
0x00000000000ea46c : mov esi, 0xc8dff50 ; retf 0x3948
0x00000000000a6df5 : mov esi, 0xc984070c ; jne 0xa6def ; ret
0x00000000000a6eb5 : mov esi, 0xd139070c ; je 0xa6ebb ; cmp ecx, esi ; je 0xa6ebb ; ret
0x00000000000a6db1 : mov esi, 0xd2840714 ; jne 0xa6daf ; ret
0x0000000000116346 : mov esi, 0xf233c03 ; xchg eax, ebp ; ret 0xd189
0x00000000000a6e85 : mov esi, 0xf2390714 ; je 0xa6e87 ; ret
0x000000000012f419 : mov esi, 0xf303c07 ; test byte ptr [rbp - 0x77000000], ah ; ret 0xe283
0x000000000012d114 : mov esi, 0xf480005 ; ret 0xfc3
0x000000000018bbb9 : mov esi, 0xf66beb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000096506 : mov esi, 0xf6fffffd ; ret 0x750f
0x0000000000102b97 : mov esi, 0xfc085c0 ; xchg eax, esp ; ret 0x1589
0x000000000008841b : mov esi, 0xffffffff ; call qword ptr [r13 + 0x18]
0x00000000000807b0 : mov esi, 1 ; lea rcx, [rbx + 0x40] ; mov rdi, rbx ; call rax
0x000000000014c0c4 : mov esi, 1 ; mov rdi, rbp ; call 0x148b9a
0x0000000000116639 : mov esi, 2 ; mov edi, eax ; call 0x1128e9
0x0000000000129b23 : mov esi, 3 ; mov rdi, r14 ; call 0x125d8a
0x00000000000441e0 : mov esi, 8 ; mov eax, 0x7f ; syscall
0x000000000004421d : mov esi, 8 ; mov eax, 0x82 ; syscall
0x000000000015070f : mov esi, 9 ; call qword ptr [r10]
0x0000000000160dd8 : mov esi, 9 ; mov edi, eax ; mov eax, 0x3e ; syscall
0x000000000011877c : mov esi, dword ptr [rax + 8] ; test sil, 1 ; jne 0x1187a9 ; ret
0x0000000000118ac5 : mov esi, dword ptr [rax] ; mov rdi, r13 ; mov dword ptr [rbp - 0x50], r15d ; call r14
0x0000000000127822 : mov esi, dword ptr [rdi + 0x38] ; jmp 0x1277ee
0x00000000000d8702 : mov esi, dword ptr [rdi + rax*8 + 0x40] ; mov rdx, rbp ; mov rdi, r15 ; call 0x2519c
0x0000000000046536 : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [rbx] ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000000ba123 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000018d4ba : mov esi, dword ptr [rsi] ; mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000000ba114 : mov esi, dword ptr [rsi] ; mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x00000000000913a2 : mov esi, dword ptr [rsp + 0x10] ; mov rdi, qword ptr [rsp + 8] ; jmp 0x91382
0x0000000000045d42 : mov esi, dword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000027a46 : mov esi, dword ptr [rsp + 0x10] ; xor r8d, r8d ; call rbx
0x0000000000099271 : mov esi, dword ptr [rsp + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000000bbfb3 : mov esi, dword ptr [rsp + 0x18] ; call rbx
0x00000000001457c8 : mov esi, dword ptr [rsp + 0x18] ; mov rdi, rbp ; call r14
0x0000000000145c20 : mov esi, dword ptr [rsp + 0x20] ; call qword ptr [rax]
0x0000000000108e11 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, r13 ; call 0x250b9
0x0000000000099cd1 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x000000000014bf48 : mov esi, dword ptr [rsp + 0x30] ; mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x000000000002a257 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x000000000002aa68 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call r15
0x000000000002acd6 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x000000000002af0d : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x000000000002a490 : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000002b527 : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x000000000002bdcd : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x000000000014c157 : mov esi, dword ptr [rsp + 0x40] ; mov rdi, rbp ; mov rdx, qword ptr [rsp + 0x20] ; call rdx
0x000000000002c90f : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000002efe1 : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000002da1d : mov esi, dword ptr [rsp + 0x50] ; mov rdi, qword ptr [rsp + 0x48] ; call r14
0x00000000000dd3f1 : mov esi, dword ptr [rsp + 0x60] ; mov rdi, qword ptr [rsp + 8] ; call r12
0x000000000014f5fb : mov esi, dword ptr [rsp + 0x68] ; mov rdi, r15 ; mov rcx, qword ptr [rsp + 0x30] ; call rcx
0x00000000000cf23c : mov esi, dword ptr [rsp + 8] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x000000000015143f : mov esi, dword ptr [rsp + 8] ; mov rdi, qword ptr [rsp] ; call rax
0x0000000000136f04 : mov esi, dword ptr [rsp] ; call r12
0x0000000000109356 : mov esi, dword ptr [rsp] ; mov rcx, rax ; mov rdi, qword ptr [rbx] ; call 0x105dcb
0x00000000001093a3 : mov esi, dword ptr [rsp] ; mov rdi, qword ptr [rbx] ; call 0x105dc8
0x000000000012ef8e : mov esi, eax ; add ecx, ecx ; jmp 0x8b1c6
0x00000000001218f0 : mov esi, eax ; and esi, dword ptr [rdx + 0x10] ; lea rdx, [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000002e39f : mov esi, eax ; jmp 0x2e368
0x000000000011fd9e : mov esi, eax ; mov edi, ebx ; mov eax, 0x14 ; syscall
0x000000000011ff27 : mov esi, eax ; mov edi, ebx ; mov eax, r14d ; syscall
0x000000000010bfcd : mov esi, eax ; mov edi, edx ; mov eax, 0x75 ; syscall
0x000000000010bff5 : mov esi, eax ; mov edi, edx ; mov eax, 0x77 ; syscall
0x0000000000043ea9 : mov esi, eax ; mov edx, r8d ; mov eax, 0xea ; syscall
0x00000000000a0608 : mov esi, eax ; mov rbx, rax ; call 0x9d027
0x000000000015d3cf : mov esi, eax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000028f6a : mov esi, ebp ; call 0x25264
0x000000000009c2ed : mov esi, ebp ; call rax
0x00000000001135cf : mov esi, ebp ; mov edi, ebx ; mov eax, 0x127 ; syscall
0x000000000011367f : mov esi, ebp ; mov edi, ebx ; mov eax, 0x128 ; syscall
0x0000000000112106 : mov esi, ebp ; mov edi, ebx ; mov eax, 0x146 ; syscall
0x00000000000e14ad : mov esi, ebp ; mov edi, ebx ; mov eax, 0xf7 ; syscall
0x000000000012c716 : mov esi, ebp ; mov edi, ebx ; mov eax, ecx ; syscall
0x0000000000113479 : mov esi, ebp ; mov edi, ebx ; mov r8d, eax ; mov eax, 0x13 ; syscall
0x000000000011e0e9 : mov esi, ebp ; mov edi, ebx ; mov r8d, eax ; mov eax, 0x130 ; syscall
0x0000000000113519 : mov esi, ebp ; mov edi, ebx ; mov r8d, eax ; mov eax, 0x14 ; syscall
0x000000000011eb49 : mov esi, ebp ; mov edi, ebx ; mov r8d, eax ; mov eax, 0x2a ; syscall
0x000000000011ea79 : mov esi, ebp ; mov edi, ebx ; mov r8d, eax ; mov eax, 0x2b ; syscall
0x000000000011ef89 : mov esi, ebp ; mov edi, ebx ; mov r8d, eax ; mov eax, 0x2e ; syscall
0x000000000011ee29 : mov esi, ebp ; mov edi, ebx ; mov r8d, eax ; mov eax, 0x2f ; syscall
0x000000000010d049 : mov esi, ebp ; mov edi, ebx ; mov r8d, eax ; mov eax, 1 ; syscall
0x000000000010cfa9 : mov esi, ebp ; mov edi, ebx ; mov r8d, eax ; xor eax, eax ; syscall
0x00000000001137bd : mov esi, ebp ; mov edi, r12d ; mov eax, 0x147 ; syscall
0x000000000011391d : mov esi, ebp ; mov edi, r12d ; mov eax, 0x148 ; syscall
0x000000000010b341 : mov esi, ebp ; mov r8d, eax ; mov edi, ebx ; mov eax, 0x11 ; syscall
0x000000000011decf : mov esi, ebp ; mov r8d, eax ; mov edi, ebx ; mov eax, 0x114 ; syscall
0x00000000001122f1 : mov esi, ebp ; mov r8d, eax ; mov edi, ebx ; mov eax, 0x115 ; syscall
0x000000000011df81 : mov esi, ebp ; mov r8d, eax ; mov edi, ebx ; mov eax, 0x116 ; syscall
0x000000000011238f : mov esi, ebp ; mov r8d, eax ; mov edi, ebx ; mov eax, 0x11d ; syscall
0x000000000010b3f1 : mov esi, ebp ; mov r8d, eax ; mov edi, ebx ; mov eax, 0x12 ; syscall
0x000000000011f481 : mov esi, ebp ; mov r8d, eax ; mov edi, ebx ; mov eax, 0x120 ; syscall
0x000000000011f5d1 : mov esi, ebp ; mov r8d, eax ; mov edi, ebx ; mov eax, 0x133 ; syscall
0x00000000000e13ac : mov esi, ebp ; mov r8d, eax ; mov edi, ebx ; mov eax, 0x3d ; syscall
0x000000000011f751 : mov esi, ebp ; mov r8d, eax ; mov edi, ebx ; mov eax, 0x45 ; syscall
0x000000000011de31 : mov esi, ebp ; mov r8d, eax ; mov edi, ebx ; mov eax, 0xe8 ; syscall
0x00000000001456ed : mov esi, ebp ; mov rcx, rbx ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00000000000ced14 : mov esi, ebp ; mov rdi, rbp ; call rbx
0x00000000001174b7 : mov esi, ebp ; mov rdi, rbp ; mov eax, 9 ; syscall
0x000000000009afca : mov esi, ebp ; mov rdi, rbx ; call rax
0x000000000010c4c8 : mov esi, ebp ; mov rdi, rbx ; mov eax, ecx ; syscall
0x00000000000e1662 : mov esi, ebp ; mov rdi, rbx ; mov edx, eax ; mov eax, 0x23 ; syscall
0x000000000010d800 : mov esi, ebp ; mov rdi, rbx ; mov edx, eax ; mov eax, 0x55 ; syscall
0x00000000000bd8f0 : mov esi, ebp ; setne dl ; jmp 0xbd90b
0x00000000000c2ad1 : mov esi, ebp ; setne dl ; jmp 0xc2aeb
0x00000000000ca531 : mov esi, ebp ; setne dl ; jmp 0xca54b
0x0000000000126688 : mov esi, ebp ; xor r15d, r15d ; call rax
0x000000000008c5f4 : mov esi, ebx ; mov edi, dword ptr [rbp - 0x84] ; mov eax, r10d ; syscall
0x000000000008c39c : mov esi, ebx ; mov edi, r13d ; mov eax, r9d ; syscall
0x000000000009bc41 : mov esi, ebx ; mov rdi, r12 ; call rax
0x000000000011a371 : mov esi, ebx ; mov rdi, r13 ; call r14
0x0000000000152510 : mov esi, ebx ; mov rdi, r15 ; call qword ptr [rax]
0x0000000000155d4e : mov esi, ebx ; mov rdi, rbp ; call rcx
0x00000000000dbac3 : mov esi, ebx ; xor edi, edi ; mov eax, 0xe4 ; syscall
0x0000000000043ec9 : mov esi, ecx ; mov edi, 2 ; mov eax, 0xe ; syscall
0x00000000000d8e55 : mov esi, ecx ; movsxd rax, dword ptr [rdi + rsi*4] ; add rax, rdi ; jmp rax
0x0000000000045354 : mov esi, edi ; call r14
0x000000000011dc75 : mov esi, edi ; mov eax, 0x119 ; syscall
0x0000000000112de5 : mov esi, edi ; mov eax, 0x12e ; xor edi, edi ; syscall
0x0000000000113b2c : mov esi, edi ; mov eax, 0x75 ; mov edi, edx ; syscall
0x0000000000113bfc : mov esi, edi ; mov eax, 0x77 ; mov edi, edx ; syscall
0x000000000010ccc5 : mov esi, edi ; mov edi, 0xffffff9c ; syscall
0x000000000005e583 : mov esi, edi ; mov rdi, qword ptr [rbp - 0xc0] ; call rax
0x00000000000454ff : mov esi, edi ; mov rdi, r12 ; call rbx
0x000000000010d936 : mov esi, edi ; mov rdi, r14 ; mov eax, 0x4f ; syscall
0x00000000001434ee : mov esi, edi ; mov rdi, rbx ; mov qword ptr [rsp + 8], rcx ; call r12
0x00000000000462d6 : mov esi, edi ; mov rdi, rbx ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000000dbaae : mov esi, edi ; xor edi, edi ; call rax
0x000000000014c80a : mov esi, edx ; add rdi, 0x10 ; jmp rcx
0x000000000012a5b8 : mov esi, edx ; call rax
0x000000000010c5bc : mov esi, edx ; mov eax, 4 ; syscall
0x000000000010c60a : mov esi, edx ; mov eax, 5 ; syscall
0x000000000010c65c : mov esi, edx ; mov eax, 6 ; syscall
0x0000000000155b9f : mov esi, esi ; mov dword ptr [rdi + 0x28], edx ; add rsi, rax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000011f52a : mov esi, esi ; mov edi, ebx ; mov eax, 0x12b ; syscall
0x000000000011403c : mov esi, esi ; mov edi, ebx ; mov eax, 0x17 ; syscall
0x000000000011f7fc : mov esi, esi ; mov edi, ebx ; mov eax, 0x46 ; syscall
0x0000000000045817 : mov esi, esi ; mov rdi, r12 ; call rbx
0x000000000009b83a : mov esi, esi ; mov rdi, r13 ; call rax
0x0000000000155166 : mov esi, esi ; mov rdi, rbp ; xor eax, eax ; call rcx
0x00000000000e2ff9 : mov esi, esi ; movsxd rax, dword ptr [rdx + rsi*4] ; add rax, rdx ; jmp rax
0x00000000000ceaea : mov esi, esp ; call 0x12c6c9
0x0000000000147e7d : mov esi, esp ; call qword ptr [rax]
0x000000000009bdbd : mov esi, esp ; call rax
0x00000000000dc7b3 : mov esi, esp ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e38fc : mov esi, esp ; mov edi, 1 ; mov eax, 0xe5 ; syscall
0x000000000010bb2a : mov esi, esp ; mov edi, 2 ; mov eax, 0xe ; syscall
0x000000000011e047 : mov esi, esp ; mov edi, ebx ; mov eax, 0x113 ; syscall
0x000000000011eeeb : mov esi, esp ; mov edi, ebx ; mov eax, 0x2c ; syscall
0x000000000011eccb : mov esi, esp ; mov edi, ebx ; mov eax, 0x2d ; syscall
0x00000000000454a9 : mov esi, esp ; mov rdi, qword ptr [rsp + 0x18] ; call rbx
0x000000000004a3bb : mov esi, esp ; mov rdi, r12 ; call 0x5707c
0x00000000001551fb : mov esi, esp ; mov rdi, r12 ; call qword ptr [rax]
0x00000000000454e4 : mov esi, esp ; mov rdi, r13 ; call rbx
0x0000000000147f19 : mov esi, esp ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000143647 : mov esi, esp ; mov rdi, rbx ; mov rcx, r13 ; call r10
0x000000000008672c : mov esi, esp ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000008dec7 : mov esi, esp ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000001824d5 : mov esi, fs ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x000000000008672b : mov esi, r12d ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000fbf12 : mov esp, 0x11824 ; add al, ch ; ret
0x0000000000109509 : mov esp, 0x14824 ; add byte ptr [rbp - 0x77], cl ; retf 0x35e9
0x0000000000114f84 : mov esp, 0x2000d2e ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000138445 : mov esp, 0x20024 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000009e487 : mov esp, 0x440f48c7 ; ret 0xc083
0x00000000000aa7a1 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x00000000000aa7d1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000aa7c1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000026f53 : mov esp, 0x752ffa80 ; ret 0xf983
0x000000000013e8f2 : mov esp, 0x8024 ; add byte ptr [rax - 0x73], cl ; and byte ptr [r8 - 0x7d], cl ; ret
0x0000000000097241 : mov esp, 0x8024 ; add byte ptr [rax - 0x75], cl ; push rdi ; or dh, dh ; ret 0xf04
0x0000000000097267 : mov esp, 0x8024 ; add dh, dh ; ret 0x7504
0x00000000000f7313 : mov esp, 0x8824 ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000151329 : mov esp, 0x8be2894c ; xor cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000091bd2 : mov esp, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x00000000000c585e : mov esp, 0xa824 ; add byte ptr [rax + 0x63], cl ; retf 0x860f
0x00000000001821b2 : mov esp, 0xc08348c0 ; add rax, rdi ; vzeroupper ; ret
0x00000000001821a2 : mov esp, 0xc08348c0 ; and byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x0000000000039451 : mov esp, 0xc085fffe ; jns 0x3942b ; mov r15, r12 ; jmp 0x39432
0x00000000000aa7e1 : mov esp, 0xc22948c0 ; jbe 0xaa82a ; add rax, rdi ; ret
0x00000000000aa7f1 : mov esp, 0xc22948c0 ; jbe 0xaa82c ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000aa801 : mov esp, 0xc22948c0 ; jbe 0xaa82c ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000aa811 : mov esp, 0xc22948c0 ; jbe 0xaa82c ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000ccd01 : mov esp, 0xc22948c0 ; jbe 0xccd4a ; add rax, rdi ; ret
0x00000000000ccd11 : mov esp, 0xc22948c0 ; jbe 0xccd4c ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000ccd21 : mov esp, 0xc22948c0 ; jbe 0xccd4c ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000ccd31 : mov esp, 0xc22948c0 ; jbe 0xccd4c ; lea rax, [rdi + rax + 0x30] ; ret
0x000000000009e476 : mov esp, 0xc2440fc7 ; add eax, 1 ; ret
0x00000000000b5b75 : mov esp, 0xc28348d2 ; adc byte ptr [rax + 0x29], cl ; retf 0x394c
0x0000000000185d45 : mov esp, 0xc80148c0 ; add rax, rdi ; vzeroupper ; ret
0x0000000000186ab1 : mov esp, 0xce0148d2 ; add edx, 0x20 ; sub edx, ecx ; jmp 0x186a62
0x00000000001871d1 : mov esp, 0xce0148d2 ; add edx, 0x20 ; sub edx, ecx ; jmp 0x187182
0x0000000000187851 : mov esp, 0xce0148d2 ; add edx, 0x20 ; sub edx, ecx ; jmp 0x187802
0x0000000000187ca1 : mov esp, 0xce0148d2 ; add edx, 0x20 ; sub edx, ecx ; jmp 0x187c42
0x0000000000188541 : mov esp, 0xce0148d2 ; add edx, 0x20 ; sub edx, ecx ; jmp 0x1884f2
0x00000000001889c1 : mov esp, 0xce0148d2 ; add edx, 0x20 ; sub edx, ecx ; jmp 0x188957
0x00000000000b0343 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x00000000000ce178 : mov esp, 0xd00148d2 ; sub rax, rdi ; shr rax, 2 ; ret
0x000000000009e2ef : mov esp, 0xf480001 ; ret 0x66c3
0x000000000012d139 : mov esp, 0xf480003 ; ret 0xfc3
0x000000000018bdb9 : mov esp, 0xf66bcb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000007c320 : mov esp, 0xf6fffff5 ; ret 0xf10
0x00000000000aa88b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x0000000000182237 : mov esp, 0xf80148c0 ; add rax, rcx ; vzeroupper ; ret
0x00000000000aa7b1 : mov esp, 0xf80148c0 ; ret
0x0000000000186192 : mov esp, 0xf80148c0 ; sub rax, rdx ; vzeroupper ; ret
0x0000000000182192 : mov esp, 0xf80148c0 ; vzeroupper ; ret
0x00000000001129b1 : mov esp, dword ptr [rax] ; syscall
0x0000000000066a42 : mov esp, eax ; jmp 0x669e6
0x0000000000043c7a : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x0000000000053490 : mov esp, eax ; test rax, rax ; jne 0x5305b ; jmp 0x53473
0x000000000006c9f7 : mov esp, ecx ; jmp 0x6c9c8
0x0000000000105731 : mov esp, esi ; cmp r14, rbx ; ja 0x1056d0 ; jmp 0x10570d
0x0000000000148deb : mov fs, word ptr [rcx - 0x76b3fffa] ; out 0x89, eax ; ret
0x00000000000a27a0 : mov gs, edx ; add al, byte ptr [rax] ; add byte ptr [rcx - 9], al ; ret 0xf800
0x0000000000122776 : mov gs, word ptr [rbx] ; lock dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000a0038 : mov qword ptr [r12], 0 ; jmp 0xa0016
0x00000000000bb1e3 : mov qword ptr [r12], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bb1b1 : mov qword ptr [r12], rax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009afd8 : mov qword ptr [r12], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a0da8 : mov qword ptr [r13], r12 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000dd0e5 : mov qword ptr [r13], r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000147026 : mov qword ptr [r14], 0 ; ret
0x0000000000069d29 : mov qword ptr [r15], rax ; jmp 0x65fee
0x0000000000094be1 : mov qword ptr [r8], rdx ; mov rax, rdx ; add rsp, 8 ; ret
0x0000000000118838 : mov qword ptr [r9 + 0x10], rcx ; or r9, rdx ; mov qword ptr [rax + 8], r9 ; jmp 0x118813
0x000000000018d4b0 : mov qword ptr [r9 - 8], rcx ; ret
0x000000000013b362 : mov qword ptr [r9], r10 ; ret
0x000000000013b3bb : mov qword ptr [r9], rax ; mov eax, edx ; ret
0x000000000013b3ef : mov qword ptr [r9], rdi ; ret
0x0000000000086396 : mov qword ptr [rax + 0x10], rcx ; mov qword ptr [rax + 0x40], rdx ; movups xmmword ptr [rax], xmm0 ; ret
0x0000000000086358 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000086b47 : mov qword ptr [rax + 0x18], rdx ; xor eax, eax ; mov dword ptr [rbx], ecx ; pop rbx ; ret
0x00000000000937d2 : mov qword ptr [rax + 0x20], rdx ; add rsp, 0x18 ; ret
0x000000000008c21b : mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x000000000008635c : mov qword ptr [rax + 0x40], rcx ; ret
0x000000000008639a : mov qword ptr [rax + 0x40], rdx ; movups xmmword ptr [rax], xmm0 ; ret
0x000000000008748c : mov qword ptr [rax + 0x40], rsi ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000001401fd : mov qword ptr [rax + 8], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000091990 : mov qword ptr [rax + 8], 0 ; ret
0x000000000011883f : mov qword ptr [rax + 8], r9 ; jmp 0x11880c
0x0000000000056523 : mov qword ptr [rax + rcx*8], rdx ; xor eax, eax ; ret
0x000000000011332b : mov qword ptr [rax], -1 ; xor eax, eax ; ret
0x000000000013dfd1 : mov qword ptr [rax], 0 ; ret
0x000000000013b148 : mov qword ptr [rax], r10 ; lea eax, [r9 + r8 + 2] ; pop rbx ; ret
0x0000000000084bd9 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000098a3b : mov qword ptr [rax], rdi ; ret
0x000000000011d9c2 : mov qword ptr [rax], rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000086c64 : mov qword ptr [rax], rdx ; mov eax, dword ptr [rcx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000086355 : mov qword ptr [rax], rdx ; mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000034d67 : mov qword ptr [rax], rdx ; ret
0x0000000000087453 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000071d40 : mov qword ptr [rbp - 0x470], rdx ; mov dword ptr [rax], r15d ; jmp 0x6e021
0x00000000000710d0 : mov qword ptr [rbp - 0x4d0], rdx ; jmp 0x6dbba
0x0000000000071523 : mov qword ptr [rbp - 0x4d0], rdx ; jmp 0x6df7d
0x000000000007cf31 : mov qword ptr [rbp - 0x4f0], rdi ; jmp rax
0x0000000000076f7a : mov qword ptr [rbp - 0x508], rcx ; jmp rax
0x000000000012cd38 : mov qword ptr [rbp - 0x50], rax ; jmp 0x12ccc1
0x0000000000115456 : mov qword ptr [rbp - 0x50], rax ; mov rdx, rax ; jmp 0x11548f
0x0000000000071eb9 : mov qword ptr [rbp - 0x558], r12 ; mov qword ptr [rdi], rax ; jmp 0x6e93a
0x00000000000736bb : mov qword ptr [rbp - 0x570], rax ; jmp 0x701ba
0x000000000006a551 : mov qword ptr [rbp - 0x5a0], rdx ; jmp 0x66fd9
0x0000000000028e41 : mov qword ptr [rbp - 0x68], rax ; mov esi, 0x3a ; call 0x2514b
0x000000000011fe96 : mov qword ptr [rbp - 0x830], rax ; mov eax, r14d ; syscall
0x00000000001292b0 : mov qword ptr [rbp - 0xa8], rcx ; call 0x125d89
0x00000000000a0156 : mov qword ptr [rbp], 0 ; pop rbp ; pop r12 ; ret
0x00000000000a0111 : mov qword ptr [rbp], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000925a8 : mov qword ptr [rbp], rax ; mov qword ptr [rbx + 0x60], rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009e154 : mov qword ptr [rbp], rax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000489b9 : mov qword ptr [rbp], rax ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000047bd5 : mov qword ptr [rbp], rdx ; mov rdi, qword ptr [rbx + 8] ; call rax
0x00000000000314f1 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x000000000014dd66 : mov qword ptr [rbx + 0x10], rax ; jmp 0x14dd34
0x000000000013cc2f : mov qword ptr [rbx + 0x10], rax ; mov eax, 0x14 ; add edx, 1 ; syscall
0x000000000013b97c : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015da55 : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000012618e : mov qword ptr [rbx + 0x10], rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000155f14 : mov qword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x000000000015da0d : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000001261de : mov qword ptr [rbx + 0x18], rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008b61d : mov qword ptr [rbx + 0x18], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000155f77 : mov qword ptr [rbx + 0x20], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000148c10 : mov qword ptr [rbx + 0x20], rax ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000090b50 : mov qword ptr [rbx + 0x20], rax ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014852a : mov qword ptr [rbx + 0x20], rcx ; mov eax, 1 ; jmp 0x148501
0x000000000003161e : mov qword ptr [rbx + 0x20], rdx ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ff02a : mov qword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x000000000008c238 : mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x000000000011c1fc : mov qword ptr [rbx + 0x38], rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000114a04 : mov qword ptr [rbx + 0x60], rax ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000087379 : mov qword ptr [rbx + 0x60], rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000925ac : mov qword ptr [rbx + 0x60], rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000823fb : mov qword ptr [rbx + 0xd8], rax ; call 0x8ee19
0x000000000009c7fb : mov qword ptr [rbx + 8], 0x400 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000926fa : mov qword ptr [rbx + 8], rax ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000012613e : mov qword ptr [rbx + 8], rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009c65e : mov qword ptr [rbx + 8], rbp ; mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009c6e0 : mov qword ptr [rbx + 8], rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008ac0e : mov qword ptr [rbx + 8], rdx ; movzx edx, byte ptr [rax] ; pop rbx ; mov eax, edx ; ret
0x0000000000118401 : mov qword ptr [rbx], 0 ; pop rbx ; ret
0x00000000001545e8 : mov qword ptr [rbx], rax ; mov eax, 1 ; jmp 0x1545c5
0x000000000009c79c : mov qword ptr [rbx], rax ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015df10 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000001519cd : mov qword ptr [rbx], rax ; pop rbx ; ret
0x00000000001183ab : mov qword ptr [rbx], rax ; pop rbx ; setne al ; movzx eax, al ; ret
0x000000000004896a : mov qword ptr [rbx], rax ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009c13b : mov qword ptr [rbx], rdi ; call rcx
0x000000000009c662 : mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009aa25 : mov qword ptr [rbx], rdx ; xor eax, eax ; pop rbx ; ret
0x000000000009c212 : mov qword ptr [rbx], rsi ; call rcx
0x00000000000fda4b : mov qword ptr [rcx + 0x20], rax ; jmp 0xfda21
0x00000000001761f3 : mov qword ptr [rcx + 5], rdx ; ret
0x0000000000176203 : mov qword ptr [rcx + 6], rdx ; ret
0x0000000000176213 : mov qword ptr [rcx + 7], rdx ; ret
0x0000000000176223 : mov qword ptr [rcx + 8], rdx ; ret
0x000000000005c5b7 : mov qword ptr [rcx + rdx*8], rax ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000113306 : mov qword ptr [rcx], rax ; cmp rdi, rax ; ja 0x113342 ; xor eax, eax ; ret
0x000000000008a085 : mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000001761b0 : mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x00000000001761d0 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x00000000001761e0 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x00000000001761f0 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x0000000000176200 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x0000000000176210 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x0000000000176220 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x00000000001761c0 : mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x00000000001761a0 : mov qword ptr [rcx], rdx ; ret
0x000000000005716e : mov qword ptr [rdi + 0x10], r9 ; ret
0x00000000000b6c7c : mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x17] ; ret
0x00000000000b7adc : mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x18] ; ret
0x00000000000b6c9c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; lea rax, [rdi + 0x18] ; ret
0x00000000000b560c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000b55ec : mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000b970c : mov qword ptr [rdi + 0x10], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000b7aff : mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; lea rax, [rdi + 0x19] ; ret
0x00000000000b62df : mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000b972f : mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000b6cdf : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1a] ; ret
0x00000000000b7b3f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1b] ; ret
0x00000000000b564f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000b976f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000b6cff : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1b] ; ret
0x00000000000b7b5f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1c] ; ret
0x00000000000b566f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000b978f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000b6cc0 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x19] ; ret
0x00000000000b7b20 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x1a] ; ret
0x00000000000b5630 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000155bcf : mov qword ptr [rdi + 0x18], rax ; mov eax, 1 ; ret
0x0000000000090aa2 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000008c776 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x0000000000090acf : mov qword ptr [rdi + 0x18], rdx ; mov qword ptr [rdi + 0x48], rax ; movups xmmword ptr [rdi + 8], xmm0 ; ret
0x0000000000155c66 : mov qword ptr [rdi + 0x18], rdx ; ret
0x0000000000155b69 : mov qword ptr [rdi + 0x18], rsi ; mov eax, 1 ; mov dword ptr [rdi + 0x28], edx ; ret
0x0000000000155ba7 : mov qword ptr [rdi + 0x18], rsi ; ret
0x0000000000156388 : mov qword ptr [rdi + 0x20], 0 ; ret
0x00000000000cfbbf : mov qword ptr [rdi + 0x20], rcx ; pop r14 ; pop r15 ; ret
0x0000000000090ad3 : mov qword ptr [rdi + 0x48], rax ; movups xmmword ptr [rdi + 8], xmm0 ; ret
0x0000000000090a9e : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000b6c3c : mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x15] ; ret
0x00000000000b7a9c : mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x16] ; ret
0x00000000000b55ac : mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000b96cc : mov qword ptr [rdi + 0xe], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000b6c5c : mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x16] ; ret
0x00000000000b7abc : mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x17] ; ret
0x00000000000b55cc : mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000b96ec : mov qword ptr [rdi + 0xf], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x000000000016b567 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000016b4f7 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000016b487 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000016b417 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000b6b3a : mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xc] ; ret
0x00000000000b798a : mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xd] ; ret
0x000000000016b3a7 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000b54fa : mov qword ptr [rdi + 5], rdx ; ret
0x00000000000b95ba : mov qword ptr [rdi + 5], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000b6b5a : mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xd] ; ret
0x00000000000b79aa : mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xe] ; ret
0x000000000016b337 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000b550a : mov qword ptr [rdi + 6], rdx ; ret
0x00000000000b95da : mov qword ptr [rdi + 6], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000b6b7a : mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xe] ; ret
0x00000000000b79ca : mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xf] ; ret
0x000000000016b2c7 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000b551a : mov qword ptr [rdi + 7], rdx ; ret
0x00000000000b95fa : mov qword ptr [rdi + 7], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x000000000005688f : mov qword ptr [rdi + 8], r10 ; mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000056753 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000057167 : mov qword ptr [rdi + 8], r8 ; shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x00000000000570f3 : mov qword ptr [rdi + 8], r9 ; ret
0x0000000000058825 : mov qword ptr [rdi + 8], rax ; mov eax, 2 ; ret
0x0000000000155d18 : mov qword ptr [rdi + 8], rax ; movups xmmword ptr [rdi + 0x18], xmm0 ; mov dword ptr [rdi + 0x28], edx ; ret
0x0000000000090aa6 : mov qword ptr [rdi + 8], rax ; ret
0x000000000008aaee : mov qword ptr [rdi + 8], rcx ; movzx edx, byte ptr [rax] ; pop rbx ; mov eax, edx ; ret
0x000000000008d34e : mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x00000000000576bc : mov qword ptr [rdi + r11*8 + 8], r9 ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000188cdb : mov qword ptr [rdi + r8 - 8], rdx ; lea rax, [rdi + r8] ; vzeroupper ; ret
0x0000000000187fab : mov qword ptr [rdi + r8 - 8], rdx ; vzeroupper ; ret
0x000000000018860b : mov qword ptr [rdi + rdx - 7], r9 ; lea rax, [rdi + rdx] ; vzeroupper ; ret
0x0000000000186b5b : mov qword ptr [rdi + rdx - 7], r9 ; vzeroupper ; ret
0x00000000000ba54a : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rcx ; ret
0x00000000001895e9 : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x00000000000ba116 : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x00000000001651d4 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000165212 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000005705e : mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000165387 : mov qword ptr [rdi - 0x11], r11 ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000165483 : mov qword ptr [rdi - 0x11], r11 ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001653cf : mov qword ptr [rdi - 0x11], r11 ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000165557 : mov qword ptr [rdi - 0x12], r11 ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000165737 : mov qword ptr [rdi - 0x13], r11 ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000165927 : mov qword ptr [rdi - 0x14], r11 ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000165af8 : mov qword ptr [rdi - 0x15], r11 ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000165cf8 : mov qword ptr [rdi - 0x16], r11 ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000165ef8 : mov qword ptr [rdi - 0x17], r11 ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001651d0 : mov qword ptr [rdi - 0x18], r10 ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016520e : mov qword ptr [rdi - 0x18], r10 ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000016555b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016ad77 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016573b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016acf7 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016592b : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016ac77 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000165afc : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000016abe8 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000165cfc : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000016ab58 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000165efc : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000016aac8 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000b6460 : mov qword ptr [rdi - 1], rdx ; ret
0x0000000000057057 : mov qword ptr [rdi - 8], r8 ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000056fe9 : mov qword ptr [rdi - 8], r9 ; ret
0x00000000001651d8 : mov qword ptr [rdi - 8], rcx ; ret
0x0000000000165216 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000016538b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000165487 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001653d3 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016adf7 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000061b73 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000061a9f : mov qword ptr [rdi], r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001493e3 : mov qword ptr [rdi], r8 ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000056fe3 : mov qword ptr [rdi], r8 ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x00000000000570ed : mov qword ptr [rdi], r8 ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000056fb8 : mov qword ptr [rdi], r9 ; ret
0x0000000000071ec0 : mov qword ptr [rdi], rax ; jmp 0x6e933
0x000000000005c19a : mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x00000000000b6ac6 : mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x00000000000b7906 : mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; lea rax, [rdi + 9] ; ret
0x00000000000b6186 : mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000b9536 : mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000b6af6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x00000000000b7946 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xb] ; ret
0x00000000000b54d6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000b9576 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000b6b16 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x00000000000b7966 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xc] ; ret
0x00000000000b54e6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000b9596 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000b6b37 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xc] ; ret
0x00000000000b7987 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xd] ; ret
0x00000000000b54f7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000b95b7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000b6b57 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xd] ; ret
0x00000000000b79a7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xe] ; ret
0x00000000000b5507 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000b95d7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000b6b77 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xe] ; ret
0x00000000000b79c7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xf] ; ret
0x00000000000b5517 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000000b95f7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x0000000000187fa8 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + r8 - 8], rdx ; vzeroupper ; ret
0x0000000000186b58 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + rdx - 7], r9 ; vzeroupper ; ret
0x00000000000b7927 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; lea rax, [rdi + 0xa] ; ret
0x00000000000b6ad7 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; lea rax, [rdi + 9] ; ret
0x00000000000b54c7 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000b9557 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000b54b6 : mov qword ptr [rdi], rcx ; ret
0x00000000001895ee : mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x00000000000a6ff5 : mov qword ptr [rdi], rdx ; add rax, rdi ; ret
0x00000000000b6ab3 : mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x00000000000b78f3 : mov qword ptr [rdi], rdx ; lea rax, [rdi + 8] ; ret
0x00000000000a7195 : mov qword ptr [rdi], rdx ; lea rax, [rdi + rax - 1] ; ret
0x00000000000b6480 : mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000b64a0 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000b64b0 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000013dfce : mov qword ptr [rdi], rdx ; mov qword ptr [rax], 0 ; ret
0x00000000000b64c0 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000b64d0 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000188060 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + r8 - 8], rdx ; vzeroupper ; ret
0x00000000000b6490 : mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000042eb5 : mov qword ptr [rdi], rdx ; ret
0x00000000000b9523 : mov qword ptr [rdi], rdx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000585bc : mov qword ptr [rdi], rsi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000009ca90 : mov qword ptr [rdi], rsi ; mov eax, 1 ; ret
0x000000000018d4ad : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x00000000000585ea : mov qword ptr [rdi], rsi ; ret
0x000000000010fb91 : mov qword ptr [rdx + 0x10], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000082296 : mov qword ptr [rdx + 0x130], rcx ; ret
0x000000000008d984 : mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x000000000008561d : mov qword ptr [rdx + 0x20], rax ; mov eax, edi ; mov dword ptr [rcx], edi ; ret
0x0000000000085766 : mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x0000000000084a98 : mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000148007 : mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000008589c : mov qword ptr [rdx + 0x28], rsi ; mov byte ptr [rcx], dil ; ret
0x0000000000147fdd : mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000147fe1 : mov qword ptr [rdx + 0x68], rcx ; ret
0x00000000001785aa : mov qword ptr [rdx + 5], rax ; lea rax, [rdx + 0xc] ; ret
0x000000000017421a : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x00000000001785ca : mov qword ptr [rdx + 6], rax ; lea rax, [rdx + 0xd] ; ret
0x000000000017423a : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x00000000001785ea : mov qword ptr [rdx + 7], rax ; lea rax, [rdx + 0xe] ; ret
0x000000000017425a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x0000000000063b3a : mov qword ptr [rdx + 8], r9 ; add dword ptr [rdx + 4], 1 ; ret
0x000000000017847a : mov qword ptr [rdx + 8], rax ; lea rax, [rdx + 0xf] ; ret
0x000000000017414a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x0000000000115bfc : mov qword ptr [rdx + 8], rax ; test rax, rax ; je 0x115c14 ; mov qword ptr [rax], rdx ; ret
0x0000000000063b8a : mov qword ptr [rdx + 8], rcx ; mov dword ptr [rdx + 4], 1 ; ret
0x000000000009e922 : mov qword ptr [rdx], r12 ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000178423 : mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x000000000011fac3 : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x00000000001741d3 : mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x00000000001741e3 : mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00000000001741f3 : mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000174203 : mov qword ptr [rdx], rax ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000001740f3 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000003553c : mov qword ptr [rdx], rax ; ret
0x000000000009d831 : mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x00000000000a6c11 : mov qword ptr [rdx], rcx ; ret
0x0000000000118804 : mov qword ptr [rdx], rdi ; pop rbx ; pop rbp ; ret
0x00000000000fe75a : mov qword ptr [rdx], rdi ; ret
0x000000000009d4f3 : mov qword ptr [rip + 0x14a1ae], rax ; add rsp, 8 ; ret
0x000000000009d4b1 : mov qword ptr [rip + 0x14a1f0], rax ; ret
0x000000000009353b : mov qword ptr [rip + 0x150d4e], rax ; ret
0x000000000009350e : mov qword ptr [rip + 0x150d73], rax ; ret
0x00000000000934ee : mov qword ptr [rip + 0x150d8b], rax ; ret
0x00000000000932b4 : mov qword ptr [rip + 0x15102d], rax ; ret
0x00000000000932a4 : mov qword ptr [rip + 0x151035], rax ; ret
0x0000000000093292 : mov qword ptr [rip + 0x151037], rdx ; ret
0x0000000000093254 : mov qword ptr [rip + 0x15103d], rax ; ret
0x0000000000093244 : mov qword ptr [rip + 0x151055], rax ; ret
0x0000000000092a4b : mov qword ptr [rip + 0x154b12], 0 ; ret
0x000000000002641b : mov qword ptr [rip + 0x1c3d26], rax ; ret
0x000000000002539d : mov qword ptr [rip + 0x1c4c0c], rdx ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000196589 : mov qword ptr [rip + 0x5048c], 0 ; ret
0x00000000001967a4 : mov qword ptr [rip + 0x510e1], 0 ; ret
0x0000000000196961 : mov qword ptr [rip + 0x522fc], 0 ; ret
0x0000000000196a93 : mov qword ptr [rip + 0x52d82], 0 ; pop rbx ; ret
0x000000000015e953 : mov qword ptr [rip + 0x88c96], rsi ; ret
0x000000000015afd5 : mov qword ptr [rip + 0x8a574], rdx ; add rsp, 8 ; ret
0x00000000001376de : mov qword ptr [rip + 0xb2f3b], rax ; add rsp, 8 ; ret
0x000000000012c917 : mov qword ptr [rip + 0xbc352], rax ; pop rbp ; ret
0x0000000000120547 : mov qword ptr [rip + 0xc3e0e], 0 ; ret
0x000000000012051e : mov qword ptr [rip + 0xc3e37], 0 ; ret
0x00000000001204ed : mov qword ptr [rip + 0xc3e68], 2 ; ret
0x00000000001204c7 : mov qword ptr [rip + 0xc3e8e], 0 ; ret
0x00000000001203b0 : mov qword ptr [rip + 0xc3fa9], rbx ; pop rbx ; ret
0x000000000012039a : mov qword ptr [rip + 0xc3fbf], rbx ; pop rbx ; ret
0x0000000000116549 : mov qword ptr [rip + 0xd19e0], rax ; add rsp, 8 ; ret
0x00000000001164d7 : mov qword ptr [rip + 0xd1a52], rdx ; add rsp, 8 ; ret
0x00000000001164a8 : mov qword ptr [rip + 0xd1a81], rdx ; ret
0x0000000000114eee : mov qword ptr [rip + 0xd566b], rax ; add rsp, 8 ; ret
0x00000000000ff527 : mov qword ptr [rsi + 0x10], r8 ; ret
0x0000000000048533 : mov qword ptr [rsi + 0x10], r9 ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x000000000014704a : mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000048a34 : mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x0000000000048537 : mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x000000000008a61e : mov qword ptr [rsi + 0x28], rcx ; mov byte ptr [rax], dil ; mov eax, r10d ; ret
0x00000000001122aa : mov qword ptr [rsi + 0x48], rax ; ret
0x00000000001122a2 : mov qword ptr [rsi + 0x50], rcx ; xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x00000000001470e6 : mov qword ptr [rsi + 8], 0 ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000ff542 : mov qword ptr [rsi + 8], 0 ; ret
0x0000000000147042 : mov qword ptr [rsi + 8], 1 ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000147012 : mov qword ptr [rsi + 8], rax ; ret
0x00000000000ff523 : mov qword ptr [rsi + 8], rcx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x00000000000562b3 : mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000155c5e : mov qword ptr [rsi], rax ; mov eax, 1 ; mov qword ptr [rdi + 0x18], rdx ; ret
0x000000000008c77a : mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000000933e9 : mov qword ptr [rsi], rdi ; ret
0x000000000013a9de : mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x0000000000095c2c : mov qword ptr [rsp + 0x10], r10 ; call 0x1126f7
0x0000000000108e6a : mov qword ptr [rsp + 0x10], r9 ; call 0x25147
0x0000000000108e69 : mov qword ptr [rsp + 0x10], r9 ; call 0x25148
0x000000000012ef54 : mov qword ptr [rsp + 0x10], rax ; call 0x8b1c7
0x000000000008870f : mov qword ptr [rsp + 0x10], rcx ; mov rdi, r13 ; call rax
0x0000000000146696 : mov qword ptr [rsp + 0x18], r10 ; lea r9, [rsp + 0x40] ; call qword ptr [rax]
0x000000000009661f : mov qword ptr [rsp + 0x18], rax ; call rdx
0x00000000000965ea : mov qword ptr [rsp + 0x18], rax ; mov qword ptr [rsp + 8], r11 ; call rcx
0x000000000014f47d : mov qword ptr [rsp + 0x1c8], rcx ; xor ecx, ecx ; call 0x13b6dc
0x0000000000114943 : mov qword ptr [rsp + 0x20], rax ; mov eax, 0x65 ; syscall
0x0000000000112ada : mov qword ptr [rsp + 0x28], rax ; xor eax, eax ; mov rdx, rsp ; mov eax, ecx ; syscall
0x000000000011da9a : mov qword ptr [rsp + 0x30], r8 ; mov qword ptr [rsp + 0x38], r9 ; syscall
0x00000000000d8764 : mov qword ptr [rsp + 0x30], rcx ; mov rbp, r15 ; call 0x2522a
0x000000000011da9f : mov qword ptr [rsp + 0x38], r9 ; syscall
0x00000000000417c9 : mov qword ptr [rsp + 0x40], rdx ; call 0x3da37
0x00000000000417c8 : mov qword ptr [rsp + 0x40], rdx ; call 0x3da38
0x00000000000417c4 : mov qword ptr [rsp + 0x48], rax ; mov qword ptr [rsp + 0x40], rdx ; call 0x3da3c
0x00000000001586c8 : mov qword ptr [rsp + 0x48], rax ; xor eax, eax ; call 0x25139
0x00000000000ced0e : mov qword ptr [rsp + 0x50], r12 ; mov rsi, r13 ; mov rdi, rbp ; call rbx
0x00000000000cec7a : mov qword ptr [rsp + 0x50], r15 ; call rbx
0x00000000000cec73 : mov qword ptr [rsp + 0x58], rax ; xor eax, eax ; mov qword ptr [rsp + 0x50], r15 ; call rbx
0x0000000000096290 : mov qword ptr [rsp + 8], r11 ; call qword ptr [rax]
0x00000000000965ef : mov qword ptr [rsp + 8], r11 ; call rcx
0x0000000000102f4c : mov qword ptr [rsp + 8], r12 ; jmp 0x102937
0x000000000009752a : mov qword ptr [rsp + 8], r8 ; call 0x93767
0x00000000001196ad : mov qword ptr [rsp + 8], rax ; call r12
0x000000000003d3b6 : mov qword ptr [rsp + 8], rax ; mov qword ptr [rsp], rdx ; call 0x39ecb
0x0000000000118919 : mov qword ptr [rsp + 8], rbx ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000001434f3 : mov qword ptr [rsp + 8], rcx ; call r12
0x000000000013b742 : mov qword ptr [rsp + 8], rdx ; jmp 0x13b701
0x0000000000096522 : mov qword ptr [rsp + 8], rdx ; xor edi, edi ; call qword ptr [rax]
0x0000000000058752 : mov qword ptr [rsp - 0x18], rax ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000435b4 : mov qword ptr [rsp - 0x30], rdx ; movdqa xmm0, xmmword ptr [rsp - 0x38] ; ret
0x0000000000042e2a : mov qword ptr [rsp - 8], rdx ; movq xmm0, qword ptr [rsp - 8] ; ret
0x0000000000042f1d : mov qword ptr [rsp - 8], rdx ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000013ba36 : mov qword ptr [rsp], 0 ; call rax
0x0000000000108882 : mov qword ptr [rsp], r10 ; call 0x2531e
0x000000000008e149 : mov qword ptr [rsp], r8 ; mov rdi, rbx ; call rax
0x000000000013b73e : mov qword ptr [rsp], rax ; mov qword ptr [rsp + 8], rdx ; jmp 0x13b705
0x000000000003d3bb : mov qword ptr [rsp], rdx ; call 0x39ec6
0x0000000000055aa9 : mov qword ptr [rsp], rdx ; lea r10, [rip + 0x159f58] ; jmp 0x55a85
0x0000000000094be0 : mov qword ptr fs:[r8], rdx ; mov rax, rdx ; add rsp, 8 ; ret
0x000000000015187e : mov qword ptr fs:[rax], rdx ; ret
0x0000000000047bd4 : mov qword ptr fs:[rbp], rdx ; mov rdi, qword ptr [rbx + 8] ; call rax
0x00000000001519cc : mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000003553b : mov qword ptr fs:[rdx], rax ; ret
0x00000000000ba115 : mov qword ptr ss:[rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x0000000000078939 : mov r10, qword ptr [rbp - 0x518] ; jmp rax
0x0000000000108435 : mov r10, qword ptr [rsp + 0x30] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000011db05 : mov r10, qword ptr [rsp + 8] ; mov eax, 0x38 ; syscall
0x00000000001172dc : mov r10, r8 ; mov r8, r9 ; mov r9, qword ptr [rsp + 8] ; syscall
0x00000000000efae1 : mov r10, r9 ; jmp 0xefaa8
0x000000000013dfa0 : mov r10, rax ; mov byte ptr [r10], 0 ; ret
0x00000000000c0271 : mov r10, rbp ; test eax, eax ; setne dl ; jmp 0xc028e
0x000000000010e1e0 : mov r10, rcx ; mov eax, 0x104 ; syscall
0x0000000000063a40 : mov r10, rcx ; mov eax, 0x108 ; syscall
0x000000000010e9d0 : mov r10, rcx ; mov eax, 0x109 ; syscall
0x000000000010ea90 : mov r10, rcx ; mov eax, 0x10b ; syscall
0x000000000011e840 : mov r10, rcx ; mov eax, 0x11e ; syscall
0x000000000011e300 : mov r10, rcx ; mov eax, 0x12d ; syscall
0x000000000011dd90 : mov r10, rcx ; mov eax, 0x12e ; syscall
0x000000000011e8d0 : mov r10, rcx ; mov eax, 0x12f ; syscall
0x000000000011e930 : mov r10, rcx ; mov eax, 0x136 ; syscall
0x000000000011e960 : mov r10, rcx ; mov eax, 0x137 ; syscall
0x00000000001120cc : mov r10, rcx ; mov eax, 0x146 ; syscall
0x000000000011e660 : mov r10, rcx ; mov eax, 0x19 ; syscall
0x0000000000111d50 : mov r10, rcx ; mov eax, 0x28 ; syscall
0x000000000011f140 : mov r10, rcx ; mov eax, 0x35 ; syscall
0x000000000011f0b0 : mov r10, rcx ; mov eax, 0x36 ; syscall
0x000000000011ec10 : mov r10, rcx ; mov eax, 0x37 ; syscall
0x00000000000e1430 : mov r10, rcx ; mov eax, 0x3d ; syscall
0x000000000011e6f0 : mov r10, rcx ; mov eax, 0x9d ; syscall
0x000000000011e630 : mov r10, rcx ; mov eax, 0xa5 ; syscall
0x000000000011e510 : mov r10, rcx ; mov eax, 0xaf ; syscall
0x000000000011e720 : mov r10, rcx ; mov eax, 0xb2 ; syscall
0x000000000011e750 : mov r10, rcx ; mov eax, 0xb3 ; syscall
0x000000000015a8f0 : mov r10, rcx ; mov eax, 0xb5 ; syscall
0x000000000015a940 : mov r10, rcx ; mov eax, 0xb6 ; syscall
0x000000000011b9d0 : mov r10, rcx ; mov eax, 0xbc ; syscall
0x000000000011b970 : mov r10, rcx ; mov eax, 0xbd ; syscall
0x000000000011b850 : mov r10, rcx ; mov eax, 0xbe ; syscall
0x000000000011b880 : mov r10, rcx ; mov eax, 0xbf ; syscall
0x000000000011b8e0 : mov r10, rcx ; mov eax, 0xc0 ; syscall
0x000000000011b7c0 : mov r10, rcx ; mov eax, 0xc1 ; syscall
0x00000000001176c0 : mov r10, rcx ; mov eax, 0xd8 ; syscall
0x000000000011f9c0 : mov r10, rcx ; mov eax, 0xdc ; syscall
0x000000000011e4b0 : mov r10, rcx ; mov eax, 0xe9 ; syscall
0x0000000000063a75 : mov r10, rcx ; mov ecx, 0x13c ; mov eax, ecx ; syscall
0x0000000000113711 : mov r10, rcx ; xor r8d, r8d ; mov eax, 0x147 ; syscall
0x0000000000113871 : mov r10, rcx ; xor r8d, r8d ; mov eax, 0x148 ; syscall
0x0000000000101934 : mov r10, rdx ; cmovbe rsi, r9 ; mov eax, ecx ; syscall
0x0000000000078aea : mov r10, rdx ; jmp r11
0x000000000007719b : mov r10, rdx ; xor esi, esi ; jmp rax
0x000000000016af36 : mov r10d, 0x46f00ff2 ; retf 0xff3
0x0000000000165d31 : mov r10d, 0x4f7f0ff3 ; retf 0x894c
0x0000000000044170 : mov r10d, 8 ; mov eax, 0xe ; syscall
0x0000000000044026 : mov r10d, 8 ; mov eax, ecx ; syscall
0x0000000000044eae : mov r10d, 8 ; mov rdi, qword ptr [rsp] ; mov eax, ecx ; syscall
0x00000000000cbf42 : mov r10d, dword ptr [rsp + 0x20] ; jmp 0xca904
0x0000000000111870 : mov r10d, ecx ; mov eax, 0xdd ; syscall
0x000000000010c95c : mov r10d, r8d ; mov rdx, rcx ; mov eax, 0x106 ; syscall
0x00000000000f8a52 : mov r11, rdi ; add rax, rsi ; jmp rax
0x0000000000127bf4 : mov r11b, 0x66 ; nop dword ptr [rax + rax] ; ret
0x000000000016afb6 : mov r11d, 0x46f00ff2 ; retf
0x0000000000165b31 : mov r11d, 0x4f7f0ff3 ; retf
0x000000000006cd26 : mov r11d, dword ptr [rbp - 0x5a8] ; add rax, rsi ; jmp rax
0x000000000002b748 : mov r11d, eax ; jmp 0x2b636
0x00000000000d6ab0 : mov r11d, eax ; jmp 0xd6a84
0x0000000000105730 : mov r12, r14 ; cmp r14, rbx ; ja 0x1056d1 ; jmp 0x10570e
0x0000000000066a41 : mov r12, rax ; jmp 0x669e7
0x000000000006c9f6 : mov r12, rcx ; jmp 0x6c9c9
0x000000000006c9f5 : mov r12, rcx ; jmp 0x6c9ca
0x00000000001129b0 : mov r12d, dword ptr [r8] ; syscall
0x00000000001129af : mov r12d, dword ptr fs:[r8] ; syscall
0x00000000001155d6 : mov r13, r8 ; mov rdx, r8 ; jmp 0x11560e
0x00000000000266a0 : mov r13, rax ; call 0xba579
0x0000000000026568 : mov r13, rax ; call 0xbaa99
0x0000000000045495 : mov r13, rax ; mov rdi, r12 ; call rbx
0x000000000005adfa : mov r13, rdi ; lea rdi, [rdi + rax*8] ; call 0x57079
0x0000000000111406 : mov r13d, dword ptr [r14] ; call 0x10d665
0x0000000000111405 : mov r13d, dword ptr fs:[r14] ; call 0x10d666
0x0000000000073ea5 : mov r13d, eax ; jmp 0x73da9
0x0000000000127821 : mov r14, qword ptr [r15 + 0x38] ; jmp 0x1277ef
0x00000000000bd8ef : mov r14, rbp ; setne dl ; jmp 0xbd90c
0x00000000000c2ad0 : mov r14, rbp ; setne dl ; jmp 0xc2aec
0x00000000000ca530 : mov r14, rbp ; setne dl ; jmp 0xca54c
0x000000000010d935 : mov r14, rdi ; mov rdi, r14 ; mov eax, 0x4f ; syscall
0x0000000000039458 : mov r15, r12 ; jmp 0x3942b
0x00000000001458e0 : mov r15d, 2 ; jmp 0x1458b9
0x00000000001172df : mov r8, r9 ; mov r9, qword ptr [rsp + 8] ; syscall
0x0000000000143236 : mov r8, rbp ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x0000000000072f18 : mov r8, rbx ; jmp 0x6f16e
0x00000000001140ef : mov r8, rbx ; mov eax, 0x10e ; syscall
0x000000000008744c : mov r8, rcx ; lea rdx, [r8 + rdx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000000d6930 : mov r8, rcx ; xor ecx, ecx ; jmp 0xd3377
0x0000000000115c98 : mov r8, rsi ; mov byte ptr [r8 - 1], 0 ; ret
0x0000000000115458 : mov r8b, 0x48 ; mov edx, eax ; jmp 0x11548d
0x000000000010cb8c : mov r8d, 0x10c ; syscall
0x00000000000326e2 : mov r8d, 0x75b7e8 ; add byte ptr [rcx - 0x77], al ; ret 0xf883
0x0000000000066792 : mov r8d, 1 ; jmp 0x66789
0x0000000000112c38 : mov r8d, eax ; mov eax, 0x10 ; syscall
0x000000000011347d : mov r8d, eax ; mov eax, 0x13 ; syscall
0x000000000011e0ed : mov r8d, eax ; mov eax, 0x130 ; syscall
0x0000000000048b1f : mov r8d, eax ; mov eax, 0x13e ; syscall
0x000000000011351d : mov r8d, eax ; mov eax, 0x14 ; syscall
0x00000000001175ff : mov r8d, eax ; mov eax, 0x1a ; syscall
0x000000000011eb4d : mov r8d, eax ; mov eax, 0x2a ; syscall
0x000000000011ea7d : mov r8d, eax ; mov eax, 0x2b ; syscall
0x000000000011ef8d : mov r8d, eax ; mov eax, 0x2e ; syscall
0x000000000011ee2d : mov r8d, eax ; mov eax, 0x2f ; syscall
0x000000000010d04d : mov r8d, eax ; mov eax, 1 ; syscall
0x000000000011171f : mov r8d, eax ; mov eax, 7 ; syscall
0x000000000010d4c9 : mov r8d, eax ; mov edi, dword ptr [rsp + 8] ; mov eax, 0x48 ; syscall
0x000000000010b343 : mov r8d, eax ; mov edi, ebx ; mov eax, 0x11 ; syscall
0x000000000011ded1 : mov r8d, eax ; mov edi, ebx ; mov eax, 0x114 ; syscall
0x00000000001122f3 : mov r8d, eax ; mov edi, ebx ; mov eax, 0x115 ; syscall
0x000000000011df83 : mov r8d, eax ; mov edi, ebx ; mov eax, 0x116 ; syscall
0x0000000000112391 : mov r8d, eax ; mov edi, ebx ; mov eax, 0x11d ; syscall
0x000000000010b3f3 : mov r8d, eax ; mov edi, ebx ; mov eax, 0x12 ; syscall
0x000000000011f483 : mov r8d, eax ; mov edi, ebx ; mov eax, 0x120 ; syscall
0x000000000011f5d3 : mov r8d, eax ; mov edi, ebx ; mov eax, 0x133 ; syscall
0x00000000000e13ae : mov r8d, eax ; mov edi, ebx ; mov eax, 0x3d ; syscall
0x000000000011f753 : mov r8d, eax ; mov edi, ebx ; mov eax, 0x45 ; syscall
0x000000000011de33 : mov r8d, eax ; mov edi, ebx ; mov eax, 0xe8 ; syscall
0x000000000010cfad : mov r8d, eax ; xor eax, eax ; syscall
0x000000000007ebc2 : mov r9, qword ptr [rbp - 0x500] ; jmp rax
0x00000000001172e2 : mov r9, qword ptr [rsp + 8] ; syscall
0x0000000000027a42 : mov r9, r14 ; mov rsi, qword ptr [rsp + 0x10] ; xor r8d, r8d ; call rbx
0x00000000000bbfaf : mov r9, r14 ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x00000000000bac52 : mov r9, rax ; mov eax, dword ptr [rcx + rax*4] ; sub eax, dword ptr [rcx + r8*4] ; je 0xbac4c ; ret
0x000000000007a0a0 : mov r9, rax ; pop r12 ; pop r13 ; mov rax, r9 ; pop r14 ; ret
0x000000000007edca : mov r9, rsi ; jmp rax
0x000000000007e162 : mov r9, rsi ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdx ; jmp rax
0x000000000011dc20 : mov r9d, 8 ; mov eax, 0x119 ; syscall
0x00000000000ce254 : mov r9d, dword ptr [rdi + rdx*4] ; test r9d, r9d ; jne 0xce21c ; mov rax, rdx ; ret
0x000000000015e1f4 : mov r9d, dword ptr [rdx] ; mov rdx, r14 ; add r9, qword ptr [rsp + 8] ; call rax
0x00000000000e14aa : mov r9d, eax ; mov esi, ebp ; mov edi, ebx ; mov eax, 0xf7 ; syscall
0x000000000013b7e8 : mov rax, -1 ; mov rdx, rax ; ret
0x0000000000043dfe : mov rax, -1 ; ret
0x0000000000043f60 : mov rax, 0xf ; syscall
0x00000000000ce4b0 : mov rax, 1 ; ret
0x00000000000ce4c0 : mov rax, 2 ; ret
0x00000000000ce4d0 : mov rax, 3 ; ret
0x00000000000ce4e0 : mov rax, 4 ; ret
0x00000000000ce4f0 : mov rax, 5 ; ret
0x00000000000ce500 : mov rax, 6 ; ret
0x00000000000ce510 : mov rax, 7 ; ret
0x000000000012c381 : mov rax, qword ptr [0x10] ; ret
0x00000000001551f5 : mov rax, qword ptr [r12 + 8] ; mov rsi, rsp ; mov rdi, r12 ; call qword ptr [rax]
0x0000000000026bf7 : mov rax, qword ptr [r13 + 0x18] ; test rax, rax ; je 0x26c11 ; mov rdi, rbp ; call rax
0x000000000015250b : mov rax, qword ptr [r15 + 8] ; mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x0000000000154397 : mov rax, qword ptr [rax + 0x10] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000012c2de : mov rax, qword ptr [rax + 0x10] ; test rax, rax ; je 0x12c2f2 ; call rax
0x0000000000088dc9 : mov rax, qword ptr [rax + 0x130] ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000012081f : mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00000000001543c7 : mov rax, qword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000012091f : mov rax, qword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x0000000000113ca7 : mov rax, qword ptr [rax + 0x18] ; test rax, rax ; je 0x113cba ; ret
0x000000000011ba60 : mov rax, qword ptr [rax + 0x1a0] ; ret
0x000000000015d97e : mov rax, qword ptr [rax + 0x1b0] ; jmp rax
0x0000000000088dd0 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000000fda47 : mov rax, qword ptr [rax + 0x20] ; mov qword ptr [rcx + 0x20], rax ; jmp 0xfda25
0x000000000012b6f8 : mov rax, qword ptr [rax + 0x30] ; ret
0x000000000014509b : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x1450b5 ; mov rdi, rbx ; call rax
0x00000000001459f2 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x145a0c ; mov rdi, rbp ; call rax
0x0000000000146a06 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x146a20 ; mov rdi, rbx ; call rax
0x0000000000146d71 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x146d8b ; mov rdi, rbx ; call rax
0x000000000014c67c : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x14c696 ; mov rdi, r12 ; call rax
0x000000000014db1a : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x14db34 ; mov rdi, rbp ; call rax
0x000000000014dbf9 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x14dc13 ; mov rdi, r12 ; call rax
0x000000000014f082 : mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x14f09c ; mov rdi, r12 ; call rax
0x000000000014e8fc : mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000352b1 : mov rax, qword ptr [rax + 0x48] ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x00000000000898d3 : mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000014f23c : mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000035291 : mov rax, qword ptr [rax + 0x58] ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000011ba58 : mov rax, qword ptr [rax + 0x58] ; ret
0x0000000000091917 : mov rax, qword ptr [rax + 0x68] ; test rax, rax ; jne 0x91919 ; ret
0x000000000014bc1f : mov rax, qword ptr [rax + 0xa0] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000011ba39 : mov rax, qword ptr [rax + 8] ; ret
0x000000000012c31e : mov rax, qword ptr [rax + 8] ; test rax, rax ; je 0x12c332 ; call rax
0x000000000009c4ea : mov rax, qword ptr [rax + 8] ; test rax, rax ; jne 0x9c4eb ; xor eax, eax ; ret
0x0000000000031ec1 : mov rax, qword ptr [rax + r12*8] ; test rax, rax ; je 0x31ed5 ; call rax
0x00000000000352b4 : mov rax, qword ptr [rax + rdi*4 + 0x200] ; ret
0x0000000000034dae : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x00000000000339eb : mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x0000000000034dab : mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x00000000000339e8 : mov rax, qword ptr [rax] ; mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000003526b : mov rax, qword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000047cf2 : mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000140128 : mov rax, qword ptr [rax] ; ret
0x000000000011aa97 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x11ab3c ; call rax
0x000000000011ac22 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x11ad4c ; call rax
0x000000000012c21e : mov rax, qword ptr [rax] ; test rax, rax ; je 0x12c230 ; call rax
0x000000000009411b : mov rax, qword ptr [rax] ; test rax, rax ; je 0x94130 ; call rax
0x000000000002841a : mov rax, qword ptr [rbp - 0x68] ; call rax
0x0000000000090bfc : mov rax, qword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000008c234 : mov rax, qword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x0000000000091378 : mov rax, qword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000015467f : mov rax, qword ptr [rbx + 8] ; lea rsi, [rsp + 0x10] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000147f14 : mov rax, qword ptr [rbx + 8] ; mov rsi, r12 ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000151949 : mov rax, qword ptr [rbx] ; test rax, rax ; je 0x151961 ; pop rbx ; ret
0x00000000001785a6 : mov rax, qword ptr [rcx + 5] ; mov qword ptr [rdx + 5], rax ; lea rax, [rdx + 0xc] ; ret
0x0000000000174216 : mov rax, qword ptr [rcx + 5] ; mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x00000000001785c6 : mov rax, qword ptr [rcx + 6] ; mov qword ptr [rdx + 6], rax ; lea rax, [rdx + 0xd] ; ret
0x0000000000174236 : mov rax, qword ptr [rcx + 6] ; mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x00000000001785e6 : mov rax, qword ptr [rcx + 7] ; mov qword ptr [rdx + 7], rax ; lea rax, [rdx + 0xe] ; ret
0x0000000000174256 : mov rax, qword ptr [rcx + 7] ; mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x0000000000178476 : mov rax, qword ptr [rcx + 8] ; mov qword ptr [rdx + 8], rax ; lea rax, [rdx + 0xf] ; ret
0x0000000000174146 : mov rax, qword ptr [rcx + 8] ; mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x0000000000178420 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x00000000001740f0 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000155f3a : mov rax, qword ptr [rdi + 0x18] ; cmp dword ptr [rdi + 0x20], esi ; jbe 0x155f5c ; add dword ptr [rdi + 0x28], esi ; ret
0x0000000000155b30 : mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000330e1 : mov rax, qword ptr [rdi + 0x20] ; mov rbx, rdi ; test rax, rax ; je 0x330fb ; call rax
0x00000000000dc9b0 : mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000019621c : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x196235 ; call rax
0x00000000000937ce : mov rax, qword ptr [rdi + 0x28] ; mov qword ptr [rax + 0x20], rdx ; add rsp, 0x18 ; ret
0x000000000008c280 : mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000008c170 : mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x00000000000898d0 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000092970 : mov rax, qword ptr [rdi + 0x68] ; ret
0x0000000000092a86 : mov rax, qword ptr [rdi + 8] ; cmp rax, rdx ; jae 0x92abc ; movzx eax, byte ptr [rax] ; ret
0x0000000000154575 : mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x0000000000154e90 : mov rax, qword ptr [rdi + 8] ; lea rsi, [rsp + 0x10] ; call qword ptr [rax]
0x0000000000154670 : mov rax, qword ptr [rdi + 8] ; lea rsi, [rsp + 8] ; call qword ptr [rax]
0x0000000000147e78 : mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x0000000000093520 : mov rax, qword ptr [rdi] ; cmp rax, 0x2000000 ; jbe 0x9353b ; ret
0x000000000011fac0 : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x000000000009267d : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000012be9b : mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x0000000000093570 : mov rax, qword ptr [rdi] ; nop ; mov dword ptr [rip + 0x154072], eax ; ret
0x00000000000932b0 : mov rax, qword ptr [rdi] ; nop ; mov qword ptr [rip + 0x15102d], rax ; ret
0x00000000000932a0 : mov rax, qword ptr [rdi] ; nop ; mov qword ptr [rip + 0x151035], rax ; ret
0x0000000000093250 : mov rax, qword ptr [rdi] ; nop ; mov qword ptr [rip + 0x15103d], rax ; ret
0x0000000000093240 : mov rax, qword ptr [rdi] ; nop ; mov qword ptr [rip + 0x151055], rax ; ret
0x0000000000101b60 : mov rax, qword ptr [rdi] ; or qword ptr [rax + 8], 0x2000 ; ret
0x000000000008c271 : mov rax, qword ptr [rdx + 0x20] ; sub rax, qword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x000000000008c161 : mov rax, qword ptr [rdx + 0x38] ; sub rax, qword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x0000000000035252 : mov rax, qword ptr [rdx + rax*4 + 0x200] ; ret
0x00000000000339bc : mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000000fe757 : mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x0000000000092670 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x92670 ; ret
0x00000000000d1d46 : mov rax, qword ptr [rip + 0x115bf3] ; jmp 0xd1d6a
0x000000000009c471 : mov rax, qword ptr [rip + 0x147ad8] ; call qword ptr [rax]
0x000000000009c290 : mov rax, qword ptr [rip + 0x147cb9] ; call qword ptr [rax]
0x000000000009c1b0 : mov rax, qword ptr [rip + 0x147d99] ; call qword ptr [rax]
0x0000000000098a34 : mov rax, qword ptr [rip + 0x14b4a5] ; mov qword ptr [rax], rdi ; ret
0x000000000009389a : mov rax, qword ptr [rip + 0x15063f] ; mov qword ptr [rax], rdx ; ret
0x0000000000092950 : mov rax, qword ptr [rip + 0x152d09] ; ret
0x0000000000034d60 : mov rax, qword ptr [rip + 0x1af081] ; mov qword ptr [rax], rdx ; ret
0x0000000000030cf0 : mov rax, qword ptr [rip + 0x1b5a11] ; ret
0x0000000000028800 : mov rax, qword ptr [rip + 0x1c17b1] ; ret
0x00000000000287f0 : mov rax, qword ptr [rip + 0x1c17d1] ; ret
0x000000000015b183 : mov rax, qword ptr [rip + 0x8a3c6] ; call qword ptr [rax]
0x000000000015abb6 : mov rax, qword ptr [rip + 0x8a993] ; call qword ptr [rax]
0x000000000015db50 : mov rax, qword ptr [rip + 0x8c431] ; call qword ptr [rax]
0x0000000000140120 : mov rax, qword ptr [rip + 0xa3ec9] ; mov rax, qword ptr fs:[rax] ; ret
0x0000000000141e00 : mov rax, qword ptr [rip + 0xa7a19] ; test rax, rax ; jne 0x141e1c ; ret
0x000000000014097f : mov rax, qword ptr [rip + 0xa8e9a] ; test rax, rax ; je 0x14099c ; ret
0x00000000001210b0 : mov rax, qword ptr [rip + 0xc2da9] ; mov eax, dword ptr [rax + 0x38] ; ret
0x0000000000117d74 : mov rax, qword ptr [rip + 0xd27f5] ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000035450 : mov rax, qword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000035460 : mov rax, qword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000339d0 : mov rax, qword ptr [rsi + rax*8 + 0x80] ; ret
0x00000000000567eb : mov rax, qword ptr [rsi + rbx*8] ; lea r9, [rdx] ; jmp 0x5684b
0x00000000000584ab : mov rax, qword ptr [rsi + rbx*8] ; lea r9, [rdx] ; jmp 0x5850b
0x000000000015d550 : mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000000a70c0 : mov rax, qword ptr [rsp + 0x10] ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x0000000000026b64 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000002c3b7 : mov rax, qword ptr [rsp + 0x20] ; call rax
0x00000000001351ac : mov rax, qword ptr [rsp + 0x20] ; mov rdx, qword ptr [rax] ; xor eax, eax ; call 0x814ac
0x000000000002d470 : mov rax, qword ptr [rsp + 0x28] ; call rax
0x00000000000cf240 : mov rax, qword ptr [rsp + 0x30] ; call rax
0x00000000000359c1 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000462db : mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000046398 : mov rax, qword ptr [rsp + 8] ; lea r13, [r14 + rbp] ; call rax
0x00000000001376aa : mov rax, qword ptr [rsp + 8] ; mov rdi, rbx ; call rax
0x0000000000121112 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x0000000000121173 : mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x000000000014d243 : mov rax, qword ptr [rsp] ; jne 0x14d25c ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000147e85 : mov rax, qword ptr [rsp] ; mov dword ptr [rbx], eax ; mov eax, 1 ; jmp 0x147e68
0x00000000001544a5 : mov rax, qword ptr [rsp] ; mov dword ptr [rbx], eax ; mov eax, 1 ; jmp 0x154488
0x0000000000154525 : mov rax, qword ptr [rsp] ; mov dword ptr [rbx], eax ; mov eax, 1 ; jmp 0x154508
0x0000000000154cf5 : mov rax, qword ptr [rsp] ; mov dword ptr [rbx], eax ; mov eax, 1 ; jmp 0x154cd8
0x000000000012c380 : mov rax, qword ptr fs:[0x10] ; ret
0x0000000000034daa : mov rax, qword ptr fs:[rax] ; mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000003526a : mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000140127 : mov rax, qword ptr fs:[rax] ; ret
0x0000000000151948 : mov rax, qword ptr fs:[rbx] ; test rax, rax ; je 0x151962 ; pop rbx ; ret
0x00000000000792c5 : mov rax, r10 ; jmp 0x79298
0x000000000009d834 : mov rax, r10 ; pop rbx ; ret
0x000000000009e925 : mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009feb5 : mov rax, r12 ; pop r12 ; ret
0x000000000008055f : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000080d2a : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008c948 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000034a05 : mov rax, r13 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000349df : mov rax, r13 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000118a5d : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000dd514 : mov rax, r14 ; call rax
0x0000000000105e61 : mov rax, r14 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000097dce : mov rax, r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000094d5f : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009cb77 : mov rax, r8 ; cmp qword ptr [rdi + 8], rsi ; jb 0x9cb94 ; mov qword ptr [rdi], rsi ; ret
0x0000000000099ab1 : mov rax, r8 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000018ad43 : mov rax, r8 ; shr rax, 2 ; vzeroupper ; ret
0x00000000001863d0 : mov rax, r8 ; vzeroupper ; ret
0x000000000007a0a7 : mov rax, r9 ; pop r14 ; ret
0x0000000000079ff6 : mov rax, r9 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008e95d : mov rax, rbp ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000063263 : mov rax, rbp ; jne 0x632a0 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001186a3 : mov rax, rbp ; pop rbp ; pop r12 ; jmp rax
0x0000000000082359 : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000082477 : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000035aa6 : mov rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000119086 : mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000008245d : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000035a88 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009d61d : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000008cd5a : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001236d8 : mov rax, rbx ; jmp 0x1234aa
0x0000000000123b38 : mov rax, rbx ; jmp 0x123902
0x00000000000a0dd5 : mov rax, rbx ; pop rbx ; cmovne rax, rdi ; ret
0x0000000000082992 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008d5e7 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000031649 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000039524 : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000048017 : mov rax, rbx ; pop rbx ; ret
0x0000000000117e39 : mov rax, rbx ; pop rdx ; pop rbx ; ret
0x000000000009ae69 : mov rax, rcx ; pop rbx ; pop rbp ; ret
0x00000000000420fb : mov rax, rcx ; ret
0x0000000000047c70 : mov rax, rdi ; cqo ; idiv rsi ; ret
0x0000000000084f02 : mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000084f1d : mov rax, rdi ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000094fa2 : mov rax, rdi ; pop rbp ; pop r12 ; ret
0x00000000000a7564 : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000005c19d : mov rax, rdi ; ret
0x000000000012f189 : mov rax, rdi ; sar rax, 6 ; ret
0x00000000001882a0 : mov rax, rdi ; vzeroupper ; ret
0x0000000000094be4 : mov rax, rdx ; add rsp, 8 ; ret
0x00000000000a009b : mov rax, rdx ; cmovne rax, rdi ; ret
0x0000000000043daf : mov rax, rdx ; jne 0x43dc8 ; add rsp, 0x148 ; ret
0x0000000000044a52 : mov rax, rdx ; jne 0x44a6b ; add rsp, 0x148 ; ret
0x00000000000ceb35 : mov rax, rdx ; jne 0xceb48 ; add rsp, 0x28 ; ret
0x000000000013b7da : mov rax, rdx ; movsxd rdx, esi ; ret
0x0000000000098fb4 : mov rax, rdx ; pop r12 ; ret
0x0000000000098c17 : mov rax, rdx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000082200 : mov rax, rdx ; pop rbp ; pop r12 ; ret
0x0000000000098bfe : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009434f : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000055231 : mov rax, rdx ; pop rbx ; ret
0x0000000000056925 : mov rax, rdx ; ret
0x00000000000ddbe4 : mov rax, rsi ; add rsp, 8 ; ret
0x000000000015e734 : mov rax, rsi ; jne 0x15e74d ; add rsp, 0x38 ; ret
0x000000000008422a : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008406d : mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000009796c : mov rax, rsi ; pop rbx ; ret
0x000000000005c2aa : mov rax, rsi ; ret
0x00000000000fbff2 : mov rbp, qword ptr [rsp + 0x70] ; jmp 0xfb0f8
0x00000000000d8769 : mov rbp, r15 ; call 0x25225
0x0000000000043c7c : mov rbp, r9 ; nop ; jmp rdx
0x000000000012c8ad : mov rbp, rsp ; call 0x15dabc
0x00000000000e1dd1 : mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000001288a8 : mov rbx, qword ptr [rdi + 0x28] ; call 0x2531e
0x000000000008d560 : mov rbx, r12 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e25c : mov rbx, r13 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000038e65 : mov rbx, r14 ; call 0x25145
0x00000000000a060a : mov rbx, rax ; call 0x9d025
0x000000000008d54e : mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001962a7 : mov rbx, rbp ; test rbp, rbp ; jne 0x19629c ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000052ee6 : mov rbx, rdi ; mov eax, 0x3e ; mov edi, dword ptr [rdi + 0x10] ; syscall
0x000000000011d92c : mov rbx, rdi ; mov rdi, rcx ; sub rsp, 8 ; call rsi
0x00000000000330e5 : mov rbx, rdi ; test rax, rax ; je 0x330f7 ; call rax
0x0000000000118320 : mov rbx, rsi ; je 0x118336 ; pop rbx ; ret
0x0000000000194730 : mov rbx, rsi ; or rbx, r8 ; je 0x1946f5 ; xor r10d, r10d ; jmp 0x194714
0x00000000001456c5 : mov rbx, rsi ; sub rsp, 8 ; call 0x151949
0x0000000000104271 : mov rcx, qword ptr [r14] ; call r12
0x0000000000031fd6 : mov rcx, qword ptr [rax + r14*8] ; test rcx, rcx ; je 0x31fea ; call rcx
0x0000000000031fd5 : mov rcx, qword ptr [rax + r14*8] ; test rcx, rcx ; je 0x31feb ; call rcx
0x0000000000028368 : mov rcx, qword ptr [rbp - 0x70] ; call rcx
0x0000000000144fb6 : mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000018d4a9 : mov rcx, qword ptr [rcx - 8] ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000011fab0 : mov rcx, qword ptr [rdi + 8] ; xor eax, eax ; cmp byte ptr [rcx], 0 ; je 0x11facb ; ret
0x00000000000b55e4 : mov rcx, qword ptr [rsi + 0x10] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000b55a4 : mov rcx, qword ptr [rsi + 0xe] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000b55c4 : mov rcx, qword ptr [rsi + 0xf] ; movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000018c4a6 : mov rcx, qword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x18c4de ; xor eax, eax ; ret
0x000000000018d2e6 : mov rcx, qword ptr [rsi - 8] ; cmp rcx, rax ; jne 0x18d31e ; xor eax, eax ; ret
0x000000000016abe4 : mov rcx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016ab54 : mov rcx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016aac4 : mov rcx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000b54b0 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000000b6180 : mov rcx, qword ptr [rsi] ; mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000b54d0 : mov rcx, qword ptr [rsi] ; mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000b54e0 : mov rcx, qword ptr [rsi] ; mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000016b564 : mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000016b4f4 : mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000016b484 : mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000016b414 : mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000016b3a4 : mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000016b334 : mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000016b2c4 : mov rcx, qword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014bf4f : mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x000000000014f602 : mov rcx, qword ptr [rsp + 0x30] ; call rcx
0x000000000014f517 : mov rcx, qword ptr [rsp + 8] ; call 0x13b787
0x0000000000146c6f : mov rcx, qword ptr [rsp + 8] ; call rcx
0x000000000018d4a8 : mov rcx, qword ptr ss:[rcx - 8] ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000136a90 : mov rcx, r13 ; call 0x144c0a
0x000000000014364c : mov rcx, r13 ; call r10
0x0000000000143239 : mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000009ae62 : mov rcx, rax ; add rsp, 0x18 ; mov rax, rcx ; pop rbx ; pop rbp ; ret
0x000000000009c710 : mov rcx, rax ; jmp 0x9c6dc
0x0000000000109359 : mov rcx, rax ; mov rdi, qword ptr [rbx] ; call 0x105dc8
0x00000000000a6c28 : mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000010939f : mov rcx, rbp ; mov rsi, qword ptr [rsp] ; mov rdi, qword ptr [rbx] ; call 0x105dcc
0x00000000000468cb : mov rcx, rbx ; mov rdx, r15 ; call 0x4538c
0x00000000001456ef : mov rcx, rbx ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00000000000ba0f1 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000014c804 : mov rcx, rsi ; xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x0000000000194d0b : mov rdi, qword ptr [r13 + 0x10] ; add rdi, rbp ; call r12
0x000000000011919b : mov rdi, qword ptr [r13] ; call r12
0x000000000011925b : mov rdi, qword ptr [r14] ; call r12
0x00000000000bba23 : mov rdi, qword ptr [r14] ; push 0 ; lea r9, [rsp + 0x28] ; call r12
0x00000000000c987d : mov rdi, qword ptr [r14] ; push 0 ; lea r9, [rsp + 0x30] ; call r12
0x00000000000f8861 : mov rdi, qword ptr [r15 + 0x10] ; call 0x2531e
0x00000000000f886a : mov rdi, qword ptr [r15 + 0x18] ; call 0x2531e
0x000000000003dbdd : mov rdi, qword ptr [r15 + 0x18] ; call 0x39ec6
0x00000000000f8873 : mov rdi, qword ptr [r15 + 0x20] ; call 0x2531e
0x00000000000f887c : mov rdi, qword ptr [r15 + 0x28] ; call 0x2531e
0x00000000000f8858 : mov rdi, qword ptr [r15 + 8] ; call 0x2531e
0x00000000000f8850 : mov rdi, qword ptr [r15] ; call 0x2531d
0x00000000001193d5 : mov rdi, qword ptr [r15] ; call r12
0x00000000000472a6 : mov rdi, qword ptr [rax + 0x20] ; call rdx
0x0000000000099107 : mov rdi, qword ptr [rax] ; call 0x81e5a
0x00000000001196aa : mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call r12
0x00000000001040a8 : mov rdi, qword ptr [rbp - 0x190] ; call r15
0x000000000010426a : mov rdi, qword ptr [rbp - 0x190] ; mov rcx, qword ptr [r14] ; call r12
0x000000000015f6b9 : mov rdi, qword ptr [rbp - 0x4e0] ; mov rdx, rax ; jmp 0x15f6df
0x00000000000e55b9 : mov rdi, qword ptr [rbp - 0x4e0] ; mov rdx, rax ; jmp 0xe55df
0x00000000001288cb : mov rdi, qword ptr [rbp - 0x88] ; call 0x25321
0x000000000005e585 : mov rdi, qword ptr [rbp - 0xc0] ; call rax
0x000000000011912f : mov rdi, qword ptr [rbp] ; call r12
0x000000000009c530 : mov rdi, qword ptr [rbx + 0x48] ; call rax
0x000000000009c491 : mov rdi, qword ptr [rbx + 0x48] ; mov rsi, r13 ; call rax
0x0000000000136d2c : mov rdi, qword ptr [rbx + 0x48] ; test rdi, rdi ; jne 0x136d2a ; pop rbx ; ret
0x0000000000047bd9 : mov rdi, qword ptr [rbx + 8] ; call rax
0x000000000010935c : mov rdi, qword ptr [rbx] ; call 0x105dc5
0x00000000001190ec : mov rdi, qword ptr [rbx] ; call r12
0x00000000001504f8 : mov rdi, qword ptr [rbx] ; jmp 0x1504c4
0x0000000000046538 : mov rdi, qword ptr [rbx] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000014ca90 : mov rdi, qword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x14caaa ; ret
0x0000000000152cc0 : mov rdi, qword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x152cda ; ret
0x000000000009c2e8 : mov rdi, qword ptr [rdi + 0x48] ; mov rsi, rbp ; call rax
0x00000000000824f5 : mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x00000000000824b9 : mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x00000000000d8665 : mov rdi, qword ptr [rdi + rax*8 + 0x40] ; call 0x25137
0x00000000000d8664 : mov rdi, qword ptr [rdi + rax*8 + 0x40] ; call 0x25138
0x000000000012a5b3 : mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x0000000000059de0 : mov rdi, qword ptr [rsp + 0x10] ; call 0x568a7
0x00000000000454ab : mov rdi, qword ptr [rsp + 0x18] ; call rbx
0x000000000015e5c3 : mov rdi, qword ptr [rsp + 0x18] ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x00000000000dd6a2 : mov rdi, qword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000110571 : mov rdi, qword ptr [rsp + 0x20] ; or word ptr [rax + 0x64], 1 ; call 0xdc86c
0x0000000000145641 : mov rdi, qword ptr [rsp + 0x28] ; call 0x25323
0x000000000002a25b : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x000000000002aa6c : mov rdi, qword ptr [rsp + 0x30] ; call r15
0x000000000002acda : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x000000000002a06d : mov rdi, qword ptr [rsp + 0x30] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000002af11 : mov rdi, qword ptr [rsp + 0x38] ; call r12
0x000000000002a494 : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000002b52b : mov rdi, qword ptr [rsp + 0x38] ; call r15
0x000000000002bdd1 : mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x000000000002c913 : mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000002efe5 : mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000002c3b2 : mov rdi, qword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000002da21 : mov rdi, qword ptr [rsp + 0x48] ; call r14
0x0000000000108e65 : mov rdi, qword ptr [rsp + 0x48] ; mov qword ptr [rsp + 0x10], r9 ; call 0x2514c
0x000000000002d46b : mov rdi, qword ptr [rsp + 0x48] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000135220 : mov rdi, qword ptr [rsp + 0x60] ; call 0x105c2b
0x00000000000dd3f5 : mov rdi, qword ptr [rsp + 8] ; call r12
0x00000000000913a6 : mov rdi, qword ptr [rsp + 8] ; jmp 0x9137e
0x000000000011181a : mov rdi, qword ptr [rsp + 8] ; mov eax, 0x10f ; syscall
0x0000000000151443 : mov rdi, qword ptr [rsp] ; call rax
0x0000000000044eb4 : mov rdi, qword ptr [rsp] ; mov eax, ecx ; syscall
0x000000000015d97a : mov rdi, qword ptr [rsp] ; mov rax, qword ptr [rax + 0x1b0] ; jmp rax
0x0000000000108e48 : mov rdi, r12 ; call 0x250b5
0x000000000004a3bd : mov rdi, r12 ; call 0x5707a
0x00000000001551fd : mov rdi, r12 ; call qword ptr [rax]
0x000000000009bc43 : mov rdi, r12 ; call rax
0x0000000000045498 : mov rdi, r12 ; call rbx
0x0000000000089a5b : mov rdi, r12 ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000089961 : mov rdi, r12 ; lea r9, [rsp + 0x28] ; call rbx
0x000000000009628d : mov rdi, r12 ; mov qword ptr [rsp + 8], r11 ; call qword ptr [rax]
0x0000000000028365 : mov rdi, r12 ; mov rcx, qword ptr [rbp - 0x70] ; call rcx
0x0000000000129140 : mov rdi, r13 ; call 0x1257e9
0x0000000000108e15 : mov rdi, r13 ; call 0x250b5
0x00000000000e6431 : mov rdi, r13 ; call 0x25321
0x000000000014323c : mov rdi, r13 ; call r12
0x000000000011a373 : mov rdi, r13 ; call r14
0x0000000000088714 : mov rdi, r13 ; call rax
0x00000000000454e6 : mov rdi, r13 ; call rbx
0x0000000000118ac7 : mov rdi, r13 ; mov dword ptr [rbp - 0x50], r15d ; call r14
0x00000000001292ad : mov rdi, r13 ; mov qword ptr [rbp - 0xa8], rcx ; call 0x125d8c
0x0000000000136f00 : mov rdi, r13 ; mov rsi, qword ptr [rsp] ; call r12
0x0000000000129b28 : mov rdi, r14 ; call 0x125d85
0x000000000015ecea : mov rdi, r14 ; call 0x12b795
0x0000000000143d5a : mov rdi, r14 ; call 0x140835
0x00000000001369b1 : mov rdi, r14 ; call 0x142ca5
0x0000000000038f1d : mov rdi, r14 ; call 0x25145
0x000000000010d938 : mov rdi, r14 ; mov eax, 0x4f ; syscall
0x0000000000028417 : mov rdi, r14 ; mov rax, qword ptr [rbp - 0x68] ; call rax
0x0000000000038e62 : mov rdi, r14 ; mov rbx, r14 ; call 0x25148
0x0000000000028f66 : mov rdi, r14 ; mov rsi, r13 ; call 0x25268
0x000000000013eb34 : mov rdi, r15 ; call 0x13b605
0x00000000000d8709 : mov rdi, r15 ; call 0x25195
0x00000000001390e8 : mov rdi, r15 ; call 0x2531d
0x0000000000152512 : mov rdi, r15 ; call qword ptr [rax]
0x0000000000089c63 : mov rdi, r15 ; lea r9, [rbp - 0x40] ; call r12
0x000000000014f5ff : mov rdi, r15 ; mov rcx, qword ptr [rsp + 0x30] ; call rcx
0x000000000009bdb6 : mov rdi, r15 ; mov rdx, rbx ; mov rsi, r12 ; call rax
0x000000000010c8a3 : mov rdi, r8 ; mov eax, 0x85 ; syscall
0x0000000000048baa : mov rdi, r8 ; mov eax, r10d ; sub rsi, r8 ; syscall
0x0000000000047952 : mov rdi, r9 ; call rdx
0x000000000012c8c8 : mov rdi, rax ; call 0x15db8c
0x0000000000146cd1 : mov rdi, rax ; call 0x62f85
0x00000000001505f4 : mov rdi, rax ; lea r9, [rsp + 0x14] ; call qword ptr [r10]
0x0000000000150f18 : mov rdi, rax ; lea r9, [rsp + 0x1c] ; call qword ptr [r10]
0x000000000011db1f : mov rdi, rax ; mov eax, 0x3c ; syscall
0x0000000000043e9f : mov rdi, rax ; mov eax, 0xba ; syscall
0x000000000015070c : mov rdi, rax ; mov esi, 9 ; call qword ptr [r10]
0x0000000000144fb3 : mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000010c5b8 : mov rdi, rax ; mov rsi, rdx ; mov eax, 4 ; syscall
0x000000000010c658 : mov rdi, rax ; mov rsi, rdx ; mov eax, 6 ; syscall
0x00000000001149e8 : mov rdi, rbp ; call 0x11587c
0x000000000014c0c9 : mov rdi, rbp ; call 0x148b95
0x0000000000148ee9 : mov rdi, rbp ; call 0x1551a5
0x0000000000147ad1 : mov rdi, rbp ; call qword ptr [rbx]
0x000000000011d967 : mov rdi, rbp ; call r12
0x00000000001457cc : mov rdi, rbp ; call r14
0x0000000000026c00 : mov rdi, rbp ; call rax
0x00000000000ced16 : mov rdi, rbp ; call rbx
0x0000000000155d50 : mov rdi, rbp ; call rcx
0x0000000000147594 : mov rdi, rbp ; call rdx
0x0000000000146177 : mov rdi, rbp ; lea r9, [rsp + 0x20] ; call qword ptr [rax]
0x00000000000bbe5b : mov rdi, rbp ; lea r9, [rsp + 0x30] ; call rbx
0x00000000001174b9 : mov rdi, rbp ; mov eax, 9 ; syscall
0x000000000014bf4c : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x000000000014c15b : mov rdi, rbp ; mov rdx, qword ptr [rsp + 0x20] ; call rdx
0x00000000000bc24f : mov rdi, rbp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x0000000000146eac : mov rdi, rbp ; pop rbx ; xor eax, eax ; pop rbp ; jmp rdx
0x0000000000155168 : mov rdi, rbp ; xor eax, eax ; call rcx
0x00000000000bc152 : mov rdi, rbp ; xor r8d, r8d ; lea r9, [rsp + 0x28] ; call rbx
0x000000000011907f : mov rdi, rbx ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x00000000000f8848 : mov rdi, rbx ; call 0x2531d
0x0000000000063f47 : mov rdi, rbx ; call 0x919ab
0x00000000000d0657 : mov rdi, rbx ; call 0xd00a9
0x0000000000160738 : mov rdi, rbx ; call 0xdca05
0x0000000000147f1b : mov rdi, rbx ; call qword ptr [rax]
0x0000000000027d3b : mov rdi, rbx ; call r12
0x0000000000028cd8 : mov rdi, rbx ; call r14
0x00000000000807b9 : mov rdi, rbx ; call rax
0x00000000000f88d0 : mov rdi, rbx ; mov dword ptr [rsp + 8], eax ; call 0x25321
0x000000000010c434 : mov rdi, rbx ; mov eax, 0x135 ; syscall
0x000000000010c4ca : mov rdi, rbx ; mov eax, ecx ; syscall
0x00000000000e1664 : mov rdi, rbx ; mov edx, eax ; mov eax, 0x23 ; syscall
0x000000000010d802 : mov rdi, rbx ; mov edx, eax ; mov eax, 0x55 ; syscall
0x000000000004424a : mov rdi, rbx ; mov edx, eax ; mov eax, 0x82 ; syscall
0x00000000000823f8 : mov rdi, rbx ; mov qword ptr [rbx + 0xd8], rax ; call 0x8ee1c
0x00000000001434f0 : mov rdi, rbx ; mov qword ptr [rsp + 8], rcx ; call r12
0x0000000000048b1c : mov rdi, rbx ; mov r8d, eax ; mov eax, 0x13e ; syscall
0x00000000001175fc : mov rdi, rbx ; mov r8d, eax ; mov eax, 0x1a ; syscall
0x000000000011171c : mov rdi, rbx ; mov r8d, eax ; mov eax, 7 ; syscall
0x000000000015d54d : mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000000462d8 : mov rdi, rbx ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000046395 : mov rdi, rbx ; mov rax, qword ptr [rsp + 8] ; lea r13, [r14 + rbp] ; call rax
0x0000000000143649 : mov rdi, rbx ; mov rcx, r13 ; call r10
0x000000000011869f : mov rdi, rbx ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; jmp rax
0x0000000000083eeb : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000008672e : mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000008dec9 : mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000196387 : mov rdi, rbx ; test rbx, rbx ; jne 0x196384 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001965d6 : mov rdi, rbx ; test rbx, rbx ; jne 0x1965d1 ; pop rbx ; ret
0x0000000000146c6a : mov rdi, rbx ; xor eax, eax ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x00000000000f88b0 : mov rdi, rbx ; xor ebx, ebx ; call 0x2531f
0x00000000000840e1 : mov rdi, rbx ; xor edx, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000011d92f : mov rdi, rcx ; sub rsp, 8 ; call rsi
0x000000000012be9e : mov rdi, rdx ; jmp rax
0x000000000009c55d : mov rdi, rsi ; call rax
0x0000000000154417 : mov rdi, rsp ; mov dword ptr [rsp], 2 ; call rdx
0x0000000000034c93 : mov rdx, -1 ; cmove rax, rdx ; ret
0x00000000000562af : mov rdx, qword ptr [r8 + rax*8] ; mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; ret
0x000000000005651f : mov rdx, qword ptr [r8 + rcx*8] ; mov qword ptr [rax + rcx*8], rdx ; xor eax, eax ; ret
0x000000000008c217 : mov rdx, qword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x000000000014758b : mov rdx, qword ptr [rax + 0x38] ; test rdx, rdx ; je 0x1475a5 ; mov rdi, rbp ; call rdx
0x000000000019611f : mov rdx, qword ptr [rax + rbx*8] ; test rdx, rdx ; je 0x196133 ; call rdx
0x0000000000026b61 : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000001351b1 : mov rdx, qword ptr [rax] ; xor eax, eax ; call 0x814a7
0x0000000000078eee : mov rdx, qword ptr [rbp - 0x4f8] ; jmp 0x78ec2
0x0000000000028f62 : mov rdx, qword ptr [rbp - 0x50] ; mov rdi, r14 ; mov rsi, r13 ; call 0x2526c
0x000000000011d9bf : mov rdx, qword ptr [rbx] ; mov qword ptr [rax], rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000071833 : mov rdx, qword ptr [rcx] ; mov byte ptr [rdx], al ; jmp 0x6db08
0x000000000012be97 : mov rdx, qword ptr [rdi + 8] ; mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x000000000003524f : mov rdx, qword ptr [rdx + 0x48] ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000003521f : mov rdx, qword ptr [rdx + 0x58] ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x0000000000098892 : mov rdx, qword ptr [rdx + 0x870] ; cmp rdx, r8 ; jne 0x9886c ; ret
0x0000000000055e76 : mov rdx, qword ptr [rdx + 0x88] ; xor eax, eax ; ret
0x000000000009c5d4 : mov rdx, qword ptr [rdx + 8] ; test rdx, rdx ; jne 0x9c5d9 ; ret
0x00000000001205b3 : mov rdx, qword ptr [rip + 0xc7c3e] ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000000b54f3 : mov rdx, qword ptr [rsi + 5] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000b5503 : mov rdx, qword ptr [rsi + 6] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000b5513 : mov rdx, qword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x0000000000165324 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000165c94 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000165e94 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000166094 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000165340 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000b6ab0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x00000000000b78f0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 8] ; ret
0x00000000000b54a0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000b9520 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x000000000015e5c8 : mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x0000000000126682 : mov rdx, qword ptr [rsp + 0x10] ; mov rsi, r13 ; xor r15d, r15d ; call rax
0x0000000000126403 : mov rdx, qword ptr [rsp + 0x10] ; xor esi, esi ; mov edi, 0x2000004 ; call rcx
0x00000000000a6ff0 : mov rdx, qword ptr [rsp + 0x18] ; mov qword ptr [rdi], rdx ; add rax, rdi ; ret
0x000000000014c15e : mov rdx, qword ptr [rsp + 0x20] ; call rdx
0x0000000000145c1a : mov rdx, qword ptr [rsp + 0x28] ; mov rsi, qword ptr [rsp + 0x20] ; call qword ptr [rax]
0x000000000009cc70 : mov rdx, qword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000009cbdb : mov rdx, qword ptr [rsp + 8] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013b710 : mov rdx, qword ptr [rsp + 8] ; jne 0x13b754 ; add rsp, 0x38 ; ret
0x0000000000095b20 : mov rdx, qword ptr [rsp] ; jmp 0x95973
0x000000000014f513 : mov rdx, qword ptr [rsp] ; mov rcx, qword ptr [rsp + 8] ; call 0x13b78b
0x000000000009c690 : mov rdx, r12 ; mov ebp, 0x400 ; xor eax, eax ; jmp 0x9c669
0x000000000015143b : mov rdx, r13 ; mov rsi, qword ptr [rsp + 8] ; mov rdi, qword ptr [rsp] ; call rax
0x000000000012b170 : mov rdx, r13 ; movups xmmword ptr [rbp - 0x78], xmm6 ; call rax
0x000000000012b59c : mov rdx, r13 ; movups xmmword ptr [rbp - 0x78], xmm7 ; call rax
0x000000000015e1f7 : mov rdx, r14 ; add r9, qword ptr [rsp + 8] ; call rax
0x000000000012aa0f : mov rdx, r14 ; movups xmmword ptr [rbp - 0x78], xmm1 ; call rax
0x000000000012ac3d : mov rdx, r14 ; movups xmmword ptr [rbp - 0x78], xmm5 ; call rax
0x00000000000468ce : mov rdx, r15 ; call 0x45389
0x000000000009b19e : mov rdx, r15 ; mov rdi, r13 ; call rax
0x0000000000133c0e : mov rdx, r15 ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00000000001155d9 : mov rdx, r8 ; jmp 0x11560b
0x0000000000115696 : mov rdx, r9 ; jmp 0x1156cc
0x0000000000081239 : mov rdx, r9 ; jmp 0x811d1
0x000000000011545a : mov rdx, rax ; jmp 0x11548b
0x000000000014e6ef : mov rdx, rax ; jmp 0x14e6bc
0x000000000015ec23 : mov rdx, rax ; jmp 0x15ebea
0x000000000015f6c0 : mov rdx, rax ; jmp 0x15f6d8
0x00000000000a0323 : mov rdx, rax ; jmp 0xa0345
0x00000000000a4689 : mov rdx, rax ; jmp 0xa4633
0x00000000000a6181 : mov rdx, rax ; jmp 0xa6124
0x00000000000e4b23 : mov rdx, rax ; jmp 0xe4aea
0x00000000000e55c0 : mov rdx, rax ; jmp 0xe55d8
0x000000000009266d : mov rdx, rax ; mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x92673 ; ret
0x000000000013b7ef : mov rdx, rax ; ret
0x0000000000135296 : mov rdx, rax ; xor eax, eax ; call 0x814a7
0x00000000000d8706 : mov rdx, rbp ; mov rdi, r15 ; call 0x25198
0x00000000000d8705 : mov rdx, rbp ; mov rdi, r15 ; call 0x25199
0x0000000000045d3e : mov rdx, rbp ; mov rsi, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x00000000000454a5 : mov rdx, rbp ; mov rsi, r12 ; mov rdi, qword ptr [rsp + 0x18] ; call rbx
0x00000000000454e0 : mov rdx, rbp ; mov rsi, r12 ; mov rdi, r13 ; call rbx
0x0000000000045813 : mov rdx, rbp ; mov rsi, r14 ; mov rdi, r12 ; call rbx
0x00000000000454fb : mov rdx, rbp ; mov rsi, r15 ; mov rdi, r12 ; call rbx
0x0000000000112980 : mov rdx, rbp ; mov word ptr [rbp + 0x21], cx ; syscall
0x000000000012604f : mov rdx, rbp ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x00000000001117c0 : mov rdx, rbx ; mov eax, 0x10f ; syscall
0x000000000010fc29 : mov rdx, rbx ; mov edi, 1 ; jne 0x10fca4 ; call 0x10c65c
0x000000000009bdb9 : mov rdx, rbx ; mov rsi, r12 ; call rax
0x000000000009b836 : mov rdx, rbx ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000012aca8 : mov rdx, rbx ; movups xmmword ptr [rbp - 0x78], xmm4 ; call rax
0x000000000011b66b : mov rdx, rcx ; jmp 0x11b678
0x000000000011b66a : mov rdx, rcx ; jmp 0x11b679
0x000000000011b6a1 : mov rdx, rcx ; jmp 0x11b690
0x00000000000485f0 : mov rdx, rcx ; jmp 0x485ba
0x00000000000485f0 : mov rdx, rcx ; jmp 0x485bc
0x000000000009b73f : mov rdx, rcx ; jmp 0x9b6d8
0x000000000010c95f : mov rdx, rcx ; mov eax, 0x106 ; syscall
0x00000000000ba460 : mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000160dca : mov rdx, rdi ; test eax, eax ; jne 0x160df2 ; mov eax, 0x27 ; syscall
0x00000000001605c8 : mov rdx, rsi ; mov esi, 0x80 ; mov eax, ecx ; syscall
0x0000000000111aaf : mov rdx, rsi ; xor esi, esi ; syscall
0x0000000000112ae1 : mov rdx, rsp ; mov eax, ecx ; syscall
0x0000000000116636 : mov rdx, rsp ; mov esi, 2 ; mov edi, eax ; call 0x1128ec
0x0000000000046535 : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [rbx] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000011877b : mov rsi, qword ptr [rax + 8] ; test sil, 1 ; jne 0x1187aa ; ret
0x0000000000118ac4 : mov rsi, qword ptr [rax] ; mov rdi, r13 ; mov dword ptr [rbp - 0x50], r15d ; call r14
0x00000000000ba113 : mov rsi, qword ptr [rsi] ; mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x00000000000913a1 : mov rsi, qword ptr [rsp + 0x10] ; mov rdi, qword ptr [rsp + 8] ; jmp 0x91383
0x0000000000045d41 : mov rsi, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000027a45 : mov rsi, qword ptr [rsp + 0x10] ; xor r8d, r8d ; call rbx
0x0000000000099270 : mov rsi, qword ptr [rsp + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000000bbfb2 : mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x00000000001457c7 : mov rsi, qword ptr [rsp + 0x18] ; mov rdi, rbp ; call r14
0x0000000000145c1f : mov rsi, qword ptr [rsp + 0x20] ; call qword ptr [rax]
0x0000000000108e10 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, r13 ; call 0x250ba
0x0000000000099cd0 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x000000000002a256 : mov rsi, qword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x000000000002aa67 : mov rsi, qword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call r15
0x000000000002acd5 : mov rsi, qword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x000000000002af0c : mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x000000000002a48f : mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000002b526 : mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x000000000002bdcc : mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x000000000002c90e : mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000002efe0 : mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000002da1c : mov rsi, qword ptr [rsp + 0x50] ; mov rdi, qword ptr [rsp + 0x48] ; call r14
0x00000000000dd3f0 : mov rsi, qword ptr [rsp + 0x60] ; mov rdi, qword ptr [rsp + 8] ; call r12
0x00000000000cf23b : mov rsi, qword ptr [rsp + 8] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x000000000015143e : mov rsi, qword ptr [rsp + 8] ; mov rdi, qword ptr [rsp] ; call rax
0x0000000000136f03 : mov rsi, qword ptr [rsp] ; call r12
0x0000000000109355 : mov rsi, qword ptr [rsp] ; mov rcx, rax ; mov rdi, qword ptr [rbx] ; call 0x105dcc
0x00000000001093a2 : mov rsi, qword ptr [rsp] ; mov rdi, qword ptr [rbx] ; call 0x105dc9
0x000000000009bdbc : mov rsi, r12 ; call rax
0x000000000011e046 : mov rsi, r12 ; mov edi, ebx ; mov eax, 0x113 ; syscall
0x000000000011eeea : mov rsi, r12 ; mov edi, ebx ; mov eax, 0x2c ; syscall
0x000000000011ecca : mov rsi, r12 ; mov edi, ebx ; mov eax, 0x2d ; syscall
0x00000000000454a8 : mov rsi, r12 ; mov rdi, qword ptr [rsp + 0x18] ; call rbx
0x00000000000454e3 : mov rsi, r12 ; mov rdi, r13 ; call rbx
0x0000000000147f18 : mov rsi, r12 ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000143646 : mov rsi, r12 ; mov rdi, rbx ; mov rcx, r13 ; call r10
0x000000000008dec6 : mov rsi, r12 ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000028f69 : mov rsi, r13 ; call 0x25265
0x000000000009c495 : mov rsi, r13 ; call rax
0x00000000001137bc : mov rsi, r13 ; mov edi, r12d ; mov eax, 0x147 ; syscall
0x000000000011391c : mov rsi, r13 ; mov edi, r12d ; mov eax, 0x148 ; syscall
0x00000000000ced13 : mov rsi, r13 ; mov rdi, rbp ; call rbx
0x00000000001174b6 : mov rsi, r13 ; mov rdi, rbp ; mov eax, 9 ; syscall
0x0000000000126687 : mov rsi, r13 ; xor r15d, r15d ; call rax
0x000000000011f529 : mov rsi, r14 ; mov edi, ebx ; mov eax, 0x12b ; syscall
0x000000000011403b : mov rsi, r14 ; mov edi, ebx ; mov eax, 0x17 ; syscall
0x000000000011f7fb : mov rsi, r14 ; mov edi, ebx ; mov eax, 0x46 ; syscall
0x0000000000045816 : mov rsi, r14 ; mov rdi, r12 ; call rbx
0x000000000009b839 : mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000155165 : mov rsi, r14 ; mov rdi, rbp ; xor eax, eax ; call rcx
0x0000000000045353 : mov rsi, r15 ; call r14
0x000000000011dc74 : mov rsi, r15 ; mov eax, 0x119 ; syscall
0x000000000005e582 : mov rsi, r15 ; mov rdi, qword ptr [rbp - 0xc0] ; call rax
0x00000000000454fe : mov rsi, r15 ; mov rdi, r12 ; call rbx
0x00000000001434ed : mov rsi, r15 ; mov rdi, rbx ; mov qword ptr [rsp + 8], rcx ; call r12
0x00000000000462d5 : mov rsi, r15 ; mov rdi, rbx ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000011fd9d : mov rsi, r8 ; mov edi, ebx ; mov eax, 0x14 ; syscall
0x000000000011ff26 : mov rsi, r8 ; mov edi, ebx ; mov eax, r14d ; syscall
0x000000000012ef8d : mov rsi, rax ; add ecx, ecx ; jmp 0x8b1c7
0x000000000002e39e : mov rsi, rax ; jmp 0x2e369
0x00000000000a0607 : mov rsi, rax ; mov rbx, rax ; call 0x9d028
0x000000000015d3ce : mov rsi, rax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000009c2ec : mov rsi, rbp ; call rax
0x00000000001135ce : mov rsi, rbp ; mov edi, ebx ; mov eax, 0x127 ; syscall
0x000000000011367e : mov rsi, rbp ; mov edi, ebx ; mov eax, 0x128 ; syscall
0x0000000000112105 : mov rsi, rbp ; mov edi, ebx ; mov eax, 0x146 ; syscall
0x000000000012c715 : mov rsi, rbp ; mov edi, ebx ; mov eax, ecx ; syscall
0x000000000010cfa8 : mov rsi, rbp ; mov edi, ebx ; mov r8d, eax ; xor eax, eax ; syscall
0x00000000001456ec : mov rsi, rbp ; mov rcx, rbx ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000009afc9 : mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000010c4c7 : mov rsi, rbp ; mov rdi, rbx ; mov eax, ecx ; syscall
0x000000000008c5f3 : mov rsi, rbx ; mov edi, dword ptr [rbp - 0x84] ; mov eax, r10d ; syscall
0x000000000008c39b : mov rsi, rbx ; mov edi, r13d ; mov eax, r9d ; syscall
0x000000000009bc40 : mov rsi, rbx ; mov rdi, r12 ; call rax
0x000000000011a370 : mov rsi, rbx ; mov rdi, r13 ; call r14
0x000000000015250f : mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x0000000000155d4d : mov rsi, rbx ; mov rdi, rbp ; call rcx
0x00000000000dbac2 : mov rsi, rbx ; xor edi, edi ; mov eax, 0xe4 ; syscall
0x000000000010ccc4 : mov rsi, rdi ; mov edi, 0xffffff9c ; syscall
0x00000000000dbaad : mov rsi, rdi ; xor edi, edi ; call rax
0x000000000014c809 : mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x000000000012a5b7 : mov rsi, rdx ; call rax
0x000000000010c5bb : mov rsi, rdx ; mov eax, 4 ; syscall
0x000000000010c609 : mov rsi, rdx ; mov eax, 5 ; syscall
0x000000000010c65b : mov rsi, rdx ; mov eax, 6 ; syscall
0x00000000000ceae9 : mov rsi, rsp ; call 0x12c6ca
0x0000000000147e7c : mov rsi, rsp ; call qword ptr [rax]
0x00000000001551fa : mov rsi, rsp ; mov rdi, r12 ; call qword ptr [rax]
0x0000000000043c79 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x00000000000a42c9 : mov ss, edx ; add eax, dword ptr [rax] ; add bh, dh ; ret
0x000000000018d4d5 : mov word ptr [r9 - 2], cx ; ret
0x000000000005b79c : mov word ptr [rax + rax*4], cs ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ror dword ptr [rax - 0x77], 1 ; retf 0x8b48
0x00000000000fc881 : mov word ptr [rax + rax*4], fs ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x000000000004bf79 : mov word ptr [rax + rcx*4], fs ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f3126 : mov word ptr [rax + rcx*4], fs ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf 0x8b48
0x000000000014f47f : mov word ptr [rax + rcx*8], fs ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; leave ; call 0x13b6da
0x00000000000e26cc : mov word ptr [rax + rdx - 2], cx ; jmp 0xe260e
0x00000000001172a0 : mov word ptr [rax - 0x77], cs ; ret 0xb9e9
0x000000000015e957 : mov word ptr [rax], cs ; add bl, al ; mov eax, 0xffffffff ; ret
0x00000000000b5ca0 : mov word ptr [rax], cs ; add byte ptr [rax], al ; ret
0x0000000000113211 : mov word ptr [rax], es ; add byte ptr [rax], al ; syscall
0x00000000000c5f2e : mov word ptr [rax], fs ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8348
0x00000000000c5e8c : mov word ptr [rax], fs ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8948
0x0000000000112983 : mov word ptr [rbp + 0x21], cx ; syscall
0x000000000005f8e0 : mov word ptr [rbp + 0xf660015], es ; outsd dx, dword ptr [rsi] ; ret 0xc3e8
0x0000000000176182 : mov word ptr [rcx + 4], dx ; ret
0x00000000001761c3 : mov word ptr [rcx + 8], dx ; ret
0x000000000005497c : mov word ptr [rcx + rdx*4], fs ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; retf 0x7c83
0x00000000000437a2 : mov word ptr [rcx - 0x7f000000], gs ; sti ; push rax ; ret
0x0000000000176150 : mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x0000000000176140 : mov word ptr [rcx], dx ; ret
0x00000000000b6bbc : mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x11] ; ret
0x00000000000b7a1c : mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x12] ; ret
0x00000000000b554c : mov word ptr [rdi + 0x10], cx ; ret
0x00000000000b964c : mov word ptr [rdi + 0x10], cx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x0000000000112d07 : mov word ptr [rdi + 0x16], ax ; ret
0x00000000000b6cc4 : mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x19] ; ret
0x00000000000b7b24 : mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x1a] ; ret
0x00000000000b5634 : mov word ptr [rdi + 0x18], cx ; ret
0x00000000000b9754 : mov word ptr [rdi + 0x18], cx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x000000000016b807 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000000a7133 : mov word ptr [rdi + 4], ax ; mov rax, rdi ; ret
0x0000000000048ab4 : mov word ptr [rdi + 4], ax ; xor eax, eax ; ret
0x00000000000b6a88 : mov word ptr [rdi + 4], dx ; lea rax, [rdi + 5] ; ret
0x00000000000b78c8 : mov word ptr [rdi + 4], dx ; lea rax, [rdi + 6] ; ret
0x00000000000a707e : mov word ptr [rdi + 4], dx ; movzx edx, byte ptr [rsp + 0x16] ; mov byte ptr [rdi + 6], dl ; ret
0x00000000000a7230 : mov word ptr [rdi + 4], dx ; movzx edx, byte ptr [rsp + 0xe] ; mov byte ptr [rdi + 6], dl ; ret
0x00000000000a7066 : mov word ptr [rdi + 4], dx ; ret
0x00000000000b94f8 : mov word ptr [rdi + 4], dx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000b792a : mov word ptr [rdi + 8], dx ; lea rax, [rdi + 0xa] ; ret
0x00000000000b6ada : mov word ptr [rdi + 8], dx ; lea rax, [rdi + 9] ; ret
0x00000000000b54ca : mov word ptr [rdi + 8], dx ; ret
0x00000000000b955a : mov word ptr [rdi + 8], dx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x0000000000187f6c : mov word ptr [rdi + r8 - 2], dx ; vzeroupper ; ret
0x00000000000ba55a : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], cx ; ret
0x00000000001895ff : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], cx ; vzeroupper ; ret
0x00000000000ba134 : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x00000000001658dc : mov word ptr [rdi - 2], cx ; ret
0x00000000001656f4 : mov word ptr [rdi - 2], dx ; ret
0x00000000001658d8 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000186b23 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], 0 ; vzeroupper ; ret
0x00000000000b6a53 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x00000000000b5453 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000b7886 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; lea rax, [rdi + 3] ; ret
0x00000000000b6126 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000b94b6 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x0000000000187f69 : mov word ptr [rdi], cx ; mov word ptr [rdi + r8 - 2], dx ; vzeroupper ; ret
0x000000000018dba2 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00000000000ba55f : mov word ptr [rdi], cx ; ret
0x0000000000189604 : mov word ptr [rdi], cx ; vzeroupper ; ret
0x00000000000a7010 : mov word ptr [rdi], dx ; add rax, rdi ; ret
0x00000000000b6a43 : mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x00000000001885a3 : mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; vzeroupper ; ret
0x00000000000b7873 : mov word ptr [rdi], dx ; lea rax, [rdi + 2] ; ret
0x0000000000188c83 : mov word ptr [rdi], dx ; lea rax, [rdi + 2] ; vzeroupper ; ret
0x00000000001873a3 : mov word ptr [rdi], dx ; mov byte ptr [rdi + 2], 0 ; vzeroupper ; ret
0x0000000000188040 : mov word ptr [rdi], dx ; mov word ptr [rdi + r8 - 2], dx ; vzeroupper ; ret
0x00000000000a7028 : mov word ptr [rdi], dx ; movzx edx, byte ptr [rsp - 6] ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000b5443 : mov word ptr [rdi], dx ; ret
0x0000000000186b13 : mov word ptr [rdi], dx ; vzeroupper ; ret
0x00000000000b94a3 : mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a71b0 : mov word ptr [rdi], si ; lea rax, [rdi + rax - 1] ; ret
0x00000000000a70e0 : mov word ptr [rdi], si ; mov rax, rdi ; ret
0x000000000018d4d2 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x00000000000ba139 : mov word ptr [rdi], si ; ret
0x000000000010b8ec : mov word ptr [rdi], si ; xor eax, eax ; ret
0x000000000014bd75 : mov word ptr [rdx + 0x6c], ax ; mov eax, 1 ; ret
0x00000000001784f8 : mov word ptr [rdx + 4], ax ; lea rax, [rdx + 5] ; ret
0x00000000000b203d : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x00000000000b20c1 : mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x00000000001784a3 : mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x00000000000b1fe8 : mov word ptr [rdx], ax ; mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000000b1fd8 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000012090f : mov word ptr [rdx], ax ; ret
0x0000000000111575 : mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x0000000000048a76 : mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x000000000018dba5 : mov word ptr [rsi - 2], cx ; ret
0x000000000010b8d3 : mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000000c5f70 : mov word ptr [rsp + rdx*4], fs ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8348
0x00000000000c5f05 : mov word ptr [rsp + rdx*4], fs ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x894c
0x0000000000042c7f : mov word ptr [rsp - 0x10], ax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000042b11 : mov word ptr [rsp - 0x10], ax ; fstp xword ptr [rdi] ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000ba133 : mov word ptr ss:[rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x0000000000082292 : movabs al, byte ptr [0x1308a8948000000] ; add byte ptr [rax], al ; ret
0x00000000000869b3 : movabs al, byte ptr [0x30788348000000] ; je 0x869cb ; ret
0x0000000000151220 : movabs al, byte ptr [0x415c415d5b000000] ; pop rbp ; pop r14 ; ret
0x000000000010e45c : movabs al, byte ptr [0x415c415d5b000001] ; pop rbp ; pop r14 ; ret
0x00000000001144bc : movabs al, byte ptr [0x415c415d5b000004] ; pop rbp ; pop r14 ; ret
0x000000000016ba9c : movabs al, byte ptr [0x49931463490004de] ; lea edx, [rbx + rdx] ; jmp rdx
0x00000000000fc3d2 : movabs al, byte ptr [0x7401eb8349000000] ; cmp al, 0x83 ; retf
0x0000000000035ea3 : movabs al, byte ptr [0x74f6854d9075894c] ; ret
0x0000000000189287 : movabs al, byte ptr [0x77f8c5237f7ec1c4] ; ret
0x00000000000601ec : movabs al, byte ptr [0x8300758b41fffffe] ; ret
0x000000000007bc4e : movabs al, byte ptr [0x840fc08548000000] ; ret 0xe
0x000000000006d7c7 : movabs al, byte ptr [0x840fc08548000000] ; retf 0x33
0x00000000001296ec : movabs al, byte ptr [0x8948f7894c00088e] ; ret 0xc031
0x000000000012cb4c : movabs al, byte ptr [0xc683492b135c8d48] ; and byte ptr [rax + 1], cl ; ret
0x00000000000338ac : movabs al, byte ptr [0xf98009b60f000000] ; dec dword ptr [rdi] ; retf 0xd88
0x00000000000a758a : movabs byte ptr [0x3948c58948fff7da], al ; ret
0x000000000008243a : movabs byte ptr [0x4f0f48c98500163f], al ; ret 0x8948
0x000000000017f1e0 : movabs byte ptr [0x82048b8a0c8b0001], al ; sub eax, ecx ; ret
0x000000000017a46a : movabs byte ptr [0x8348013880000002], al ; fdivr st(7) ; ret
0x0000000000107861 : movabs byte ptr [0x89482f8b4d000000], al ; ret
0x0000000000123b7d : movabs byte ptr [0xc7489848243c8b4c], al ; ret 0xffff
0x0000000000055907 : movabs byte ptr [0xf48241489440015], al ; retf 0x8548
0x0000000000163dd9 : movabs dword ptr [0x4993146349000550], eax ; lea edx, [rbx + rdx] ; jmp rdx
0x0000000000082339 : movabs dword ptr [0x4f0f48c985001640], eax ; ret 0x8948
0x000000000009baf1 : movabs dword ptr [0x5b30c48348000000], eax ; pop rbp ; pop r12 ; ret
0x0000000000159b24 : movabs dword ptr [0x7504007d83640008], eax ; retf 0xbd49
0x000000000017f1ac : movabs dword ptr [0x81048b91148b0001], eax ; sub eax, edx ; ret
0x000000000007fc61 : movabs dword ptr [0x8548c28949fffa56], eax ; ror byte ptr [rdi], 0x84 ; call rdx
0x000000000017068e : movabs dword ptr [0x8d4f8a0c634f0003], eax ; adc al, 0xa ; jmp r10
0x000000000006ae2f : movabs dword ptr [0x940fc085d231fffb], eax ; ret 0xb60f
0x0000000000079082 : movabs dword ptr [0xfffaf09d8b4c0000], eax ; dec dword ptr [rcx + 0x39] ; ret
0x00000000000790f5 : movabs dword ptr [0xfffb089d8b4c0000], eax ; dec dword ptr [rcx + 0x39] ; ret
0x0000000000091ade : movabs dword ptr [0xffffffffc0c74890], eax ; ret
0x00000000000394d0 : movabs eax, dword ptr [0x1ab2360589480017] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000c532e : movabs eax, dword ptr [0x415d5bffffffffb8] ; pop rsi ; ret
0x0000000000187ff0 : movabs eax, dword ptr [0x77f8c5e0075c7f7e] ; ret
0x0000000000188075 : movabs eax, dword ptr [0x77f8c5f007447f7a] ; ret
0x0000000000187fd0 : movabs eax, dword ptr [0x77f8c5f0075c7f7a] ; ret
0x0000000000116a0b : movabs eax, dword ptr [0x80c48148000153] ; add byte ptr [rax], al ; ret
0x00000000000f915b : movabs eax, dword ptr [0x8b48ca6348000026] ; jo 0xf90f6 ; ret 0x4801
0x0000000000181825 : movabs eax, dword ptr [0xdafdc520124c7465] ; ret 0xf5c5
0x00000000000a0a0b : movabs eax, dword ptr [0xe074c08490fffff6] ; pop rbx ; pop rbp ; ret
0x000000000010e135 : movabs eax, dword ptr [0xfff8ee92e8df8948] ; jmp 0x10e0ec
0x0000000000159b23 : movabs qword ptr [0x7504007d83640008], rax ; retf 0xbd49
0x000000000018bcb8 : movabs rbp, 0xf66d1ef0f66bdb2 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018bdb8 : movabs rsp, 0xf66d1ef0f66bcb2 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000d056e : movaps xmmword ptr [rax], xmm0 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000d0799 : movaps xmmword ptr [rax], xmm0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000163f06 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x163f1e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000164056 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x16406e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001641a6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1641be ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001642f6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x16430e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000164446 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x16445e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000164596 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1645ae ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001646e6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1646fe ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000164836 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x16484e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000164986 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x16499e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000164ad6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x164aee ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000164c26 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x164c3e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000164d76 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x164d8e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000164ec6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x164ede ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000165016 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x16502e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000165166 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x16517e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001668d6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1668ee ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000166a26 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x166a3e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000166b76 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x166b8e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000166cc6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x166cde ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000166e16 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x166e2e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000166f66 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x166f7e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001670b6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1670ce ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000167206 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x16721e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000167356 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x16736e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001674a6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1674be ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001675f6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x16760e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000167746 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x16775e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000167896 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1678ae ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001679e6 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x1679fe ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000167b36 : movaps xmmword ptr [rdi + 0x10], xmm3 ; jb 0x167b4e ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000163e62 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000163e5e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000043701 : movaps xmmword ptr [rdi], xmm4 ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000163f0c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000010bac8 : movaps xmmword ptr [rsp + 0xa0], xmm0 ; syscall
0x0000000000043e8c : movaps xmmword ptr [rsp + 0xf0], xmm0 ; syscall
0x00000000000f4d18 : movaps xmmword ptr [rsp], xmm0 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000042e30 : movd dword ptr [rsp - 8], mm0 ; ret
0x0000000000043224 : movd mm0, dword ptr [rsp - 4] ; ret
0x0000000000043223 : movd xmm0, dword ptr [rsp - 4] ; ret
0x0000000000043a07 : movdqa xmm0, xmm3 ; pop rbx ; ret
0x000000000005bd53 : movdqa xmm0, xmmword ptr [rsp - 0x18] ; pinsrw xmm0, eax, 6 ; ret
0x00000000000435b9 : movdqa xmm0, xmmword ptr [rsp - 0x38] ; ret
0x0000000000043952 : movdqa xmm0, xmmword ptr [rsp] ; add rsp, 0x20 ; pop rbx ; ret
0x000000000014f2b8 : movdqu xmm0, xmmword ptr [rdx] ; mov eax, esi ; movups xmmword ptr [r8 + 0x30], xmm0 ; ret
0x000000000014bcf8 : movdqu xmm0, xmmword ptr [rdx] ; mov eax, esi ; movups xmmword ptr [r8 + 8], xmm0 ; ret
0x00000000000b79e0 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; lea rax, [rdi + 0x10] ; ret
0x00000000000b6b90 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; lea rax, [rdi + 0xf] ; ret
0x00000000000b5530 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000b5520 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000013b4cb : movdqu xmm0, xmmword ptr [rsi] ; movups xmmword ptr [rdi + rdx + 8], xmm0 ; ret
0x000000000010b870 : movdqu xmm7, xmmword ptr [rdi + 0x78] ; movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x000000000010c1a5 : movdqu xmm7, xmmword ptr [rdi + 0xf8] ; movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x000000000010b8c0 : movdqu xmm7, xmmword ptr [rsi + 0x70] ; movups xmmword ptr [rdi + 0x78], xmm7 ; ret
0x000000000010c235 : movdqu xmm7, xmmword ptr [rsi + 0x70] ; movups xmmword ptr [rdi + 0xf8], xmm7 ; ret
0x00000000000b6d7d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, [rdi + 0x1f] ; ret
0x00000000000b7bdd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, [rdi + 0x20] ; ret
0x00000000000b63e0 : movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000b56ed : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000b980d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000b7e43 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; lea rax, [rdi + 0x40] ; ret
0x00000000000b6623 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; ret
0x00000000000b9883 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000016b4df : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016b46f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016b3ff : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016b38f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000b6d1d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, [rdi + 0x1c] ; ret
0x00000000000b7b7d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000000b568d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000b97ad : movdqu xmmword ptr [rdi + 0xd], xmm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x000000000016b31f : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000b6d3d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000000b7b9d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, [rdi + 0x1e] ; ret
0x00000000000b56ad : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000b97cd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x000000000016b2af : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000b6d5d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, [rdi + 0x1e] ; ret
0x00000000000b7bbd : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, [rdi + 0x1f] ; ret
0x00000000000b56cd : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000b97ed : movdqu xmmword ptr [rdi + 0xf], xmm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000016b8cf : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016b85f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016b7ef : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016b77f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016b70f : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016b69f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016b62f : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016b5bf : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016b54f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000ba4c7 : movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x00000000000ba428 : movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000ba4cd : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x000000000016aa3b : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000016aaab : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016b1e6 : movdqu xmmword ptr [rdi - 0x11], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016b166 : movdqu xmmword ptr [rdi - 0x12], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016b0d6 : movdqu xmmword ptr [rdi - 0x13], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016b056 : movdqu xmmword ptr [rdi - 0x14], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016afd6 : movdqu xmmword ptr [rdi - 0x15], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016af56 : movdqu xmmword ptr [rdi - 0x16], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016aed6 : movdqu xmmword ptr [rdi - 0x17], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016ae56 : movdqu xmmword ptr [rdi - 0x18], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016add6 : movdqu xmmword ptr [rdi - 0x19], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016ad56 : movdqu xmmword ptr [rdi - 0x1a], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016acd6 : movdqu xmmword ptr [rdi - 0x1b], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016ac56 : movdqu xmmword ptr [rdi - 0x1c], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016abc6 : movdqu xmmword ptr [rdi - 0x1d], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016ab36 : movdqu xmmword ptr [rdi - 0x1e], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016aaa6 : movdqu xmmword ptr [rdi - 0x1f], xmm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000b64e0 : movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000b79e4 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, [rdi + 0x10] ; ret
0x00000000000b6b94 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, [rdi + 0xf] ; ret
0x00000000000b79f7 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; lea rax, [rdi + 0x11] ; ret
0x00000000000b6207 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000b9627 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000b6ba4 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x00000000000b5534 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000b6bf7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000000b7a57 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x14] ; ret
0x00000000000b5587 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000b625a : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000b5577 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000b9687 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000b6bd7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x00000000000b7a37 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000000b5567 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000b9667 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000b6c78 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x17] ; ret
0x00000000000b7ad8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x18] ; ret
0x00000000000b5608 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000b55e8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000b62db : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000b564b : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000b566b : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000b562c : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000b6c38 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x15] ; ret
0x00000000000b7a98 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x16] ; ret
0x00000000000b55a8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000b6c58 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x16] ; ret
0x00000000000b7ab8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x17] ; ret
0x00000000000b55c8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000b6bb8 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x11] ; ret
0x00000000000b7a18 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x12] ; ret
0x00000000000b5548 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000b63dc : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000b56e9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000b5689 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000b56a9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000b56c9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000b5524 : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000b9614 : movdqu xmmword ptr [rdi], xmm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000016b2b4 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000485ca : movhps xmm0, qword ptr [rsp - 0x10] ; movups xmmword ptr [rdi], xmm0 ; ret
0x00000000000b2122 : movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000b2142 : movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000b2162 : movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000b1fac : movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000b1f56 : movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000b1fa8 : movlpd qword ptr [rdx], xmm0 ; movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000b4d2a : movlpd qword ptr [rdx], xmm0 ; xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000000b1f52 : movlpd xmm0, qword ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000b2123 : movlps qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000b2143 : movlps qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000b2163 : movlps qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000b1fad : movlps qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000b4d94 : movlps qword ptr [rdx + 8], xmm1 ; xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x00000000000b209a : movlps qword ptr [rdx], xmm0 ; mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x00000000000b20da : movlps qword ptr [rdx], xmm0 ; mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000000b20fa : movlps qword ptr [rdx], xmm0 ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000000b1f57 : movlps qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000b1fa9 : movlps qword ptr [rdx], xmm0 ; movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000b4d2b : movlps qword ptr [rdx], xmm0 ; xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000000b1f53 : movlps xmm0, qword ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000b211e : movlps xmm1, qword ptr [rcx + 5] ; movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000b213e : movlps xmm1, qword ptr [rcx + 6] ; movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000b215e : movlps xmm1, qword ptr [rcx + 7] ; movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000b4cae : movlps xmm1, qword ptr [rcx + 8] ; movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x0000000000043980 : movmskps eax, xmm0 ; and eax, 8 ; ret
0x000000000008a2f4 : movnti dword ptr [rsi + 0x2e], esp ; nop dword ptr [rax + rax] ; ret
0x0000000000043a08 : movq mm0, mm3 ; pop rbx ; ret
0x000000000014f2b9 : movq mm0, qword ptr [rdx] ; mov eax, esi ; movups xmmword ptr [r8 + 0x30], xmm0 ; ret
0x000000000014bcf9 : movq mm0, qword ptr [rdx] ; mov eax, esi ; movups xmmword ptr [r8 + 8], xmm0 ; ret
0x00000000000b79e1 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; lea rax, [rdi + 0x10] ; ret
0x00000000000b6b91 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; lea rax, [rdi + 0xf] ; ret
0x00000000000b5531 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000b5521 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000b9611 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000013b4cc : movq mm0, qword ptr [rsi] ; movups xmmword ptr [rdi + rdx + 8], xmm0 ; ret
0x000000000005bd54 : movq mm0, qword ptr [rsp - 0x18] ; pinsrw xmm0, eax, 6 ; ret
0x00000000000435ba : movq mm0, qword ptr [rsp - 0x38] ; ret
0x0000000000043634 : movq mm0, qword ptr [rsp] ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000043953 : movq mm0, qword ptr [rsp] ; add rsp, 0x20 ; pop rbx ; ret
0x000000000014f2ca : movq mm1, qword ptr [rax + 0x30] ; mov eax, 1 ; movups xmmword ptr [rdx], xmm1 ; ret
0x000000000014bd0a : movq mm1, qword ptr [rax + 8] ; mov eax, 1 ; movups xmmword ptr [rdx], xmm1 ; ret
0x000000000014e9f2 : movq mm2, qword ptr [rax + 0x1c] ; mov eax, 1 ; movups xmmword ptr [rdx], xmm2 ; ret
0x000000000012abad : movq mm2, qword ptr [rbx + 0x30] ; mov dword ptr [rbp - 0x80], eax ; movups xmmword ptr [rbp - 0x78], xmm2 ; call r8
0x0000000000043a00 : movq mm3, mm0 ; add rsp, 0x20 ; movdqa xmm0, xmm3 ; pop rbx ; ret
0x000000000014f302 : movq mm3, qword ptr [rax + 0x20] ; mov eax, 1 ; movups xmmword ptr [rdx], xmm3 ; ret
0x000000000012ad55 : movq mm3, qword ptr [rbx + 0x30] ; mov dword ptr [rbp - 0x80], eax ; movups xmmword ptr [rbp - 0x78], xmm3 ; call r8
0x000000000014f2e2 : movq mm4, qword ptr [rax + 8] ; mov eax, 1 ; movups xmmword ptr [rdx], xmm4 ; ret
0x000000000010b871 : movq mm7, qword ptr [rdi + 0x78] ; movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x000000000010c1a6 : movq mm7, qword ptr [rdi + 0xf8] ; movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x000000000010b8c1 : movq mm7, qword ptr [rsi + 0x70] ; movups xmmword ptr [rdi + 0x78], xmm7 ; ret
0x000000000010c236 : movq mm7, qword ptr [rsi + 0x70] ; movups xmmword ptr [rdi + 0xf8], xmm7 ; ret
0x000000000016b252 : movq qword ptr [rdi + 0x10], mm0 ; lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000b6d7e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, [rdi + 0x1f] ; ret
0x00000000000b7bde : movq qword ptr [rdi + 0x10], mm2 ; lea rax, [rdi + 0x20] ; ret
0x00000000000b63e1 : movq qword ptr [rdi + 0x10], mm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000b9831 : movq qword ptr [rdi + 0x10], mm2 ; mov byte ptr [rdi + 0x20], cl ; xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000b56ee : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00000000000b980e : movq qword ptr [rdi + 0x10], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000b7e44 : movq qword ptr [rdi + 0x30], mm7 ; lea rax, [rdi + 0x40] ; ret
0x00000000000b6624 : movq qword ptr [rdi + 0x30], mm7 ; ret
0x00000000000b9884 : movq qword ptr [rdi + 0x30], mm7 ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000016b4e0 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016b470 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016b400 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016b390 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000b6d1e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, [rdi + 0x1c] ; ret
0x00000000000b7b7e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000000b568e : movq qword ptr [rdi + 0xd], mm2 ; ret
0x00000000000b97ae : movq qword ptr [rdi + 0xd], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x000000000016b320 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000b6d3e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000000b7b9e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, [rdi + 0x1e] ; ret
0x00000000000b56ae : movq qword ptr [rdi + 0xe], mm2 ; ret
0x00000000000b97ce : movq qword ptr [rdi + 0xe], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x000000000016b2b0 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000b6d5e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, [rdi + 0x1e] ; ret
0x00000000000b7bbe : movq qword ptr [rdi + 0xf], mm2 ; lea rax, [rdi + 0x1f] ; ret
0x00000000000b56ce : movq qword ptr [rdi + 0xf], mm2 ; ret
0x00000000000b97ee : movq qword ptr [rdi + 0xf], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000016b8d0 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016b860 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016b7f0 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016b780 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016b710 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016b6a0 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016b630 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016b5c0 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000016b550 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000ba4c8 : movq qword ptr [rdi + rdx - 0x10], mm0 ; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x00000000000ba429 : movq qword ptr [rdi + rdx - 0x10], mm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000ba4ce : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000016aa3c : movq qword ptr [rdi - 0x10], mm0 ; ret
0x000000000016aaac : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016b1e7 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016b167 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016b0d7 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016b057 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016afd7 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016af57 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016aed7 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016ae57 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016add7 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016ad57 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016acd7 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016ac57 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016abc7 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016ab37 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016aaa7 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000b64e1 : movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000b79e5 : movq qword ptr [rdi], mm0 ; lea rax, [rdi + 0x10] ; ret
0x00000000000b6b95 : movq qword ptr [rdi], mm0 ; lea rax, [rdi + 0xf] ; ret
0x00000000000b79f8 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; lea rax, [rdi + 0x11] ; ret
0x00000000000b6208 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000b9628 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000b6ba5 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x00000000000b5535 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000b6bf8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000000b7a58 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x14] ; ret
0x00000000000b5588 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000b625b : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000b5578 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000b9688 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000b6bd8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x00000000000b7a38 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000000b5568 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000b9668 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000b6c79 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x17] ; ret
0x00000000000b7ad9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x18] ; ret
0x00000000000b5609 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000b55e9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000b9709 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000b62dc : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000b564c : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000b566c : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000b562d : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000b6c39 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x15] ; ret
0x00000000000b7a99 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x16] ; ret
0x00000000000b55a9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000b96c9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000b6c59 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x16] ; ret
0x00000000000b7ab9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x17] ; ret
0x00000000000b55c9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000b96e9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000b6bb9 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x11] ; ret
0x00000000000b7a19 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x12] ; ret
0x00000000000b5549 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000b9649 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000b6d7a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, [rdi + 0x1f] ; ret
0x00000000000b7bda : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, [rdi + 0x20] ; ret
0x00000000000b63dd : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000b56ea : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000b6d1a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, [rdi + 0x1c] ; ret
0x00000000000b7b7a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000000b568a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000b6d3a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000000b7b9a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, [rdi + 0x1e] ; ret
0x00000000000b56aa : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000b6d5a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, [rdi + 0x1e] ; ret
0x00000000000b7bba : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, [rdi + 0x1f] ; ret
0x00000000000b56ca : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000b5525 : movq qword ptr [rdi], mm0 ; ret
0x00000000000b9615 : movq qword ptr [rdi], mm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000016b2b5 : movq qword ptr [rdi], mm1 ; ret
0x0000000000042e2f : movq xmm0, qword ptr [rsp - 8] ; ret
0x00000000000cf14f : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x00000000000822c0 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001087b2 : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000ba07a : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000000c8793 : movsb byte ptr [rdi], byte ptr [rsi] ; fdiv st(7), st(0) ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000014aeea : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, dx ; dec dword ptr [rax - 0x77] ; ret
0x00000000000ba06c : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000028d6d : movsb byte ptr [rdi], byte ptr [rsi] ; sbb byte ptr [eax], al ; call 0x34fd6
0x00000000000bd8e8 : movsb byte ptr [rdi], byte ptr [rsi] ; sldt word ptr [rax] ; test r15d, r15d ; mov r14, rbp ; setne dl ; jmp 0xbd913
0x00000000001023e8 : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0x8348fff2 ; ret
0x000000000003798a : movsd dword ptr [rdi], dword ptr [rsi] ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x00000000001191f7 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x119208 ; call r12
0x0000000000147bd6 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; jmp 0x147ba1
0x000000000006f7f8 : movsd dword ptr [rdi], dword ptr [rsi] ; cmp bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0x4804
0x0000000000056fe1 : movsd dword ptr [rdi], dword ptr [rsi] ; enter -0x76b4, 7 ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x000000000015afd9 : movsd dword ptr [rdi], dword ptr [rsi] ; or byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000010907f : movsd dword ptr [rdi], dword ptr [rsi] ; or r8b, byte ptr [rax] ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x0000000000057012 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000000f886f : movsd dword ptr [rdi], dword ptr [rsi] ; retf 0xfff2
0x000000000012aa11 : movsd qword ptr [rbp - 0x78], xmm1 ; call rax
0x000000000012ac3f : movsd qword ptr [rbp - 0x78], xmm5 ; call rax
0x0000000000048900 : movsd qword ptr [rbx], xmm0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000042e99 : movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x0000000000042f48 : movsd qword ptr [rsp - 8], xmm0 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000000cebd8 : movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x0000000000042f22 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000015d3d5 : movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000004323e : movss dword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x0000000000194ca4 : movss dword ptr [rsp - 0x28], xmm0 ; ret
0x000000000004330e : movss dword ptr [rsp - 4], xmm0 ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000000433fe : movss xmm0, dword ptr [rsp - 4] ; mov dword ptr [rdi], edx ; ret
0x00000000000432ee : movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000001260ef : movsx eax, bl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000005f44a : movsx eax, byte ptr [rsi] ; cmp edi, r8d ; ja 0x5f43b ; mov eax, r9d ; ret
0x000000000009cf86 : movsx eax, dl ; ret
0x00000000000a6f44 : movsx ecx, byte ptr [rax] ; test cl, cl ; jne 0xa6f41 ; xor eax, eax ; ret
0x00000000000a6eb4 : movsx ecx, byte ptr [rdi + rax] ; cmp ecx, edx ; je 0xa6ebc ; cmp ecx, esi ; je 0xa6ebc ; ret
0x00000000000a6df4 : movsx ecx, byte ptr [rdi + rax] ; test cl, cl ; jne 0xa6df0 ; ret
0x00000000000a6e84 : movsx edx, byte ptr [rdi + rax] ; cmp edx, esi ; je 0xa6e88 ; ret
0x00000000000a6db0 : movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0xa6db0 ; ret
0x000000000006c163 : movsx esi, al ; call 0x64549
0x000000000005f449 : movsx r8d, byte ptr [rsi] ; cmp edi, r8d ; ja 0x5f43c ; mov eax, r9d ; ret
0x00000000001926f7 : movsxd r12, dword ptr [rdx + r12*4] ; add rdx, r12 ; jmp rdx
0x000000000004c37e : movsxd r8, r8d ; call 0x4a119
0x00000000000a7641 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, [r10 + r9] ; jmp r10
0x0000000000168ebb : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000016393b : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, [r11 + r9] ; jmp r9
0x000000000010bd96 : movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x00000000000e808e : movsxd rax, dword ptr [rax + 4] ; test ebx, ebx ; jns 0xe8088 ; lea rax, [rdx + rax*8] ; jmp 0xe807a
0x00000000000e808d : movsxd rax, dword ptr [rax + 4] ; test ebx, ebx ; jns 0xe8089 ; lea rax, [rdx + rax*8] ; jmp 0xe807b
0x00000000000777c1 : movsxd rax, dword ptr [rax + rcx*4] ; add rax, r14 ; jmp rax
0x000000000007de1d : movsxd rax, dword ptr [rax + rcx*4] ; add rax, rdx ; jmp rax
0x0000000000077db1 : movsxd rax, dword ptr [rax + rdx*4] ; add rax, r14 ; jmp rax
0x000000000011e781 : movsxd rax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000009272e : movsxd rax, dword ptr [rbp + 0x10] ; jmp 0x926fa
0x000000000009272d : movsxd rax, dword ptr [rbp + 0x10] ; jmp 0x926fb
0x000000000010bd97 : movsxd rax, dword ptr [rbp + rax*4] ; add rax, r13 ; jmp rax
0x00000000000f93da : movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x00000000000fa0c4 : movsxd rax, dword ptr [rbx + rsi*4] ; add rax, rbx ; jmp rax
0x0000000000077b5b : movsxd rax, dword ptr [rbx - 0x51743] ; call qword ptr [rax]
0x00000000000ee745 : movsxd rax, dword ptr [rcx + r12*4] ; add rax, rcx ; jmp rax
0x000000000006406e : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x0000000000191a67 : movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x0000000000144e96 : movsxd rax, dword ptr [rcx + rsi*4] ; shr rdx, 3 ; add rax, rcx ; jmp rax
0x00000000000cde19 : movsxd rax, dword ptr [rcx] ; add byte ptr [rax], al ; lea rax, [rdi - 0x10] ; ret
0x00000000000ba0ed : movsxd rax, dword ptr [rcx] ; add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000ee746 : movsxd rax, dword ptr [rcx] ; add rax, rcx ; jmp rax
0x00000000000fc7dc : movsxd rax, dword ptr [rdi + r13*4] ; add rax, rdi ; jmp rax
0x000000000007763f : movsxd rax, dword ptr [rdi + rax*4] ; add rax, r14 ; jmp rax
0x0000000000080a42 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000007de5e : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdx ; jmp rax
0x00000000000fc7dd : movsxd rax, dword ptr [rdi + rbp*4] ; add rax, rdi ; jmp rax
0x000000000014bcd7 : movsxd rax, dword ptr [rdi + rcx*4] ; add rax, rdi ; jmp rax
0x00000000000d8e58 : movsxd rax, dword ptr [rdi + rsi*4] ; add rax, rdi ; jmp rax
0x00000000000ee83c : movsxd rax, dword ptr [rdx + r13*4] ; add rax, rdx ; jmp rax
0x00000000000e8b70 : movsxd rax, dword ptr [rdx + r15*4] ; add rax, rdx ; jmp rax
0x0000000000027297 : movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000ee83d : movsxd rax, dword ptr [rdx + rbp*4] ; add rax, rdx ; jmp rax
0x00000000000e3a04 : movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x00000000000e8b71 : movsxd rax, dword ptr [rdx + rdi*4] ; add rax, rdx ; jmp rax
0x00000000000e2ffc : movsxd rax, dword ptr [rdx + rsi*4] ; add rax, rdx ; jmp rax
0x0000000000176059 : movsxd rax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x0000000000075007 : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rdx ; jmp rax
0x0000000000065cee : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000ba5ba : movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x00000000000ba682 : movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000f8a4f : movsxd rax, dword ptr [rsi + rdx*4] ; mov r11, rdi ; add rax, rsi ; jmp rax
0x000000000017c43a : movsxd rax, dword ptr [rsi + rdx] ; sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000017c02a : movsxd rax, dword ptr [rsi + rdx] ; sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x000000000017bb36 : movsxd rax, dword ptr [rsi + rdx] ; sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017c346 : movsxd rax, dword ptr [rsi + rdx] ; sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017bdba : movsxd rax, dword ptr [rsi + rdx] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000017c0fa : movsxd rax, dword ptr [rsi + rdx] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x000000000017c416 : movsxd rax, dword ptr [rsi + rdx] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017c4e6 : movsxd rax, dword ptr [rsi + rdx] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017c29a : movsxd rax, dword ptr [rsi + rdx] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000017ba8a : movsxd rax, dword ptr [rsi + rdx] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000017be8a : movsxd rax, dword ptr [rsi + rdx] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000017c36a : movsxd rax, dword ptr [rsi + rdx] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000017bb5a : movsxd rax, dword ptr [rsi + rdx] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000017bbfc : movsxd rax, dword ptr [rsi + rdx] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017bf5a : movsxd rax, dword ptr [rsi + rdx] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x000000000017c1ca : movsxd rax, dword ptr [rsi + rdx] ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000017bc20 : movsxd rax, dword ptr [rsi + rdx] ; sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000048177 : movsxd rax, dword ptr [rsp + 4] ; jne 0x4818c ; add rsp, 0x18 ; ret
0x0000000000048176 : movsxd rax, dword ptr [rsp + 4] ; jne 0x4818d ; add rsp, 0x18 ; ret
0x000000000004c37f : movsxd rax, eax ; call 0x4a118
0x00000000000cd99c : movsxd rax, ebx ; nop ; mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xcda0c ; ret
0x0000000000181414 : movsxd rax, ecx ; add rax, rdi ; ret
0x00000000001812af : movsxd rax, ecx ; add rax, rdx ; sub rax, rdi ; ret
0x0000000000181341 : movsxd rax, ecx ; ret
0x000000000017e5ab : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000183a68 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x0000000000183288 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000183678 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000182e98 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017f10b : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017e8eb : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000017e0cb : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x0000000000183037 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017ec2b : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017e40b : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017dbeb : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000017edcb : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x0000000000183528 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000182d48 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000183e58 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017df2b : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017e061 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017ed61 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017e881 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000183429 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000183d59 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017f0a1 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017e3a1 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000017dec1 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017ebc1 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x0000000000183579 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000182d99 : movsxd rax, ecx ; sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000155f75 : movsxd rbp, dword ptr [rax] ; mov qword ptr [rbx + 0x20], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000afa79 : movsxd rbx, dword ptr [rdx + 0xc8b000e] ; mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x000000000016bbd9 : movsxd rbx, ebp ; add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000181540 : movsxd rbx, ebx ; cmp ch, byte ptr [rcx] ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000001203ae : movsxd rbx, ebx ; mov qword ptr [rip + 0xc3fa9], rbx ; pop rbx ; ret
0x0000000000120398 : movsxd rbx, ebx ; mov qword ptr [rip + 0xc3fbf], rbx ; pop rbx ; ret
0x000000000016bed9 : movsxd rbx, edx ; add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000b5b5a : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000018aeed : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00000000000b52e9 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000a6fdd : movsxd rcx, dword ptr [r9 + rcx*4] ; add rcx, r9 ; jmp rcx
0x000000000011db2d : movsxd rcx, dword ptr [rax + rax] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000b5b5b : movsxd rcx, dword ptr [rbx + rax*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000168ebc : movsxd rcx, dword ptr [rbx + rcx*4] ; add r9, r11 ; jmp r9
0x000000000016393c : movsxd rcx, dword ptr [rbx + rcx*4] ; lea r9, [r11 + r9] ; jmp r9
0x000000000018aeee : movsxd rcx, dword ptr [rbx + rdx*4] ; add rcx, r11 ; jmp rcx
0x00000000000b52ea : movsxd rcx, dword ptr [rbx + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000a6fde : movsxd rcx, dword ptr [rcx + rcx*4] ; add rcx, r9 ; jmp rcx
0x00000000000fe231 : movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x00000000000d4c31 : movsxd rcx, dword ptr [rdi] ; xchg eax, ecx ; jmp 0xffffffffc2974c41
0x00000000000a7642 : movsxd rcx, dword ptr [rdx + rcx*4] ; lea r10, [r10 + r9] ; jmp r10
0x000000000017b95e : movsxd rcx, dword ptr [rdx + rcx*4] ; pcmpeqb xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x0000000000182b6e : movsxd rcx, dword ptr [rdx + rcx*4] ; vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x00000000000ba5f0 : movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x000000000016d0d9 : movsxd rcx, eax ; add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000980d9 : movsxd rcx, ebx ; adc al, 0 ; jne 0x980f4 ; jmp 0x9810e
0x000000000016cdd9 : movsxd rcx, ebx ; add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000018159d : movsxd rcx, ecx ; add rax, rcx ; sub rax, rdi ; ret
0x000000000018132f : movsxd rcx, ecx ; lea rax, [rdx + rcx] ; sub rax, rdi ; ret
0x000000000016cad9 : movsxd rcx, esi ; add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000418a0 : movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x0000000000098d59 : movsxd rdi, dword ptr [rbp - 0x76b70001] ; ret
0x00000000000418a1 : movsxd rdi, dword ptr [rdx + rdi*4] ; add rdi, r10 ; jmp rdi
0x0000000000035455 : movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000352e5 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000035335 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 2 ; movzx eax, ax ; ret
0x00000000000353d5 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 4 ; movzx eax, ax ; ret
0x00000000000352f5 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 8 ; movzx eax, ax ; ret
0x000000000009c135 : movsxd rdi, esi ; movups xmmword ptr [rbx + 0x38], xmm0 ; mov qword ptr [rbx], rdi ; call rcx
0x0000000000163a0f : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000014707e : movsxd rdx, dword ptr [r8 + rcx*4] ; add rdx, r8 ; jmp rdx
0x00000000000a7182 : movsxd rdx, dword ptr [r8 + rdx*4] ; add rdx, r8 ; jmp rdx
0x000000000014707f : movsxd rdx, dword ptr [rax + rcx*4] ; add rdx, r8 ; jmp rdx
0x00000000000a7183 : movsxd rdx, dword ptr [rax + rdx*4] ; add rdx, r8 ; jmp rdx
0x00000000000a70b2 : movsxd rdx, dword ptr [rax + rdx*4] ; add rdx, rax ; jmp rdx
0x000000000009c453 : movsxd rdx, dword ptr [rax - 3] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000163a10 : movsxd rdx, dword ptr [rbx + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000041796 : movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x0000000000055f7b : movsxd rdx, dword ptr [rsi + rdx*4] ; add rdx, rsi ; cmp ecx, 0x2f ; jmp rdx
0x000000000013b3ea : movsxd rdx, eax ; add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x000000000016c7d9 : movsxd rdx, ecx ; add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000016c1d9 : movsxd rdx, edi ; add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000181505 : movsxd rdx, edx ; cmp bh, byte ptr [rcx] ; retf 0x8e0f
0x0000000000181241 : movsxd rdx, edx ; cmp cl, byte ptr [rax - 0x7d] ; ret 0x2910
0x00000000000efce4 : movsxd rdx, edx ; mov eax, 1 ; add rdx, rcx ; jmp 0xefd0a
0x00000000000efce3 : movsxd rdx, edx ; mov eax, 1 ; add rdx, rcx ; jmp 0xefd0b
0x000000000013b241 : movsxd rdx, edx ; mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x000000000013b7de : movsxd rdx, esi ; ret
0x000000000016c4d9 : movsxd rdx, esp ; add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000032c76 : movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x0000000000032c77 : movsxd rsi, dword ptr [rax + rcx*4] ; add rsi, r8 ; jmp rsi
0x00000000000eae5b : movsxd rsi, dword ptr [rcx + rsi] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000d069c : movsxd rsi, edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000018f9dc : movsxd rsi, esi ; ret 0x7520
0x0000000000155f79 : movsxd rsp, dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000181405 : movsxd rsp, dword ptr [rdi] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x00000000001926f8 : movsxd rsp, dword ptr [rdx] ; add rdx, r12 ; jmp rdx
0x00000000000cebd9 : movups xmm0, xmmword ptr [rsp - 0x10] ; ret
0x00000000000433ff : movups xmm0, xmmword ptr [rsp - 4] ; mov dword ptr [rdi], edx ; ret
0x00000000000432ef : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x0000000000042f23 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x00000000000ba24f : movups xmmword ptr [r11], xmm4 ; ret
0x00000000000ba2d6 : movups xmmword ptr [r11], xmm8 ; ret
0x000000000014f2f9 : movups xmmword ptr [r8 + 0x20], xmm2 ; ret
0x000000000014f2be : movups xmmword ptr [r8 + 0x30], xmm0 ; ret
0x000000000014bcfe : movups xmmword ptr [r8 + 8], xmm0 ; ret
0x000000000014f2fa : movups xmmword ptr [rax + 0x20], xmm2 ; ret
0x000000000014f2bf : movups xmmword ptr [rax + 0x30], xmm0 ; ret
0x00000000000871d5 : movups xmmword ptr [rax + 0x40], xmm0 ; pop rbx ; ret
0x000000000014bcff : movups xmmword ptr [rax + 8], xmm0 ; ret
0x00000000001409bb : movups xmmword ptr [rax], xmm0 ; add rsp, 8 ; ret
0x000000000008639e : movups xmmword ptr [rax], xmm0 ; ret
0x00000000000918c9 : movups xmmword ptr [rbp + 0x38], xmm0 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012aa12 : movups xmmword ptr [rbp - 0x78], xmm1 ; call rax
0x000000000012abb4 : movups xmmword ptr [rbp - 0x78], xmm2 ; call r8
0x000000000012ad5c : movups xmmword ptr [rbp - 0x78], xmm3 ; call r8
0x000000000012acab : movups xmmword ptr [rbp - 0x78], xmm4 ; call rax
0x000000000012ac40 : movups xmmword ptr [rbp - 0x78], xmm5 ; call rax
0x000000000012b173 : movups xmmword ptr [rbp - 0x78], xmm6 ; call rax
0x000000000012b245 : movups xmmword ptr [rbp - 0x78], xmm7 ; call rax
0x000000000012ae30 : movups xmmword ptr [rbp - 0x78], xmm7 ; call rcx
0x000000000009c5a9 : movups xmmword ptr [rbx + 0x18], xmm0 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008d91e : movups xmmword ptr [rbx + 0x18], xmm0 ; movups xmmword ptr [rbx + 0x28], xmm0 ; pop rbx ; ret
0x000000000008d922 : movups xmmword ptr [rbx + 0x28], xmm0 ; pop rbx ; ret
0x00000000000910ee : movups xmmword ptr [rbx + 0x38], xmm0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000091029 : movups xmmword ptr [rbx + 0x38], xmm0 ; mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000009c137 : movups xmmword ptr [rbx + 0x38], xmm0 ; mov qword ptr [rbx], rdi ; call rcx
0x000000000009c20e : movups xmmword ptr [rbx + 0x38], xmm0 ; mov qword ptr [rbx], rsi ; call rcx
0x0000000000090ba1 : movups xmmword ptr [rbx + 0x48], xmm0 ; pop rbx ; ret
0x000000000008dc71 : movups xmmword ptr [rbx + 8], xmm0 ; pop rbx ; ret
0x000000000009ca84 : movups xmmword ptr [rbx], xmm0 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000048901 : movups xmmword ptr [rbx], xmm0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000ba2d7 : movups xmmword ptr [rbx], xmm0 ; ret
0x000000000014dd63 : movups xmmword ptr [rbx], xmm1 ; mov qword ptr [rbx + 0x10], rax ; jmp 0x14dd37
0x00000000000ba250 : movups xmmword ptr [rbx], xmm4 ; ret
0x00000000000ba24b : movups xmmword ptr [rcx - 0x30], xmm0 ; movups xmmword ptr [r11], xmm4 ; ret
0x00000000000ba24a : movups xmmword ptr [rcx - 0x30], xmm8 ; movups xmmword ptr [r11], xmm4 ; ret
0x0000000000155d1c : movups xmmword ptr [rdi + 0x18], xmm0 ; mov dword ptr [rdi + 0x28], edx ; ret
0x000000000010b4bd : movups xmmword ptr [rdi + 0x20], xmm0 ; movups xmmword ptr [rdi + 0x30], xmm0 ; movups xmmword ptr [rdi + 0x40], xmm0 ; ret
0x00000000000ba2ce : movups xmmword ptr [rdi + 0x20], xmm6 ; movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000010b4c1 : movups xmmword ptr [rdi + 0x30], xmm0 ; movups xmmword ptr [rdi + 0x40], xmm0 ; ret
0x00000000000ba2d2 : movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000010b4c5 : movups xmmword ptr [rdi + 0x40], xmm0 ; ret
0x00000000000448cb : movups xmmword ptr [rdi + 0x50], xmm0 ; movups xmmword ptr [rdi + 0x60], xmm0 ; movups xmmword ptr [rdi + 0x70], xmm0 ; ret
0x00000000000448cf : movups xmmword ptr [rdi + 0x60], xmm0 ; movups xmmword ptr [rdi + 0x70], xmm0 ; ret
0x00000000000448d3 : movups xmmword ptr [rdi + 0x70], xmm0 ; ret
0x000000000010b8c5 : movups xmmword ptr [rdi + 0x78], xmm7 ; ret
0x000000000010c23a : movups xmmword ptr [rdi + 0xf8], xmm7 ; ret
0x0000000000090ad7 : movups xmmword ptr [rdi + 8], xmm0 ; ret
0x000000000013b4cf : movups xmmword ptr [rdi + rdx + 8], xmm0 ; ret
0x00000000000ba012 : movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000000ba1b4 : movups xmmword ptr [rdi + rdx - 0x10], xmm2 ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x00000000000ba1b9 : movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x00000000000ba191 : movups xmmword ptr [rdi + rdx - 0x30], xmm6 ; movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x00000000000ba196 : movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x000000000005880c : movups xmmword ptr [rdi], xmm0 ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x00000000000ba00f : movups xmmword ptr [rdi], xmm0 ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000044c71 : movups xmmword ptr [rdi], xmm0 ; ret
0x0000000000042e9a : movups xmmword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x000000000004323f : movups xmmword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x0000000000029db0 : movups xmmword ptr [rdx + 0x48], xmm0 ; add rsp, 0x18 ; ret
0x000000000014bd13 : movups xmmword ptr [rdx], xmm1 ; ret
0x000000000014e9fb : movups xmmword ptr [rdx], xmm2 ; ret
0x000000000014f30b : movups xmmword ptr [rdx], xmm3 ; ret
0x000000000014f2eb : movups xmmword ptr [rdx], xmm4 ; ret
0x000000000010b875 : movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x000000000014709b : movups xmmword ptr [rsi + 8], xmm0 ; ret
0x000000000014706b : movups xmmword ptr [rsi + 8], xmm1 ; ret
0x0000000000048298 : movups xmmword ptr [rsi], xmm0 ; cmp edx, -1 ; jne 0x4825e ; xor eax, eax ; ret
0x000000000014e8f9 : movups xmmword ptr [rsi], xmm0 ; mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000014f239 : movups xmmword ptr [rsi], xmm0 ; mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000001560a2 : movups xmmword ptr [rsp + 0x28], xmm0 ; call rdx
0x0000000000194ca5 : movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x000000000004330f : movups xmmword ptr [rsp - 4], xmm0 ; movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000042f49 : movups xmmword ptr [rsp - 8], xmm0 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000027aba : movzx eax, al ; add eax, 1 ; push rax ; call rbx
0x000000000014cab6 : movzx eax, al ; add eax, 1 ; ret
0x000000000015614b : movzx eax, al ; add rsp, 0x18 ; ret
0x000000000010e991 : movzx eax, al ; add rsp, 0x58 ; ret
0x0000000000148f40 : movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000015e3d1 : movzx eax, al ; jmp 0x15e3a4
0x00000000000cc9cd : movzx eax, al ; lea eax, [rax + rax - 1] ; ret
0x00000000000e374e : movzx eax, al ; lea rax, [rax + rax - 1] ; ret
0x00000000000e910f : movzx eax, al ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x0000000000064bd4 : movzx eax, al ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000065cea : movzx eax, al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000639f7 : movzx eax, al ; neg eax ; pop rbx ; ret
0x00000000000639c9 : movzx eax, al ; neg eax ; ret
0x000000000008d3d9 : movzx eax, al ; pop rbx ; neg eax ; ret
0x000000000014798e : movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000004498b : movzx eax, al ; ret
0x00000000000aaef3 : movzx eax, al ; sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00000000000350b5 : movzx eax, ax ; ret
0x000000000013e38e : movzx eax, bl ; neg eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000090034 : movzx eax, bpl ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000077639 : movzx eax, byte ptr [r8 + rax] ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, r14 ; jmp rax
0x000000000007763a : movzx eax, byte ptr [rax + rax] ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, r14 ; jmp rax
0x00000000000a8bad : movzx eax, byte ptr [rax + rcx] ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x0000000000149c9e : movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x000000000008ea2c : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008d352 : movzx eax, byte ptr [rax] ; ret
0x000000000011b663 : movzx eax, byte ptr [rcx - 1] ; cmp al, 0x2f ; jne 0x11b6ab ; mov rdx, rcx ; jmp 0x11b680
0x0000000000101c00 : movzx eax, byte ptr [rdi + 9] ; and eax, 0xf ; ret
0x000000000017b9eb : movzx eax, byte ptr [rdi + rcx] ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x00000000000a8a3f : movzx eax, byte ptr [rdi + rdx] ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x00000000000a89d8 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000018fa00 : movzx eax, byte ptr [rdi - 0x10] ; movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x000000000018fa60 : movzx eax, byte ptr [rdi - 0xa] ; movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x000000000018fa50 : movzx eax, byte ptr [rdi - 0xb] ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000018fa40 : movzx eax, byte ptr [rdi - 0xc] ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000018fa30 : movzx eax, byte ptr [rdi - 0xd] ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000018fa20 : movzx eax, byte ptr [rdi - 0xe] ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000018fa10 : movzx eax, byte ptr [rdi - 0xf] ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000018ff12 : movzx eax, byte ptr [rdi - 1] ; cmp al, byte ptr [rsi - 1] ; jne 0x18ff40 ; xor eax, eax ; ret
0x000000000018bda0 : movzx eax, byte ptr [rdi - 1] ; movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x000000000018bb53 : movzx eax, byte ptr [rdi - 1] ; movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000018f9e7 : movzx eax, byte ptr [rdi - 9] ; movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x0000000000182830 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000aaed0 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000000a89f3 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000181df3 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; vzeroupper ; ret
0x00000000000c5243 : movzx eax, byte ptr [rdx + rax] ; cmp eax, 0xff ; je 0xc525a ; ret
0x000000000008fec0 : movzx eax, byte ptr [rdx] ; ret
0x00000000000a714f : movzx eax, byte ptr [rsp + 0xe] ; mov byte ptr [rdi + 6], al ; mov rax, rdi ; ret
0x0000000000196da8 : movzx eax, byte ptr [rsp + 0xf] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000a7116 : movzx eax, byte ptr [rsp - 0xc] ; mov byte ptr [rdi + 4], al ; mov rax, rdi ; ret
0x00000000000a70f8 : movzx eax, byte ptr [rsp - 6] ; mov byte ptr [rdi + 2], al ; mov rax, rdi ; ret
0x0000000000090035 : movzx eax, ch ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d6af5 : movzx eax, cl ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000ba650 : movzx eax, cl ; pop rbx ; ret
0x00000000000ba45d : movzx eax, dh ; mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000012f350 : movzx eax, dh ; or eax, edi ; bswap eax ; ret
0x000000000015e3d0 : movzx eax, r8b ; jmp 0x15e3a5
0x000000000012f333 : movzx eax, si ; or eax, edi ; bswap eax ; ret
0x00000000000ba45c : movzx eax, sil ; mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000012f34f : movzx eax, sil ; or eax, edi ; bswap eax ; ret
0x0000000000035485 : movzx eax, word ptr [rax + rdi*2 + 0x100] ; and eax, esi ; ret
0x00000000000351ce : movzx eax, word ptr [rax + rdi*2] ; and ax, 0x100 ; movzx eax, ax ; ret
0x00000000000351ee : movzx eax, word ptr [rax + rdi*2] ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000003512e : movzx eax, word ptr [rax + rdi*2] ; and ax, 0x200 ; movzx eax, ax ; ret
0x00000000000351ae : movzx eax, word ptr [rax + rdi*2] ; and ax, 0x2000 ; movzx eax, ax ; ret
0x00000000000350ce : movzx eax, word ptr [rax + rdi*2] ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000003516e : movzx eax, word ptr [rax + rdi*2] ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000003510e : movzx eax, word ptr [rax + rdi*2] ; and ax, 0x800 ; movzx eax, ax ; ret
0x000000000003514e : movzx eax, word ptr [rax + rdi*2] ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000003526e : movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000000350ee : movzx eax, word ptr [rax + rdi*2] ; and eax, 2 ; movzx eax, ax ; ret
0x000000000003518e : movzx eax, word ptr [rax + rdi*2] ; and eax, 4 ; movzx eax, ax ; ret
0x00000000000350ae : movzx eax, word ptr [rax + rdi*2] ; and eax, 8 ; movzx eax, ax ; ret
0x000000000012b742 : movzx eax, word ptr [rax + rdx*2] ; shr ax, 0xe ; and eax, 1 ; ret
0x000000000010b8d0 : movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x0000000000152e6d : movzx eax, word ptr [rsp + 6] ; jmp 0x152e24
0x00000000000a712e : movzx eax, word ptr [rsp - 0x14] ; mov word ptr [rdi + 4], ax ; mov rax, rdi ; ret
0x00000000000fc7d9 : movzx ebp, ch ; movsxd rax, dword ptr [rdi + r13*4] ; add rax, rdi ; jmp rax
0x00000000000ee839 : movzx ebp, ch ; movsxd rax, dword ptr [rdx + r13*4] ; add rax, rdx ; jmp rax
0x000000000013de3f : movzx ecx, byte ptr [r11 - 1] ; test cl, cl ; jne 0x13de88 ; pop rbx ; ret
0x000000000013de40 : movzx ecx, byte ptr [rbx - 1] ; test cl, cl ; jne 0x13de87 ; pop rbx ; ret
0x00000000000fe22c : movzx ecx, byte ptr [rdx + 8] ; movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x00000000000b9a2a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xb9a29 ; ret
0x00000000000b9ada : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xb9ad9 ; ret
0x00000000000a89d4 : movzx ecx, byte ptr [rsi + rdx] ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x00000000000a8c96 : movzx ecx, byte ptr [rsi + rdx] ; test al, al ; jne 0xa8c8c ; xor eax, eax ; sub eax, ecx ; ret
0x000000000018bda4 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x00000000000ba108 : movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a89f0 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000181df0 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; vzeroupper ; ret
0x0000000000182833 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000004189d : movzx edi, al ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000011d8c4 : movzx edx, bh ; shr rax, 0xc ; xor al, al ; or eax, edx ; ret
0x000000000008aaf2 : movzx edx, byte ptr [rax] ; pop rbx ; mov eax, edx ; ret
0x00000000000a6cd6 : movzx edx, byte ptr [rcx] ; test dl, dl ; jne 0xa6cd4 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x0000000000041e78 : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x41e5f ; ret
0x00000000001818d7 : movzx edx, byte ptr [rdx + rcx + 0x40] ; sub eax, edx ; vzeroupper ; ret
0x00000000001817f1 : movzx edx, byte ptr [rdx + rcx + 0x60] ; sub eax, edx ; vzeroupper ; ret
0x00000000000a8bb1 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000018178b : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; vzeroupper ; ret
0x00000000001817b5 : movzx edx, byte ptr [rdx + rdi + 0x20] ; sub eax, edx ; vzeroupper ; ret
0x00000000001817d5 : movzx edx, byte ptr [rdx + rdi + 0x40] ; sub eax, edx ; vzeroupper ; ret
0x0000000000181c2b : movzx edx, byte ptr [rdx + rdi] ; sub eax, edx ; vzeroupper ; ret
0x0000000000182a49 : movzx edx, byte ptr [rsi + rcx + 0x20] ; sub eax, edx ; vzeroupper ; ret
0x0000000000182a69 : movzx edx, byte ptr [rsi + rcx + 0x40] ; sub eax, edx ; vzeroupper ; ret
0x0000000000182a2f : movzx edx, byte ptr [rsi + rcx + 0x60] ; sub eax, edx ; vzeroupper ; ret
0x000000000017b9ef : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x00000000001827b8 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; vzeroupper ; ret
0x0000000000181629 : movzx edx, byte ptr [rsi + rdx + 0x20] ; sub eax, edx ; vzeroupper ; ret
0x0000000000181649 : movzx edx, byte ptr [rsi + rdx + 0x40] ; sub eax, edx ; vzeroupper ; ret
0x0000000000181669 : movzx edx, byte ptr [rsi + rdx + 0x60] ; sub eax, edx ; vzeroupper ; ret
0x00000000000a8a43 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000018160a : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; vzeroupper ; ret
0x000000000017c62e : movzx edx, byte ptr [rsi + rdx] ; test r8d, r8d ; je 0x17c644 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000017d613 : movzx edx, byte ptr [rsi + rdx] ; test r8d, r8d ; je 0x17d629 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000018fa04 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x000000000018fa64 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x000000000018fa54 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000018fa44 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000018fa34 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000018fa24 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000018fa14 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000016b200 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000018bb57 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000018f9eb : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x0000000000188c70 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, [rdi + 1] ; vzeroupper ; ret
0x0000000000187390 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; mov byte ptr [rdi + 1], 0 ; vzeroupper ; ret
0x000000000016b8e0 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000187f40 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; vzeroupper ; ret
0x00000000000aaed3 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000000a7082 : movzx edx, byte ptr [rsp + 0x16] ; mov byte ptr [rdi + 6], dl ; ret
0x00000000000a7234 : movzx edx, byte ptr [rsp + 0xe] ; mov byte ptr [rdi + 6], dl ; ret
0x00000000000a7049 : movzx edx, byte ptr [rsp - 0xc] ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a702b : movzx edx, byte ptr [rsp - 6] ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000fdaf6 : movzx edx, cl ; movsxd rdx, dword ptr [r8 + rdx*4] ; add rdx, r8 ; jmp rdx
0x000000000011d8c3 : movzx edx, dil ; shr rax, 0xc ; xor al, al ; or eax, edx ; ret
0x00000000000aaef9 : movzx edx, dl ; sub eax, edx ; ret
0x000000000016b180 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000016b870 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000186b10 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; vzeroupper ; ret
0x00000000000a7061 : movzx edx, word ptr [rsp + 0xc] ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a7213 : movzx edx, word ptr [rsp - 0x14] ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a6c09 : movzx esi, byte ptr [rcx] ; test sil, sil ; jne 0xa6c0b ; mov qword ptr [rdx], rcx ; ret
0x00000000000fa0c0 : movzx esi, dh ; movsxd rax, dword ptr [rbx + rsi*4] ; add rax, rbx ; jmp rax
0x00000000000fca5b : movzx esi, dh ; movsxd rax, dword ptr [rdi + rsi*4] ; add rax, rdi ; jmp rax
0x00000000000fa0bf : movzx esi, sil ; movsxd rax, dword ptr [rbx + rsi*4] ; add rax, rbx ; jmp rax
0x00000000000fca5a : movzx esi, sil ; movsxd rax, dword ptr [rdi + rsi*4] ; add rax, rdi ; jmp rax
0x00000000000ba131 : movzx esi, word ptr [rsi] ; mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x00000000000ee742 : movzx esp, ah ; movsxd rax, dword ptr [rcx + r12*4] ; add rax, rcx ; jmp rax
0x00000000000ee741 : movzx r12d, r12b ; movsxd rax, dword ptr [rcx + r12*4] ; add rax, rcx ; jmp rax
0x00000000000fc7d8 : movzx r13d, r13b ; movsxd rax, dword ptr [rdi + r13*4] ; add rax, rdi ; jmp rax
0x00000000000ee838 : movzx r13d, r13b ; movsxd rax, dword ptr [rdx + r13*4] ; add rax, rdx ; jmp rax
0x000000000008ea2b : movzx r8, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000097998 : mul byte ptr [rdi + rax*8] ; or al, 0 ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x00000000000affe7 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000147a06 : mul dl ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000166c45 : mul dword ptr [rbx] ; add eax, 0x14634900 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000e15d5 : mul dword ptr [rdi - 0x3876fffc] ; mov eax, 0x22 ; syscall
0x0000000000117c7c : mulps xmm4, xmm5 ; comisd xmm1, xmm4 ; jae 0x117c7c ; divsd xmm0, xmm2 ; jmp 0x117ce6
0x00000000000551f9 : neg byte ptr [rbx - 0x3d] ; nop dword ptr [rax] ; ret
0x0000000000044774 : neg byte ptr [rcx] ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000013e391 : neg eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000cdae5 : neg eax ; cmp ecx, r8d ; cmovg eax, edx ; ret
0x00000000001124a3 : neg eax ; jmp 0x11246c
0x0000000000101980 : neg eax ; mov dword ptr fs:[rax], r8d ; mov eax, 0xffffffff ; ret
0x000000000010d6d1 : neg eax ; mov dword ptr fs:[rcx], eax ; mov eax, 0xffffffff ; jmp 0x10d6aa
0x0000000000114281 : neg eax ; mov dword ptr fs:[rcx], eax ; mov eax, 0xffffffff ; jmp 0x11425a
0x0000000000114331 : neg eax ; mov dword ptr fs:[rcx], eax ; mov eax, 0xffffffff ; jmp 0x11430a
0x00000000000e16a9 : neg eax ; mov dword ptr fs:[rcx], eax ; mov eax, 0xffffffff ; jmp 0xe1683
0x00000000000441c7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001159cf : neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; jmp 0x1159b1
0x0000000000115a9f : neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; jmp 0x115a80
0x0000000000044197 : neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000048b57 : neg eax ; mov dword ptr fs:[rdx], eax ; mov rax, -1 ; ret
0x000000000018972f : neg eax ; or eax, 1 ; vzeroupper ; ret
0x0000000000043177 : neg eax ; or eax, ecx ; sar eax, 0x1f ; not eax ; and eax, edx ; ret
0x00000000000ead12 : neg eax ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000bca24 : neg eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000049624 : neg eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000639fa : neg eax ; pop rbx ; ret
0x000000000002740d : neg eax ; ret
0x0000000000053811 : neg edx ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000012c670 : neg edx ; cmp eax, -0x16 ; mov eax, 3 ; cmovne eax, edx ; ret
0x00000000001019cf : neg edx ; mov dword ptr fs:[rax], edx ; mov eax, 0xffffffff ; ret
0x000000000010197f : neg r8d ; mov dword ptr fs:[rax], r8d ; mov eax, 0xffffffff ; ret
0x00000000000bca23 : neg rax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001087b4 : nop ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000096d6c : nop ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x820f
0x00000000000a5aac : nop ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d41
0x000000000016a937 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000004430f : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000f3cdc : nop ; add byte ptr [rax], al ; add byte ptr [rbx - 0x16f7dbb4], cl ; ret 0xfffe
0x000000000010bac4 : nop ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; sub dword ptr [rsp + 0xa0], eax ; syscall
0x000000000018b20c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000012dc1c : nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000113ded : nop ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000cfc6a : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00000000000551ef : nop ; add rax, 1 ; cmp byte ptr [rax + 1], 0 ; jne 0x551fc ; pop rbx ; ret
0x0000000000077db3 : nop ; add rax, r14 ; jmp rax
0x00000000000a7185 : nop ; add rdx, r8 ; jmp rdx
0x00000000000a70b4 : nop ; add rdx, rax ; jmp rdx
0x0000000000027bef : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000efed8 : nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000187c9f : nop ; bsf edx, edx ; add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x187c44
0x0000000000187c9e : nop ; bsf edx, edx ; add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x187c45
0x00000000001889bf : nop ; bsf edx, edx ; add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x188959
0x00000000001889be : nop ; bsf edx, edx ; add rsi, rcx ; add edx, 0x20 ; sub edx, ecx ; jmp 0x18895a
0x00000000000aac6f : nop ; bsr eax, eax ; add rax, rdi ; ret
0x000000000013be6f : nop ; call 0x1580b3
0x000000000013be6e : nop ; call 0x1580b4
0x0000000000138d7f : nop ; call 0x25320
0x0000000000138d7e : nop ; call 0x25321
0x000000000015e22f : nop ; call rax
0x000000000002836b : nop ; call rcx
0x000000000012a58f : nop ; cmp edi, 0x56 ; je 0x12a5ab ; mov eax, 7 ; ret
0x000000000011156f : nop ; cmp edx, 4 ; ja 0x11158c ; mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x00000000000dba7f : nop ; cmp esi, 1 ; je 0xdba98 ; xor eax, eax ; ret
0x00000000000dba7e : nop ; cmp esi, 1 ; je 0xdba99 ; xor eax, eax ; ret
0x000000000009105f : nop ; cmp qword ptr [rdi + 0x38], 0 ; je 0x91078 ; ret
0x000000000009105e : nop ; cmp qword ptr [rdi + 0x38], 0 ; je 0x91079 ; ret
0x00000000000840ef : nop ; cmp qword ptr [rdi + 0x48], 0 ; je 0x840ba ; call 0x90b8a
0x00000000000840ee : nop ; cmp qword ptr [rdi + 0x48], 0 ; je 0x840bb ; call 0x90b8b
0x0000000000105737 : nop ; jmp 0x105707
0x0000000000043c7f : nop ; jmp rdx
0x000000000013a46f : nop ; lea eax, [rdi + 9] ; and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x0000000000044e1f : nop ; lea eax, [rdx - 1] ; mov dword ptr [rip + 0x19f37f], eax ; mov eax, edx ; ret
0x000000000018e70f : nop ; lea rax, [rdi + 1] ; ret
0x000000000018e6ff : nop ; lea rax, [rdi] ; ret
0x0000000000151a8f : nop ; lea rax, [rip + 0x97f29] ; pop rbx ; ret
0x000000000007ad3d : nop ; lea rdx, [rip - 0x441] ; add rax, rdx ; jmp rax
0x000000000017848f : nop ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x00000000000eaa2f : nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000a719f : nop ; mov byte ptr [rdi], 0 ; lea rax, [rdi + rax - 1] ; ret
0x00000000000ce46f : nop ; mov ch, dh ; and ch, 0xf ; je 0xce49c ; add rax, 2 ; ret
0x000000000016550f : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000000b785f : nop ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, [rdi + 1] ; ret
0x000000000012c67f : nop ; mov dword ptr [r8], edx ; xor eax, eax ; ret
0x000000000017616f : nop ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x00000000000b641f : nop ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000b643f : nop ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000b642f : nop ; mov dword ptr [rdi], edx ; ret
0x0000000000093573 : nop ; mov dword ptr [rip + 0x154072], eax ; ret
0x00000000001656ef : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000000b543f : nop ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000011e86f : nop ; mov eax, 0x11f ; syscall
0x000000000011e8ff : nop ; mov eax, 0x134 ; syscall
0x000000000011e98f : nop ; mov eax, 0x13f ; syscall
0x000000000010d0df : nop ; mov eax, 0x15 ; syscall
0x000000000011765f : nop ; mov eax, 0x1c ; syscall
0x00000000000e150f : nop ; mov eax, 0x25 ; syscall
0x000000000011f0df : nop ; mov eax, 0x30 ; syscall
0x000000000011eadf : nop ; mov eax, 0x31 ; syscall
0x000000000011ec3f : nop ; mov eax, 0x32 ; syscall
0x000000000011ebaf : nop ; mov eax, 0x34 ; syscall
0x000000000011fa1f : nop ; mov eax, 0x43 ; syscall
0x000000000015da50 : nop ; mov eax, 0x48000001 ; mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000015df0b : nop ; mov eax, 0x48000001 ; mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000010d85f : nop ; mov eax, 0x50 ; syscall
0x000000000010cbef : nop ; mov eax, 0x53 ; syscall
0x000000000010e99f : nop ; mov eax, 0x56 ; syscall
0x000000000010eabf : nop ; mov eax, 0x57 ; syscall
0x000000000010e9ff : nop ; mov eax, 0x58 ; syscall
0x000000000010e14f : nop ; mov eax, 0x5c ; syscall
0x000000000011e77f : nop ; mov eax, 0x63 ; syscall
0x00000000000e293f : nop ; mov eax, 0x79 ; syscall
0x000000000011dbaf : nop ; mov eax, 0x7a ; syscall
0x000000000011ddbf : nop ; mov eax, 0x87 ; syscall
0x000000000010c9af : nop ; mov eax, 0x89 ; syscall
0x00000000001176ef : nop ; mov eax, 0x95 ; syscall
0x000000000011466f : nop ; mov eax, 0x99 ; syscall
0x000000000011e32f : nop ; mov eax, 0x9f ; syscall
0x00000000001141af : nop ; mov eax, 0xa3 ; syscall
0x000000000011e4df : nop ; mov eax, 0xb1 ; syscall
0x000000000011e68f : nop ; mov eax, 0xb4 ; syscall
0x00000000001132ef : nop ; mov eax, 0xc ; syscall
0x000000000011b8af : nop ; mov eax, 0xc2 ; syscall
0x000000000011b90f : nop ; mov eax, 0xc3 ; syscall
0x000000000011b7ef : nop ; mov eax, 0xc4 ; syscall
0x000000000011b99f : nop ; mov eax, 0xc5 ; syscall
0x000000000012bd94 : nop ; mov eax, 0xca ; syscall
0x00000000000dc9bf : nop ; mov eax, 0xd9 ; syscall
0x000000000011e53f : nop ; mov eax, 0xfe ; syscall
0x00000000001132cf : nop ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000639ff : nop ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000879bf : nop ; mov eax, 0xffffffff ; ret
0x00000000000ff2bf : nop ; mov eax, 2 ; ret
0x00000000001123ef : nop ; mov eax, 3 ; syscall
0x000000000014bd7f : nop ; mov eax, dword ptr [r8] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000009268f : nop ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000000cd99f : nop ; mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xcda09 ; ret
0x00000000000cd99e : nop ; mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xcda0a ; ret
0x00000000000cd9cf : nop ; mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0xcda09 ; ret
0x00000000000cd9ef : nop ; mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xcda09 ; ret
0x00000000000cd9ee : nop ; mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xcda0a ; ret
0x00000000000ecaaf : nop ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x000000000011277f : nop ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x00000000000dc9ef : nop ; mov eax, dword ptr [rdi] ; ret
0x000000000008d2ef : nop ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x0000000000029b6f : nop ; mov eax, dword ptr [rip + 0x1bcb7e] ; test eax, eax ; je 0x29b8b ; ret
0x0000000000029b6e : nop ; mov eax, dword ptr [rip + 0x1bcb7e] ; test eax, eax ; je 0x29b8c ; ret
0x000000000013fbef : nop ; mov eax, dword ptr [rip + 0xa99ce] ; test eax, eax ; je 0x13fc0b ; ret
0x000000000013fbee : nop ; mov eax, dword ptr [rip + 0xa99ce] ; test eax, eax ; je 0x13fc0c ; ret
0x000000000012f2ff : nop ; mov eax, edi ; and eax, 0xffffff ; ret
0x000000000012f2cf : nop ; mov eax, edi ; rol ax, 8 ; ret
0x00000000001515ef : nop ; mov ebx, 0xffffffff ; jmp 0x1515c8
0x00000000001515ee : nop ; mov ebx, 0xffffffff ; jmp 0x1515c9
0x000000000013957f : nop ; mov edi, dword ptr [rdi] ; mov eax, 3 ; syscall
0x0000000000165aaf : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000b6a5f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x0000000000186b2f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; vzeroupper ; ret
0x0000000000047c0f : nop ; mov edx, edi ; mov eax, edi ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x0000000000087452 : nop ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000001761af : nop ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x00000000000b647f : nop ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000932b3 : nop ; mov qword ptr [rip + 0x15102d], rax ; ret
0x00000000000932a3 : nop ; mov qword ptr [rip + 0x151035], rax ; ret
0x0000000000093253 : nop ; mov qword ptr [rip + 0x15103d], rax ; ret
0x0000000000093243 : nop ; mov qword ptr [rip + 0x151055], rax ; ret
0x000000000013df9f : nop ; mov r10, rax ; mov byte ptr [r10], 0 ; ret
0x000000000011e95f : nop ; mov r10, rcx ; mov eax, 0x137 ; syscall
0x000000000011e65f : nop ; mov r10, rcx ; mov eax, 0x19 ; syscall
0x0000000000111d4f : nop ; mov r10, rcx ; mov eax, 0x28 ; syscall
0x000000000011e71f : nop ; mov r10, rcx ; mov eax, 0xb2 ; syscall
0x000000000011e74f : nop ; mov r10, rcx ; mov eax, 0xb3 ; syscall
0x000000000015a8ef : nop ; mov r10, rcx ; mov eax, 0xb5 ; syscall
0x000000000015a93f : nop ; mov r10, rcx ; mov eax, 0xb6 ; syscall
0x000000000011b87f : nop ; mov r10, rcx ; mov eax, 0xbf ; syscall
0x000000000011b7bf : nop ; mov r10, rcx ; mov eax, 0xc1 ; syscall
0x000000000011186f : nop ; mov r10d, ecx ; mov eax, 0xdd ; syscall
0x00000000001458df : nop ; mov r15d, 2 ; jmp 0x1458ba
0x00000000001458de : nop ; mov r15d, 2 ; jmp 0x1458bb
0x0000000000091adf : nop ; mov rax, -1 ; ret
0x00000000000ce4af : nop ; mov rax, 1 ; ret
0x00000000000dc9af : nop ; mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000008c27f : nop ; mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000008c16f : nop ; mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x00000000000898cf : nop ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000009296f : nop ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000014011f : nop ; mov rax, qword ptr [rip + 0xa3ec9] ; mov rax, qword ptr fs:[rax] ; ret
0x000000000003544f : nop ; mov rax, qword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000018829f : nop ; mov rax, rdi ; vzeroupper ; ret
0x000000000009c45f : nop ; mov rdi, rbp ; call rax
0x00000000000b6aaf : nop ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x00000000000b78ef : nop ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 8] ; ret
0x00000000000485ef : nop ; mov rdx, rcx ; jmp 0x485bb
0x00000000000485ef : nop ; mov rdx, rcx ; jmp 0x485bd
0x0000000000099ccf : nop ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x000000000017614f : nop ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000017613f : nop ; mov word ptr [rcx], dx ; ret
0x00000000000b640f : nop ; mov word ptr [rdi], dx ; ret
0x00000000000b551f : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000004397f : nop ; movmskps eax, xmm0 ; and eax, 8 ; ret
0x000000000013b23f : nop ; movsxd rdx, edx ; mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x000000000008febf : nop ; movzx eax, byte ptr [rdx] ; ret
0x00000000000c7aa9 : nop ; or al, 0 ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000017c86c : nop ; or eax, 0x83490000 ; jmp 0x17c88e
0x00000000000aeecd : nop ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000430cf : nop ; pmovmskb eax, xmm0 ; and eax, 0x80 ; ret
0x00000000000eae7f : nop ; pop rbx ; mov eax, 0xc ; pop rbp ; pop r12 ; ret
0x000000000010b6af : nop ; pop rbx ; mov eax, 9 ; pop rbp ; pop r12 ; ret
0x0000000000196c1f : nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009c09f : nop ; pop rbx ; ret
0x000000000014792f : nop ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000003148f : nop ; ret
0x000000000015da08 : nop ; rol byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000009e36c : nop ; rol byte ptr [rcx], 0 ; cmovne rax, rdx ; ret
0x0000000000127edf : nop ; sub eax, edi ; ret
0x00000000000926bf : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000000a0a0f : nop ; test al, al ; je 0xa09fb ; pop rbx ; pop rbp ; ret
0x000000000011e14f : nop ; test edx, edx ; je 0x11e18c ; mov ecx, 0x145 ; mov eax, ecx ; syscall
0x00000000000cdfbf : nop ; test rsi, rsi ; jne 0xcdfd2 ; xor rax, rax ; ret
0x00000000000cdfbe : nop ; test rsi, rsi ; jne 0xcdfd3 ; xor rax, rax ; ret
0x000000000018217f : nop ; vzeroupper ; xor eax, eax ; ret
0x00000000000b947f : nop ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000000dbdaf : nop ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000114c1f : nop ; xor eax, eax ; add rsp, 8 ; ret
0x000000000010b6ff : nop ; xor eax, eax ; pop rbx ; ret
0x000000000005362f : nop ; xor eax, eax ; ret
0x000000000008fb7f : nop ; xor eax, eax ; test rdx, rdx ; jne 0x8fb98 ; ret
0x000000000011271f : nop ; xor r10d, r10d ; mov eax, 0x3d ; syscall
0x00000000000cdc9f : nop ; xor rax, rax ; ret
0x00000000000ce488 : nop dword ptr [rax + rax] ; add rax, 3 ; ret
0x000000000008a2eb : nop dword ptr [rax + rax] ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x000000000010ed5b : nop dword ptr [rax + rax] ; call 0x10c5bb
0x0000000000093e8b : nop dword ptr [rax + rax] ; call rax
0x0000000000042cb3 : nop dword ptr [rax + rax] ; fld xword ptr [rsp + 8] ; fadd st(0) ; ret
0x0000000000098fbb : nop dword ptr [rax + rax] ; jmp rax
0x000000000018e788 : nop dword ptr [rax + rax] ; lea rax, [rdi + 0xa] ; ret
0x000000000018e798 : nop dword ptr [rax + rax] ; lea rax, [rdi + 0xb] ; ret
0x000000000018e7a8 : nop dword ptr [rax + rax] ; lea rax, [rdi + 0xc] ; ret
0x000000000018e7b8 : nop dword ptr [rax + rax] ; lea rax, [rdi + 0xd] ; ret
0x000000000018e7c8 : nop dword ptr [rax + rax] ; lea rax, [rdi + 0xe] ; ret
0x000000000018e718 : nop dword ptr [rax + rax] ; lea rax, [rdi + 2] ; ret
0x000000000018e728 : nop dword ptr [rax + rax] ; lea rax, [rdi + 3] ; ret
0x000000000018e738 : nop dword ptr [rax + rax] ; lea rax, [rdi + 4] ; ret
0x000000000018e748 : nop dword ptr [rax + rax] ; lea rax, [rdi + 5] ; ret
0x000000000018e758 : nop dword ptr [rax + rax] ; lea rax, [rdi + 6] ; ret
0x000000000018e768 : nop dword ptr [rax + rax] ; lea rax, [rdi + 8] ; ret
0x000000000018e778 : nop dword ptr [rax + rax] ; lea rax, [rdi + 9] ; ret
0x00000000000cdf78 : nop dword ptr [rax + rax] ; lea rax, [rdi - 0xc] ; ret
0x00000000000cdf98 : nop dword ptr [rax + rax] ; lea rax, [rdi - 4] ; ret
0x00000000000cdf88 : nop dword ptr [rax + rax] ; lea rax, [rdi - 8] ; ret
0x00000000000339c3 : nop dword ptr [rax + rax] ; lea rax, [rip + 0x17bf7d] ; ret
0x00000000000b5428 : nop dword ptr [rax + rax] ; mov byte ptr [rdi], dh ; ret
0x0000000000176158 : nop dword ptr [rax + rax] ; mov dword ptr [rcx], edx ; ret
0x000000000010cc1b : nop dword ptr [rax + rax] ; mov eax, 0x102 ; syscall
0x000000000010eaeb : nop dword ptr [rax + rax] ; mov eax, 0x107 ; syscall
0x000000000010ea2b : nop dword ptr [rax + rax] ; mov eax, 0x10a ; syscall
0x000000000011e7ab : nop dword ptr [rax + rax] ; mov eax, 0x110 ; syscall
0x000000000011e80b : nop dword ptr [rax + rax] ; mov eax, 0x11b ; syscall
0x000000000011e47b : nop dword ptr [rax + rax] ; mov eax, 0x123 ; syscall
0x000000000010d73b : nop dword ptr [rax + rax] ; mov eax, 0x124 ; syscall
0x000000000010d79b : nop dword ptr [rax + rax] ; mov eax, 0x125 ; syscall
0x000000000011e59b : nop dword ptr [rax + rax] ; mov eax, 0x126 ; syscall
0x000000000011e89b : nop dword ptr [rax + rax] ; mov eax, 0x12c ; syscall
0x000000000011e3bb : nop dword ptr [rax + rax] ; mov eax, 0x131 ; syscall
0x000000000011e9bb : nop dword ptr [rax + rax] ; mov eax, 0x14a ; syscall
0x000000000011e9eb : nop dword ptr [rax + rax] ; mov eax, 0x14b ; syscall
0x000000000009aa6b : nop dword ptr [rax + rax] ; mov eax, 0x16 ; ret
0x000000000010d76b : nop dword ptr [rax + rax] ; mov eax, 0x16 ; syscall
0x000000000010185b : nop dword ptr [rax + rax] ; mov eax, 0x18 ; syscall
0x000000000011768b : nop dword ptr [rax + rax] ; mov eax, 0x1b ; syscall
0x000000000011f9eb : nop dword ptr [rax + rax] ; mov eax, 0x1e ; syscall
0x000000000011fa7b : nop dword ptr [rax + rax] ; mov eax, 0x1f ; syscall
0x000000000010d70b : nop dword ptr [rax + rax] ; mov eax, 0x21 ; syscall
0x00000000000d297b : nop dword ptr [rax + rax] ; mov eax, 0x24 ; syscall
0x00000000000d29ab : nop dword ptr [rax + rax] ; mov eax, 0x26 ; syscall
0x00000000000e26db : nop dword ptr [rax + rax] ; mov eax, 0x27 ; syscall
0x000000000011f10b : nop dword ptr [rax + rax] ; mov eax, 0x29 ; syscall
0x000000000011ebdb : nop dword ptr [rax + rax] ; mov eax, 0x33 ; syscall
0x000000000010d50b : nop dword ptr [rax + rax] ; mov eax, 0x49 ; syscall
0x000000000010d88b : nop dword ptr [rax + rax] ; mov eax, 0x51 ; syscall
0x000000000010eb1b : nop dword ptr [rax + rax] ; mov eax, 0x54 ; syscall
0x000000000010ea5b : nop dword ptr [rax + rax] ; mov eax, 0x59 ; syscall
0x000000000010cb2b : nop dword ptr [rax + rax] ; mov eax, 0x5b ; syscall
0x000000000010e17b : nop dword ptr [rax + rax] ; mov eax, 0x5d ; syscall
0x000000000010e1ab : nop dword ptr [rax + rax] ; mov eax, 0x5e ; syscall
0x00000000000e126b : nop dword ptr [rax + rax] ; mov eax, 0x64 ; syscall
0x000000000011e5fb : nop dword ptr [rax + rax] ; mov eax, 0x67 ; syscall
0x00000000000e296b : nop dword ptr [rax + rax] ; mov eax, 0x6d ; syscall
0x00000000000e299b : nop dword ptr [rax + rax] ; mov eax, 0x6f ; syscall
0x00000000000e29fb : nop dword ptr [rax + rax] ; mov eax, 0x70 ; syscall
0x00000000000e2a2b : nop dword ptr [rax + rax] ; mov eax, 0x76 ; syscall
0x00000000000e2a5b : nop dword ptr [rax + rax] ; mov eax, 0x78 ; syscall
0x000000000011dbdb : nop dword ptr [rax + rax] ; mov eax, 0x7b ; syscall
0x000000000011e35b : nop dword ptr [rax + rax] ; mov eax, 0x7d ; syscall
0x000000000011e38b : nop dword ptr [rax + rax] ; mov eax, 0x7e ; syscall
0x000000000011e7db : nop dword ptr [rax + rax] ; mov eax, 0x86 ; syscall
0x000000000010c9db : nop dword ptr [rax + rax] ; mov eax, 0x8a ; syscall
0x00000000001017cb : nop dword ptr [rax + rax] ; mov eax, 0x8f ; syscall
0x00000000001017fb : nop dword ptr [rax + rax] ; mov eax, 0x90 ; syscall
0x000000000010182b : nop dword ptr [rax + rax] ; mov eax, 0x91 ; syscall
0x000000000010188b : nop dword ptr [rax + rax] ; mov eax, 0x92 ; syscall
0x00000000001018bb : nop dword ptr [rax + rax] ; mov eax, 0x93 ; syscall
0x00000000001018eb : nop dword ptr [rax + rax] ; mov eax, 0x94 ; syscall
0x000000000011771b : nop dword ptr [rax + rax] ; mov eax, 0x96 ; syscall
0x000000000011774b : nop dword ptr [rax + rax] ; mov eax, 0x97 ; syscall
0x000000000011777b : nop dword ptr [rax + rax] ; mov eax, 0x98 ; syscall
0x000000000011e2bb : nop dword ptr [rax + rax] ; mov eax, 0x9a ; syscall
0x000000000011e6bb : nop dword ptr [rax + rax] ; mov eax, 0x9b ; syscall
0x000000000011758b : nop dword ptr [rax + rax] ; mov eax, 0xa ; syscall
0x00000000001141db : nop dword ptr [rax + rax] ; mov eax, 0xa1 ; syscall
0x000000000011469b : nop dword ptr [rax + rax] ; mov eax, 0xa7 ; syscall
0x00000000001146cb : nop dword ptr [rax + rax] ; mov eax, 0xa8 ; syscall
0x000000000011da0b : nop dword ptr [rax + rax] ; mov eax, 0xac ; syscall
0x000000000011d9db : nop dword ptr [rax + rax] ; mov eax, 0xad ; syscall
0x000000000011e3eb : nop dword ptr [rax + rax] ; mov eax, 0xae ; syscall
0x000000000011e41b : nop dword ptr [rax + rax] ; mov eax, 0xb0 ; syscall
0x000000000011db7b : nop dword ptr [rax + rax] ; mov eax, 0xbb ; syscall
0x000000000011b93b : nop dword ptr [rax + rax] ; mov eax, 0xc6 ; syscall
0x000000000011b81b : nop dword ptr [rax + rax] ; mov eax, 0xc7 ; syscall
0x000000000011e44b : nop dword ptr [rax + rax] ; mov eax, 0xd5 ; syscall
0x000000000011e2eb : nop dword ptr [rax + rax] ; mov eax, 0xe4 ; syscall
0x00000000000e355b : nop dword ptr [rax + rax] ; mov eax, 0xfc17 ; ret
0x000000000011e56b : nop dword ptr [rax + rax] ; mov eax, 0xfd ; syscall
0x000000000011e5cb : nop dword ptr [rax + rax] ; mov eax, 0xff ; syscall
0x0000000000044e13 : nop dword ptr [rax + rax] ; mov eax, 0xffffffff ; ret
0x00000000000e4043 : nop dword ptr [rax + rax] ; mov eax, 1 ; ret
0x000000000011274b : nop dword ptr [rax + rax] ; mov eax, 1 ; syscall
0x000000000014c7eb : nop dword ptr [rax + rax] ; mov eax, 2 ; ret
0x000000000012f2bb : nop dword ptr [rax + rax] ; mov eax, edi ; bswap eax ; ret
0x0000000000124228 : nop dword ptr [rax + rax] ; mov eax, edx ; ret
0x00000000000e1908 : nop dword ptr [rax + rax] ; mov edi, edx ; mov eax, esi ; syscall
0x00000000000b545b : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000176198 : nop dword ptr [rax + rax] ; mov qword ptr [rcx], rdx ; ret
0x00000000000b6458 : nop dword ptr [rax + rax] ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000b6468 : nop dword ptr [rax + rax] ; mov qword ptr [rdi], rdx ; ret
0x000000000007eed8 : nop dword ptr [rax + rax] ; mov r9, rsi ; jmp rax
0x000000000012b6f3 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000147e73 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000015db4b : nop dword ptr [rax + rax] ; mov rax, qword ptr [rip + 0x8c431] ; call qword ptr [rax]
0x0000000000092978 : nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000001288a3 : nop dword ptr [rax + rax] ; mov rbx, qword ptr [rdi + 0x28] ; call 0x25323
0x00000000000f8843 : nop dword ptr [rax + rax] ; mov rdi, rbx ; call 0x25322
0x00000000000b549b : nop dword ptr [rax + rax] ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000b64e8 : nop dword ptr [rax + rax] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000018e6f7 : nop dword ptr [rax + rax] ; nop ; lea rax, [rdi] ; ret
0x00000000000b6417 : nop dword ptr [rax + rax] ; nop ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000b6427 : nop dword ptr [rax + rax] ; nop ; mov dword ptr [rdi], edx ; ret
0x00000000000dc9e6 : nop dword ptr [rax + rax] ; nop ; mov eax, dword ptr [rdi] ; ret
0x000000000009be87 : nop dword ptr [rax + rax] ; nop ; ret
0x0000000000155ec7 : nop dword ptr [rax + rax] ; nop ; xor eax, eax ; ret
0x000000000018e537 : nop dword ptr [rax + rax] ; nop ; xor rax, rax ; ret
0x000000000008c2b4 : nop dword ptr [rax + rax] ; nop dword ptr [rax] ; ret
0x000000000004344b : nop dword ptr [rax + rax] ; pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x0000000000088dd8 : nop dword ptr [rax + rax] ; pop rbx ; ret
0x00000000000e18bb : nop dword ptr [rax + rax] ; pop rdi ; mov eax, 0x3a ; syscall
0x00000000000268eb : nop dword ptr [rax + rax] ; ret
0x0000000000091c33 : nop dword ptr [rax + rax] ; sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x00000000001875a8 : nop dword ptr [rax + rax] ; vzeroupper ; ret
0x00000000000fe73b : nop dword ptr [rax + rax] ; xor eax, eax ; add rsp, 8 ; ret
0x000000000014716b : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ba5c3 : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000047163 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000181ddb : nop dword ptr [rax + rax] ; xor eax, eax ; vzeroupper ; ret
0x0000000000143d53 : nop dword ptr [rax + rax] ; xor ebx, ebx ; mov rdi, r14 ; call 0x14083c
0x000000000012ebab : nop dword ptr [rax + rax] ; xor ecx, ecx ; mov rax, rcx ; ret
0x0000000000026bc8 : nop dword ptr [rax + rax] ; xor edi, edi ; mov eax, edx ; syscall
0x0000000000089abb : nop dword ptr [rax + rax] ; xor edx, edx ; jmp 0x89a96
0x000000000008223b : nop dword ptr [rax + rax] ; xor edx, edx ; mov rax, rdx ; ret
0x0000000000039d73 : nop dword ptr [rax + rax] ; xor r12d, r12d ; jmp 0x39d49
0x00000000000bc5c8 : nop dword ptr [rax + rax] ; xor r15d, r15d ; jmp 0xbc5ac
0x00000000000cda0b : nop dword ptr [rax + rax] ; xor rax, rax ; ret
0x00000000000c06c9 : nop dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x0000000000155f9d : nop dword ptr [rax] ; add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x00000000000ce47c : nop dword ptr [rax] ; add rax, 1 ; ret
0x000000000009d535 : nop dword ptr [rax] ; add rsp, 8 ; ret
0x00000000001478b4 : nop dword ptr [rax] ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000aa79c : nop dword ptr [rax] ; bsf eax, eax ; lea rax, [rax + rdi - 0x10] ; ret
0x000000000018256d : nop dword ptr [rax] ; bsr eax, eax ; add eax, 0x60 ; add rax, rdi ; ret
0x00000000000aaded : nop dword ptr [rax] ; bsr eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x00000000001390cd : nop dword ptr [rax] ; call 0x2531d
0x00000000001390cd : nop dword ptr [rax] ; call 0x25322
0x00000000001297f1 : nop dword ptr [rax] ; call 0x35a09
0x0000000000047395 : nop dword ptr [rax] ; call qword ptr [rbx]
0x000000000009a211 : nop dword ptr [rax] ; lea rax, [rdx - 0x10] ; ret
0x000000000017415d : nop dword ptr [rax] ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000000a6c15 : nop dword ptr [rax] ; mov byte ptr [rcx - 1], 0 ; mov qword ptr [rdx], rcx ; ret
0x000000000017612c : nop dword ptr [rax] ; mov byte ptr [rcx], dl ; ret
0x00000000000a70cc : nop dword ptr [rax] ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000b63fc : nop dword ptr [rax] ; mov byte ptr [rdi], dl ; ret
0x000000000018801c : nop dword ptr [rax] ; mov byte ptr [rdi], dl ; vzeroupper ; ret
0x00000000000a6ffc : nop dword ptr [rax] ; mov byte ptr [rdi], sil ; add rax, rdi ; ret
0x00000000000b60fc : nop dword ptr [rax] ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000a7104 : nop dword ptr [rax] ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00000000000a7034 : nop dword ptr [rax] ; mov dword ptr [rdi], r8d ; add rax, rdi ; ret
0x000000000011dd0c : nop dword ptr [rax] ; mov eax, 0x122 ; syscall
0x000000000011433d : nop dword ptr [rax] ; mov eax, 0x132 ; syscall
0x000000000009aa2c : nop dword ptr [rax] ; mov eax, 0x16 ; ret
0x000000000010d6dd : nop dword ptr [rax] ; mov eax, 0x20 ; syscall
0x00000000000441ac : nop dword ptr [rax] ; mov eax, 0x3e ; syscall
0x00000000000e1239 : nop dword ptr [rax] ; mov eax, 0x3f ; syscall
0x00000000000e35e5 : nop dword ptr [rax] ; mov eax, 0x40 ; ret
0x000000000011f8ec : nop dword ptr [rax] ; mov eax, 0x40 ; syscall
0x000000000011f8bc : nop dword ptr [rax] ; mov eax, 0x41 ; syscall
0x000000000011f859 : nop dword ptr [rax] ; mov eax, 0x44 ; syscall
0x000000000011f88c : nop dword ptr [rax] ; mov eax, 0x47 ; syscall
0x0000000000115b3c : nop dword ptr [rax] ; mov eax, 0x4d ; syscall
0x000000000010caec : nop dword ptr [rax] ; mov eax, 0x5f ; syscall
0x0000000000112e5c : nop dword ptr [rax] ; mov eax, 0x62 ; syscall
0x00000000000e29c9 : nop dword ptr [rax] ; mov eax, 0x7c ; syscall
0x00000000000ba6bd : nop dword ptr [rax] ; mov eax, 0x80 ; pop rbx ; ret
0x000000000011324c : nop dword ptr [rax] ; mov eax, 0x8d ; syscall
0x000000000011e17c : nop dword ptr [rax] ; mov eax, 0x95 ; syscall
0x000000000011e28c : nop dword ptr [rax] ; mov eax, 0x9e ; syscall
0x000000000011428d : nop dword ptr [rax] ; mov eax, 0xa2 ; syscall
0x0000000000113fbc : nop dword ptr [rax] ; mov eax, 0xab ; syscall
0x00000000001158ec : nop dword ptr [rax] ; mov eax, 0xeb ; syscall
0x0000000000160e5d : nop dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000898b5 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x000000000010b704 : nop dword ptr [rax] ; mov eax, 1 ; pop rbx ; ret
0x000000000008c19c : nop dword ptr [rax] ; mov eax, 1 ; ret
0x000000000013b095 : nop dword ptr [rax] ; mov eax, 2 ; ret
0x000000000010d0a9 : nop dword ptr [rax] ; mov eax, 8 ; syscall
0x0000000000086ddd : nop dword ptr [rax] ; mov eax, dword ptr [rcx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001784cc : nop dword ptr [rax] ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x0000000000155eb9 : nop dword ptr [rax] ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000eca8d : nop dword ptr [rax] ; mov eax, dword ptr [rdi + 0x4c] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010b8fc : nop dword ptr [rax] ; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000352bd : nop dword ptr [rax] ; mov eax, edi ; and eax, 0x7f ; ret
0x000000000010198c : nop dword ptr [rax] ; mov ecx, 0xcb ; mov eax, ecx ; syscall
0x0000000000139005 : nop dword ptr [rax] ; mov edi, 0x10 ; call 0x25312
0x0000000000055d05 : nop dword ptr [rax] ; mov edx, 0xffffffff ; mov eax, edx ; ret
0x000000000016b06c : nop dword ptr [rax] ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000b789c : nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 4] ; ret
0x00000000000b612d : nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000b94cd : nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x000000000010d35d : nop dword ptr [rax] ; mov edx, r12d ; mov eax, 0x10d ; syscall
0x0000000000063a3c : nop dword ptr [rax] ; mov r10, rcx ; mov eax, 0x108 ; syscall
0x00000000000e142c : nop dword ptr [rax] ; mov r10, rcx ; mov eax, 0x3d ; syscall
0x0000000000078bf1 : nop dword ptr [rax] ; mov r10, rdx ; jmp r11
0x00000000000d6aac : nop dword ptr [rax] ; mov r11d, eax ; jmp 0xd6a88
0x00000000000d692d : nop dword ptr [rax] ; mov r8, rcx ; xor ecx, ecx ; jmp 0xd337a
0x0000000000043f5c : nop dword ptr [rax] ; mov rax, 0xf ; syscall
0x000000000011ba5d : nop dword ptr [rax] ; mov rax, qword ptr [rax + 0x1a0] ; ret
0x000000000011ba51 : nop dword ptr [rax] ; mov rax, qword ptr [rax + 0x58] ; ret
0x00000000001740ed : nop dword ptr [rax] ; mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000155b2c : nop dword ptr [rax] ; mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000154b35 : nop dword ptr [rax] ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000009294c : nop dword ptr [rax] ; mov rax, qword ptr [rip + 0x152d09] ; ret
0x0000000000047c6d : nop dword ptr [rax] ; mov rax, rdi ; cqo ; idiv rsi ; ret
0x00000000000b4dac : nop dword ptr [rax] ; mov rax, rdi ; ret
0x0000000000094bec : nop dword ptr [rax] ; mov rax, rdx ; ret
0x00000000000a6c25 : nop dword ptr [rax] ; mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000009c529 : nop dword ptr [rax] ; mov rdi, qword ptr [rbx + 0x48] ; call rax
0x00000000001504f5 : nop dword ptr [rax] ; mov rdi, qword ptr [rbx] ; jmp 0x1504c7
0x0000000000160735 : nop dword ptr [rax] ; mov rdi, rbx ; call 0xdca08
0x000000000016533c : nop dword ptr [rax] ; mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000181339 : nop dword ptr [rax] ; movsxd rax, ecx ; ret
0x0000000000101bfd : nop dword ptr [rax] ; movzx eax, byte ptr [rdi + 9] ; and eax, 0xf ; ret
0x00000000000aaecd : nop dword ptr [rax] ; movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000000ba649 : nop dword ptr [rax] ; movzx eax, cl ; pop rbx ; ret
0x00000000000a89ed : nop dword ptr [rax] ; movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000016b1fc : nop dword ptr [rax] ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000016b8d9 : nop dword ptr [rax] ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000016b17c : nop dword ptr [rax] ; movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000008250d : nop dword ptr [rax] ; or dword ptr [rdi], 0x20 ; ret
0x0000000000091ac4 : nop dword ptr [rax] ; pop rbx ; ret
0x0000000000115bdd : nop dword ptr [rax] ; pxor xmm0, xmm0 ; movups xmmword ptr [rdi], xmm0 ; ret
0x0000000000032b11 : nop dword ptr [rax] ; ret
0x00000000001562ed : nop dword ptr [rax] ; test edx, edx ; jne 0x15630c ; mov eax, 1 ; ret
0x000000000005913c : nop dword ptr [rax] ; test r12d, r12d ; je 0x59136 ; call 0x2541f
0x00000000000b034c : nop dword ptr [rax] ; test rsi, rsi ; jne 0xb0365 ; xor rax, rax ; ret
0x00000000000ceaa5 : nop dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x000000000015b419 : nop dword ptr [rax] ; xor eax, eax ; jmp 0x15b3f1
0x000000000015b499 : nop dword ptr [rax] ; xor eax, eax ; jmp 0x15b471
0x0000000000111adc : nop dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x00000000000932bc : nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000001126ec : nop dword ptr [rax] ; xor eax, eax ; syscall
0x000000000018607d : nop dword ptr [rax] ; xor eax, eax ; vzeroupper ; ret
0x0000000000083c85 : nop dword ptr [rax] ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ce9b5 : nop dword ptr [rax] ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; ret
0x0000000000084f29 : nop dword ptr [rax] ; xor edi, edi ; mov rax, rdi ; ret
0x0000000000084e6d : nop dword ptr [rax] ; xor edx, edx ; mov rax, rdx ; ret
0x000000000012df29 : nop dword ptr [rax] ; xor esi, esi ; mov rax, rsi ; ret
0x000000000011fa4c : nop dword ptr [rax] ; xor r10d, r10d ; mov eax, 0x1d ; syscall
0x00000000000b5427 : nop dword ptr cs:[rax + rax] ; mov byte ptr [rdi], dh ; ret
0x0000000000124227 : nop dword ptr cs:[rax + rax] ; mov eax, edx ; ret
0x0000000000176197 : nop dword ptr cs:[rax + rax] ; mov qword ptr [rcx], rdx ; ret
0x00000000000b6467 : nop dword ptr cs:[rax + rax] ; mov qword ptr [rdi], rdx ; ret
0x0000000000092977 : nop dword ptr cs:[rax + rax] ; mov rax, rdi ; ret
0x00000000000b6426 : nop dword ptr cs:[rax + rax] ; nop ; mov dword ptr [rdi], edx ; ret
0x000000000009be86 : nop dword ptr cs:[rax + rax] ; nop ; ret
0x0000000000155ec6 : nop dword ptr cs:[rax + rax] ; nop ; xor eax, eax ; ret
0x0000000000088dd7 : nop dword ptr cs:[rax + rax] ; pop rbx ; ret
0x000000000008a2f7 : nop dword ptr cs:[rax + rax] ; ret
0x000000000013b877 : nop dword ptr cs:[rax + rax] ; xor eax, eax ; ret
0x00000000000cdfa7 : nop dword ptr cs:[rax + rax] ; xor rax, rax ; ret
0x0000000000093e8a : nop word ptr [rax + rax] ; call rax
0x0000000000098fba : nop word ptr [rax + rax] ; jmp rax
0x0000000000176157 : nop word ptr [rax + rax] ; mov dword ptr [rcx], edx ; ret
0x000000000009aa6a : nop word ptr [rax + rax] ; mov eax, 0x16 ; ret
0x000000000011f9ea : nop word ptr [rax + rax] ; mov eax, 0x1e ; syscall
0x000000000011fa7a : nop word ptr [rax + rax] ; mov eax, 0x1f ; syscall
0x00000000000d297a : nop word ptr [rax + rax] ; mov eax, 0x24 ; syscall
0x000000000010d50a : nop word ptr [rax + rax] ; mov eax, 0x49 ; syscall
0x00000000000e355a : nop word ptr [rax + rax] ; mov eax, 0xfc17 ; ret
0x000000000011274a : nop word ptr [rax + rax] ; mov eax, 1 ; syscall
0x000000000014c7ea : nop word ptr [rax + rax] ; mov eax, 2 ; ret
0x00000000000b545a : nop word ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000007eed7 : nop word ptr [rax + rax] ; mov r9, rsi ; jmp rax
0x000000000012b6f2 : nop word ptr [rax + rax] ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000000000b66ca : nop word ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000001288a2 : nop word ptr [rax + rax] ; mov rbx, qword ptr [rdi + 0x28] ; call 0x25324
0x0000000000145d0a : nop word ptr [rax + rax] ; pop rbx ; ret
0x00000000000e18ba : nop word ptr [rax + rax] ; pop rdi ; mov eax, 0x3a ; syscall
0x00000000000268ea : nop word ptr [rax + rax] ; ret
0x00000000001875a7 : nop word ptr [rax + rax] ; vzeroupper ; ret
0x00000000000fe73a : nop word ptr [rax + rax] ; xor eax, eax ; add rsp, 8 ; ret
0x000000000014716a : nop word ptr [rax + rax] ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ba5c2 : nop word ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000047162 : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000181dda : nop word ptr [rax + rax] ; xor eax, eax ; vzeroupper ; ret
0x000000000012ebaa : nop word ptr [rax + rax] ; xor ecx, ecx ; mov rax, rcx ; ret
0x000000000008223a : nop word ptr [rax + rax] ; xor edx, edx ; mov rax, rdx ; ret
0x0000000000039d72 : nop word ptr [rax + rax] ; xor r12d, r12d ; jmp 0x39d4a
0x00000000000cda0a : nop word ptr [rax + rax] ; xor rax, rax ; ret
0x00000000000b5426 : nop word ptr cs:[rax + rax] ; mov byte ptr [rdi], dh ; ret
0x0000000000124226 : nop word ptr cs:[rax + rax] ; mov eax, edx ; ret
0x000000000009be85 : nop word ptr cs:[rax + rax] ; nop ; ret
0x0000000000088dd6 : nop word ptr cs:[rax + rax] ; pop rbx ; ret
0x000000000008a2f6 : nop word ptr cs:[rax + rax] ; ret
0x000000000013b876 : nop word ptr cs:[rax + rax] ; xor eax, eax ; ret
0x00000000000ff736 : not dh ; stc ; jmp qword ptr [rsi + 0xf]
0x0000000000114f65 : not dword ptr [rbp + 0xd] ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x30], cl ; xor eax, eax ; pop rbx ; ret
0x0000000000042a3d : not eax ; and eax, ecx ; ret
0x0000000000042d6d : not eax ; and eax, edx ; ret
0x000000000015e7a3 : not eax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000001562c5 : not eax ; shr eax, 0x1f ; ret
0x00000000000933e0 : not edx ; mov byte ptr [rdi], dl ; test rsi, rsi ; je 0x9343e ; mov qword ptr [rsi], rdi ; ret
0x000000000015e7a2 : not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x0000000000034e43 : or ah, byte ptr [rbx] ; ja 0x34e62 ; lea rax, [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x00000000000989c8 : or ah, ch ; adc al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000015c750 : or ah, dh ; dec dword ptr [rax - 0x77] ; ret
0x00000000001204f2 : or al, 0 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000017c967 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000180579 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017c995 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000120175 : or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001204cc : or al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000f0831 : or al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000113342 : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000009799c : or al, 0 ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x00000000000eae82 : or al, 0 ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000098f8c : or al, 0 ; add byte ptr [rax], al ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x000000000010b49d : or al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000001470d2 : or al, 0 ; add byte ptr [rax], al ; ret
0x00000000001132f1 : or al, 0 ; add byte ptr [rax], al ; syscall
0x000000000009c7e6 : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000999e2 : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000009c60a : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000162b98 : or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000007d8ca : or al, 0 ; add byte ptr [rcx + 0x29], cl ; ret
0x00000000000c7aaa : or al, 0 ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000184d99 : or al, 0 ; add byte ptr [rcx - 0x7d], cl ; jmp 0x184db9
0x00000000000501ac : or al, 0 ; add cl, ch ; ret 0xfffd
0x0000000000120144 : or al, 0 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000061c3b : or al, 0 ; add rsp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x0000000000063bf6 : or al, 0 ; add rsp, 0x80 ; ret
0x00000000001205b8 : or al, 0 ; add word ptr [rdx + rax*2], 1 ; ret
0x000000000009ce1e : or al, 0 ; cmovne rax, rdx ; ret
0x00000000000bb35a : or al, 0 ; lea rax, [rip + 0x116bd] ; cmove rax, rdx ; ret
0x00000000000bad6a : or al, 0 ; lea rax, [rip + 0x11fdd] ; cmove rax, rdx ; ret
0x00000000000baf7a : or al, 0 ; lea rax, [rip + 0x12a9d] ; cmove rax, rdx ; ret
0x00000000000bb0fa : or al, 0 ; lea rax, [rip + 0x12bad] ; cmove rax, rdx ; ret
0x00000000000bad2a : or al, 0 ; lea rax, [rip + 0x12ded] ; cmove rax, rdx ; ret
0x00000000000bae5a : or al, 0 ; lea rax, [rip + 0x1341d] ; cmove rax, rdx ; ret
0x000000000009e753 : or al, 0 ; lea rdx, [rip + 0xca6d4] ; cmovne rax, rdx ; ret
0x000000000009e403 : or al, 0 ; lea rdx, [rip + 0xcaa04] ; cmovne rax, rdx ; ret
0x000000000009e2a3 : or al, 0 ; lea rdx, [rip + 0xcd654] ; cmovne rax, rdx ; ret
0x0000000000118415 : or al, 0 ; mov dword ptr fs:[rax], 0x16 ; ret
0x00000000001183e0 : or al, 0 ; mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x00000000001183ce : or al, 0 ; mov dword ptr fs:[rax], 0xc ; xor eax, eax ; pop rbx ; ret
0x000000000011ba45 : or al, 0 ; mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x00000000000e19d0 : or al, 0 ; mov eax, 0x142 ; syscall
0x00000000001210b5 : or al, 0 ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000011e171 : or al, 0 ; mov edx, dword ptr fs:[rcx] ; cmp edx, 0x26 ; je 0x11e1c5 ; ret
0x00000000000e2ff7 : or al, 0 ; mov esi, esi ; movsxd rax, dword ptr [rdx + rsi*4] ; add rax, rdx ; jmp rax
0x000000000012081d : or al, 0 ; mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x000000000012091d : or al, 0 ; mov rax, qword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x00000000000e8b6e : or al, 0 ; movsxd rax, dword ptr [rdx + r15*4] ; add rax, rdx ; jmp rax
0x00000000000e6a76 : or al, 0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000e3a01 : or al, 0 ; movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x00000000000e910d : or al, 0 ; movzx eax, al ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x0000000000113e85 : or al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000114075 : or al, 0 ; neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000012039f : or al, 0 ; pop rbx ; ret
0x00000000001172be : or al, 0 ; ret
0x00000000000bb3cd : or al, 0 ; test byte ptr [rdx + 0xcd], 1 ; je 0xbb39c ; ret
0x00000000001172b4 : or al, 0 ; test edi, edi ; je 0x1172cc ; mov dword ptr [rip + 0xcd088], edi ; ret
0x000000000018a010 : or al, 0x16 ; jne 0x189c9c ; vzeroupper ; ret
0x000000000018a127 : or al, 0x16 ; jne 0x18a0fc ; vzeroupper ; ret
0x000000000018a508 : or al, 0x16 ; jne 0x18a100 ; vzeroupper ; ret
0x000000000009f32e : or al, 0x16 ; mov byte ptr [rsi + rdx + 1], al ; jne 0x9f328 ; ret
0x00000000000a89d6 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x00000000000a8c98 : or al, 0x16 ; test al, al ; jne 0xa8c8a ; xor eax, eax ; sub eax, ecx ; ret
0x0000000000181909 : or al, 0x16 ; test eax, eax ; jne 0x1818fb ; sub eax, ecx ; vzeroupper ; ret
0x0000000000181dce : or al, 0x16 ; test eax, eax ; jne 0x181dbb ; sub eax, ecx ; vzeroupper ; ret
0x0000000000189fc7 : or al, 0x16 ; test eax, eax ; jne 0x189fbb ; sub eax, ecx ; vzeroupper ; ret
0x000000000018a49c : or al, 0x16 ; test eax, eax ; jne 0x18a48b ; sub eax, ecx ; vzeroupper ; ret
0x000000000018a124 : or al, 0x17 ; cmp ecx, dword ptr [rsi + rdx] ; jne 0x18a0ff ; vzeroupper ; ret
0x000000000009796a : or al, 0x1e ; mov rax, rsi ; pop rbx ; ret
0x000000000010c546 : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x10c55f ; add rsp, 0x18 ; ret
0x0000000000112471 : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x1124cf ; add rsp, 0x68 ; ret
0x0000000000112500 : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x112557 ; add rsp, 0x18 ; ret
0x00000000001125d1 : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x112627 ; add rsp, 0x58 ; ret
0x0000000000112666 : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x1126bf ; add rsp, 0x58 ; ret
0x0000000000112b58 : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x112b87 ; add rsp, 0x38 ; ret
0x0000000000112bb3 : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x112bd3 ; add rsp, 0x18 ; ret
0x00000000001139d5 : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x113a4f ; add rsp, 0x48 ; ret
0x0000000000113a85 : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x113aff ; add rsp, 0x48 ; ret
0x0000000000113b47 : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x113bc9 ; add rsp, 0x38 ; ret
0x0000000000113c17 : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x113c99 ; add rsp, 0x38 ; ret
0x000000000011489c : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x1148b5 ; add rsp, 0x38 ; ret
0x000000000011496a : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x1149b9 ; add rsp, 0x68 ; ret
0x00000000001159ae : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x115a01 ; add rsp, 0x38 ; ret
0x0000000000115a7d : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x115ad1 ; add rsp, 0x38 ; ret
0x00000000001182df : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x1182f8 ; add rsp, 0x18 ; ret
0x000000000011dab6 : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x11dae7 ; add rsp, 0x78 ; ret
0x000000000011f424 : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x11f43d ; add rsp, 0x18 ; ret
0x000000000011f969 : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x11f9c7 ; add rsp, 0x58 ; ret
0x00000000001358b1 : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x1358ca ; add rsp, 0x38 ; ret
0x000000000013592e : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x135947 ; add rsp, 0x28 ; ret
0x000000000013b58c : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x13b5ac ; add rsp, 0x18 ; ret
0x000000000015211b : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x152134 ; add rsp, 0x78 ; ret
0x000000000015db2a : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x15db7a ; add rsp, 0x58 ; ret
0x000000000015dc27 : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x15dc80 ; add rsp, 0x68 ; ret
0x000000000015ddce : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x15de30 ; add rsp, 0x78 ; ret
0x000000000015de90 : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x15dee0 ; add rsp, 0x38 ; ret
0x0000000000047d69 : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x47d82 ; add rsp, 0x28 ; ret
0x0000000000047e59 : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x47e72 ; add rsp, 0x28 ; ret
0x0000000000048742 : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x4875b ; add rsp, 0x18 ; ret
0x000000000004878f : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x487a8 ; add rsp, 0x18 ; ret
0x00000000000487e2 : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x487fb ; add rsp, 0x18 ; ret
0x000000000004882f : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x48848 ; add rsp, 0x18 ; ret
0x00000000000ddad5 : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xddb37 ; add rsp, 0x38 ; ret
0x00000000000e27a5 : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xe2807 ; add rsp, 0x38 ; ret
0x00000000000e2835 : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xe2897 ; add rsp, 0x38 ; ret
0x00000000000e2ac5 : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xe2b2f ; add rsp, 0x38 ; ret
0x00000000000e2b65 : or al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xe2bcf ; add rsp, 0x38 ; ret
0x000000000011d8ca : or al, 0x30 ; ror byte ptr [rcx], 0xd0 ; ret
0x000000000010b6a4 : or al, 0x31 ; ror byte ptr [rcx + 0x5d5b0453], 0x41 ; pop rsp ; ret
0x00000000001218e7 : or al, 0x31 ; test ecx, ecx ; jne 0x1218f6 ; ret
0x0000000000121942 : or al, 0x31 ; test ecx, ecx ; jne 0x121956 ; ret
0x0000000000122169 : or al, 0x31 ; test ecx, ecx ; jne 0x122176 ; ret
0x00000000001221b6 : or al, 0x31 ; test ecx, ecx ; jne 0x1221c6 ; ret
0x000000000018a2e0 : or al, 0x3a ; jne 0x18a100 ; vzeroupper ; ret
0x00000000000cd8f2 : or al, 0x3b ; or al, 0xf ; test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x000000000011e26b : or al, 0x3f ; shr eax, cl ; and eax, 3 ; ret
0x000000000012e5e5 : or al, 0x45 ; test edx, edx ; jne 0x12e58d ; mov rax, rdi ; ret
0x00000000001164a3 : or al, 0x48 ; add edx, 8 ; mov qword ptr [rip + 0xd1a81], rdx ; ret
0x00000000000e13d1 : or al, 0x48 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004426c : or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x00000000000e14cf : or al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e1686 : or al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e15f6 : or al, 0x48 ; add esp, 0x18 ; ret
0x0000000000062ecc : or al, 0x48 ; add esp, 0x1d0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000086041 : or al, 0x48 ; add esp, 0x300 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004430b : or al, 0x48 ; add esp, 0x90 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011f1d5 : or al, 0x48 ; add esp, 0xa0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011ba33 : or al, 0x48 ; cmp edi, edx ; jne 0x11ba32 ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000034de5 : or al, 0x48 ; lea ecx, [rdi + rcx*4] ; mov edx, dword ptr [rcx + rdx] ; test edx, edx ; jne 0x34e04 ; ret
0x00000000001760b2 : or al, 0x48 ; lea ecx, [rdx + 0xc] ; jne 0x1762cb ; ret
0x00000000001218e1 : or al, 0x48 ; lea ecx, [rdx + rcx*4] ; mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x1218fc ; ret
0x000000000012193c : or al, 0x48 ; lea ecx, [rdx + rcx*4] ; mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x12195c ; ret
0x0000000000122163 : or al, 0x48 ; lea ecx, [rdx + rcx*4] ; mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x12217c ; ret
0x00000000001221b0 : or al, 0x48 ; lea ecx, [rdx + rcx*4] ; mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x1221cc ; ret
0x0000000000121b05 : or al, 0x48 ; lea ecx, [rsi + rcx*4] ; mov edx, dword ptr [rcx + rdx] ; test edx, edx ; jne 0x121b24 ; ret
0x0000000000122365 : or al, 0x48 ; lea ecx, [rsi + rcx*4] ; mov edx, dword ptr [rcx + rdx] ; test edx, edx ; jne 0x122384 ; ret
0x00000000000b5ddf : or al, 0x48 ; lea edi, [rdi + 0xc] ; jne 0xb653b ; ret
0x00000000000b74a3 : or al, 0x48 ; lea edi, [rdi + 0xc] ; jne 0xb7d5b ; ret
0x000000000013a49c : or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x00000000000bb051 : or al, 0x48 ; mov eax, ebx ; pop rbx ; ret
0x00000000000dbac1 : or al, 0x48 ; mov esi, ebx ; xor edi, edi ; mov eax, 0xe4 ; syscall
0x00000000000253a0 : or al, 0x4c ; sbb al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000e6a74 : or al, 0x57 ; or al, 0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000009d083 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000012c00c : or al, 0x5b ; pop rbp ; ret
0x000000000012a5c3 : or al, 0x5b ; ret
0x00000000000a7065 : or al, 0x66 ; mov dword ptr [rdi + 4], edx ; ret
0x00000000000a2702 : or al, 0x74 ; and ecx, dword ptr [rbp + 0x63490e78] ; ret 0xf41
0x0000000000043483 : or al, 0x75 ; or dh, bl ; addps xmm0, xmm0 ; ret
0x000000000013c0eb : or al, 0x75 ; ret 0x758b
0x00000000000dbc95 : or al, 0x7c ; ret 0x850f
0x000000000008033b : or al, 0x7e ; retf 0x8944
0x0000000000080744 : or al, 0x7e ; rol dword ptr [rcx + rcx*4 - 0x28], 0xeb ; ror dword ptr [rbp - 0x77], cl ; retf 0x4090
0x000000000005b79d : or al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ror dword ptr [rax - 0x77], 1 ; retf 0x8b48
0x00000000000a08ac : or al, 0x80 ; cli ; cmp eax, 0xba ; add byte ptr [rax + 0xf], cl ; ret 0xc3c3
0x00000000000314b3 : or al, 0x83 ; inc byte ptr [rbx] ; je 0x314c6 ; ret
0x00000000000d5b1e : or al, 0x83 ; jmp 0xfffffffff7d5e432
0x00000000000b5b5c : or al, 0x83 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000ba5eb : or al, 0x83 ; loopne 0xba609 ; movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x0000000000074c9b : or al, 0x83 ; ret
0x000000000009a543 : or al, 0x83 ; retf 0x8902
0x000000000007a9af : or al, 0x84 ; ror byte ptr [rdi], cl ; mov byte ptr [rsi - 0x9ffffe3], al ; ret 0xf40
0x00000000000ba5f1 : or al, 0x86 ; add rcx, rsi ; jmp rcx
0x00000000000a6fdf : or al, 0x89 ; add rcx, r9 ; jmp rcx
0x000000000005de52 : or al, 0x89 ; fdiv st(6) ; ret
0x00000000000ba67b : or al, 0x89 ; ret 0xe283
0x00000000000e2c49 : or al, 0x89 ; retf 0x8948
0x00000000000a7643 : or al, 0x8a ; lea r10, [r10 + r9] ; jmp r10
0x00000000000ad414 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000001218e4 : or al, 0x8a ; mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x1218f9 ; ret
0x000000000012193f : or al, 0x8a ; mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x121959 ; ret
0x0000000000122166 : or al, 0x8a ; mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x122179 ; ret
0x00000000001221b3 : or al, 0x8a ; mov ecx, dword ptr [rcx + rsi] ; test ecx, ecx ; jne 0x1221c9 ; ret
0x000000000017b95f : or al, 0x8a ; pcmpeqb xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x0000000000182b6f : or al, 0x8a ; vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x0000000000168ebd : or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000012c807 : or al, 0x8b ; jl 0x12c839 ; or byte ptr [rax + 0xe6], bh ; syscall
0x000000000016393d : or al, 0x8b ; lea r9, [r11 + r9] ; jmp r9
0x000000000018d4b9 : or al, 0x8b ; mov ecx, dword ptr ss:[rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000121b1f : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000121b08 : or al, 0x8e ; mov edx, dword ptr [rcx + rdx] ; test edx, edx ; jne 0x121b21 ; ret
0x0000000000122368 : or al, 0x8e ; mov edx, dword ptr [rcx + rdx] ; test edx, edx ; jne 0x122381 ; ret
0x00000000000fe232 : or al, 0x8f ; add rcx, rdi ; jmp rcx
0x0000000000034de8 : or al, 0x8f ; mov edx, dword ptr [rcx + rdx] ; test edx, edx ; jne 0x34e01 ; ret
0x000000000018aeef : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00000000001638d2 : or al, 0x93 ; add rsi, rdx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000000b52eb : or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000ce256 : or al, 0x97 ; test r9d, r9d ; jne 0xce21a ; mov rax, rdx ; ret
0x0000000000163941 : or al, 0xb ; jmp r9
0x00000000000b52ef : or al, 0xb ; jmp rcx
0x0000000000048a70 : or al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x00000000001161eb : or al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000018cb30 : or al, 0xc2 ; add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000080836 : or al, 0xc7 ; xor al, 0 ; add al, 0 ; add cl, ch ; ret 0xfffc
0x0000000000113264 : or al, 0xd ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000bd649 : or al, 0xe8 ; and dword ptr [rdx - 0x38b60007], ebx ; ret 0xfc01
0x00000000000bfff9 : or al, 0xe8 ; jno 0xc0075 ; stc ; dec dword ptr [rcx - 0x39] ; ret 0xc001
0x00000000000e6bef : or al, 0xe8 ; retf
0x0000000000050299 : or al, 0xe8 ; shr dword ptr [rbp], 1 ; add byte ptr [rcx - 0x39], cl ; ret 0xc001
0x00000000000c2829 : or al, 0xe8 ; stc ; dec dword ptr [rcx - 0x39] ; ret 0xff81
0x000000000008725c : or al, 0xeb ; ret 0x5590
0x000000000014d44a : or al, 0xf ; retf 0x5089
0x0000000000037865 : or al, 0xf ; retf 0x5589
0x00000000001471d0 : or al, 0xf ; retf 0xd189
0x00000000000cd8f5 : or al, 0xf ; test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x00000000000b5de3 : or al, 0xf ; test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x00000000001243c2 : or al, 0xf0 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000124637 : or al, 0xf0 ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000031fd8 : or al, 0xf0 ; test rcx, rcx ; je 0x31fe8 ; call rcx
0x0000000000031fd4 : or al, 0xf3 ; mov rcx, qword ptr [rax + r14*8] ; test rcx, rcx ; je 0x31fec ; call rcx
0x000000000016b403 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000005d006 : or al, 0xf6 ; ret
0x0000000000061f34 : or al, 0xf6 ; ret 0x7401
0x000000000006221f : or al, 0xf6 ; ret 0x7440
0x00000000000600c4 : or al, 0xf6 ; ret 0xf01
0x000000000007a985 : or al, 0xf6 ; ret 0xf08
0x0000000000043273 : or al, 0xf7 ; ret 0xffff
0x00000000001490b8 : or al, 1 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7507
0x0000000000154f98 : or al, 1 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010c1c2 : or al, 1 ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000010cb8e : or al, 1 ; add byte ptr [rax], al ; syscall
0x000000000010c25c : or al, 1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000006c9f3 : or al, 1 ; mov r12, rcx ; jmp 0x6c9cc
0x00000000000b6020 : or al, 5 ; add byte ptr [rax], al ; ret
0x000000000014e371 : or al, 6 ; add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x00000000000a6eb6 : or al, 7 ; cmp ecx, edx ; je 0xa6eba ; cmp ecx, esi ; je 0xa6eba ; ret
0x00000000000a6df6 : or al, 7 ; test cl, cl ; jne 0xa6dee ; ret
0x00000000000535d4 : or al, 9 ; retf 0xbe0f
0x00000000000a6c13 : or al, bl ; nop dword ptr [rax] ; mov byte ptr [rcx - 1], 0 ; mov qword ptr [rdx], rcx ; ret
0x00000000001095f8 : or al, byte ptr [r8] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000011974c : or al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call r12
0x00000000000c707d : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000017bb3d : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017e751 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017bb61 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000005159d : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rdx], 0x4d ; add edx, eax ; jmp 0x515c7
0x0000000000038f19 : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call 0x25149
0x0000000000038e5e : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; mov rbx, r14 ; call 0x2514c
0x00000000001470b2 : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000117591 : or al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000a9a78 : or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000108d32 : or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf 0x1f0f
0x000000000003dbda : or al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; jg 0x3dc02 ; call 0x39ec9
0x00000000000be3de : or al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; ret 0x4c35
0x00000000000846b8 : or al, byte ptr [rax] ; add rsp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x000000000008a3d9 : or al, byte ptr [rax] ; add rsp, 0x80 ; mov eax, edx ; ret
0x000000000008147d : or al, byte ptr [rax] ; add rsp, 0x80 ; mov eax, esi ; pop rbx ; ret
0x000000000008afe8 : or al, byte ptr [rax] ; add rsp, 0x80 ; pop rbx ; ret
0x0000000000083801 : or al, byte ptr [rax] ; add rsp, 0x80 ; ret
0x0000000000145117 : or al, byte ptr [rax] ; add rsp, 8 ; ret
0x0000000000148d3a : or al, byte ptr [rax] ; jmp 0x148c81
0x0000000000140035 : or al, byte ptr [rax] ; mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x140049 ; ret
0x0000000000140125 : or al, byte ptr [rax] ; mov rax, qword ptr fs:[rax] ; ret
0x0000000000109081 : or al, byte ptr [rax] ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x00000000001095f9 : or al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000014513f : or al, byte ptr [rax] ; ret
0x000000000013fbf4 : or al, byte ptr [rax] ; test eax, eax ; je 0x13fc06 ; ret
0x0000000000145d24 : or al, byte ptr [rax] ; test eax, eax ; je 0x145d36 ; ret
0x0000000000140984 : or al, byte ptr [rax] ; test rax, rax ; je 0x140997 ; ret
0x0000000000141e05 : or al, byte ptr [rax] ; test rax, rax ; jne 0x141e17 ; ret
0x000000000013a2e9 : or al, byte ptr [rbx - 0x7bf00007] ; retf
0x000000000003ffcd : or al, byte ptr [rbx - 0x7bf0fd07] ; retf
0x00000000000f2cb7 : or al, byte ptr [rcx - 0x77] ; retf 0xeac0
0x000000000010ea31 : or al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000012d2e3 : or al, byte ptr [rsi] ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000140124 : or al, byte ptr ds:[rax] ; mov rax, qword ptr fs:[rax] ; ret
0x0000000000185047 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000047af9 : or al, ch ; adc edi, edx ; std ; dec dword ptr [rax - 0x77] ; sub byte ptr [rax - 0x77], cl ; ret
0x000000000005372d : or al, ch ; add r15b, r14b ; dec dword ptr [rax - 0x77] ; ret
0x00000000001486c6 : or al, ch ; cmp al, 0xcc ; in eax, dx ; dec dword ptr [rax - 0x77] ; ret
0x00000000000f885b : or al, ch ; mov bh, 0xca ; dec dword ptr [rcx - 0x75] ; jg 0xf8881 ; call 0x25324
0x00000000000a7588 : or al, ch ; movabs byte ptr [0x3948c58948fff7da], al ; ret
0x00000000001456cb : or al, ch ; outsd dx, dword ptr [rsi] ; ret 0
0x000000000014f51b : or al, ch ; pop rdi ; ret 0xfffe
0x000000000010cd67 : or al, ch ; ret
0x000000000004c0c8 : or al, ch ; ret 0xfd90
0x000000000003d0ef : or al, ch ; retf
0x000000000011f060 : or al, ch ; retf 0xcd
0x000000000011e060 : or al, ch ; retf 0xdd
0x0000000000195148 : or al, ch ; retf 0xe901
0x00000000001585df : or al, ch ; stosd dword ptr [rdi], eax ; retf
0x00000000000f88e7 : or al, ch ; sub ecx, edx ; dec dword ptr [rcx - 0x75] ; jg 0xf890d ; call 0x25324
0x000000000012576b : or al, ch ; xchg eax, edi ; sti ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x000000000010d784 : or ax, 0xf700 ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000096294 : or bh, bh ; adc byte ptr [rax - 0x77], cl ; ret 0x4890
0x00000000001474dd : or bh, byte ptr [rax + 2] ; ret
0x00000000000f5fd9 : or bh, dh ; ret
0x000000000014709e : or bl, al ; mov dword ptr [rsi], 0xb ; ret
0x00000000001446fe : or bl, al ; mov eax, 1 ; ret
0x00000000000ecaad : or bl, al ; nop ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x000000000010196c : or bl, al ; nop ; ret
0x000000000015b616 : or bl, al ; nop dword ptr [rax + rax] ; ret
0x000000000013b4d3 : or bl, al ; nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x0000000000094bea : or bl, al ; nop dword ptr [rax] ; mov rax, rdx ; ret
0x00000000000de372 : or bl, al ; nop dword ptr [rax] ; ret
0x00000000000ceaa3 : or bl, al ; nop dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000130f25 : or bl, al ; nop word ptr [rax + rax] ; ret
0x000000000012017e : or bl, al ; ret
0x0000000000118841 : or bl, bpl ; ret 0x1f0f
0x0000000000039c5d : or bl, byte ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000001016d8 : or bl, byte ptr [rdx + 0x59] ; pop rbx ; ret
0x000000000013b8fa : or bl, byte ptr [rdx - 0x76b70012] ; ret
0x00000000000b9126 : or bl, byte ptr [rsi] ; str word ptr [rbx + 0x63] ; or al, 0x83 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000013b746 : or bl, ch ; mov al, 0xe8 ; ret 0xff3a
0x0000000000138d7b : or bl, ch ; or esp, dword ptr [rsi - 0x70] ; call 0x25324
0x0000000000118842 : or bl, ch ; ret 0x1f0f
0x00000000000913aa : or bl, ch ; retf
0x000000000016b5c3 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000014709d : or bl, r8b ; mov dword ptr [rsi], 0xb ; ret
0x00000000000eaaa1 : or byte ptr [r10], r11b ; mov eax, 2 ; ret
0x00000000000eaa31 : or byte ptr [r10], r8b ; xor eax, eax ; ret
0x00000000000e66c2 : or byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x00000000001187e8 : or byte ptr [r11 + 0x94901e0], al ; ret 0x894d
0x00000000000420b8 : or byte ptr [r11 + r9*4 + 0x47], r9b ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x0000000000118726 : or byte ptr [r11 + r9*4 + 0x57], r9b ; adc byte ptr [rcx - 0x77], cl ; ret
0x0000000000056bbf : or byte ptr [r11 + rcx*4 + 0x4d], r9b ; add byte ptr [rbp + 0x39], cl ; ret 0x860f
0x00000000000e7a22 : or byte ptr [r13 + 0x39], r8b ; ret 0x1176
0x000000000012b761 : or byte ptr [r13 + 0x480975c0], r8b ; cmp dword ptr [rdi], 0 ; je 0x12b784 ; ret
0x0000000000147f02 : or byte ptr [r13 + r9*4 + 0x64], r9b ; and al, 0x10 ; lea rsi, [rsp + 0x18] ; call qword ptr [rax]
0x00000000000b4cb0 : or byte ptr [r14 + 0xf], spl ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000000b20bf : or byte ptr [r14 - 0x77], spl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000eaa26 : or byte ptr [r14], r10b ; mov eax, 1 ; ret
0x00000000000eaac6 : or byte ptr [r14], r11b ; mov eax, 2 ; ret
0x000000000008d91c : or byte ptr [r15], cl ; adc dword ptr [rbx + 0x18], eax ; movups xmmword ptr [rbx + 0x28], xmm0 ; pop rbx ; ret
0x0000000000155d1a : or byte ptr [r15], r9b ; adc dword ptr [rdi + 0x18], eax ; mov dword ptr [rdi + 0x28], edx ; ret
0x000000000008aaf0 : or byte ptr [r15], r9b ; mov dh, 0x10 ; pop rbx ; mov eax, edx ; ret
0x0000000000112d00 : or byte ptr [r8 + 0x100], r15b ; mov word ptr [rdi + 0x16], ax ; ret
0x0000000000088858 : or byte ptr [r8 + 0x29], r9b ; ror dword ptr [rax + 0x29], cl ; ret
0x0000000000092a88 : or byte ptr [r8 + 0x39], r9b ; sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x000000000008ea02 : or byte ptr [r8 + 0x3b], r9b ; adc byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x00000000000ecae2 : or byte ptr [r8 + 0x63], r9b ; ret 0xb60f
0x0000000000152d36 : or byte ptr [r8 + 1], dil ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000058827 : or byte ptr [r8 + 2], r15b ; ret
0x00000000000eaab1 : or byte ptr [r8 + r15*4], r11b ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000f45fe : or byte ptr [r8 - 0x75], 4 ; ret 0x488b
0x000000000009a5c2 : or byte ptr [r8 - 0x75], cl ; adc byte ptr [r9 - 0x7d], al ; ret
0x0000000000097b0f : or byte ptr [r8 - 0x75], cl ; or byte ptr [rbx + 0x94807e0], r8b ; ret
0x000000000009a60a : or byte ptr [r8 - 0x75], cl ; sbb byte ptr [r9 - 0x7d], al ; ret 0x4901
0x00000000000b209e : or byte ptr [r8 - 0x76b7f7be], cl ; clc ; ret
0x000000000012613c : or byte ptr [r8 - 0x77], cl ; imul ecx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000174148 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000483fa : or byte ptr [r8 - 0x77], cl ; retf
0x000000000015250d : or byte ptr [r8 - 0x77], r9b ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x00000000000bb58a : or byte ptr [r8 - 0x7d], cl ; ret
0x000000000010949a : or byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000118954 : or byte ptr [r8 - 9], cl ; ret 0xfffe
0x000000000009c7fd : or byte ptr [r8], al ; add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000185222 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000009cb8c : or byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], 0x37 ; ret
0x000000000005c197 : or byte ptr [r8], r8b ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x0000000000147f16 : or byte ptr [r9 + r9*4 - 0x1a], cl ; mov rdi, rbx ; call qword ptr [rax]
0x00000000001187e4 : or byte ptr [r9 - 0x75], r9b ; or byte ptr [r11 + 0x94901e0], al ; ret 0x894d
0x00000000000b20fe : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x000000000011874c : or byte ptr [r9], al ; jne 0x118795 ; ret
0x00000000000ea9f5 : or byte ptr [r9], r11b ; mov eax, 1 ; ret
0x000000000013a494 : or byte ptr [r9], r13b ; add byte ptr [rax], al ; add byte ptr [rcx - 0x76b7f3a9], cl ; ret
0x00000000000eaa8b : or byte ptr [r9], r8b ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000eaa5d : or byte ptr [r9], r8b ; mov eax, 1 ; mov byte ptr [rdi], 0x5b ; ret
0x00000000000eaa0e : or byte ptr [r9], r8b ; mov eax, 1 ; ret
0x0000000000112a38 : or byte ptr [r9], sil ; retf 0xc2f7
0x0000000000112d01 : or byte ptr [rax + 0x100], bh ; mov word ptr [rdi + 0x16], ax ; ret
0x0000000000145703 : or byte ptr [rax + 0x10], bh ; pop rbx ; pop rbp ; ret
0x000000000011181e : or byte ptr [rax + 0x10f], bh ; syscall
0x00000000000a733d : or byte ptr [rax + 0x16], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000042eb1 : or byte ptr [rax + 0x21], 0xc2 ; mov qword ptr [rdi], rdx ; ret
0x00000000001933a5 : or byte ptr [rax + 0x21], cl ; retf 0xb948
0x00000000000a72d4 : or byte ptr [rax + 0x22], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000048543 : or byte ptr [rax + 0x29], cl ; retf 0xc148
0x0000000000088859 : or byte ptr [rax + 0x29], cl ; ror dword ptr [rax + 0x29], cl ; ret
0x000000000008dc55 : or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000012fc76 : or byte ptr [rax + 0x33], cl ; add ecx, dword ptr [rax + 9] ; ret 0x850f
0x000000000011db09 : or byte ptr [rax + 0x38], bh ; syscall
0x00000000000304a4 : or byte ptr [rax + 0x39], cl ; ret
0x000000000002f0e0 : or byte ptr [rax + 0x39], cl ; ret 0x2174
0x000000000002f17a : or byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000012e154 : or byte ptr [rax + 0x39], cl ; ret 0x976
0x000000000005b7b3 : or byte ptr [rax + 0x39], cl ; ret 0xef75
0x000000000015e909 : or byte ptr [rax + 0x39], cl ; ret 0xf177
0x00000000000e467d : or byte ptr [rax + 0x39], cl ; retf
0x000000000008753e : or byte ptr [rax + 0x39], cl ; retf 0x776
0x0000000000092a89 : or byte ptr [rax + 0x39], cl ; sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x000000000008ea03 : or byte ptr [rax + 0x3b], cl ; adc byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x000000000010d4cf : or byte ptr [rax + 0x48], bh ; syscall
0x00000000000e808c : or byte ptr [rax + 0x63], cl ; add al, 0x85 ; fstp xword ptr [rcx - 0x17] ; lea rax, [rdx + rax*8] ; jmp 0xe807c
0x00000000000fe22f : or byte ptr [rax + 0x63], cl ; or al, 0x8f ; add rcx, rdi ; jmp rcx
0x00000000000eb26b : or byte ptr [rax + 0x63], cl ; ret
0x000000000014aed9 : or byte ptr [rax + 0x63], cl ; ret 0x1489
0x00000000000ecae3 : or byte ptr [rax + 0x63], cl ; ret 0xb60f
0x00000000000ed24f : or byte ptr [rax + 0x63], cl ; retf 0xc283
0x000000000010b49b : or byte ptr [rax + 0xc], bh ; pop rbx ; pop rbp ; ret
0x000000000012c80b : or byte ptr [rax + 0xe6], bh ; syscall
0x000000000004953d : or byte ptr [rax + 0xf], 0x44 ; ret 0x14eb
0x00000000000e7f9e : or byte ptr [rax + 0xf], 0xa3 ; ret 0x830f
0x000000000012f34e : or byte ptr [rax + 0xf], al ; mov dh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x000000000002b436 : or byte ptr [rax + 0xf], cl ; ret
0x00000000000d19fe : or byte ptr [rax + 0xf], cl ; retf 0x8948
0x0000000000093a0e : or byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000014bd0d : or byte ptr [rax + 1], bh ; movups xmmword ptr [rdx], xmm1 ; ret
0x000000000014f2e5 : or byte ptr [rax + 1], bh ; movups xmmword ptr [rdx], xmm4 ; ret
0x0000000000153c9a : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000152d37 : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014475b : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x000000000012d3e5 : or byte ptr [rax + 1], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000002de4a : or byte ptr [rax + 1], cl ; fmul dword ptr [rcx] ; retf 0xc8d
0x000000000014bd0c : or byte ptr [rax + 1], dil ; movups xmmword ptr [rdx], xmm1 ; ret
0x0000000000058828 : or byte ptr [rax + 2], bh ; ret
0x0000000000057314 : or byte ptr [rax + 3], cl ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8949
0x00000000000df1bd : or byte ptr [rax + rcx*2 - 0x75], ah ; xor cl, byte ptr [rax - 0x77] ; retf 0x44f6
0x00000000000eaab2 : or byte ptr [rax + rdi*4], bl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000008be64 : or byte ptr [rax - 0x38b7ffeb], al ; ret 0xffff
0x00000000000437e2 : or byte ptr [rax - 0x3f], 0xe0 ; xor byte ptr [rax + 0x21], cl ; retf 0x948
0x0000000000142d31 : or byte ptr [rax - 0x3f], cl ; retf
0x000000000012b240 : or byte ptr [rax - 0x73], 0x51 ; jo 0x12b25e ; adc dword ptr [rbp - 0x78], edi ; call rax
0x000000000012b434 : or byte ptr [rax - 0x73], 0x51 ; jo 0x12b452 ; adc dword ptr [rbp - 0x78], edi ; call rax
0x00000000000dbe9f : or byte ptr [rax - 0x73], cl ; adc al, 0xff ; pop rbx ; pop rbp ; lea rax, [rax + rdx*8] ; ret
0x00000000001762d7 : or byte ptr [rax - 0x73], cl ; adc byte ptr [r8 - 0x77], cl ; retf 0x8348
0x0000000000145139 : or byte ptr [rax - 0x73], cl ; add eax, 0xa47bf ; ret
0x00000000000b5d59 : or byte ptr [rax - 0x73], cl ; jg 0xb5d71 ; jne 0xb653b ; ret
0x00000000000b740d : or byte ptr [rax - 0x73], cl ; jg 0xb7425 ; jne 0xb7d5b ; ret
0x0000000000118951 : or byte ptr [rax - 0x73], cl ; or byte ptr [r8 - 9], cl ; ret 0xfffe
0x00000000000795fe : or byte ptr [rax - 0x73], cl ; or byte ptr [rcx - 0x77], cl ; or r9b, r13b ; ret 0xfff4
0x0000000000057c14 : or byte ptr [rax - 0x73], cl ; push rdi ; add dword ptr [rcx - 0x77], ecx ; push rsp ; ret
0x00000000000f45ff : or byte ptr [rax - 0x75], 4 ; ret 0x488b
0x0000000000100cb8 : or byte ptr [rax - 0x75], 4 ; ret 0x8948
0x0000000000095b1f : or byte ptr [rax - 0x75], cl ; adc al, 0x24 ; jmp 0x95974
0x0000000000135f77 : or byte ptr [rax - 0x75], cl ; adc byte ptr [r8 + 0x39], r9b ; retf 0x830f
0x000000000009a5c3 : or byte ptr [rax - 0x75], cl ; adc byte ptr [r9 - 0x7d], al ; ret
0x000000000015d8b9 : or byte ptr [rax - 0x75], cl ; adc ecx, dword ptr [rax + 1] ; ret 0x3949
0x0000000000121111 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000121172 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x40 ; ret
0x0000000000056c29 : or byte ptr [rax - 0x75], cl ; add byte ptr [r13 + 0x39], r9b ; ret 0xcd74
0x00000000001097d1 : or byte ptr [rax - 0x75], cl ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000011891d : or byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000000cf23f : or byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x0000000000151442 : or byte ptr [rax - 0x75], cl ; cmp al, 0x24 ; call rax
0x00000000000824f4 : or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x0000000000097b10 : or byte ptr [rax - 0x75], cl ; or byte ptr [rbx + 0x94807e0], r8b ; ret
0x000000000009a60b : or byte ptr [rax - 0x75], cl ; sbb byte ptr [r9 - 0x7d], al ; ret 0x4901
0x00000000000b209f : or byte ptr [rax - 0x76b7f7be], cl ; clc ; ret
0x000000000012aca7 : or byte ptr [rax - 0x77], 0xda ; movups xmmword ptr [rbp - 0x78], xmm4 ; call rax
0x000000000003d3ba : or byte ptr [rax - 0x77], cl ; adc al, 0x24 ; call 0x39ec7
0x000000000013b97b : or byte ptr [rax - 0x77], cl ; adc byte ptr [r8 - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000001164d6 : or byte ptr [rax - 0x77], cl ; adc eax, 0xd1a52 ; add rsp, 8 ; ret
0x00000000001164a7 : or byte ptr [rax - 0x77], cl ; adc eax, 0xd1a81 ; ret
0x000000000009c661 : or byte ptr [rax - 0x77], cl ; adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000003d3d0 : or byte ptr [rax - 0x77], cl ; and al, 8 ; mov qword ptr [rsp], rdx ; call 0x39ecc
0x0000000000119085 : or byte ptr [rax - 0x77], cl ; call 0xffffffffe110edee
0x00000000000a7563 : or byte ptr [rax - 0x77], cl ; clc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b1fb0 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000012f188 : or byte ptr [rax - 0x77], cl ; clc ; sar rax, 6 ; ret
0x00000000000a73fb : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000039523 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000015250e : or byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x0000000000086c34 : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x000000000012613d : or byte ptr [rax - 0x77], cl ; imul ecx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b9595 : or byte ptr [rax - 0x77], cl ; jns 0xffffffffed3b9e01 ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000b9535 : or byte ptr [rax - 0x77], cl ; js 0xffffffffed3b9da1 ; mov byte ptr [rdi + 9], ch ; ret
0x0000000000097264 : or byte ptr [rax - 0x77], cl ; mov esp, 0x8024 ; add dh, dh ; ret 0x7504
0x0000000000174149 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000001551f9 : or byte ptr [rax - 0x77], cl ; out 0x4c, al ; mov edi, esp ; call qword ptr [rax]
0x0000000000146eab : or byte ptr [rax - 0x77], cl ; out dx, eax ; pop rbx ; xor eax, eax ; pop rbp ; jmp rdx
0x0000000000098bfd : or byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x0000000000051f31 : or byte ptr [rax - 0x77], cl ; ret
0x0000000000129747 : or byte ptr [rax - 0x77], cl ; ret 0x2b49
0x000000000014938d : or byte ptr [rax - 0x77], cl ; ret 0x3149
0x0000000000126a67 : or byte ptr [rax - 0x77], cl ; ret 0x4b8b
0x00000000000970de : or byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000001546b7 : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000014e615 : or byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000000416aa : or byte ptr [rax - 0x77], cl ; ret 0xc085
0x00000000000483fb : or byte ptr [rax - 0x77], cl ; retf
0x00000000000883bd : or byte ptr [rax - 0x77], cl ; retf 0x294c
0x00000000000df1d7 : or byte ptr [rax - 0x77], cl ; retf 0x44f6
0x000000000002fcd8 : or byte ptr [rax - 0x77], cl ; retf 0x8966
0x0000000000032bd1 : or byte ptr [rax - 0x77], cl ; rol byte ptr [rax - 0x75], 1 ; cmp byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000712b3 : or byte ptr [rax - 0x77], cl ; test dword ptr [rax + 0x31fffffa], eax ; shr cl, 0xdc ; retf
0x000000000011901d : or byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 0xd] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000869fd : or byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000140078 : or byte ptr [rax - 0x7b], cl ; push qword ptr [rbp - 0x16] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000091002 : or byte ptr [rax - 0x7b], cl ; push qword ptr [rsp + rax - 0x58] ; add dword ptr [rsp + rbp - 0x77], esi ; ret 0x8948
0x0000000000106136 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000000000009c5d7 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x000000000015d809 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rcx + rsi + 0x48], 0x8b ; adc ecx, dword ptr [rax + 1] ; ret 0x3949
0x00000000000b7f19 : or byte ptr [rax - 0x7bf0ffc8], al ; ret 0
0x0000000000046506 : or byte ptr [rax - 0x7d], cl ; ret
0x00000000000a62d6 : or byte ptr [rax - 0x7d], cl ; ret 0x2901
0x0000000000049f2d : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000002edc6 : or byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000015e939 : or byte ptr [rax - 0x7d], cl ; retf 0x4802
0x00000000000bb47a : or byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*4], 0x10 ; test edx, edx ; jne 0xbb483 ; ret
0x00000000000ed3a0 : or byte ptr [rax - 0x7d], cl ; rol dword ptr [rcx], 0x39 ; ret 0xc675
0x00000000000bb56d : or byte ptr [rax - 0x7d], r9b ; ret
0x000000000008d770 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000084aab : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000118955 : or byte ptr [rax - 9], cl ; ret 0xfffe
0x000000000017bd9c : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000420f5 : or byte ptr [rax], 0x48 ; add ecx, dword ptr [rdi + 0x20] ; mov rax, rcx ; ret
0x000000000009c7fe : or byte ptr [rax], al ; add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000002d77f : or byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; rol byte ptr [rbp - 0x75], 1 ; pop rbp ; adc byte ptr [rbp - 0x77], cl ; retf 0x149
0x0000000000096d5a : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x4e72
0x0000000000094516 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000194419 : or byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000119784 : or byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call r12
0x0000000000030c4a : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000019342a : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000037a47 : or byte ptr [rax], al ; add byte ptr [rax - 0x7af0cc07], al ; ret 5
0x000000000017bd9d : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017e8f1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017bdc1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000140200 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000009cb8d : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], 0x37 ; ret
0x00000000000e3b7d : or byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0xe392b
0x000000000011dc22 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x119 ; syscall
0x00000000000441e1 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x7f ; syscall
0x000000000004421e : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x82 ; syscall
0x0000000000044172 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x0000000000044028 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x0000000000044eb0 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rsp] ; mov eax, ecx ; syscall
0x00000000001117bc : or byte ptr [rax], al ; add byte ptr [rax], al ; mov rdx, rbx ; mov eax, 0x10f ; syscall
0x00000000000ba6d1 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000027b01 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000010d0b1 : or byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000000a9bf8 : or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000139b1e : or byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret 0x840f
0x0000000000098896 : or byte ptr [rax], al ; add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x98868 ; ret
0x0000000000190774 : or byte ptr [rax], al ; add byte ptr [rcx - 0x47], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000015afda : or byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000015abbb : or byte ptr [rax], al ; call qword ptr [rax]
0x00000000000dd385 : or byte ptr [rax], al ; call r14
0x000000000015e7e5 : or byte ptr [rax], al ; mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x000000000015e865 : or byte ptr [rax], al ; mov dword ptr fs:[rax], 0x26 ; xor eax, eax ; ret
0x000000000015b90a : or byte ptr [rax], al ; mov eax, 1 ; add rsp, 8 ; ret
0x000000000011f643 : or byte ptr [rax], al ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000005c198 : or byte ptr [rax], al ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x00000000000dd512 : or byte ptr [rax], al ; mov rax, r14 ; call rax
0x000000000015a908 : or byte ptr [rax], al ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000160675 : or byte ptr [rax], al ; neg edx ; mov dword ptr fs:[rax], edx ; mov eax, 0xffffffff ; ret
0x000000000015e958 : or byte ptr [rax], al ; ret
0x000000000015b118 : or byte ptr [rax], al ; test eax, eax ; jne 0x15b131 ; xor eax, eax ; pop rbx ; ret
0x0000000000127437 : or byte ptr [rax], al ; xor eax, eax ; call 0x125e4b
0x000000000015e94f : or byte ptr [rax], al ; xor eax, eax ; mov qword ptr [rip + 0x88c96], rsi ; ret
0x00000000000b955d : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000b959b : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000b953b : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x000000000018381e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000013b714 : or byte ptr [rbp + 0x32], dh ; add rsp, 0x38 ; ret
0x0000000000140bdd : or byte ptr [rbp + 0x33], cl ; push rax ; adc byte ptr [rbp + 9], cl ; retf 0x850f
0x0000000000140b84 : or byte ptr [rbp + 0x33], cl ; push rax ; adc byte ptr [rbp + 9], cl ; retf 0xa375
0x00000000000e7a23 : or byte ptr [rbp + 0x39], al ; ret 0x1176
0x00000000000f2132 : or byte ptr [rbp + 0x39], cl ; out 0x75, eax ; retf
0x000000000012b762 : or byte ptr [rbp + 0x480975c0], al ; cmp dword ptr [rdi], 0 ; je 0x12b783 ; ret
0x000000000013b2ff : or byte ptr [rbp + 0x5d5b2b04], cl ; ret
0x00000000000f3123 : or byte ptr [rbp + 3], cl ; mov word ptr [rax + rcx*4], fs ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf 0x8b48
0x0000000000043107 : or byte ptr [rbp + 6], dh ; addsd xmm0, xmm0 ; ret
0x0000000000056983 : or byte ptr [rbp + rcx*4 + 0x2c], cl ; ret 0x894c
0x0000000000147f03 : or byte ptr [rbp + rcx*4 + 0x64], cl ; and al, 0x10 ; lea rsi, [rsp + 0x18] ; call qword ptr [rax]
0x000000000012c893 : or byte ptr [rbp - 0x1f], dh ; pop rbx ; mov eax, 5 ; pop r12 ; pop rbp ; ret
0x00000000000812bf : or byte ptr [rbp - 0x627bf040], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000087c97 : or byte ptr [rbp - 0x65], dh ; jmp 0x87c63
0x00000000001597dc : or byte ptr [rbp - 0x6d7bf040], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000004639c : or byte ptr [rbp - 0x73], cl ; sub al, 0x2e ; call rax
0x00000000001471b9 : or byte ptr [rbp - 0x744d8a2e], al ; push rax ; or byte ptr [rdi], cl ; retf 0xd189
0x0000000000026fff : or byte ptr [rbp - 0x757bf040], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000fd68b : or byte ptr [rbp - 0x77], cl ; ret 0x8548
0x00000000001098f4 : or byte ptr [rbp - 0x77], cl ; retf 0xc748
0x00000000000ee3d9 : or byte ptr [rbp - 0x7b], al ; sal byte ptr [rax + rax*8 + 0x4d], 0x89 ; retf 0xc031
0x0000000000065877 : or byte ptr [rbp - 0x7b], cl ; in al, 0x75 ; retf 0x37e9
0x00000000000f0f00 : or byte ptr [rbp - 0x9dc8b01], al ; ret
0x0000000000084d09 : or byte ptr [rbx + 0x14], dh ; lea rcx, [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x00000000000929e4 : or byte ptr [rbx + 0x15], 0 ; add dword ptr [rip + 0x154b75], 1 ; ret
0x00000000000fe818 : or byte ptr [rbx + 0x38], 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009c20a : or byte ptr [rbx + 0x50], 1 ; movups xmmword ptr [rbx + 0x38], xmm0 ; mov qword ptr [rbx], rsi ; call rcx
0x000000000015439e : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x0000000000147865 : or byte ptr [rbx + 0x5d], bl ; jmp rcx
0x0000000000098c48 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; jmp rax
0x0000000000029181 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000009c6e3 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000047051 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000e66c3 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000027bf3 : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000097b14 : or byte ptr [rbx + 0x94807e0], al ; ret
0x0000000000097b13 : or byte ptr [rbx + 0x94807e0], r8b ; ret
0x00000000001187e9 : or byte ptr [rbx + 0x94901e0], al ; ret 0x894d
0x0000000000118863 : or byte ptr [rbx + 0x94901e1], al ; retf 0x894c
0x0000000000084bd2 : or byte ptr [rbx + 0xb], dh ; lea rcx, [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x000000000009a208 : or byte ptr [rbx + 0xf4801e0], al ; ret 0xfc3
0x00000000000420b9 : or byte ptr [rbx + rcx*4 + 0x47], cl ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x0000000000056bc0 : or byte ptr [rbx + rcx*4 + 0x4d], cl ; add byte ptr [rbp + 0x39], cl ; ret 0x860f
0x0000000000118727 : or byte ptr [rbx + rcx*4 + 0x57], cl ; adc byte ptr [rcx - 0x77], cl ; ret
0x0000000000133513 : or byte ptr [rbx - 0x17cfdb84], cl ; ret
0x0000000000027f6e : or byte ptr [rbx - 0x3dc667bb], 0xf ; ret 0x4589
0x000000000008a507 : or byte ptr [rbx - 0x3f7a8fb9], cl ; js 0x8a518 ; ret
0x000000000015801e : or byte ptr [rbx - 0x6bf0f502], al ; ret
0x00000000000ef18d : or byte ptr [rbx - 0x76bac7b2], cl ; ret 0x418d
0x0000000000081995 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x000000000005d5b4 : or byte ptr [rbx - 0xdf7b], cl ; dec dword ptr [rdi] ; ret
0x0000000000157c8d : or byte ptr [rbx - 6], 0x89 ; retf 0x8b48
0x000000000012be74 : or byte ptr [rbx], al ; add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x0000000000030f8d : or byte ptr [rbx], ch ; push rsp ; and al, 0x10 ; mov dword ptr [r12], edx ; jmp 0x30f64
0x000000000005854b : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00000000001494a2 : or byte ptr [rcx + 0x31], cl ; ror byte ptr [rbp - 0x75], 1 ; sbb dword ptr [rbp + 0x31], ecx ; ret 0x314d
0x00000000000cdac5 : or byte ptr [rcx + 0x39], al ; enter 0xd75, -0x7b ; leave ; je 0xcdae4 ; xor eax, eax ; ret
0x00000000000f0d0b : or byte ptr [rcx + 0x39], cl ; ret
0x000000000002a678 : or byte ptr [rcx + 0x39], cl ; retf 0x1d76
0x0000000000061969 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x000000000013f2b7 : or byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x0000000000082814 : or byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; pop r13 ; ret
0x0000000000065078 : or byte ptr [rcx + 0x44c001ca], 0x29 ; ret 0xd039
0x00000000000ef1c8 : or byte ptr [rcx + 0x63493846], cl ; ret 0x4c6
0x0000000000043285 : or byte ptr [rcx + 0x66fc2454], 0xf ; outsb dx, byte ptr [rsi] ; and al, 0xfc ; ret
0x000000000013b44d : or byte ptr [rcx + 0x80fe], al ; add byte ptr [rdi], cl ; ret 0xfc3
0x0000000000158c5a : or byte ptr [rcx + 1], cl ; idiv byte ptr [rcx] ; retf 0x850f
0x000000000005688b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000000e3c54 : or byte ptr [rcx + 3], bh ; add byte ptr [rax - 0x77], cl ; ret 0xc0e9
0x00000000000576c0 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x00000000000a0603 : or byte ptr [rcx + rbp - 0x10], cl ; mov rsi, rax ; mov rbx, rax ; call 0x9d02c
0x0000000000095c2b : or byte ptr [rcx + rcx*4 + 0x54], cl ; and al, 0x10 ; call 0x1126f8
0x0000000000136eff : or byte ptr [rcx + rcx*4 - 0x11], cl ; mov rsi, qword ptr [rsp] ; call r12
0x000000000012b59b : or byte ptr [rcx + rcx*4 - 0x16], 0xf ; adc dword ptr [rbp - 0x78], edi ; call rax
0x000000000012b16f : or byte ptr [rcx + rcx*4 - 0x16], 0xf ; adc dword ptr [rbp - 0x78], esi ; call rax
0x000000000014ee43 : or byte ptr [rcx + rcx*4 - 0x16], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ec76e : or byte ptr [rcx + rcx*4 - 0x18], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000118a5c : or byte ptr [rcx + rcx*4 - 0x18], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000147f17 : or byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbx ; call qword ptr [rax]
0x00000000001447e7 : or byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012ac3c : or byte ptr [rcx + rcx*4 - 0xe], 0xf ; adc dword ptr [rbp - 0x78], ebp ; call rax
0x000000000012aa0e : or byte ptr [rcx + rcx*4 - 0xe], 0xf ; adc dword ptr [rbp - 0x78], ecx ; call rax
0x0000000000045352 : or byte ptr [rcx + rcx*4 - 2], cl ; call r14
0x0000000000148dd1 : or byte ptr [rcx + rcx*4 - 6], cl ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00000000000a6f46 : or byte ptr [rcx + rcx*8 - 0x3fce128b], al ; ret
0x0000000000056892 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000014aa79 : or byte ptr [rcx - 0x3f7cb7f0], cl ; add al, 0x89 ; retf 0x3941
0x00000000000e2c45 : or byte ptr [rcx - 0x3f], cl ; call 0x48d8b55f
0x0000000000043b57 : or byte ptr [rcx - 0x3fcebf8d], cl ; pop rbx ; ret
0x00000000000fd9dc : or byte ptr [rcx - 0x3ff001e], al ; dec dword ptr [rcx] ; retf 0x5089
0x0000000000066791 : or byte ptr [rcx - 0x48], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x6678a
0x0000000000037861 : or byte ptr [rcx - 0x75], al ; or al, 0xf ; retf 0x5589
0x000000000003788c : or byte ptr [rcx - 0x75], al ; push rbp ; adc al, 0xf ; retf 0x5589
0x00000000000562ae : or byte ptr [rcx - 0x75], cl ; adc al, 0xc0 ; mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; ret
0x000000000005651e : or byte ptr [rcx - 0x75], cl ; adc al, 0xc8 ; mov qword ptr [rax + rcx*8], rdx ; xor eax, eax ; ret
0x00000000001187e5 : or byte ptr [rcx - 0x75], cl ; or byte ptr [r11 + 0x94901e0], al ; ret 0x894d
0x00000000000b20ff : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x000000000014a5eb : or byte ptr [rcx - 0x77], al ; ret 0x8948
0x0000000000079602 : or byte ptr [rcx - 0x77], cl ; or r9b, r13b ; ret 0xfff4
0x00000000000957a4 : or byte ptr [rcx - 0x77], cl ; ret
0x0000000000146638 : or byte ptr [rcx - 0x77], cl ; ret 0x8b48
0x000000000019278b : or byte ptr [rcx - 0x77], cl ; retf 0xb948
0x00000000001211e8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x1211f9 ; ret
0x0000000000121278 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x121289 ; ret
0x0000000000121318 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x121329 ; ret
0x00000000001213a8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x1213b9 ; ret
0x0000000000121438 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x121449 ; ret
0x00000000001214c8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x1214d9 ; ret
0x0000000000121568 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x121579 ; ret
0x0000000000121608 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x121619 ; ret
0x00000000001216a8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x1216b9 ; ret
0x0000000000121738 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x121749 ; ret
0x00000000001217d3 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x1217e4 ; ret
0x0000000000121868 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x121879 ; ret
0x0000000000121b8a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x121b9b ; ret
0x0000000000121c0a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x121c1b ; ret
0x0000000000121c8a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x121c9b ; ret
0x0000000000121d0a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x121d1b ; ret
0x0000000000121d8a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x121d9b ; ret
0x0000000000121e0a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x121e1b ; ret
0x0000000000121e8a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x121e9b ; ret
0x0000000000121f0a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x121f1b ; ret
0x0000000000121f8a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x121f9b ; ret
0x000000000012200a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x12201b ; ret
0x0000000000122087 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x122098 ; ret
0x000000000012210a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x12211b ; ret
0x0000000000118d36 : or byte ptr [rcx - 0x7d], al ; ret 0x4901
0x000000000005691e : or byte ptr [rcx - 0x7d], cl ; clc ; clc ; jne 0x5691a ; mov rax, rdx ; ret
0x00000000000bb309 : or byte ptr [rcx - 0x7d], cl ; ret
0x0000000000151bda : or byte ptr [rcx], 0 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000636ac : or byte ptr [rcx], ah ; test byte ptr [rax - 0x77], cl ; ret
0x0000000000054e37 : or byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x4e9
0x000000000010c1d2 : or byte ptr [rcx], al ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000063f96 : or byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000063a44 : or byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x000000000010c274 : or byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000118746 : or byte ptr [rcx], al ; je 0x118790 ; test byte ptr [r11 + 8], 1 ; jne 0x11879b ; ret
0x0000000000118745 : or byte ptr [rcx], al ; je 0x118791 ; test byte ptr [r11 + 8], 1 ; jne 0x11879c ; ret
0x000000000011874d : or byte ptr [rcx], al ; jne 0x118794 ; ret
0x0000000000143009 : or byte ptr [rcx], al ; jne 0x142f7d ; jmp 0x142fe6
0x00000000000eaa8c : or byte ptr [rcx], al ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000eaa5e : or byte ptr [rcx], al ; mov eax, 1 ; mov byte ptr [rdi], 0x5b ; ret
0x00000000000eaa0f : or byte ptr [rcx], al ; mov eax, 1 ; ret
0x0000000000148093 : or byte ptr [rcx], al ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000001587d5 : or byte ptr [rcx], bh ; ret 0x3e75
0x0000000000156fc8 : or byte ptr [rcx], bh ; ret 0x5375
0x00000000000bcb73 : or byte ptr [rcx], bh ; ret 0x840f
0x000000000010091c : or byte ptr [rcx], bh ; retf 0x8c0f
0x00000000000ea9f6 : or byte ptr [rcx], bl ; mov eax, 1 ; ret
0x000000000013a495 : or byte ptr [rcx], ch ; add byte ptr [rax], al ; add byte ptr [rcx - 0x76b7f3a9], cl ; ret
0x00000000000c8983 : or byte ptr [rcx], ch ; ret
0x00000000000ec6d7 : or byte ptr [rcx], ch ; ror dword ptr [rax + 0x63], cl ; ror byte ptr [rax + 0x63], cl ; retf
0x000000000010462f : or byte ptr [rcx], dh ; fild dword ptr [rbx - 0x6bf0fb08] ; ret
0x0000000000082473 : or byte ptr [rcx], dh ; in eax, dx ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000098c13 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x48], cl ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000047b63 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000fe81b : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000112a39 : or byte ptr [rcx], dh ; retf 0xc2f7
0x00000000000d5e86 : or byte ptr [rcx], dh ; rol byte ptr [rbp - 0x7b], cl ; fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0x8d48
0x000000000010b747 : or byte ptr [rcx], dh ; ror byte ptr [rcx - 0x7cb7fbad], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000010b486 : or byte ptr [rcx], dh ; ror byte ptr [rcx - 0x7cb7ffa3], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000156fc7 : or byte ptr [rcx], dil ; ret 0x5375
0x00000000001587d4 : or byte ptr [rcx], r15b ; ret 0x3e75
0x00000000000636ab : or byte ptr [rcx], spl ; test byte ptr [rax - 0x77], cl ; ret
0x000000000008aa17 : or byte ptr [rdi], 0x84 ; ret 0
0x000000000002a756 : or byte ptr [rdi], 0x87 ; retf
0x00000000000ba5db : or byte ptr [rdi], 0xa2 ; jmp 0xba5a7
0x000000000008d91d : or byte ptr [rdi], cl ; adc dword ptr [rbx + 0x18], eax ; movups xmmword ptr [rbx + 0x28], xmm0 ; pop rbx ; ret
0x00000000000910ed : or byte ptr [rdi], cl ; adc dword ptr [rbx + 0x38], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000091028 : or byte ptr [rdi], cl ; adc dword ptr [rbx + 0x38], eax ; mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000155d1b : or byte ptr [rdi], cl ; adc dword ptr [rdi + 0x18], eax ; mov dword ptr [rdi + 0x28], edx ; ret
0x00000000000350b4 : or byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x0000000000090f0f : or byte ptr [rdi], cl ; mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008d351 : or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x000000000008aaf1 : or byte ptr [rdi], cl ; mov dh, 0x10 ; pop rbx ; mov eax, edx ; ret
0x000000000014213a : or byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000eb267 : or byte ptr [rdi], cl ; mov dh, 0xc ; or byte ptr [rax + 0x63], cl ; ret
0x000000000014cab5 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add eax, 1 ; ret
0x000000000015614a : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add rsp, 0x18 ; ret
0x000000000010e990 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x000000000011dd58 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000014798d : or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x0000000000052ff8 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000189c90 : or byte ptr [rdi], cl ; pushfq ; sal bh, 0xd8 ; or eax, 1 ; vzeroupper ; ret
0x00000000001471c0 : or byte ptr [rdi], cl ; retf 0xd189
0x0000000000037ef9 : or byte ptr [rdi], cl ; retf 0xfa83
0x0000000000163f0b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x00000000000ecbe1 : or byte ptr [rdi], cl ; test byte ptr [rbx + 0x5bffffff], al ; ret
0x00000000000c5af1 : or byte ptr [rdi], cl ; test dword ptr [rax], ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000c7e51 : or byte ptr [rdi], cl ; test dword ptr [rax], ecx ; add eax, 0x83480000 ; ret 0x4801
0x000000000005440d : or byte ptr [rdi], cl ; test dword ptr [rcx - 0x7c000007], esi ; ret 0x3901
0x00000000000c63a1 : or byte ptr [rdi], cl ; test eax, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000c5d19 : or byte ptr [rdi], cl ; test eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000c8041 : or byte ptr [rdi], cl ; test eax, edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000c7c70 : or byte ptr [rdi], cl ; test ecx, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000c7208 : or byte ptr [rdi], cl ; test ecx, edi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000174285 : or byte ptr [rdi], cl ; xchg byte ptr [rcx], ah ; add byte ptr [rax - 0x7bf0ffc7], al ; retf
0x00000000001019ec : or byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x0000000000120854 : or byte ptr [rdi], cl ; xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000000574b2 : or byte ptr [rdi], cl ; xchg eax, edx ; ret 0x8949
0x00000000000f3c2c : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc083
0x0000000000026bba : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000018db81 : or byte ptr [rdx + 0xa], dh ; vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000148ee3 : or byte ptr [rdx + 0xff], bh ; mov rdi, rbp ; call 0x1551ab
0x000000000009cb7d : or byte ptr [rdx + 8], dh ; mov qword ptr [rdi], rsi ; ret
0x000000000009c70c : or byte ptr [rdx - 0x76b70008], 0xc1 ; jmp 0x9c6e0
0x000000000010e99b : or byte ptr [rdx], al ; add byte ptr [rsi - 0x70], ah ; mov eax, 0x56 ; syscall
0x000000000011249b : or byte ptr [rdx], al ; mov eax, dword ptr [rsp + 0xc] ; jne 0x112474 ; neg eax ; jmp 0x112474
0x00000000000eaa32 : or byte ptr [rdx], al ; xor eax, eax ; ret
0x00000000000eaaa2 : or byte ptr [rdx], bl ; mov eax, 2 ; ret
0x0000000000112782 : or byte ptr [rip + 0x100f], ah ; ret
0x0000000000112781 : or byte ptr [rip + 0x100f], r12b ; ret
0x000000000011782b : or byte ptr [rip + 0x415d5b00], cl ; pop rsp ; ret
0x00000000000c7e54 : or byte ptr [rip - 0x7cb80000], al ; ret 0x4801
0x0000000000112484 : or byte ptr [rsi + 0x10], bh ; mov eax, 0x48 ; syscall
0x00000000000b2074 : or byte ptr [rsi + 0xf], ah ; adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000b4cb1 : or byte ptr [rsi + 0xf], ah ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000000a75e7 : or byte ptr [rsi + 0xf], ah ; out dx, eax ; shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x0000000000043951 : or byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; add al, 0x24 ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000b20c0 : or byte ptr [rsi - 0x77], ah ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000eaac7 : or byte ptr [rsi], bl ; mov eax, 2 ; ret
0x00000000000eaa27 : or byte ptr [rsi], dl ; mov eax, 1 ; ret
0x000000000008c2a6 : or ch, 0x80 ; cmp esi, 2 ; cmove edx, ecx ; mov dword ptr [rdi], edx ; ret
0x0000000000098032 : or cl, ah ; adc al, 0 ; jne 0x9804f ; jmp 0x98069
0x0000000000042cc3 : or cl, bl ; in eax, 0xdf ; loopne 0x42cb2 ; fsub dword ptr [rip + 0x200] ; ret
0x0000000000042c1b : or cl, bl ; std ; fstp st(1) ; ret
0x0000000000055505 : or cl, bpl ; ret
0x0000000000181334 : or cl, byte ptr [rax + 0x29] ; clc ; ret
0x0000000000030df1 : or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x00000000000ebdc2 : or cl, byte ptr [rax + 0x39] ; ret 0x870f
0x00000000001419d8 : or cl, byte ptr [rax + 0xf] ; retf 0x8548
0x0000000000140de6 : or cl, byte ptr [rax + 0xf] ; retf 0xb60f
0x000000000008820d : or cl, byte ptr [rax + 1] ; ret 0x8948
0x00000000000b5da1 : or cl, byte ptr [rax - 0x73] ; jg 0xb5dbb ; jne 0xb653b ; ret
0x00000000000b7455 : or cl, byte ptr [rax - 0x73] ; jg 0xb746f ; jne 0xb7d5b ; ret
0x0000000000176072 : or cl, byte ptr [rax - 0x73] ; or cl, byte ptr [rdi] ; test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x00000000000ff0de : or cl, byte ptr [rax - 0x77] ; ret 0x69e8
0x000000000017ab4c : or cl, byte ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; retf 0xfff5
0x0000000000083db3 : or cl, byte ptr [rax - 0x7d] ; ret
0x00000000000641f4 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000126b07 : or cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x0000000000148425 : or cl, byte ptr [rax - 0x7d] ; ret 0xf04
0x00000000000485eb : or cl, byte ptr [rcx + 0x4890c30e] ; mov edx, ecx ; jmp 0x485bf
0x00000000000485eb : or cl, byte ptr [rcx + 0x4890c30e] ; mov edx, ecx ; jmp 0x485c1
0x000000000015e1f6 : or cl, byte ptr [rcx + rcx*4 - 0xe] ; add r9, qword ptr [rsp + 8] ; call rax
0x0000000000125a98 : or cl, byte ptr [rcx - 0x77] ; fisttp qword ptr [rax + 0x29] ; fimul word ptr [rax - 0x77] ; ret
0x0000000000104754 : or cl, byte ptr [rcx - 0x77] ; ret 0xf44
0x00000000000ba5b6 : or cl, byte ptr [rdi] ; add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rax, rsi ; jmp rax
0x0000000000176076 : or cl, byte ptr [rdi] ; test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x0000000000158021 : or cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x0000000000113424 : or cl, byte ptr [rip + 0x64d8f700] ; mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000055506 : or cl, ch ; ret
0x0000000000079606 : or cl, ch ; ret 0xfff4
0x00000000000418db : or cl, ch ; ret 0xfffc
0x0000000000056106 : or cl, ch ; ret 0xfffe
0x00000000000b9f15 : or cl, cl ; cmove rax, rdx ; ret
0x00000000000f465b : or cl, dl ; call 0x344b08ef
0x000000000004adc3 : or dh, al ; and al, 0x67 ; add dword ptr [rcx - 0x77], ecx ; ret 0x8944
0x000000000004de4b : or dh, al ; and al, 0x6f ; add dword ptr [rcx - 0x77], ecx ; ret 0x8944
0x0000000000124581 : or dh, al ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000012485a : or dh, al ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000017b9e9 : or dh, al ; movzx eax, byte ptr [rdi + rcx] ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000043485 : or dh, bl ; addps xmm0, xmm0 ; ret
0x000000000016b4e3 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000089257 : or dh, byte ptr [rcx + rdi*4 + 0x48] ; add esp, 0x18 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000122bb2 : or dh, byte ptr [rcx] ; rol byte ptr [rbp - 0x7b], cl ; in al, 0xf ; xchg eax, ebp ; ret 0xdaf7
0x0000000000091c26 : or dh, byte ptr [rdi + rcx + 0x48] ; cmp ecx, esi ; jne 0x91c2b ; lea eax, [rdx + rdi] ; ret
0x0000000000087316 : or dh, byte ptr [rdi + rcx + 0x48] ; cmp esi, ecx ; jb 0x8731b ; lea eax, [rdx + rdi] ; ret
0x00000000000eca3a : or dh, byte ptr [rsi + rdi + 0x48] ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000097285 : or dh, dh ; ret 0x7404
0x0000000000094ed7 : or dh, dh ; ret 0xf02
0x000000000009724a : or dh, dh ; ret 0xf04
0x000000000016d4f4 : or dl, al ; add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000044e74 : or dl, bh ; je 0x44e8a ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f28fb : or dl, cl ; call 0xc4aeb8f
0x00000000000a6f08 : or dl, cl ; jne 0xa6ef9 ; cmp r8d, ecx ; je 0xa6ef9 ; ret
0x000000000010c286 : or dword ptr [rax + 0x1c], edi ; syscall
0x0000000000030de8 : or dword ptr [rax + 0x39], 0xf1a72c2 ; mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x00000000000f8ecb : or dword ptr [rax + 0x39], ecx ; ret 0x850f
0x000000000003385a : or dword ptr [rax + 0x440ffff9], eax ; retf 0xd88
0x0000000000110577 : or dword ptr [rax + 0x64], 1 ; call 0xdc866
0x00000000000f93dc : or dword ptr [rax + 1], 0xffffffd8 ; jmp rax
0x0000000000101b64 : or dword ptr [rax + 8], 0x2000 ; ret
0x00000000000e3a00 : or dword ptr [rax + rax], 0x48 ; movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x00000000000e3d55 : or dword ptr [rax + rax], 0xffffff89 ; test byte ptr [rax + 0x63], 4 ; mov dl, 0x48 ; add eax, edx ; jmp rax
0x0000000000162467 : or dword ptr [rax + rax], edx ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000112c03 : or dword ptr [rax + rax], edx ; mov eax, 0x10 ; syscall
0x000000000013e9ad : or dword ptr [rax + rsi*8 - 0x7c], esi ; ror byte ptr [rdi], 0x94 ; ret 0xa3c
0x000000000013b5ed : or dword ptr [rax - 0x3f], ecx ; out 4, al ; lea rax, [rdi + rsi + 8] ; ret
0x0000000000136e60 : or dword ptr [rax - 0x73], ecx ; cmp eax, 0xb2378 ; call rax
0x00000000000b5d7c : or dword ptr [rax - 0x73], ecx ; jg 0xb5d95 ; jne 0xb653b ; ret
0x00000000000b7430 : or dword ptr [rax - 0x73], ecx ; jg 0xb7449 ; jne 0xb7d5b ; ret
0x000000000014bc83 : or dword ptr [rax - 0x73], ecx ; mov ebx, 0xc8 ; call rax
0x0000000000176052 : or dword ptr [rax - 0x73], ecx ; or qword ptr [rdi], rcx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x00000000000824b8 : or dword ptr [rax - 0x75], ecx ; mov edi, 0xe0 ; jmp rax
0x00000000000f1626 : or dword ptr [rax - 0x77], ecx ; retf 0xd348
0x000000000005c332 : or dword ptr [rax - 0x7cb7fa], ecx ; or dword ptr [rdi - 0x2b], esi ; mov rax, rsi ; ret
0x0000000000039c0b : or dword ptr [rax - 0x7d], 0x4f8801c7 ; dec dword ptr [rax - 0x7d] ; ret 0x4901
0x000000000011519d : or dword ptr [rax - 0x7d], ecx ; call 0xffffffffc34a99ad
0x0000000000033256 : or dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000000c574b : or dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000097a75 : or dword ptr [rax - 0x7d], ecx ; retf 0xb804
0x00000000000b4fde : or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000015197c : or dword ptr [rax], eax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000e9ae1 : or dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0xdd75
0x00000000000fa034 : or dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x00000000001196a7 : or dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call r12
0x000000000007c0c6 : or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000017bccd : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001836cf : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017bc27 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000158110 : or dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000150710 : or dword ptr [rax], eax ; add byte ptr [rax], al ; call qword ptr [r10]
0x000000000004216a : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000089277 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000002741a : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edi ; ret
0x0000000000160dd9 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, eax ; mov eax, 0x3e ; syscall
0x0000000000147097 : or dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x000000000010b6b2 : or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000001174bd : or dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000117519 : or dword ptr [rax], eax ; add byte ptr [rax], al ; xor edi, edi ; or r10d, 0x40 ; mov eax, ecx ; syscall
0x00000000000af11e : or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001906cf : or dword ptr [rax], eax ; add byte ptr [rcx - 0x44], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf 0x8949
0x0000000000185099 : or dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; jmp 0x1850b9
0x00000000000b4205 : or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000008d4de : or dword ptr [rax], eax ; add rsp, 0x80 ; mov eax, esi ; pop rbx ; ret
0x0000000000090265 : or dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x000000000014d1f8 : or dword ptr [rax], eax ; call 0x48929
0x00000000001160fc : or dword ptr [rax], eax ; call 0x823a4
0x00000000001519f6 : or dword ptr [rax], eax ; cmp rax, rdx ; je 0x151a9c ; pop rbx ; ret
0x00000000001474ed : or dword ptr [rax], eax ; jmp qword ptr [rdx + rax*8]
0x0000000000116148 : or dword ptr [rax], eax ; lea rdi, [rip + 0x9b45c] ; call 0x823ab
0x00000000001160f5 : or dword ptr [rax], eax ; lea rsi, [rip + 0x99464] ; call 0x823ab
0x000000000015187c : or dword ptr [rax], eax ; mov qword ptr fs:[rax], rdx ; ret
0x0000000000154395 : or dword ptr [rax], eax ; mov rax, qword ptr [rax + 0x10] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000151946 : or dword ptr [rax], eax ; mov rax, qword ptr fs:[rbx] ; test rax, rax ; je 0x151964 ; pop rbx ; ret
0x0000000000151a95 : or dword ptr [rax], eax ; pop rbx ; ret
0x0000000000163914 : or dword ptr [rax], ecx ; add byte ptr [rax + 0x39], cl ; retf 0x8949
0x00000000000e3534 : or dword ptr [rax], edx ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000056eee : or dword ptr [rbp + 0x39], ecx ; retf
0x000000000013b236 : or dword ptr [rbp + 0x441575c0], eax ; mov eax, eax ; ret
0x000000000018c326 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000082503 : or dword ptr [rbx], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008dc80 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000092f88 : or dword ptr [rbx], 8 ; pop rbx ; ret
0x00000000000b7253 : or dword ptr [rbx], edi ; str word ptr [rbx + 0x63] ; or al, 0x83 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000b71d3 : or dword ptr [rbx], edi ; str word ptr [rcx + 0x63] ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000133afc : or dword ptr [rcx + 0xf], eax ; retf
0x00000000000d5a34 : or dword ptr [rcx - 0x73], eax ; dec dword ptr [r8 + 1] ; retf 0x9848
0x0000000000127492 : or dword ptr [rcx - 0x7d], ecx ; ret
0x000000000015187b : or dword ptr [rcx], 0 ; mov qword ptr fs:[rax], rdx ; ret
0x000000000010e9d4 : or dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000000636a7 : or dword ptr [rcx], esp ; test byte ptr [rax], dl ; or byte ptr [rcx], spl ; test byte ptr [rax - 0x77], cl ; ret
0x000000000015e783 : or dword ptr [rdi + rax*8], edx ; xor eax, eax ; ret
0x000000000005c338 : or dword ptr [rdi - 0x2b], esi ; mov rax, rsi ; ret
0x0000000000082510 : or dword ptr [rdi], 0x20 ; ret
0x000000000004490e : or dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000000ba676 : or dword ptr [rdi], ecx ; add cl, al ; call 0xffffffff83ce2f92
0x000000000009162b : or dword ptr [rdi], ecx ; mov dh, 0x70 ; adc eax, dword ptr [rcx - 0x78] ; je 0x91664 ; adc ecx, dword ptr [rax - 0x7d] ; ret 0x4901
0x0000000000176056 : or dword ptr [rdi], ecx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x00000000000803b2 : or dword ptr [rdi], ecx ; xchg byte ptr [rdi], ah ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x76b3d395], cl ; retf 0x8348
0x0000000000077d7e : or dword ptr [rdi], ecx ; xchg byte ptr [rdi], cl ; adc eax, 0x89490000 ; ret 0x3145
0x000000000005a50d : or dword ptr [rdi], ecx ; xchg dword ptr [rax], eax ; add eax, 0x63480000 ; ret 0x8d48
0x0000000000080cc7 : or dword ptr [rdi], ecx ; xchg dword ptr [rdx + 0x44000002], ecx ; mov eax, ebx ; jmp 0x80ca0
0x000000000009cf35 : or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x3145
0x000000000009cedf : or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xf631
0x000000000013e97d : or dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x841
0x000000000004ab46 : or dword ptr [rdi], ecx ; xchg esi, edi ; sbb eax, 0x894c0000 ; ret 0x8948
0x000000000009cfb7 : or dword ptr [rdx - 1], edi ; cmovbe eax, edx ; ret
0x000000000013d998 : or dword ptr [rdx], eax ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000166e33 : or dword ptr [rdx], esp ; add eax, 0x14634900 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000029b89 : or dword ptr [rip + 0x1bcb64], 2 ; add rsp, 8 ; ret
0x000000000013fc09 : or dword ptr [rip + 0xa99b4], 2 ; add rsp, 8 ; ret
0x000000000004fe13 : or dword ptr [rsi + 0x15], edx ; add byte ptr [rax + 0x63], cl ; ret 0xc748
0x0000000000164073 : or dword ptr [rsi + 5], ecx ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000dd383 : or dword ptr [rsi], eax ; or byte ptr [rax], al ; call r14
0x00000000001095a2 : or dword ptr [rsi], ecx ; add byte ptr [rbp - 0x77], cl ; retf 0x8b48
0x000000000018513f : or dword ptr cs:[rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000117299 : or eax, 0 ; add bl, ch ; mov word ptr [rax - 0x77], cs ; ret 0xb9e9
0x000000000009b73a : or eax, 0x11420d ; mov rdx, rcx ; jmp 0x9b6dd
0x000000000006d4f6 : or eax, 0x13c3b1 ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000006cb2d : or eax, 0x13cb6e ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x0000000000064068 : or eax, 0x144db3 ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x00000000000980d8 : or eax, 0x14cb63 ; jne 0x980f5 ; jmp 0x9810f
0x000000000009a1f3 : or eax, 0x14d3f8 ; jae 0x9a223 ; lea rax, [rax - 8] ; ret
0x0000000000042dcb : or eax, 0x174fb0 ; orpd xmm0, xmm1 ; ret
0x0000000000113304 : or eax, 0x1894800 ; cmp rdi, rax ; ja 0x113344 ; xor eax, eax ; ret
0x0000000000114b05 : or eax, 0x1b800 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000b6d21 : or eax, 0x1c478d48 ; ret
0x00000000000b7b81 : or eax, 0x1d478d48 ; ret
0x00000000001760d8 : or eax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x000000000015369a : or eax, 0x1f0f4feb ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000114f86 : or eax, 0x200 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000191a61 : or eax, 0x2821a ; movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x0000000000113d19 : or eax, 0x28c48348 ; ret
0x00000000000d2b53 : or eax, 0x30c48348 ; pop rbx ; ret
0x00000000000898aa : or eax, 0x394c428b ; cmovne rax, rcx ; ret
0x00000000000ecbf7 : or eax, 0x40000000 ; jne 0xecb3e ; ret
0x000000000008017a : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000809a2 : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x0000000000115d0a : or eax, 0x40c64100 ; inc dword ptr [rax] ; ret
0x0000000000044022 : or eax, 0x41000000 ; mov edx, 8 ; mov eax, ecx ; syscall
0x000000000011782c : or eax, 0x415d5b00 ; pop rsp ; ret
0x000000000014216a : or eax, 0x441f0f ; add byte ptr [rcx - 0x73], al ; ret
0x000000000009ce8e : or eax, 0x450f4800 ; ret 0x66c3
0x000000000009e5f1 : or eax, 0x450f4800 ; ret 0xfc3
0x000000000009b73b : or eax, 0x48001142 ; mov edx, ecx ; jmp 0x9b6dc
0x00000000000afcf2 : or eax, 0x48c0bc0f ; lea eax, [rdi + rax] ; ret
0x00000000000d8e98 : or eax, 0x48c28900 ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x00000000000d8e53 : or eax, 0x48ce8900 ; movsxd rax, dword ptr [rdi + rsi*4] ; add rax, rdi ; jmp rax
0x00000000000d332a : or eax, 0x48d08948 ; add esp, 8 ; ret
0x00000000000b0455 : or eax, 0x48fad348 ; test edx, edx ; je 0xb048c ; bsf rax, rdx ; ret
0x000000000014ca7f : or eax, 0x48ffffc1 ; add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000010b9c1 : or eax, 0x528b4800 ; sbb byte ptr [rax - 0x73], cl ; pushfq ; ret 0x8207
0x0000000000114ad4 : or eax, 0x5894800 ; retf
0x00000000000a726a : or eax, 0x58d4800 ; mov ebp, 0x48000037 ; cmove eax, edx ; ret
0x00000000000632d2 : or eax, 0x5bd88948 ; ret
0x0000000000117daf : or eax, 0x5c415d00 ; ret
0x0000000000152092 : or eax, 0x5c415d5b ; ret
0x0000000000116251 : or eax, 0x5c74800 ; retf 0xd1c
0x0000000000117d79 : or eax, 0x5d5b5900 ; pop r12 ; ret
0x0000000000075eb8 : or eax, 0x634c0000 ; ret
0x000000000010c4f5 : or eax, 0x64d8f700 ; mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010c5d5 : or eax, 0x64d8f700 ; mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000010e055 : or eax, 0x64db3100 ; mov dword ptr [rax], 0x16 ; jmp 0x10e038
0x0000000000111401 : or eax, 0x64df8900 ; mov r13d, dword ptr [r14] ; call 0x10d66a
0x00000000000b5e05 : or eax, 0x724850f ; add byte ptr [rax], al ; ret
0x00000000001139b8 : or eax, 0x75c08500 ; sub bh, byte ptr [rax + 0x71] ; syscall
0x0000000000113a68 : or eax, 0x75c08500 ; sub bh, byte ptr [rax + 0x72] ; syscall
0x00000000000b5688 : or eax, 0x77f0ff3 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x0000000000112829 : or eax, 0x80000000 ; mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000000c9a5a : or eax, 0x80000000 ; mov dword ptr [rdx + 4], ecx ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x000000000006006a : or eax, 0x83480000 ; ret
0x000000000017c877 : or eax, 0x83480000 ; ret 0x4910
0x000000000017e411 : or eax, 0x83480000 ; ret 0xe910
0x000000000017c8a5 : or eax, 0x83480000 ; ret 0xeb10
0x00000000000341a3 : or eax, 0x83486274 ; ret
0x00000000000e7b0d : or eax, 0x83489066 ; ret
0x000000000017c86d : or eax, 0x83490000 ; jmp 0x17c88d
0x00000000000bccc6 : or eax, 0x841f0f66 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000d28c6 : or eax, 0x841f0f66 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x00000000000b74c9 : or eax, 0x880850f ; add byte ptr [rax], al ; ret
0x0000000000047fcf : or eax, 0x89000003 ; ret 0x3d83
0x00000000000a9778 : or eax, 0x894d0000 ; retf
0x0000000000119022 : or eax, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x00000000000d0f1b : or eax, 0x940fc085 ; ret
0x00000000000cdaca : or eax, 0x974c985 ; xor eax, eax ; ret
0x000000000010907e : or eax, 0xa46a5 ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x0000000000106101 : or eax, 0xbe0f4800 ; retf 0x4864
0x000000000002974e : or eax, 0xbe0f4890 ; ret 0xf641
0x0000000000027291 : or eax, 0xc0890017 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000d36b8 : or eax, 0xc0b60f00 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000d6af3 : or eax, 0xc1b60f00 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000ce0e2 : or eax, 0xc2bc0f48 ; shr rax, 2 ; ret
0x00000000001177ec : or eax, 0xc4834800 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000041d26 : or eax, 0xd ; jmp 0x41cf1
0x0000000000115d07 : or eax, 0xd2204 ; mov byte ptr [r8 - 1], 0 ; ret
0x0000000000114f67 : or eax, 0xd2854800 ; jne 0x114f48 ; xor eax, eax ; pop rbx ; ret
0x00000000001760d4 : or eax, 0xd4a8d48 ; jne 0x1762cb ; ret
0x00000000000b5e01 : or eax, 0xd7f8d48 ; jne 0xb653b ; ret
0x00000000000b74c5 : or eax, 0xd7f8d48 ; jne 0xb7d5b ; ret
0x00000000000eaf6a : or eax, 0xe03944fc ; jg 0xeaf68 ; jmp 0xeaf45
0x00000000000eaf69 : or eax, 0xe03944fc ; jg 0xeaf69 ; jmp 0xeaf46
0x0000000000163e5d : or eax, 0xe067290f ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001016d2 : or eax, 0xe6611 ; mov dword ptr [rdx], ecx ; pop rdx ; pop rcx ; pop rbx ; ret
0x00000000000a3fe2 : or eax, 0xf700002a ; ret
0x000000000016b393 : or eax, 0xf7f0ff3 ; ret
0x00000000000bb451 : or eax, 0xf9834800 ; add al, 0x48 ; cmovne eax, edx ; ret
0x00000000001161e5 : or eax, 0xff854800 ; jne 0x116204 ; mov eax, 1 ; ret
0x0000000000042a94 : or eax, 0xffff8000 ; inc eax ; shr eax, 0x1f ; ret
0x00000000000441cd : or eax, 0xffffffff ; ret
0x00000000001827f9 : or eax, 1 ; ret
0x0000000000189731 : or eax, 1 ; vzeroupper ; ret
0x0000000000062761 : or eax, 7 ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000004ec4e : or eax, dword ptr [rax] ; add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x0000000000107dc1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x000000000017ba6d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017e5b1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017ba91 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000004b90d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rdx], 0x4d ; add edx, eax ; jmp 0x4b937
0x000000000004e84d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rdx], 0x4d ; add edx, eax ; jmp 0x4e877
0x00000000001470a2 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000117561 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000a98f8 : or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000401c2 : or eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe07], al ; ret
0x0000000000077b0b : or eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], al ; out dx, al ; add dword ptr [rax - 0x50f43], eax ; jmp qword ptr [rax]
0x000000000004e268 : or eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], al ; ret 0x4835
0x000000000012bf03 : or eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000489ee : or eax, dword ptr [rax] ; add dword ptr [rax], eax ; ret
0x000000000012f695 : or eax, dword ptr [rax] ; add rax, qword ptr fs:[0] ; ret
0x00000000001376e3 : or eax, dword ptr [rax] ; add rsp, 8 ; ret
0x000000000012c8e3 : or eax, dword ptr [rax] ; call 0x15db8b
0x0000000000136e66 : or eax, dword ptr [rax] ; call rax
0x000000000012c266 : or eax, dword ptr [rax] ; jne 0x12c27f ; jmp 0x12c299
0x000000000012c2dc : or eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x10] ; test rax, rax ; je 0x12c2f4 ; call rax
0x000000000012c31c : or eax, dword ptr [rax] ; mov rax, qword ptr [rax + 8] ; test rax, rax ; je 0x12c334 ; call rax
0x000000000012c21c : or eax, dword ptr [rax] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x12c232 ; call rax
0x00000000000f93d7 : or eax, dword ptr [rax] ; movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x00000000000f6efd : or eax, dword ptr [rax] ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00000000000f9bb1 : or eax, dword ptr [rax] ; movzx eax, al ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000012c6a5 : or eax, dword ptr [rax] ; neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000012c91c : or eax, dword ptr [rax] ; pop rbp ; ret
0x000000000010ea94 : or eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000012d163 : or eax, dword ptr [rsi] ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000138394 : or eax, eax ; jne 0x138349 ; mov ebp, 0xfffffffe ; jmp 0x13836c
0x000000000012b76c : or eax, ebx ; nop ; xor eax, eax ; ret
0x00000000000fbf3a : or eax, ecx ; jmp 0xfb51b
0x0000000000043179 : or eax, ecx ; sar eax, 0x1f ; not eax ; and eax, edx ; ret
0x0000000000042d67 : or eax, ecx ; sar rax, 0x3f ; not eax ; and eax, edx ; ret
0x00000000000989c5 : or eax, edi ; add eax, 0x14ec08 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000012f31f : or eax, edi ; bswap eax ; ret
0x00000000000afe0e : or eax, edx ; bsf rax, rax ; lea rax, [rdi + rax] ; ret
0x0000000000042ab3 : or eax, edx ; mov dword ptr [rsp + 0x10], eax ; fld xword ptr [rsp + 8] ; ret
0x0000000000047c6a : or eax, edx ; ret
0x0000000000043512 : or eax, edx ; sar rax, 0x3f ; not eax ; and eax, ecx ; ret
0x00000000001127ce : or eax, esi ; mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x000000000011d912 : or eax, esi ; ret
0x00000000000ef067 : or ebp, 0xffffffff ; jmp 0xeeead
0x00000000000926b4 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000088448 : or ebp, eax ; retf 0xf9ce
0x000000000012c269 : or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; lodsd eax, dword ptr [rsi] ; ret
0x000000000014d18d : or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; push rbp ; retf 9
0x0000000000112f47 : or ebp, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000084f20 : or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000084f00 : or ebp, edx ; mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000194734 : or ebx, eax ; je 0x1946f1 ; xor r10d, r10d ; jmp 0x194710
0x000000000016b553 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000000a5cb6 : or ecx, dword ptr [rax + 0x29] ; ret
0x0000000000110622 : or ecx, dword ptr [rax + 0x2b] ; push rax ; xor byte ptr [rax + 1], cl ; retf 0x8948
0x000000000009a93f : or ecx, dword ptr [rax + 0x63] ; ret
0x00000000000ecdff : or ecx, dword ptr [rax + 0x63] ; ret 0x634c
0x000000000008e547 : or ecx, dword ptr [rax + 1] ; ret 0x8949
0x00000000000ba061 : or ecx, dword ptr [rax - 0x73] ; adc al, 0xe ; cmp rdi, rdx ; jb 0xba07a ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000084bd4 : or ecx, dword ptr [rax - 0x73] ; add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x00000000000b5dbf : or ecx, dword ptr [rax - 0x73] ; jg 0xb5dda ; jne 0xb653b ; ret
0x00000000000b7483 : or ecx, dword ptr [rax - 0x73] ; jg 0xb749e ; jne 0xb7d5b ; ret
0x0000000000082554 : or ecx, dword ptr [rax - 0x75] ; and al, 8 ; add rsp, 0x18 ; ret
0x000000000014dd65 : or ecx, dword ptr [rax - 0x77] ; adc r11b, bpl ; ret
0x000000000012e2cc : or ecx, dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000011d966 : or ecx, dword ptr [rax - 0x77] ; out dx, eax ; call r12
0x000000000002eab5 : or ecx, dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000d1d83 : or ecx, dword ptr [rax - 0x7d] ; ret
0x00000000001164d2 : or ecx, dword ptr [rax - 0x7d] ; ret 0x4808
0x0000000000127dcd : or ecx, dword ptr [rax - 0x7d] ; ret 0x4830
0x00000000000bb144 : or ecx, dword ptr [rax - 0x7d] ; ret 0x8b04
0x00000000000e0e33 : or ecx, dword ptr [rax - 0x7d] ; ret 0xf01
0x0000000000131c76 : or ecx, dword ptr [rax] ; add al, ch ; ret 0x112
0x0000000000092f89 : or ecx, dword ptr [rax] ; pop rbx ; ret
0x00000000000cd994 : or ecx, dword ptr [rbx + 0x463b2847] ; sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000cd9e4 : or ecx, dword ptr [rbx + 0x463b3847] ; cmp byte ptr [rbp + 0x13], dh ; ret
0x00000000000a54b0 : or ecx, dword ptr [rcx + 0x29] ; ret
0x000000000015a87f : or ecx, dword ptr [rcx + 0x415d5bd8] ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000c2761 : or ecx, dword ptr [rcx - 7] ; dec dword ptr [rax - 0x7d] ; ret
0x00000000001471b4 : or ecx, dword ptr [rdi] ; retf 0x5389
0x00000000000b5dc3 : or ecx, dword ptr [rdi] ; test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x00000000000844eb : or ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x000000000011883d : or ecx, edx ; mov qword ptr [rax + 8], r9 ; jmp 0x11880e
0x00000000001827f0 : or ecx, esi ; sub rax, rcx ; je 0x18280c ; sbb eax, eax ; or eax, 1 ; ret
0x0000000000125d8c : or edi, dword ptr [rax + 1] ; ret
0x000000000012a594 : or edi, dword ptr [rax + 7] ; ret
0x000000000013acac : or edi, dword ptr [rdx + 0x104] ; cmove eax, edx ; ret
0x0000000000118802 : or edi, eax ; mov qword ptr [rdx], rdi ; pop rbx ; pop rbp ; ret
0x00000000000b66c7 : or edi, edi ; loope 0xb673d ; nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000000b7ee7 : or edi, edi ; loope 0xb7f5d ; nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000000b9927 : or edi, edi ; loope 0xb999a ; nop dword ptr [rax + rax] ; ret
0x0000000000190556 : or edi, esi ; fadd st(3) ; nop word ptr [rax + rax] ; ret
0x0000000000117520 : or edx, 0x40 ; mov eax, ecx ; syscall
0x000000000010bfca : or edx, 0xffffffff ; mov esi, eax ; mov edi, edx ; mov eax, 0x75 ; syscall
0x000000000010bff2 : or edx, 0xffffffff ; mov esi, eax ; mov edi, edx ; mov eax, 0x77 ; syscall
0x00000000000586c7 : or edx, eax ; mov dword ptr [rsp - 4], edx ; movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000042a7f : or edx, eax ; mov eax, 0xfffe ; sub eax, edx ; sar eax, 0x10 ; ret
0x00000000000b033f : or edx, ecx ; bsf rdx, rdx ; add rax, rdx ; sub rax, rdi ; ret
0x00000000000432e8 : or edx, edi ; mov dword ptr [rsp - 4], edx ; movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000042c01 : or edx, esi ; je 0x42b58 ; ret
0x00000000001293b9 : or esi, 0xffffffff ; dec dword ptr [rcx] ; ret
0x000000000008998d : or esi, dword ptr [rcx] ; rol byte ptr [rbx - 0x6af0f808], cl ; ret 0xc283
0x0000000000145164 : or esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000082661 : or esi, eax ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000112817 : or esi, eax ; xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x00000000000ba4a3 : or esi, ebx ; movq qword ptr [rdi + rdx - 0x10], mm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000016b473 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000000e4418 : or esi, esi ; ret 0xf04
0x0000000000082504 : or esp, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008dc81 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000138d7d : or esp, dword ptr [rsi - 0x70] ; call 0x25322
0x0000000000111574 : or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x0000000000101b63 : or qword ptr [rax + 8], 0x2000 ; ret
0x000000000015e782 : or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x000000000004490d : or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000176055 : or qword ptr [rdi], rcx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x00000000000a6f07 : or r10b, r9b ; jne 0xa6efa ; cmp r8d, ecx ; je 0xa6efa ; ret
0x000000000011751f : or r10d, 0x40 ; mov eax, ecx ; syscall
0x000000000016b5c2 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x000000000016b552 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x000000000016b4e2 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x000000000016b472 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000145116 : or r8b, byte ptr [r8] ; add rsp, 8 ; ret
0x000000000014513e : or r8b, byte ptr [r8] ; ret
0x0000000000109080 : or r8b, byte ptr [rax] ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000012f694 : or r8d, dword ptr [r8] ; add rax, qword ptr fs:[0] ; ret
0x000000000011883c : or r9, rdx ; mov qword ptr [rax + 8], r9 ; jmp 0x11880f
0x00000000000d2008 : or r9b, bpl ; ret
0x0000000000030df0 : or r9b, byte ptr [r8 + 0x39] ; ret 0x1176
0x0000000000079605 : or r9b, r13b ; ret 0xfff4
0x00000000001760d7 : or rax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x0000000000080179 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000809a1 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x00000000000bb3ae : or rax, 0x450f4800 ; ret 0x66c3
0x0000000000041d25 : or rax, 0xd ; jmp 0x41cf2
0x00000000000441cc : or rax, 0xffffffffffffffff ; ret
0x0000000000184f22 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017caf7 : or rax, qword ptr [r8] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000138393 : or rax, r8 ; jne 0x13834a ; mov ebp, 0xfffffffe ; jmp 0x13836d
0x0000000000042d66 : or rax, rcx ; sar rax, 0x3f ; not eax ; and eax, edx ; ret
0x00000000000afe0d : or rax, rdx ; bsf rax, rax ; lea rax, [rdi + rax] ; ret
0x0000000000047c69 : or rax, rdx ; ret
0x0000000000043511 : or rax, rdx ; sar rax, 0x3f ; not eax ; and eax, ecx ; ret
0x000000000011d911 : or rax, rsi ; ret
0x0000000000194733 : or rbx, r8 ; je 0x1946f2 ; xor r10d, r10d ; jmp 0x194711
0x0000000000194732 : or rbx, r8 ; je 0x1946f3 ; xor r10d, r10d ; jmp 0x194712
0x0000000000118801 : or rdi, rax ; mov qword ptr [rdx], rdi ; pop rbx ; pop rbp ; ret
0x0000000000110576 : or word ptr [rax + 0x64], 1 ; call 0xdc867
0x0000000000042dd0 : orpd xmm0, xmm1 ; ret
0x0000000000042dd1 : orps xmm0, xmm1 ; ret
0x00000000000431de : orps xmm0, xmm3 ; ret
0x00000000001824d6 : out 0, al ; add byte ptr [rax], al ; add rax, rdi ; vzeroupper ; ret
0x000000000012c7a6 : out 0, al ; add byte ptr [rax], al ; syscall
0x000000000012f331 : out 0x10, eax ; movzx eax, si ; or eax, edi ; bswap eax ; ret
0x000000000012f318 : out 0x18, eax ; and eax, 0xffffff ; or eax, edi ; bswap eax ; ret
0x0000000000166855 : out 0x27, eax ; add eax, 0x14634900 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000164f95 : out 0x3e, eax ; add eax, 0x14634900 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000012bdf0 : out 0x41, eax ; and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x12be07 ; ret
0x000000000010c359 : out 0x44, al ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000145115 : out 0x47, eax ; or al, byte ptr [rax] ; add rsp, 8 ; ret
0x000000000012a121 : out 0x48, al ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000585bb : out 0x48, al ; mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000005c2a9 : out 0x48, al ; mov eax, esi ; ret
0x00000000000454aa : out 0x48, al ; mov edi, dword ptr [rsp + 0x18] ; call rbx
0x0000000000147f1a : out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x0000000000143648 : out 0x48, al ; mov edi, ebx ; mov rcx, r13 ; call r10
0x000000000008672d : out 0x48, al ; mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000008dec8 : out 0x48, al ; mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000000840e0 : out 0x48, al ; mov edi, ebx ; xor edx, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000144748 : out 0x48, eax ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000badd0 : out 0x48, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000084f1c : out 0x48, eax ; mov eax, edi ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000028367 : out 0x48, eax ; mov ecx, dword ptr [rbp - 0x70] ; call rcx
0x000000000009a288 : out 0x48, eax ; sub eax, 0x10 ; ret
0x0000000000165556 : out 0x4c, al ; mov dword ptr [rdi - 0x12], ebx ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000454e5 : out 0x4c, al ; mov edi, ebp ; call rbx
0x000000000004a3bc : out 0x4c, al ; mov edi, esp ; call 0x5707b
0x00000000001551fc : out 0x4c, al ; mov edi, esp ; call qword ptr [rax]
0x0000000000089a5d : out 0x4c, eax ; lea ecx, [rsp + 0x20] ; call rbx
0x0000000000089963 : out 0x4c, eax ; lea ecx, [rsp + 0x28] ; call rbx
0x0000000000165386 : out 0x4c, eax ; mov dword ptr [rdi - 0x11], ebx ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000165482 : out 0x4c, eax ; mov dword ptr [rdi - 0x11], ebx ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001653ce : out 0x4c, eax ; mov dword ptr [rdi - 0x11], ebx ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000009628f : out 0x4c, eax ; mov dword ptr [rsp + 8], ebx ; call qword ptr [rax]
0x000000000009fea0 : out 0x4c, eax ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000136a8f : out 0x4c, eax ; mov ecx, ebp ; call 0x144c0b
0x00000000000dbf38 : out 0x5b, eax ; pop rbp ; pop r12 ; ret
0x00000000001376a6 : out 0x62, al ; add al, byte ptr [rax] ; mov rax, qword ptr [rsp + 8] ; mov rdi, rbx ; call rax
0x000000000013fac6 : out 0x6e, al ; lock dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret 0x1be
0x00000000000f2135 : out 0x75, eax ; retf
0x00000000000352d3 : out 0x80, eax ; sete al ; ret
0x0000000000151a31 : out 0x81, eax ; or dword ptr [rax], eax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000013b351 : out 0x88, eax ; add dword ptr [rcx + 0xf], eax ; mov dh, 0x42 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x000000000011e048 : out 0x89, al ; fistp qword ptr [rax + 0x113] ; syscall
0x000000000011eeec : out 0x89, al ; fistp qword ptr [rax + 0x2c] ; syscall
0x000000000011eccc : out 0x89, al ; fistp qword ptr [rax + 0x2d] ; syscall
0x0000000000106c9d : out 0x89, al ; fucomip st(0) ; retf
0x0000000000148df1 : out 0x89, eax ; ret
0x00000000000feec7 : out 0x89, eax ; ret 0xb60f
0x00000000001132ee : out 0x90, al ; mov eax, 0xc ; syscall
0x000000000010bb2b : out 0xbf, al ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x00000000000e38fd : out 0xbf, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x000000000018c955 : out 0xc3, eax ; add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000016d016 : out 0xc6, al ; add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000154419 : out 0xc7, eax ; add al, 0x24 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call rdx
0x000000000009d735 : out 0xc7, eax ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000016cd16 : out 0xc9, al ; add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000009d495 : out 0xc9, eax ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000016ca16 : out 0xcc, al ; add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000030ca5 : out 0xcc, eax ; adc al, byte ptr [rax] ; mov rdi, rbx ; call r12
0x000000000016c716 : out 0xcf, al ; add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000016c416 : out 0xd2, al ; add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000016c116 : out 0xd5, al ; add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000016be16 : out 0xd8, al ; add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000009e12c : out 0xe8, al ; jle 0x9e1a7 ; clc ; dec dword ptr [rax + 1] ; ret
0x00000000000f05d2 : out 0xe8, al ; mov eax, 0x89ffffa8 ; ret 0xc031
0x000000000009c70a : out 0xe8, al ; or byte ptr [rdx - 0x76b70008], 0xc1 ; jmp 0x9c6e2
0x000000000011b40f : out 0xe8, al ; retf
0x0000000000059144 : out 0xe8, al ; retf 0xfcc2
0x0000000000033ff7 : out 0xe8, eax ; adc r15d, edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000000358c9 : out 0xe8, eax ; add dword ptr [rdi + 6], esi ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000142d18 : out 0xe8, eax ; jb 0x142d7f ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000000bff27 : out 0xe8, eax ; jno 0xbff2d ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000bd587 : out 0xe8, eax ; jrcxz 0xbd52d ; stc ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000c275f : out 0xe8, eax ; or ecx, dword ptr [rcx - 7] ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000030ca3 : out 0xe8, eax ; out 0xcc, eax ; adc al, byte ptr [rax] ; mov rdi, rbx ; call r12
0x0000000000027d35 : out 0xe8, eax ; push rbp ; pop rsp ; adc eax, dword ptr [rax] ; mov rdi, rbx ; call r12
0x000000000002875c : out 0xe8, eax ; push rdx ; adc eax, dword ptr [rax] ; mov rdi, rbx ; call r12
0x000000000013d02c : out 0xe8, eax ; ret
0x0000000000029868 : out 0xe8, eax ; ret 0xffb9
0x0000000000026247 : out 0xe8, eax ; retf
0x0000000000034580 : out 0xe8, eax ; retf 0xff0c
0x000000000009e6e0 : out 0xe8, eax ; stosb byte ptr [rdi], al ; push -8 ; lcall [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000055b06 : out 0xe9, eax ; ret 0xfffd
0x000000000003945a : out 0xeb, eax ; retf 0x8d48
0x00000000000cd991 : out 0xf, al ; je 0xcd9ac ; mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0xcda0c ; ret
0x00000000000cd9e1 : out 0xf, al ; je 0xcd9fc ; mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0xcda0c ; ret
0x00000000000ba604 : out 0xf0, al ; mov edx, 0 ; pop rbx ; cmove rax, rdx ; ret
0x000000000016ad5a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016adda : out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000000a5231 : out 0xff, al ; dec dword ptr [rax - 0x75] ; mov byte ptr [r8 - 0x77], r9b ; ret
0x0000000000097fca : out 0xff, al ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000192626 : out 0xff, al ; jg 0x192644 ; test byte ptr [rcx], dl ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0x8166
0x0000000000097f22 : out 0xff, eax ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000010d6a7 : out 1, eax ; add byte ptr [rbx + 0x480c2444], cl ; add esp, 0x10 ; pop rbx ; ret
0x000000000010d689 : out 1, eax ; add byte ptr [rcx - 0x473d7621], cl ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000012d1f9 : out 3, al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000013b5f0 : out 4, al ; lea rax, [rdi + rsi + 8] ; ret
0x000000000012f34d : out 8, eax ; movzx eax, sil ; or eax, edi ; bswap eax ; ret
0x0000000000134fe7 : out dx, al ; adc bh, dh ; ret 0x8080
0x000000000016a3b7 : out dx, al ; add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000a430b : out dx, al ; add al, 0x83 ; cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4006
0x0000000000071f00 : out dx, al ; add dword ptr [rax + rax*2 - 0x77], esi ; ret 0x3145
0x000000000006986f : out dx, al ; add dword ptr [rax + rcx*2 - 0x77], esi ; ret 0x8948
0x0000000000077b10 : out dx, al ; add dword ptr [rax - 0x50f43], eax ; jmp qword ptr [rax]
0x000000000013b08e : out dx, al ; add dword ptr [rax - 0x78], eax ; ja 0x13b09b ; ret
0x000000000007b8fa : out dx, al ; add dword ptr [rax - 0x90f43], eax ; jmp qword ptr [rax]
0x00000000000a085b : out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x000000000004b973 : out dx, al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x0000000000028f6b : out dx, al ; call 0x25263
0x0000000000196492 : out dx, al ; call 0x38749f
0x000000000009c2ee : out dx, al ; call rax
0x000000000013ff35 : out dx, al ; dec dword ptr [rax + 0x39] ; ret
0x000000000013b47f : out dx, al ; dec dword ptr [rax + 0x63] ; retf
0x0000000000136d2a : out dx, al ; dec dword ptr [rax - 0x75] ; jnp 0x136d84 ; test rdi, rdi ; jne 0x136d2c ; pop rbx ; ret
0x000000000013b9a0 : out dx, al ; dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000013b8fc : out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000137b93 : out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000137c48 : out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000014e6b5 : out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x000000000014e6ed : out dx, al ; dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x0000000000138d83 : out dx, al ; dec dword ptr [rax - 0x7d] ; ret
0x000000000015e5bb : out dx, al ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x000000000015ece3 : out dx, al ; jb 0x15f289 ; mov rdi, r14 ; call 0x12b79c
0x000000000011e269 : out dx, al ; lea ecx, [rdi + rdi] ; shr eax, cl ; and eax, 3 ; ret
0x000000000005ca7e : out dx, al ; mov bl, 0x15 ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x25e8
0x00000000001390e1 : out dx, al ; mov eax, dword ptr [rbx] ; test eax, eax ; jne 0x1390dc ; mov rdi, r15 ; call 0x25324
0x00000000001135d0 : out dx, al ; mov edi, ebx ; mov eax, 0x127 ; syscall
0x0000000000113680 : out dx, al ; mov edi, ebx ; mov eax, 0x128 ; syscall
0x0000000000112107 : out dx, al ; mov edi, ebx ; mov eax, 0x146 ; syscall
0x00000000000e14ae : out dx, al ; mov edi, ebx ; mov eax, 0xf7 ; syscall
0x000000000012c717 : out dx, al ; mov edi, ebx ; mov eax, ecx ; syscall
0x000000000011347a : out dx, al ; mov edi, ebx ; mov r8d, eax ; mov eax, 0x13 ; syscall
0x000000000011e0ea : out dx, al ; mov edi, ebx ; mov r8d, eax ; mov eax, 0x130 ; syscall
0x000000000011351a : out dx, al ; mov edi, ebx ; mov r8d, eax ; mov eax, 0x14 ; syscall
0x000000000011eb4a : out dx, al ; mov edi, ebx ; mov r8d, eax ; mov eax, 0x2a ; syscall
0x000000000011ea7a : out dx, al ; mov edi, ebx ; mov r8d, eax ; mov eax, 0x2b ; syscall
0x000000000011ef8a : out dx, al ; mov edi, ebx ; mov r8d, eax ; mov eax, 0x2e ; syscall
0x000000000011ee2a : out dx, al ; mov edi, ebx ; mov r8d, eax ; mov eax, 0x2f ; syscall
0x000000000010d04a : out dx, al ; mov edi, ebx ; mov r8d, eax ; mov eax, 1 ; syscall
0x000000000010cfaa : out dx, al ; mov edi, ebx ; mov r8d, eax ; xor eax, eax ; syscall
0x00000000001137be : out dx, al ; mov edi, r12d ; mov eax, 0x147 ; syscall
0x000000000011391e : out dx, al ; mov edi, r12d ; mov eax, 0x148 ; syscall
0x000000000012b77e : out dx, al ; mov edx, dword ptr [rdi + 0x28] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x000000000016555a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000010b342 : out dx, al ; mov r8d, eax ; mov edi, ebx ; mov eax, 0x11 ; syscall
0x000000000011ded0 : out dx, al ; mov r8d, eax ; mov edi, ebx ; mov eax, 0x114 ; syscall
0x00000000001122f2 : out dx, al ; mov r8d, eax ; mov edi, ebx ; mov eax, 0x115 ; syscall
0x000000000011df82 : out dx, al ; mov r8d, eax ; mov edi, ebx ; mov eax, 0x116 ; syscall
0x0000000000112390 : out dx, al ; mov r8d, eax ; mov edi, ebx ; mov eax, 0x11d ; syscall
0x000000000010b3f2 : out dx, al ; mov r8d, eax ; mov edi, ebx ; mov eax, 0x12 ; syscall
0x000000000011f482 : out dx, al ; mov r8d, eax ; mov edi, ebx ; mov eax, 0x120 ; syscall
0x000000000011f5d2 : out dx, al ; mov r8d, eax ; mov edi, ebx ; mov eax, 0x133 ; syscall
0x00000000000e13ad : out dx, al ; mov r8d, eax ; mov edi, ebx ; mov eax, 0x3d ; syscall
0x000000000011f752 : out dx, al ; mov r8d, eax ; mov edi, ebx ; mov eax, 0x45 ; syscall
0x000000000011de32 : out dx, al ; mov r8d, eax ; mov edi, ebx ; mov eax, 0xe8 ; syscall
0x00000000001456ee : out dx, al ; mov rcx, rbx ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00000000000ced15 : out dx, al ; mov rdi, rbp ; call rbx
0x00000000001174b8 : out dx, al ; mov rdi, rbp ; mov eax, 9 ; syscall
0x000000000009afcb : out dx, al ; mov rdi, rbx ; call rax
0x000000000010c4c9 : out dx, al ; mov rdi, rbx ; mov eax, ecx ; syscall
0x00000000000e1663 : out dx, al ; mov rdi, rbx ; mov edx, eax ; mov eax, 0x23 ; syscall
0x000000000010d801 : out dx, al ; mov rdi, rbx ; mov edx, eax ; mov eax, 0x55 ; syscall
0x0000000000048b1b : out dx, al ; mov rdi, rbx ; mov r8d, eax ; mov eax, 0x13e ; syscall
0x00000000001175fb : out dx, al ; mov rdi, rbx ; mov r8d, eax ; mov eax, 0x1a ; syscall
0x000000000011171b : out dx, al ; mov rdi, rbx ; mov r8d, eax ; mov eax, 7 ; syscall
0x000000000016b16a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000018357e : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000002d837 : out dx, al ; ret 0
0x00000000000bd8f1 : out dx, al ; setne dl ; jmp 0xbd90a
0x00000000000c2ad2 : out dx, al ; setne dl ; jmp 0xc2aea
0x00000000000ca532 : out dx, al ; setne dl ; jmp 0xca54a
0x0000000000108dde : out dx, al ; stc ; dec dword ptr [rcx - 0x77] ; ret 0x8545
0x00000000000585e3 : out dx, al ; xor al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000005a6fd : out dx, al ; xor byte ptr [rbp - 0x77], cl ; retf
0x00000000000bb231 : out dx, al ; xor edi, edi ; mov rax, rdi ; ret
0x0000000000126689 : out dx, al ; xor r15d, r15d ; call rax
0x00000000000cdc8d : out dx, eax ; adc byte ptr [rax + 1], cl ; clc ; ret
0x000000000016a237 : out dx, eax ; add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000117dad : out dx, eax ; add cl, byte ptr [rip + 0x5c415d00] ; ret
0x000000000012c1b1 : out dx, eax ; add dword ptr [rax + 0x39], ecx ; ret 0x1174
0x000000000006579f : out dx, eax ; add eax, ebp ; ret
0x0000000000056e2e : out dx, eax ; add eax, ebp ; retf
0x0000000000139c88 : out dx, eax ; add ecx, dword ptr [rax - 0x7d] ; call qword ptr [rcx]
0x000000000008722e : out dx, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000008728a : out dx, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000117351 : out dx, eax ; call 0x1123fa
0x00000000001149ea : out dx, eax ; call 0x11587a
0x0000000000129142 : out dx, eax ; call 0x1257e7
0x000000000014c0cb : out dx, eax ; call 0x148b93
0x0000000000148eeb : out dx, eax ; call 0x1551a3
0x0000000000108e17 : out dx, eax ; call 0x250b3
0x00000000000e6433 : out dx, eax ; call 0x2531f
0x0000000000147ad3 : out dx, eax ; call qword ptr [rbx]
0x000000000011d969 : out dx, eax ; call r12
0x000000000011a375 : out dx, eax ; call r14
0x0000000000026c02 : out dx, eax ; call rax
0x00000000000454e8 : out dx, eax ; call rbx
0x0000000000155d52 : out dx, eax ; call rcx
0x0000000000147596 : out dx, eax ; call rdx
0x00000000001260b9 : out dx, eax ; dec dword ptr [rax + 1] ; pop rbp ; cmp byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000012576f : out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x000000000012fedf : out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000001317e0 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000012954b : out dx, eax ; dec dword ptr [rcx - 0x75] ; cmp byte ptr [rax - 0x77], r9b ; ret 0x2b49
0x00000000000f85c6 : out dx, eax ; enter 0xf66, -0x11 ; ret 0x110f
0x00000000000eaf70 : out dx, eax ; jmp 0xeaf3f
0x0000000000146179 : out dx, eax ; lea r9, [rsp + 0x20] ; call qword ptr [rax]
0x00000000000bbe5d : out dx, eax ; lea r9, [rsp + 0x30] ; call rbx
0x0000000000118ac9 : out dx, eax ; mov dword ptr [rbp - 0x50], r15d ; call r14
0x00000000001174bb : out dx, eax ; mov eax, 9 ; syscall
0x0000000000101bb0 : out dx, eax ; mov eax, dword ptr [rdx + 8] ; ret
0x000000000008c3a0 : out dx, eax ; mov eax, r9d ; syscall
0x00000000001292af : out dx, eax ; mov qword ptr [rbp - 0xa8], rcx ; call 0x125d8a
0x000000000016538a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000165486 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001653d2 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000a6c10 : out dx, eax ; mov qword ptr [rdx], rcx ; ret
0x00000000000d8763 : out dx, eax ; mov qword ptr [rsp + 0x30], rcx ; mov rbp, r15 ; call 0x2522b
0x000000000011ba38 : out dx, eax ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000571b0 : out dx, eax ; mov rax, rdx ; ret
0x000000000014bf4e : out dx, eax ; mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x000000000014c15d : out dx, eax ; mov rdx, qword ptr [rsp + 0x20] ; call rdx
0x00000000000bc251 : out dx, eax ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x0000000000136f02 : out dx, eax ; mov rsi, qword ptr [rsp] ; call r12
0x000000000016b1ea : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000affe6 : out dx, eax ; mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000018367d : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146eae : out dx, eax ; pop rbx ; xor eax, eax ; pop rbp ; jmp rdx
0x000000000018b373 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18b34b
0x000000000018b3f1 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18b3c9
0x000000000018b883 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18b85b
0x000000000018b901 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18b8d9
0x000000000018c9a3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18c97b
0x000000000018ca21 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18c9f9
0x000000000018ceb3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18ce8b
0x000000000018cf31 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18cf09
0x000000000018af73 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018af88 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018af9d : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000bacf0 : out dx, eax ; ret
0x00000000000f85ca : out dx, eax ; ret 0x110f
0x000000000012c96d : out dx, eax ; ret 0xb
0x0000000000117b7d : out dx, eax ; ret 0xc
0x00000000000b9b73 : out dx, eax ; ret 0xf66
0x0000000000028f6d : out dx, eax ; ret 0xffff
0x0000000000071232 : out dx, eax ; retf
0x00000000000b9b56 : out dx, eax ; retf 0x4466
0x0000000000114a73 : out dx, eax ; retf 9
0x00000000001560a0 : out dx, eax ; ror byte ptr [rdi], 0x11 ; and al, 0x28 ; call rdx
0x000000000006571f : out dx, eax ; ror byte ptr [rdi], 0x29 ; test dword ptr [rax - 0x16000005], edx ; ret 0xfffd
0x00000000000a75ea : out dx, eax ; shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x0000000000117bdb : out dx, eax ; shl byte ptr [rsi + 0xf], cl ; ret 0x67a
0x000000000018c48c : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000018c475 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000018c45e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000018af1a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018b1ef : out dx, eax ; xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018b2ac : out dx, eax ; xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018b20a : out dx, eax ; xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018b25b : out dx, eax ; xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001947f2 : out dx, eax ; xor byte ptr [rcx + 0x21], cl ; retf
0x0000000000121449 : out dx, eax ; xor byte ptr [rcx], dh ; rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x000000000015516a : out dx, eax ; xor eax, eax ; call rcx
0x000000000011e23e : out dx, eax ; xor eax, eax ; ret
0x00000000000bc154 : out dx, eax ; xor r8d, r8d ; lea r9, [rsp + 0x28] ; call rbx
0x000000000017dd1e : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000ca4dc : outsb dx, byte ptr [rsi] ; add al, 0x89 ; fucomip st(0) ; retf
0x000000000018e5ae : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x000000000010353e : outsb dx, byte ptr [rsi] ; add dword ptr [rcx + rcx*4 + 0x78], ecx ; and byte ptr [rbp + 0x31], al ; jmp qword ptr [rsi + 0xf]
0x00000000000529b3 : outsb dx, byte ptr [rsi] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000113b4e : outsb dx, byte ptr [rsi] ; add rsp, 0x38 ; ret
0x000000000004323a : outsb dx, byte ptr [rsi] ; and al, 0xfc ; movss dword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x0000000000043225 : outsb dx, byte ptr [rsi] ; and al, 0xfc ; ret
0x000000000011fafc : outsb dx, byte ptr [rsi] ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x000000000004386e : outsb dx, byte ptr [rsi] ; in eax, dx ; adc al, 0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013fac7 : outsb dx, byte ptr [rsi] ; lock dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret 0x1be
0x000000000009d42d : outsb dx, byte ptr [rsi] ; or eax, 0x450f4800 ; ret 0x66c3
0x0000000000038d8e : outsb dx, byte ptr [rsi] ; ret
0x000000000006cb2e : outsb dx, byte ptr [rsi] ; retf
0x000000000012279e : outsb dx, byte ptr [rsi] ; retf 0
0x000000000014f2f2 : outsd dx, dword ptr [rsi] ; adc bh, byte ptr [rax + 1] ; movups xmmword ptr [r8 + 0x20], xmm2 ; ret
0x00000000001564b6 : outsd dx, dword ptr [rsi] ; adc byte ptr [rax - 0x7d], cl ; ret 0x4820
0x0000000000061d3a : outsd dx, dword ptr [rsi] ; adc dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf 0xf66
0x0000000000043635 : outsd dx, dword ptr [rsi] ; add al, 0x24 ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000043954 : outsd dx, dword ptr [rsi] ; add al, 0x24 ; add rsp, 0x20 ; pop rbx ; ret
0x00000000001369c8 : outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; mov rdi, rbx ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000000293e8 : outsd dx, dword ptr [rsi] ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; mov byte ptr [rcx + 0xf], 0x95 ; ret
0x000000000009f482 : outsd dx, dword ptr [rsi] ; add cl, byte ptr [rax - 0x7d] ; ret 0x6610
0x000000000004de4f : outsd dx, dword ptr [rsi] ; add dword ptr [rcx - 0x77], ecx ; ret 0x8944
0x0000000000146387 : outsd dx, dword ptr [rsi] ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000435bb : outsd dx, dword ptr [rsi] ; and al, 0xc8 ; ret
0x000000000005bd55 : outsd dx, dword ptr [rsi] ; and al, 0xe8 ; pinsrw xmm0, eax, 6 ; ret
0x00000000000ebe2c : outsd dx, dword ptr [rsi] ; call 0xffffffffc3e2cd9d
0x000000000009e12f : outsd dx, dword ptr [rsi] ; clc ; dec dword ptr [rax + 1] ; ret
0x000000000004383e : outsd dx, dword ptr [rsi] ; enter -0x6418, -0x33 ; adc al, 0 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ebf93 : outsd dx, dword ptr [rsi] ; enter 0xf66, -0x2c ; ret
0x00000000000ebe28 : outsd dx, dword ptr [rsi] ; enter 0xf66, 0x6f ; call 0xffffffffc3e2cda1
0x00000000000a7798 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000000ab5ce : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000010b872 : outsd dx, dword ptr [rsi] ; jg 0x10b8f4 ; movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x000000000010b8c2 : outsd dx, dword ptr [rsi] ; jle 0x10b93c ; movups xmmword ptr [rdi + 0x78], xmm7 ; ret
0x000000000010c237 : outsd dx, dword ptr [rsi] ; jle 0x10c2b4 ; movups xmmword ptr [rdi + 0xf8], xmm7 ; ret
0x0000000000165b12 : outsd dx, dword ptr [rsi] ; mov ebx, 0x4e6f0ff3 ; retf
0x000000000010c1a7 : outsd dx, dword ptr [rsi] ; mov edi, 0xf8 ; movups xmmword ptr [rsi + 0x70], xmm7 ; ret
0x0000000000165d12 : outsd dx, dword ptr [rsi] ; mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x000000000014bd0b : outsd dx, dword ptr [rsi] ; or byte ptr [rax + 1], dil ; movups xmmword ptr [rdx], xmm1 ; ret
0x000000000014f303 : outsd dx, dword ptr [rsi] ; pop rax ; and byte ptr [rax + 1], bh ; movups xmmword ptr [rdx], xmm3 ; ret
0x000000000018b36e : outsd dx, dword ptr [rsi] ; pop rdi ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18b350
0x000000000018b3ec : outsd dx, dword ptr [rsi] ; pop rdi ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18b3ce
0x000000000018b87e : outsd dx, dword ptr [rsi] ; pop rdi ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18b860
0x000000000018b8fc : outsd dx, dword ptr [rsi] ; pop rdi ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18b8de
0x000000000018c99e : outsd dx, dword ptr [rsi] ; pop rdi ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18c980
0x000000000018ca1c : outsd dx, dword ptr [rsi] ; pop rdi ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18c9fe
0x000000000018ceae : outsd dx, dword ptr [rsi] ; pop rdi ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18ce90
0x000000000018cf2c : outsd dx, dword ptr [rsi] ; pop rdi ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18cf0e
0x000000000014e9f3 : outsd dx, dword ptr [rsi] ; push rax ; sbb al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm2 ; ret
0x000000000012fedd : outsd dx, dword ptr [rsi] ; push rcx ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000018af6e : outsd dx, dword ptr [rsi] ; push rdi ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018af83 : outsd dx, dword ptr [rsi] ; push rdi ; and byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018c28d : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000018c32d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000018be52 : outsd dx, dword ptr [rsi] ; push rdi ; retf
0x000000000018bed2 : outsd dx, dword ptr [rsi] ; push rdi ; retf 0xcab2
0x000000000018af98 : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000affea : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000000b56e6 : outsd dx, dword ptr [rsi] ; push rsi ; adc bl, dh ; movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000b5686 : outsd dx, dword ptr [rsi] ; push rsi ; or eax, 0x77f0ff3 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000b56c6 : outsd dx, dword ptr [rsi] ; push rsi ; psllq mm1, qword ptr [rdi] ; jg 0xb56e0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000b6396 : outsd dx, dword ptr [rsi] ; push rsi ; psllq mm1, qword ptr [rdi] ; jg 0xb63b0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000b8976 : outsd dx, dword ptr [rsi] ; push rsi ; psllq mm1, qword ptr [rdi] ; jg 0xb8990 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000b9446 : outsd dx, dword ptr [rsi] ; push rsi ; psllq mm1, qword ptr [rdi] ; jg 0xb9460 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000043a09 : outsd dx, dword ptr [rsi] ; ret
0x00000000001456cd : outsd dx, dword ptr [rsi] ; ret 0
0x000000000005ca84 : outsd dx, dword ptr [rsi] ; ret 0x25e8
0x00000000000439b1 : outsd dx, dword ptr [rsi] ; ret 0x290f
0x0000000000087946 : outsd dx, dword ptr [rsi] ; ret 0x294c
0x00000000000944a2 : outsd dx, dword ptr [rsi] ; ret 0x4466
0x00000000000439d2 : outsd dx, dword ptr [rsi] ; ret 0x77e8
0x0000000000061dee : outsd dx, dword ptr [rsi] ; ret 0x8349
0x0000000000165cc7 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x000000000018c332 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x000000000005f8e6 : outsd dx, dword ptr [rsi] ; ret 0xc3e8
0x0000000000043a5c : outsd dx, dword ptr [rsi] ; ret 0xede8
0x00000000000b003a : outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000000436c7 : outsd dx, dword ptr [rsi] ; retf
0x000000000004b4c0 : outsd dx, dword ptr [rsi] ; retf 0x4466
0x0000000000165d92 : outsd dx, dword ptr [rsi] ; retf 0x8b4c
0x0000000000061d3e : outsd dx, dword ptr [rsi] ; retf 0xf66
0x000000000018b36a : outsd dx, dword ptr [rsi] ; retf 0xff3
0x000000000011d5dd : outsd dx, dword ptr [rsi] ; retf 0xfff9
0x000000000005ca22 : outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x000000000002f365 : outsd dx, dword ptr [rsi] ; sbb byte ptr [rax], al ; call 0x34fdc
0x00000000000b659d : outsd dx, dword ptr [rsi] ; str word ptr [rbx + 0x63] ; or al, 0x83 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000014f2cb : outsd dx, dword ptr [rsi] ; xor byte ptr [rax + 1], dil ; movups xmmword ptr [rdx], xmm1 ; ret
0x000000000007bacd : paddd mm7, mm7 ; inc esi ; test eax, esi ; idiv bh ; jmp qword ptr [rax]
0x0000000000193cdb : paddw mm7, mm7 ; call qword ptr [rax - 0x7c3576b4]
0x0000000000044c69 : pand mm0, mm1 ; shufpd xmm0, xmm0, 1 ; movups xmmword ptr [rdi], xmm0 ; ret
0x0000000000044c68 : pand xmm0, xmm1 ; shufpd xmm0, xmm0, 1 ; movups xmmword ptr [rdi], xmm0 ; ret
0x000000000017b962 : pcmpeqb mm0, mm1 ; lea r10, [r10 + r9] ; jmp r10
0x00000000000cd992 : pcmpeqb mm1, qword ptr [rbx] ; mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0xcda0b ; ret
0x00000000000cd9e2 : pcmpeqb mm1, qword ptr [rbx] ; mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0xcda0b ; ret
0x00000000000cd9b8 : pcmpeqb mm2, qword ptr [rip + 0x3b30478b] ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000000ce474 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x00000000000ce45f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000017b961 : pcmpeqb xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x00000000000b9559 : pcmpgtd mm1, qword ptr [rcx - 0x12cff7a9] ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000b94f7 : pcmpgtd mm1, qword ptr [rcx - 0x12cffba9] ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000aabc5 : pcmpgtd mm1, qword ptr [rdi] ; xlatb ; ret 0xc085
0x00000000000aac33 : pcmpgtd mm1, qword ptr [rdi] ; xlatb ; rol dword ptr [rbp + 0x317475c0], 0xc0 ; ret
0x00000000001895d6 : pextrw edi, mm0, 0x77 ; ret
0x0000000000186924 : pextrw edi, mm5, 0x74 ; retf
0x0000000000185eda : pextrw edi, mm5, 0x74 ; rol ebp, 1 ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x000000000005bd5a : pinsrw mm0, eax, 6 ; ret
0x000000000005bd59 : pinsrw xmm0, eax, 6 ; ret
0x00000000000430d1 : pmovmskb eax, mm0 ; and eax, 0x80 ; ret
0x0000000000043451 : pmovmskb eax, mm0 ; and eax, 8 ; ret
0x00000000000aa6fc : pmovmskb eax, mm1 ; bsf eax, eax ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000aabd3 : pmovmskb eax, mm1 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000aa792 : pmovmskb eax, mm1 ; test eax, eax ; jne 0xaa7f9 ; xor eax, eax ; ret
0x00000000000aac35 : pmovmskb eax, mm1 ; test eax, eax ; jne 0xaacb9 ; xor eax, eax ; ret
0x00000000000aac64 : pmovmskb eax, mm1 ; test eax, eax ; jne 0xaace9 ; xor eax, eax ; ret
0x00000000000cccb2 : pmovmskb eax, mm1 ; test eax, eax ; jne 0xccd19 ; xor eax, eax ; ret
0x00000000000430d0 : pmovmskb eax, xmm0 ; and eax, 0x80 ; ret
0x0000000000043450 : pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x00000000000aa6fb : pmovmskb eax, xmm1 ; bsf eax, eax ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000aabd2 : pmovmskb eax, xmm1 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000aa791 : pmovmskb eax, xmm1 ; test eax, eax ; jne 0xaa7fa ; xor eax, eax ; ret
0x00000000000aac34 : pmovmskb eax, xmm1 ; test eax, eax ; jne 0xaacba ; xor eax, eax ; ret
0x00000000000aac63 : pmovmskb eax, xmm1 ; test eax, eax ; jne 0xaacea ; xor eax, eax ; ret
0x00000000000cccb1 : pmovmskb eax, xmm1 ; test eax, eax ; jne 0xccd1a ; xor eax, eax ; ret
0x00000000000b01df : pmovmskb edx, mm4 ; test edx, edx ; je 0xb01f3 ; bsf eax, edx ; ret
0x00000000000b01df : pmovmskb edx, mm4 ; test edx, edx ; je 0xb01f4 ; bsf eax, edx ; ret
0x00000000000b01de : pmovmskb edx, xmm4 ; test edx, edx ; je 0xb01f4 ; bsf eax, edx ; ret
0x00000000000b01de : pmovmskb edx, xmm4 ; test edx, edx ; je 0xb01f5 ; bsf eax, edx ; ret
0x00000000001519fd : pop qword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000001017d1 : pop qword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000c8959 : pop qword ptr [rip + 0x74db8500] ; and byte ptr [rcx], bh ; ret
0x00000000000c8905 : pop qword ptr [rip + 0x75db8500] ; fsubr qword ptr [rcx] ; ret
0x000000000010f62f : pop r10 ; int1 ; dec dword ptr [rcx - 0x73] ; push rdi ; add dword ptr [rax + 0x39], ecx ; ret 0xd72
0x000000000012bda5 : pop r10 ; ret
0x00000000001484f6 : pop r11 ; pop rbp ; pop r12 ; ret
0x0000000000086733 : pop r12 ; jmp rax
0x0000000000142f28 : pop r12 ; pop r13 ; and eax, 2 ; pop r14 ; sub eax, 1 ; ret
0x00000000000840e8 : pop r12 ; pop r13 ; jmp rax
0x00000000000cfbbb : pop r12 ; pop r13 ; mov qword ptr [rdi + 0x20], rcx ; pop r14 ; pop r15 ; ret
0x000000000007a0a3 : pop r12 ; pop r13 ; mov rax, r9 ; pop r14 ; ret
0x00000000001190fb : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp 0x25322
0x00000000000356ce : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000000270ea : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002653b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000081319 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000028d3f : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000046b25 : pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000026a23 : pop r12 ; pop r13 ; ret
0x00000000000ce8a9 : pop r12 ; pop r14 ; mov dword ptr [r11 + 0xc], r8d ; ret
0x00000000000ce819 : pop r12 ; pop r14 ; ret
0x00000000000dfa4d : pop r12 ; pop rbp ; ret
0x0000000000030e4d : pop r12 ; ret
0x0000000000142f2a : pop r13 ; and eax, 2 ; pop r14 ; sub eax, 1 ; ret
0x00000000000840ea : pop r13 ; jmp rax
0x00000000000cfbbd : pop r13 ; mov qword ptr [rdi + 0x20], rcx ; pop r14 ; pop r15 ; ret
0x000000000007a0a5 : pop r13 ; mov rax, r9 ; pop r14 ; ret
0x00000000000dbb7a : pop r13 ; pop r14 ; jmp rax
0x00000000001190fd : pop r13 ; pop r14 ; pop r15 ; jmp 0x25320
0x00000000000356d0 : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000000270ec : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002653d : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008131b : pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000028d41 : pop r13 ; pop r14 ; ret
0x0000000000046b27 : pop r13 ; pop rbp ; ret
0x0000000000026a25 : pop r13 ; ret
0x00000000000dbb7c : pop r14 ; jmp rax
0x00000000000ce8ab : pop r14 ; mov dword ptr [r11 + 0xc], r8d ; ret
0x00000000001190ff : pop r14 ; pop r15 ; jmp 0x2531e
0x00000000000356d2 : pop r14 ; pop r15 ; jmp rax
0x00000000000270ee : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002653f : pop r14 ; pop r15 ; ret
0x000000000008131d : pop r14 ; pop rbp ; ret
0x0000000000026f9d : pop r14 ; ret
0x0000000000142f2f : pop r14 ; sub eax, 1 ; ret
0x0000000000119101 : pop r15 ; jmp 0x2531c
0x00000000000356d4 : pop r15 ; jmp rax
0x00000000000270f0 : pop r15 ; pop rbp ; ret
0x0000000000026541 : pop r15 ; ret
0x000000000014f25d : pop r8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x0000000000090b9b : pop r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; movups xmmword ptr [rbx + 0x48], xmm0 ; pop rbx ; ret
0x0000000000148078 : pop r8 ; add rsp, 8 ; sub esi, eax ; pop rbx ; pop rbp ; mov eax, esi ; ret
0x000000000014cb21 : pop r8 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000082c14 : pop rax ; adc dl, byte ptr [rsi] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000140c2b : pop rax ; add al, 0x39 ; pop rdi ; cmp byte ptr [rdi], cl ; mov bh, 0x40 ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x000000000014f25e : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x0000000000090b9c : pop rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; movups xmmword ptr [rbx + 0x48], xmm0 ; pop rbx ; ret
0x0000000000080f84 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x76b3d795], cl ; retf 0x8949
0x000000000013bb18 : pop rax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000011aaf6 : pop rax ; add rsp, 0xe0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000148079 : pop rax ; add rsp, 8 ; sub esi, eax ; pop rbx ; pop rbp ; mov eax, esi ; ret
0x000000000014f304 : pop rax ; and byte ptr [rax + 1], bh ; movups xmmword ptr [rdx], xmm3 ; ret
0x000000000014f404 : pop rax ; call rax
0x0000000000039574 : pop rax ; cmp al, byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f7284 : pop rax ; cmp dh, dh ; ret
0x00000000000549a6 : pop rax ; dec dword ptr [rbx - 0x7a97db8c] ; test byte ptr [rdi], 0x8e ; ret
0x000000000014f266 : pop rax ; jmp rcx
0x00000000000e34eb : pop rax ; jne 0xe34f3 ; ret
0x00000000000e34ea : pop rax ; jne 0xe34f4 ; ret
0x000000000014ea80 : pop rax ; mov eax, 1 ; ret
0x0000000000035294 : pop rax ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x0000000000035222 : pop rax ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x0000000000114a03 : pop rax ; mov qword ptr [rbx + 0x60], rax ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000147fe0 : pop rax ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000117e38 : pop rax ; mov rax, rbx ; pop rdx ; pop rbx ; ret
0x000000000011e584 : pop rax ; or al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000005de51 : pop rax ; or al, 0x89 ; fdiv st(6) ; ret
0x000000000005d005 : pop rax ; or al, 0xf6 ; ret
0x00000000000f5fd8 : pop rax ; or bh, dh ; ret
0x0000000000142d30 : pop rax ; or byte ptr [rax - 0x3f], cl ; retf
0x00000000000b4204 : pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000000f6efc : pop rax ; or eax, dword ptr [rax] ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000002a0df : pop rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000253a4 : pop rax ; pop rbx ; pop rbp ; ret
0x000000000011db1b : pop rax ; pop rdi ; call rax
0x000000000015da11 : pop rax ; pop rdx ; pop rbx ; ret
0x0000000000047cf8 : pop rax ; ret
0x00000000001126b4 : pop rax ; retf
0x00000000000ffe04 : pop rax ; retf 0xfffd
0x000000000014cb22 : pop rax ; sub byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000cec77 : pop rax ; xor eax, eax ; mov qword ptr [rsp + 0x50], r15 ; call rbx
0x000000000002d787 : pop rbp ; adc byte ptr [rbp - 0x77], cl ; retf 0x149
0x00000000000e8488 : pop rbp ; adc cl, ch ; retf
0x000000000009e162 : pop rbp ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000001181e1 : pop rbp ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000010624f : pop rbp ; add byte ptr [rsp + rdx*2 + 0x5b], dh ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000013a780 : pop rbp ; add dh, dh ; ret
0x000000000002eaaf : pop rbp ; add dword ptr [rax], eax ; add byte ptr [rsi - 0x77], ah ; or ecx, dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000142f2b : pop rbp ; and eax, 2 ; pop r14 ; sub eax, 1 ; ret
0x000000000009f374 : pop rbp ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e1dd3 : pop rbp ; clc ; leave ; ret
0x000000000006deef : pop rbp ; cmove r9, rdx ; jmp 0x6df10
0x00000000001260bd : pop rbp ; cmp byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000083eef : pop rbp ; jmp rax
0x00000000001456f5 : pop rbp ; jmp rcx
0x0000000000146eb2 : pop rbp ; jmp rdx
0x00000000000dbea5 : pop rbp ; lea rax, [rax + rdx*8] ; ret
0x00000000000a3b34 : pop rbp ; mov byte ptr [rax + 0x6348c145], cl ; retf 0xd889
0x0000000000133e78 : pop rbp ; mov byte ptr [rdx], 0 ; pop r12 ; pop r13 ; ret
0x00000000000f4dfa : pop rbp ; mov dword ptr [r12 + 4], r13d ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012cc5f : pop rbp ; mov eax, 0x89483f74 ; ret
0x00000000000de1b3 : pop rbp ; mov eax, edx ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000148081 : pop rbp ; mov eax, esi ; ret
0x000000000010c36c : pop rbp ; mov eax, r12d ; pop r12 ; ret
0x00000000000a0da7 : pop rbp ; mov qword ptr [r13], r12 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000cfbbe : pop rbp ; mov qword ptr [rdi + 0x20], rcx ; pop r14 ; pop r15 ; ret
0x0000000000196960 : pop rbp ; mov qword ptr [rip + 0x522fc], 0 ; ret
0x000000000009feb4 : pop rbp ; mov rax, r12 ; pop r12 ; ret
0x0000000000034a04 : pop rbp ; mov rax, r13 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007a0a6 : pop rbp ; mov rax, r9 ; pop r14 ; ret
0x0000000000098fb3 : pop rbp ; mov rax, rdx ; pop r12 ; ret
0x00000000000ead11 : pop rbp ; neg eax ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000010e164 : pop rbp ; or eax, 0x64d8f700 ; mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000086732 : pop rbp ; pop r12 ; jmp rax
0x00000000000840e7 : pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000001190fa : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp 0x25323
0x000000000009973a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000002653a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000028d3e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000026a22 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ce818 : pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000030f6f : pop rbp ; pop r12 ; ret
0x00000000000dbb7b : pop rbp ; pop r14 ; jmp rax
0x00000000001190fe : pop rbp ; pop r14 ; pop r15 ; jmp 0x2531f
0x00000000000356d1 : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x00000000000270ed : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002653e : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000008131c : pop rbp ; pop r14 ; pop rbp ; ret
0x0000000000028d42 : pop rbp ; pop r14 ; ret
0x0000000000046b28 : pop rbp ; pop rbp ; ret
0x0000000000056898 : pop rbp ; pop rbx ; ret
0x00000000000253a6 : pop rbp ; ret
0x00000000000417cf : pop rbp ; ret 0xffff
0x00000000000e87ef : pop rbp ; retf 0xfff3
0x00000000000eac94 : pop rbp ; sar eax, 1 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000035aa2 : pop rbp ; xor ebp, ebp ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x00000000000d1d4a : pop rbx ; adc dword ptr [rax], eax ; jmp 0xd1d66
0x00000000000d1d49 : pop rbx ; adc dword ptr [rax], eax ; jmp 0xd1d67
0x000000000010bd34 : pop rbx ; add eax, dword ptr [rax] ; add dh, dh ; ret 0xf80
0x00000000001478a9 : pop rbx ; add rdi, 0x23b0 ; pop rbp ; jmp rcx
0x00000000000ba6b6 : pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000005c0e5 : pop rbx ; cmovb rax, rdi ; ret
0x00000000000ba60b : pop rbx ; cmove rax, rdx ; ret
0x00000000000a0dd8 : pop rbx ; cmovne rax, rdi ; ret
0x00000000000ba69b : pop rbx ; cmovne rax, rdx ; ret
0x00000000000fcd32 : pop rbx ; cmp cl, ch ; retf 0xfffa
0x00000000000a02b7 : pop rbx ; dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000090c04 : pop rbx ; jmp rax
0x0000000000117da9 : pop rbx ; lea rax, [rip + 0xd02ef] ; pop rbp ; pop r12 ; ret
0x0000000000151cb6 : pop rbx ; mov dword ptr [rip + 0x97f5f], 2 ; ret
0x0000000000151bd6 : pop rbx ; mov dword ptr [rip + 0x9803f], 2 ; ret
0x0000000000151af6 : pop rbx ; mov dword ptr [rip + 0x9811f], 2 ; ret
0x0000000000151a2e : pop rbx ; mov dword ptr [rip + 0x981e7], 2 ; ret
0x0000000000151977 : pop rbx ; mov dword ptr [rip + 0x9829e], 2 ; ret
0x000000000012befe : pop rbx ; mov dword ptr [rip + 0xbe4b7], 1 ; ret
0x00000000000eae80 : pop rbx ; mov eax, 0xc ; pop rbp ; pop r12 ; ret
0x0000000000133ddb : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000061b8c : pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000147924 : pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; ret
0x000000000012c896 : pop rbx ; mov eax, 5 ; pop r12 ; pop rbp ; ret
0x00000000001062a7 : pop rbx ; mov eax, 5 ; pop rbp ; pop r12 ; ret
0x000000000010b6b0 : pop rbx ; mov eax, 9 ; pop rbp ; pop r12 ; ret
0x0000000000047cf5 : pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000ba74b : pop rbx ; mov eax, ecx ; and eax, 0x7ff80000 ; div esi ; mov eax, eax ; ret
0x000000000010b625 : pop rbx ; mov eax, ecx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000de0dc : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000014ee47 : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000005f51d : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000008aaf5 : pop rbx ; mov eax, edx ; ret
0x0000000000085027 : pop rbx ; mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a0155 : pop rbx ; mov qword ptr [rbp], 0 ; pop rbp ; pop r12 ; ret
0x00000000000a6d62 : pop rbx ; mov qword ptr [rdi], rdx ; ret
0x0000000000196588 : pop rbx ; mov qword ptr [rip + 0x5048c], 0 ; ret
0x00000000001967a3 : pop rbx ; mov qword ptr [rip + 0x510e1], 0 ; ret
0x0000000000088dc8 : pop rbx ; mov rax, qword ptr [rax + 0x130] ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000000349de : pop rbx ; mov rax, r13 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000105e60 : pop rbx ; mov rax, r14 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000099ab0 : pop rbx ; mov rax, r8 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000079ff5 : pop rbx ; mov rax, r9 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001186a2 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; jmp rax
0x0000000000082358 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000082476 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000035aa5 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000094fa1 : pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x0000000000098c16 : pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000821ff : pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; ret
0x000000000008d3dc : pop rbx ; neg eax ; ret
0x000000000011e2a4 : pop rbx ; or al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000270e9 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000081318 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000046b24 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000dfa4c : pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000030e4c : pop rbx ; pop r12 ; ret
0x0000000000026f9c : pop rbx ; pop r14 ; ret
0x0000000000083eee : pop rbx ; pop rbp ; jmp rax
0x00000000001456f4 : pop rbx ; pop rbp ; jmp rcx
0x00000000000dbea4 : pop rbx ; pop rbp ; lea rax, [rax + rdx*8] ; ret
0x00000000000de1b2 : pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000148080 : pop rbx ; pop rbp ; mov eax, esi ; ret
0x000000000010c36b : pop rbx ; pop rbp ; mov eax, r12d ; pop r12 ; ret
0x00000000000a0da6 : pop rbx ; pop rbp ; mov qword ptr [r13], r12 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009feb3 : pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x0000000000034a03 : pop rbx ; pop rbp ; mov rax, r13 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000098fb2 : pop rbx ; pop rbp ; mov rax, rdx ; pop r12 ; ret
0x00000000000ead10 : pop rbx ; pop rbp ; neg eax ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000086731 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000840e6 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000001190f9 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp 0x25324
0x0000000000099739 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000026539 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000028d3d : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000026a21 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ce817 : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000030f6e : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000476e3 : pop rbx ; pop rbp ; pop r14 ; ret
0x00000000000253a5 : pop rbx ; pop rbp ; ret
0x00000000000eac93 : pop rbx ; pop rbp ; sar eax, 1 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000314f9 : pop rbx ; ret
0x00000000000dbad3 : pop rbx ; setbe al ; movzx eax, al ; ret
0x000000000010b6fa : pop rbx ; setl al ; ret
0x00000000001183ae : pop rbx ; setne al ; movzx eax, al ; ret
0x00000000000ba61a : pop rbx ; shr eax, 0xe ; and eax, 0x3fc00 ; ret
0x00000000000ba665 : pop rbx ; shr eax, 6 ; and eax, 0x3fffc00 ; ret
0x0000000000142d1b : pop rbx ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000008e9c3 : pop rbx ; sub rax, rdx ; pop rbp ; pop r12 ; ret
0x0000000000047cc4 : pop rbx ; test eax, eax ; cmovs eax, edx ; ret
0x000000000012c886 : pop rbx ; xor eax, eax ; pop r12 ; pop rbp ; ret
0x0000000000146eaf : pop rbx ; xor eax, eax ; pop rbp ; jmp rdx
0x0000000000133e75 : pop rbx ; xor eax, eax ; pop rbp ; mov byte ptr [rdx], 0 ; pop r12 ; pop r13 ; ret
0x00000000000c8a60 : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000039c5e : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000149409 : pop rcx ; adc byte ptr [rcx + 0x31], cl ; retf 0x3149
0x0000000000060d3c : pop rcx ; add al, byte ptr [rax] ; cmp eax, -1 ; sete al ; jmp 0x60d14
0x0000000000163717 : pop rcx ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000012d35d : pop rcx ; add eax, 0x440f4800 ; ret 0x66c3
0x0000000000163f23 : pop rcx ; add rax, 0x14634900 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000ad604 : pop rcx ; and al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000166ce3 : pop rcx ; and eax, dword ptr [rip + 0x14634900] ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000df97a : pop rcx ; hlt ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000117c7d : pop rcx ; in eax, 0x66 ; comiss xmm1, xmm4 ; jae 0x117c7b ; divsd xmm0, xmm2 ; jmp 0x117ce5
0x000000000011ec73 : pop rcx ; mov bh, 0xc ; add byte ptr [rcx - 0x77], al ; retf 0x8b
0x000000000012d293 : pop rcx ; mov ebp, 0xf480005 ; ret 0xfc3
0x000000000011e494 : pop rcx ; or al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000017cbe7 : pop rcx ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000e7dbf : pop rcx ; or cl, ch ; ret
0x0000000000156d7f : pop rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000117d7b : pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001016da : pop rcx ; pop rbx ; ret
0x000000000010b31e : pop rcx ; ret
0x00000000000980e3 : pop rcx ; retf
0x0000000000027413 : pop rcx ; retf 0x1b
0x0000000000133af4 : pop rcx ; rol byte ptr [rbx - 0x7cbea817], 1 ; sti ; or dword ptr [rcx + 0xf], eax ; retf
0x000000000004c944 : pop rcx ; shr cl, 0x3f ; fdivp st(7) ; dec dword ptr [rbp - 0x77] ; ret 0x8949
0x000000000011820e : pop rcx ; test eax, eax ; je 0x1181eb ; mov eax, 0xffffffff ; jmp 0x1181f0
0x0000000000163f08 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000018b36f : pop rdi ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18b34f
0x000000000018b3ed : pop rdi ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18b3cd
0x000000000018b87f : pop rdi ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18b85f
0x000000000018b8fd : pop rdi ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18b8dd
0x000000000018c99f : pop rdi ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18c97f
0x000000000018ca1d : pop rdi ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18c9fd
0x000000000018ceaf : pop rdi ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18ce8f
0x000000000018cf2d : pop rdi ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18cf0d
0x000000000010cbda : pop rdi ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000183d0d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000133b72 : pop rdi ; add ebx, ebp ; cwde ; xor eax, eax ; ret
0x00000000001823b2 : pop rdi ; and ch, al ; std ; xlatb ; ret
0x000000000011db1c : pop rdi ; call rax
0x0000000000140c2e : pop rdi ; cmp byte ptr [rdi], cl ; mov bh, 0x40 ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x0000000000165929 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000165739 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000119102 : pop rdi ; jmp 0x2531b
0x00000000000356d5 : pop rdi ; jmp rax
0x00000000000e18c0 : pop rdi ; mov eax, 0x3a ; syscall
0x0000000000165559 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000165389 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000165485 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001653d1 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000270f1 : pop rdi ; pop rbp ; ret
0x0000000000026542 : pop rdi ; ret
0x000000000014f51d : pop rdi ; ret 0xfffe
0x0000000000110e2d : pop rdi ; retf 0xffff
0x00000000001484a3 : pop rdi ; sbb byte ptr [rbx + 0x4c04e83b], cl ; cld ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x0000000000148042 : pop rdi ; sbb byte ptr [rbx + 0x5065e83b], cl ; cld ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x000000000008f3ee : pop rdi ; stc ; dec dword ptr [rax - 0x77] ; ret
0x00000000001288aa : pop rdi ; sub al, ch ; retf 0xffef
0x00000000001424a0 : pop rdi ; xor byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x0000000000096a6d : pop rdx ; adc byte ptr [rax + 0x39], cl ; ret
0x00000000000dbd85 : pop rdx ; adc byte ptr [rdi - 0x3a], bh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000017d0e6 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x0000000000052a91 : pop rdx ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000ec05c : pop rdx ; dec dword ptr [rcx + 0x29] ; ret
0x000000000009e392 : pop rdx ; dec dword ptr [rsi] ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000015f6b6 : pop rdx ; in al, dx ; dec dword ptr [rax - 0x75] ; mov ebp, 0xfffffb20 ; mov rdx, rax ; jmp 0x15f6e2
0x000000000010f630 : pop rdx ; int1 ; dec dword ptr [rcx - 0x73] ; push rdi ; add dword ptr [rax + 0x39], ecx ; ret 0xd72
0x000000000011e374 : pop rdx ; or al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000012bda4 : pop rdx ; pop r10 ; ret
0x0000000000117e3c : pop rdx ; pop rbx ; ret
0x0000000000156d7e : pop rdx ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001016d9 : pop rdx ; pop rcx ; pop rbx ; ret
0x000000000011820d : pop rdx ; pop rcx ; test eax, eax ; je 0x1181ec ; mov eax, 0xffffffff ; jmp 0x1181f1
0x000000000012bdc9 : pop rdx ; pop rsi ; ret
0x000000000012bda6 : pop rdx ; ret
0x0000000000028d72 : pop rdx ; ret 0
0x00000000001285d2 : pop rdx ; retf
0x0000000000030cf4 : pop rdx ; sbb eax, dword ptr [rax] ; ret
0x00000000000cdf55 : pop rdx ; test al, 0xf0 ; jne 0xcdf89 ; lea rax, [rdi - 0x10] ; ret
0x0000000000149294 : pop rsi ; adc byte ptr [rbp + 0x31], cl ; ret 0x314d
0x000000000018b374 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18b34a
0x000000000018b3f2 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18b3c8
0x000000000018b884 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18b85a
0x000000000018b902 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18b8d8
0x000000000018c9a4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18c97a
0x000000000018ca22 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18c9f8
0x000000000018ceb4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18ce8a
0x000000000018cf32 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x18cf08
0x000000000002fbdf : pop rsi ; adc dh, dh ; ret
0x0000000000183c0e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000194c9e : pop rsi ; add eax, 0x25060 ; movss dword ptr [rsp - 0x28], xmm0 ; ret
0x000000000009f407 : pop rsi ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000dbb7d : pop rsi ; jmp rax
0x00000000000ea9f1 : pop rsi ; jne 0xeaa2c ; mov byte ptr [rdi + 8], 0x19 ; mov eax, 1 ; ret
0x00000000000ce8ac : pop rsi ; mov dword ptr [r11 + 0xc], r8d ; ret
0x0000000000119100 : pop rsi ; pop r15 ; jmp 0x2531d
0x00000000000356d3 : pop rsi ; pop r15 ; jmp rax
0x00000000000270ef : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000026540 : pop rsi ; pop r15 ; ret
0x000000000008131e : pop rsi ; pop rbp ; ret
0x0000000000026f9e : pop rsi ; ret
0x0000000000117c87 : pop rsi ; ret 0x4feb
0x000000000013730e : pop rsi ; retf
0x00000000000f88b6 : pop rsi ; retf 0xfff2
0x0000000000142f30 : pop rsi ; sub eax, 1 ; ret
0x000000000017df30 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000027d38 : pop rsp ; adc eax, dword ptr [rax] ; mov rdi, rbx ; call r12
0x000000000017d3e4 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000060aec : pop rsp ; add al, byte ptr [rax] ; cmp eax, -1 ; sete al ; jmp 0x60ac4
0x000000000002a6e6 : pop rsp ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x000000000017ec30 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x0000000000063194 : pop rsp ; add rsp, 0x1018 ; pop rbx ; pop rbp ; ret
0x00000000000907ef : pop rsp ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000008b586 : pop rsp ; and al, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000cebd5 : pop rsp ; and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x0000000000096292 : pop rsp ; and al, 8 ; call qword ptr [rax]
0x00000000000965f1 : pop rsp ; and al, 8 ; call rcx
0x000000000011891b : pop rsp ; and al, 8 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000114fe5 : pop rsp ; cmp byte ptr [rsi], 0 ; lea rdx, [rsi + 1] ; jne 0x114fca ; ret
0x0000000000086734 : pop rsp ; jmp rax
0x0000000000144fae : pop rsp ; lea rsi, [rdi + 0x48] ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000011614d : pop rsp ; mov ah, 9 ; add al, ch ; ret 0xfff6
0x000000000011e170 : pop rsp ; or al, 0 ; mov edx, dword ptr fs:[rcx] ; cmp edx, 0x26 ; je 0x11e1c6 ; ret
0x000000000017bdc0 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000009ce8d : pop rsp ; or eax, 0x450f4800 ; ret 0x66c3
0x000000000010e194 : pop rsp ; or eax, 0x64d8f700 ; mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000142f29 : pop rsp ; pop r13 ; and eax, 2 ; pop r14 ; sub eax, 1 ; ret
0x00000000000840e9 : pop rsp ; pop r13 ; jmp rax
0x00000000000cfbbc : pop rsp ; pop r13 ; mov qword ptr [rdi + 0x20], rcx ; pop r14 ; pop r15 ; ret
0x000000000007a0a4 : pop rsp ; pop r13 ; mov rax, r9 ; pop r14 ; ret
0x00000000001190fc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp 0x25321
0x00000000000356cf : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000000270eb : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002653c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008131a : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000028d40 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000046b26 : pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000026a24 : pop rsp ; pop r13 ; ret
0x00000000000ce8aa : pop rsp ; pop r14 ; mov dword ptr [r11 + 0xc], r8d ; ret
0x00000000000ce81a : pop rsp ; pop r14 ; ret
0x00000000000dfa4e : pop rsp ; pop rbp ; ret
0x0000000000030e4e : pop rsp ; ret
0x00000000000bc000 : pop rsp ; retf
0x0000000000056779 : pop rsp ; retf 0x4df0
0x00000000001586d0 : pop rsp ; retf 0xffec
0x0000000000109360 : pop rsp ; retf 0xffff
0x00000000000dd491 : pop rsp ; xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000c639f : pop rsp ; xchg eax, ecx ; or byte ptr [rdi], cl ; test eax, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000c7206 : pop rsp ; xchg eax, ecx ; or byte ptr [rdi], cl ; test ecx, edi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000c7c6e : pop rsp ; xchg eax, esi ; or byte ptr [rdi], cl ; test ecx, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000115792 : pop rsp ; xor byte ptr [rcx], dh ; xor cl, byte ptr [rax - 0x7d] ; ret 0xe904
0x0000000000115752 : pop rsp ; xor byte ptr [rcx], dh ; xor dword ptr [rax - 0x7d], ecx ; ret 0xe904
0x000000000010c308 : popcnt rdx, rdx ; add eax, edx ; cmp rdi, rsi ; ja 0x10c30c ; ret
0x00000000000812c4 : popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000008df27 : popfq ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x00000000000a2d08 : popfq ; add eax, dword ptr [rax] ; add byte ptr [rcx - 9], al ; ret 0xf800
0x00000000000b72bf : popfq ; cmp cl, byte ptr [rdi] ; add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000014b282 : popfq ; in eax, dx ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000ec8d2 : popfq ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000013b47e : popfq ; out dx, al ; dec dword ptr [rax + 0x63] ; retf
0x00000000000d1250 : popfq ; ret 0x3949
0x00000000000c33d0 : popfq ; ret 0x840
0x00000000001160ff : popfq ; ret 0xfff6
0x000000000017f610 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000baf7f : popfq ; sub al, byte ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000010b9bf : popfq ; test byte ptr [rip + 0x528b4800], cl ; sbb byte ptr [rax - 0x73], cl ; pushfq ; ret 0x8207
0x0000000000044da9 : por mm0, mm1 ; shufpd xmm0, xmm0, 1 ; movups xmmword ptr [rdi], xmm0 ; ret
0x0000000000044da8 : por xmm0, xmm1 ; shufpd xmm0, xmm0, 1 ; movups xmmword ptr [rdi], xmm0 ; ret
0x000000000004307b : pslld mm1, qword ptr [rdi] ; adc byte ptr [rsp - 8], al ; ret
0x000000000016b2b2 : psllq mm1, qword ptr [r15] ; jg 0x16b2cd ; ret
0x000000000016ddd2 : psllq mm1, qword ptr [r15] ; jg 0x16dded ; ret
0x000000000016b2b3 : psllq mm1, qword ptr [rdi] ; jg 0x16b2cc ; ret
0x000000000016ddd3 : psllq mm1, qword ptr [rdi] ; jg 0x16ddec ; ret
0x00000000000b5566 : psllq mm1, qword ptr [rdi] ; jg 0xb557a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000b5565 : psllq mm1, qword ptr [rdi] ; jg 0xb557b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000b55c7 : psllq mm1, qword ptr [rdi] ; jg 0xb55dc ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000b55c6 : psllq mm1, qword ptr [rdi] ; jg 0xb55dd ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000b56c8 : psllq mm1, qword ptr [rdi] ; jg 0xb56de ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000b6236 : psllq mm1, qword ptr [rdi] ; jg 0xb624a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000b6235 : psllq mm1, qword ptr [rdi] ; jg 0xb624b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000b6297 : psllq mm1, qword ptr [rdi] ; jg 0xb62ac ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000b6296 : psllq mm1, qword ptr [rdi] ; jg 0xb62ad ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000b6398 : psllq mm1, qword ptr [rdi] ; jg 0xb63ae ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000b6bd6 : psllq mm1, qword ptr [rdi] ; jg 0xb6bee ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x00000000000b7a36 : psllq mm1, qword ptr [rdi] ; jg 0xb7a4e ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000000b8816 : psllq mm1, qword ptr [rdi] ; jg 0xb882a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000b8815 : psllq mm1, qword ptr [rdi] ; jg 0xb882b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000b8877 : psllq mm1, qword ptr [rdi] ; jg 0xb888c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000b8876 : psllq mm1, qword ptr [rdi] ; jg 0xb888d ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000b8978 : psllq mm1, qword ptr [rdi] ; jg 0xb898e ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000b92e6 : psllq mm1, qword ptr [rdi] ; jg 0xb92fa ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000b92e5 : psllq mm1, qword ptr [rdi] ; jg 0xb92fb ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000b9347 : psllq mm1, qword ptr [rdi] ; jg 0xb935c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000b9346 : psllq mm1, qword ptr [rdi] ; jg 0xb935d ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000b9448 : psllq mm1, qword ptr [rdi] ; jg 0xb945e ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000008dc6d : punpcklqdq xmm0, xmm0 ; movups xmmword ptr [rbx + 8], xmm0 ; pop rbx ; ret
0x0000000000029dac : punpcklqdq xmm0, xmm1 ; movups xmmword ptr [rdx + 0x48], xmm0 ; add rsp, 0x18 ; ret
0x0000000000121c9b : push -0x48f00077 ; add al, 0x78 ; and eax, 1 ; ret
0x00000000000c5f03 : push -0x6bdb7377 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x894c
0x00000000000549ab : push -0x71f0097b ; ret
0x000000000009c0d2 : push -0x76b7ffef ; ret 0xc031
0x000000000006767c : push -0x7c000007 ; ret
0x00000000001326a6 : push -0x7eb7fff5 ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf
0x000000000017a0a4 : push -0x7ffffffa ; cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x000000000018e594 : push -0x9ffffff ; ret 0x7501
0x00000000000cdf47 : push -0xfb872b8 ; ret
0x000000000009e6e3 : push -8 ; lcall [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000e281f : push 0 ; add byte ptr [rax], al ; syscall
0x00000000000bba26 : push 0 ; lea r9, [rsp + 0x28] ; call r12
0x00000000000c9880 : push 0 ; lea r9, [rsp + 0x30] ; call r12
0x00000000000bb733 : push 0 ; lea rcx, [rax + 1] ; lea r9, [rsp + 0x38] ; call rbx
0x00000000000bbc4f : push 0 ; lea rcx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x00000000000bb89b : push 0 ; lea rcx, [rax + 4] ; lea r9, [rsp + 0x28] ; call rbx
0x0000000000089c61 : push 0 ; mov rdi, r15 ; lea r9, [rbp - 0x40] ; call r12
0x00000000000b90c6 : push 0x1e ; str word ptr [rbx + 0x63] ; or al, 0x83 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000014e926 : push 0x1f0fe1ff ; add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x0000000000025086 : push 0x28 ; jmp 0x2500c
0x0000000000025076 : push 0x29 ; jmp 0x2500c
0x00000000000e35d0 : push 0x39489123 ; ret 0x20ba
0x00000000000e3065 : push 0x39489123 ; ret 0x840f
0x000000000014f5fe : push 0x48ff894c ; mov ecx, dword ptr [rsp + 0x30] ; call rcx
0x00000000000b9048 : push 0x49000f1e ; movsxd rcx, dword ptr [rbx + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000b86c8 : push 0x49000f27 ; movsxd rcx, dword ptr [rbx + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000047b0e : push 0x58b4808 ; ret 0x19
0x000000000013ca5e : push 0x5b000001 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002a529 : push 0x5c415d5b ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000145ee8 : push 0x5c415d5b ; pop r13 ; ret
0x000000000010b8bf : push 0x7e6f0ff3 ; jo 0x10b8df ; adc dword ptr [rdi + 0x78], edi ; ret
0x00000000001139b7 : push 0xd ; add byte ptr [rbp - 0x47d58a40], al ; jno 0x1139cd ; add byte ptr [rax], al ; syscall
0x0000000000025286 : push 0xe ; jmp 0x2500c
0x0000000000025276 : push 0xf ; jmp 0x2500c
0x00000000000431d4 : push 0xf00161e ; push rsp ; ret
0x00000000000352e3 : push 0xfff6348 ; mov bh, 4 ; js 0x3527a ; loopne 0x352fa ; ret
0x00000000000352e2 : push 0xfff6348 ; mov bh, 4 ; js 0x3527b ; loopne 0x352fb ; ret
0x00000000000e73b0 : push 0xffffd7 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c04
0x00000000000bbccb : push 1 ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000182c76 : push 1 ; mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000000bbcc7 : push 1 ; xor edx, edx ; push 1 ; lea r9, [rsp + 0x20] ; call rbx
0x000000000014e91e : push 2 ; add rdi, 0x68 ; jmp rcx
0x00000000000b5fc2 : push 5 ; add byte ptr [rax], al ; ret
0x0000000000042ee6 : push qword ptr [rax + 0x7cffff3c] ; jne 0x42e79 ; call qword ptr [rax - 0x3d]
0x00000000000b4c0f : push qword ptr [rax] ; leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000018ff18 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x0000000000119d5c : push qword ptr [rbp + 0x45] ; mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call r12
0x0000000000119370 : push qword ptr [rbp + 0x47] ; mov rdi, qword ptr [r14] ; call r12
0x0000000000194ab2 : push qword ptr [rbp + 0x4c] ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000119d2c : push qword ptr [rbp + 0x4d] ; mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call r12
0x00000000001193a4 : push qword ptr [rbp + 0x6c] ; mov rdi, qword ptr [r14] ; call r12
0x00000000001161e9 : push qword ptr [rbp + 0xc] ; mov eax, 1 ; ret
0x00000000001827a9 : push qword ptr [rbp + 4] ; vzeroupper ; ret
0x000000000010b8e9 : push qword ptr [rbp + 5] ; mov word ptr [rdi], si ; xor eax, eax ; ret
0x0000000000086a00 : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x00000000000887cf : push qword ptr [rbp + rcx - 0x18] ; retf
0x0000000000196219 : push qword ptr [rbp + rdx + 0x48] ; mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x196238 ; call rax
0x00000000000571ae : push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x0000000000136d32 : push qword ptr [rbp - 0x15] ; pop rbx ; ret
0x000000000014007b : push qword ptr [rbp - 0x16] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012a11f : push qword ptr [rbp - 0x1a] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000127a6f : push qword ptr [rbp - 0x32] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000091bd0 : push qword ptr [rbp - 0x44] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000004829d : push qword ptr [rbp - 0x4c] ; xor eax, eax ; ret
0x000000000011a36d : push qword ptr [rbx + 0x20] ; mov rsi, rbx ; mov rdi, r13 ; call r14
0x00000000000441bc : push qword ptr [rbx + 1] ; ret
0x0000000000055de6 : push qword ptr [rbx + 3] ; xor eax, eax ; ret
0x0000000000087229 : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000087285 : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000082552 : push qword ptr [rbx + rcx + 0x48] ; mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x0000000000088446 : push qword ptr [rbx + rcx - 0x18] ; retf 0xf9ce
0x00000000000f0f02 : push qword ptr [rbx - 0xa] ; ret
0x0000000000082bd5 : push qword ptr [rcx + rdi + 0x48] ; mov eax, edx ; pop rbx ; ret
0x00000000000d1661 : push qword ptr [rcx] ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; retf 0xfffc
0x0000000000104732 : push qword ptr [rcx] ; fild dword ptr [rbx - 0x6bf0fb08] ; ret
0x00000000000ec98a : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000110e44 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000047611 : push qword ptr [rcx] ; rol bl, 0x48 ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000006dfe0 : push qword ptr [rcx] ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x00000000000c6145 : push qword ptr [rcx] ; rol byte ptr [rbp - 0x3f6af037], 0x85 ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000159770 : push qword ptr [rcx] ; ror byte ptr [rax - 0x77], cl ; ret
0x0000000000101966 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or bl, al ; nop ; ret
0x00000000001605fd : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or bl, al ; nop dword ptr [rax] ; ret
0x000000000012a17a : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000008d89f : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000008a9a8 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000028b2e : push qword ptr [rcx] ; ror byte ptr [rcx - 0x7d], cl ; cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf4e9
0x00000000000712ba : push qword ptr [rcx] ; shr cl, 0xdc ; retf
0x000000000005af23 : push qword ptr [rcx] ; test byte ptr [rcx - 0x47], 0x40 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000e191b : push qword ptr [rdi + 0x22] ; hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x0000000000063a89 : push qword ptr [rdi + 0x2c] ; cmp eax, -1 ; je 0x63aa0 ; ret
0x00000000000e15c9 : push qword ptr [rdi + 0x34] ; ret
0x000000000010d679 : push qword ptr [rdi + 0x3c] ; ret
0x00000000000e1649 : push qword ptr [rdi + 0x44] ; ret
0x000000000004422e : push qword ptr [rdi + 0x47] ; ret
0x0000000000112c13 : push qword ptr [rdi + 0x4a] ; ret
0x00000000000e12f6 : push qword ptr [rdi + 0x4f] ; ret
0x00000000000e138c : push qword ptr [rdi + 0x51] ; ret
0x0000000000048af9 : push qword ptr [rdi + 0x54] ; ret
0x000000000010cf86 : push qword ptr [rdi + 0x57] ; ret
0x000000000010b31c : push qword ptr [rdi + 0x59] ; ret
0x00000000000e147f : push qword ptr [rdi + 0x5e] ; ret
0x000000000011400c : push qword ptr [rdi + 0x61] ; ret
0x000000000011ec92 : push qword ptr [rdi + 0x6b] ; ret
0x000000000011e00c : push qword ptr [rdi + 0x71] ; ret
0x000000000011dc32 : push qword ptr [rdi + 0x73] ; ret
0x000000000011ad83 : push qword ptr [rdi + 0xa] ; ret
0x0000000000044182 : push qword ptr [rdi + 0xb] ; ret
0x0000000000063a1c : push qword ptr [rdi + 1] ; ret
0x000000000010c5ca : push qword ptr [rdi + 3] ; ret
0x00000000000441f1 : push qword ptr [rdi + 4] ; ret
0x000000000010c618 : push qword ptr [rdi + 5] ; ret
0x0000000000063a4f : push qword ptr [rdi + 6] ; ret
0x000000000010c916 : push qword ptr [rdi + 7] ; ret
0x0000000000112df5 : push qword ptr [rdi + 8] ; ret
0x00000000001121b4 : push qword ptr [rdi + 9] ; ret
0x00000000000f7ec4 : push qword ptr [rdi + rax + 1] ; retf 0x4801
0x00000000000dcde4 : push qword ptr [rdi + rax*2 - 0x77] ; ret 0xe283
0x000000000010c4d6 : push qword ptr [rdi - 0x32] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000047c93 : push qword ptr [rdx + rdi + 0x31] ; rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x00000000001460c4 : push qword ptr [rip + 0x72156] ; lea r9, [rsp + 0x2c] ; call qword ptr [rax]
0x0000000000145f84 : push qword ptr [rip + 0x72296] ; lea r9, [rsp + 0x2c] ; call qword ptr [rax]
0x0000000000111aba : push qword ptr [rsi + 0x23] ; cmp eax, -0x5f ; je 0x111adb ; neg eax ; pop rbx ; ret
0x0000000000111d1a : push qword ptr [rsi + 0x23] ; cmp eax, -0x5f ; je 0x111d3b ; neg eax ; pop rbx ; ret
0x00000000001172b7 : push qword ptr [rsi + rax - 0x77] ; cmp eax, 0xcd088 ; ret
0x0000000000120909 : push qword ptr [rsi + rax - 0x7d] ; rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x0000000000091005 : push qword ptr [rsp + rax - 0x58] ; add dword ptr [rsp + rbp - 0x77], esi ; ret 0x8948
0x0000000000106d11 : push qword ptr [rsp + rbx*8 - 0x77] ; ret 0xc085
0x00000000001516e5 : push r13 ; lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x00000000001516e3 : push r14 ; push r13 ; lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x000000000009c558 : push r8 ; add dword ptr [rbp - 0x2d], esi ; mov rdi, rsi ; call rax
0x000000000009c20b : push r8 ; add dword ptr [rdi], ecx ; adc dword ptr [rbx + 0x38], eax ; mov qword ptr [rbx], rsi ; call rcx
0x00000000001484f3 : push r8 ; jbe 0x148540 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000448cd : push r8 ; movups xmmword ptr [rdi + 0x60], xmm0 ; movups xmmword ptr [rdi + 0x70], xmm0 ; ret
0x00000000001473a5 : push rax ; adc al, 0x8b ; push rbx ; xor byte ptr [rdi], cl ; retf 0x5089
0x00000000001471e5 : push rax ; adc al, 0xf ; retf 0xd189
0x000000000014739c : push rax ; adc byte ptr [rax - 0x75], cl ; push rbx ; sub byte ptr [rdi], cl ; retf 0x5089
0x000000000008635a : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000000874fb : push rax ; adc byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000011884a : push rax ; adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x0000000000140be0 : push rax ; adc byte ptr [rbp + 9], cl ; retf 0x850f
0x0000000000140b87 : push rax ; adc byte ptr [rbp + 9], cl ; retf 0xa375
0x00000000000926c1 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000001471da : push rax ; adc byte ptr [rdi], cl ; retf 0xd189
0x0000000000095ff5 : push rax ; adc dh, dh ; ret 0xf0f
0x00000000000af80d : push rax ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000194ca1 : push rax ; add al, byte ptr [rax] ; movss dword ptr [rsp - 0x28], xmm0 ; ret
0x00000000000871d0 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; movups xmmword ptr [rax + 0x40], xmm0 ; pop rbx ; ret
0x000000000014d9c8 : push rax ; add cl, byte ptr [rax + 0xf] ; ret 0xea89
0x0000000000093290 : push rax ; add dword ptr [rax - 0x77], ecx ; adc eax, 0x151037 ; ret
0x000000000008ac0c : push rax ; add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0x10 ; pop rbx ; mov eax, edx ; ret
0x000000000008d34c : push rax ; add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x0000000000074cef : push rax ; add dword ptr [rax - 0x77], ecx ; push rsi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000012d3d8 : push rax ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000010117c : push rax ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rbp + rcx*4 + 5], 1 ; ret
0x000000000009c559 : push rax ; add dword ptr [rbp - 0x2d], esi ; mov rdi, rsi ; call rax
0x000000000009c20c : push rax ; add dword ptr [rdi], ecx ; adc dword ptr [rbx + 0x38], eax ; mov qword ptr [rbx], rsi ; call rcx
0x0000000000163dda : push rax ; add eax, 0x14634900 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000087539 : push rax ; and byte ptr [rax - 0x75], cl ; or byte ptr [rax + 0x39], cl ; retf 0x776
0x000000000015b2c1 : push rax ; and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x0000000000147922 : push rax ; and byte ptr [rbx - 0x48], bl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000c3a0c : push rax ; call qword ptr [rcx]
0x0000000000027ac0 : push rax ; call rbx
0x000000000011f9bc : push rax ; clc ; add byte ptr [rax], al ; mov r10, rcx ; mov eax, 0xdc ; syscall
0x0000000000148048 : push rax ; cld ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x0000000000155bcd : push rax ; cld ; mov qword ptr [rdi + 0x18], rax ; mov eax, 1 ; ret
0x000000000014758d : push rax ; cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x000000000009c132 : push rax ; dec byte ptr [rax + 0x63] ; dec byte ptr [rdi] ; adc dword ptr [rbx + 0x38], eax ; mov qword ptr [rbx], rdi ; call rcx
0x0000000000047234 : push rax ; dec dword ptr [rbx + rcx*4 + 0x2d] ; ret
0x000000000005f8b9 : push rax ; fsub qword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x000000000011004f : push rax ; int1 ; dec dword ptr [rax - 0x77] ; ret 0x3b48
0x00000000001484f4 : push rax ; jbe 0x14853f ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014f23f : push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000104269 : push rax ; mov rdi, qword ptr [rbp - 0x190] ; mov rcx, qword ptr [r14] ; call r12
0x000000000002da20 : push rax ; mov rdi, qword ptr [rsp + 0x48] ; call r14
0x000000000002d46a : push rax ; mov rdi, qword ptr [rsp + 0x48] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x00000000000ced12 : push rax ; mov rsi, r13 ; mov rdi, rbp ; call rbx
0x000000000012a5b6 : push rax ; mov rsi, rdx ; call rax
0x000000000008639c : push rax ; movups xmmword ptr [rax], xmm0 ; ret
0x00000000000448ce : push rax ; movups xmmword ptr [rdi + 0x60], xmm0 ; movups xmmword ptr [rdi + 0x70], xmm0 ; ret
0x000000000012e5e4 : push rax ; or al, 0x45 ; test edx, edx ; jne 0x12e58e ; mov rax, rdi ; ret
0x00000000001471cf : push rax ; or al, 0xf ; retf 0xd189
0x00000000000600c3 : push rax ; or al, 0xf6 ; ret 0xf01
0x00000000000f2cb6 : push rax ; or al, byte ptr [rcx - 0x77] ; retf 0xeac0
0x000000000015dc50 : push rax ; or bl, ch ; retf
0x00000000000fd9db : push rax ; or byte ptr [rcx - 0x3ff001e], al ; dec dword ptr [rcx] ; retf 0x5089
0x00000000001471bf : push rax ; or byte ptr [rdi], cl ; retf 0xd189
0x0000000000037ef8 : push rax ; or byte ptr [rdi], cl ; retf 0xfa83
0x0000000000097862 : push rax ; or dh, dh ; ret 0xf02
0x000000000017bccc : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d4e9 : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000055ff7 : push rax ; pop rbx ; ret
0x0000000000089c60 : push rax ; push 0 ; mov rdi, r15 ; lea r9, [rbp - 0x40] ; call r12
0x0000000000042eef : push rax ; ret
0x000000000012ca14 : push rax ; ret 0xb
0x0000000000062011 : push rax ; ret 0xf41
0x0000000000129b2c : push rax ; ret 0xffff
0x000000000006fccc : push rax ; retf
0x000000000003d46c : push rax ; retf 0xffff
0x00000000000613c7 : push rax ; sal dh, 1 ; ret 0xf07
0x000000000014e9f4 : push rax ; sbb al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm2 ; ret
0x0000000000114941 : push rax ; sbb byte ptr [rax - 0x77], cl ; and al, 0x20 ; mov eax, 0x65 ; syscall
0x00000000000926b6 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000013eb2e : push rax ; sbb byte ptr [rcx - 0x73], cl ; jne 0x13eb40 ; mov rdi, r15 ; call 0x13b60b
0x00000000001471f0 : push rax ; sbb byte ptr [rdi], cl ; retf 0x5389
0x00000000001272a9 : push rax ; sbb dh, dh ; ret 0x7508
0x000000000012b745 : push rax ; shr ax, 0xe ; and eax, 1 ; ret
0x000000000009c182 : push rax ; stc ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009c454 : push rax ; std ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b5b57 : push rax ; str word ptr [rbx + 0x63] ; or al, 0x83 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000b5a24 : push rax ; str word ptr [rcx + 0x63] ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000110625 : push rax ; xor byte ptr [rax + 1], cl ; retf 0x8948
0x00000000001105d7 : push rax ; xor byte ptr [rax - 0x77], cl ; xor byte ptr [rax + 1], cl ; retf 0x8948
0x000000000014713a : push rax ; xor byte ptr [rax - 0x7b], cl ; sal byte ptr [rdi + rdi + 0x48], 0x8b ; adc ecx, dword ptr [rdi] ; retf 0x1089
0x000000000008995d : push rax ; xor r8d, r8d ; mov rdi, r12 ; lea r9, [rsp + 0x28] ; call rbx
0x00000000001122a5 : push rax ; xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x000000000003788f : push rbp ; adc al, 0xf ; retf 0x5589
0x0000000000109496 : push rbp ; adc byte ptr [rax - 0x77], cl ; or byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000194d1b : push rbp ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000001485e8 : push rbp ; adc byte ptr [rcx], bh ; ret
0x0000000000028414 : push rbp ; adc eax, dword ptr [rax] ; mov rdi, r14 ; mov rax, qword ptr [rbp - 0x68] ; call rax
0x00000000000ec904 : push rbp ; add al, 1 ; ret 0x341
0x0000000000168de7 : push rbp ; add al, byte ptr [rip + 0x14634900] ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000047bd7 : push rbp ; add byte ptr [rax - 0x75], cl ; jnp 0x47beb ; call rax
0x00000000000ec64d : push rbp ; add byte ptr [rcx], bh ; ret
0x000000000008d225 : push rbp ; add cl, byte ptr [rax + 0x39] ; ret 0x870f
0x0000000000101b00 : push rbp ; add rsp, 0x38 ; ret
0x00000000000815d1 : push rbp ; add rsp, 0xd0 ; pop rbx ; ret
0x000000000008d5ce : push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000008d74a : push rbp ; cmp byte ptr [rax - 0x77], cl ; ret 0x1b8
0x00000000001516e6 : push rbp ; lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x0000000000028f64 : push rbp ; mov al, 0x4c ; mov edi, esi ; mov rsi, r13 ; call 0x2526a
0x000000000011e884 : push rbp ; or al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000180758 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000012b23f : push rbp ; or byte ptr [rax - 0x73], 0x51 ; jo 0x12b25f ; adc dword ptr [rbp - 0x78], edi ; call rax
0x000000000012b433 : push rbp ; or byte ptr [rax - 0x73], 0x51 ; jo 0x12b453 ; adc dword ptr [rbp - 0x78], edi ; call rax
0x00000000000795fd : push rbp ; or byte ptr [rax - 0x73], cl ; or byte ptr [rcx - 0x77], cl ; or r9b, r13b ; ret 0xfff4
0x0000000000100cb7 : push rbp ; or byte ptr [rax - 0x75], 4 ; ret 0x8948
0x000000000012aca6 : push rbp ; or byte ptr [rax - 0x77], 0xda ; movups xmmword ptr [rbp - 0x78], xmm4 ; call rax
0x0000000000037a46 : push rbp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7af0cc07], al ; ret 5
0x0000000000027f6d : push rbp ; or byte ptr [rbx - 0x3dc667bb], 0xf ; ret 0x4589
0x000000000012b59a : push rbp ; or byte ptr [rcx + rcx*4 - 0x16], 0xf ; adc dword ptr [rbp - 0x78], edi ; call rax
0x000000000012b16e : push rbp ; or byte ptr [rcx + rcx*4 - 0x16], 0xf ; adc dword ptr [rbp - 0x78], esi ; call rax
0x000000000012ac3b : push rbp ; or byte ptr [rcx + rcx*4 - 0xe], 0xf ; adc dword ptr [rbp - 0x78], ebp ; call rax
0x000000000012aa0d : push rbp ; or byte ptr [rcx + rcx*4 - 0xe], 0xf ; adc dword ptr [rbp - 0x78], ecx ; call rax
0x0000000000037860 : push rbp ; or byte ptr [rcx - 0x75], al ; or al, 0xf ; retf 0x5589
0x0000000000114f66 : push rbp ; or eax, 0xd2854800 ; jne 0x114f49 ; xor eax, eax ; pop rbx ; ret
0x000000000015e5ba : push rbp ; out dx, al ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x0000000000027d37 : push rbp ; pop rsp ; adc eax, dword ptr [rax] ; mov rdi, rbx ; call r12
0x000000000012c923 : push rbp ; ret
0x00000000000a6872 : push rbp ; ret 0x2ba
0x00000000000c933f : push rbp ; ret 0xe
0x000000000014d193 : push rbp ; retf 9
0x00000000000378ae : push rbp ; sbb byte ptr [rdi], cl ; retf 0xd289
0x00000000000eb03a : push rbp ; sbb byte ptr [rdx + rdx*2 - 0x73], dh ; add qword ptr [rax - 0x7d], rcx ; ret
0x0000000000088422 : push rbp ; sbb cl, ch ; retf 0xfffc
0x00000000000e20ad : push rbp ; test al, 0x85 ; ror byte ptr [rdi], 0x84 ; add dword ptr [rax], 0x83480000 ; ret 0x480f
0x0000000000032725 : push rbp ; test byte ptr [rcx + 1], cl ; ret
0x00000000000f0602 : push rbp ; xor eax, eax ; pop rbx ; ret
0x000000000012c882 : push rbx ; adc al, 0x74 ; adc byte ptr [rbx + 0x31], bl ; rol byte ptr [rcx + 0x5c], 0x5d ; ret
0x0000000000087f94 : push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x00000000001188e2 : push rbx ; adc byte ptr [rax - 0x73], cl ; adc byte ptr [r8 - 9], cl ; ret 0xfffe
0x0000000000147158 : push rbx ; adc byte ptr [rdi], cl ; retf 0x5089
0x00000000000ceab4 : push rbx ; adc dword ptr [rax], eax ; mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x00000000000f4df1 : push rbx ; add al, 0x39 ; retf 0x197f
0x000000000010b7b9 : push rbx ; add al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x000000000010b74b : push rbx ; add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010b623 : push rbx ; add al, 0x5b ; mov eax, ecx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010b6a8 : push rbx ; add al, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000000378a8 : push rbx ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], al ; push rbp ; sbb byte ptr [rdi], cl ; retf 0xd289
0x000000000011b681 : push rbx ; add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; retf 0xf48
0x0000000000116a0c : push rbx ; add dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x0000000000163ad1 : push rbx ; add eax, 0x14634900 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000c8182 : push rbx ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000097ade : push rbx ; and byte ptr [rax + 0x39], cl ; ret 0x4273
0x000000000008b7ba : push rbx ; and byte ptr [rcx], ch ; retf 0x3fe9
0x000000000008b982 : push rbx ; and byte ptr [rcx], ch ; retf 0x40e9
0x000000000008bbca : push rbx ; and byte ptr [rcx], ch ; retf 0x43e9
0x0000000000147397 : push rbx ; and byte ptr [rdi], cl ; retf 0x5089
0x000000000008dc58 : push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000008db3e : push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000fcc31 : push rbx ; cmp cl, ch ; retf
0x00000000000eff9f : push rbx ; dec dword ptr [rcx - 0x75] ; adc byte ptr [r8 + 0x39], r9b ; retf
0x00000000000dffe7 : push rbx ; hlt ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000060939 : push rbx ; idiv edi ; dec dword ptr [rax - 0x75] ; test dword ptr [rax - 0x7d000000], esp ; ret
0x000000000018de45 : push rbx ; jb 0x18de55 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000086a20 : push rbx ; je 0x86a73 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000092729 : push rbx ; jrcxz 0x92734 ; dec dword ptr [rax + 0x63] ; adc r11b, r13b ; ret
0x00000000000cdf2c : push rbx ; lea rax, [rdi - 0x10] ; ret
0x000000000011d92b : push rbx ; mov rbx, rdi ; mov rdi, rcx ; sub rsp, 8 ; call rsi
0x00000000001456c4 : push rbx ; mov rbx, rsi ; sub rsp, 8 ; call 0x15194a
0x00000000000b7e42 : push rbx ; movq qword ptr [rdi + 0x30], mm7 ; lea rax, [rdi + 0x40] ; ret
0x00000000000b6622 : push rbx ; movq qword ptr [rdi + 0x30], mm7 ; ret
0x00000000000b9882 : push rbx ; movq qword ptr [rdi + 0x30], mm7 ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000011eaf4 : push rbx ; or al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000008dc54 : push rbx ; or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000012fc75 : push rbx ; or byte ptr [rax + 0x33], cl ; add ecx, dword ptr [rax + 9] ; ret 0x850f
0x00000000000304a3 : push rbx ; or byte ptr [rax + 0x39], cl ; ret
0x0000000000118950 : push rbx ; or byte ptr [rax - 0x73], cl ; or byte ptr [r8 - 9], cl ; ret 0xfffe
0x00000000001471b8 : push rbx ; or byte ptr [rbp - 0x744d8a2e], al ; push rax ; or byte ptr [rdi], cl ; retf 0xd189
0x00000000000ef1c7 : push rbx ; or byte ptr [rcx + 0x63493846], cl ; ret 0x4c6
0x0000000000090f0e : push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008ac10 : push rbx ; or byte ptr [rdi], cl ; mov dh, 0x10 ; pop rbx ; mov eax, edx ; ret
0x000000000010ea74 : push rbx ; or eax, 0x64d8f700 ; mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000060069 : push rbx ; or eax, 0x83480000 ; ret
0x00000000000e34e9 : push rbx ; pop rax ; jne 0xe34f5 ; ret
0x00000000000e34e8 : push rbx ; pop rax ; jne 0xe34f6 ; ret
0x00000000000ed62c : push rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000163c29 : push rbx ; push rdx ; add eax, 0x14634900 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000014738a : push rbx ; sbb byte ptr [rax - 0x73], cl ; and byte ptr [rdi], cl ; retf 0x5089
0x000000000008b61f : push rbx ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000e36f1 : push rbx ; setne al ; ret
0x00000000000f0751 : push rbx ; sub byte ptr [rax - 0x75], cl ; cmp eax, dword ptr [rcx] ; ret 0xc083
0x00000000001473a0 : push rbx ; sub byte ptr [rdi], cl ; retf 0x5089
0x000000000008e144 : push rbx ; sub rdx, rsi ; mov qword ptr [rsp], r8 ; mov rdi, rbx ; call rax
0x00000000001012ea : push rbx ; xor byte ptr [rcx], bh ; retf 0x840f
0x00000000001473a8 : push rbx ; xor byte ptr [rdi], cl ; retf 0x5089
0x000000000010ed71 : push rbx ; xor dh, dh ; ret 0x7501
0x00000000000fdab5 : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x974
0x0000000000140bd8 : push rcx ; adc byte ptr [rbp + 0x33], cl ; or byte ptr [rbp + 0x33], cl ; push rax ; adc byte ptr [rbp + 9], cl ; retf 0x850f
0x0000000000140b7f : push rcx ; adc byte ptr [rbp + 0x33], cl ; or byte ptr [rbp + 0x33], cl ; push rax ; adc byte ptr [rbp + 9], cl ; retf 0xa375
0x0000000000120851 : push rcx ; adc byte ptr [rdx + 8], dh ; seta al ; movzx eax, al ; neg eax ; ret
0x000000000006deeb : push rcx ; add al, 0x83 ; clc ; pop rbp ; cmove r9, rdx ; jmp 0x6df14
0x000000000014d756 : push rcx ; add cl, byte ptr [rax + 0xf] ; retf 0xc689
0x0000000000184350 : push rcx ; add dword ptr [rax], eax ; mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000000ba975 : push rcx ; add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xda89
0x0000000000163ce9 : push rcx ; add eax, 0x14634900 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000001933f8 : push rcx ; add edi, esi ; ret 0x7ffe
0x00000000000a6d5d : push rcx ; add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x000000000005bc93 : push rcx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000147e0d : push rcx ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000dff32 : push rcx ; hlt ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000018d63d : push rcx ; jl 0x18d68e ; adc dword ptr [rcx - 1], edi ; ret
0x000000000018d7a4 : push rcx ; jl 0x18d7f5 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000012b243 : push rcx ; jo 0x12b25b ; adc dword ptr [rbp - 0x78], edi ; call rax
0x000000000012b437 : push rcx ; jo 0x12b44f ; adc dword ptr [rbp - 0x78], edi ; call rax
0x000000000009d3af : push rcx ; jo 0x9d3ac ; ret 0
0x0000000000046b1f : push rcx ; lea rsp, [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000011912e : push rcx ; mov rdi, qword ptr [rbp] ; call r12
0x00000000000e7059 : push rcx ; or al, 0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000001762d6 : push rcx ; or byte ptr [rax - 0x73], cl ; adc byte ptr [r8 - 0x77], cl ; retf 0x8348
0x00000000001494a1 : push rcx ; or byte ptr [rcx + 0x31], cl ; ror byte ptr [rbp - 0x75], 1 ; sbb dword ptr [rbp + 0x31], ecx ; ret 0x314d
0x0000000000097284 : push rcx ; or dh, dh ; ret 0x7404
0x00000000000e39ff : push rcx ; or dword ptr [rax + rax], 0x48 ; movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x000000000013ff34 : push rcx ; out dx, al ; dec dword ptr [rax + 0x39] ; ret
0x000000000012fede : push rcx ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000018408b : push rcx ; push rsp ; add dword ptr [rax], eax ; mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000000e138e : push rcx ; ret
0x00000000000bdd60 : push rcx ; sbb al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x0000000000149405 : push rcx ; sbb byte ptr [rbp - 0x75], cl ; pop rcx ; adc byte ptr [rcx + 0x31], cl ; retf 0x3149
0x0000000000093a15 : push rcx ; sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x00000000000b59fb : push rcx ; str word ptr [rcx + 0x63] ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000b96b2 : push rdi ; adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000b7a82 : push rdi ; adc al, 0x48 ; lea eax, [rdi + 0x15] ; ret
0x00000000000b9833 : push rdi ; adc byte ptr [rax - 0x12cfdfb1], cl ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000b9731 : push rdi ; adc byte ptr [rax - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x19], ch ; ret
0x0000000000060667 : push rdi ; adc byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf 0x894c
0x00000000000b9810 : push rdi ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000b9791 : push rdi ; adc byte ptr [rcx - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000b9771 : push rdi ; adc byte ptr [rcx - 0x12cfe8b1], cl ; mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000011872a : push rdi ; adc byte ptr [rcx - 0x77], cl ; ret
0x00000000001019e9 : push rdi ; adc byte ptr [rdx + 8], dh ; setne al ; movzx eax, al ; neg eax ; ret
0x000000000018af6f : push rdi ; adc byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000b9752 : push rdi ; adc byte ptr [rsi - 0x77], ah ; sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000b94e8 : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000b94fa : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000b6a8a : push rdi ; add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x00000000000b78ca : push rdi ; add al, 0x48 ; lea eax, [rdi + 6] ; ret
0x000000000016b419 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000034dc9 : push rdi ; add al, 0x73 ; and al, 0x83 ; ret 0x8b05
0x00000000000a7080 : push rdi ; add al, 0xf ; mov dh, 0x54 ; and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x00000000000a7232 : push rdi ; add al, 0xf ; mov dh, 0x54 ; and al, 0xe ; mov byte ptr [rdi + 6], dl ; ret
0x00000000000b612a : push rdi ; add al, bl ; nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000b94ba : push rdi ; add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x000000000010f635 : push rdi ; add dword ptr [rax + 0x39], ecx ; ret 0xd72
0x0000000000057c17 : push rdi ; add dword ptr [rcx - 0x77], ecx ; push rsp ; ret
0x00000000000b6b3c : push rdi ; add eax, 0xc478d48 ; ret
0x00000000000b798c : push rdi ; add eax, 0xd478d48 ; ret
0x00000000000b9518 : push rdi ; add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x0000000000164125 : push rdi ; add rax, 0x14634900 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000182128 : push rdi ; add rax, 0x20 ; add rax, rdi ; vzeroupper ; ret
0x000000000018af84 : push rdi ; and byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000166ee5 : push rdi ; and dword ptr [rip + 0x14634900], eax ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000a0d95 : push rdi ; clc ; dec dword ptr [rbp - 0x7b] ; in al, 0x75 ; retf 0x9066
0x0000000000165218 : push rdi ; clc ; ret
0x0000000000165390 : push rdi ; cld ; ret
0x00000000000bb214 : push rdi ; cld ; test eax, eax ; jne 0xbb230 ; mov rax, rdi ; ret
0x0000000000165eb7 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016acf9 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000082d96 : push rdi ; cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x00000000000f6ae4 : push rdi ; cmp dh, dh ; ret 0xf08
0x00000000000e18c8 : push rdi ; cmp eax, 0xfffff001 ; jae 0xe18d9 ; ret
0x000000000018beee : push rdi ; fidiv dword ptr [rdx - 0x10f09926] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000009b59e : push rdi ; fmul dword ptr [rax + 0x39] ; ret 0x5b74
0x000000000018bcee : push rdi ; fnsave dword ptr [rdx - 0x10f09923] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ac79 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016aaca : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000f6b2a : push rdi ; ljmp [rcx] ; ret 0x6348
0x000000000018bfb8 : push rdi ; mov eax, 0xf66b8b2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018be38 : push rdi ; mov ebx, 0xf66bbb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018bf38 : push rdi ; mov ecx, 0xf66b9b2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018beb8 : push rdi ; mov edx, 0xf66bab2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000090aa0 : push rdi ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000016ab5a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000e6a75 : push rdi ; or al, 0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000011e677 : push rdi ; or al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000013a49b : push rdi ; or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x000000000007a9f0 : push rdi ; or al, 0x83 ; ret
0x000000000007a9ae : push rdi ; or al, 0x84 ; ror byte ptr [rdi], cl ; mov byte ptr [rsi - 0x9ffffe3], al ; ret 0xf40
0x000000000007a984 : push rdi ; or al, 0xf6 ; ret 0xf08
0x0000000000135f76 : push rdi ; or byte ptr [rax - 0x75], cl ; adc byte ptr [r8 + 0x39], r9b ; retf 0x830f
0x0000000000097263 : push rdi ; or byte ptr [rax - 0x77], cl ; mov esp, 0x8024 ; add dh, dh ; ret 0x7504
0x00000000000b955c : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000b959a : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000b953a : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x000000000005854a : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000158c59 : push rdi ; or byte ptr [rcx + 1], cl ; idiv byte ptr [rcx] ; retf 0x850f
0x000000000005688a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000056891 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000008d350 : push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x0000000000094ed6 : push rdi ; or dh, dh ; ret 0xf02
0x0000000000097249 : push rdi ; or dh, dh ; ret 0xf04
0x00000000000b6d20 : push rdi ; or eax, 0x1c478d48 ; ret
0x00000000000b7b80 : push rdi ; or eax, 0x1d478d48 ; ret
0x000000000004c745 : push rdi ; ret
0x000000000018c32e : push rdi ; ret 0xff3
0x00000000000df255 : push rdi ; retf
0x000000000018bed3 : push rdi ; retf 0xcab2
0x00000000000d5477 : push rdi ; rol byte ptr [rax - 0x78f0f606], 1 ; ret
0x0000000000090ad1 : push rdi ; sbb byte ptr [rax - 0x77], cl ; movups xmmword ptr [rdi + 8], xmm0 ; ret
0x00000000001660b7 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001658da : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000165cb7 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000b52e6 : push rdi ; str word ptr [rcx + 0x63] ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000155eb1 : push rdi ; sub byte ptr [rax + 1], bh ; ret
0x0000000000155bc2 : push rdi ; sub byte ptr [rbx - 0x3f7cb7ea], cl ; add al, 0xf ; retf 0x5089
0x0000000000155bf2 : push rdi ; sub byte ptr [rbx - 0x3f7cb7f0], cl ; add al, 0xf ; retf 0x1689
0x00000000000bad95 : push rdi ; sub eax, 0xf480001 ; ret 0x66c3
0x00000000000e5bb4 : push rdi ; test dword ptr [rbx + rdi*8 - 1], ecx ; call qword ptr [rax]
0x00000000000b97f0 : push rdi ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000018af99 : push rdi ; xor byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000affeb : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000000aa798 : push rdi ; xor eax, eax ; ret
0x000000000002875f : push rdx ; adc eax, dword ptr [rax] ; mov rdi, rbx ; call r12
0x000000000005417e : push rdx ; add al, byte ptr [rcx - 0x77] ; ret
0x00000000000f29f2 : push rdx ; add dword ptr [rbp + 0x39], eax ; retf 0x820f
0x000000000011feea : push rdx ; add dword ptr [rcx - 0x77], ecx ; ror dword ptr [rax - 0x7d], cl ; ret 0x4c02
0x0000000000163bc0 : push rdx ; add eax, 0x14634900 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000001946c5 : push rdx ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r14 ; ret
0x00000000000a0035 : push rdx ; clc ; dec dword ptr [rcx - 0x39] ; add al, 0x24 ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0xa0019
0x0000000000102472 : push rdx ; fmul dword ptr [rax - 0x7d] ; ret 0x4c28
0x00000000000dfd92 : push rdx ; hlt ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000dc7b2 : push rdx ; mov esi, esp ; dec dword ptr [rax - 0x77] ; ret
0x0000000000035251 : push rdx ; mov rax, qword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000011ebc4 : push rdx ; or al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000970dd : push rdx ; or byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000009c5d6 : push rdx ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x0000000000035221 : push rdx ; pop rax ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000012c91a : push rdx ; ret
0x000000000011140a : push rdx ; ret 0xffff
0x000000000003d36a : push rdx ; retf
0x000000000014494c : push rdx ; retf 6
0x000000000010b9c5 : push rdx ; sbb byte ptr [rax - 0x73], cl ; pushfq ; ret 0x8207
0x0000000000093dfe : push rdx ; sbb byte ptr [rax - 9], cl ; fimul dword ptr [rax + 0x21] ; ret 0x8948
0x00000000000b6258 : push rsi ; adc al, 0xf3 ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000b56e7 : push rsi ; adc bl, dh ; movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000018af74 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000004fde2 : push rsi ; adc eax, 0xc8b4800 ; ret 0x8b49
0x0000000000028362 : push rsi ; adc eax, dword ptr [rax] ; mov rdi, r12 ; mov rcx, qword ptr [rbp - 0x70] ; call rcx
0x000000000018dc89 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x18dce0 ; adc dword ptr [rsi + 3], edx ; ret
0x000000000016b412 : push rsi ; add al, 0x48 ; mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000110e22 : push rsi ; add al, 0x75 ; adc al, 0x8b ; jge 0x110e60 ; call 0x10d89c
0x00000000000b94e3 : push rsi ; add al, 0x89 ; js 0xffffffffed3b994f ; mov byte ptr [rdi + 5], ch ; ret
0x000000000016b6b1 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000114feb : push rsi ; add dword ptr [rbp - 0x2f], esi ; ret
0x000000000016b721 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000016b3a2 : push rsi ; add eax, 0x480e8b48 ; mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000b54f5 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000133b5f : push rsi ; add eax, 0x5bf08948 ; ret
0x0000000000163938 : push rsi ; add eax, 0xc634f00 ; mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x000000000016b641 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000b6aa3 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; lea rax, [rdi + 6] ; ret
0x00000000000b78e3 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; lea rax, [rdi + 7] ; ret
0x00000000000b5493 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x00000000000b9513 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000e2acc : push rsi ; add rsp, 0x38 ; ret
0x0000000000081770 : push rsi ; add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000018af89 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000186ee3 : push rsi ; and ch, al ; std ; xlatb ; ror byte ptr [rcx - 0x7d], cl ; ret 0x4d20
0x00000000001460c6 : push rsi ; and dword ptr [rdi], eax ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x2c ; call qword ptr [rax]
0x0000000000165326 : push rsi ; clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000165c96 : push rsi ; clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000165e96 : push rsi ; clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000166096 : push rsi ; clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000165342 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000165ab1 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000cdb0d : push rsi ; cld ; mov dword ptr [rsi + rcx], edx ; test edx, edx ; jne 0xcdb10 ; ret
0x00000000000cdb0d : push rsi ; cld ; mov dword ptr [rsi + rcx], edx ; test edx, edx ; jne 0xcdb11 ; ret
0x00000000001656e5 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001658c5 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000165aa5 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000165505 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000007fc62 : push rsi ; cli ; dec dword ptr [rcx - 0x77] ; ret 0x8548
0x0000000000165eb1 : push rsi ; cli ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016acf2 : push rsi ; cmc ; mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000018fa56 : push rsi ; cmc ; sub eax, edx ; ret
0x0000000000083d8c : push rsi ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000000b7206 : push rsi ; cmp ecx, dword ptr [rdi] ; add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000ffa6e : push rsi ; dec dword ptr [rbx - 0x2e743] ; dec dword ptr [rax - 0x77] ; ret 0x8d4c
0x000000000018bb1e : push rsi ; fbstp tbyte ptr [rdx - 0x10f09921] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018bbee : push rsi ; fidiv word ptr [rdx - 0x10f09922] ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016ac72 : push rsi ; hlt ; mov ecx, dword ptr [rsi - 4] ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000018fa46 : push rsi ; hlt ; sub eax, edx ; ret
0x000000000018fa16 : push rsi ; int1 ; sub eax, edx ; ret
0x000000000012a592 : push rsi ; je 0x12a5a8 ; mov eax, 7 ; ret
0x000000000018db72 : push rsi ; loopne 0x18db44 ; vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000018bae8 : push rsi ; mov edi, 0xf66bfb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018bbb8 : push rsi ; mov esi, 0xf66beb2 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000009d3d6 : push rsi ; or al, 0 ; cmovne rax, rdx ; ret
0x000000000011e794 : push rsi ; or al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000061f33 : push rsi ; or al, 0xf6 ; ret 0x7401
0x000000000006221e : push rsi ; or al, 0xf6 ; ret 0x7440
0x0000000000048542 : push rsi ; or byte ptr [rax + 0x29], cl ; retf 0xc148
0x000000000015e7e4 : push rsi ; or byte ptr [rax], al ; mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x000000000015e864 : push rsi ; or byte ptr [rax], al ; mov dword ptr fs:[rax], 0x26 ; xor eax, eax ; ret
0x00000000000b5687 : push rsi ; or eax, 0x77f0ff3 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x0000000000112f46 : push rsi ; or ebp, edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000000b56c7 : push rsi ; psllq mm1, qword ptr [rdi] ; jg 0xb56df ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000b6397 : push rsi ; psllq mm1, qword ptr [rdi] ; jg 0xb63af ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000b8977 : push rsi ; psllq mm1, qword ptr [rdi] ; jg 0xb898f ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000b9447 : push rsi ; psllq mm1, qword ptr [rdi] ; jg 0xb945f ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000001516e4 : push rsi ; push r13 ; lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000431df : push rsi ; ret
0x0000000000096509 : push rsi ; ret 0x750f
0x000000000006227a : push rsi ; ret 0x7540
0x000000000006e704 : push rsi ; ret 0xf0a
0x000000000007c323 : push rsi ; ret 0xf10
0x000000000006c4df : push rsi ; ret 0xffff
0x00000000000d86c6 : push rsi ; retf
0x000000000014928d : push rsi ; sbb byte ptr [rcx + 0x31], cl ; ror byte ptr [rbx + rcx*4 + 0x5e], 1 ; adc byte ptr [rbp + 0x31], cl ; ret 0x314d
0x00000000001660b1 : push rsi ; stc ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000165cb1 : push rsi ; sti ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000b5380 : push rsi ; str word ptr [rcx + 0x63] ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000074cf3 : push rsi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000018fa26 : push rsi ; sub eax, edx ; ret
0x000000000016adf2 : push rsi ; test dword ptr [rbx - 0x76b703b2], 0x4f89f757 ; cld ; ret
0x0000000000111577 : push rsi ; xor ax, ax ; ret
0x000000000018af9e : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000a54be : push rsp ; adc byte ptr ss:[rcx + 0xf], al ; xchg eax, ebx ; ret
0x00000000000fac0e : push rsp ; adc eax, 0x105c8d00 ; add dword ptr [rax + 0x63], ecx ; ret
0x0000000000112c04 : push rsp ; add byte ptr [rax], al ; mov eax, 0x10 ; syscall
0x00000000001129a9 : push rsp ; add byte ptr [rax], al ; mov eax, r10d ; mov r12d, dword ptr fs:[r8] ; syscall
0x00000000001840c0 : push rsp ; add dword ptr [rax], eax ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000018408c : push rsp ; add dword ptr [rax], eax ; mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000163a0c : push rsp ; add eax, 0x14634900 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000119287 : push rsp ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], cl ; call r12
0x00000000000cf97d : push rsp ; add rsp, 0xe0 ; pop rbx ; ret
0x0000000000095c2e : push rsp ; and al, 0x10 ; call 0x1126f5
0x000000000015e5ca : push rsp ; and al, 0x10 ; call rdx
0x0000000000030f8f : push rsp ; and al, 0x10 ; mov dword ptr [r12], edx ; jmp 0x30f62
0x00000000000a7192 : push rsp ; and al, 0x10 ; mov qword ptr [rdi], rdx ; lea rax, [rdi + rax - 1] ; ret
0x00000000000bbfac : push rsp ; and al, 0x10 ; mov r9, r14 ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x0000000000126684 : push rsp ; and al, 0x10 ; mov rsi, r13 ; xor r15d, r15d ; call rax
0x0000000000126405 : push rsp ; and al, 0x10 ; xor esi, esi ; mov edi, 0x2000004 ; call rcx
0x00000000000a7084 : push rsp ; and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x0000000000109b1f : push rsp ; and al, 0x18 ; jmp 0x108461
0x0000000000146698 : push rsp ; and al, 0x18 ; lea r9, [rsp + 0x40] ; call qword ptr [rax]
0x00000000000a6ff2 : push rsp ; and al, 0x18 ; mov qword ptr [rdi], rdx ; add rax, rdi ; ret
0x000000000009628a : push rsp ; and al, 0x18 ; mov rdi, r12 ; mov qword ptr [rsp + 8], r11 ; call qword ptr [rax]
0x000000000014c160 : push rsp ; and al, 0x20 ; call rdx
0x00000000000cbf44 : push rsp ; and al, 0x20 ; jmp 0xca902
0x0000000000145c1c : push rsp ; and al, 0x28 ; mov rsi, qword ptr [rsp + 0x20] ; call qword ptr [rax]
0x0000000000112907 : push rsp ; and al, 0x30 ; mov eax, 0x10 ; syscall
0x000000000008b61a : push rsp ; and al, 0x30 ; mov qword ptr [rbx + 0x18], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000108437 : push rsp ; and al, 0x30 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000417cb : push rsp ; and al, 0x40 ; call 0x3da35
0x00000000000d8662 : push rsp ; and al, 0x48 ; mov rdi, qword ptr [rdi + rax*8 + 0x40] ; call 0x2513a
0x00000000000a7063 : push rsp ; and al, 0xc ; mov word ptr [rdi + 4], dx ; ret
0x00000000000435b6 : push rsp ; and al, 0xd0 ; movdqa xmm0, xmmword ptr [rsp - 0x38] ; ret
0x00000000000a7236 : push rsp ; and al, 0xe ; mov byte ptr [rdi + 6], dl ; ret
0x00000000000a7215 : push rsp ; and al, 0xec ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a704b : push rsp ; and al, 0xf4 ; mov byte ptr [rdi + 4], dl ; ret
0x0000000000043077 : push rsp ; and al, 0xf8 ; mov dword ptr [rdi], ecx ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000042e2c : push rsp ; and al, 0xf8 ; movq xmm0, qword ptr [rsp - 8] ; ret
0x0000000000042f1f : push rsp ; and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000000a702d : push rsp ; and al, 0xfa ; mov byte ptr [rdi + 2], dl ; ret
0x0000000000043220 : push rsp ; and al, 0xfc ; movd xmm0, dword ptr [rsp - 4] ; ret
0x00000000000432eb : push rsp ; and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000009cc72 : push rsp ; and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000009cbdd : push rsp ; and al, 8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013b744 : push rsp ; and al, 8 ; jmp 0x13b6ff
0x000000000013b712 : push rsp ; and al, 8 ; jne 0x13b752 ; add rsp, 0x38 ; ret
0x000000000011db07 : push rsp ; and al, 8 ; mov eax, 0x38 ; syscall
0x0000000000136efd : push rsp ; and al, 8 ; mov rdi, r13 ; mov rsi, qword ptr [rsp] ; call r12
0x0000000000030f8b : push rsp ; and al, 8 ; sub edx, dword ptr [rsp + 0x10] ; mov dword ptr [r12], edx ; jmp 0x30f66
0x0000000000096524 : push rsp ; and al, 8 ; xor edi, edi ; call qword ptr [rax]
0x00000000001817b7 : push rsp ; cmp ah, byte ptr [rax] ; sub eax, edx ; vzeroupper ; ret
0x00000000000b7308 : push rsp ; cmp cl, byte ptr [rdi] ; add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000006ffc8 : push rsp ; enter -1, -0x77 ; ret
0x00000000000dfe47 : push rsp ; hlt ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000005676f : push rsp ; iretd ; call 0xffffffffce59f2cd
0x000000000005842f : push rsp ; iretd ; call 0xffffffffce5a0f8d
0x00000000000aaccb : push rsp ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000001167d2 : push rsp ; lea rsp, [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000009e0e8 : push rsp ; mov eax, 0xf480001 ; ret 0x66c3
0x000000000014e9b8 : push rsp ; mov eax, 1 ; ret
0x00000000000e3505 : push rsp ; mov edx, 0x7f ; cmovne rax, rdx ; ret
0x000000000011e977 : push rsp ; or al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000042dca : push rsp ; or eax, 0x174fb0 ; orpd xmm0, xmm1 ; ret
0x000000000010e9b4 : push rsp ; or eax, 0x64d8f700 ; mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000180459 : push rsp ; or eax, 0x894d0000 ; retf
0x0000000000106252 : push rsp ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000e36ef : push rsp ; push rbx ; setne al ; ret
0x00000000000431d9 : push rsp ; ret
0x00000000001211a4 : push rsp ; ret 0x8940
0x0000000000117bcb : push rsp ; retf
0x0000000000056710 : push rsp ; retf 0x48f8
0x0000000000121919 : push rsp ; retf 0x8b40
0x00000000000780e8 : push rsp ; sbb al, 0x13 ; add byte ptr [rax + 0x63], cl ; add al, 0x90 ; add rax, r14 ; jmp rax
0x00000000000985ac : push rsp ; xchg byte ptr [rcx], dl ; add al, ch ; retf
0x00000000000c5aef : push rsp ; xchg eax, esi ; or byte ptr [rdi], cl ; test dword ptr [rax], ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000017dbf0 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x00000000000f6e84 : pushfq ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x00000000000f6e82 : pushfq ; and al, 0x9c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x00000000000c56a8 : pushfq ; and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x830f
0x00000000000bb521 : pushfq ; idiv bh ; mov rax, rbx ; pop rbx ; ret
0x000000000017e8f0 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017c8a4 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x000000000007a350 : pushfq ; ret
0x00000000000d0b85 : pushfq ; ret 0x3949
0x000000000010b9c9 : pushfq ; ret 0x8207
0x00000000000c48de : pushfq ; ret 0x8d41
0x00000000000f6e89 : pushfq ; ret 0xd108
0x00000000000f8878 : pushfq ; retf 0xfff2
0x000000000010b6fc : pushfq ; rol bl, 0x90 ; xor eax, eax ; pop rbx ; ret
0x00000000000cdae3 : pushfq ; sal bh, 0xd8 ; cmp ecx, r8d ; cmovg eax, edx ; ret
0x000000000018972d : pushfq ; sal bh, 0xd8 ; or eax, 1 ; vzeroupper ; ret
0x00000000001664a0 : pushfq ; sub eax, dword ptr [rip + 0x14634900] ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000001409b8 : pxor mm0, mm0 ; movups xmmword ptr [rax], xmm0 ; add rsp, 8 ; ret
0x0000000000115be1 : pxor mm0, mm0 ; movups xmmword ptr [rdi], xmm0 ; ret
0x000000000015609f : pxor mm0, mm0 ; movups xmmword ptr [rsp + 0x28], xmm0 ; call rdx
0x00000000001409b7 : pxor xmm0, xmm0 ; movups xmmword ptr [rax], xmm0 ; add rsp, 8 ; ret
0x0000000000115be0 : pxor xmm0, xmm0 ; movups xmmword ptr [rdi], xmm0 ; ret
0x000000000015609e : pxor xmm0, xmm0 ; movups xmmword ptr [rsp + 0x28], xmm0 ; call rdx
0x00000000000ae58d : rcl byte ptr [rax + rax], 1 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000ec8fe : rcl byte ptr [rax - 0x74fbbc75], 0x55 ; add al, 1 ; ret 0x341
0x000000000006d955 : rcl byte ptr [rbx], 0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x0000000000076bfd : rcl byte ptr [rbx], 1 ; add al, ch ; retf
0x0000000000026419 : rcl byte ptr [rcx], 0x48 ; mov dword ptr [rip + 0x1c3d26], eax ; ret
0x000000000012fd2d : rcl byte ptr [rcx], 0xeb ; ret 0x8b48
0x000000000009a1da : rcl dword ptr [rax + rax], cl ; add dword ptr [rax - 0x77], ecx ; ret 0x4574
0x000000000009a1f5 : rcl dword ptr [rax + rax], cl ; jae 0x9a221 ; lea rax, [rax - 8] ; ret
0x00000000000287f3 : rcl dword ptr [rdi], 1 ; sbb al, 0 ; ret
0x0000000000042b87 : rcr bl, 0x3f ; fld xword ptr [rsp + 8] ; fsubrp st(1) ; ret
0x0000000000102b91 : rcr byte ptr [rax + rax], 0x31 ; ror byte ptr [rdi], cl ; mov esi, 0xfc085c0 ; xchg eax, esp ; ret 0x1589
0x000000000015b87a : rcr byte ptr [rax + rax], 0x84 ; ror byte ptr [rdi], 0x84 ; ret
0x000000000011bc3d : rcr byte ptr [rax + rax], 0x84 ; ror byte ptr [rdi], 0x84 ; ret 0xc
0x000000000015c22a : rcr byte ptr [rax + rax], 0x84 ; ror byte ptr [rdi], 0x84 ; retf
0x00000000001711cd : rcr byte ptr [rax], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000099ab3 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x0000000000039c60 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000de0de : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000098c19 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; ret
0x000000000005f51f : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000056897 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000133e77 : rcr byte ptr [rbp - 0x3a], 2 ; add byte ptr [rcx + 0x5c], al ; pop r13 ; ret
0x00000000000ddcac : rcr byte ptr [rbp - 0x6417fff0], 1 ; jae 0xddcb3 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000c8a5f : rcr byte ptr [rbx + 0x31], 1 ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000000a6d71 : rcr byte ptr [rbx + 0x48], cl ; mov dword ptr [rdi], edx ; ret
0x0000000000098c15 : rcr byte ptr [rbx + 0x48], cl ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000349dd : rcr byte ptr [rbx + 0x4c], 1 ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000032c0c : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000028d3c : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000047b65 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000ce816 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x0000000000047488 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000393c6 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000de1a4 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006196b : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x0000000000055cbf : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x0000000000053818 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000000de1b1 : rcr byte ptr [rbx + 0x5d], cl ; mov eax, edx ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000098fb1 : rcr byte ptr [rbx + 0x5d], cl ; mov rax, rdx ; pop r12 ; ret
0x00000000000840e5 : rcr byte ptr [rbx + 0x5d], cl ; pop r12 ; pop r13 ; jmp rax
0x000000000013df01 : rcr byte ptr [rbx - 0x3d], 0xc3 ; ret
0x000000000008d3db : rcr byte ptr [rbx - 9], 0xd8 ; ret
0x00000000000ade9d : rcr byte ptr [rbx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000150719 : rcr byte ptr [rcx - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x3d83
0x0000000000187cde : rcr byte ptr [rdi + 0x49], 0x29 ; ror byte ptr [rax - 0x73], 1 ; jl 0x187d09 ; and ecx, ebp ; ret
0x0000000000114e2c : rcr dword ptr [rbx + 0x31], cl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000568c9 : rcr dword ptr [rcx], 0xc0 ; and eax, 2 ; sub eax, 1 ; ret
0x000000000017e5ac : rcr dword ptr [rdx], 0xf ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000183a69 : rcr dword ptr [rdx], 0xf ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x0000000000183289 : rcr dword ptr [rdx], 0xf ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000183679 : rcr dword ptr [rdx], 0xf ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000182e99 : rcr dword ptr [rdx], 0xf ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017f10c : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017e8ec : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000017e0cc : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x0000000000183038 : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017ec2c : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017e40c : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017dbec : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000017edcc : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x0000000000183529 : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000182d49 : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000183e59 : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017df2c : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017e062 : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017ed62 : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017e882 : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018342a : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000183d5a : rcr dword ptr [rdx], 0xf ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017f0a2 : rcr dword ptr [rdx], 0xf ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017e3a2 : rcr dword ptr [rdx], 0xf ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000017dec2 : rcr dword ptr [rdx], 0xf ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017ebc2 : rcr dword ptr [rdx], 0xf ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000018357a : rcr dword ptr [rdx], 0xf ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000182d9a : rcr dword ptr [rdx], 0xf ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018b129 : rcr edx, cl ; add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00000000000ba079 : rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000000ba06b : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000015d3d4 : rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000ba463 : rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000097f93 : rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000004487a : rep stosq qword ptr [rdi], rax ; ret
0x000000000002535f : ret
0x0000000000026571 : ret 0
0x00000000000b6dca : ret 0x10
0x00000000000e06ba : ret 0x1075
0x00000000000dff72 : ret 0x107c
0x00000000000bd8f4 : ret 0x10eb
0x000000000004daaa : ret 0x11
0x000000000008da7a : ret 0x110f
0x0000000000131c7a : ret 0x112
0x000000000005686c : ret 0x114d
0x00000000000d2aaa : ret 0x114e
0x00000000000d0be2 : ret 0x116c
0x00000000000fb599 : ret 0x1172
0x000000000012c1b5 : ret 0x1174
0x0000000000030df4 : ret 0x1176
0x00000000000daf9b : ret 0x1189
0x00000000000e55c2 : ret 0x11eb
0x000000000007df80 : ret 0x12
0x000000000011642c : ret 0x1274
0x00000000000b0b4a : ret 0x13
0x000000000015e81f : ret 0x1389
0x00000000000737c2 : ret 0x13c5
0x0000000000054b6d : ret 0x13e9
0x0000000000097b84 : ret 0x14
0x00000000000d6fdf : ret 0x144
0x0000000000194614 : ret 0x145
0x000000000013a909 : ret 0x1472
0x00000000000aad09 : ret 0x147c
0x00000000000675b5 : ret 0x148
0x00000000001929a6 : ret 0x1484
0x00000000000c6aab : ret 0x1489
0x0000000000091bf2 : ret 0x149
0x000000000005a51a : ret 0x14ae
0x000000000006445e : ret 0x14b8
0x0000000000064576 : ret 0x14c
0x000000000009b55a : ret 0x14c0
0x000000000018d9ff : ret 0x14d
0x00000000000e3b06 : ret 0x14e9
0x0000000000049541 : ret 0x14eb
0x00000000000640aa : ret 0x14fa
0x000000000005bc78 : ret 0x15
0x0000000000098209 : ret 0x1521
0x0000000000093606 : ret 0x153f
0x0000000000091e9a : ret 0x1556
0x000000000009049e : ret 0x1570
0x00000000000bc192 : ret 0x1572
0x00000000000635f9 : ret 0x157d
0x0000000000102b9d : ret 0x1589
0x0000000000070caa : ret 0x15e
0x000000000004b916 : ret 0x15eb
0x000000000004baf1 : ret 0x16
0x0000000000091023 : ret 0x160f
0x00000000000d8380 : ret 0x16e
0x0000000000067be6 : ret 0x17
0x0000000000182166 : ret 0x1776
0x0000000000038b89 : ret 0x1798
0x0000000000112a3d : ret 0x180
0x000000000018d93c : ret 0x180f
0x0000000000063b09 : ret 0x1868
0x000000000013f77d : ret 0x1874
0x00000000000aa805 : ret 0x1876
0x0000000000047b09 : ret 0x19
0x00000000000d0fb6 : ret 0x190
0x000000000008c91a : ret 0x1976
0x0000000000044de2 : ret 0x19f3
0x0000000000037c32 : ret 0x1a
0x0000000000030deb : ret 0x1a72
0x000000000009795b : ret 0x1a74
0x00000000000636c0 : ret 0x1ae8
0x00000000000ef638 : ret 0x1aeb
0x0000000000033756 : ret 0x1b30
0x0000000000043212 : ret 0x1b75
0x000000000008d74e : ret 0x1b8
0x0000000000097b03 : ret 0x1ba
0x00000000000d1807 : ret 0x1be
0x00000000000a0325 : ret 0x1beb
0x0000000000025292 : ret 0x1bee
0x0000000000025092 : ret 0x1bef
0x00000000000c3442 : ret 0x1d74
0x00000000000c4a41 : ret 0x1d7e
0x000000000003886d : ret 0x1de8
0x0000000000117bfd : ret 0x1e2
0x00000000000e3a19 : ret 0x1e9
0x000000000002e3a2 : ret 0x1f0f
0x000000000004e5fa : ret 0x1fe9
0x0000000000066dee : ret 0x20
0x0000000000034cd7 : ret 0x200
0x00000000000c18c4 : ret 0x2040
0x0000000000051ef5 : ret 0x2041
0x000000000010daf0 : ret 0x2044
0x00000000000ee3f3 : ret 0x2073
0x00000000000b7fed : ret 0x2074
0x000000000010c76e : ret 0x20b9
0x00000000000e35d5 : ret 0x20ba
0x0000000000187986 : ret 0x21
0x000000000010e3c4 : ret 0x2141
0x000000000012632a : ret 0x2144
0x0000000000057194 : ret 0x2173
0x000000000002f0e3 : ret 0x2174
0x000000000008dc5c : ret 0x2175
0x000000000005a906 : ret 0x2274
0x00000000000b7f7b : ret 0x2275
0x0000000000080e83 : ret 0x227c
0x00000000000b4fd8 : ret 0x2288
0x000000000018c492 : ret 0x2373
0x00000000000a6cca : ret 0x2374
0x00000000000e1668 : ret 0x23b8
0x00000000000f54ed : ret 0x2476
0x00000000000feba0 : ret 0x2573
0x0000000000080fd3 : ret 0x257c
0x000000000005ca85 : ret 0x25e8
0x00000000000d8f10 : ret 0x25e9
0x000000000013dfbf : ret 0x2674
0x000000000002b494 : ret 0x2675
0x00000000000d0b15 : ret 0x267e
0x00000000000b0496 : ret 0x2774
0x00000000000551de : ret 0x2775
0x00000000000b0ce5 : ret 0x280f
0x000000000009b5ad : ret 0x2874
0x00000000000aa7f5 : ret 0x2876
0x000000000002a1b9 : ret 0x28b
0x00000000000d601a : ret 0x28f5
0x000000000003e905 : ret 0x29
0x00000000000a62d9 : ret 0x2901
0x00000000000439b2 : ret 0x290f
0x0000000000181246 : ret 0x2910
0x00000000001814f7 : ret 0x2912
0x0000000000186ab7 : ret 0x2920
0x000000000013dec7 : ret 0x2937
0x00000000000d7835 : ret 0x293c
0x00000000000c0d1f : ret 0x2941
0x000000000006257a : ret 0x2944
0x000000000004a970 : ret 0x2948
0x000000000005fa2b : ret 0x2949
0x0000000000031d90 : ret 0x294c
0x000000000004c6b6 : ret 0x294d
0x00000000000e35bc : ret 0x2974
0x00000000000cdc44 : ret 0x2975
0x0000000000093404 : ret 0x2977
0x0000000000066c4a : ret 0x2a1
0x000000000011545c : ret 0x2aeb
0x0000000000028f99 : ret 0x2b48
0x0000000000128698 : ret 0x2b49
0x000000000014e632 : ret 0x2b74
0x00000000001490f0 : ret 0x2b8
0x00000000000a6873 : ret 0x2ba
0x00000000001155db : ret 0x2beb
0x00000000000a6aef : ret 0x2bf
0x0000000000086fda : ret 0x2c
0x000000000013f359 : ret 0x2c3c
0x000000000009a25a : ret 0x2c74
0x000000000018b43a : ret 0x2d7
0x00000000000a6dd8 : ret 0x2d74
0x0000000000096823 : ret 0x2d75
0x0000000000047585 : ret 0x2e66
0x00000000000f0897 : ret 0x2f73
0x000000000005134a : ret 0x2fe9
0x000000000004863a : ret 0x3039
0x000000000014ae1b : ret 0x3074
0x0000000000107dc6 : ret 0x3101
0x000000000002b3b4 : ret 0x3145
0x00000000001493b1 : ret 0x3148
0x0000000000149390 : ret 0x3149
0x0000000000149298 : ret 0x314d
0x0000000000044b30 : ret 0x31c3
0x0000000000054a7b : ret 0x31e9
0x000000000010c902 : ret 0x3375
0x000000000013efbe : ret 0x33e9
0x00000000000ec907 : ret 0x341
0x00000000000f4630 : ret 0x3439
0x00000000000f465f : ret 0x343b
0x00000000000aace9 : ret 0x347c
0x00000000000cf421 : ret 0x348
0x000000000010c8a0 : ret 0x3575
0x0000000000048d25 : ret 0x35e8
0x000000000007c5c5 : ret 0x36e9
0x0000000000182146 : ret 0x3776
0x0000000000103a3a : ret 0x37b
0x00000000001009db : ret 0x37e9
0x00000000000cf32a : ret 0x3840
0x00000000000a0c33 : ret 0x3841
0x0000000000082f26 : ret 0x3873
0x00000000000aa7e5 : ret 0x3876
0x0000000000082b66 : ret 0x38b
0x0000000000054415 : ret 0x3901
0x000000000013a2f9 : ret 0x3904
0x00000000000cfb91 : ret 0x3907
0x000000000013b471 : ret 0x3908
0x00000000000a6e49 : ret 0x3941
0x00000000000808af : ret 0x3944
0x000000000009ffe5 : ret 0x3945
0x000000000004aca6 : ret 0x3948
0x0000000000045602 : ret 0x3949
0x000000000003373e : ret 0x394c
0x0000000000042521 : ret 0x394d
0x00000000000b9a22 : ret 0x3a01
0x000000000018c47b : ret 0x3a73
0x000000000015d943 : ret 0x3a83
0x00000000000f08b7 : ret 0x3b41
0x000000000006f7ec : ret 0x3b44
0x000000000006f4dc : ret 0x3b45
0x00000000000ba201 : ret 0x3b48
0x000000000014e692 : ret 0x3b74
0x000000000010d68f : ret 0x3b8
0x00000000000b7f61 : ret 0x3c75
0x0000000000044032 : ret 0x3d48
0x00000000000289fb : ret 0x3d83
0x00000000000f672d : ret 0x3de8
0x00000000000e3bdd : ret 0x3de9
0x00000000001587d7 : ret 0x3e75
0x000000000008a004 : ret 0x3e9
0x0000000000084679 : ret 0x3f7
0x0000000000136cd3 : ret 0x3fe9
0x0000000000036356 : ret 0x4001
0x00000000000a4315 : ret 0x4006
0x00000000000bb743 : ret 0x408d
0x00000000001423cc : ret 0x4100
0x0000000000033259 : ret 0x4101
0x00000000000c7b11 : ret 0x4102
0x000000000002ee07 : ret 0x4104
0x00000000000d0e01 : ret 0x4107
0x0000000000069705 : ret 0x4108
0x000000000004c6c6 : ret 0x4118
0x000000000004f60b : ret 0x4135
0x00000000000a6d13 : ret 0x4153
0x000000000011050c : ret 0x4164
0x00000000000f0568 : ret 0x4189
0x00000000000ef193 : ret 0x418d
0x00000000001186be : ret 0x4190
0x0000000000029e3e : ret 0x41c3
0x000000000009b719 : ret 0x41e8
0x000000000002ef7f : ret 0x41e9
0x000000000014762f : ret 0x4203
0x00000000000a8bea : ret 0x4266
0x0000000000097ae2 : ret 0x4273
0x00000000000eff4f : ret 0x428b
0x00000000000d0ace : ret 0x428d
0x000000000008b991 : ret 0x42e9
0x000000000014989f : ret 0x4388
0x00000000000863f4 : ret 0x4389
0x000000000013f016 : ret 0x43e9
0x0000000000039c38 : ret 0x4401
0x0000000000061b2b : ret 0x4404
0x000000000004b229 : ret 0x4418
0x00000000000788b6 : ret 0x4420
0x00000000000944a3 : ret 0x4466
0x00000000000bdfef : ret 0x4489
0x0000000000153489 : ret 0x448b
0x00000000000d7ccf : ret 0x448d
0x00000000000e6aca : ret 0x44c
0x0000000000042ba1 : ret 0x44c7
0x00000000000d4858 : ret 0x44f6
0x00000000000a4f24 : ret 0x4501
0x000000000013b142 : ret 0x4502
0x00000000000bacea : ret 0x4504
0x000000000005a648 : ret 0x453c
0x00000000000cbbdf : ret 0x4540
0x000000000009a1e0 : ret 0x4574
0x0000000000027f76 : ret 0x4589
0x0000000000082939 : ret 0x45f7
0x00000000000cdc27 : ret 0x4675
0x00000000000d0bad : ret 0x4689
0x00000000000a5808 : ret 0x470e
0x00000000000ee3ab : ret 0x473
0x00000000000a6ea4 : ret 0x474
0x0000000000057e26 : ret 0x4774
0x00000000000ce894 : ret 0x477f
0x000000000005f413 : ret 0x47e9
0x00000000000a0338 : ret 0x4801
0x000000000002c609 : ret 0x4802
0x000000000007a1cd : ret 0x4803
0x000000000002bd57 : ret 0x4804
0x0000000000121fc2 : ret 0x4805
0x0000000000121ec2 : ret 0x4806
0x0000000000121e42 : ret 0x4807
0x000000000005643a : ret 0x4808
0x00000000000d26fd : ret 0x4809
0x0000000000036957 : ret 0x480a
0x0000000000121b42 : ret 0x480b
0x00000000000cea1e : ret 0x480e
0x00000000000e20b9 : ret 0x480f
0x0000000000058396 : ret 0x4810
0x0000000000025394 : ret 0x4811
0x0000000000151369 : ret 0x4812
0x0000000000074b52 : ret 0x4817
0x000000000003637b : ret 0x481a
0x0000000000074b72 : ret 0x4820
0x0000000000036302 : ret 0x4822
0x000000000013d753 : ret 0x482e
0x0000000000127dd0 : ret 0x4830
0x000000000004e26d : ret 0x4835
0x000000000005b026 : ret 0x4840
0x00000000000269dd : ret 0x4864
0x000000000009efc7 : ret 0x4876
0x00000000000f4603 : ret 0x488b
0x0000000000101c8a : ret 0x489
0x0000000000096299 : ret 0x4890
0x000000000009ebbb : ret 0x48b
0x00000000000b01e8 : ret 0x48c3
0x00000000000484be : ret 0x48d
0x00000000000299fc : ret 0x4901
0x000000000002b4b2 : ret 0x4904
0x00000000000bb308 : ret 0x4908
0x00000000000d73e2 : ret 0x490f
0x00000000000c6bfc : ret 0x4910
0x00000000000c8e62 : ret 0x4917
0x000000000015d842 : ret 0x4918
0x0000000000127c5a : ret 0x4964
0x00000000000577c6 : ret 0x4974
0x00000000000967c3 : ret 0x4a10
0x00000000000d8dfc : ret 0x4a8b
0x0000000000026f29 : ret 0x4a8d
0x000000000011423f : ret 0x4ab8
0x0000000000126a6a : ret 0x4b8b
0x00000000001142ef : ret 0x4bb8
0x000000000008108a : ret 0x4be9
0x0000000000049eaa : ret 0x4c01
0x000000000011fef1 : ret 0x4c02
0x00000000000e73ba : ret 0x4c04
0x000000000005c909 : ret 0x4c08
0x00000000000fe48a : ret 0x4c10
0x000000000005c3ac : ret 0x4c20
0x0000000000102476 : ret 0x4c28
0x0000000000126e6b : ret 0x4c30
0x00000000000be3e3 : ret 0x4c35
0x00000000000cbed0 : ret 0x4c40
0x00000000000dbd55 : ret 0x4c48
0x00000000000ef1ce : ret 0x4c6
0x0000000000181ab6 : ret 0x4c60
0x00000000000d48df : ret 0x4c80
0x000000000002b5e0 : ret 0x4d01
0x000000000002ac04 : ret 0x4d02
0x00000000000b5762 : ret 0x4d10
0x0000000000186eeb : ret 0x4d20
0x0000000000191519 : ret 0x4de9
0x0000000000027f73 : ret 0x4e0f
0x0000000000096d5f : ret 0x4e72
0x000000000011ff19 : ret 0x4e73
0x0000000000057535 : ret 0x4e74
0x0000000000054e3e : ret 0x4e9
0x00000000000e1d95 : ret 0x4f08
0x000000000016a17a : ret 0x4f2
0x0000000000117c88 : ret 0x4feb
0x0000000000196032 : ret 0x506
0x000000000003853a : ret 0x50e8
0x000000000018c464 : ret 0x5173
0x00000000000ce549 : ret 0x5180
0x00000000000f0549 : ret 0x5189
0x00000000000ba973 : ret 0x518d
0x00000000000a7539 : ret 0x51e8
0x0000000000156fca : ret 0x5375
0x0000000000127679 : ret 0x53ff
0x000000000009a16c : ret 0x5409
0x00000000001647ba : ret 0x546
0x00000000000aacc9 : ret 0x547c
0x00000000000546dc : ret 0x5488
0x00000000000586c8 : ret 0x5489
0x000000000008725e : ret 0x5590
0x000000000010d806 : ret 0x55b8
0x000000000012701a : ret 0x55ff
0x00000000000b7f47 : ret 0x5675
0x00000000000e32f4 : ret 0x56e9
0x0000000000042e60 : ret 0x574
0x000000000012e2bb : ret 0x576
0x000000000012e042 : ret 0x577
0x0000000000182126 : ret 0x5776
0x00000000000f8025 : ret 0x57e
0x000000000004692b : ret 0x589
0x00000000000d6fcf : ret 0x5a58
0x000000000009b5a2 : ret 0x5b74
0x0000000000147bda : ret 0x5b8b
0x0000000000063070 : ret 0x5ba
0x00000000000feeee : ret 0x5ce8
0x00000000000f8495 : ret 0x5de9
0x000000000008bada : ret 0x5e
0x0000000000190d55 : ret 0x5e9
0x00000000000912c5 : ret 0x6074
0x00000000000563d9 : ret 0x60e9
0x0000000000105df4 : ret 0x6176
0x000000000010897a : ret 0x61e9
0x000000000011cc4a : ret 0x625
0x00000000000c920b : ret 0x6273
0x0000000000055f79 : ret 0x6348
0x00000000000a7181 : ret 0x6349
0x00000000000ece02 : ret 0x634c
0x00000000000d5a96 : ret 0x634d
0x00000000000cdc0a : ret 0x6375
0x0000000000065926 : ret 0x64
0x00000000000315f3 : ret 0x6411
0x00000000000aacb9 : ret 0x647c
0x00000000000eacfd : ret 0x65e9
0x00000000001157d7 : ret 0x6602
0x000000000009f486 : ret 0x6610
0x00000000000aa771 : ret 0x6620
0x000000000009cd73 : ret 0x66c3
0x000000000009d82e : ret 0x672
0x000000000010f646 : ret 0x674
0x00000000000eca26 : ret 0x6774
0x0000000000182116 : ret 0x6776
0x0000000000117be0 : ret 0x67a
0x00000000000ce546 : ret 0x6948
0x00000000000ff0e1 : ret 0x69e8
0x00000000000e19b2 : ret 0x6b75
0x000000000009af0b : ret 0x6be2
0x00000000000e3baf : ret 0x6be9
0x00000000000d7c6d : ret 0x6eb8
0x0000000000042e16 : ret 0x6f75
0x000000000013f421 : ret 0x705
0x0000000000147418 : ret 0x72e8
0x0000000000061f36 : ret 0x7401
0x0000000000099a92 : ret 0x7402
0x0000000000097287 : ret 0x7404
0x0000000000086a04 : ret 0x7408
0x0000000000084eed : ret 0x7420
0x0000000000062221 : ret 0x7440
0x0000000000050fc2 : ret 0x7489
0x000000000002a33f : ret 0x7501
0x000000000009c42a : ret 0x7502
0x000000000009726e : ret 0x7504
0x00000000001490be : ret 0x7507
0x000000000002ce18 : ret 0x7508
0x000000000009650b : ret 0x750f
0x000000000018e56b : ret 0x7510
0x0000000000083422 : ret 0x7520
0x000000000006227c : ret 0x7540
0x00000000000eb7d1 : ret 0x7580
0x000000000013c0ed : ret 0x758b
0x0000000000135805 : ret 0x75e8
0x0000000000107235 : ret 0x75e9
0x000000000018b352 : ret 0x7677
0x00000000000d08d4 : ret 0x76b
0x0000000000056c52 : ret 0x777
0x0000000000194af6 : ret 0x7775
0x00000000000d0b34 : ret 0x77e
0x00000000000439d3 : ret 0x77e8
0x0000000000109290 : ret 0x77e9
0x00000000000a75a2 : ret 0x78e8
0x0000000000106ae4 : ret 0x7976
0x000000000009a3f3 : ret 0x7a74
0x0000000000054647 : ret 0x7c8b
0x000000000008a63d : ret 0x7ce9
0x00000000000aa711 : ret 0x7e20
0x000000000018207c : ret 0x7e40
0x00000000001171d1 : ret 0x7ee9
0x00000000000a779c : ret 0x7f10
0x00000000001933fb : ret 0x7ffe
0x0000000000192d6b : ret 0x7fff
0x0000000000168fae : ret 0x80
0x00000000000a8979 : ret 0x8000
0x00000000000362de : ret 0x8001
0x00000000000379e8 : ret 0x8040
0x0000000000143d0d : ret 0x8041
0x00000000000b5b9d : ret 0x8072
0x0000000000128e9a : ret 0x8080
0x00000000000491da : ret 0x80e8
0x00000000001818f5 : ret 0x8101
0x0000000000139c31 : ret 0x8103
0x0000000000189fb5 : ret 0x8104
0x000000000013b44c : ret 0x8108
0x00000000000d2edc : ret 0x8141
0x0000000000194ae0 : ret 0x8148
0x00000000000ecb53 : ret 0x8166
0x0000000000095bba : ret 0x818
0x000000000010b9ca : ret 0x8207
0x00000000000334ca : ret 0x820f
0x000000000004424e : ret 0x82b8
0x000000000009cf9a : ret 0x8301
0x0000000000138f29 : ret 0x8303
0x00000000000ef287 : ret 0x8304
0x00000000000a3b1c : ret 0x8305
0x00000000001819c5 : ret 0x8308
0x0000000000048c9c : ret 0x830f
0x0000000000181990 : ret 0x8310
0x0000000000181962 : ret 0x8320
0x0000000000127cba : ret 0x8330
0x000000000012f27a : ret 0x834
0x00000000000aabe1 : ret 0x8340
0x0000000000054973 : ret 0x8341
0x0000000000047bfd : ret 0x8348
0x0000000000032f5b : ret 0x8349
0x00000000000c33d1 : ret 0x840
0x0000000000039368 : ret 0x8401
0x0000000000042fa2 : ret 0x840f
0x000000000002cd18 : ret 0x841
0x00000000000c6bc0 : ret 0x844
0x00000000001914e8 : ret 0x8441
0x000000000004ab71 : ret 0x8445
0x00000000000a2ae6 : ret 0x845
0x00000000000e31c6 : ret 0x84e9
0x00000000000c8c06 : ret 0x850b
0x000000000002f17d : ret 0x850f
0x0000000000182601 : ret 0x8520
0x00000000000546d4 : ret 0x8545
0x000000000002a9ce : ret 0x8548
0x0000000000039a69 : ret 0x854d
0x00000000000db4f8 : ret 0x8589
0x00000000000d3296 : ret 0x858b
0x0000000000129d3e : ret 0x85e9
0x00000000000332d0 : ret 0x860f
0x00000000000e1c61 : ret 0x8674
0x000000000007c56e : ret 0x86e9
0x000000000015c71a : ret 0x86f
0x000000000007d5a6 : ret 0x870f
0x00000000000562ac : ret 0x874
0x00000000000aa815 : ret 0x876
0x000000000004adc1 : ret 0x87e
0x000000000008ac26 : ret 0x87eb
0x0000000000036e7e : ret 0x8801
0x000000000002b1ee : ret 0x8804
0x00000000000d768b : ret 0x8830
0x000000000015bf6a : ret 0x884
0x000000000006416c : ret 0x8873
0x0000000000090371 : ret 0x8901
0x0000000000081056 : ret 0x8908
0x00000000001211a5 : ret 0x8940
0x000000000004c3ad : ret 0x8941
0x000000000002a1c7 : ret 0x8944
0x00000000000a2a0a : ret 0x8945
0x0000000000042eb4 : ret 0x8948
0x0000000000029e44 : ret 0x8949
0x00000000000362bd : ret 0x894c
0x0000000000035f2d : ret 0x894d
0x00000000000576bb : ret 0x894e
0x000000000008ab09 : ret 0x89eb
0x0000000000039a71 : ret 0x8a75
0x000000000007b106 : ret 0x8a77
0x00000000000809aa : ret 0x8b04
0x0000000000034dce : ret 0x8b05
0x000000000003859a : ret 0x8b08
0x000000000018a072 : ret 0x8b10
0x000000000002bbba : ret 0x8b41
0x000000000002c3c5 : ret 0x8b44
0x00000000000c724d : ret 0x8b48
0x000000000002aaf7 : ret 0x8b49
0x000000000005763e : ret 0x8b4a
0x0000000000041647 : ret 0x8b4c
0x0000000000082ab8 : ret 0x8b64
0x000000000015ea09 : ret 0x8b9
0x000000000005e199 : ret 0x8c0f
0x000000000007f308 : ret 0x8ce9
0x00000000000a3a93 : ret 0x8d01
0x000000000005c7e1 : ret 0x8d04
0x000000000002d77b : ret 0x8d0f
0x00000000000a5a7e : ret 0x8d41
0x00000000000968ee : ret 0x8d44
0x00000000000db091 : ret 0x8d45
0x00000000000d0b22 : ret 0x8d46
0x0000000000028de3 : ret 0x8d48
0x000000000004850e : ret 0x8d49
0x00000000000c0b96 : ret 0x8d4a
0x000000000010195d : ret 0x8d4b
0x0000000000056825 : ret 0x8d4c
0x0000000000035f0d : ret 0x8d4d
0x0000000000193292 : ret 0x8d4f
0x0000000000052ae3 : ret 0x8d74
0x000000000007a785 : ret 0x8d89
0x0000000000045b1a : ret 0x8e0f
0x00000000000bc96e : ret 0x8ee9
0x000000000005d279 : ret 0x8f0f
0x0000000000084a4b : ret 0x8feb
0x00000000000f556d : ret 0x9066
0x0000000000034c9d : ret 0x90c3
0x000000000009fb59 : ret 0x91e8
0x00000000000f6558 : ret 0x92e8
0x00000000000feb02 : ret 0x930f
0x000000000013f092 : ret 0x93e9
0x000000000006b520 : ret 0x940f
0x0000000000058fb1 : ret 0x941
0x0000000000042f19 : ret 0x948
0x0000000000192dbc : ret 0x949
0x000000000004360c : ret 0x94c
0x0000000000193371 : ret 0x94d
0x000000000011c305 : ret 0x954
0x000000000005bcdb : ret 0x9574
0x000000000011bd04 : ret 0x95f
0x000000000011bdd6 : ret 0x960
0x00000000000e775b : ret 0x960f
0x0000000000126e6f : ret 0x9675
0x00000000000878d4 : ret 0x96e8
0x00000000000fa69a : ret 0x974
0x0000000000099a1c : ret 0x976
0x000000000012e094 : ret 0x977
0x00000000001565d6 : ret 0x9775
0x000000000015187a : ret 0x983
0x00000000000b7f95 : ret 0x9874
0x0000000000067554 : ret 0x9975
0x0000000000076210 : ret 0x9be9
0x00000000000a6183 : ret 0x9ceb
0x00000000000b5b80 : ret 0x9d72
0x00000000000d3239 : ret 0x9ee9
0x0000000000078593 : ret 0xa
0x00000000000fe43a : ret 0xa0e9
0x00000000000880ba : ret 0xa3c
0x00000000000a468b : ret 0xa3eb
0x000000000014539a : ret 0xa45
0x000000000013f662 : ret 0xa47
0x000000000008a403 : ret 0xa4eb
0x00000000000ce8ed : ret 0xa77e
0x0000000000061a79 : ret 0xa7d
0x0000000000094791 : ret 0xa8e9
0x00000000001360f0 : ret 0xab8
0x000000000011aede : ret 0xabe
0x0000000000141d2b : ret 0xabe9
0x00000000001039a9 : ret 0xabf
0x0000000000093ff1 : ret 0xac75
0x000000000010151c : ret 0xace9
0x000000000010afc0 : ret 0xae8
0x000000000002562c : ret 0xb
0x0000000000116f81 : ret 0xb1e9
0x00000000000788ca : ret 0xb2e
0x00000000000d2685 : ret 0xb3e9
0x0000000000149714 : ret 0xb45
0x00000000000e3295 : ret 0xb5e9
0x0000000000058f6d : ret 0xb60f
0x000000000013215a : ret 0xb6d
0x0000000000038f6c : ret 0xb70f
0x0000000000043193 : ret 0xb8
0x00000000000a380e : ret 0xb841
0x0000000000043067 : ret 0xb848
0x000000000009cf88 : ret 0xb8c3
0x000000000009e855 : ret 0xb941
0x0000000000042d49 : ret 0xb948
0x00000000000ce8db : ret 0xb97e
0x00000000000e7a6e : ret 0xb9e9
0x00000000000cefc2 : ret 0xba
0x000000000009a2ea : ret 0xba41
0x000000000002ec26 : ret 0xbb41
0x000000000012bf8a : ret 0xbc6
0x000000000013c183 : ret 0xbc73
0x000000000009e892 : ret 0xbd01
0x000000000007d86e : ret 0xbd83
0x000000000007a7b7 : ret 0xbd89
0x00000000000e82ab : ret 0xbde9
0x00000000000773d7 : ret 0xbe01
0x0000000000072ea0 : ret 0xbe08
0x000000000009b69c : ret 0xbee8
0x0000000000062f6e : ret 0xc
0x00000000000a8839 : ret 0xc000
0x00000000000502a1 : ret 0xc001
0x000000000013a917 : ret 0xc019
0x0000000000129b01 : ret 0xc031
0x00000000000bad8a : ret 0xc04
0x000000000003163e : ret 0xc083
0x0000000000116425 : ret 0xc084
0x0000000000182494 : ret 0xc085
0x00000000000e3c5a : ret 0xc0e9
0x00000000000e4b25 : ret 0xc0eb
0x000000000004ad64 : ret 0xc101
0x000000000004f115 : ret 0xc148
0x000000000005c0c8 : ret 0xc149
0x00000000000604da : ret 0xc166
0x0000000000120a7c : ret 0xc175
0x0000000000155b5f : ret 0xc189
0x00000000000484c4 : ret 0xc229
0x00000000000481f0 : ret 0xc269
0x000000000009889b : ret 0xc275
0x0000000000089995 : ret 0xc283
0x000000000018c334 : ret 0xc2b2
0x0000000000058998 : ret 0xc2e8
0x00000000000d5d7f : ret 0xc329
0x00000000000ecb8a : ret 0xc35b
0x0000000000030b95 : ret 0xc389
0x00000000000f28d1 : ret 0xc3b
0x00000000000a08b8 : ret 0xc3c3
0x000000000005f8e7 : ret 0xc3e8
0x000000000010f6f1 : ret 0xc3f6
0x00000000001820e1 : ret 0xc540
0x0000000000109f81 : ret 0xc5e9
0x00000000000e2535 : ret 0xc60f
0x000000000013dfa2 : ret 0xc641
0x00000000000ed3a6 : ret 0xc675
0x000000000005c9b7 : ret 0xc689
0x000000000014e6f1 : ret 0xc6eb
0x000000000008bb03 : ret 0xc701
0x000000000004a019 : ret 0xc748
0x00000000000cdc61 : ret 0xc75
0x00000000000d7cde : ret 0xc781
0x0000000000074a12 : ret 0xc789
0x0000000000120152 : ret 0xc7f
0x00000000000863e9 : ret 0xc883
0x0000000000042a74 : ret 0xc889
0x00000000001564eb : ret 0xc8b
0x0000000000193cd7 : ret 0xc931
0x0000000000076206 : ret 0xc985
0x00000000000b4f31 : ret 0xc9ff
0x000000000002677c : ret 0xca21
0x00000000000661dd : ret 0xcb73
0x000000000009aa1a : ret 0xcb8
0x00000000000b5b50 : ret 0xcd72
0x0000000000056c30 : ret 0xcd74
0x00000000000296da : ret 0xce80
0x000000000018260d : ret 0xce89
0x00000000000c0278 : ret 0xceb
0x00000000000bddcc : ret 0xcf75
0x000000000015969d : ret 0xcf89
0x000000000010e2da : ret 0xd
0x00000000000c69d8 : ret 0xd008
0x00000000000ee80f : ret 0xd009
0x00000000000994a2 : ret 0xd020
0x00000000000cef94 : ret 0xd029
0x000000000006507f : ret 0xd039
0x0000000000056ccd : ret 0xd074
0x000000000009cb6d : ret 0xd084
0x000000000008a3ef : ret 0xd089
0x0000000000113302 : ret 0xd0b
0x0000000000112daa : ret 0xd10
0x0000000000102139 : ret 0xd101
0x00000000000f6e8a : ret 0xd108
0x00000000000d31bc : ret 0xd129
0x00000000000f391a : ret 0xd139
0x000000000009c922 : ret 0xd148
0x00000000000280f4 : ret 0xd17d
0x000000000011634c : ret 0xd189
0x00000000000899c6 : ret 0xd201
0x00000000000420c0 : ret 0xd231
0x0000000000088edd : ret 0xd274
0x0000000000026bbd : ret 0xd284
0x00000000000309de : ret 0xd285
0x0000000000102dcc : ret 0xd289
0x00000000000933df : ret 0xd2f7
0x00000000000a6d20 : ret 0xd308
0x0000000000044e6b : ret 0xd321
0x000000000004ff9d : ret 0xd348
0x00000000001913b6 : ret 0xd349
0x00000000000ef2d5 : ret 0xd5e8
0x00000000000e8098 : ret 0xd5eb
0x0000000000069a99 : ret 0xd629
0x000000000010f639 : ret 0xd72
0x0000000000068010 : ret 0xd729
0x00000000000f307a : ret 0xd739
0x000000000010c4aa : ret 0xd79
0x00000000000a3ba5 : ret 0xd889
0x00000000000a408e : ret 0xd989
0x000000000013a73e : ret 0xda21
0x000000000014829e : ret 0xda39
0x000000000011b44b : ret 0xda80
0x00000000000ba979 : ret 0xda89
0x0000000000042a70 : ret 0xdaf7
0x0000000000104112 : ret 0xdb31
0x00000000000c9968 : ret 0xdc00
0x00000000000e9ae6 : ret 0xdd75
0x0000000000048f7d : ret 0xdde8
0x000000000009f00f : ret 0xde75
0x00000000000a438f : ret 0xde89
0x000000000006bd26 : ret 0xdee9
0x0000000000032fba : ret 0xdf5
0x000000000007317b : ret 0xdfe8
0x000000000004b6ba : ret 0xdfe9
0x000000000003c751 : ret 0xe
0x00000000000a86f9 : ret 0xe000
0x000000000018e529 : ret 0xe074
0x000000000011c04c : ret 0xe083
0x0000000000041d2a : ret 0xe0e8
0x0000000000089f06 : ret 0xe181
0x000000000007a76b : ret 0xe183
0x0000000000041e65 : ret 0xe281
0x000000000002cca9 : ret 0xe283
0x00000000000f6e53 : ret 0xe2c1
0x0000000000189eef : ret 0xe2c4
0x0000000000098b8a : ret 0xe2e9
0x00000000000a70b7 : ret 0xe2ff
0x00000000000934a2 : ret 0xe375
0x0000000000196f4d : ret 0xe475
0x000000000005ee38 : ret 0xe57f
0x000000000005e0d5 : ret 0xe5e8
0x00000000000a5187 : ret 0xe675
0x00000000000ba602 : ret 0xe680
0x00000000000265ed : ret 0xe683
0x00000000000ec10f : ret 0xe76
0x000000000009a286 : ret 0xe775
0x00000000001814ff : ret 0xe7f
0x0000000000053e8a : ret 0xe8
0x0000000000039727 : ret 0xe801
0x00000000000a1635 : ret 0xe875
0x000000000005e26d : ret 0xe87f
0x00000000000cfbf5 : ret 0xe883
0x00000000000f6c84 : ret 0xe8c0
0x000000000011c1bc : ret 0xe8c1
0x00000000000e0c70 : ret 0xe901
0x0000000000036928 : ret 0xe902
0x0000000000115758 : ret 0xe904
0x00000000000b4fc6 : ret 0xe908
0x000000000017da56 : ret 0xe910
0x000000000007522d : ret 0xe920
0x00000000000e8164 : ret 0xe975
0x00000000000535be : ret 0xe983
0x000000000007a758 : ret 0xe9c0
0x00000000000ba987 : ret 0xe9e9
0x0000000000047a03 : ret 0xea76
0x00000000000ea10f : ret 0xea7f
0x000000000014d9cd : ret 0xea89
0x0000000000043ead : ret 0xeab8
0x000000000007a77b : ret 0xeac0
0x000000000002ccbe : ret 0xeac1
0x00000000000c33eb : ret 0xead1
0x00000000000a2e42 : ret 0xeb01
0x00000000000e556f : ret 0xeb02
0x0000000000038795 : ret 0xeb04
0x000000000017ba96 : ret 0xeb10
0x0000000000130734 : ret 0xeb11
0x000000000012521a : ret 0xeb73
0x000000000009f492 : ret 0xeb75
0x000000000005dc6c : ret 0xeb83
0x00000000000a11b9 : ret 0xec75
0x000000000003369e : ret 0xece8
0x0000000000057560 : ret 0xed75
0x0000000000043a5d : ret 0xede8
0x00000000000ed087 : ret 0xee7f
0x000000000006a912 : ret 0xee83
0x000000000013706a : ret 0xeee0
0x000000000012e3ca : ret 0xef6d
0x000000000005c914 : ret 0xef72
0x000000000005630e : ret 0xef75
0x00000000000fc139 : ret 0xefe9
0x00000000001628ae : ret 0xf
0x00000000000a85b9 : ret 0xf000
0x000000000011e239 : ret 0xf009
0x0000000000126b0a : ret 0xf01
0x0000000000032fa7 : ret 0xf02
0x000000000008065e : ret 0xf039
0x0000000000032f92 : ret 0xf04
0x00000000000613ca : ret 0xf07
0x000000000007a987 : ret 0xf08
0x000000000009cb64 : ret 0xf083
0x0000000000058733 : ret 0xf089
0x000000000011be6a : ret 0xf093
0x000000000006e706 : ret 0xf0a
0x0000000000095ff8 : ret 0xf0f
0x000000000007c325 : ret 0xf10
0x0000000000038b5a : ret 0xf177
0x00000000000aadbc : ret 0xf188
0x00000000000b07f4 : ret 0xf20
0x0000000000087978 : ret 0xf2e8
0x00000000000f3d5a : ret 0xf314
0x000000000010103a : ret 0xf349
0x00000000000f7e2a : ret 0xf375
0x000000000012b0a9 : ret 0xf3f8
0x000000000006077f : ret 0xf40
0x000000000002686b : ret 0xf41
0x00000000000f5792 : ret 0xf44
0x00000000000e77d4 : ret 0xf45
0x000000000009d8f9 : ret 0xf475
0x000000000002a9ca : ret 0xf48
0x0000000000042497 : ret 0xf49
0x00000000000e812b : ret 0xf4c
0x0000000000028b38 : ret 0xf4e9
0x00000000000d566a : ret 0xf4fa
0x0000000000060281 : ret 0xf50
0x000000000018182e : ret 0xf5c5
0x000000000005b5c5 : ret 0xf631
0x0000000000029753 : ret 0xf641
0x00000000000433c3 : ret 0xf66
0x000000000002ae24 : ret 0xf685
0x00000000000c9a0a : ret 0xf6b5
0x00000000000e3b24 : ret 0xf6e9
0x0000000000044651 : ret 0xf701
0x00000000000bb000 : ret 0xf74
0x000000000005587c : ret 0xf741
0x00000000000396ba : ret 0xf748
0x0000000000056c38 : ret 0xf749
0x00000000000bfa0a : ret 0xf755
0x00000000000bf4e2 : ret 0xf8
0x000000000010bd39 : ret 0xf80
0x000000000002c46b : ret 0xf800
0x00000000000d9af0 : ret 0xf801
0x0000000000080316 : ret 0xf839
0x00000000000326eb : ret 0xf883
0x0000000000092a73 : ret 0xf8b
0x00000000000432a7 : ret 0xf8c1
0x0000000000185b26 : ret 0xf8c5
0x000000000012d25a : ret 0xf8cd
0x000000000005fcdc : ret 0xf980
0x0000000000026f58 : ret 0xf983
0x00000000000431f7 : ret 0xf9c1
0x00000000000e3251 : ret 0xf9e9
0x000000000004154e : ret 0xfa83
0x00000000000d7cbe : ret 0xfac1
0x000000000007299a : ret 0xfb28
0x000000000013f775 : ret 0xfb80
0x0000000000151d7f : ret 0xfb81
0x00000000000ca4eb : ret 0xfb83
0x00000000000a8339 : ret 0xfc00
0x000000000004d511 : ret 0xfc01
0x00000000001168d9 : ret 0xfc07
0x000000000009cfbf : ret 0xfc3
0x000000000005c21a : ret 0xfc90
0x00000000000cfb5a : ret 0xfd83
0x000000000004c0ca : ret 0xfd90
0x00000000001505ba : ret 0xfdb7
0x00000000000a81f9 : ret 0xfe00
0x0000000000040052 : ret 0xfe52
0x0000000000192d73 : ret 0xfe83
0x00000000000c2ad5 : ret 0xfeb
0x0000000000042a80 : ret 0xfeb8
0x000000000013f0fc : ret 0xfee9
0x00000000000a80b9 : ret 0xff00
0x00000000000f44e9 : ret 0xff04
0x000000000016ab21 : ret 0xff2
0x0000000000043167 : ret 0xff25
0x0000000000182879 : ret 0xff2d
0x00000000000a8b1a : ret 0xff3
0x000000000013b74a : ret 0xff3a
0x0000000000126305 : ret 0xff41
0x00000000000b7f44 : ret 0xff48
0x00000000000a7f79 : ret 0xff80
0x000000000004a491 : ret 0xff81
0x000000000005fe03 : ret 0xff85
0x000000000007255a : ret 0xffa2
0x0000000000030f97 : ret 0xffb8
0x000000000002986a : ret 0xffb9
0x000000000005005b : ret 0xffbf
0x00000000000a7e39 : ret 0xffc0
0x0000000000072477 : ret 0xffcf
0x000000000007f75a : ret 0xffdc
0x00000000000a7cf9 : ret 0xffe0
0x000000000010991b : ret 0xffe6
0x00000000000d4e3a : ret 0xffe7
0x0000000000057a3a : ret 0xffec
0x00000000001390d2 : ret 0xffee
0x0000000000049639 : ret 0xffef
0x000000000009a251 : ret 0xfff
0x00000000000a7bb9 : ret 0xfff0
0x0000000000108e1a : ret 0xfff1
0x00000000000408a7 : ret 0xfff3
0x0000000000060d85 : ret 0xfff4
0x000000000012ef5b : ret 0xfff5
0x000000000003c4f7 : ret 0xfff6
0x000000000016073d : ret 0xfff7
0x00000000000a7a79 : ret 0xfff8
0x00000000000542a6 : ret 0xfff9
0x00000000000760ba : ret 0xfffa
0x00000000000a5750 : ret 0xfffb
0x000000000002dc8f : ret 0xfffc
0x0000000000030a2f : ret 0xfffd
0x000000000002f918 : ret 0xfffe
0x0000000000034c95 : ret 0xffff
0x00000000000652b2 : ret 1
0x0000000000035601 : ret 2
0x000000000018c0f2 : ret 3
0x00000000000aae69 : ret 4
0x0000000000037a4f : ret 5
0x000000000005e9c1 : ret 6
0x0000000000060e81 : ret 7
0x00000000000aae85 : ret 8
0x0000000000114cba : ret 9
0x0000000000097fa2 : retf
0x0000000000034910 : retf 0
0x00000000000d521d : retf 0x10
0x00000000000ef5d1 : retf 0x1074
0x0000000000147145 : retf 0x1089
0x0000000000050552 : retf 0x11
0x000000000005679d : retf 0x114d
0x00000000000d176a : retf 0x1161
0x00000000001480f7 : retf 0x1189
0x0000000000097d3d : retf 0x118c
0x0000000000125f89 : retf 0x11e8
0x00000000000efced : retf 0x11eb
0x000000000007c26d : retf 0x12
0x00000000000a6248 : retf 0x12e9
0x000000000006cd11 : retf 0x13
0x00000000000b7f8a : retf 0x1373
0x0000000000059112 : retf 0x1374
0x000000000012b608 : retf 0x13e9
0x000000000005c26d : retf 0x14
0x000000000014c399 : retf 0x141
0x00000000000c66e3 : retf 0x144
0x0000000000035fea : retf 0x148
0x000000000002d78b : retf 0x149
0x00000000000a44f0 : retf 0x14c
0x000000000009be01 : retf 0x14e5
0x00000000001515f6 : retf 0x14e8
0x000000000005b463 : retf 0x15
0x00000000000941d2 : retf 0x1500
0x000000000005bb16 : retf 0x153f
0x00000000000905f2 : retf 0x159d
0x000000000012c858 : retf 0x15ff
0x0000000000025792 : retf 0x16
0x000000000008009a : retf 0x163e
0x0000000000155bfb : retf 0x1689
0x000000000006def3 : retf 0x16eb
0x0000000000032d61 : retf 0x17
0x0000000000063f52 : retf 0x1826
0x000000000005498d : retf 0x1874
0x000000000005f616 : retf 0x187e
0x0000000000027751 : retf 0x18b6
0x000000000008f602 : retf 0x18e9
0x000000000005845d : retf 0x194d
0x0000000000155b66 : retf 0x1975
0x00000000000f4df4 : retf 0x197f
0x000000000011e662 : retf 0x19b8
0x0000000000193ecf : retf 0x19e9
0x00000000000e5db2 : retf 0x1a76
0x0000000000026ef1 : retf 0x1b
0x00000000001961aa : retf 0x1b4
0x00000000000a60d2 : retf 0x1b76
0x00000000000de38c : retf 0x1be
0x0000000000025282 : retf 0x1bee
0x0000000000025082 : retf 0x1bef
0x00000000000bac93 : retf 0x1c74
0x000000000002a67b : retf 0x1d76
0x00000000000a6ccf : retf 0x1e74
0x00000000000a00e9 : retf 0x1e8
0x000000000011e842 : retf 0x1eb8
0x000000000006c9fa : retf 0x1f0f
0x00000000000e35cb : retf 0x1f74
0x000000000012c9a4 : retf 0x1f8
0x0000000000066f5e : retf 0x21
0x000000000008dae7 : retf 0x2148
0x0000000000094f0d : retf 0x2149
0x0000000000196012 : retf 0x21c
0x0000000000157c02 : retf 0x22
0x000000000012cd42 : retf 0x24
0x000000000005dc2b : retf 0x2475
0x0000000000108db7 : retf 0x24e9
0x000000000008756a : retf 0x273
0x00000000000e4c8c : retf 0x2776
0x000000000012e002 : retf 0x2777
0x0000000000163df9 : retf 0x280f
0x0000000000069922 : retf 0x281
0x0000000000111d52 : retf 0x28b8
0x0000000000043e5b : retf 0x290f
0x000000000007b3f2 : retf 0x2941
0x00000000000784e8 : retf 0x2944
0x000000000004b1fa : retf 0x2948
0x00000000000883c0 : retf 0x294c
0x000000000007703a : retf 0x2a
0x00000000000c91a5 : retf 0x2b48
0x000000000008f8b1 : retf 0x2be
0x0000000000030dff : retf 0x2c73
0x0000000000030dd9 : retf 0x2c76
0x000000000018b632 : retf 0x2d5
0x00000000000b7f70 : retf 0x2d73
0x000000000011e302 : retf 0x2db8
0x00000000000f3185 : retf 0x2e66
0x000000000011dd92 : retf 0x2eb8
0x000000000011b627 : retf 0x2f3c
0x00000000000a609e : retf 0x2f75
0x000000000011e8d2 : retf 0x2fb8
0x000000000008f632 : retf 0x2fe9
0x0000000000115698 : retf 0x2feb
0x00000000000f530d : retf 0x3076
0x0000000000054502 : retf 0x3145
0x000000000016a716 : retf 0x3148
0x00000000001491f9 : retf 0x3149
0x00000000001140a3 : retf 0x3153
0x0000000000081213 : retf 0x31e9
0x0000000000196111 : retf 0x3274
0x000000000002a666 : retf 0x3276
0x000000000006d7d0 : retf 0x33
0x00000000000fcec6 : retf 0x343
0x00000000000f4646 : retf 0x343b
0x000000000011f142 : retf 0x35b8
0x000000000009cc55 : retf 0x35e8
0x0000000000109511 : retf 0x35e9
0x000000000011e932 : retf 0x36b8
0x000000000016a6f2 : retf 0x377
0x000000000011e962 : retf 0x37b8
0x00000000000301af : retf 0x37e9
0x000000000014aa81 : retf 0x3941
0x00000000000f7fbd : retf 0x3944
0x0000000000045670 : retf 0x3948
0x00000000000a22c7 : retf 0x3949
0x000000000008e0eb : retf 0x394c
0x00000000000b5744 : retf 0x394d
0x00000000000568f4 : retf 0x3973
0x000000000013a8e3 : retf 0x3a72
0x00000000000f587d : retf 0x3b45
0x000000000013b7c8 : retf 0x3b9a
0x0000000000063a77 : retf 0x3cb9
0x00000000000988ed : retf 0x3d83
0x00000000000e1432 : retf 0x3db8
0x0000000000085dd2 : retf 0x3e
0x000000000008b7bd : retf 0x3fe9
0x000000000008074e : retf 0x4090
0x000000000010354a : retf 0x40c7
0x000000000008b985 : retf 0x40e9
0x00000000000f1029 : retf 0x4110
0x00000000000f0ede : retf 0x4140
0x000000000004b4e7 : retf 0x4166
0x000000000002ccb6 : retf 0x4180
0x00000000000ce607 : retf 0x418d
0x00000000000a8bcc : retf 0x4266
0x00000000000e7ca2 : retf 0x428b
0x000000000008bbcd : retf 0x43e9
0x000000000008f0a2 : retf 0x43f6
0x00000000000e0f39 : retf 0x440f
0x000000000004b4c1 : retf 0x4466
0x00000000000ea942 : retf 0x448
0x000000000015e3a8 : retf 0x4489
0x0000000000054019 : retf 0x44c7
0x00000000000d4876 : retf 0x44f6
0x00000000001120ce : retf 0x46b8
0x00000000000b7f56 : retf 0x4773
0x000000000002a651 : retf 0x4776
0x0000000000089ac3 : retf 0x47e8
0x00000000000970e4 : retf 0x4801
0x0000000000091781 : retf 0x4802
0x00000000000e443b : retf 0x4804
0x000000000015e1e4 : retf 0x4808
0x00000000000cfb4b : retf 0x480f
0x00000000000882c8 : retf 0x4810
0x0000000000083fa6 : retf 0x4853
0x0000000000106106 : retf 0x4864
0x0000000000056711 : retf 0x48f8
0x00000000000970d9 : retf 0x4901
0x0000000000097af8 : retf 0x4904
0x000000000010e1e2 : retf 0x4b8
0x0000000000139d3f : retf 0x4be8
0x000000000009174d : retf 0x4c01
0x000000000009a53f : retf 0x4c89
0x0000000000056768 : retf 0x4de8
0x000000000005677a : retf 0x4df0
0x000000000005678c : retf 0x4df8
0x000000000016b9f2 : retf 0x4e1
0x00000000000bddee : retf 0x4e74
0x0000000000057449 : retf 0x4e9
0x00000000000ec2c0 : retf 0x5088
0x00000000000fd9e4 : retf 0x5089
0x00000000001262f2 : retf 0x53
0x00000000000f2ccf : retf 0x5388
0x0000000000113126 : retf 0x5389
0x000000000004a11b : retf 0x5441
0x0000000000052add : retf 0x5489
0x0000000000037867 : retf 0x5589
0x000000000012385a : retf 0x5641
0x000000000012e0b2 : retf 0x577
0x0000000000156419 : retf 0x595
0x000000000013de7d : retf 0x598d
0x000000000002a63c : retf 0x5c76
0x00000000000a0266 : retf 0x5d5b
0x000000000009f97a : retf 0x60e9
0x00000000000b7f3c : retf 0x6173
0x00000000000d14f6 : retf 0x6348
0x00000000000cef08 : retf 0x634c
0x00000000000a44ed : retf 0x634d
0x0000000000043c58 : retf 0x6411
0x00000000001565a1 : retf 0x6600
0x0000000000163ee3 : retf 0x6601
0x0000000000164033 : retf 0x6602
0x0000000000164183 : retf 0x6603
0x00000000001565aa : retf 0x6604
0x0000000000164423 : retf 0x6605
0x0000000000164573 : retf 0x6606
0x00000000001646c3 : retf 0x6607
0x0000000000164813 : retf 0x6608
0x0000000000164963 : retf 0x6609
0x0000000000164ab3 : retf 0x660a
0x0000000000164c03 : retf 0x660b
0x0000000000164d53 : retf 0x660c
0x0000000000164ea3 : retf 0x660d
0x0000000000164ff3 : retf 0x660e
0x0000000000165143 : retf 0x660f
0x00000000000aab53 : retf 0x6666
0x000000000016a711 : retf 0x676
0x00000000000cfa95 : retf 0x694d
0x00000000000541ab : retf 0x69e9
0x000000000010c961 : retf 0x6b8
0x0000000000106892 : retf 0x6d
0x000000000008f822 : retf 0x6de9
0x000000000011b66d : retf 0x6eb
0x00000000000a0c3d : retf 0x7074
0x000000000014179c : retf 0x715
0x000000000002a627 : retf 0x7176
0x0000000000064c15 : retf 0x71e9
0x0000000000146062 : retf 0x721
0x00000000000bbd42 : retf 0x734
0x00000000000a4487 : retf 0x7675
0x0000000000087541 : retf 0x776
0x00000000000a5668 : retf 0x7a8d
0x000000000015d7cf : retf 0x7b72
0x0000000000053de4 : retf 0x7c80
0x0000000000054983 : retf 0x7c83
0x000000000012ae9f : retf 0x7ce9
0x000000000008f9b6 : retf 0x7e9
0x0000000000133b02 : retf 0x7f80
0x00000000001089d3 : retf 0x8041
0x00000000001495b4 : retf 0x8141
0x000000000016a6fa : retf 0x8148
0x00000000000f776b : retf 0x8166
0x00000000001889ca : retf 0x81eb
0x000000000004aca9 : retf 0x820f
0x000000000006cadd : retf 0x830f
0x000000000008e85d : retf 0x8310
0x000000000008fe95 : retf 0x8320
0x000000000002688c : retf 0x8341
0x000000000004c3a3 : retf 0x8348
0x000000000002d2e7 : retf 0x8349
0x000000000006cb72 : retf 0x8380
0x000000000002688f : retf 0x83ff
0x000000000004b519 : retf 0x840f
0x0000000000069e51 : retf 0x8445
0x0000000000054e86 : retf 0x84c6
0x000000000003333f : retf 0x850f
0x000000000002677e : retf 0x8545
0x0000000000047565 : retf 0x8548
0x000000000007d926 : retf 0x858b
0x00000000000a3651 : retf 0x860f
0x000000000015d9e2 : retf 0x864
0x00000000000f3afc : retf 0x870f
0x000000000005651c : retf 0x874
0x000000000012e062 : retf 0x877
0x00000000000f2dd1 : retf 0x8810
0x00000000000f2ce6 : retf 0x8840
0x00000000000f4b52 : retf 0x8841
0x00000000000a57ef : retf 0x8843
0x00000000000a686f : retf 0x8880
0x00000000000917ad : retf 0x8901
0x000000000009a545 : retf 0x8902
0x00000000000882e1 : retf 0x8920
0x0000000000117521 : retf 0x8940
0x00000000000388b0 : retf 0x8941
0x000000000002e617 : retf 0x8944
0x00000000000c5fe9 : retf 0x8945
0x000000000002fe51 : retf 0x8948
0x0000000000055811 : retf 0x8949
0x000000000004ae71 : retf 0x894c
0x000000000002a2f4 : retf 0x894d
0x000000000010c6aa : retf 0x8955
0x000000000002fcdb : retf 0x8966
0x000000000010bfcb : retf 0x89ff
0x00000000000e1469 : retf 0x8b
0x000000000012191a : retf 0x8b40
0x00000000000a175f : retf 0x8b44
0x00000000000ec8e8 : retf 0x8b45
0x000000000004bdd3 : retf 0x8b48
0x0000000000039fbd : retf 0x8b49
0x00000000000ed344 : retf 0x8b4c
0x0000000000063a42 : retf 0x8b8
0x000000000008f832 : retf 0x8be9
0x000000000010091e : retf 0x8c0f
0x0000000000159df6 : retf 0x8ceb
0x000000000002bfaf : retf 0x8d0f
0x000000000015ca7a : retf 0x8d4
0x000000000008f47f : retf 0x8d41
0x000000000004afe0 : retf 0x8d44
0x000000000004763d : retf 0x8d48
0x0000000000139ccb : retf 0x8d49
0x000000000004e060 : retf 0x8d4a
0x00000000000872e2 : retf 0x8d4c
0x0000000000086919 : retf 0x8d4d
0x0000000000181509 : retf 0x8e0f
0x00000000000a0d9d : retf 0x9066
0x000000000008123b : retf 0x91eb
0x00000000001580e2 : retf 0x923
0x000000000009b741 : retf 0x92eb
0x00000000000565ed : retf 0x930f
0x0000000000150a02 : retf 0x933
0x00000000000437e9 : retf 0x948
0x0000000000094f17 : retf 0x949
0x00000000000b7f41 : retf 0x94c
0x000000000002bd47 : retf 0x95e9
0x0000000000151cb2 : retf 0x97c
0x00000000000d5a3b : retf 0x9848
0x000000000008f8f6 : retf 0x99e9
0x000000000010e9d2 : retf 0x9b8
0x0000000000117517 : retf 0x9b9
0x00000000000c44b9 : retf 0x9be9
0x000000000014d21e : retf 0x9c9
0x0000000000186aba : retf 0x9ceb
0x000000000014d201 : retf 0x9d1
0x000000000011e6f2 : retf 0x9db8
0x000000000014b45a : retf 0x9e6
0x000000000014b122 : retf 0x9e9
0x000000000015e53b : retf 0x9fe8
0x000000000007c622 : retf 0xa0
0x0000000000148d8a : retf 0xa0c
0x0000000000140b8b : retf 0xa375
0x000000000011e632 : retf 0xa5b8
0x0000000000096f4b : retf 0xa74
0x0000000000129e8d : retf 0xa880
0x000000000010724a : retf 0xaa1
0x0000000000104456 : retf 0xabf
0x000000000010932f : retf 0xace9
0x000000000011e512 : retf 0xafb8
0x0000000000077f9a : retf 0xb
0x000000000008782a : retf 0xb0e8
0x000000000011e722 : retf 0xb2b8
0x000000000011e752 : retf 0xb3b8
0x000000000012e87a : retf 0xb56
0x000000000015a8f2 : retf 0xb5b8
0x0000000000076435 : retf 0xb60f
0x000000000015a942 : retf 0xb6b8
0x000000000015c065 : retf 0xb70f
0x0000000000194916 : retf 0xb801
0x0000000000097a78 : retf 0xb804
0x000000000009d80b : retf 0xb841
0x000000000012b73a : retf 0xb86
0x0000000000154601 : retf 0xb875
0x000000000009e952 : retf 0xb941
0x0000000000191d79 : retf 0xb948
0x000000000013d9b1 : retf 0xb9e8
0x000000000008f92e : retf 0xb9e9
0x000000000009d0dd : retf 0xba5b
0x000000000010ea92 : retf 0xbb8
0x000000000012c082 : retf 0xbc5
0x000000000011b9d2 : retf 0xbcb8
0x00000000001098c9 : retf 0xbd41
0x0000000000159b2d : retf 0xbd49
0x000000000011b972 : retf 0xbdb8
0x0000000000029102 : retf 0xbe
0x00000000000535d6 : retf 0xbe0f
0x000000000012bcf2 : retf 0xbe6
0x000000000012b9f2 : retf 0xbe9
0x000000000011b852 : retf 0xbeb8
0x000000000010878e : retf 0xbf41
0x000000000011b882 : retf 0xbfb8
0x0000000000062746 : retf 0xc
0x000000000006507a : retf 0xc001
0x00000000000ee3e1 : retf 0xc031
0x000000000007a7a0 : retf 0xc041
0x000000000005583f : retf 0xc084
0x00000000000355fc : retf 0xc085
0x000000000011b8e2 : retf 0xc0b8
0x000000000015c54a : retf 0xc0e9
0x00000000000efae3 : retf 0xc0eb
0x00000000000672b1 : retf 0xc139
0x00000000000a18e2 : retf 0xc141
0x00000000000434fb : retf 0xc148
0x00000000000b004e : retf 0xc149
0x0000000000055f97 : retf 0xc183
0x00000000000f3313 : retf 0xc189
0x000000000011b7c2 : retf 0xc1b8
0x00000000000efadb : retf 0xc1e9
0x00000000000d0f5d : retf 0xc229
0x0000000000080e81 : retf 0xc239
0x00000000000a5806 : retf 0xc283
0x0000000000112a3b : retf 0xc2f7
0x00000000000485f2 : retf 0xc3eb
0x00000000000a1c35 : retf 0xc574
0x00000000000ebd4d : retf 0xc60f
0x000000000014d75b : retf 0xc689
0x000000000011cf92 : retf 0xc6e
0x00000000000521d6 : retf 0xc748
0x0000000000093a8e : retf 0xc774
0x00000000000386ee : retf 0xc789
0x00000000000255ab : retf 0xc7ff
0x000000000005573f : retf 0xc821
0x0000000000048215 : retf 0xc875
0x00000000000a3b88 : retf 0xc883
0x000000000002de4f : retf 0xc8d
0x0000000000117125 : retf 0xc931
0x00000000000c5ff6 : retf 0xc974
0x000000000010fef0 : retf 0xc985
0x0000000000117f89 : retf 0xc9d9
0x00000000000c67d3 : retf 0xca01
0x00000000000e6f15 : retf 0xca2
0x000000000018bed4 : retf 0xcab2
0x00000000001490d0 : retf 0xcb89
0x000000000011f062 : retf 0xcd
0x0000000000117282 : retf 0xcd0
0x00000000001564df : retf 0xce75
0x0000000000044641 : retf 0xce89
0x0000000000052726 : retf 0xd
0x0000000000127ba8 : retf 0xd0f7
0x0000000000046718 : retf 0xd148
0x00000000001471ac : retf 0xd189
0x0000000000116256 : retf 0xd1c
0x0000000000120bd2 : retf 0xd231
0x00000000000c91f9 : retf 0xd284
0x000000000002a42a : retf 0xd285
0x0000000000037874 : retf 0xd289
0x0000000000114ad2 : retf 0xd32
0x00000000000ee06a : retf 0xd348
0x00000000000ede8b : retf 0xd349
0x000000000008f88e : retf 0xd3e9
0x000000000010f8da : retf 0xd46
0x00000000000d6408 : retf 0xd4f
0x0000000000114f92 : retf 0xd55
0x000000000002d34e : retf 0xd789
0x000000000003384a : retf 0xd88
0x00000000000a3b3b : retf 0xd889
0x00000000001176c2 : retf 0xd8b8
0x00000000000c7ca7 : retf 0xd8f7
0x0000000000056363 : retf 0xd974
0x000000000018e446 : retf 0xd975
0x000000000013a510 : retf 0xda21
0x00000000000f2391 : retf 0xda29
0x00000000000a6e53 : retf 0xda75
0x00000000000f3c40 : retf 0xdaf7
0x0000000000111783 : retf 0xdb31
0x0000000000093aca : retf 0xdb75
0x00000000000ef443 : retf 0xdb85
0x0000000000125dbf : retf 0xdbe8
0x0000000000139a21 : retf 0xdc75
0x000000000011f9c2 : retf 0xdcb8
0x000000000008f93e : retf 0xdce9
0x000000000011e062 : retf 0xdd
0x0000000000111872 : retf 0xddb8
0x00000000000424d1 : retf 0xdeb
0x000000000004bd74 : retf 0xe
0x00000000000a62e5 : retf 0xe072
0x000000000002bbce : retf 0xe083
0x00000000001895b3 : retf 0xe175
0x0000000000148fc1 : retf 0xe183
0x00000000000a3d23 : retf 0xe275
0x0000000000128e8b : retf 0xe281
0x000000000002d4b9 : retf 0xe283
0x000000000013b46c : retf 0xe2c1
0x00000000000f51ba : retf 0xe37c
0x00000000000a6f09 : retf 0xe475
0x0000000000125cb6 : retf 0xe4e8
0x00000000000a4717 : retf 0xe675
0x000000000010d2a1 : retf 0xe680
0x00000000000f290e : retf 0xe772
0x000000000012e4e6 : retf 0xe775
0x0000000000191154 : retf 0xe783
0x000000000010b9ec : retf 0xe803
0x00000000000a3965 : retf 0xe875
0x000000000005edfd : retf 0xe87f
0x000000000011b6a3 : retf 0xe8eb
0x000000000019514a : retf 0xe901
0x000000000011e4b2 : retf 0xe9b8
0x000000000002674f : retf 0xe9ff
0x000000000010e71e : retf 0xea81
0x00000000000c4e31 : retf 0xeac
0x00000000000e9db2 : retf 0xeac0
0x000000000005574e : retf 0xeac1
0x00000000000a7711 : retf 0xead3
0x00000000000d0e93 : retf 0xeaf7
0x00000000000ef0ea : retf 0xeb75
0x0000000000118271 : retf 0xeb83
0x0000000000061c6c : retf 0xebff
0x00000000000c7c21 : retf 0xec72
0x0000000000033260 : retf 0xed75
0x000000000014a552 : retf 0xedaa
0x0000000000127bac : retf 0xeec1
0x000000000005657e : retf 0xef75
0x0000000000127b70 : retf 0xefc1
0x0000000000136b02 : retf 0xefe4
0x000000000004e66a : retf 0xf
0x0000000000094914 : retf 0xf01
0x000000000016929c : retf 0xf02
0x000000000016941c : retf 0xf03
0x00000000000e4719 : retf 0xf04
0x000000000016971c : retf 0xf05
0x000000000016989c : retf 0xf06
0x0000000000169a1c : retf 0xf07
0x0000000000086a14 : retf 0xf08
0x0000000000169d1c : retf 0xf09
0x0000000000169e9c : retf 0xf0a
0x000000000016a01c : retf 0xf0b
0x000000000016a19c : retf 0xf0c
0x000000000016a31c : retf 0xf0d
0x000000000016a49c : retf 0xf0e
0x000000000016a61c : retf 0xf0f
0x000000000014aa84 : retf 0xf175
0x00000000001907a4 : retf 0xf189
0x000000000010964a : retf 0xf1bc
0x0000000000182b0d : retf 0xf1c5
0x00000000000fefc2 : retf 0xf261
0x000000000011827a : retf 0xf2db
0x0000000000131462 : retf 0xf3
0x00000000000f454a : retf 0xf30d
0x00000000000e9422 : retf 0xf3bc
0x00000000000a6d4a : retf 0xf41
0x0000000000049fa6 : retf 0xf48
0x000000000004ab78 : retf 0xf4c
0x000000000008f5f2 : retf 0xf5e9
0x00000000000876e0 : retf 0xf631
0x000000000002f82d : retf 0xf640
0x000000000013433e : retf 0xf641
0x000000000004b418 : retf 0xf66
0x000000000012632d : retf 0xf685
0x0000000000116632 : retf 0xf73e
0x0000000000060456 : retf 0xf748
0x0000000000080822 : retf 0xf883
0x00000000000d5ad7 : retf 0xf8c1
0x000000000018a12a : retf 0xf8c5
0x000000000011e1d2 : retf 0xf983
0x0000000000097405 : retf 0xf989
0x000000000011c7c2 : retf 0xf9a5
0x0000000000182bdf : retf 0xf9c5
0x000000000008844a : retf 0xf9ce
0x0000000000160bc2 : retf 0xf9e5
0x0000000000133472 : retf 0xfa
0x0000000000147578 : retf 0xfa81
0x0000000000037efb : retf 0xfa83
0x000000000008bc02 : retf 0xfa93
0x00000000000cfb36 : retf 0xfac1
0x0000000000059146 : retf 0xfcc2
0x00000000000fee70 : retf 0xfd4f
0x000000000013c942 : retf 0xfd6a
0x0000000000185ee6 : retf 0xfdc5
0x0000000000109a52 : retf 0xfe0b
0x0000000000042c73 : retf 0xfe0d
0x000000000003ef4a : retf 0xfe63
0x0000000000148d42 : retf 0xfe64
0x000000000003c24a : retf 0xfe90
0x000000000003ae4a : retf 0xfea4
0x0000000000182917 : retf 0xfec5
0x0000000000034582 : retf 0xff0c
0x000000000016af41 : retf 0xff2
0x000000000016af3c : retf 0xff3
0x0000000000191082 : retf 0xff31
0x00000000001002ff : retf 0xff81
0x00000000000413f2 : retf 0xff8a
0x00000000000411f2 : retf 0xff8c
0x0000000000064cf0 : retf 0xffb8
0x000000000006c16c : retf 0xffbe
0x000000000006a687 : retf 0xffc1
0x000000000003d9f2 : retf 0xffc4
0x0000000000070a6c : retf 0xffcb
0x00000000000709e8 : retf 0xffcc
0x000000000006820d : retf 0xffcf
0x0000000000149d32 : retf 0xffd1
0x000000000003c7f2 : retf 0xffd6
0x00000000000c876d : retf 0xffdc
0x0000000000104ea0 : retf 0xffe5
0x00000000000d4d32 : retf 0xffe8
0x00000000000e643a : retf 0xffe9
0x00000000000fe612 : retf 0xffeb
0x00000000001586d1 : retf 0xffec
0x00000000000cc206 : retf 0xffed
0x000000000007f752 : retf 0xffee
0x00000000000389af : retf 0xffef
0x000000000003d3e9 : retf 0xfff0
0x0000000000075bfa : retf 0xfff1
0x00000000000f884d : retf 0xfff2
0x00000000000e87f0 : retf 0xfff3
0x00000000000d866c : retf 0xfff4
0x0000000000045eec : retf 0xfff5
0x00000000000d3d67 : retf 0xfff6
0x000000000008fa1f : retf 0xfff8
0x000000000009b4f2 : retf 0xfff9
0x00000000000884fd : retf 0xfffa
0x00000000001881f2 : retf 0xfffb
0x0000000000088425 : retf 0xfffc
0x0000000000041a1d : retf 0xfffd
0x000000000002ddd5 : retf 0xfffe
0x00000000000373b2 : retf 0xffff
0x0000000000033a6c : retf 1
0x000000000002b922 : retf 2
0x000000000002e4d5 : retf 3
0x000000000002d4c2 : retf 4
0x0000000000045b88 : retf 5
0x00000000000340e4 : retf 6
0x0000000000095c33 : retf 7
0x00000000000cbf4e : retf 8
0x0000000000114a65 : retf 9
0x000000000012f2d2 : rol ax, 8 ; ret
0x0000000000047613 : rol bl, 0x48 ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000b9ae5 : rol bl, 0x48 ; mov eax, edi ; ret
0x00000000000ba73c : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x00000000000aac6c : rol bl, 0x66 ; nop ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000a6f4c : rol bl, 0x66 ; nop ; ret
0x000000000012b6f0 : rol bl, 0x66 ; nop dword ptr [rax + rax] ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000000000e3730 : rol bl, 0x66 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000aa76e : rol bl, 0x83 ; ret 0x6620
0x000000000010b6fd : rol bl, 0x90 ; xor eax, eax ; pop rbx ; ret
0x000000000013ace7 : rol bl, 0xb8 ; add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000018d324 : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jl 0x18d33b ; neg eax ; ret
0x00000000000ce26a : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000873ec : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x00000000000926bc : rol bl, 1 ; nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000005362c : rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000000ce25f : rol bl, 1 ; nop dword ptr [rax] ; ret
0x00000000000ba24d : rol byte ptr [r9 + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x0000000000047c97 : rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x00000000000cf9a2 : rol byte ptr [rax + 0x42], cl ; str word ptr [rax + 0x29] ; retf 0x8948
0x00000000000a8af2 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00000000001861c6 : rol byte ptr [rax + 0x48], 1 ; clc ; sub rax, rdx ; vzeroupper ; ret
0x000000000018214b : rol byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x00000000000b0492 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000000ed2e7 : rol byte ptr [rax + 0xf00657b], cl ; xchg eax, ebp ; ret 0xd201
0x00000000000a0831 : rol byte ptr [rax + 0xf], 0x95 ; mov dword ptr [rbp + 0x38], 0x940f41d0 ; ret
0x000000000016c417 : rol byte ptr [rax + rax], cl ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000032bd5 : rol byte ptr [rax - 0x75], 1 ; cmp byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000d5478 : rol byte ptr [rax - 0x78f0f606], 1 ; ret
0x00000000000c63a4 : rol byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000008dd06 : rol byte ptr [rax], 0 ; add byte ptr [rbp + 0x4f0f48c9], al ; ret 0x8948
0x000000000008a817 : rol byte ptr [rax], 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000089fda : rol byte ptr [rax], 0 ; add byte ptr [rbx - 0x760e76cd], cl ; ret 0xe181
0x000000000018b25d : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000101c15 : rol byte ptr [rax], 0 ; setne al ; lea eax, [rax + rax*8 + 5] ; ret
0x000000000015262f : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call rax
0x00000000001526c9 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x00000000000815d5 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000009acb2 : rol byte ptr [rax], cl ; add byte ptr [rax], al ; call rax
0x000000000013fed0 : rol byte ptr [rbp + 0x31], cl ; in eax, dx ; xor ebx, ebx ; jmp 0x13fea2
0x0000000000151325 : rol byte ptr [rbp + 0x4cbc78d2], 0x89 ; loop 0x1512c5 ; xor cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000aa9b2 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x00000000000aad49 : rol byte ptr [rbp + 0xfd274c0], 1 ; mov ebp, 0xf80148c0 ; ret
0x000000000004afd5 : rol byte ptr [rbp - 0x3d71f02e], 1 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d44
0x000000000006d056 : rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x00000000000c6147 : rol byte ptr [rbp - 0x3f6af037], 0x85 ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00000000000ff601 : rol byte ptr [rbp - 0x3f6bf02e], 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000004e055 : rol byte ptr [rbp - 0x6971f02e], 1 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4a
0x0000000000050dd0 : rol byte ptr [rbp - 0x6a71f02e], 1 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4a
0x000000000002d784 : rol byte ptr [rbp - 0x75], 1 ; pop rbp ; adc byte ptr [rbp - 0x77], cl ; retf 0x149
0x00000000000cbc7f : rol byte ptr [rbp - 0x77], 1 ; ret 0x8348
0x00000000000a2d92 : rol byte ptr [rbp - 0x77], 1 ; retf
0x00000000000d5e88 : rol byte ptr [rbp - 0x7b], cl ; fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0x8d48
0x0000000000122bb4 : rol byte ptr [rbp - 0x7b], cl ; in al, 0xf ; xchg eax, ebp ; ret 0xdaf7
0x0000000000182552 : rol byte ptr [rbx + 0x14820c0], 0xf8 ; vzeroupper ; ret
0x0000000000182562 : rol byte ptr [rbx + 0x14840c0], 0xf8 ; vzeroupper ; ret
0x0000000000182572 : rol byte ptr [rbx + 0x14860c0], 0xf8 ; ret
0x00000000000eca37 : rol byte ptr [rbx + 0x3e740afb], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c5622 : rol byte ptr [rbx + 0x634801c0], cl ; retf 0xc283
0x000000000010c281 : rol byte ptr [rbx + 0x97404fa], 0xb8 ; sbb al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000026772 : rol byte ptr [rbx + 0xf4103fb], 0x94 ; rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x000000000018ff36 : rol byte ptr [rbx + 0xfc3ffd8], 0x1f ; add byte ptr [rax], r8b ; xor eax, eax ; ret
0x00000000000bc6b2 : rol byte ptr [rbx + rcx*4], 0x10 ; cmp edx, esi ; je 0xbc6c9 ; test edx, edx ; jne 0xbc6bb ; ret
0x00000000000bc6b2 : rol byte ptr [rbx + rcx*4], 0x10 ; cmp edx, esi ; je 0xbc6ca ; test edx, edx ; jne 0xbc6bc ; ret
0x00000000000568cb : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x0000000000103c11 : rol byte ptr [rbx - 0x19743], 0xff ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd009
0x00000000000a6868 : rol byte ptr [rbx - 0x2176c01e], 0x83 ; retf 0x8880
0x00000000000ecaa7 : rol byte ptr [rbx - 0x3f7cfd20], 8 ; ret
0x000000000012144c : rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x0000000000087641 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x000000000008998f : rol byte ptr [rbx - 0x6af0f808], cl ; ret 0xc283
0x000000000015e819 : rol byte ptr [rbx - 0x6bf00008], cl ; ret 0x1389
0x00000000000352d1 : rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x000000000012c3de : rol byte ptr [rbx - 0x7cb7fd18], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000133af5 : rol byte ptr [rbx - 0x7cbea817], 1 ; sti ; or dword ptr [rcx + 0xf], eax ; retf
0x00000000000ce4d2 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000013c161 : rol byte ptr [rbx], 0x25 ; cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret 0x149
0x0000000000147126 : rol byte ptr [rbx], 0x83 ; ret 0x8303
0x00000000000cbf15 : rol byte ptr [rcx + 0x29], 1 ; ret 0x2948
0x000000000012c888 : rol byte ptr [rcx + 0x5c], 0x5d ; ret
0x00000000000de1b5 : rol byte ptr [rcx + 0x5c], 1 ; pop r13 ; pop r14 ; ret
0x0000000000098fb6 : rol byte ptr [rcx + 0x5c], 1 ; ret
0x0000000000094510 : rol byte ptr [rcx + 0xf], 0x11 ; xor byte ptr [rax + 8], 0 ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000a0c2f : rol byte ptr [rcx + 0xf], 0x95 ; ret 0x3841
0x00000000000ba24e : rol byte ptr [rcx + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x00000000000a6e45 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0x3941
0x00000000000c6bbc : rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebx ; ret 0x844
0x000000000014ac7b : rol byte ptr [rcx + 0xf], 1 ; xchg eax, esi ; ror byte ptr [rcx + rdi - 0xd], 0xf ; xchg eax, ebx ; ret 0x841
0x00000000000a0838 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret
0x00000000000a6efb : rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x3941
0x00000000000c7a91 : rol byte ptr [rcx + 0xf], cl ; xchg eax, ebx ; ret 0x844
0x000000000012f2f4 : rol byte ptr [rcx + 0xfa], 0x80 ; cmovne eax, edi ; ret
0x0000000000026779 : rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x000000000013b242 : rol byte ptr [rcx + rcx*4 - 0x40], cl ; mov byte ptr [rdi + rdx], 0 ; ret
0x00000000000bb47d : rol byte ptr [rcx + rcx*4], 0x10 ; test edx, edx ; jne 0xbb480 ; ret
0x00000000000a69b2 : rol byte ptr [rcx - 0x48], 2 ; add byte ptr [rax], al ; add byte ptr [rbx + 0x458880c8], al ; ret 0xd889
0x00000000000f2fb4 : rol byte ptr [rcx - 0x77], 1 ; retf 0x1f0f
0x0000000000127d4e : rol byte ptr [rcx - 0x7d], 0xc0 ; add dword ptr [rbp + 0x440f45f6], eax ; retf
0x0000000000078c0c : rol byte ptr [rcx - 1], cl ; jrcxz 0x78b9f ; ret 0xc083
0x000000000015da09 : rol byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000000ce4b2 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000008bba8 : rol byte ptr [rcx], 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009e36d : rol byte ptr [rcx], 0 ; cmovne rax, rdx ; ret
0x00000000000ed084 : rol byte ptr [rcx], 0x39 ; ret 0xee7f
0x0000000000038b57 : rol byte ptr [rcx], 0x39 ; ret 0xf177
0x00000000000a0917 : rol byte ptr [rcx], 0x48 ; sub esi, 1 ; jne 0xa091a ; xor eax, eax ; ret
0x0000000000027abe : rol byte ptr [rcx], 0x50 ; call rbx
0x000000000012090d : rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x00000000000551f2 : rol byte ptr [rcx], 0x80 ; js 0x55201 ; add byte ptr [rbp - 0xa], dh ; pop rbx ; ret
0x000000000013bc2d : rol byte ptr [rcx], 0x84 ; fisttp dword ptr [rdi] ; ret 0x8b48
0x0000000000127d51 : rol byte ptr [rcx], 0x85 ; test byte ptr [rbp + 0xf], 0x44 ; retf
0x00000000001011b0 : rol byte ptr [rcx], 0x89 ; add edi, dword ptr [rcx] ; retf 0x840f
0x0000000000152762 : rol byte ptr [rcx], 0x89 ; ret
0x000000000008341d : rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0x7520
0x0000000000053b7a : rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x0000000000117f9f : rol byte ptr [rcx], 0xd9 ; ret 0x3941
0x0000000000044c6f : rol byte ptr [rcx], 0xf ; adc dword ptr [rdi], eax ; ret
0x00000000000a6f42 : rol byte ptr [rcx], 0xf ; mov esi, 0x75c98408 ; in eax, dx ; xor eax, eax ; ret
0x00000000000ea469 : rol byte ptr [rcx], 0xf ; mov esi, 0xc8dff50 ; retf 0x3948
0x00000000000a6df2 : rol byte ptr [rcx], 0xf ; mov esi, 0xc984070c ; jne 0xa6df2 ; ret
0x00000000000a6dae : rol byte ptr [rcx], 0xf ; mov esi, 0xd2840714 ; jne 0xa6db2 ; ret
0x00000000000a6e82 : rol byte ptr [rcx], 0xf ; mov esi, 0xf2390714 ; je 0xa6e8a ; ret
0x00000000000ba96f : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0x518d
0x0000000000062ed0 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000808ad : rol byte ptr [rcx], 1 ; ret 0x3944
0x000000000010c30c : rol byte ptr [rcx], cl ; ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x00000000000b66bc : rol byte ptr [rdi + rcx], 0x4b ; movsxd rcx, dword ptr [rbx + rax*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000012181d : rol byte ptr [rdi + rcx], 0xb7 ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000000ce512 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000001369ae : rol byte ptr [rdi], 0 ; mov rdi, r14 ; call 0x142ca8
0x00000000000d0b31 : rol byte ptr [rdi], 0x39 ; ret 0x77e
0x0000000000135291 : rol byte ptr [rdi], cl ; add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000ce4c2 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000018cc63 : rol byte ptr [rdx], 0 ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000013b3b6 : rol byte ptr [rdx], 0x45 ; mov dword ptr [rax], edx ; mov qword ptr [r9], rax ; mov eax, edx ; ret
0x000000000004b912 : rol byte ptr [rdx], 0x4d ; add edx, eax ; jmp 0x4b932
0x000000000004e852 : rol byte ptr [rdx], 0x4d ; add edx, eax ; jmp 0x4e872
0x00000000000515a2 : rol byte ptr [rdx], 0x4d ; add edx, eax ; jmp 0x515c2
0x00000000000ce479 : rol byte ptr [rdx], 0xc3 ; nop dword ptr [rax] ; add rax, 1 ; ret
0x00000000000a27bb : rol byte ptr [rdx], 1 ; add byte ptr [rcx - 9], al ; ret 0
0x000000000017a43a : rol byte ptr [rdx], cl ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000018b947 : rol byte ptr [rdx], cl ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00000000001216ed : rol byte ptr [rip + 0x48c0b70f], 0x8b ; push rsp ; ret 0x8940
0x00000000000ce502 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00000000001723cd : rol byte ptr [rsi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000a3b31 : rol byte ptr [rsi], 0x8b ; pop rbp ; mov byte ptr [rax + 0x6348c145], cl ; retf 0xd889
0x0000000000182cc5 : rol ch, 1 ; jns 0x182ca4 ; retf 0xead3
0x0000000000182e15 : rol ch, 1 ; jns 0x182df4 ; retf 0xead3
0x0000000000182f65 : rol ch, 1 ; jns 0x182f44 ; retf 0xead3
0x00000000001830b5 : rol ch, 1 ; jns 0x183094 ; retf 0xead3
0x0000000000183205 : rol ch, 1 ; jns 0x1831e4 ; retf 0xead3
0x0000000000183355 : rol ch, 1 ; jns 0x183334 ; retf 0xead3
0x00000000001834a5 : rol ch, 1 ; jns 0x183484 ; retf 0xead3
0x00000000001835f5 : rol ch, 1 ; jns 0x1835d4 ; retf 0xead3
0x0000000000183745 : rol ch, 1 ; jns 0x183724 ; retf 0xead3
0x0000000000183895 : rol ch, 1 ; jns 0x183874 ; retf 0xead3
0x00000000001839e5 : rol ch, 1 ; jns 0x1839c4 ; retf 0xead3
0x0000000000183b35 : rol ch, 1 ; jns 0x183b14 ; retf 0xead3
0x0000000000183c85 : rol ch, 1 ; jns 0x183c64 ; retf 0xead3
0x0000000000183dd5 : rol ch, 1 ; jns 0x183db4 ; retf 0xead3
0x0000000000183f25 : rol ch, 1 ; jns 0x183f04 ; retf 0xead3
0x0000000000184395 : rol ch, 1 ; jns 0x184374 ; retf 0xead3
0x0000000000184515 : rol ch, 1 ; jns 0x1844f4 ; retf 0xead3
0x0000000000184695 : rol ch, 1 ; jns 0x184674 ; retf 0xead3
0x0000000000184815 : rol ch, 1 ; jns 0x1847f4 ; retf 0xead3
0x0000000000184995 : rol ch, 1 ; jns 0x184974 ; retf 0xead3
0x0000000000184b15 : rol ch, 1 ; jns 0x184af4 ; retf 0xead3
0x0000000000184c95 : rol ch, 1 ; jns 0x184c74 ; retf 0xead3
0x0000000000184e15 : rol ch, 1 ; jns 0x184df4 ; retf 0xead3
0x0000000000184f95 : rol ch, 1 ; jns 0x184f74 ; retf 0xead3
0x0000000000185115 : rol ch, 1 ; jns 0x1850f4 ; retf 0xead3
0x0000000000185295 : rol ch, 1 ; jns 0x185274 ; retf 0xead3
0x0000000000185415 : rol ch, 1 ; jns 0x1853f4 ; retf 0xead3
0x0000000000185595 : rol ch, 1 ; jns 0x185574 ; retf 0xead3
0x0000000000185715 : rol ch, 1 ; jns 0x1856f4 ; retf 0xead3
0x0000000000185895 : rol ch, 1 ; jns 0x185874 ; retf 0xead3
0x00000000001821cf : rol ch, 1 ; std ; xlatb ; ret
0x0000000000185f46 : rol ch, cl ; std ; xlatb ; ret
0x00000000001861ef : rol ch, cl ; std ; xlatb ; ret 0xc085
0x00000000000d0abb : rol cl, cl ; cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x000000000011b68d : rol dh, 1 ; add al, byte ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x000000000018ca6a : rol dl, cl ; add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00000000000ce45c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x00000000001895ac : rol dword ptr [rax + 0x48000000], 0x39 ; retf 0xe175
0x00000000000ba528 : rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000181d94 : rol dword ptr [rax + 0x49], 0x29 ; retf
0x000000000016c597 : rol dword ptr [rax + rax], 1 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000126a53 : rol dword ptr [rax + rax], cl ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 4
0x000000000002a418 : rol dword ptr [rax + rcx*2], 0x83 ; ret
0x000000000013b0b2 : rol dword ptr [rax - 0x69f0fe07], cl ; ret 0x8341
0x000000000016d1e0 : rol dword ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000016b9eb : rol dword ptr [rax], 0 ; add byte ptr [rbp + rcx*4 + 0x1d], cl ; retf 0x4e1
0x000000000012c9c6 : rol dword ptr [rax], cl ; add byte ptr [rax], al ; leave ; ret
0x0000000000190eee : rol dword ptr [rbp + 0x29], cl ; ret 0x8944
0x0000000000182100 : rol dword ptr [rbp + 0x311b75c0], 0xc0 ; vzeroupper ; ret
0x00000000000aa794 : rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x00000000000aac37 : rol dword ptr [rbp + 0x317475c0], 0xc0 ; ret
0x00000000000aac66 : rol dword ptr [rbp + 0x317575c0], 0xc0 ; ret
0x00000000000a6f06 : rol dword ptr [rbp + 8], 0xca ; jne 0xa6efb ; cmp r8d, ecx ; je 0xa6efb ; ret
0x00000000001821c3 : rol dword ptr [rbp - 0x3a378a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000185c93 : rol dword ptr [rbp - 0x3a678a40], 0xfd ; xlatb ; ret 0xc085
0x00000000000aa764 : rol dword ptr [rbp - 0x5c7af040], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a6e50 : rol dword ptr [rbp - 0x7c], 0xca ; jne 0xa6e36 ; ret
0x0000000000181805 : rol dword ptr [rbx + 0x29497fe1], 1 ; retf 0xf983
0x00000000000dcbcc : rol dword ptr [rbx - 0x7df0f706], 1 ; retf 0
0x00000000000268e4 : rol dword ptr [rcx + 0x21], cl ; fucomi st(3) ; mov bl, 0x66 ; nop dword ptr [rax + rax] ; ret
0x000000000007a0a2 : rol dword ptr [rcx + 0x5c], 0x41 ; pop rbp ; mov rax, r9 ; pop r14 ; ret
0x0000000000192a52 : rol dword ptr [rcx + 0xf], 0x92 ; ret 0x3145
0x00000000000a08f8 : rol dword ptr [rcx + 0xf], 0x94 ; ret 0x8445
0x00000000000a2ae2 : rol dword ptr [rcx + 0xf], 1 ; xchg eax, ebx ; ret 0x845
0x000000000006f530 : rol dword ptr [rcx + rcx*2], 1 ; ret
0x0000000000080746 : rol dword ptr [rcx + rcx*4 - 0x28], 0xeb ; ror dword ptr [rbp - 0x77], cl ; retf 0x4090
0x00000000000a2841 : rol dword ptr [rcx + rcx*4 - 0x29], 0xc1 ; call qword ptr [rdx]
0x0000000000110e41 : rol dword ptr [rcx + rsi*8 - 1], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000be1c2 : rol dword ptr [rcx - 0x77], 1 ; ret
0x00000000000c3396 : rol dword ptr [rcx - 0x77], 1 ; ret 0xc085
0x00000000000a3806 : rol dword ptr [rcx - 0x7d], 1 ; enter 0x4480, -0x78 ; ret 0xb841
0x00000000000636bc : rol dword ptr [rcx - 0x80], cl ; int 0xc2
0x0000000000097250 : rol dword ptr [rcx], 0 ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000013662a : rol dword ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000ed3a3 : rol dword ptr [rcx], 0x39 ; ret 0xc675
0x00000000000a0a3f : rol dword ptr [rcx], 0x48 ; sub eax, 1 ; jne 0xa0a41 ; jmp 0xa0a1d
0x00000000000a0857 : rol dword ptr [rcx], 0x48 ; sub esi, 1 ; jne 0xa085a ; xor eax, eax ; ret
0x00000000000b7579 : rol dword ptr [rdi], cl ; add byte ptr [rax], al ; ret
0x00000000000b697f : rol dword ptr [rdx + 0xf], 1 ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000018b83e : rol dword ptr [rdx], cl ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000012d35e : rol dword ptr [rip + 0x440f4800], 0xc2 ; ret
0x000000000012fd2c : rol eax, 0x11 ; jmp 0x12fcf7
0x0000000000026418 : rol eax, 0x11 ; mov qword ptr [rip + 0x1c3d26], rax ; ret
0x000000000012f2d3 : rol eax, 8 ; ret
0x000000000004494d : rol eax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000185ede : rol ebp, 1 ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x0000000000185f3e : rol ebp, 1 ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x0000000000182875 : rol ebp, 1 ; stc ; xlatb ; ret 0xff2d
0x0000000000128e95 : rol ecx, 1 ; jmp 0xffffffff80d585b1
0x0000000000151053 : rol ecx, 1 ; jmp 0xffffffff80d8076f
0x000000000013c606 : rol esi, 0x45 ; ret
0x000000000013c605 : rol r14d, 0x45 ; ret
0x000000000012fd2b : rol rax, 0x11 ; jmp 0x12fcf8
0x0000000000026417 : rol rax, 0x11 ; mov qword ptr [rip + 0x1c3d26], rax ; ret
0x000000000004494c : rol rax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000011b68c : rol sil, 1 ; add al, byte ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x000000000016c596 : rol word ptr [rax + rax], 1 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000011254c : ror ah, 1 ; add byte ptr [rax + 0x23], bh ; syscall
0x0000000000054a74 : ror byte ptr [r9 - 0x76a7dbac], 1 ; ret 0x31e9
0x0000000000042dae : ror byte ptr [rax + 0x21], 0xd0 ; sub rax, rdx ; shr rax, 0x3f ; ret
0x000000000015e7a4 : ror byte ptr [rax + 0x21], 1 ; add al, 0xd7 ; xor eax, eax ; ret
0x0000000000094e06 : ror byte ptr [rax + 0x21], 1 ; retf 0x8d48
0x000000000004494e : ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x00000000000aa7e2 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0xaa829 ; add rax, rdi ; ret
0x00000000000aa7f2 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0xaa82b ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000aa802 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0xaa82b ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000aa812 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0xaa82b ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000ccd02 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0xccd49 ; add rax, rdi ; ret
0x00000000000ccd12 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0xccd4b ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000ccd22 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0xccd4b ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000ccd32 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0xccd4b ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000b0347 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000000ce17c : ror byte ptr [rax + 0x29], 1 ; clc ; shr rax, 2 ; ret
0x00000000000b07ce : ror byte ptr [rax + 0x29], 1 ; enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x0000000000088a91 : ror byte ptr [rax + 0x29], 1 ; ret
0x000000000002a5fb : ror byte ptr [rax + 0x29], cl ; ret 0x8348
0x000000000009cb79 : ror byte ptr [rax + 0x39], 0x77 ; or byte ptr [rdx + 8], dh ; mov qword ptr [rdi], rsi ; ret
0x0000000000182113 : ror byte ptr [rax + 0x39], 0xc2 ; jbe 0x18218c ; add rax, rdi ; vzeroupper ; ret
0x0000000000189b73 : ror byte ptr [rax + 0x39], 0xc2 ; jbe 0x189bec ; add rax, rdi ; vzeroupper ; ret
0x000000000010eb6e : ror byte ptr [rax + 0x39], 0xd1 ; seta al ; sbb eax, 0 ; ret
0x000000000012c3a1 : ror byte ptr [rax + 0x39], 0xf7 ; sete al ; ret
0x000000000012b7cc : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x000000000010c30e : ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x0000000000097963 : ror byte ptr [rax + 0x39], 1 ; ret
0x000000000010c89d : ror byte ptr [rax + 0x39], 1 ; ret 0x3575
0x00000000000e5daf : ror byte ptr [rax + 0x39], 1 ; retf 0x1a76
0x00000000000e4c89 : ror byte ptr [rax + 0x39], 1 ; retf 0x2776
0x0000000000151eb4 : ror byte ptr [rax + 0x39], 1 ; sub byte ptr [rsi + rax + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x000000000007278c : ror byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000002d778 : ror byte ptr [rax + 0x39], cl ; ret 0x8d0f
0x000000000005e26a : ror byte ptr [rax + 0x39], cl ; ret 0xe87f
0x0000000000082f2b : ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000012b6e8 : ror byte ptr [rax + 0x48], 0x39 ; sal byte ptr [rdx - 0xf], 1 ; xor eax, eax ; ret
0x00000000000c1bc8 : ror byte ptr [rax + 0x63], 1 ; ret
0x00000000000e9111 : ror byte ptr [rax + 0x63], 4 ; xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x00000000000f2373 : ror byte ptr [rax + 0x63], cl ; ret
0x00000000000ec6dc : ror byte ptr [rax + 0x63], cl ; retf
0x00000000001812ad : ror byte ptr [rax + 0x63], cl ; ror dword ptr [rax + 1], 0xd0 ; sub rax, rdi ; ret
0x00000000000550b5 : ror byte ptr [rax + 0xf], 0x44 ; ret
0x00000000000269d9 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x4864
0x00000000000cf74f : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x000000000012c912 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x00000000001424a4 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x00000000000d0b9e : ror byte ptr [rax + 0xf], 0x4f ; ret 0x8b48
0x000000000003373a : ror byte ptr [rax + 0xf], 1 ; ret 0x394c
0x000000000003372b : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x00000000000bea28 : ror byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000007620c : ror byte ptr [rax + 0xf], cl ; ret 0x9be9
0x000000000019210d : ror byte ptr [rax + 0xf], cl ; retf
0x000000000004ab74 : ror byte ptr [rax + 0xf], cl ; retf 0xf4c
0x0000000000185d46 : ror byte ptr [rax + 1], 0xc8 ; add rax, rdi ; vzeroupper ; ret
0x000000000018263c : ror byte ptr [rax + 1], 0xf8 ; add rax, r8 ; vzeroupper ; ret
0x00000000000aa88c : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x0000000000182238 : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; vzeroupper ; ret
0x00000000000aada8 : ror byte ptr [rax + 1], 0xf8 ; add rax, rsi ; ret
0x00000000000aa7b2 : ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000186193 : ror byte ptr [rax + 1], 0xf8 ; sub rax, rdx ; vzeroupper ; ret
0x0000000000182193 : ror byte ptr [rax + 1], 0xf8 ; vzeroupper ; ret
0x0000000000039803 : ror byte ptr [rax + 1], 1 ; ret
0x0000000000072524 : ror byte ptr [rax + 1], 1 ; retf 0x8d48
0x000000000013b3eb : ror byte ptr [rax + 1], 1 ; xlatb ; mov qword ptr [r9], rdi ; ret
0x0000000000037fee : ror byte ptr [rax + 1], cl ; ret 0x8b41
0x00000000000c724a : ror byte ptr [rax + 1], cl ; ret 0x8b48
0x00000000000b0344 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000000ce179 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; shr rax, 2 ; ret
0x000000000013a77a : ror byte ptr [rax + 1], cl ; ror dword ptr [rax - 0x77], cl ; pop rbp ; add dh, dh ; ret
0x00000000001927ab : ror byte ptr [rax + 9], 1 ; ror byte ptr [rcx - 0x77], 1 ; ret 0xf49
0x00000000001172bd : ror byte ptr [rax + rax], 1 ; ret
0x00000000000aaef5 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x00000000000b0286 : ror byte ptr [rax - 0x2d], 0xfa ; test rdx, rdx ; je 0xb02ac ; bsf rax, rdx ; ret
0x0000000000034c92 : ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x0000000000143651 : ror byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000075d19 : ror byte ptr [rax - 0x73], 0x34 ; ret
0x0000000000148de7 : ror byte ptr [rax - 0x73], 0x35 ; mov fs, word ptr [rcx - 0x76b3fffa] ; out 0x89, eax ; ret
0x0000000000045f55 : ror byte ptr [rax - 0x73], 0x41 ; adc byte ptr [rdi], cl ; sahf ; ret 0x3949
0x00000000000e3750 : ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x00000000000aa7a2 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x00000000000aa7d2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x00000000000aaca2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dh ; ret
0x00000000000aa7c2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x000000000009a24d : ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x0000000000112904 : ror byte ptr [rax - 0x73], 0x54 ; and al, 0x30 ; mov eax, 0x10 ; syscall
0x0000000000172c93 : ror byte ptr [rax - 0x73], 0x76 ; adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000172ccf : ror byte ptr [rax - 0x73], 0x76 ; adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000b0b40 : ror byte ptr [rax - 0x73], 0x76 ; adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0x13
0x0000000000145111 : ror byte ptr [rax - 0x73], 1 ; add eax, 0xa47e7 ; add rsp, 8 ; ret
0x0000000000187ce2 : ror byte ptr [rax - 0x73], 1 ; jl 0x187d05 ; and ecx, ebp ; ret
0x0000000000059ddb : ror byte ptr [rax - 0x73], 1 ; xor al, 0xc7 ; mov rdi, qword ptr [rsp + 0x10] ; call 0x568ac
0x000000000011aebc : ror byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rax + 0xf] ; ret 0xc148
0x0000000000146c6e : ror byte ptr [rax - 0x75], 0x4c ; and al, 8 ; call rcx
0x00000000001211a1 : ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000001457c6 : ror byte ptr [rax - 0x75], 0x74 ; and al, 0x18 ; mov rdi, rbp ; call r14
0x000000000009c5d3 : ror byte ptr [rax - 0x75], 1 ; push rdx ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x000000000013f65e : ror byte ptr [rax - 0x75], 5 ; ret 0xa47
0x000000000009cb93 : ror byte ptr [rax - 0x77], 0x37 ; ret
0x0000000000155d17 : ror byte ptr [rax - 0x77], 0x47 ; or byte ptr [rdi], cl ; adc dword ptr [rdi + 0x18], eax ; mov dword ptr [rdi + 0x28], edx ; ret
0x0000000000086395 : ror byte ptr [rax - 0x77], 0x48 ; adc byte ptr [rax - 0x77], cl ; push rax ; movups xmmword ptr [rax], xmm0 ; ret
0x00000000000a6c2c : ror byte ptr [rax - 0x77], 0xa ; ret
0x000000000014c808 : ror byte ptr [rax - 0x77], 0xd6 ; add rdi, 0x10 ; jmp rcx
0x00000000000a0dd4 : ror byte ptr [rax - 0x77], 0xd8 ; pop rbx ; cmovne rax, rdi ; ret
0x0000000000112ae0 : ror byte ptr [rax - 0x77], 0xe2 ; mov eax, ecx ; syscall
0x00000000000ceae8 : ror byte ptr [rax - 0x77], 0xe6 ; call 0x12c6cb
0x0000000000154416 : ror byte ptr [rax - 0x77], 0xe7 ; mov dword ptr [rsp], 2 ; call rdx
0x00000000000bbe5a : ror byte ptr [rax - 0x77], 0xef ; lea r9, [rsp + 0x30] ; call rbx
0x00000000000dc0cf : ror byte ptr [rax - 0x77], 1 ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000088c05 : ror byte ptr [rax - 0x77], 1 ; ret
0x000000000010c40b : ror byte ptr [rax - 0x77], 1 ; ret 0x3d48
0x000000000007bb82 : ror byte ptr [rax - 0x77], 1 ; ret 0x8348
0x0000000000032f58 : ror byte ptr [rax - 0x77], 1 ; ret 0x8349
0x000000000008e739 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x000000000005f975 : ror byte ptr [rax - 0x77], 1 ; ret 0x8d4d
0x000000000009fb56 : ror byte ptr [rax - 0x77], 1 ; ret 0x91e8
0x0000000000026982 : ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000193a46 : ror byte ptr [rax - 0x77], 1 ; ret 0xd148
0x0000000000041e62 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000000485b4 : ror byte ptr [rax - 0x77], 1 ; retf 0x8948
0x0000000000149772 : ror byte ptr [rax - 0x77], 1 ; retf 0xc148
0x0000000000117122 : ror byte ptr [rax - 0x77], 1 ; retf 0xc931
0x000000000014bdba : ror byte ptr [rax - 0x77], 2 ; mov eax, 1 ; ret
0x00000000001183aa : ror byte ptr [rax - 0x77], 3 ; pop rbx ; setne al ; movzx eax, al ; ret
0x000000000010c4c6 : ror byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; mov eax, ecx ; syscall
0x0000000000159772 : ror byte ptr [rax - 0x77], cl ; ret
0x00000000001496ee : ror byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000012d679 : ror byte ptr [rax - 0x77], cl ; retf 0x894c
0x0000000000181802 : ror byte ptr [rax - 0x77], cl ; rol dword ptr [rbx + 0x29497fe1], 1 ; retf 0xf983
0x000000000013a9dd : ror byte ptr [rax - 0x77], cl ; xor eax, eax ; ret
0x000000000008fb81 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x8fb96 ; ret
0x0000000000126076 : ror byte ptr [rax - 0x7b], 0xdb ; jne 0x126092 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001909ea : ror byte ptr [rax - 0x7b], cl ; fild dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x3145
0x000000000011831b : ror byte ptr [rax - 0x7d], 0x3e ; add byte ptr [rax - 0x77], cl ; je 0x11833b ; pop rbx ; ret
0x000000000008c192 : ror byte ptr [rax - 0x7d], 0x7f ; sbb byte ptr [rax], al ; setne al ; ret
0x000000000012c1aa : ror byte ptr [rax - 0x7d], 0xc0 ; add dword ptr [rax - 0x7d], ecx ; out dx, eax ; add dword ptr [rax + 0x39], ecx ; ret 0x1174
0x00000000001821b3 : ror byte ptr [rax - 0x7d], 0xc0 ; add rax, rdi ; vzeroupper ; ret
0x00000000001821a3 : ror byte ptr [rax - 0x7d], 0xc0 ; and byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x0000000000056340 : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000476de : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r14 ; ret
0x000000000008d3d4 : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; neg eax ; ret
0x00000000001446fa : ror byte ptr [rax - 0x7d], 0xc4 ; or bl, al ; mov eax, 1 ; ret
0x0000000000101968 : ror byte ptr [rax - 0x7d], 0xc4 ; or bl, al ; nop ; ret
0x00000000001605ff : ror byte ptr [rax - 0x7d], 0xc4 ; or bl, al ; nop dword ptr [rax] ; ret
0x000000000004704d : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000004896e : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000014cab1 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; add eax, 1 ; ret
0x000000000011dd54 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000147989 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x0000000000052ff4 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000010e993 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x000000000012c005 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d5b0ce0], al ; ret
0x000000000008d8a1 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000639c4 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x00000000000ff606 : ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0x00000000000aad02 : ror byte ptr [rax - 0x7d], 0xea ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x00000000001825a2 : ror byte ptr [rax - 0x7d], 0xea ; and byte ptr [rax + 1], cl ; ret 0x147c
0x00000000000aace2 : ror byte ptr [rax - 0x7d], 0xea ; and byte ptr [rax + 1], cl ; ret 0x347c
0x00000000000aacc2 : ror byte ptr [rax - 0x7d], 0xea ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x0000000000051eee : ror byte ptr [rax - 0x7d], 0xfa ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x2041
0x000000000011f378 : ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000013dfc9 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000047598 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4901
0x000000000008a9aa : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x000000000012a505 : ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000a4312 : ror byte ptr [rax - 0x7d], cl ; ret 0x4006
0x00000000000b5b76 : ror byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000c0dda : ror byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x00000000000b9e6b : ror byte ptr [rax - 0x7f], 0xc4 ; add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x00000000001824c9 : ror byte ptr [rax - 0x7f], 0xea ; add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret 0x8c0f
0x00000000000e3717 : ror byte ptr [rax - 0x7f], 0xfa ; jne 0xe379a ; add byte ptr [rax], al ; setne al ; ret
0x00000000000e36ea : ror byte ptr [rax - 0x7f], 0xfa ; push rsp ; push rbx ; setne al ; ret
0x00000000000933e1 : ror byte ptr [rax - 0x97ab7e9], cl ; je 0x9343d ; mov qword ptr [rsi], rdi ; ret
0x000000000015e908 : ror byte ptr [rax], 0x48 ; cmp edx, eax ; ja 0x15e909 ; xor eax, eax ; ret
0x00000000000e1d92 : ror byte ptr [rax], 0x83 ; ret 0x4f08
0x00000000000ecaac : ror byte ptr [rax], 0xc3 ; nop ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x0000000000056105 : ror byte ptr [rax], 0xe9 ; ret 0xfffe
0x00000000000b9f14 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x00000000000f1cd4 : ror byte ptr [rbp + 0x21], 1 ; retf
0x0000000000048bc6 : ror byte ptr [rbp + 0x39], 0xc8 ; jb 0x48bad ; xor eax, eax ; ret
0x00000000000d0dae : ror byte ptr [rbp + 0x480f0750], 1 ; ret 0x8341
0x00000000000cfb54 : ror byte ptr [rbp + 0x480f0750], 1 ; ret 0xfd83
0x00000000000d2585 : ror byte ptr [rbp + rcx*4 + 0x60], 1 ; dec dword ptr [rax - 0x77] ; ret 0x8d4a
0x0000000000101182 : ror byte ptr [rbp + rcx*4 + 5], 1 ; ret
0x00000000000a54bb : ror byte ptr [rbp - 0x73], 1 ; push rsp ; adc byte ptr ss:[rcx + 0xf], al ; xchg eax, ebx ; ret
0x00000000001494a5 : ror byte ptr [rbp - 0x75], 1 ; sbb dword ptr [rbp + 0x31], ecx ; ret 0x314d
0x00000000000f18e5 : ror byte ptr [rbp - 0x77], cl ; ret 0xf749
0x0000000000193ec4 : ror byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], 0x95 ; ret 0xc931
0x0000000000189741 : ror byte ptr [rbx + 0x75163b17], 0xe4 ; ret
0x000000000018a122 : ror byte ptr [rbx + 0xc3b170c], 0x16 ; jne 0x18a101 ; vzeroupper ; ret
0x0000000000149291 : ror byte ptr [rbx + rcx*4 + 0x5e], 1 ; adc byte ptr [rbp + 0x31], cl ; ret 0x314d
0x0000000000112de4 : ror byte ptr [rcx + 0x12eb8fe], cl ; add byte ptr [rax], al ; xor edi, edi ; syscall
0x00000000000c694a : ror byte ptr [rcx + 0x39480471], 1 ; retf
0x000000000010c8ff : ror byte ptr [rcx + 0x39], 1 ; ret 0x3375
0x00000000000c48d9 : ror byte ptr [rcx + 0x39], cl ; ror dword ptr [rdi], 0x9c ; ret 0x8d41
0x00000000000d8660 : ror byte ptr [rcx + 0x48482454], 0x8b ; jl 0xd863c ; call 0x2513c
0x000000000010b6a6 : ror byte ptr [rcx + 0x5d5b0453], 0x41 ; pop rsp ; ret
0x000000000008071a : ror byte ptr [rcx + 0xf], 1 ; ret
0x0000000000101936 : ror byte ptr [rcx + 0xf], cl ; int1 ; mov eax, ecx ; syscall
0x000000000002bfa9 : ror byte ptr [rcx + 1], 1 ; cmp cl, byte ptr [rax + 0x39] ; retf 0x8d0f
0x00000000000303e5 : ror byte ptr [rcx + 1], 1 ; sbb cl, byte ptr [rax + 0x39] ; retf 0x8d0f
0x0000000000190d62 : ror byte ptr [rcx + 9], cl ; fld dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x3145
0x0000000000048baf : ror byte ptr [rcx + rbp - 0x3a], 1 ; syscall
0x0000000000138392 : ror byte ptr [rcx + rcx - 0x40], 1 ; jne 0x13834b ; mov ebp, 0xfffffffe ; jmp 0x13836e
0x0000000000061b72 : ror byte ptr [rcx + rcx*4 + 0x2f], 0x5b ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000061a9e : ror byte ptr [rcx + rcx*4 + 0x37], 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000cec79 : ror byte ptr [rcx + rcx*4 + 0x7c], 0x24 ; push rax ; call rbx
0x00000000001493e2 : ror byte ptr [rcx + rcx*4 + 7], 1 ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000089a5a : ror byte ptr [rcx + rcx*4 - 0x19], 0x4c ; lea ecx, [rsp + 0x20] ; call rbx
0x0000000000089960 : ror byte ptr [rcx + rcx*4 - 0x19], 0x4c ; lea ecx, [rsp + 0x28] ; call rbx
0x0000000000143645 : ror byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbx ; mov rcx, r13 ; call r10
0x0000000000048ba9 : ror byte ptr [rcx + rcx*4 - 0x39], cl ; mov eax, r10d ; sub rsi, r8 ; syscall
0x000000000011fddd : ror byte ptr [rcx + rcx*4 - 0x3a], cl ; mov edi, ebx ; mov eax, 0x14 ; syscall
0x0000000000143298 : ror byte ptr [rcx + rcx*4 - 0xf], 0x4c ; mov edi, ebp ; call r12
0x0000000000120b93 : ror byte ptr [rcx + rdi - 0x39], 0xf ; xchg bl, dl ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0x3101
0x000000000014ac7f : ror byte ptr [rcx + rdi - 0xd], 0xf ; xchg eax, ebx ; ret 0x841
0x0000000000042ab4 : ror byte ptr [rcx - 0x24efdbbc], 1 ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x000000000009e8b9 : ror byte ptr [rcx - 0x39], cl ; ret
0x0000000000149389 : ror byte ptr [rcx - 0x3f], 0xe0 ; or byte ptr [rax - 0x77], cl ; ret 0x3149
0x00000000000788ad : ror byte ptr [rcx - 0x56f4b], 1 ; dec dword ptr [rax - 0x7d] ; ret 0x4420
0x0000000000125b81 : ror byte ptr [rcx - 0x73], 0x40 ; dec dword ptr [rax + 0x39] ; ret
0x00000000000c8683 : ror byte ptr [rcx - 0x73], cl ; jl 0xc86c9 ; adc al, 0xf ; xchg eax, ebx ; ret 0x3948
0x0000000000054a75 : ror byte ptr [rcx - 0x76a7dbac], 1 ; ret 0x31e9
0x00000000001927ae : ror byte ptr [rcx - 0x77], 1 ; ret 0xf49
0x00000000001496fb : ror byte ptr [rcx - 0x77], cl ; ret 0xc149
0x000000000010b749 : ror byte ptr [rcx - 0x7cb7fbad], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000010b488 : ror byte ptr [rcx - 0x7cb7ffa3], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000b575f : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x0000000000028b30 : ror byte ptr [rcx - 0x7d], cl ; cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf4e9
0x0000000000186ee8 : ror byte ptr [rcx - 0x7d], cl ; ret 0x4d20
0x000000000011d8cc : ror byte ptr [rcx], 0xd0 ; ret
0x00000000000feed8 : ror byte ptr [rcx], 1 ; ret
0x0000000000043f62 : ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x0000000000171acd : ror byte ptr [rdi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001560a1 : ror byte ptr [rdi], 0x11 ; and al, 0x28 ; call rdx
0x0000000000178e4f : ror byte ptr [rdi], 0x28 ; fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39d9d74
0x0000000000179ecf : ror byte ptr [rdi], 0x28 ; fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39dadf4
0x0000000000163f05 : ror byte ptr [rdi], 0x29 ; pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000065720 : ror byte ptr [rdi], 0x29 ; test dword ptr [rax - 0x16000005], edx ; ret 0xfffd
0x000000000011b7b0 : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x000000000010bec1 : ror byte ptr [rdi], 0x44 ; ret 0x8b48
0x0000000000117ad1 : ror byte ptr [rdi], 0x45 ; ret 0xc084
0x000000000007d923 : ror byte ptr [rdi], 0x45 ; retf 0x858b
0x0000000000047cc6 : ror byte ptr [rdi], 0x48 ; ret 0xfc3
0x0000000000113227 : ror byte ptr [rdi], 0x49 ; ret 0xfc3
0x000000000011ac27 : ror byte ptr [rdi], 0x84 ; adc al, byte ptr [rcx] ; add byte ptr [rax], al ; call rax
0x0000000000147aca : ror byte ptr [rdi], 0x84 ; add byte ptr [rcx], al ; add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x00000000000e20b0 : ror byte ptr [rdi], 0x84 ; add dword ptr [rax], 0x83480000 ; ret 0x480f
0x00000000001609aa : ror byte ptr [rdi], 0x84 ; add dword ptr [rcx], 0x89480000 ; ret
0x00000000000d5212 : ror byte ptr [rdi], 0x84 ; call qword ptr [rsi]
0x000000000007fc6a : ror byte ptr [rdi], 0x84 ; call rdx
0x000000000009add9 : ror byte ptr [rdi], 0x84 ; enter 0, 0 ; call rax
0x000000000015d61d : ror byte ptr [rdi], 0x84 ; imul eax, dword ptr [rcx], 0x89480000 ; ret
0x000000000011aa9c : ror byte ptr [rdi], 0x84 ; lea eax, [rax] ; add byte ptr [rax], al ; call rax
0x00000000000823bc : ror byte ptr [rdi], 0x84 ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000a0673 : ror byte ptr [rdi], 0x84 ; mov byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000010785e : ror byte ptr [rdi], 0x84 ; movabs byte ptr [0x89482f8b4d000000], al ; ret
0x00000000000822bd : ror byte ptr [rdi], 0x84 ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000012dc19 : ror byte ptr [rdi], 0x84 ; nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000812c1 : ror byte ptr [rdi], 0x84 ; popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000069305 : ror byte ptr [rdi], 0x84 ; ret
0x000000000009adef : ror byte ptr [rdi], 0x84 ; ret 0
0x000000000015f5e9 : ror byte ptr [rdi], 0x84 ; ret 0xa
0x000000000011bc41 : ror byte ptr [rdi], 0x84 ; ret 0xc
0x000000000007bc54 : ror byte ptr [rdi], 0x84 ; ret 0xe
0x00000000000dd881 : ror byte ptr [rdi], 0x84 ; ret 0xfffd
0x0000000000052b9e : ror byte ptr [rdi], 0x84 ; retf
0x000000000003490d : ror byte ptr [rdi], 0x84 ; retf 0
0x000000000006d7cd : ror byte ptr [rdi], 0x84 ; retf 0x33
0x000000000004e667 : ror byte ptr [rdi], 0x84 ; retf 0xf
0x000000000005db12 : ror byte ptr [rdi], 0x84 ; retf 1
0x0000000000126a59 : ror byte ptr [rdi], 0x84 ; retf 4
0x000000000014f60a : ror byte ptr [rdi], 0x84 ; retf 5
0x000000000009acaf : ror byte ptr [rdi], 0x84 ; rol byte ptr [rax], cl ; add byte ptr [rax], al ; call rax
0x0000000000136627 : ror byte ptr [rdi], 0x84 ; rol dword ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000008ad2b : ror byte ptr [rdi], 0x84 ; sahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000008a15b : ror byte ptr [rdi], 0x84 ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000008c986 : ror byte ptr [rdi], 0x84 ; stosd dword ptr [rdi], eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001597de : ror byte ptr [rdi], 0x84 ; xchg eax, edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000103ae2 : ror byte ptr [rdi], 0x84 ; xchg eax, esp ; sldt word ptr [rax] ; call 0x140599
0x00000000000aaba6 : ror byte ptr [rdi], 0x85 ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000001195c5 : ror byte ptr [rdi], 0x85 ; add byte ptr [rsi], al ; add byte ptr [rax], al ; mov rdi, qword ptr [r15] ; call r12
0x0000000000111373 : ror byte ptr [rdi], 0x85 ; add dword ptr [r8], eax ; add byte ptr [rbx - 0x2117c385], cl ; ret 0xffff
0x0000000000172c9a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000119569 : ror byte ptr [rdi], 0x85 ; cmp al, 7 ; add byte ptr [rax], al ; mov rdi, qword ptr [r15] ; call r12
0x00000000001194df : ror byte ptr [rdi], 0x85 ; jbe 0x1194f5 ; add byte ptr [rax], al ; mov rdi, qword ptr [r15] ; call r12
0x00000000001194b1 : ror byte ptr [rdi], 0x85 ; je 0x1194c5 ; add byte ptr [rax], al ; mov rdi, qword ptr [r15] ; call r12
0x0000000000181282 : ror byte ptr [rdi], 0x85 ; lahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6610
0x00000000000b4201 : ror byte ptr [rdi], 0x85 ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000007bc36 : ror byte ptr [rdi], 0x85 ; ret
0x000000000005ffc7 : ror byte ptr [rdi], 0x85 ; ret 0
0x00000000000b0b47 : ror byte ptr [rdi], 0x85 ; ret 0x13
0x0000000000078590 : ror byte ptr [rdi], 0x85 ; ret 0xa
0x00000000000355fe : ror byte ptr [rdi], 0x85 ; ret 2
0x00000000000f7cd1 : ror byte ptr [rdi], 0x85 ; retf
0x00000000000d7070 : ror byte ptr [rdi], 0x85 ; retf 0x11
0x000000000017ab4f : ror byte ptr [rdi], 0x85 ; retf 0xfff5
0x000000000017a96f : ror byte ptr [rdi], 0x85 ; retf 0xfff6
0x00000000000d1666 : ror byte ptr [rdi], 0x85 ; retf 0xfffc
0x00000000000dd12f : ror byte ptr [rdi], 0x85 ; retf 1
0x00000000001025ee : ror byte ptr [rdi], 0x85 ; retf 3
0x00000000000aac4e : ror byte ptr [rdi], 0x85 ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x79f0ef06], al ; ret 0
0x000000000018243c : ror byte ptr [rdi], 0x85 ; sub eax, 0xc5000001 ; std ; xlatb ; ret
0x000000000004bd71 : ror byte ptr [rdi], 0x87 ; retf 0xe
0x000000000008e92a : ror byte ptr [rdi], 0x88 ; ret
0x0000000000106c76 : ror byte ptr [rdi], 0x88 ; retf 0
0x000000000010e26f : ror byte ptr [rdi], 0x88 ; retf 1
0x0000000000135536 : ror byte ptr [rdi], 0x89 ; retf 0xfffe
0x0000000000088b36 : ror byte ptr [rdi], 0x8e ; ret
0x0000000000060d82 : ror byte ptr [rdi], 0x8e ; ret 0xfff4
0x0000000000095ef6 : ror byte ptr [rdi], 0x8e ; retf
0x00000000000881ef : ror byte ptr [rdi], 0x8e ; retf 0
0x000000000009cb61 : ror byte ptr [rdi], 0x92 ; ret 0xf083
0x00000000000d0f1d : ror byte ptr [rdi], 0x94 ; ret
0x0000000000102b9a : ror byte ptr [rdi], 0x94 ; ret 0x1589
0x000000000010e3c1 : ror byte ptr [rdi], 0x94 ; ret 0x2141
0x00000000000cf327 : ror byte ptr [rdi], 0x94 ; ret 0x3840
0x0000000000150604 : ror byte ptr [rdi], 0x94 ; ret 0x3d83
0x000000000013e9b1 : ror byte ptr [rdi], 0x94 ; ret 0xa3c
0x000000000006ae35 : ror byte ptr [rdi], 0x94 ; ret 0xb60f
0x00000000001813dc : ror byte ptr [rdi], 0x94 ; ret 0xc085
0x0000000000052ff1 : ror byte ptr [rdi], 0x94 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000e7434 : ror byte ptr [rdi], 0x95 ; ret
0x000000000010e843 : ror byte ptr [rdi], 0x95 ; ret 0x2141
0x0000000000193cd4 : ror byte ptr [rdi], 0x95 ; ret 0xc931
0x00000000000c0275 : ror byte ptr [rdi], 0x95 ; ret 0xceb
0x00000000000899c3 : ror byte ptr [rdi], 0x95 ; ret 0xd201
0x000000000005380d : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x0000000000149cba : ror byte ptr [rdi], 0x95 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000639f3 : ror byte ptr [rdi], 0x95 ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x00000000000e374d : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x0000000000148f3f : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000639f6 : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x00000000001019ef : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000000ba195 : ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x00000000000cfb4e : ror byte ptr [rdi], 1 ; mov bh, 0x47 ; adc byte ptr [rcx], ch ; ror byte ptr [rbp + 0x480f0750], 1 ; ret 0xfd83
0x00000000000efcb8 : ror byte ptr [rdi], 1 ; mov dh, 0x14 ; adc dword ptr [rcx], eax ; ret 0x428d
0x0000000000041e77 : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x41e60 ; ret
0x00000000000fac0b : ror byte ptr [rdi], 1 ; mov dh, 0x54 ; adc eax, 0x105c8d00 ; add dword ptr [rax + 0x63], ecx ; ret
0x00000000000f068d : ror byte ptr [rdi], 1 ; ret 0xf039
0x00000000000c5bcd : ror byte ptr [rdi], 1 ; test ah, bh ; add al, 0 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000151aba : ror byte ptr [rdi], 1 ; test byte ptr [rdi + 0x48000000], ah ; sub eax, -0x80 ; pop rbx ; ret
0x00000000001519fa : ror byte ptr [rdi], 1 ; test byte ptr [rdi + 0x5b000000], cl ; ret
0x0000000000156542 : ror byte ptr [rdi], 1 ; xchg eax, ebx ; ret 0xd108
0x000000000010cf7e : ror byte ptr [rdi], 5 ; cmp rax, -0x1000 ; ja 0x10cfeb ; ret
0x00000000001126f1 : ror byte ptr [rdi], 5 ; cmp rax, -0x1000 ; ja 0x11270b ; ret
0x000000000012e006 : ror byte ptr [rdi], 5 ; cmp rax, -0x1000 ; ja 0x12e023 ; ret
0x000000000007a9b1 : ror byte ptr [rdi], cl ; mov byte ptr [rsi - 0x9ffffe3], al ; ret 0xf40
0x000000000002c463 : ror byte ptr [rdi], cl ; mov byte ptr [rsi], dh ; add al, 0 ; add bh, dh ; ret 0xf800
0x0000000000027ab9 : ror byte ptr [rdi], cl ; mov dh, 0xc0 ; add eax, 1 ; push rax ; call rbx
0x00000000000aad4d : ror byte ptr [rdi], cl ; mov ebp, 0xf80148c0 ; ret
0x000000000004afd7 : ror byte ptr [rdi], cl ; mov es, edx ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d44
0x0000000000102b95 : ror byte ptr [rdi], cl ; mov esi, 0xfc085c0 ; xchg eax, esp ; ret 0x1589
0x0000000000193b7c : ror byte ptr [rdi], cl ; test byte ptr [rax], dh ; add eax, 0x89480000 ; ret 0xc148
0x00000000000b03eb : ror byte ptr [rdi], cl ; test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x00000000000b022b : ror byte ptr [rdi], cl ; test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000000c614e : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000190e8d : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd348
0x000000000009cb6a : ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd084
0x00000000000ff603 : ror byte ptr [rdi], cl ; xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0x00000000000ad410 : ror byte ptr [rsi], 0 ; mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000000f8854 : ror dl, 0xf2 ; dec dword ptr [rcx - 0x75] ; jg 0xf886e ; call 0x25322
0x0000000000054148 : ror dword ptr [rax + 0x29], 1 ; retf
0x000000000016a6f7 : ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x000000000008885c : ror dword ptr [rax + 0x29], cl ; ret
0x00000000001545fe : ror dword ptr [rax + 0x39], 1 ; retf 0xb875
0x00000000000f8a4d : ror dword ptr [rax + 0x63], 1 ; add al, 0x96 ; mov r11, rdi ; add rax, rsi ; jmp rax
0x00000000000e28c1 : ror dword ptr [rax + 0x63], cl ; ret
0x00000000000f2370 : ror dword ptr [rax + 0x63], cl ; ror byte ptr [rax + 0x63], cl ; ret
0x00000000000ec6d9 : ror dword ptr [rax + 0x63], cl ; ror byte ptr [rax + 0x63], cl ; retf
0x00000000000303e2 : ror dword ptr [rax + 0x63], cl ; ror byte ptr [rcx + 1], 1 ; sbb cl, byte ptr [rax + 0x39] ; retf 0x8d0f
0x00000000001812b0 : ror dword ptr [rax + 1], 0xd0 ; sub rax, rdi ; ret
0x0000000000181415 : ror dword ptr [rax + 1], 0xf8 ; ret
0x00000000001597c8 : ror dword ptr [rax + 1], cl ; ret
0x0000000000192156 : ror dword ptr [rax + 9], cl ; retf
0x000000000012e149 : ror dword ptr [rax + 9], cl ; retf 0xf48
0x0000000000058fb4 : ror dword ptr [rax - 0x39], 1 ; ret 0xffff
0x00000000000b0214 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0x8948
0x00000000000b0339 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf48
0x00000000000b04fa : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf4c
0x000000000005bd46 : ror dword ptr [rax - 0x3f], 0xe8 ; and byte ptr [rax + 9], cl ; retf 0x8948
0x00000000000d5a30 : ror dword ptr [rax - 0x73], 0x14 ; or dword ptr [rcx - 0x73], eax ; dec dword ptr [r8 + 1] ; retf 0x9848
0x0000000000045b6d : ror dword ptr [rax - 0x73], 0x41 ; adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x0000000000094f03 : ror dword ptr [rax - 0x73], 0x48 ; dec dword ptr [rcx + 9] ; jmp 0x49d37061
0x00000000000d58a1 : ror dword ptr [rax - 0x73], 4 ; mov byte ptr [rax + 1], cl ; ret 0x8d48
0x000000000005636b : ror dword ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], cl ; ret 0x8d48
0x000000000010935b : ror dword ptr [rax - 0x75], 0x3b ; call 0x105dc6
0x00000000000fdab2 : ror dword ptr [rax - 0x75], 1 ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x974
0x0000000000125ae6 : ror dword ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret 0x4801
0x00000000000eff5c : ror dword ptr [rax - 0x75], cl ; sub cl, byte ptr [rax - 0x7d] ; ret
0x0000000000056473 : ror dword ptr [rax - 0x77], 0x34 ; ret 0x8348
0x00000000000563d5 : ror dword ptr [rax - 0x77], 0xc ; ret 0x60e9
0x000000000012ef8c : ror dword ptr [rax - 0x77], 0xc6 ; add ecx, ecx ; jmp 0x8b1c8
0x00000000001135cd : ror dword ptr [rax - 0x77], 0xee ; mov edi, ebx ; mov eax, 0x127 ; syscall
0x000000000011367d : ror dword ptr [rax - 0x77], 0xee ; mov edi, ebx ; mov eax, 0x128 ; syscall
0x000000000005f410 : ror dword ptr [rax - 0x77], 1 ; ret 0x47e9
0x000000000005b7a4 : ror dword ptr [rax - 0x77], 1 ; retf 0x8b48
0x000000000013a77d : ror dword ptr [rax - 0x77], cl ; pop rbp ; add dh, dh ; ret
0x0000000000149735 : ror dword ptr [rax - 0x77], cl ; ret 0xc148
0x000000000014977f : ror dword ptr [rax - 0x77], cl ; retf 0x8348
0x0000000000149742 : ror dword ptr [rax - 0x77], cl ; retf 0xc148
0x000000000008631d : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x86316 ; ret
0x000000000009087d : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x90876 ; ret
0x00000000000e4770 : ror dword ptr [rax - 0x7d], 0xc0 ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000134fb8 : ror dword ptr [rax - 0x7d], 0xda ; add ecx, dword ptr [rax + 0x29] ; fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x0000000000127cad : ror dword ptr [rax - 0x7d], 1 ; ret
0x00000000000c85f2 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4102
0x000000000012beec : ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000181a73 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4c20
0x0000000000181a93 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4c40
0x0000000000181ab3 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4c60
0x000000000007522a : ror dword ptr [rax - 0x7d], 1 ; ret 0xe920
0x00000000000e1d8f : ror dword ptr [rax - 0x7d], 1 ; ror byte ptr [rax], 0x83 ; ret 0x4f08
0x0000000000074b6f : ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000011feee : ror dword ptr [rax - 0x7d], cl ; ret 0x4c02
0x00000000000f17be : ror dword ptr [rbp + 0x21], 1 ; retf
0x000000000008e858 : ror dword ptr [rbp + 0x29], 1 ; in eax, 0x83 ; retf 0x8310
0x00000000000ec049 : ror dword ptr [rbp + 0x39], cl ; fadd qword ptr [rcx + 0xf] ; xchg eax, ebx ; ret
0x00000000000ef43f : ror dword ptr [rbp + 0xf], 0x46 ; retf 0xdb85
0x0000000000150531 : ror dword ptr [rbp - 0x13], cl ; dec dword ptr [rax - 0x77] ; ret
0x0000000000149402 : ror dword ptr [rbp - 0x75], 1 ; push rcx ; sbb byte ptr [rbp - 0x75], cl ; pop rcx ; adc byte ptr [rcx + 0x31], cl ; retf 0x3149
0x000000000008074b : ror dword ptr [rbp - 0x77], cl ; retf 0x4090
0x00000000000fd9d9 : ror dword ptr [rbx - 0x1d7ef7b0], 1 ; inc dword ptr [rax] ; cld ; dec dword ptr [rcx] ; retf 0x5089
0x00000000001471ae : ror dword ptr [rbx - 0x76b7fbb0], 1 ; or ecx, dword ptr [rdi] ; retf 0x5389
0x00000000000ceeaf : ror dword ptr [rcx + 0x1fe8c1c8], 0x29 ; ret
0x00000000000cf376 : ror dword ptr [rcx + 0x1fe8c1c8], 0x29 ; ret 0x8944
0x00000000000feaf8 : ror dword ptr [rcx + 0x39], 1 ; retf
0x000000000014707d : ror dword ptr [rcx + 0x63], 0x14 ; mov byte ptr [rcx + rax - 0x3e], cl ; jmp rdx
0x00000000000a6fdc : ror dword ptr [rcx + 0x63], 0xc ; mov dword ptr [rcx + rax - 0x37], ecx ; jmp rcx
0x00000000000fdaf8 : ror dword ptr [rcx + 0x63], 1 ; adc al, 0x90 ; add rdx, r8 ; jmp rdx
0x000000000011883e : ror dword ptr [rcx + rcx*4 + 0x48], 1 ; or bl, ch ; ret 0x1f0f
0x00000000000792c4 : ror dword ptr [rcx + rcx*4 - 0x30], 1 ; jmp 0x79299
0x000000000011f528 : ror dword ptr [rcx + rcx*4 - 0xa], 0x89 ; fistp qword ptr [rax + 0x12b] ; syscall
0x000000000011403a : ror dword ptr [rcx + rcx*4 - 0xa], 0x89 ; fistp qword ptr [rax + 0x17] ; syscall
0x000000000011f7fa : ror dword ptr [rcx + rcx*4 - 0xa], 0x89 ; fistp qword ptr [rax + 0x46] ; syscall
0x0000000000097937 : ror dword ptr [rcx - 0x73], 0x78 ; dec dword ptr [rax - 0x7d] ; call 0xffffffffc342c14f
0x0000000000098147 : ror dword ptr [rcx - 0x73], 0x78 ; dec dword ptr [rax - 0x7d] ; call 0xffffffffc342c95f
0x000000000005ee23 : ror dword ptr [rcx - 0x77], 0x14 ; ret 0x8b48
0x0000000000113710 : ror dword ptr [rcx - 0x77], 0xca ; xor r8d, r8d ; mov eax, 0x147 ; syscall
0x0000000000113870 : ror dword ptr [rcx - 0x77], 0xca ; xor r8d, r8d ; mov eax, 0x148 ; syscall
0x00000000000fbf39 : ror dword ptr [rcx], 0xc8 ; jmp 0xfb51c
0x000000000018e527 : ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000029daf : ror dword ptr [rdi], 0x11 ; add rsp, 0x18 ; ret
0x00000000000cdae9 : ror dword ptr [rdi], 0x4f ; ret 0x66c3
0x0000000000127427 : ror dword ptr [rdi], 0x84 ; ret 0
0x0000000000102186 : ror dword ptr [rdi], 0x84 ; ret 0xfffc
0x000000000018bac8 : ror dword ptr [rdi], 0x85 ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000018c1d4 : ror dword ptr [rdi], 0x85 ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000018bfa6 : ror dword ptr [rdi], 0x85 ; add eax, 0xc0310000 ; ret
0x000000000018d0d0 : ror dword ptr [rdi], 0x85 ; cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000018bf26 : ror dword ptr [rdi], 0x85 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000018c264 : ror dword ptr [rdi], 0x85 ; je 0x18c274 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000018bd5b : ror dword ptr [rdi], 0x85 ; jno 0x18bd70 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000018be23 : ror dword ptr [rdi], 0x85 ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000018baa0 : ror dword ptr [rdi], 0x85 ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000193f8d : ror dword ptr [rdi], 0x86 ; insb byte ptr [rdi], dx ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf 0xc149
0x00000000000f23c7 : ror dword ptr [rdi], 0x8e ; retf 0
0x00000000000c48dc : ror dword ptr [rdi], 0x9c ; ret 0x8d41
0x00000000000aabd5 : ror dword ptr [rdi], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000018245e : ror dword ptr [rdi], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; vzeroupper ; ret
0x000000000003000b : ror dword ptr [rdi], 1 ; lea ebp, [rdx] ; add eax, 0x29480000 ; retf 0xe083
0x000000000002edd7 : ror dword ptr [rdi], 1 ; lea ebp, [rsi] ; add eax, 0x29480000 ; retf 0xe083
0x00000000000a6d17 : ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x00000000000c6bb6 : ror dword ptr [rdi], cl ; xchg eax, ebx ; ret 0x394c
0x00000000001946ad : ror dword ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000005497a : ror dword ptr [rdx], 0x8c ; and al, 0x91 ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; retf 0x7c83
0x0000000000026b96 : ror eax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000029b60 : ror eax, 0x11 ; xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000142638 : ror edi, 0x11 ; xor rdi, qword ptr fs:[0x30] ; call rax
0x00000000000472db : ror edx, 0x11 ; xor rdx, qword ptr fs:[0x30] ; call rdx
0x000000000008631c : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x86317 ; ret
0x000000000009087c : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x90877 ; ret
0x000000000008ad2e : sahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000009651e : sahf ; fcom dword ptr [rax + rax] ; mov qword ptr [rsp + 8], rdx ; xor edi, edi ; call qword ptr [rax]
0x00000000000dc90e : sahf ; hlt ; add al, 0 ; add rsp, 0x80 ; pop rbx ; ret
0x00000000000ddd66 : sahf ; jne 0xddd63 ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000001836ce : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000ebd2e : sahf ; ret
0x00000000000579b9 : sahf ; ret 0x3948
0x0000000000045f5b : sahf ; ret 0x3949
0x00000000000d5a95 : sahf ; ret 0x634d
0x000000000015ecee : sahf ; retf 0xfffc
0x00000000000cdae4 : sal bh, 0xd8 ; cmp ecx, r8d ; cmovg eax, edx ; ret
0x000000000018972e : sal bh, 0xd8 ; or eax, 1 ; vzeroupper ; ret
0x00000000000639f9 : sal bh, 0xd8 ; pop rbx ; ret
0x00000000000639cb : sal bh, 0xd8 ; ret
0x00000000000a8977 : sal bh, 1 ; ret 0x8000
0x00000000000a8837 : sal bh, 1 ; ret 0xc000
0x00000000000a86f7 : sal bh, 1 ; ret 0xe000
0x00000000000a85b7 : sal bh, 1 ; ret 0xf000
0x00000000000a8477 : sal bh, 1 ; ret 0xf800
0x00000000000a8337 : sal bh, 1 ; ret 0xfc00
0x00000000000a81f7 : sal bh, 1 ; ret 0xfe00
0x00000000000a80b7 : sal bh, 1 ; ret 0xff00
0x00000000000a7f77 : sal bh, 1 ; ret 0xff80
0x00000000000a7e37 : sal bh, 1 ; ret 0xffc0
0x00000000000a7cf7 : sal bh, 1 ; ret 0xffe0
0x00000000000a7bb7 : sal bh, 1 ; ret 0xfff0
0x00000000000a7a77 : sal bh, 1 ; ret 0xfff8
0x00000000000a7937 : sal bh, 1 ; ret 0xfffc
0x00000000000a77f7 : sal bh, 1 ; ret 0xfffe
0x0000000000192d66 : sal bh, cl ; shl byte ptr [rsi - 0x7f], cl ; ret 0x7fff
0x00000000001822cf : sal bl, 1 ; bsf eax, eax ; add rax, rdi ; vzeroupper ; ret
0x00000000000a0a11 : sal byte ptr [rax + 0x5b], 0x5d ; ret
0x00000000000ee3dc : sal byte ptr [rax + rax*8 + 0x4d], 0x89 ; retf 0xc031
0x00000000000c8dc5 : sal byte ptr [rax + rbx*2 + 0x48], 0x8d ; add r13b, cl ; ret
0x000000000015ca75 : sal byte ptr [rax + rdi - 0x39], 5 ; retf 0x8d4
0x0000000000149dcd : sal byte ptr [rax + rdx + 0x48], cl ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000031632 : sal byte ptr [rax + rdx - 0x7b], cl ; sar byte ptr [rdx], 0xf ; ret 0xc083
0x00000000000a6d0e : sal byte ptr [rax + rsi*2 + 0x44], 0x38 ; ret 0x4153
0x0000000000149ead : sal byte ptr [rbp + 0x10], 0x48 ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000011de9d : sal byte ptr [rbp + 0x10], 0xb8 ; adc al, 1 ; add byte ptr [rax], al ; syscall
0x000000000010b3bd : sal byte ptr [rbp + 0x10], 0xb8 ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000010b30d : sal byte ptr [rbp + 0x10], 0xb8 ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000011dffd : sal byte ptr [rbp + 0x10], 0xb8 ; adc eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000011f44d : sal byte ptr [rbp + 0x10], 0xb8 ; and byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x000000000011ddfd : sal byte ptr [rbp + 0x10], 0xb8 ; call 0xf11de0e
0x000000000011effd : sal byte ptr [rbp + 0x10], 0xb8 ; sub al, 0 ; add byte ptr [rax], al ; syscall
0x000000000011f4ed : sal byte ptr [rbp + 0x10], 0xb8 ; sub eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000011f59d : sal byte ptr [rbp + 0x10], 0xb8 ; xor eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000000e137a : sal byte ptr [rbp + 0x13], 0x45 ; xor edx, edx ; mov eax, 0x3d ; syscall
0x00000000001134ea : sal byte ptr [rbp + 0x13], 0xb8 ; adc al, 0 ; add byte ptr [rax], al ; syscall
0x000000000011344a : sal byte ptr [rbp + 0x13], 0xb8 ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000010d01a : sal byte ptr [rbp + 0x13], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000010d66a : sal byte ptr [rbp + 0x13], 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000e15ba : sal byte ptr [rbp + 0x13], 0xb8 ; and al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000e163a : sal byte ptr [rbp + 0x13], 0xb8 ; and eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001175ca : sal byte ptr [rbp + 0x13], 0xb8 ; sbb al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000011eb1a : sal byte ptr [rbp + 0x13], 0xb8 ; sub al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000011ea4a : sal byte ptr [rbp + 0x13], 0xb8 ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000011e0ba : sal byte ptr [rbp + 0x13], 0xb8 ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x000000000013b238 : sal byte ptr [rbp + 0x15], 0x44 ; mov eax, eax ; ret
0x0000000000150e6f : sal byte ptr [rbp + 0x15], 1 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000011358d : sal byte ptr [rbp + 0x18], 0x45 ; xor eax, eax ; mov eax, 0x127 ; syscall
0x000000000011363d : sal byte ptr [rbp + 0x18], 0x45 ; xor eax, eax ; mov eax, 0x128 ; syscall
0x00000000000e146d : sal byte ptr [rbp + 0x18], 0x45 ; xor eax, eax ; mov eax, 0xf7 ; syscall
0x0000000000043eea : sal byte ptr [rbp + 0x1f], 0x48 ; add esp, 0x118 ; ret
0x0000000000113028 : sal byte ptr [rbp + 0x22], 1 ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001120c9 : sal byte ptr [rbp + 0x24], 0x49 ; mov edx, ecx ; mov eax, 0x146 ; syscall
0x00000000000e2b4b : sal byte ptr [rbp + 0x2a], 0xb8 ; ja 0xe2b59 ; add byte ptr [rax], al ; syscall
0x0000000000113a6b : sal byte ptr [rbp + 0x2a], 0xb8 ; jb 0x113a79 ; add byte ptr [rax], al ; syscall
0x00000000000ddabb : sal byte ptr [rbp + 0x2a], 0xb8 ; je 0xddac9 ; add byte ptr [rax], al ; syscall
0x00000000000e2aab : sal byte ptr [rbp + 0x2a], 0xb8 ; jne 0xe2ab9 ; add byte ptr [rax], al ; syscall
0x00000000001139bb : sal byte ptr [rbp + 0x2a], 0xb8 ; jno 0x1139c9 ; add byte ptr [rax], al ; syscall
0x00000000000e281b : sal byte ptr [rbp + 0x2a], 0xb8 ; push 0 ; add byte ptr [rax], al ; syscall
0x0000000000186402 : sal byte ptr [rbp + 0x2b], 0x4c ; mov eax, eax ; vzeroupper ; ret
0x0000000000146b80 : sal byte ptr [rbp + 0x2d], 0x81 ; ret
0x000000000012c3c0 : sal byte ptr [rbp + 0x2d], 0xb8 ; and eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001948ed : sal byte ptr [rbp + 0x2d], cl ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r14 ; ret
0x00000000001140ec : sal byte ptr [rbp + 0x31], 0x49 ; mov eax, ebx ; mov eax, 0x10e ; syscall
0x000000000012c7a2 : sal byte ptr [rbp + 0x3b], 0xb8 ; out 0, al ; add byte ptr [rax], al ; syscall
0x000000000011964b : sal byte ptr [rbp + 0x41], 0x49 ; mov edi, dword ptr [rdi] ; call r12
0x000000000015e5be : sal byte ptr [rbp + 0x4f], 0x89 ; ret
0x00000000000752d5 : sal byte ptr [rbp + 0x52], 0x84 ; sal byte ptr [rsi + rcx*2 + 0x48], 0x63 ; retf
0x00000000001946c3 : sal byte ptr [rbp + 0x52], cl ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r14 ; ret
0x00000000000cf97b : sal byte ptr [rbp + 0x54], 0x48 ; add esp, 0xe0 ; pop rbx ; ret
0x000000000010ce49 : sal byte ptr [rbp + 0x65], 0xb8 ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x000000000014d60b : sal byte ptr [rbp + 0x7f], 1 ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000039c5b : sal byte ptr [rbp + 0xa], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000145162 : sal byte ptr [rbp + 0xb], 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000001462a2 : sal byte ptr [rbp + 0xb], 0x48 ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000140169 : sal byte ptr [rbp + 0xc], 0x5b ; pop rbp ; pop r12 ; ret
0x00000000001562f1 : sal byte ptr [rbp + 0xc], cl ; mov eax, 1 ; ret
0x00000000000632d0 : sal byte ptr [rbp + 0xd], 0x48 ; mov eax, ebx ; pop rbx ; ret
0x00000000000bb217 : sal byte ptr [rbp + 0xd], 0x48 ; mov eax, edi ; ret
0x00000000000d3328 : sal byte ptr [rbp + 0xd], 0x48 ; mov eax, edx ; add rsp, 8 ; ret
0x0000000000113d17 : sal byte ptr [rbp + 0xd], 1 ; add rsp, 0x28 ; ret
0x0000000000149d77 : sal byte ptr [rbp + 0xe], 0x48 ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013b32f : sal byte ptr [rbp + 0xe], 0x83 ; ret 0x3901
0x000000000002785a : sal byte ptr [rbp + 3], 0x83 ; retf
0x00000000000ba452 : sal byte ptr [rbp + 4], cl ; mov rax, rdi ; ret
0x00000000000ceb37 : sal byte ptr [rbp + 5], 1 ; add rsp, 0x28 ; ret
0x0000000000114826 : sal byte ptr [rbp + 5], 1 ; add rsp, 0x58 ; ret
0x0000000000156214 : sal byte ptr [rbp + 6], 1 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015077c : sal byte ptr [rbp + 6], 1 ; sub rsp, -0x80 ; pop rbx ; ret
0x0000000000034dee : sal byte ptr [rbp + 7], cl ; ret
0x0000000000043db1 : sal byte ptr [rbp + 8], 1 ; add rsp, 0x148 ; ret
0x000000000012bd91 : sal byte ptr [rbp + 8], 1 ; nop ; mov eax, 0xca ; syscall
0x000000000012b764 : sal byte ptr [rbp + 9], 0x48 ; cmp dword ptr [rdi], 0 ; je 0x12b781 ; ret
0x000000000008fb84 : sal byte ptr [rbp + 9], cl ; ret
0x0000000000026bfd : sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000009aa22 : sal byte ptr [rbp + rax + 0x48], cl ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x0000000000147591 : sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x00000000000ed625 : sal byte ptr [rbp + rax - 0x7d], 0xe1 ; add al, 0x75 ; push rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001519c9 : sal byte ptr [rbp + rax*4 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x000000000010c400 : sal byte ptr [rbp + rbp + 0x31], 0xd2 ; xor esi, esi ; mov rdi, rbx ; call rax
0x000000000012a5b0 : sal byte ptr [rbp + rbp + 0x48], 0x8b ; jp 0x12a611 ; mov rsi, rdx ; call rax
0x0000000000181410 : sal byte ptr [rbp + rbx*8 + 0x48], cl ; movsxd rax, ecx ; add rax, rdi ; ret
0x00000000000ce0e0 : sal byte ptr [rbp + rcx + 0x48], cl ; bsf eax, edx ; shr rax, 2 ; ret
0x00000000001158c9 : sal byte ptr [rbp + rdx + 0x48], 0x39 ; ret
0x00000000000ce458 : sal byte ptr [rbp + rdx - 0x78], cl ; rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x000000000012781e : sal byte ptr [rbp + rdx*8 + 0x4d], 0x8b ; ja 0x127865 ; jmp 0x1277f2
0x00000000000e2530 : sal byte ptr [rbp + rsi*2 + 0x48], 0x83 ; ret 0xc60f
0x000000000012bda1 : sal byte ptr [rbp - 0x10], 0x5a ; pop r10 ; ret
0x00000000000a6db5 : sal byte ptr [rbp - 0x10], cl ; ret
0x00000000000b9c50 : sal byte ptr [rbp - 0x13], cl ; lea rax, [rcx - 1] ; ret
0x0000000000086320 : sal byte ptr [rbp - 0x13], cl ; ret
0x00000000000a6cda : sal byte ptr [rbp - 0x15], cl ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00000000001390e5 : sal byte ptr [rbp - 0x18], 0x4c ; mov edi, edi ; call 0x25320
0x0000000000126949 : sal byte ptr [rbp - 0x1c], 0x48 ; add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000189fca : sal byte ptr [rbp - 0x1d], 0x29 ; enter -0x73b, 0x77 ; ret
0x00000000000a8c9b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000018190c : sal byte ptr [rbp - 0x1f], 0x29 ; enter -0x73b, 0x77 ; ret
0x000000000018a49f : sal byte ptr [rbp - 0x22], 0x29 ; enter -0x73b, 0x77 ; ret
0x0000000000181dd1 : sal byte ptr [rbp - 0x24], 0x29 ; enter -0x73b, 0x77 ; ret
0x0000000000041e7c : sal byte ptr [rbp - 0x27], cl ; ret
0x0000000000114d39 : sal byte ptr [rbp - 0x2c], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000114e2a : sal byte ptr [rbp - 0x2d], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000e6621 : sal byte ptr [rbp - 0x2d], cl ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013a9db : sal byte ptr [rbp - 0x2e], 1 ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00000000000e6713 : sal byte ptr [rbp - 0x2e], cl ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001821cd : sal byte ptr [rbp - 0x30], 0xc5 ; std ; xlatb ; ret
0x0000000000114f6b : sal byte ptr [rbp - 0x30], cl ; xor eax, eax ; pop rbx ; ret
0x00000000000dbeb7 : sal byte ptr [rbp - 0x35], 0x48 ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001821c5 : sal byte ptr [rbp - 0x38], 0xc5 ; std ; xlatb ; ret 0xc085
0x0000000000194953 : sal byte ptr [rbp - 0x39], cl ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r14 ; ret
0x00000000000c6b41 : sal byte ptr [rbp - 0x4e], 0x83 ; ret
0x0000000000185c9d : sal byte ptr [rbp - 0x50], 0xc5 ; std ; xlatb ; ret
0x000000000012e5e8 : sal byte ptr [rbp - 0x67], cl ; mov rax, rdi ; ret
0x0000000000185c95 : sal byte ptr [rbp - 0x68], 0xc5 ; std ; xlatb ; ret 0xc085
0x000000000012d5a6 : sal byte ptr [rbp - 0x6b], 0x48 ; mov eax, edi ; ret
0x00000000000efed6 : sal byte ptr [rbp - 0x70], cl ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000061c68 : sal byte ptr [rbp - 0x7c], 0x83 ; retf 0xebff
0x000000000009c5da : sal byte ptr [rbp - 0xd], cl ; ret
0x00000000000bc6bb : sal byte ptr [rbp - 0xe], cl ; ret
0x00000000000e119c : sal byte ptr [rbp - 0xf], 0x84 ; sal byte ptr [rdi + rax - 0x3a], 2 ; add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x0000000000092a8c : sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x0000000000146350 : sal byte ptr [rbx + 0x48], 0x8b ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x000000000010c492 : sal byte ptr [rbx + rbp + 0x31], 0xd2 ; call rax
0x0000000000083c7a : sal byte ptr [rbx + rbx + 0x48], 0x89 ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000bb569 : sal byte ptr [rbx + rbx*2 - 0x75], 0x46 ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000000ff162 : sal byte ptr [rbx + rcx + 0x31], 0xc0 ; ret
0x00000000001164d0 : sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x0000000000063a72 : sal byte ptr [rbx + rdi + 0x49], 0x89 ; retf 0x3cb9
0x00000000000a6e40 : sal byte ptr [rbx + rdx + 0x41], 0x39 ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0x3941
0x000000000012e4ac : sal byte ptr [rcx + rbx + 0x4c], 0x89 ; retf 0x8949
0x000000000013fa78 : sal byte ptr [rcx + rbx - 0x47], 0x10 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000013faa2 : sal byte ptr [rcx + rbx - 0x47], 8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x00000000000824b6 : sal byte ptr [rcx + rcx + 0x48], 0x8b ; mov edi, 0xe0 ; jmp rax
0x0000000000136e5e : sal byte ptr [rcx + rcx + 0x48], 0x8d ; cmp eax, 0xb2378 ; call rax
0x000000000014bc81 : sal byte ptr [rcx + rcx + 0x48], 0x8d ; mov ebx, 0xc8 ; call rax
0x00000000000b028c : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000015d80c : sal byte ptr [rcx + rsi + 0x48], 0x8b ; adc ecx, dword ptr [rax + 1] ; ret 0x3949
0x00000000000a031c : sal byte ptr [rcx + rsi*2 + 0x48], 3 ; add byte ptr [r8 - 0x77], r9b ; ret 0x1beb
0x000000000010cfaf : sal byte ptr [rcx], 0xc0 ; syscall
0x0000000000027ab5 : sal byte ptr [rcx], 0xc9 ; xor edx, edx ; movzx eax, al ; add eax, 1 ; push rax ; call rbx
0x000000000012b7ca : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x000000000012a5bb : sal byte ptr [rcx], 1 ; sal dh, 0x43 ; sbb al, 0x20 ; je 0x12a5da ; pop rbx ; ret
0x00000000000ba731 : sal byte ptr [rcx], 1 ; shl byte ptr [rip + 0x3fffc00], cl ; div ecx ; mov eax, eax ; ret
0x00000000001121f9 : sal byte ptr [rcx], cl ; idiv byte ptr [rax + 0x118] ; syscall
0x000000000010c404 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x77], 0xdf ; call rax
0x000000000010c431 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x77], 0xdf ; mov eax, 0x135 ; syscall
0x00000000000badce : sal byte ptr [rdi + 0x48], 0x89 ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000009afc6 : sal byte ptr [rdi + 0x48], 0x89 ; out dx, al ; mov rdi, rbx ; call rax
0x0000000000150cfe : sal byte ptr [rdi + 0x48], 0x89 ; ret
0x00000000000e0bb8 : sal byte ptr [rdi + rax - 0x3a], 2 ; add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x0000000000125321 : sal byte ptr [rdi + rcx + 0x48], 0x89 ; retf 0xb60f
0x0000000000082586 : sal byte ptr [rdi + rcx + 0x48], 0x8b ; mov edi, 0xe0 ; jmp rax
0x000000000014713e : sal byte ptr [rdi + rdi + 0x48], 0x8b ; adc ecx, dword ptr [rdi] ; retf 0x1089
0x00000000000ec58f : sal byte ptr [rdi + rdi - 0x7d], 0xc1 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000164789 : sal byte ptr [rdx + 0x14], 1 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000000b045b : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x00000000000ce0cb : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; shr rax, 2 ; ret
0x0000000000163e5b : sal byte ptr [rdx + 0xd], 1 ; movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000160e53 : sal byte ptr [rdx + rbx*8 + 0x5b], 0x31 ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000b07d3 : sal byte ptr [rdx + rdi - 0xa], cl ; ret 0x7501
0x00000000001580bb : sal byte ptr [rdx + rdx + 0x31], 0xdb ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b4fd3 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x00000000000aad4b : sal byte ptr [rdx + rdx*8 + 0xf], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000018c34f : sal byte ptr [rdx - 0x10f0992e], cl ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018c470 : sal byte ptr [rdx - 0x10f09930], 1 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x00000000000c532c : sal byte ptr [rdx - 0x5f], 1 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r14 ; ret
0x000000000012b6ec : sal byte ptr [rdx - 0xf], 1 ; xor eax, eax ; ret
0x0000000000091375 : sal byte ptr [rsi + 0x10], 0x48 ; mov eax, dword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x00000000000bb159 : sal byte ptr [rsi + rax + 0x48], 0x83 ; mov dword ptr [rbx + rbp*8], 0xc031c3ce ; ret
0x000000000014c86a : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x14c888 ; call rax
0x0000000000152aca : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x152ae8 ; call rax
0x0000000000153223 : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x153241 ; call rax
0x000000000014e95e : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x14e9d4 ; call rax
0x000000000014f3fe : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x14f464 ; call rax
0x00000000000a0aa7 : sal byte ptr [rsi + rcx + 0x48], 0x89 ; ret 0x8948
0x00000000000752d9 : sal byte ptr [rsi + rcx*2 + 0x48], 0x63 ; retf
0x00000000000aa887 : sal byte ptr [rsi + rdx + 0xf], 0xbc ; ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x00000000000dbf0a : sal byte ptr [rsp + rbp + 0x48], 0x89 ; ret
0x00000000001062a4 : sal byte ptr [rsp + rbp*4 + 0x5b], 0xb8 ; add eax, 0x5d000000 ; pop r12 ; ret
0x00000000001164a1 : sal byte ptr [rsp + rcx + 0x48], 0x83 ; ret 0x4808
0x000000000011ba31 : sal byte ptr [rsp + rcx + 0x48], cl ; cmp edi, edx ; jne 0x11ba34 ; mov rax, qword ptr [rax + 8] ; ret
0x000000000009d081 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x000000000011b613 : sal byte ptr [rsp + rdi + 0x48], 0x39 ; ret
0x000000000011fb01 : sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x000000000013facc : sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret 0x1be
0x00000000001825e9 : sal byte ptr [rsp + rdx*8 + 0xf], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; vzeroupper ; ret
0x00000000000efcd4 : sal byte ptr [rsp + rsi + 0x49], 0x63 ; ret 0xb60f
0x000000000012a5bd : sal dh, 0x43 ; sbb al, 0x20 ; je 0x12a5d8 ; pop rbx ; ret
0x000000000014130f : sal dh, 1 ; ret
0x0000000000127486 : sal dh, 1 ; ret 0x7502
0x00000000000613c8 : sal dh, 1 ; ret 0xf07
0x0000000000155c74 : sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x00000000000bb142 : sal dword ptr [rbx + rcx + 0x48], 0x83 ; ret 0x8b04
0x00000000000ecbc6 : sal dword ptr [rcx], 0xc0 ; and ecx, 1 ; jne 0xecb3e ; ret
0x00000000000a6c2a : sal dword ptr [rcx], 0xc0 ; mov qword ptr [rdx], rcx ; ret
0x000000000018c2af : sal dword ptr [rdx - 0x10f0992d], cl ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018c3ef : sal dword ptr [rdx - 0x10f0992f], 1 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000013f37b : sal dword ptr [rsi + rdx + 0x48], 0x83 ; ret
0x00000000000a6eb9 : sal dword ptr [rsp + rsi*8 + 0x39], 1 ; int1 ; je 0xa6eb7 ; ret
0x00000000000ba0f3 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000043176 : sal edi, 0xd8 ; or eax, ecx ; sar eax, 0x1f ; not eax ; and eax, edx ; ret
0x000000000018c2ae : sal qword ptr [rdx - 0x10f0992d], cl ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018c3ee : sal qword ptr [rdx - 0x10f0992f], 1 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000127485 : sal sil, 1 ; ret 0x7502
0x000000000002e6c4 : sar ah, 0xff ; dec dword ptr [rax - 0x77] ; retf
0x0000000000151e38 : sar ah, 1 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012d37d : sar al, 1 ; dec dword ptr [rax + 0xf] ; ret 0xfc3
0x00000000000586a5 : sar bh, 0xff ; ret
0x0000000000058665 : sar bh, 0xff ; sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000005885c : sar bh, 0xff ; sub eax, esi ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x000000000002823e : sar bh, 1 ; dec dword ptr [rax - 0x77] ; ret
0x000000000010b6f4 : sar byte ptr [rax + 0x11], 0x48 ; cmp ebx, eax ; pop rbx ; setl al ; ret
0x0000000000111aa9 : sar byte ptr [rax + 0x11d], cl ; mov rdx, rsi ; xor esi, esi ; syscall
0x000000000011dcd2 : sar byte ptr [rax + 0x121], cl ; mov edx, 8 ; syscall
0x000000000011fa52 : sar byte ptr [rax + 0x1d], cl ; syscall
0x00000000000ce980 : sar byte ptr [rax + 0x35], 0x83 ; clc ; sbb dword ptr [rdi + 0x18], edi ; mov rax, rbx ; pop rbx ; ret
0x00000000000e137f : sar byte ptr [rax + 0x3d], cl ; syscall
0x000000000015aee2 : sar byte ptr [rax + 0xb], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d7cd5 : sar byte ptr [rax + 0xd], 0x8b ; jl 0xd7d08 ; xor byte ptr [rcx - 0x77], al ; ret 0xc781
0x000000000013b7d7 : sar byte ptr [rax + 0xe], cl ; mov rax, rdx ; movsxd rdx, esi ; ret
0x00000000000efce5 : sar byte ptr [rax + 1], cl ; add rdx, rcx ; jmp 0xefd09
0x0000000000112795 : sar byte ptr [rax + 8], cl ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x00000000001133da : sar byte ptr [rax - 0x4a], 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000114743 : sar byte ptr [rax], 0x48 ; cmove eax, ebx ; pop rbx ; ret
0x000000000011db13 : sar byte ptr [rbx + rdx + 0x74], 1 ; ret
0x0000000000114713 : sar byte ptr [rcx + 3], 0xc6 ; add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x0000000000039455 : sar byte ptr [rcx - 0x38], 0x4d ; mov edi, esp ; jmp 0x3942e
0x00000000000c3440 : sar byte ptr [rcx], cl ; ret 0x1d74
0x00000000000d0b13 : sar byte ptr [rcx], cl ; ret 0x267e
0x000000000012a1da : sar byte ptr [rdi - 0x1d], 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000e12e4 : sar byte ptr [rdi - 1], cl ; mov eax, 0x3d ; syscall
0x000000000013b85d : sar byte ptr [rdx + 0x7fffffff], 1 ; cmovs eax, edx ; ret
0x00000000001293b2 : sar byte ptr [rdx + 1], 0xe8 ; or esi, 0xffffffff ; dec dword ptr [rcx] ; ret
0x0000000000044b28 : sar byte ptr [rdx + 1], cl ; cmove eax, edx ; ret
0x0000000000155d47 : sar byte ptr [rdx - 1], 0x48 ; mov esi, ebx ; mov rdi, rbp ; call rcx
0x0000000000031636 : sar byte ptr [rdx], 0xf ; ret 0xc083
0x0000000000181506 : sar byte ptr [rdx], cl ; cmp edx, ecx ; jle 0x1815ba ; ret
0x000000000009b387 : sar byte ptr [rsi + 0x26], 0x85 ; fisttp dword ptr [rdi] ; xchg eax, esp ; ret
0x000000000013c939 : sar byte ptr [rsi + 0x8912], 0x89 ; fucomip st(0) ; retf 0xfd6a
0x00000000001236dc : sar ch, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x000000000010f6eb : sar dh, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xc3f6
0x000000000006a7da : sar dl, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x000000000006dfdd : sar dl, 0xff ; push qword ptr [rcx] ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x000000000018d403 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x18d40e ; ret
0x00000000001154b7 : sar dword ptr [rax], 0xf ; xchg eax, esp ; ret 0xd108
0x00000000001167ab : sar dword ptr [rbp - 1], 1 ; inc dword ptr [rbp - 0x7cd28b40] ; ret
0x0000000000109741 : sar dword ptr [rbx - 0x76b3000f], cl ; imul eax ; retf
0x00000000000f6e80 : sar dword ptr [rbx], 0x9c ; and al, 0x9c ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; pushfq ; ret 0xd108
0x00000000000f550f : sar dword ptr [rcx], 1 ; enter -0x138e, -0x77 ; ret 0x3b44
0x00000000000dbd7f : sar dword ptr [rdi + rax + 0x75], cl ; retf
0x000000000011f685 : sar dword ptr [rdx], 1 ; cmovb rax, rdx ; ret
0x0000000000189289 : sar dword ptr [rsi + 0x7f], 0x23 ; vzeroupper ; ret
0x00000000001153f2 : sar dword ptr [rsp + rbx*2], 0xf ; xchg eax, esp ; ret 0xd108
0x0000000000042a88 : sar eax, 0x10 ; ret
0x000000000004317b : sar eax, 0x1f ; not eax ; and eax, edx ; ret
0x000000000015a8c4 : sar eax, 0x1f ; ret
0x0000000000042a38 : sar eax, 0x1f ; sub ecx, edx ; not eax ; and eax, ecx ; ret
0x0000000000043515 : sar eax, 0x3f ; not eax ; and eax, ecx ; ret
0x0000000000042d6a : sar eax, 0x3f ; not eax ; and eax, edx ; ret
0x00000000000eac95 : sar eax, 1 ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008732c : sar eax, 2 ; lea eax, [r8 - 1] ; ret
0x000000000008a082 : sar eax, 2 ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000087ae9 : sar eax, 2 ; ret
0x000000000012f18d : sar eax, 6 ; ret
0x00000000000d2a70 : sar ecx, 5 ; sub ecx, esi ; imul ecx, ecx, 0x64 ; cmp edi, ecx ; je 0xd2a8c ; ret
0x000000000014ca80 : sar edi, 0xff ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000047c14 : sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x0000000000047c27 : sar edx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x00000000000873d2 : sar edx, 2 ; sub eax, edx ; ret
0x0000000000159def : sar edx, 7 ; sub rdx, rsi ; add edx, ecx ; jmp 0x159d8c
0x00000000000aaef7 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00000000000b0288 : sar edx, cl ; test rdx, rdx ; je 0xb02aa ; bsf rax, rdx ; ret
0x00000000000b0288 : sar edx, cl ; test rdx, rdx ; je 0xb02ab ; bsf rax, rdx ; ret
0x00000000000b0457 : sar edx, cl ; test rdx, rdx ; je 0xb048a ; bsf rax, rdx ; ret
0x00000000000b0457 : sar edx, cl ; test rdx, rdx ; je 0xb048b ; bsf rax, rdx ; ret
0x00000000000efadd : sar esi, 0xff ; dec dword ptr [rbp - 0x77] ; retf 0xc0eb
0x000000000018e053 : sar esi, 1 ; jg 0x18e083 ; vzeroupper ; ret
0x000000000018e1de : sar esi, 1 ; jg 0x18e20e ; vzeroupper ; ret
0x000000000008732b : sar r8, 2 ; lea eax, [r8 - 1] ; ret
0x0000000000043514 : sar rax, 0x3f ; not eax ; and eax, ecx ; ret
0x0000000000042d69 : sar rax, 0x3f ; not eax ; and eax, edx ; ret
0x000000000008a081 : sar rax, 2 ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000087ae8 : sar rax, 2 ; ret
0x000000000012f18c : sar rax, 6 ; ret
0x0000000000047c26 : sar rdx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x00000000000873d1 : sar rdx, 2 ; sub eax, edx ; ret
0x0000000000159dee : sar rdx, 7 ; sub rdx, rsi ; add edx, ecx ; jmp 0x159d8d
0x00000000000aaef6 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00000000000b0287 : sar rdx, cl ; test rdx, rdx ; je 0xb02ab ; bsf rax, rdx ; ret
0x00000000000b0287 : sar rdx, cl ; test rdx, rdx ; je 0xb02ac ; bsf rax, rdx ; ret
0x00000000000b0456 : sar rdx, cl ; test rdx, rdx ; je 0xb048b ; bsf rax, rdx ; ret
0x00000000000b0456 : sar rdx, cl ; test rdx, rdx ; je 0xb048c ; bsf rax, rdx ; ret
0x000000000005ca23 : sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x00000000000f9595 : sbb al, 0 ; add byte ptr [rax + 0x63], cl ; retf 0x8b48
0x000000000010c288 : sbb al, 0 ; add byte ptr [rax], al ; syscall
0x000000000008ccfa : sbb al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000017f56a : sbb al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000017f4c3 : sbb al, 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x000000000002539b : sbb al, 0 ; mov qword ptr [rip + 0x1c4c0c], rdx ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000253a2 : sbb al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000026420 : sbb al, 0 ; ret
0x0000000000077fbd : sbb al, 0x13 ; add byte ptr [rax + 0x63], cl ; add al, 0x88 ; add rax, r14 ; jmp rax
0x00000000000780e9 : sbb al, 0x13 ; add byte ptr [rax + 0x63], cl ; add al, 0x90 ; add rax, r14 ; jmp rax
0x000000000012a5c0 : sbb al, 0x20 ; je 0x12a5d5 ; pop rbx ; ret
0x000000000012a5bf : sbb al, 0x20 ; je 0x12a5d6 ; pop rbx ; ret
0x0000000000150f1f : sbb al, 0x41 ; call qword ptr [rdx]
0x00000000001502ec : sbb al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x000000000008923d : sbb al, 0x48 ; add esp, 0x18 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00000000000b6019 : sbb al, 0x48 ; lea edi, [rdi + 0x1c] ; jne 0xb653b ; ret
0x00000000000b777d : sbb al, 0x48 ; lea edi, [rdi + 0x1c] ; jne 0xb7d5b ; ret
0x000000000013fdaf : sbb al, 0x48 ; lea edi, [rsp + 0x20] ; mov edx, r14d ; call 0x13c8bb
0x00000000000eaab3 : sbb al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000014e9f5 : sbb al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm2 ; ret
0x00000000000846d0 : sbb al, 0xd4 ; add byte ptr [rax], al ; mov eax, edi ; ret
0x000000000016a9e0 : sbb al, 0xe8 ; add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000015647c : sbb al, 0xf ; xchg eax, ebx ; ret 0x3948
0x0000000000167374 : sbb al, 5 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000158b19 : sbb al, byte ptr [r8] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000158b1a : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000005a14a : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x0000000000047ea9 : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000001175ce : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000017f74a : sbb al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000035533 : sbb al, byte ptr [rax] ; add rax, 0x200 ; mov qword ptr fs:[rdx], rax ; ret
0x0000000000035495 : sbb al, byte ptr [rax] ; add rax, qword ptr fs:[0] ; ret
0x0000000000048875 : sbb al, byte ptr [rax] ; add rsp, 8 ; ret
0x0000000000042105 : sbb al, byte ptr [rax] ; mov dword ptr fs:[rax], 0x2a ; mov rax, rcx ; ret
0x0000000000034d65 : sbb al, byte ptr [rax] ; mov qword ptr [rax], rdx ; ret
0x0000000000191a62 : sbb al, byte ptr [rdx + 0x63480002] ; add al, 0x81 ; add rcx, rax ; jmp rcx
0x0000000000167576 : sbb al, byte ptr [rip + 0x14634900] ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000ef5b9 : sbb al, byte ptr [rip - 0x7cb7ac8b] ; ret
0x000000000017f749 : sbb al, byte ptr fs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000027853 : sbb al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; fdivr st(7) ; inc dword ptr [rbp - 0x7cfc8a40] ; retf
0x00000000000f886d : sbb al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; retf 0xfff2
0x000000000010547f : sbb al, ch ; retf
0x000000000014a550 : sbb al, ch ; retf 0xedaa
0x00000000000f88f9 : sbb al, ch ; sbb edx, ecx ; dec dword ptr [rcx - 0x75] ; jg 0xf892f ; call 0x25324
0x00000000000eaaa3 : sbb bh, byte ptr [rax + 2] ; ret
0x00000000001284ea : sbb bh, byte ptr [rcx + 0x6348000b] ; ret 0x4864
0x00000000000c8a55 : sbb bh, byte ptr [rcx] ; ret
0x0000000000108c0f : sbb bl, byte ptr [rax + rcx*2 - 0x7d] ; ret
0x00000000000355f7 : sbb bl, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf 0xc085
0x00000000000b62da : sbb bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000b566a : sbb bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000028d6e : sbb byte ptr [eax], al ; call 0x34fd5
0x0000000000028d67 : sbb byte ptr [eax], al ; lea rdi, [rip + 0x1867a4] ; call 0x34fdc
0x00000000001474d7 : sbb byte ptr [r11 + 0xa7603f8], r8b ; mov eax, 2 ; ret
0x0000000000127ada : sbb byte ptr [r11 + r9*4 + 0x46], r8b ; sbb byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000008d920 : sbb byte ptr [r15], cl ; adc dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x00000000000420bc : sbb byte ptr [r15], r9b ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x000000000015da0f : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000155bd1 : sbb byte ptr [r8 + 1], r15b ; ret
0x000000000012a4d2 : sbb byte ptr [r8 - 0x75], r9b ; je 0x12a505 ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x00000000001261dc : sbb byte ptr [r8 - 0x77], cl ; imul ebx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000dbf06 : sbb byte ptr [r8 - 0x7b], cl ; sal byte ptr [rsp + rbp + 0x48], 0x89 ; ret
0x0000000000026bf9 : sbb byte ptr [r8 - 0x7b], r9b ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x00000000000de062 : sbb byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000125ae9 : sbb byte ptr [r8 - 0x7d], r9b ; ret 0x4801
0x000000000008da71 : sbb byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x110f
0x0000000000155f16 : sbb byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x3d], bl ; nop ; ret
0x0000000000140816 : sbb byte ptr [r8], al ; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000b9734 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000b9756 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000b9794 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x0000000000086729 : sbb byte ptr [r9 + rcx*4 - 0x1a], r8b ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000194d17 : sbb byte ptr [r9 - 0x75], r9b ; push rbp ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000009a60e : sbb byte ptr [r9 - 0x7d], al ; ret 0x4901
0x00000000000dbc91 : sbb byte ptr [r9], dil ; or al, 0x7c ; ret 0x850f
0x0000000000155f3c : sbb byte ptr [r9], r15b ; ja 0x155f6b ; jbe 0x155f5a ; add dword ptr [rdi + 0x28], esi ; ret
0x000000000010cedc : sbb byte ptr [rax + 0x101], bh ; syscall
0x0000000000114155 : sbb byte ptr [rax + 0x10e], bh ; mov edi, dword ptr [rsp + 0x14] ; syscall
0x0000000000041e74 : sbb byte ptr [rax + 0x31], cl ; ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x41e63 ; ret
0x0000000000127adf : sbb byte ptr [rax + 0x39], cl ; retf 0x840f
0x0000000000127ade : sbb byte ptr [rax + 0x39], r9b ; retf 0x840f
0x000000000015da10 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x00000000000d7500 : sbb byte ptr [rax + 0x63], cl ; ret 0x8944
0x000000000005583b : sbb byte ptr [rax + 0xf], cl ; retf 0xc084
0x0000000000155b6c : sbb byte ptr [rax + 1], bh ; mov dword ptr [rdi + 0x28], edx ; ret
0x0000000000155bd2 : sbb byte ptr [rax + 1], bh ; ret
0x00000000001947ef : sbb byte ptr [rax - 0x3f], cl ; out dx, eax ; xor byte ptr [rcx + 0x21], cl ; retf
0x0000000000095759 : sbb byte ptr [rax - 0x73], cl ; and byte ptr [r9 + 0x39], cl ; ret 0x850f
0x000000000014738b : sbb byte ptr [rax - 0x73], cl ; and byte ptr [rdi], cl ; retf 0x5089
0x00000000000b5f63 : sbb byte ptr [rax - 0x73], cl ; jg 0xb5f8b ; jne 0xb653b ; ret
0x00000000000b76b7 : sbb byte ptr [rax - 0x73], cl ; jg 0xb76df ; jne 0xb7d5b ; ret
0x000000000010b9c6 : sbb byte ptr [rax - 0x73], cl ; pushfq ; ret 0x8207
0x000000000012a4d3 : sbb byte ptr [rax - 0x75], cl ; je 0x12a504 ; adc byte ptr [rax + 1], cl ; ret 0x8948
0x00000000000913a0 : sbb byte ptr [rax - 0x75], cl ; je 0x913d5 ; adc byte ptr [rax - 0x75], cl ; jl 0x913da ; or bl, ch ; retf
0x000000000015e5c7 : sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x00000000001499ca : sbb byte ptr [rax - 0x76b704ad], cl ; ret 0xc148
0x0000000000114942 : sbb byte ptr [rax - 0x77], cl ; and al, 0x20 ; mov eax, 0x65 ; syscall
0x000000000003d3f0 : sbb byte ptr [rax - 0x77], cl ; and al, 8 ; mov qword ptr [rsp], rdx ; call 0x39ecc
0x000000000008d5e6 : sbb byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000083eea : sbb byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x00000000001261dd : sbb byte ptr [rax - 0x77], cl ; imul ebx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000090ad2 : sbb byte ptr [rax - 0x77], cl ; movups xmmword ptr [rdi + 8], xmm0 ; ret
0x00000000001456eb : sbb byte ptr [rax - 0x77], cl ; out dx, al ; mov rcx, rbx ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00000000001457cb : sbb byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x000000000009434e : sbb byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000129115 : sbb byte ptr [rax - 0x77], cl ; ret 0x2b49
0x0000000000088b2e : sbb byte ptr [rax - 0x77], cl ; retf
0x00000000000c91a2 : sbb byte ptr [rax - 0x77], cl ; retf 0x2b48
0x0000000000127091 : sbb byte ptr [rax - 0x77], cl ; retf 0x894c
0x0000000000026bfa : sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x00000000000dbf07 : sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rbp + 0x48], 0x89 ; ret
0x00000000000d6433 : sbb byte ptr [rax - 0x7bf0f706], al ; ret
0x00000000000964dc : sbb byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00000000000de063 : sbb byte ptr [rax - 0x7d], cl ; ret
0x0000000000125aea : sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000089241 : sbb byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000093dff : sbb byte ptr [rax - 9], cl ; fimul dword ptr [rax + 0x21] ; ret 0x8948
0x00000000000d94c7 : sbb byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000c6f14 : sbb byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x000000000004e361 : sbb byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000008da72 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x110f
0x0000000000155f17 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x3d], bl ; nop ; ret
0x000000000002b7df : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000101861 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000001711ce : sbb byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000720d3 : sbb byte ptr [rax], al ; add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x0000000000140817 : sbb byte ptr [rax], al ; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000028d6f : sbb byte ptr [rax], al ; call 0x34fd4
0x000000000002f367 : sbb byte ptr [rax], al ; call 0x34fda
0x000000000002f366 : sbb byte ptr [rax], al ; call 0x34fdb
0x0000000000028d68 : sbb byte ptr [rax], al ; lea rdi, [rip + 0x1867a4] ; call 0x34fdb
0x0000000000055df1 : sbb byte ptr [rax], al ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000063a25 : sbb byte ptr [rax], al ; neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000026c65 : sbb byte ptr [rax], al ; ret
0x000000000008c196 : sbb byte ptr [rax], al ; setne al ; ret
0x00000000000b9735 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000b9757 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000b9795 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x0000000000063198 : sbb byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000012a214 : sbb byte ptr [rbp + 0xf48000b], bl ; ret
0x00000000000ed13e : sbb byte ptr [rbp + 1], cl ; ret
0x000000000012e4df : sbb byte ptr [rbp + rcx*4 + 0x49], cl ; add dword ptr [rax + 0x39], ecx ; retf 0xe775
0x000000000014669a : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x40 ; call qword ptr [rax]
0x0000000000149406 : sbb byte ptr [rbp - 0x75], cl ; pop rcx ; adc byte ptr [rcx + 0x31], cl ; retf 0x3149
0x000000000004626c : sbb byte ptr [rbp - 0x7b], cl ; in al, 0xf ; xchg eax, ebp ; ret 0x8548
0x00000000001484a4 : sbb byte ptr [rbx + 0x4c04e83b], cl ; cld ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x0000000000148043 : sbb byte ptr [rbx + 0x5065e83b], cl ; cld ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x000000000012c009 : sbb byte ptr [rbx + 0x5d5b0ce0], al ; ret
0x00000000000bb7e5 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000010ca65 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000099738 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000026538 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000008b588 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000745c9 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000008b620 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000044e7b : sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000001474d8 : sbb byte ptr [rbx + 0xa7603f8], al ; mov eax, 2 ; ret
0x000000000009a5bf : sbb byte ptr [rbx + rcx*4 + 0x41], cl ; or byte ptr [rax - 0x75], cl ; adc byte ptr [r9 - 0x7d], al ; ret
0x0000000000127adb : sbb byte ptr [rbx + rcx*4 + 0x46], al ; sbb byte ptr [rax + 0x39], cl ; retf 0x840f
0x0000000000077fbc : sbb byte ptr [rbx + rdx], 0 ; movsxd rax, dword ptr [rax + rcx*4] ; add rax, r14 ; jmp rax
0x00000000000926b7 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000194592 : sbb byte ptr [rcx + 0x21], cl ; retf
0x000000000014928e : sbb byte ptr [rcx + 0x31], cl ; ror byte ptr [rbx + rcx*4 + 0x5e], 1 ; adc byte ptr [rbp + 0x31], cl ; ret 0x314d
0x000000000015d843 : sbb byte ptr [rcx + 0x39], cl ; retf 0x830f
0x0000000000093a16 : sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x00000000000965ee : sbb byte ptr [rcx + rcx*4 + 0x5c], cl ; and al, 8 ; call rcx
0x000000000009628c : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; mov qword ptr [rsp + 8], r11 ; call qword ptr [rax]
0x000000000008672a : sbb byte ptr [rcx + rcx*4 - 0x1a], al ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000e17c2 : sbb byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000080d29 : sbb byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008c947 : sbb byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013eb2f : sbb byte ptr [rcx - 0x73], cl ; jne 0x13eb3f ; mov rdi, r15 ; call 0x13b60a
0x0000000000194d18 : sbb byte ptr [rcx - 0x75], cl ; push rbp ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000dd48e : sbb byte ptr [rcx - 0x77], al ; pop rsp ; xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000127c62 : sbb byte ptr [rcx - 0x77], al ; retf 0x8341
0x000000000007a023 : sbb byte ptr [rcx - 0x77], cl ; ret 0x3948
0x000000000009a3af : sbb byte ptr [rcx - 0x7d], al ; ret
0x000000000009a60f : sbb byte ptr [rcx - 0x7d], al ; ret 0x4901
0x000000000014e9c9 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; adc dword ptr [rax + 8], eax ; ret
0x0000000000055ff0 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbx ; ret
0x0000000000043ef0 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000001121a9 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x0000000000155f3d : sbb byte ptr [rcx], bh ; ja 0x155f6a ; jbe 0x155f59 ; add dword ptr [rdi + 0x28], esi ; ret
0x00000000000dbc92 : sbb byte ptr [rcx], bh ; or al, 0x7c ; ret 0x850f
0x00000000000e83ff : sbb byte ptr [rcx], bh ; ret
0x000000000009a16a : sbb byte ptr [rcx], cl ; ret 0x5409
0x000000000005360c : sbb byte ptr [rcx], cl ; retf 0xbe0f
0x000000000008d600 : sbb byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000170b0d : sbb byte ptr [rdi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000008d921 : sbb byte ptr [rdi], cl ; adc dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x00000000000639c8 : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x00000000001260ee : sbb byte ptr [rdi], cl ; mov esi, 0xc48348c3 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000001471f1 : sbb byte ptr [rdi], cl ; retf 0x5389
0x0000000000103067 : sbb byte ptr [rdi], cl ; retf 0x8348
0x00000000000378af : sbb byte ptr [rdi], cl ; retf 0xd289
0x00000000000420bd : sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000e9c64 : sbb byte ptr [rdi], cl ; xchg dword ptr [rsi + rdi*8 - 0x7cb70001], esi ; ret 0xf01
0x000000000014a529 : sbb byte ptr [rdi], cl ; xchg eax, edi ; ret 0xd284
0x000000000014a99e : sbb byte ptr [rdi], cl ; xchg eax, edx ; ret 0x8b48
0x00000000000eb03b : sbb byte ptr [rdx + rdx*2 - 0x73], dh ; add qword ptr [rax - 0x7d], rcx ; ret
0x0000000000167764 : sbb byte ptr [rip + 0x14634900], al ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000012f319 : sbb byte ptr [rip + 0xffffff], ah ; or eax, edi ; bswap eax ; ret
0x00000000000ebf90 : sbb byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; enter 0xf66, -0x2c ; ret
0x0000000000120922 : sbb byte ptr [rsi - 0x7d], ah ; add byte ptr [rcx], al ; ret
0x0000000000120921 : sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x0000000000129114 : sbb byte ptr gs:[rax - 0x77], cl ; ret 0x2b49
0x00000000000d94c6 : sbb byte ptr ss:[rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000055876 : sbb cl, al ; call 0xffffffffc28e99a2
0x00000000000e83fc : sbb cl, al ; clc ; sbb byte ptr [rcx], bh ; ret
0x000000000009795d : sbb cl, byte ptr [rax + 0x29480614] ; ror byte ptr [rax + 0x39], 1 ; ret
0x00000000000303e8 : sbb cl, byte ptr [rax + 0x39] ; retf 0x8d0f
0x00000000000b5fbb : sbb cl, byte ptr [rax - 0x73] ; jg 0xb5fe5 ; jne 0xb653b ; ret
0x00000000000b771f : sbb cl, byte ptr [rax - 0x73] ; jg 0xb7749 ; jne 0xb7d5b ; ret
0x0000000000147155 : sbb cl, byte ptr [rax - 0x75] ; push rbx ; adc byte ptr [rdi], cl ; retf 0x5089
0x0000000000027658 : sbb cl, byte ptr [rax - 0x77] ; ret 0x8348
0x000000000010cacc : sbb cl, byte ptr [rax - 0x7d] ; in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000108ad8 : sbb cl, byte ptr [rax - 0x7d] ; ret
0x0000000000153d48 : sbb cl, byte ptr [rcx + 0x430f41c8] ; ret 0xf801
0x00000000000ec8e5 : sbb cl, byte ptr [rcx + 0x63] ; retf 0x8b45
0x000000000009d833 : sbb cl, byte ptr [rcx + rcx*4 - 0x30] ; pop rbx ; ret
0x00000000000c66ca : sbb cl, byte ptr [rcx - 0x7d] ; ret
0x000000000013b13f : sbb cl, byte ptr [rcx - 0x7d] ; ret 0x4502
0x0000000000030ded : sbb cl, byte ptr [rdi] ; mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x00000000000b5fbf : sbb cl, byte ptr [rdi] ; test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x000000000017c43d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000017e5ad : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017c02d : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x000000000017bb39 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017c349 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000183a6a : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000018328a : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000018367a : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000182e9a : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017f10d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017e8ed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000017bdbd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000017e0cd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000017c0fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x000000000017c419 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000183039 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017c4e9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017ec2d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017e40d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017dbed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000017edcd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000017c29d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000017ba8d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000017be8d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000018352a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000182d4a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000183e5a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017c36d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000017bb5d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000017df2d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017bbff : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017bf5d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x000000000017e063 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017ed63 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017e883 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018342b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000183d5b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017c1cd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000017f0a3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017e3a3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000017dec3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017ebc3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000018357b : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000182d9b : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017bc23 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000009f7cf : sbb cl, ch ; ret
0x00000000000c16c4 : sbb cl, ch ; retf 0xffee
0x0000000000088423 : sbb cl, ch ; retf 0xfffc
0x00000000001272aa : sbb dh, dh ; ret 0x7508
0x000000000012eb7f : sbb dh, dh ; ret 0x7520
0x000000000017f868 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000ea9f7 : sbb dword ptr [rax + 1], edi ; ret
0x00000000000b5f86 : sbb dword ptr [rax - 0x73], ecx ; jg 0xb5faf ; jne 0xb653b ; ret
0x00000000000b76ea : sbb dword ptr [rax - 0x73], ecx ; jg 0xb7713 ; jne 0xb7d5b ; ret
0x0000000000156fbe : sbb dword ptr [rax - 0x75], ecx ; add ecx, dword ptr [rbx - 0x7483dbac] ; or byte ptr [rcx], dil ; ret 0x5375
0x000000000015a72c : sbb dword ptr [rax - 0x7d], ecx ; ret
0x000000000006d65c : sbb dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000d9b8c : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000005d7e2 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf
0x000000000004b413 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000017f7f1 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017f869 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011e664 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000ae0ee : sbb dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000536dc : sbb dword ptr [rax], eax ; mov byte ptr [rax + rdx], 0 ; ret
0x0000000000044e27 : sbb dword ptr [rax], eax ; mov eax, edx ; ret
0x00000000000441c5 : sbb dword ptr [rax], eax ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000044195 : sbb dword ptr [rax], eax ; neg eax ; mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000044dd4 : sbb dword ptr [rax], eax ; ret
0x00000000001494a8 : sbb dword ptr [rbp + 0x31], ecx ; ret 0x314d
0x00000000000fe6ea : sbb dword ptr [rbx - 0x1f3efe20], eax ; add al, 0x89 ; ret 0xb60f
0x000000000011af83 : sbb dword ptr [rbx - 0x76b70010], esp ; ret
0x00000000001122b3 : sbb dword ptr [rcx - 0x76befff3], eax ; retf 0x8b
0x000000000013d916 : sbb dword ptr [rcx - 0x7d], eax ; ret 0x4101
0x00000000000ec0c5 : sbb dword ptr [rcx - 0x7d], ecx ; ret
0x00000000000bc68d : sbb dword ptr [rcx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000011dc27 : sbb dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000000ce985 : sbb dword ptr [rdi + 0x18], edi ; mov rax, rbx ; pop rbx ; ret
0x00000000000b70c3 : sbb dword ptr [rdi + rcx], edi ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000038489 : sbb dword ptr [rdi], ecx ; retf
0x00000000000b76ee : sbb dword ptr [rdi], ecx ; test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x00000000000c9363 : sbb dword ptr [rdx + 0x39480011], eax ; ret
0x0000000000164463 : sbb dword ptr [rdx + 5], ecx ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000e32ea : sbb dword ptr [rdx + rdi*4 + 0x7f], edx ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x56e9
0x00000000000e3504 : sbb dword ptr [rdx + rdi*4 + 0x7f], edx ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x00000000001676c6 : sbb dword ptr [rip + 0x14634900], eax ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000129b22 : sbb dword ptr [rsi + 3], edi ; mov rdi, r14 ; call 0x125d8b
0x000000000009e3e3 : sbb dword ptr [rsi + rcx + 0x440f4800], ebp ; ret 0xfc3
0x0000000000167223 : sbb dword ptr [rsi], ebx ; add eax, 0x14634900 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000017a0ac : sbb eax, -1 ; ret
0x00000000000b4c0d : sbb eax, -1 ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000823fd : sbb eax, 0 ; add byte ptr [rax], al ; call 0x8ee17
0x000000000010eb75 : sbb eax, 0 ; ret
0x0000000000145e66 : sbb eax, 0x18c48348 ; pop rbx ; pop rbp ; ret
0x00000000000b6045 : sbb eax, 0x1d7f8d48 ; jne 0xb653b ; ret
0x00000000000b77a9 : sbb eax, 0x1d7f8d48 ; jne 0xb7d5b ; ret
0x000000000018cf75 : sbb eax, 0x2bdc6 ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000018cefb : sbb eax, 0x2be40 ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000018ce6c : sbb eax, 0x2becf ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000018cc61 : sbb eax, 0x2c0da ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000018cb2f : sbb eax, 0x2c20c ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000018ca69 : sbb eax, 0x2c2d2 ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000018c9eb : sbb eax, 0x2c350 ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000018c954 : sbb eax, 0x2c3e7 ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000018c758 : sbb eax, 0x2c5e3 ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000018c627 : sbb eax, 0x2c714 ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000018c526 : sbb eax, 0x2c815 ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000018b945 : sbb eax, 0x2d2b6 ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000018b8cb : sbb eax, 0x2d330 ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000018b83c : sbb eax, 0x2d3bf ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000018b631 : sbb eax, 0x2d5ca ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000018b4ff : sbb eax, 0x2d6fc ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000018b439 : sbb eax, 0x2d7c2 ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000018b3bb : sbb eax, 0x2d840 ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000018b324 : sbb eax, 0x2d8d7 ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000018b128 : sbb eax, 0x2dad3 ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000018aff7 : sbb eax, 0x2dc04 ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000018aee8 : sbb eax, 0x2dd13 ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00000000001968fb : sbb eax, 0x3d830005 ; retf
0x0000000000111aab : sbb eax, 0x48000001 ; mov edx, esi ; xor esi, esi ; syscall
0x00000000000bae5f : sbb eax, 0x48000134 ; cmove eax, edx ; ret
0x0000000000114bb7 : sbb eax, 0x48000d32 ; add esp, 8 ; ret
0x00000000000b6049 : sbb eax, 0x4e0850f ; add byte ptr [rax], al ; ret
0x000000000019667d : sbb eax, 0x50ebe ; test rbx, rbx ; jne 0x196673 ; pop rbx ; ret
0x00000000000b77ad : sbb eax, 0x59c850f ; add byte ptr [rax], al ; ret
0x00000000001672d6 : sbb eax, 0x63490005 ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000b9150 : sbb eax, 0x634b000f ; or al, 0x83 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000011dabd : sbb eax, 0x78c48348 ; ret
0x0000000000119222 : sbb eax, 0x7d8b49 ; call r12
0x0000000000074b4d : sbb eax, 0x83480000 ; ret 0x4817
0x00000000000c2f41 : sbb eax, 0x89480000 ; retf 0xf66
0x000000000004ab4a : sbb eax, 0x894c0000 ; ret 0x8948
0x0000000000170d4e : sbb eax, 0x894d0000 ; retf
0x000000000015ca5f : sbb eax, 0x89fffb02 ; ret
0x00000000001840bf : sbb eax, 0x8b000154 ; or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000064f5c : sbb eax, 0x8d830000 ; enter -7, -1 ; add al, 0xe9 ; ret
0x00000000000f93d4 : sbb eax, 0xb347b ; movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x00000000001203b2 : sbb eax, 0xc3fa9 ; pop rbx ; ret
0x000000000012039c : sbb eax, 0xc3fbf ; pop rbx ; ret
0x000000000008482c : sbb eax, 0xc7480016 ; ret 0xffff
0x000000000008fb66 : sbb eax, 0xe5ebdf74 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000017f611 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017f689 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000117691 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000ade9e : sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000026ec5 : sbb eax, dword ptr [rax] ; add rax, qword ptr fs:[0] ; ret
0x0000000000026438 : sbb eax, dword ptr [rax] ; cmp qword ptr [rdx + 0xd8], rax ; jne 0x26412 ; ret
0x000000000003396d : sbb eax, dword ptr [rax] ; mov byte ptr [rip + 0x1b2f28], dl ; ret
0x0000000000027415 : sbb eax, dword ptr [rax] ; mov dword ptr fs:[rax], 9 ; mov eax, edi ; ret
0x0000000000030cf5 : sbb eax, dword ptr [rax] ; ret
0x0000000000029b74 : sbb eax, dword ptr [rax] ; test eax, eax ; je 0x29b86 ; ret
0x0000000000190474 : sbb eax, dword ptr [rbx - 0x7bf0ff07] ; retf 0
0x00000000000759b2 : sbb eax, dword ptr [rbx - 0x8d743] ; call qword ptr [rax]
0x000000000011e811 : sbb eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000001674c4 : sbb eax, dword ptr [rip + 0x14634900] ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000003396c : sbb eax, dword ptr cs:[rax] ; mov byte ptr [rip + 0x1b2f28], dl ; ret
0x000000000012c004 : sbb eax, eax ; add rsp, 0x18 ; and eax, 0xc ; pop rbx ; pop rbp ; ret
0x00000000000ecaa6 : sbb eax, eax ; and eax, 2 ; add eax, 8 ; ret
0x00000000000568ca : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x00000000001827f7 : sbb eax, eax ; or eax, 1 ; ret
0x000000000013a918 : sbb eax, eax ; ret
0x000000000018ff35 : sbb eax, eax ; sbb eax, -1 ; ret
0x00000000000b5fe9 : sbb ecx, dword ptr [rax - 0x73] ; jg 0xb6014 ; jne 0xb653b ; ret
0x00000000000b774d : sbb ecx, dword ptr [rax - 0x73] ; jg 0xb7778 ; jne 0xb7d5b ; ret
0x0000000000083c7c : sbb ecx, dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000146355 : sbb ecx, dword ptr [rax - 0x7d] ; ret
0x000000000012d844 : sbb ecx, dword ptr [rbp - 0x77] ; ret 0x3145
0x0000000000149811 : sbb ecx, dword ptr [rcx - 0x77] ; ret
0x00000000001422ef : sbb ecx, dword ptr [rdx] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000e28e9 : sbb edi, dword ptr [rcx] ; ret
0x00000000000a2d22 : sbb edi, dword ptr [rip - 0x8bf0000] ; ret 0
0x000000000004421c : sbb edi, dword ptr [rsi + 8] ; mov eax, 0x82 ; syscall
0x00000000000a8d4e : sbb edx, dword ptr [rax] ; add byte ptr [rdi + 0x63], cl ; or al, 0x8a ; lea r10, [r10 + r9] ; jmp r10
0x00000000000dff31 : sbb edx, dword ptr [rcx - 0xc] ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000058411 : sbb edx, ebx ; mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x00000000000f88fb : sbb edx, ecx ; dec dword ptr [rcx - 0x75] ; jg 0xf892d ; call 0x25322
0x000000000011608e : sbb esi, dword ptr [rbp + 0x9e80009] ; ret
0x0000000000043a6c : sbb esp, dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x00000000000e37de : sbb esp, esi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000058410 : sbb r10, r11 ; mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x00000000000e37dd : sbb r12, r14 ; dec dword ptr [rax - 0x77] ; ret
0x000000000005a149 : sbb r8b, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000017a0ab : sbb rax, -1 ; ret
0x00000000000b4c0c : sbb rax, -1 ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000001849bf : scasb al, byte ptr [rdi] ; adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001846bf : scasb al, byte ptr [rdi] ; adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001855bf : scasb al, byte ptr [rdi] ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000008a15e : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000017d592 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001858bf : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000183abe : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x0000000000026c73 : scasb al, byte ptr [rdi] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sbb byte ptr [rax], al ; ret
0x0000000000184fbf : scasb al, byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000184cbf : scasb al, byte ptr [rdi] ; or eax, 0x894d0000 ; retf
0x00000000000f8866 : scasb al, byte ptr [rdi] ; retf 0xfff2
0x000000000013690e : scasb al, byte ptr [rdi] ; sub byte ptr [rbx], cl ; add byte ptr [rcx - 0x3f], cl ; retf 0x6411
0x0000000000183bbd : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000036835 : scasd eax, dword ptr [rdi] ; add byte ptr [rbx], bl ; add byte ptr [rax + 1], cl ; retf 0x8948
0x00000000000fc7df : scasd eax, dword ptr [rdi] ; add rax, rdi ; jmp rax
0x000000000009e34d : scasd eax, dword ptr [rdi] ; mov cl, 0xe ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000008fb7e : scasd eax, dword ptr [rdi] ; nop ; xor eax, eax ; test rdx, rdx ; jne 0x8fb99 ; ret
0x00000000000a6abe : scasd eax, dword ptr [rdi] ; ret
0x0000000000148eed : scasd eax, dword ptr [rdi] ; ret 0
0x00000000000ba972 : scasd eax, dword ptr [rdi] ; ret 0x518d
0x00000000000453d3 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000012a3e5 : scasd eax, dword ptr [rdi] ; ret 0xc083
0x00000000001905d3 : scasd eax, dword ptr [rdi] ; ret 0xc148
0x00000000000420bf : scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000ba978 : scasd eax, dword ptr [rdi] ; ret 0xda89
0x00000000000ba986 : scasd eax, dword ptr [rdi] ; ret 0xe9e9
0x0000000000157af3 : scasd eax, dword ptr [rdi] ; retf 0x149
0x00000000000d876d : scasd eax, dword ptr [rdi] ; retf 0xfff4
0x000000000004534c : scasd eax, dword ptr [rdi] ; std ; add r15, qword ptr [rsp + 8] ; mov rsi, r15 ; call r14
0x00000000000b69a1 : scasd eax, dword ptr [rdi] ; str word ptr [rcx + 0x63] ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000120855 : seta al ; movzx eax, al ; neg eax ; ret
0x000000000010eb72 : seta al ; sbb eax, 0 ; ret
0x000000000012b7d0 : setae al ; ret
0x00000000000dbad4 : setbe al ; movzx eax, al ; ret
0x0000000000121450 : setbe al ; ret
0x00000000000d2a8f : sete al ; add eax, 0x16d ; ret
0x00000000000639c2 : sete al ; add rsp, 0x18 ; movzx eax, al ; neg eax ; ret
0x00000000000ff604 : sete al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000154368 : sete al ; add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000052ff2 : sete al ; add rsp, 8 ; movzx eax, al ; ret
0x00000000001446f8 : sete al ; add rsp, 8 ; ret
0x0000000000060af2 : sete al ; jmp 0x60abe
0x0000000000060d42 : sete al ; jmp 0x60d0e
0x00000000000e374b : sete al ; movzx eax, al ; lea rax, [rax + rax - 1] ; ret
0x0000000000154564 : sete al ; movzx eax, al ; ret
0x00000000000352d5 : sete al ; ret
0x000000000012c3dc : sete al ; sub eax, 2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000035a84 : sete bpl ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000035a85 : sete ch ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fbf37 : sete cl ; or eax, ecx ; jmp 0xfb51e
0x0000000000043b72 : sete dh ; xor eax, eax ; mov dword ptr [rbx + 0x40], esi ; pop rbx ; ret
0x000000000015e81d : sete dl ; mov dword ptr [rbx], edx ; pop rbx ; ret
0x0000000000043b71 : sete sil ; xor eax, eax ; mov dword ptr [rbx + 0x40], esi ; pop rbx ; ret
0x00000000000cca01 : setg al ; movzx eax, al ; lea eax, [rax + rax - 1] ; ret
0x000000000012ef8a : setg cl ; mov rsi, rax ; add ecx, ecx ; jmp 0x8b1ca
0x00000000000cc9ca : setl al ; movzx eax, al ; lea eax, [rax + rax - 1] ; ret
0x00000000000cdae2 : setl al ; neg eax ; cmp ecx, r8d ; cmovg eax, edx ; ret
0x000000000018972c : setl al ; neg eax ; or eax, 1 ; vzeroupper ; ret
0x000000000010b6fb : setl al ; ret
0x000000000011dd7c : setne al ; add rsp, 0x18 ; movzx eax, al ; neg eax ; ret
0x00000000000eca81 : setne al ; add rsp, 8 ; add eax, eax ; pop rbx ; pop rbp ; ret
0x000000000011dd52 : setne al ; add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x0000000000147987 : setne al ; add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000011620f : setne al ; add rsp, 8 ; movzx eax, al ; ret
0x0000000000101c18 : setne al ; lea eax, [rax + rax*8 + 5] ; ret
0x0000000000148f3d : setne al ; movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000639f4 : setne al ; movzx eax, al ; neg eax ; pop rbx ; ret
0x00000000001019ed : setne al ; movzx eax, al ; neg eax ; ret
0x0000000000044988 : setne al ; movzx eax, al ; ret
0x0000000000087645 : setne al ; neg eax ; ret
0x000000000008c198 : setne al ; ret
0x0000000000027404 : setne bh ; add rsp, 8 ; mov eax, edi ; neg eax ; ret
0x00000000000a6fa5 : setne bh ; test r9b, dil ; jne 0xa6f90 ; ret
0x00000000000a6e4e : setne cl ; test r10b, r9b ; jne 0xa6e38 ; ret
0x0000000000027403 : setne dil ; add rsp, 8 ; mov eax, edi ; neg eax ; ret
0x00000000000a6fa4 : setne dil ; test r9b, dil ; jne 0xa6f91 ; ret
0x00000000000bd8f2 : setne dl ; jmp 0xbd909
0x00000000000c0276 : setne dl ; jmp 0xc0289
0x00000000000c2ad3 : setne dl ; jmp 0xc2ae9
0x00000000000ca533 : setne dl ; jmp 0xca549
0x00000000000a6e4d : setne r9b ; test r10b, r9b ; jne 0xa6e39 ; ret
0x000000000008367d : sgdt [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000002e340 : sgdt [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000182574 : shl byte ptr [rax + 0x48], 1 ; clc ; ret
0x0000000000186212 : shl byte ptr [rax + 0x48], 1 ; clc ; sub rax, rdx ; vzeroupper ; ret
0x000000000018216b : shl byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x00000000001861a6 : shl byte ptr [rax], 0x48 ; add eax, edi ; sub rax, rdx ; vzeroupper ; ret
0x000000000018212b : shl byte ptr [rax], 0x48 ; add eax, edi ; vzeroupper ; ret
0x00000000001708cd : shl byte ptr [rcx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000ba733 : shl byte ptr [rip + 0x3fffc00], cl ; div ecx ; mov eax, eax ; ret
0x00000000000b9b6f : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x00000000000a75eb : shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x00000000000432a3 : shl byte ptr [rsi + 0xf], 0x7e ; ret 0xf8c1
0x0000000000043163 : shl byte ptr [rsi + 0xf], 0x7e ; ret 0xff25
0x0000000000156594 : shl byte ptr [rsi + 0xf], 0xc5 ; retf
0x000000000018e523 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000000afc85 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x00000000000f85c3 : shl byte ptr [rsi + 0xf], 0xef ; enter 0xf66, -0x11 ; ret 0x110f
0x000000000018c45b : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000018c472 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x00000000000435b8 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; and al, 0xc8 ; ret
0x00000000000ebe25 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; enter 0xf66, 0x6f ; call 0xffffffffc3e2cda4
0x00000000000b0026 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000000439ae : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x00000000000b0037 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000000aab98 : shl byte ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x00000000000ab2b0 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000018c351 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000117bdc : shl byte ptr [rsi + 0xf], cl ; ret 0x67a
0x0000000000192d68 : shl byte ptr [rsi - 0x7f], cl ; ret 0x7fff
0x00000000001148c1 : shl byte ptr [rsi], 0x64 ; mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000061d99 : shl dword ptr [rax + 0x15], cl ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000181c98 : shl dword ptr [rax + 0x49], 0x39 ; retf
0x0000000000121b19 : shl dword ptr [rbx], 0x4e ; adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000128e89 : shl dword ptr [rcx], 1 ; retf 0xe281
0x0000000000097403 : shl dword ptr [rcx], 1 ; retf 0xf989
0x00000000000b9b52 : shl dword ptr [rsi + 0x44], 0xf ; out dx, eax ; retf 0x4466
0x00000000000a75ef : shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x00000000000cce0b : shl dword ptr [rsi + 0xf], 0x76 ; retf 0xf66
0x00000000000431f3 : shl dword ptr [rsi + 0xf], 0x7e ; ret 0xf9c1
0x0000000000044c6b : shl dword ptr [rsi + 0xf], 0xc6 ; rol byte ptr [rcx], 0xf ; adc dword ptr [rdi], eax ; ret
0x00000000000cdcd9 : shl dword ptr [rsi + 0xf], 0xd7 ; retf 0xf66
0x00000000000b0022 : shl dword ptr [rsi + 0xf], 0xd7 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000000b99cb : shl dword ptr [rsi + 0xf], 0xda ; ret
0x000000000018c3d6 : shl dword ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018c48d : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000018c476 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000018c45f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000018af1b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017d6fe : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000018c3f1 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000aa5cc : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x00000000000aadb8 : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xf188
0x000000000018c2b1 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000014537e : shl dword ptr [rsi - 0x3f], 0xf9 ; xadd edx, edi ; adc ch, byte ptr [rcx] ; retf 0xc8d
0x00000000001515ed : shl dword ptr [rsi - 0x70], cl ; mov ebx, 0xffffffff ; jmp 0x1515ca
0x0000000000053628 : shl eax, 0x1e ; or eax, edx ; ret
0x000000000011d90b : shl eax, 0x20 ; and rax, rdi ; or rax, rsi ; ret
0x000000000013b5ba : shl eax, 3 ; shr rax, 4 ; and eax, 0x7f ; ret
0x000000000004490b : shl eax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000044983 : shl eax, cl ; test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x000000000005705c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000056fe7 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000056fb6 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000012f330 : shl edi, 0x10 ; movzx eax, si ; or eax, edi ; bswap eax ; ret
0x000000000012f317 : shl edi, 0x18 ; and eax, 0xffffff ; or eax, edi ; bswap eax ; ret
0x000000000012f34c : shl edi, 8 ; movzx eax, sil ; or eax, edi ; bswap eax ; ret
0x0000000000047c66 : shl edx, 0x20 ; or rax, rdx ; ret
0x00000000000f3d54 : shl edx, 2 ; xor esi, esi ; call 0x25229
0x000000000015e77c : shl edx, cl ; shr rax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x000000000013b5ef : shl esi, 4 ; lea rax, [rdi + rsi + 8] ; ret
0x00000000000585ba : shl esi, cl ; mov qword ptr [rdi], rsi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000005705b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000056fe6 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000056fb5 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000011d90a : shl rax, 0x20 ; and rax, rdi ; or rax, rsi ; ret
0x000000000004490a : shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000044982 : shl rax, cl ; test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x0000000000047c65 : shl rdx, 0x20 ; or rax, rdx ; ret
0x00000000000f3d53 : shl rdx, 2 ; xor esi, esi ; call 0x2522a
0x000000000013b5ee : shl rsi, 4 ; lea rax, [rdi + rsi + 8] ; ret
0x000000000013529a : shr al, 0 ; ret 0xfff4
0x0000000000129b03 : shr al, 0x37 ; ret
0x0000000000158b17 : shr al, 0x43 ; sbb al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001586ce : shr al, 0x5c ; retf 0xffec
0x0000000000129acd : shr al, 0x6d ; ret
0x0000000000046bb1 : shr al, 0x79 ; in eax, 0xfd ; dec dword ptr [rax - 0x77] ; ret
0x00000000001569d4 : shr al, 0x86 ; cmp eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001351b5 : shr al, 0xe5 ; ret 0xfff4
0x000000000015509d : shr al, 0xfd ; ret
0x000000000012b746 : shr ax, 0xe ; and eax, 1 ; ret
0x00000000000482ca : shr bl, 0xb3 ; mov eax, 0xffffffff ; ret
0x00000000000792c7 : shr bl, 1 ; retf 0xf66
0x000000000019473a : shr bl, cl ; retf
0x0000000000089ac1 : shr bl, cl ; retf 0x47e8
0x00000000000a8c9f : shr byte ptr [rcx], 0xc8 ; ret
0x0000000000117b30 : shr byte ptr [rcx], 1 ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000127baa : shr byte ptr [rcx], 1 ; retf 0xeec1
0x0000000000127b6e : shr byte ptr [rcx], 1 ; retf 0xefc1
0x0000000000030a00 : shr byte ptr [rcx], cl ; ret
0x00000000000d0acc : shr byte ptr [rcx], cl ; ret 0x428d
0x00000000000aaefb : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000000bbcca : shr byte ptr [rdx + 1], cl ; lea r9, [rsp + 0x20] ; call rbx
0x000000000004c945 : shr cl, 0x3f ; fdivp st(7) ; dec dword ptr [rbp - 0x77] ; ret 0x8949
0x00000000000712bc : shr cl, 0xdc ; retf
0x00000000000a46d1 : shr cl, cl ; ret 0xfffa
0x00000000000efdf7 : shr cl, cl ; test eax, 0xbdfffffc ; add eax, 0xe9000000 ; retf
0x000000000018e56e : shr dword ptr [rax - 0x267af0e0], 1 ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000154439 : shr dword ptr [rbp + 0x1f0ffffd], cl ; add byte ptr [rax + 1], bh ; ret
0x000000000005029b : shr dword ptr [rbp], 1 ; add byte ptr [rcx - 0x39], cl ; ret 0xc001
0x0000000000038d89 : shr dword ptr [rbx + 0x6ee9001a], cl ; ret
0x000000000008b739 : shr dword ptr [rbx], 0x4b ; adc byte ptr [rax + 1], cl ; retf 0x3948
0x000000000003396b : shr dword ptr [rsi], 1 ; sbb eax, dword ptr [rax] ; mov byte ptr [rip + 0x1b2f28], dl ; ret
0x000000000012f373 : shr eax, 0x10 ; cmp edx, 0x80000000 ; cmovne eax, edi ; ret
0x000000000012f382 : shr eax, 0x18 ; ret
0x0000000000127b76 : shr eax, 0x1f ; cmp dil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x0000000000127bb3 : shr eax, 0x1f ; cmp sil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x0000000000042a9b : shr eax, 0x1f ; ret
0x000000000018d31c : shr eax, 0x20 ; cmp ecx, eax ; jne 0x18d32f ; xor eax, eax ; ret
0x0000000000048ab1 : shr eax, 0x20 ; mov word ptr [rdi + 4], ax ; xor eax, eax ; ret
0x00000000001905d6 : shr eax, 0x38 ; ret
0x0000000000042d98 : shr eax, 0x3f ; ret
0x000000000011d8c8 : shr eax, 0xc ; xor al, al ; or eax, edx ; ret
0x00000000000ba61b : shr eax, 0xe ; and eax, 0x3fc00 ; ret
0x000000000012b747 : shr eax, 0xe ; and eax, 1 ; ret
0x00000000000ce06b : shr eax, 2 ; ret
0x000000000018aa23 : shr eax, 2 ; vzeroupper ; ret
0x000000000005c2ef : shr eax, 3 ; cmp rdi, 7 ; ja 0x5c2e4 ; mov rax, rsi ; ret
0x000000000004738d : shr eax, 3 ; lea r12, [rbx + rax*8 + 8] ; nop dword ptr [rax] ; call qword ptr [rbx]
0x00000000001966ec : shr eax, 3 ; lea rbp, [rbx + rax*8 + 8] ; nop dword ptr [rax] ; call qword ptr [rbx]
0x000000000013b5be : shr eax, 4 ; and eax, 0x7f ; ret
0x000000000008a3e8 : shr eax, 4 ; and eax, 1 ; mov edx, eax ; mov eax, edx ; ret
0x000000000008d2f2 : shr eax, 4 ; and eax, 1 ; ret
0x000000000005c2c7 : shr eax, 4 ; cmp rdi, 0xf ; ja 0x5c2bc ; mov rax, rsi ; ret
0x000000000008a3f8 : shr eax, 4 ; mov ecx, dword ptr [r8 + 4] ; and eax, 1 ; mov edx, eax ; jmp 0x8a3b5
0x000000000008a4d8 : shr eax, 5 ; and eax, 1 ; mov edx, eax ; mov eax, edx ; ret
0x000000000008d302 : shr eax, 5 ; and eax, 1 ; ret
0x000000000008a4e8 : shr eax, 5 ; mov ecx, dword ptr [r8 + 4] ; and eax, 1 ; mov edx, eax ; jmp 0x8a4a5
0x00000000000ba666 : shr eax, 6 ; and eax, 0x3fffc00 ; ret
0x000000000015e77f : shr eax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x00000000001211eb : shr eax, cl ; and eax, 1 ; ret
0x000000000011e26d : shr eax, cl ; and eax, 3 ; ret
0x00000000000a6d79 : shr ebx, 0xdf ; nop dword ptr [rax] ; ret
0x00000000000e7568 : shr ebx, cl ; adc eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000e7b0b : shr ebx, cl ; or eax, 0x83489066 ; ret
0x000000000004865f : shr ecx, 0x10 ; and ecx, 0x3ff ; xor eax, ecx ; ret
0x0000000000127bed : shr ecx, 0x1f ; cmp dil, cl ; cmovne eax, esi ; ret
0x0000000000127c24 : shr ecx, 0x1f ; cmp sil, cl ; cmovne eax, edx ; ret
0x000000000013b48d : shr ecx, 3 ; mov byte ptr [rax + 1], cl ; pop rbx ; ret
0x000000000015d3d1 : shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000097f90 : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x0000000000044877 : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000005716c : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x00000000000570f1 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00000000000570c0 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000144e9a : shr edx, 3 ; add rax, rcx ; jmp rax
0x000000000015e79f : shr edx, 6 ; not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x000000000005716b : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x00000000000570f0 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00000000000570bf : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000018d31b : shr rax, 0x20 ; cmp ecx, eax ; jne 0x18d330 ; xor eax, eax ; ret
0x0000000000048ab0 : shr rax, 0x20 ; mov word ptr [rdi + 4], ax ; xor eax, eax ; ret
0x00000000001905d5 : shr rax, 0x38 ; ret
0x0000000000042d97 : shr rax, 0x3f ; ret
0x000000000011d8c7 : shr rax, 0xc ; xor al, al ; or eax, edx ; ret
0x00000000000ce06a : shr rax, 2 ; ret
0x000000000018aa22 : shr rax, 2 ; vzeroupper ; ret
0x000000000004738c : shr rax, 3 ; lea r12, [rbx + rax*8 + 8] ; nop dword ptr [rax] ; call qword ptr [rbx]
0x000000000013b5bd : shr rax, 4 ; and eax, 0x7f ; ret
0x000000000015e77e : shr rax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x000000000013b48c : shr rcx, 3 ; mov byte ptr [rax + 1], cl ; pop rbx ; ret
0x0000000000144e99 : shr rdx, 3 ; add rax, rcx ; jmp rax
0x0000000000044c6c : shufpd xmm0, xmm0, 1 ; movups xmmword ptr [rdi], xmm0 ; ret
0x0000000000044c6d : shufps xmm0, xmm0, 1 ; movups xmmword ptr [rdi], xmm0 ; ret
0x00000000001885b5 : shufps xmm0, xmmword ptr [rdi + 2], 0 ; lea rax, [rdi + 2] ; vzeroupper ; ret
0x0000000000186b25 : shufps xmm0, xmmword ptr [rdi + 2], 0 ; vzeroupper ; ret
0x00000000000ba677 : sldt ecx ; call 0xffffffff83ce2f91
0x000000000011d8b3 : sldt word ptr [rax] ; and eax, 0xfffff000 ; or eax, edx ; ret
0x0000000000103ae6 : sldt word ptr [rax] ; call 0x140595
0x00000000000bd8e9 : sldt word ptr [rax] ; test r15d, r15d ; mov r14, rbp ; setne dl ; jmp 0xbd912
0x00000000000ca52a : sldt word ptr [rax] ; test r15d, r15d ; mov r14, rbp ; setne dl ; jmp 0xca552
0x00000000000436cb : stc ; adc al, 0 ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bb455 : stc ; add al, 0x48 ; cmovne eax, edx ; ret
0x000000000002ccf0 : stc ; add al, 0x74 ; and eax, 0x833fe283 ; retf 0x4180
0x000000000002b1a8 : stc ; add al, 0x74 ; xor cl, byte ptr [rcx - 0x73] ; add cl, byte ptr [rcx - 0x7d] ; ret
0x00000000000c720b : stc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000017d547 : stc ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000103e29 : stc ; add cl, byte ptr [rax - 0x77] ; ret 0x940f
0x0000000000148061 : stc ; add dword ptr [rbx + rcx + 0x48], esi ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013b0b4 : stc ; add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x8341
0x00000000000d2a71 : stc ; add eax, 0xc96bf129 ; cmp edi, ecx ; je 0xd2a8b ; ret
0x000000000009c183 : stc ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000166a43 : stc ; and eax, 0x63490005 ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000165183 : stc ; cmp al, 5 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000c65ff : stc ; dec dword ptr [rax + 0xf] ; iretd ; jmp 0xc65d8
0x0000000000087f8c : stc ; dec dword ptr [rax - 0x75] ; cmp byte ptr [r8 - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x0000000000086a73 : stc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000106a5a : stc ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000bd58b : stc ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000bfffd : stc ; dec dword ptr [rcx - 0x39] ; ret 0xc001
0x00000000000bd64d : stc ; dec dword ptr [rcx - 0x39] ; ret 0xfc01
0x00000000000c282d : stc ; dec dword ptr [rcx - 0x39] ; ret 0xff81
0x0000000000108de0 : stc ; dec dword ptr [rcx - 0x77] ; ret 0x8545
0x0000000000109697 : stc ; dec dword ptr [rcx - 0x77] ; ret 0x8948
0x00000000000a22c0 : stc ; dec dword ptr [rdi + rcx + 0x44] ; leave ; jmp 0xa2299
0x0000000000033846 : stc ; dec dword ptr [rdi] ; retf 0xd88
0x000000000004ec49 : stc ; dec dword ptr [rdi] ; test byte ptr [rdx], ah ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x0000000000101c13 : stc ; inc al ; add byte ptr [rax], al ; setne al ; lea eax, [rax + rax*8 + 5] ; ret
0x0000000000182b72 : stc ; je 0x182b3e ; lea r10, [r10 + r9] ; jmp r10
0x0000000000184202 : stc ; je 0x1841ce ; lea r10, [r10 + r9] ; jmp r10
0x0000000000053622 : stc ; je 0x5363e ; mov eax, ecx ; shl eax, 0x1e ; or eax, edx ; ret
0x000000000013b467 : stc ; jg 0x13b4eb ; sub eax, 0xe2c1ca89 ; add al, 0x83 ; ret 0x3908
0x00000000000ff738 : stc ; jmp qword ptr [rsi + 0xf]
0x00000000000fe236 : stc ; jmp rcx
0x00000000000a6faa : stc ; jne 0xa6f8b ; ret
0x000000000012091b : stc ; js 0x120936 ; add byte ptr [rax - 0x75], cl ; sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x000000000018860f : stc ; lea rax, [rdi + rdx] ; vzeroupper ; ret
0x00000000001660b8 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001660b2 : stc ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012d113 : stc ; mov esi, 0xf480005 ; ret 0xfc3
0x0000000000186b57 : stc ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + rdx - 7], r9 ; vzeroupper ; ret
0x00000000000a2701 : stc ; or al, 0x74 ; and ecx, dword ptr [rbp + 0x63490e78] ; ret 0xf41
0x0000000000162e77 : stc ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000163913 : stc ; or dword ptr [rax], ecx ; add byte ptr [rax + 0x39], cl ; retf 0x8949
0x0000000000077d7d : stc ; or dword ptr [rdi], ecx ; xchg byte ptr [rdi], cl ; adc eax, 0x89490000 ; ret 0x3145
0x00000000000571ad : stc ; push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x000000000013ff33 : stc ; push rcx ; out dx, al ; dec dword ptr [rax + 0x39] ; ret
0x000000000010d7d3 : stc ; retf
0x0000000000027373 : stc ; retf 0x1b
0x00000000001211ea : stc ; shr eax, cl ; and eax, 1 ; ret
0x0000000000044873 : stc ; sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000018d904 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000186b5f : stc ; vzeroupper ; ret
0x0000000000145381 : stc ; xadd edx, edi ; adc ch, byte ptr [rcx] ; retf 0xc8d
0x0000000000182877 : stc ; xlatb ; ret 0xff2d
0x0000000000094118 : std ; adc al, 0 ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x94133 ; call rax
0x0000000000094117 : std ; adc al, 0 ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x94134 ; call rax
0x00000000001694b7 : std ; add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000012c65e : std ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, edx ; syscall
0x00000000000520ce : std ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf
0x00000000000e34d3 : std ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x0000000000168c3f : std ; add eax, dword ptr [rip + 0x14634900] ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000004534d : std ; add r15, qword ptr [rsp + 8] ; mov rsi, r15 ; call r14
0x00000000000d876b : std ; call 0x25223
0x0000000000046bb5 : std ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e3a15 : std ; dec dword ptr [rax - 0x77] ; ret 0x1e9
0x00000000000551ad : std ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000047afd : std ; dec dword ptr [rax - 0x77] ; sub byte ptr [rax - 0x77], cl ; ret
0x0000000000042c1d : std ; fstp st(1) ; ret
0x00000000001823b0 : std ; je 0x182419 ; and ch, al ; std ; xlatb ; ret
0x000000000018249e : std ; je 0x182507 ; and ch, al ; std ; xlatb ; ret
0x0000000000186ee1 : std ; je 0x186f44 ; and ch, al ; std ; xlatb ; ror byte ptr [rcx - 0x7d], cl ; ret 0x4d20
0x00000000001879a0 : std ; je 0x187a03 ; and ch, al ; std ; xlatb ; ror byte ptr [rcx - 0x7d], cl ; ret 0x4d20
0x00000000001886ad : std ; je 0x188710 ; and ch, al ; std ; xlatb ; ror byte ptr [rcx - 0x7d], cl ; ret 0x4d20
0x000000000017f4df : std ; lahf ; add dword ptr [rax], eax ; mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000001885eb : std ; lea rax, [rdi + rdx] ; vzeroupper ; ret
0x000000000005adfc : std ; lea rdi, [rdi + rax*8] ; call 0x57077
0x00000000001885e7 : std ; mov dword ptr [rdi + rdx - 3], ecx ; lea rax, [rdi + rdx] ; vzeroupper ; ret
0x0000000000186b47 : std ; mov dword ptr [rdi + rdx - 3], ecx ; vzeroupper ; ret
0x00000000001658db : std ; mov word ptr [rdi - 2], cx ; ret
0x000000000017f1df : std ; movabs byte ptr [0x82048b8a0c8b0001], al ; sub eax, ecx ; ret
0x000000000009e640 : std ; or al, 0 ; cmovne rax, rdx ; ret
0x0000000000089256 : std ; or dh, byte ptr [rcx + rdi*4 + 0x48] ; add esp, 0x18 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000034a02 : std ; pop rbx ; pop rbp ; mov rax, r13 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009c455 : std ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011e16f : std ; pop rsp ; or al, 0 ; mov edx, dword ptr fs:[rcx] ; cmp edx, 0x26 ; je 0x11e1c7 ; ret
0x0000000000127a6e : std ; push qword ptr [rbp - 0x32] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b537f : std ; push rsi ; str word ptr [rcx + 0x63] ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000ba078 : std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000015509f : std ; ret
0x000000000018e051 : std ; vmovdqu64 zmmword ptr [r11], zmm4 ; vzeroupper ; ret
0x000000000018df3a : std ; vmovdqu64 zmmword ptr [rdi + rdx - 0x100], zmm7 ; vzeroupper ; ret
0x0000000000186b4b : std ; vzeroupper ; ret
0x00000000001821d1 : std ; xlatb ; ret
0x0000000000182492 : std ; xlatb ; ret 0xc085
0x00000000001826b3 : std ; xlatb ; ret 0xe883
0x0000000000181693 : std ; xlatb ; retf
0x00000000001816bb : std ; xlatb ; retf 0xc985
0x0000000000185ee4 : std ; xlatb ; retf 0xfdc5
0x0000000000185f44 : std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x00000000001820fe : std ; xlatb ; rol dword ptr [rbp + 0x311b75c0], 0xc0 ; vzeroupper ; ret
0x00000000001821c1 : std ; xlatb ; rol dword ptr [rbp - 0x3a378a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000185c91 : std ; xlatb ; rol dword ptr [rbp - 0x3a678a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000186ee6 : std ; xlatb ; ror byte ptr [rcx - 0x7d], cl ; ret 0x4d20
0x000000000018245c : std ; xlatb ; ror dword ptr [rdi], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; vzeroupper ; ret
0x0000000000169637 : sti ; add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000d0aa3 : sti ; add al, byte ptr [rcx + 1] ; ret
0x0000000000107cbf : sti ; add cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000038fd2 : sti ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000107ce5 : sti ; add dword ptr [rdi], ecx ; xchg eax, ebp ; ret
0x000000000012e6c0 : sti ; add eax, 0xf9834800 ; add al, 0x48 ; cmovne eax, edx ; ret
0x000000000017a311 : sti ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x0000000000026774 : sti ; add eax, dword ptr [rcx + 0xf] ; xchg eax, esp ; rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x00000000000f8a54 : sti ; add rax, rsi ; jmp rax
0x000000000013f771 : sti ; and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xfb80
0x00000000000d1f3f : sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000000e55b6 : sti ; dec dword ptr [rax - 0x75] ; mov ebp, 0xfffffb20 ; mov rdx, rax ; jmp 0xe55e2
0x00000000000e1828 : sti ; dec dword ptr [rax - 0x77] ; ret
0x000000000015ce7a : sti ; inc dword ptr [rbx - 0x7af00008] ; retf
0x00000000000a42c6 : sti ; jg 0xa42e1 ; mov ss, edx ; add eax, dword ptr [rax] ; add bh, dh ; ret
0x00000000000e4038 : sti ; jmp qword ptr [rsi + 0xf]
0x00000000000dde51 : sti ; jno 0xdde4e ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000115e41 : sti ; lock dec dword ptr [rax - 0x77] ; ret 0x8d48
0x0000000000165cb8 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000052ee8 : sti ; mov eax, 0x3e ; mov edi, dword ptr [rdi + 0x10] ; syscall
0x0000000000165cb2 : sti ; mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000011d92e : sti ; mov rdi, rcx ; sub rsp, 8 ; call rsi
0x00000000001142a4 : sti ; or al, 0 ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000108d31 : sti ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf 0x1f0f
0x00000000000eca39 : sti ; or dh, byte ptr [rsi + rdi + 0x48] ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000133afb : sti ; or dword ptr [rcx + 0xf], eax ; retf
0x00000000001095a1 : sti ; or dword ptr [rsi], ecx ; add byte ptr [rbp - 0x77], cl ; retf 0x8b48
0x000000000012576e : sti ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x00000000000437a8 : sti ; push rax ; ret
0x000000000005005a : sti ; ret 0xffbf
0x00000000001151d4 : sti ; ret 9
0x0000000000142963 : sti ; retf
0x00000000000e83fb : sti ; sbb cl, al ; clc ; sbb byte ptr [rcx], bh ; ret
0x00000000000824f0 : sti ; sub rsp, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x0000000000043b53 : sti ; test esi, esi ; jne 0x43b6b ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x00000000000330e7 : sti ; test rax, rax ; je 0x330f5 ; call rax
0x00000000000e1335 : stosb byte ptr [rdi], al ; add al, 0 ; mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000032c72 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x63], cl ; xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x000000000009fd40 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000012964a : stosb byte ptr [rdi], al ; add dword ptr [rax], eax ; add al, ch ; lodsd eax, dword ptr [rsi] ; ret
0x00000000000806c5 : stosb byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x76b3d795], cl ; retf 0x8949
0x00000000000ee83f : stosb byte ptr [rdi], al ; add rax, rdx ; jmp rax
0x00000000000ba464 : stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000009e409 : stosb byte ptr [rdi], al ; or al, 0 ; cmovne rax, rdx ; ret
0x000000000009e6e2 : stosb byte ptr [rdi], al ; push -8 ; lcall [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000285e2 : stosb byte ptr [rdi], al ; retf
0x000000000018a14a : stosb byte ptr [rdi], al ; vzeroupper ; ret
0x00000000000aac51 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x79f0ef06], al ; ret 0
0x000000000002a029 : stosd dword ptr [rdi], eax ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x000000000008c989 : stosd dword ptr [rdi], eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000062f6b : stosd dword ptr [rdi], eax ; call 0x12f213
0x00000000000b0504 : stosd dword ptr [rdi], eax ; fimul dword ptr [rax + 0xf] ; mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x0000000000117e35 : stosd dword ptr [rdi], eax ; hlt ; lcall [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000013b374 : stosd dword ptr [rdi], eax ; jmp 0x13b33b
0x0000000000044a25 : stosd dword ptr [rdi], eax ; mov edi, r8d ; call 0x4414b
0x00000000000f3cdb : stosd dword ptr [rdi], eax ; nop ; add byte ptr [rax], al ; add byte ptr [rbx - 0x16f7dbb4], cl ; ret 0xfffe
0x0000000000149fd4 : stosd dword ptr [rdi], eax ; nop dword ptr [rax] ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000124859 : stosd dword ptr [rdi], eax ; or dh, al ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000097f95 : stosd dword ptr [rdi], eax ; pop rbx ; ret
0x00000000000b5a51 : stosd dword ptr [rdi], eax ; push rax ; str word ptr [rcx + 0x63] ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000004487c : stosd dword ptr [rdi], eax ; ret
0x00000000001585e1 : stosd dword ptr [rdi], eax ; retf
0x0000000000044a24 : stosq qword ptr [rdi], rax ; mov edi, r8d ; call 0x4414c
0x0000000000097f94 : stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000004487b : stosq qword ptr [rdi], rax ; ret
0x00000000000b5b87 : str word ptr [r11 + 0x63] ; or al, 0x83 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000b5b24 : str word ptr [r9 + 0x63] ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000c500a : str word ptr [rax + 0x21] ; ret 0x8948
0x00000000000cf9a5 : str word ptr [rax + 0x29] ; retf 0x8948
0x00000000000ba5b7 : str word ptr [rax + 0x63] ; add al, 0xbe ; add rax, rsi ; jmp rax
0x000000000009e20f : str word ptr [rax + 0xf] ; ret 0x66c3
0x000000000009cdc1 : str word ptr [rax + 0xf] ; ret 0xfc3
0x00000000000c50da : str word ptr [rax - 0x77] ; ret 0xc148
0x0000000000042e5c : str word ptr [rax - 0x7b] ; ret 0x574
0x00000000000b5b58 : str word ptr [rbx + 0x63] ; or al, 0x83 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000b52e7 : str word ptr [rcx + 0x63] ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000ab30f : str word ptr [rdi + 0x63] ; or al, 0x8a ; lea r10, [r10 + r9] ; jmp r10
0x00000000000b7edd : str word ptr cs:[rbx + 0x63] ; or al, 0x83 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000011eea7 : sub al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000151549 : sub al, 0 ; pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00000000000e1254 : sub al, 0x10 ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000fa449 : sub al, 0x24 ; jmp 0xfa413
0x0000000000154b47 : sub al, 0x24 ; mov byte ptr [rbx], bpl ; mov eax, 1 ; jmp 0x154b29
0x0000000000154bd7 : sub al, 0x24 ; mov byte ptr [rbx], bpl ; mov eax, 1 ; jmp 0x154bb9
0x000000000004639f : sub al, 0x2e ; call rax
0x00000000000e6dce : sub al, 0x34 ; in eax, 0xf3 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000cd9a2 : sub al, 0x3b ; sub al, 0x75 ; pop rax ; ret
0x000000000015af7f : sub al, 0x48 ; add esp, 0x18 ; ret
0x00000000000dfa47 : sub al, 0x48 ; lea esp, [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000001190eb : sub al, 0x48 ; mov edi, dword ptr [rbx] ; call r12
0x000000000010093b : sub al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001895d2 : sub al, 0x72 ; add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x00000000000cd9a5 : sub al, 0x75 ; pop rax ; ret
0x0000000000189fb3 : sub al, 0x83 ; ret 0x8104
0x00000000000f06f4 : sub al, 0x89 ; jae 0xf0734 ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000009100b : sub al, 0x89 ; ret 0x8948
0x000000000010151a : sub al, 0x89 ; ret 0xace9
0x000000000018baa3 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000ea9f3 : sub al, 0xc6 ; or byte ptr [r9], r11b ; mov eax, 1 ; ret
0x00000000000d8e97 : sub al, 0xd ; add byte ptr [rcx + 0x146348c2], cl ; xchg eax, edi ; add rdx, rdi ; jmp rdx
0x0000000000148d38 : sub al, 0xd ; or al, byte ptr [rax] ; jmp 0x148c83
0x0000000000031ebf : sub al, 0xe3 ; mov rax, qword ptr [rax + r12*8] ; test rax, rax ; je 0x31ed7 ; call rax
0x00000000000826ce : sub al, 0xfa ; dec dword ptr [rax - 0x77] ; ret
0x00000000000bca36 : sub al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000affa0 : sub al, 1 ; add byte ptr [rax], al ; bsr rsi, rsi ; lea rax, [rdi + rsi] ; ret
0x000000000011e8a1 : sub al, 1 ; add byte ptr [rax], al ; syscall
0x000000000016618d : sub al, 5 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000009f53d : sub al, bl ; ret
0x00000000000a3fd7 : sub al, byte ptr [rax] ; add bh, dh ; ret
0x000000000004210a : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000011eb1e : sub al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000ef281 : sub al, byte ptr [rbx - 0x7cb7fe3f] ; ret 0x8304
0x000000000009d470 : sub al, byte ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000166590 : sub al, byte ptr [rip + 0x14634900] ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000003000e : sub al, byte ptr [rip + 0x29480000] ; retf 0xe083
0x0000000000110e2b : sub al, ch ; pop rdi ; retf 0xffff
0x00000000000d5668 : sub al, ch ; ret 0xf4fa
0x0000000000131460 : sub al, ch ; retf 0xf3
0x00000000001288ab : sub al, ch ; retf 0xffef
0x0000000000182a15 : sub al, ch ; std ; xlatb ; ret
0x00000000000f887f : sub al, ch ; xchg eax, ebx ; retf 0xfff2
0x00000000001121a7 : sub bh, byte ptr [rax + 0x118] ; syscall
0x00000000000e278d : sub bh, byte ptr [rax + 0x69] ; syscall
0x00000000000e281d : sub bh, byte ptr [rax + 0x6a] ; syscall
0x00000000001139bd : sub bh, byte ptr [rax + 0x71] ; syscall
0x0000000000113a6d : sub bh, byte ptr [rax + 0x72] ; syscall
0x00000000000ddabd : sub bh, byte ptr [rax + 0x74] ; syscall
0x00000000000e2aad : sub bh, byte ptr [rax + 0x75] ; syscall
0x00000000000e2b4d : sub bh, byte ptr [rax + 0x77] ; syscall
0x0000000000132812 : sub bh, ch ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000015e3ce : sub bl, al ; movzx eax, r8b ; jmp 0x15e3a7
0x00000000000cd996 : sub byte ptr [r11], r15b ; sub byte ptr [rbp + 0x63], r14b ; ret
0x000000000008b5bb : sub byte ptr [r13 + 0x4c], r11b ; mov eax, ebp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000014a5e6 : sub byte ptr [r13 + rcx*4 + 0x42], r9b ; or byte ptr [rcx - 0x77], al ; ret 0x8948
0x00000000000b85ed : sub byte ptr [r15], cl ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000155ea1 : sub byte ptr [r8 + r15*4], r8b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000155c71 : sub byte ptr [r9], r15b ; sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x00000000000eb170 : sub byte ptr [rax + 0x63], cl ; ret
0x000000000010b72f : sub byte ptr [rax + 0x63], cl ; ret 0xc283
0x00000000001064b1 : sub byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000155eb2 : sub byte ptr [rax + 1], bh ; ret
0x00000000001063a3 : sub byte ptr [rax + 5], bh ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000014e81f : sub byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000155ea2 : sub byte ptr [rax + rdi*4], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000f0752 : sub byte ptr [rax - 0x75], cl ; cmp eax, dword ptr [rcx] ; ret 0xc083
0x000000000002b2a1 : sub byte ptr [rax - 0x75], cl ; je 0x2b2d6 ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x000000000002b738 : sub byte ptr [rax - 0x75], cl ; je 0x2b76d ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x000000000002efdf : sub byte ptr [rax - 0x75], cl ; je 0x2f013 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000003020f : sub byte ptr [rax - 0x75], cl ; je 0x30243 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000000d74fb : sub byte ptr [rax - 0x75], cl ; jl 0xd752c ; sbb byte ptr [rax + 0x63], cl ; ret 0x8944
0x00000000000dd6a1 : sub byte ptr [rax - 0x75], cl ; jl 0xdd6d5 ; and byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000008a206 : sub byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000099cd4 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000047b01 : sub byte ptr [rax - 0x77], cl ; ret
0x0000000000116bbe : sub byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000010ef3f : sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x00000000000818b4 : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000004becb : sub byte ptr [rax - 0x77], cl ; ret 0xf748
0x00000000000a0263 : sub byte ptr [rax - 0x77], cl ; retf 0x5d5b
0x00000000000cac3c : sub byte ptr [rax - 0x77], cl ; retf 0x8b48
0x000000000008a621 : sub byte ptr [rax - 0x78], al ; cmp byte ptr [rcx + rcx*4 - 0x30], al ; ret
0x000000000008a620 : sub byte ptr [rax - 0x78], r8b ; cmp byte ptr [rcx + rcx*4 - 0x30], al ; ret
0x0000000000025087 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x2500b
0x0000000000101afb : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x101b60 ; add rsp, 0x38 ; ret
0x000000000010c2d3 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x10c2f3 ; add rsp, 0x28 ; ret
0x000000000010c45e : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x10c475 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000010c548 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x10c55d ; add rsp, 0x18 ; ret
0x000000000010c59a : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x10c5af ; add rsp, 0x18 ; ret
0x000000000010d5e3 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x10d657 ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000112473 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x1124cd ; add rsp, 0x68 ; ret
0x0000000000112502 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x112555 ; add rsp, 0x18 ; ret
0x00000000001125d3 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x112625 ; add rsp, 0x58 ; ret
0x0000000000112668 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x1126bd ; add rsp, 0x58 ; ret
0x0000000000112b5a : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x112b85 ; add rsp, 0x38 ; ret
0x0000000000112bb5 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x112bd1 ; add rsp, 0x18 ; ret
0x00000000001139d7 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x113a4d ; add rsp, 0x48 ; ret
0x0000000000113a87 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x113afd ; add rsp, 0x48 ; ret
0x0000000000113b49 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x113bc7 ; add rsp, 0x38 ; ret
0x0000000000113c19 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x113c97 ; add rsp, 0x38 ; ret
0x0000000000114601 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x114651 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000011489e : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x1148b3 ; add rsp, 0x38 ; ret
0x000000000011496c : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x1149b7 ; add rsp, 0x68 ; ret
0x00000000001159b0 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x1159ff ; add rsp, 0x38 ; ret
0x0000000000115a7f : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x115acf ; add rsp, 0x38 ; ret
0x00000000001182e1 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x1182f6 ; add rsp, 0x18 ; ret
0x000000000011dab8 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x11dae5 ; add rsp, 0x78 ; ret
0x000000000011f426 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x11f43b ; add rsp, 0x18 ; ret
0x000000000011f96b : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x11f9c5 ; add rsp, 0x58 ; ret
0x000000000012c9c0 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x12caa8 ; leave ; ret
0x000000000012ed60 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x12ed7f ; add rsp, 0x28 ; ret
0x000000000012edc0 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x12eddf ; add rsp, 0x28 ; ret
0x0000000000135815 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x13584a ; add rsp, 0x38 ; ret
0x00000000001358b3 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x1358c8 ; add rsp, 0x38 ; ret
0x0000000000135930 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x135945 ; add rsp, 0x28 ; ret
0x0000000000139623 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x139653 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000013b58e : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x13b5aa ; add rsp, 0x18 ; ret
0x000000000013b675 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x13b6c9 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013ba58 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x13bab5 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013bb13 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x13bb7d ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013d93c : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x13d951 ; add rsp, 0x18 ; ret
0x00000000001431c1 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x1431d8 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001450b3 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x1450ca ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000145e61 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x145e90 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001461da : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x146263 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000146447 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x146489 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000147e66 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x147eb6 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001483ac : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x1483ed ; add rsp, 0x10 ; pop rbx ; ret
0x000000000014844a : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x148490 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000014910b : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x149132 ; add rsp, 0x40 ; pop rbx ; ret
0x000000000014d2d7 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x14d366 ; add rsp, 0x20 ; pop rbx ; ret
0x00000000001502e7 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x150314 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000150659 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x15067a ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015088f : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x1508b2 ; add rsp, 0x30 ; pop rbx ; ret
0x00000000001509af : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x1509d2 ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000150aec : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x150b33 ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000150c4c : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x150c93 ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000150d5b : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x150d7b ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000150f82 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x150fa3 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000015211d : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x152132 ; add rsp, 0x78 ; ret
0x0000000000152183 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x152198 ; add rsp, 0x78 ; ret
0x00000000001521f3 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x152208 ; add rsp, 0x78 ; ret
0x0000000000152263 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x152278 ; add rsp, 0x78 ; ret
0x00000000001522c4 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x1522d9 ; add rsp, 0x78 ; ret
0x0000000000152328 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x15233d ; add rsp, 0x78 ; ret
0x0000000000152393 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x1523a8 ; add rsp, 0x78 ; ret
0x000000000015240d : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x152422 ; add rsp, 0x78 ; ret
0x000000000015294b : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x152982 ; add rsp, 0x28 ; ret
0x000000000015442d : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x154442 ; add rsp, 0x48 ; ret
0x0000000000154486 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x1544d6 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000154506 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x154555 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001545c6 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x154618 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000154a16 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x154a67 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000154aa6 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x154af6 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000154b28 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x154b84 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000154bb8 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x154c14 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000154c46 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x154ca4 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000154cd6 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x154d26 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000155916 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x155970 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001559a6 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x155a00 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000155a36 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x155a88 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000155ac6 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x155b18 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015af7a : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x15afb6 ; add rsp, 0x18 ; ret
0x000000000015b3f1 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x15b42f ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015b471 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x15b4af ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015c15a : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x15c1aa ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000015cfc0 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x15cfe3 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000015db2c : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x15db78 ; add rsp, 0x58 ; ret
0x000000000015dc29 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x15dc7e ; add rsp, 0x68 ; ret
0x000000000015ddd0 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x15de2e ; add rsp, 0x78 ; ret
0x000000000015de92 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x15dede ; add rsp, 0x38 ; ret
0x000000000015e3c5 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x15e3e0 ; add rsp, 0x28 ; ret
0x0000000000043adb : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x43af0 ; add rsp, 0x18 ; ret
0x000000000004472e : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x4475d ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000047d6b : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x47d80 ; add rsp, 0x28 ; ret
0x0000000000047e5b : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x47e70 ; add rsp, 0x28 ; ret
0x00000000000486a5 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x486ba ; add rsp, 0x18 ; ret
0x00000000000486f2 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x48707 ; add rsp, 0x18 ; ret
0x0000000000048744 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x48759 ; add rsp, 0x18 ; ret
0x0000000000048791 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x487a6 ; add rsp, 0x18 ; ret
0x00000000000487e4 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x487f9 ; add rsp, 0x18 ; ret
0x0000000000048831 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x48846 ; add rsp, 0x18 ; ret
0x00000000000528fe : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x52949 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000529ae : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x52a2e ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000052a8c : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x52af8 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000005836d : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x583b5 ; leave ; ret
0x000000000005bc8e : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x5bcf1 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000006397f : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x639a1 ; add rsp, 0x18 ; ret
0x000000000008cfd0 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x8cff1 ; add rsp, 0x48 ; ret
0x00000000000907ea : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x90858 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000009413c : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x94190 ; add rsp, 0x50 ; pop rbx ; ret
0x00000000000c4fcf : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xc504f ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000c50ad : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xc5119 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000c517f : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xc51ca ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000c8b2b : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xc8b5f ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000cc91f : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xcc982 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000ceba5 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xcebbc ; add rsp, 0x40 ; pop rbx ; ret
0x00000000000d2a1d : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xd2a47 ; add rsp, 0x28 ; ret
0x00000000000d2b4e : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xd2b6c ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000d8c94 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xd8ca9 ; add rsp, 0x18 ; ret
0x00000000000dba64 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xdba79 ; add rsp, 0x18 ; ret
0x00000000000ddad7 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xddb35 ; add rsp, 0x38 ; ret
0x00000000000dfb8b : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xdfc13 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e158d : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xe15b1 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000e1dcb : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xe1e1f ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000e1f5b : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xe1faf ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000e27a7 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xe2805 ; add rsp, 0x38 ; ret
0x00000000000e2837 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xe2895 ; add rsp, 0x38 ; ret
0x00000000000e2ac7 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xe2b2d ; add rsp, 0x38 ; ret
0x00000000000e2b67 : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0xe2bcd ; add rsp, 0x38 ; ret
0x0000000000113d12 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; jne 0x113d33 ; add rsp, 0x28 ; ret
0x0000000000114821 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; jne 0x11483a ; add rsp, 0x58 ; ret
0x000000000014cb23 : sub byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000111d54 : sub byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000008b5bc : sub byte ptr [rbp + 0x4c], bl ; mov eax, ebp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000cd99a : sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000cd999 : sub byte ptr [rbp + 0x63], r14b ; ret
0x000000000014a5e7 : sub byte ptr [rbp + rcx*4 + 0x42], cl ; or byte ptr [rcx - 0x77], al ; ret 0x8948
0x0000000000108e42 : sub byte ptr [rbp + rcx*4 + 0x64], cl ; add eax, 0xe7894c00 ; call 0x250bb
0x0000000000027a79 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000026a20 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000052907 : sub byte ptr [rbx + 0x5d], bl ; ret
0x00000000000d0bce : sub byte ptr [rbx + 0x5d], r11b ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000014805f : sub byte ptr [rbx + 0xb7401f9], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000015e1f3 : sub byte ptr [rbx + rcx*4 + 0xa], al ; mov rdx, r14 ; add r9, qword ptr [rsp + 8] ; call rax
0x000000000015d953 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x000000000015d952 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x0000000000155bc3 : sub byte ptr [rbx - 0x3f7cb7ea], cl ; add al, 0xf ; retf 0x5089
0x0000000000155bf3 : sub byte ptr [rbx - 0x3f7cb7f0], cl ; add al, 0xf ; retf 0x1689
0x000000000008c7ec : sub byte ptr [rbx - 0x3fce0007], cl ; pop rbx ; ret
0x00000000000cd997 : sub byte ptr [rbx], bh ; sub byte ptr [rbp + 0x63], r14b ; ret
0x000000000013690f : sub byte ptr [rbx], cl ; add byte ptr [rcx - 0x3f], cl ; retf 0x6411
0x00000000000fd659 : sub byte ptr [rcx + 0x63], cl ; retf
0x0000000000155f76 : sub byte ptr [rcx + rcx*4 + 0x63], cl ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000108e14 : sub byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x250b6
0x0000000000085d4c : sub byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000043c76 : sub byte ptr [rcx - 0x3b76b310], cl ; mov rbp, r9 ; nop ; jmp rdx
0x000000000013cf17 : sub byte ptr [rcx - 0x73], cl ; add r9b, byte ptr [rax + 0x39] ; retf
0x000000000013d65b : sub byte ptr [rcx - 0x7d], al ; ret
0x0000000000118be6 : sub byte ptr [rcx - 0x7d], al ; ret 0x4901
0x0000000000113644 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x0000000000155c72 : sub byte ptr [rcx], bh ; sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x000000000005fe47 : sub byte ptr [rcx], ch ; ret 0x8341
0x0000000000106395 : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000112ade : sub byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], 0xe2 ; mov eax, ecx ; syscall
0x0000000000114376 : sub byte ptr [rdi - 0x11e2153], bh ; mov eax, 0xa9 ; syscall
0x0000000000148004 : sub byte ptr [rdi - 0x17], dh ; mov qword ptr [rdx + 0x20], rsi ; ret
0x0000000000033971 : sub byte ptr [rdi], ch ; sbb eax, dword ptr [rax] ; ret
0x00000000000b8596 : sub byte ptr [rdi], cl ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000001473a1 : sub byte ptr [rdi], cl ; retf 0x5089
0x00000000001069d3 : sub byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000001667aa : sub byte ptr [rip + 0x14634900], al ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000034f54 : sub byte ptr [rip - 0x76b7fff2], ah ; ret
0x0000000000151eb7 : sub byte ptr [rsi + rax + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x00000000000b7edc : sub byte ptr [rsi], 0xf ; add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000b860a : sub byte ptr es:[rdi], cl ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000001328c7 : sub ch, bh ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000047595 : sub cl, byte ptr [rax - 0x77] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4901
0x00000000000eff5f : sub cl, byte ptr [rax - 0x7d] ; ret
0x00000000000e5565 : sub cl, byte ptr [rdi] ; mov dh, 0x42 ; add al, byte ptr [rbx - 0x7cb7fd37] ; ret 0xeb02
0x00000000000d8e52 : sub cl, byte ptr [rip + 0x48ce8900] ; movsxd rax, dword ptr [rdi + rsi*4] ; add rax, rdi ; jmp rax
0x0000000000111400 : sub cl, byte ptr [rip + 0x64df8900] ; mov r13d, dword ptr [r14] ; call 0x10d66b
0x00000000001054dc : sub cl, ch ; retf
0x0000000000074cf4 : sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000012f3d2 : sub dh, byte ptr [rip + 0x4858fff3] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000000e1447 : sub dl, byte ptr [rax] ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000011264e : sub dword ptr [rax + 0x101], edi ; syscall
0x000000000013b3d3 : sub dword ptr [rax + 0x63], ecx ; ret 0x148
0x00000000000c8314 : sub dword ptr [rax + 0x63], ecx ; ret 0x8d48
0x000000000010b79e : sub dword ptr [rax + 0x63], ecx ; ret 0xc283
0x0000000000025077 : sub dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x2500b
0x000000000013a496 : sub dword ptr [rax], eax ; add byte ptr [rax], al ; mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x000000000011f111 : sub dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000003e8fd : sub dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fc07], al ; ret 0x29
0x00000000000d056f : sub dword ptr [rax], eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000d079a : sub dword ptr [rax], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e1524 : sub dword ptr [rax], edx ; add bh, dh ; fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000008c866 : sub dword ptr [rbx + 0x48], ebx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000175f93 : sub dword ptr [rbx], eax ; add byte ptr [rax], al ; ret
0x000000000006459d : sub dword ptr [rbx], eax ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000083506 : sub dword ptr [rcx - 0x75], ecx ; test byte ptr [rax + rbx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000163f07 : sub dword ptr [rdi + 0x10], ebx ; jb 0x163f1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000164057 : sub dword ptr [rdi + 0x10], ebx ; jb 0x16406d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001641a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1641bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001642f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x16430d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000164447 : sub dword ptr [rdi + 0x10], ebx ; jb 0x16445d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000164597 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1645ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001646e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1646fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000164837 : sub dword ptr [rdi + 0x10], ebx ; jb 0x16484d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000164987 : sub dword ptr [rdi + 0x10], ebx ; jb 0x16499d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000164ad7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x164aed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000164c27 : sub dword ptr [rdi + 0x10], ebx ; jb 0x164c3d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000164d77 : sub dword ptr [rdi + 0x10], ebx ; jb 0x164d8d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000164ec7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x164edd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000165017 : sub dword ptr [rdi + 0x10], ebx ; jb 0x16502d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000165167 : sub dword ptr [rdi + 0x10], ebx ; jb 0x16517d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001668d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1668ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000166a27 : sub dword ptr [rdi + 0x10], ebx ; jb 0x166a3d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000166b77 : sub dword ptr [rdi + 0x10], ebx ; jb 0x166b8d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000166cc7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x166cdd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000166e17 : sub dword ptr [rdi + 0x10], ebx ; jb 0x166e2d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000166f67 : sub dword ptr [rdi + 0x10], ebx ; jb 0x166f7d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001670b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1670cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000167207 : sub dword ptr [rdi + 0x10], ebx ; jb 0x16721d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000167357 : sub dword ptr [rdi + 0x10], ebx ; jb 0x16736d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001674a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1674bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001675f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x16760d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000167747 : sub dword ptr [rdi + 0x10], ebx ; jb 0x16775d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000167897 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1678ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001679e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1679fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000167b37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x167b4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000163e63 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000163e5f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000080166 : sub dword ptr [rdi], ecx ; mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000bf565 : sub dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0xd284
0x0000000000043702 : sub dword ptr [rdi], esp ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000163f0d : sub dword ptr [rdi], esp ; jmp r9
0x000000000018d0f9 : sub dword ptr [rdx], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000167613 : sub dword ptr [rdx], ebx ; add eax, 0x14634900 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000001666b9 : sub dword ptr [rip + 0x14634900], eax ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000017c917 : sub dword ptr [rip - 0x76b30000], ecx ; retf
0x000000000018c286 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000017c7d1 : sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x0000000000164853 : sub dword ptr [rsi + 5], eax ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000010bac9 : sub dword ptr [rsp + 0xa0], eax ; syscall
0x0000000000043e8d : sub dword ptr [rsp + 0xf0], eax ; syscall
0x00000000000f4d19 : sub dword ptr [rsp], eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000151ac2 : sub eax, -0x80 ; pop rbx ; ret
0x00000000001827a7 : sub eax, -1 ; jne 0x1827b8 ; vzeroupper ; ret
0x00000000001829ec : sub eax, -1 ; jne 0x1827bc ; vzeroupper ; ret
0x0000000000189717 : sub eax, -1 ; jne 0x189728 ; vzeroupper ; ret
0x00000000001898ec : sub eax, -1 ; jne 0x18972c ; vzeroupper ; ret
0x000000000009a28a : sub eax, 0x10 ; ret
0x000000000015b3f6 : sub eax, 0x10c48348 ; pop rbx ; ret
0x00000000000d04cb : sub eax, 0x1173c8 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000063267 : sub eax, 0x28c48348 ; pop rbx ; pop rbp ; ret
0x00000000001948ef : sub eax, 0x30c48348 ; pop rbx ; pop rbp ; pop r14 ; ret
0x00000000000eaa22 : sub eax, 0x47c6e875 ; or byte ptr [rsi], dl ; mov eax, 1 ; ret
0x000000000009fd7f : sub eax, 0x480000ff ; cmove eax, edx ; ret
0x000000000012f1ef : sub eax, 0x48ffef60 ; add esp, 8 ; ret
0x000000000012a5b2 : sub eax, 0x507a8b48 ; mov rsi, rdx ; call rax
0x00000000000431b9 : sub eax, 0x7f800000 ; shr eax, 0x1f ; ret
0x000000000007aa22 : sub eax, 0x83000000 ; ret
0x00000000001023e9 : sub eax, 0x8348fff2 ; ret
0x000000000008a8de : sub eax, 0x89440008 ; insd dword ptr [rdi], dx ; jo 0x8a8d7 ; retf 0xfffe
0x00000000001225c7 : sub eax, 0x8948fff0 ; ret 0x8948
0x0000000000160a7f : sub eax, 0x89fffabb ; ret 0xc085
0x00000000000932b7 : sub eax, 0xc3001510 ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000018243f : sub eax, 0xc5000001 ; std ; xlatb ; ret
0x000000000013b46a : sub eax, 0xe2c1ca89 ; add al, 0x83 ; ret 0x3908
0x00000000000bad96 : sub eax, 0xf480001 ; ret 0x66c3
0x00000000000bad30 : sub eax, 0xf480001 ; ret 0xfc3
0x000000000015cf05 : sub eax, 0xf480005 ; ret 0x8d48
0x000000000010c402 : sub eax, 0xf631d231 ; mov rdi, rbx ; call rax
0x00000000000a3fd6 : sub eax, 0xf700002a ; ret
0x000000000018289f : sub eax, 0xffff ; jne 0x1827bb ; ret
0x000000000018979d : sub eax, 0xffff ; jne 0x18972b ; ret
0x000000000014f36a : sub eax, 1 ; bswap eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000055227 : sub eax, 1 ; cmp rbx, rax ; jne 0x55229 ; pop rbx ; ret
0x00000000000a0a65 : sub eax, 1 ; jne 0xa09c3 ; pop rbx ; pop rbp ; ret
0x00000000000a0a42 : sub eax, 1 ; jne 0xa0a3e ; jmp 0xa0a1a
0x0000000000031504 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000000568cf : sub eax, 1 ; ret
0x000000000012c3df : sub eax, 2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000005c03e : sub eax, 4 ; cmp rdi, r8 ; jbe 0x5c041 ; pop rbx ; ret
0x0000000000196a97 : sub eax, 5 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000005691c : sub eax, 8 ; cmp r8, -8 ; jne 0x5691c ; mov rax, rdx ; ret
0x00000000000baca6 : sub eax, dword ptr [r8 + r9*4] ; je 0xbac8e ; ret
0x00000000000baca7 : sub eax, dword ptr [rax + rcx*4] ; je 0xbac8d ; ret
0x000000000011ea4e : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000014808d : sub eax, dword ptr [rbx + 0x18] ; add rsp, 8 ; add eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000151911 : sub eax, dword ptr [rbx + 0x39480009] ; ret
0x0000000000035c5f : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000074c96 : sub eax, dword ptr [rcx + 0xf] ; mov dh, 0x46 ; or al, 0x83 ; ret
0x00000000000bac58 : sub eax, dword ptr [rcx + r8*4] ; je 0xbac46 ; ret
0x00000000000bac59 : sub eax, dword ptr [rcx + rax*4] ; je 0xbac45 ; ret
0x00000000000bb100 : sub eax, dword ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000011f4f1 : sub eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x0000000000092f9e : sub eax, dword ptr [rdi + 0x18] ; ret
0x000000000008c285 : sub eax, dword ptr [rdi + 0x20] ; ret
0x000000000008c175 : sub eax, dword ptr [rdi + 0x38] ; ret
0x0000000000087ae5 : sub eax, dword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x000000000008c276 : sub eax, dword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x000000000008c166 : sub eax, dword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x00000000001664a1 : sub eax, dword ptr [rip + 0x14634900] ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000092693 : sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000127e37 : sub eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000001827f3 : sub eax, ecx ; je 0x182809 ; sbb eax, eax ; or eax, 1 ; ret
0x0000000000091c39 : sub eax, ecx ; lea eax, [r8 - 1] ; ret
0x0000000000058668 : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000a89dc : sub eax, ecx ; ret
0x0000000000087329 : sub eax, ecx ; sar r8, 2 ; lea eax, [r8 - 1] ; ret
0x0000000000127c22 : sub eax, ecx ; shr ecx, 0x1f ; cmp sil, cl ; cmovne eax, edx ; ret
0x000000000018190f : sub eax, ecx ; vzeroupper ; ret
0x00000000000b0349 : sub eax, edi ; ret
0x00000000000ce17e : sub eax, edi ; shr rax, 2 ; ret
0x000000000008ac78 : sub eax, edx ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000009c5d2 : sub eax, edx ; mov rdx, qword ptr [rdx + 8] ; test rdx, rdx ; jne 0x9c5db ; ret
0x000000000008e9c5 : sub eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000047c19 : sub eax, edx ; ret
0x0000000000042a86 : sub eax, edx ; sar eax, 0x10 ; ret
0x000000000008a07f : sub eax, edx ; sar rax, 2 ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000004319f : sub eax, edx ; shr eax, 0x1f ; ret
0x0000000000127beb : sub eax, edx ; shr ecx, 0x1f ; cmp dil, cl ; cmovne eax, esi ; ret
0x0000000000042d95 : sub eax, edx ; shr rax, 0x3f ; ret
0x000000000018aa20 : sub eax, edx ; shr rax, 2 ; vzeroupper ; ret
0x000000000018160e : sub eax, edx ; vzeroupper ; ret
0x000000000006c9ee : sub eax, esi ; cmp ebx, eax ; jg 0x6ca0c ; add ebx, esi ; mov r12, rcx ; jmp 0x6c9d1
0x00000000001226b5 : sub eax, esi ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000012299a : sub eax, esi ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000005885f : sub eax, esi ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x00000000000a0605 : sub eax, esi ; mov rsi, rax ; mov rbx, rax ; call 0x9d02a
0x000000000005adf8 : sub eax, esp ; mov r13, rdi ; lea rdi, [rdi + rax*8] ; call 0x5707b
0x0000000000127c21 : sub eax, r9d ; shr ecx, 0x1f ; cmp sil, cl ; cmovne eax, edx ; ret
0x0000000000097528 : sub ebp, ebx ; mov qword ptr [rsp + 8], r8 ; call 0x93769
0x0000000000084f06 : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000013b302 : sub ebx, dword ptr [rbx + 0x5d] ; ret
0x00000000000475b5 : sub ebx, dword ptr [rdx] ; add byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c8a70 : sub ebx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c8984 : sub ebx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000c890c : sub ebx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000044874 : sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000f4f07 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000b5d01 : sub ecx, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000018ad74 : sub ecx, dword ptr [rcx + rcx*4 - 0x40] ; shr rax, 2 ; vzeroupper ; ret
0x0000000000186404 : sub ecx, dword ptr [rcx + rcx*4 - 0x40] ; vzeroupper ; ret
0x0000000000044872 : sub ecx, edi ; sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000f88e9 : sub ecx, edx ; dec dword ptr [rcx - 0x75] ; jg 0xf890b ; call 0x25322
0x0000000000042a3b : sub ecx, edx ; not eax ; and eax, ecx ; ret
0x00000000000d2a73 : sub ecx, esi ; imul ecx, ecx, 0x64 ; cmp edi, ecx ; je 0xd2a89 ; ret
0x0000000000147fdb : sub ecx, esi ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00000000000cdc8c : sub edi, 0x10 ; add rax, rdi ; ret
0x0000000000121448 : sub edi, 0x30 ; xor eax, eax ; cmp edi, 9 ; setbe al ; ret
0x0000000000115ad4 : sub edi, dword ptr [rax + 0x105] ; syscall
0x0000000000154b4b : sub edi, dword ptr [rax + 1] ; jmp 0x154b25
0x0000000000154bdb : sub edi, dword ptr [rax + 1] ; jmp 0x154bb5
0x00000000000aacb4 : sub edx, 0x40 ; add rdx, rax ; jl 0xaad2b ; add rax, rdi ; ret
0x00000000000562de : sub edx, 1 ; jne 0x562ca ; mov eax, 1 ; ret
0x000000000005654e : sub edx, 1 ; jne 0x5653a ; mov eax, 1 ; ret
0x000000000009a206 : sub edx, 8 ; and eax, 1 ; cmovne rax, rdx ; ret
0x00000000000926c0 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000000926b5 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000000873cb : sub edx, dword ptr [rcx + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sar rdx, 2 ; sub eax, edx ; ret
0x00000000000873e1 : sub edx, dword ptr [rcx + 8] ; mov eax, dword ptr [rdi + 0x10] ; sar rdx, 2 ; sub eax, edx ; ret
0x0000000000028361 : sub edx, dword ptr [rsi + 0x13] ; add byte ptr [rcx + rcx*4 - 0x19], cl ; mov rcx, qword ptr [rbp - 0x70] ; call rcx
0x0000000000030f8e : sub edx, dword ptr [rsp + 0x10] ; mov dword ptr [r12], edx ; jmp 0x30f63
0x00000000000aa7e4 : sub edx, eax ; jbe 0xaa827 ; add rax, rdi ; ret
0x00000000000aa7f4 : sub edx, eax ; jbe 0xaa829 ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000aa804 : sub edx, eax ; jbe 0xaa829 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000aa814 : sub edx, eax ; jbe 0xaa829 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000ccd04 : sub edx, eax ; jbe 0xccd47 ; add rax, rdi ; ret
0x00000000000ccd14 : sub edx, eax ; jbe 0xccd49 ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000ccd24 : sub edx, eax ; jbe 0xccd49 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000ccd34 : sub edx, eax ; jbe 0xccd49 ; lea rax, [rdi + rax + 0x30] ; ret
0x0000000000113224 : sub edx, eax ; test eax, eax ; cmovns eax, edx ; ret
0x0000000000186ab9 : sub edx, ecx ; jmp 0x186a5a
0x00000000001871d9 : sub edx, ecx ; jmp 0x18717a
0x0000000000187859 : sub edx, ecx ; jmp 0x1877fa
0x0000000000187ca9 : sub edx, ecx ; jmp 0x187c3a
0x0000000000188549 : sub edx, ecx ; jmp 0x1884ea
0x00000000001889c9 : sub edx, ecx ; jmp 0x18894f
0x0000000000159df3 : sub edx, esi ; add edx, ecx ; jmp 0x159d88
0x000000000008870d : sub edx, esi ; mov qword ptr [rsp + 0x10], rcx ; mov rdi, r13 ; call rax
0x000000000008e147 : sub edx, esi ; mov qword ptr [rsp], r8 ; mov rdi, rbx ; call rax
0x00000000000a0885 : sub esi, 1 ; jne 0xa080b ; xor eax, eax ; ret
0x00000000000a085a : sub esi, 1 ; jne 0xa0857 ; xor eax, eax ; ret
0x00000000000a0945 : sub esi, 1 ; jne 0xa08d3 ; xor eax, eax ; ret
0x00000000000a091a : sub esi, 1 ; jne 0xa0917 ; xor eax, eax ; ret
0x000000000013b08d : sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x0000000000132021 : sub esi, dword ptr [rax] ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000117ca6 : sub esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000041791 : sub esi, dword ptr [rsi + rdx] ; add byte ptr [rax + 0x63], cl ; adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x0000000000122512 : sub esi, eax ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000122777 : sub esi, eax ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000014807e : sub esi, eax ; pop rbx ; pop rbp ; mov eax, esi ; ret
0x0000000000048bb1 : sub esi, eax ; syscall
0x00000000000e24e7 : sub esi, esp ; dec dword ptr [rax - 0x77] ; ret 0x3d48
0x00000000000e2550 : sub esi, esp ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000bb7e3 : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010ca63 : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000150780 : sub esp, -0x80 ; pop rbx ; ret
0x00000000000df2c0 : sub esp, 0x80 ; call 0x12bdb8
0x00000000001456c9 : sub esp, 8 ; call 0x151945
0x0000000000029b81 : sub esp, 8 ; call 0x295cb
0x000000000011d933 : sub esp, 8 ; call rsi
0x00000000000824f2 : sub esp, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x00000000000475b4 : sub r11d, dword ptr [r10] ; add byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000097527 : sub r13, rbx ; mov qword ptr [rsp + 8], r8 ; call 0x9376a
0x00000000000e24e6 : sub r14d, esp ; dec dword ptr [rax - 0x77] ; ret 0x3d48
0x000000000005c03d : sub r8, 4 ; cmp rdi, r8 ; jbe 0x5c042 ; pop rbx ; ret
0x0000000000091c38 : sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x0000000000087328 : sub r8, rcx ; sar r8, 2 ; lea eax, [r8 - 1] ; ret
0x000000000009d46f : sub r8b, byte ptr [r9] ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000001054db : sub r9b, bpl ; retf
0x0000000000151ac1 : sub rax, -0x80 ; pop rbx ; ret
0x000000000009a289 : sub rax, 0x10 ; ret
0x0000000000055226 : sub rax, 1 ; cmp rbx, rax ; jne 0x5522a ; pop rbx ; ret
0x00000000000a0a64 : sub rax, 1 ; jne 0xa09c4 ; pop rbx ; pop rbp ; ret
0x00000000000a0a41 : sub rax, 1 ; jne 0xa0a3f ; jmp 0xa0a1b
0x00000000000b9da3 : sub rax, 1 ; ret
0x000000000014808c : sub rax, qword ptr [rbx + 0x18] ; add rsp, 8 ; add eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000092f9d : sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000008c284 : sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000008c174 : sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000087ae4 : sub rax, qword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x000000000008c275 : sub rax, qword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x000000000008c165 : sub rax, qword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x000000000005adf7 : sub rax, r12 ; mov r13, rdi ; lea rdi, [rdi + rax*8] ; call 0x5707c
0x00000000000a0604 : sub rax, r14 ; mov rsi, rax ; mov rbx, rax ; call 0x9d02b
0x00000000001827f2 : sub rax, rcx ; je 0x18280a ; sbb eax, eax ; or eax, 1 ; ret
0x00000000000b0348 : sub rax, rdi ; ret
0x00000000000ce17d : sub rax, rdi ; shr rax, 2 ; ret
0x000000000008ac77 : sub rax, rdx ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000008e9c4 : sub rax, rdx ; pop rbp ; pop r12 ; ret
0x0000000000047c2d : sub rax, rdx ; ret
0x0000000000042d94 : sub rax, rdx ; shr rax, 0x3f ; ret
0x000000000018aa1f : sub rax, rdx ; shr rax, 2 ; vzeroupper ; ret
0x00000000001860df : sub rax, rdx ; vzeroupper ; ret
0x0000000000044871 : sub rcx, rdi ; sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000147fda : sub rcx, rsi ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00000000000cdc8b : sub rdi, 0x10 ; add rax, rdi ; ret
0x00000000000aacb3 : sub rdx, 0x40 ; add rdx, rax ; jl 0xaad2c ; add rax, rdi ; ret
0x00000000000562dd : sub rdx, 1 ; jne 0x562cb ; mov eax, 1 ; ret
0x000000000005654d : sub rdx, 1 ; jne 0x5653b ; mov eax, 1 ; ret
0x000000000009a205 : sub rdx, 8 ; and eax, 1 ; cmovne rax, rdx ; ret
0x00000000000aa7e3 : sub rdx, rax ; jbe 0xaa828 ; add rax, rdi ; ret
0x00000000000aa7f3 : sub rdx, rax ; jbe 0xaa82a ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000aa803 : sub rdx, rax ; jbe 0xaa82a ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000aa813 : sub rdx, rax ; jbe 0xaa82a ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000ccd03 : sub rdx, rax ; jbe 0xccd48 ; add rax, rdi ; ret
0x00000000000ccd13 : sub rdx, rax ; jbe 0xccd4a ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000ccd23 : sub rdx, rax ; jbe 0xccd4a ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000ccd33 : sub rdx, rax ; jbe 0xccd4a ; lea rax, [rdi + rax + 0x30] ; ret
0x0000000000159df2 : sub rdx, rsi ; add edx, ecx ; jmp 0x159d89
0x000000000008870c : sub rdx, rsi ; mov qword ptr [rsp + 0x10], rcx ; mov rdi, r13 ; call rax
0x000000000008e146 : sub rdx, rsi ; mov qword ptr [rsp], r8 ; mov rdi, rbx ; call rax
0x00000000000a0884 : sub rsi, 1 ; jne 0xa080c ; xor eax, eax ; ret
0x00000000000a0859 : sub rsi, 1 ; jne 0xa0858 ; xor eax, eax ; ret
0x00000000000a0944 : sub rsi, 1 ; jne 0xa08d4 ; xor eax, eax ; ret
0x00000000000a0919 : sub rsi, 1 ; jne 0xa0918 ; xor eax, eax ; ret
0x0000000000048bb0 : sub rsi, r8 ; syscall
0x00000000000bb7e2 : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010ca62 : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015077f : sub rsp, -0x80 ; pop rbx ; ret
0x00000000000df2bf : sub rsp, 0x80 ; call 0x12bdb9
0x00000000001456c8 : sub rsp, 8 ; call 0x151946
0x00000000001456c7 : sub rsp, 8 ; call 0x151947
0x0000000000029b80 : sub rsp, 8 ; call 0x295cc
0x000000000011d932 : sub rsp, 8 ; call rsi
0x00000000000824f1 : sub rsp, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x0000000000042e9e : subps xmm0, xmm1 ; ret
0x0000000000042e9d : subsd xmm0, xmm1 ; ret
0x0000000000043242 : subss xmm0, xmm1 ; ret
0x0000000000026bd4 : syscall
0x0000000000031f05 : sysenter
0x00000000000cdf25 : test ah, ah ; jne 0xcdf9c ; test al, 0xf0 ; jne 0xcdf8c ; lea rax, [rdi - 0x10] ; ret
0x00000000000a5a77 : test ah, al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d41
0x00000000000c5bcf : test ah, bh ; add al, 0 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000e1d0e : test ah, ch ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000017feb8 : test ah, dh ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000180db8 : test ah, dh ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000017fcd8 : test ah, dl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000180bd8 : test ah, dl ; add eax, 0x894d0000 ; retf
0x00000000000296be : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000014bdd3 : test al, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000000dc548 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008dd3f : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000151c83 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000339f0 : test al, 0 ; add byte ptr [rax], al ; ret
0x00000000001146d1 : test al, 0 ; add byte ptr [rax], al ; syscall
0x000000000018e694 : test al, 0x40 ; jne 0x18e76c ; lea rax, [rdi + 7] ; ret
0x0000000000118ac3 : test al, 0x48 ; mov esi, dword ptr [rax] ; mov rdi, r13 ; mov dword ptr [rbp - 0x50], r15d ; call r14
0x00000000000e7058 : test al, 0x51 ; or al, 0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000e20ae : test al, 0x85 ; ror byte ptr [rdi], 0x84 ; add dword ptr [rax], 0x83480000 ; ret 0x480f
0x000000000009e734 : test al, 0xe ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000151f75 : test al, 0xe8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000000cdf29 : test al, 0xf0 ; jne 0xcdf88 ; lea rax, [rdi - 0x10] ; ret
0x00000000000cdf28 : test al, 0xf0 ; jne 0xcdf89 ; lea rax, [rdi - 0x10] ; ret
0x00000000000cde15 : test al, 0xf0 ; jne 0xcdf8c ; lea rax, [rdi - 0x10] ; ret
0x00000000000e15f0 : test al, 4 ; add byte ptr [rbx + 0x480c2444], cl ; add esp, 0x18 ; ret
0x00000000000aec7c : test al, ah ; or eax, 0x894d0000 ; retf
0x00000000001708cc : test al, al ; and dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000a0a10 : test al, al ; je 0xa09fa ; pop rbx ; pop rbp ; ret
0x000000000012d5a5 : test al, al ; jne 0x12d545 ; mov rax, rdi ; ret
0x00000000000a8c9a : test al, al ; jne 0xa8c88 ; xor eax, eax ; sub eax, ecx ; ret
0x00000000000baa47 : test al, al ; jne 0xba90d ; jmp 0xbaa25
0x00000000000e6547 : test al, al ; jne 0xe6527 ; xor eax, eax ; ret
0x0000000000069d24 : test al, al ; ret 0xffff
0x00000000001711cc : test al, al ; sbb byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000ade9c : test al, al ; sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000009ba93 : test al, ch ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x00000000000ae58c : test al, dl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000005ca1b : test al, dl ; add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x00000000000f0004 : test bh, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x00000000000f6678 : test bl, al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; add cl, byte ptr [rax - 0x77] ; ret
0x0000000000108d30 : test bl, bh ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf 0x1f0f
0x00000000001059f8 : test bl, bl ; jne 0x10503f ; jmp 0x1059d5
0x0000000000095fee : test bl, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x0000000000048488 : test bl, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x0000000000126a52 : test bl, dl ; add al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 4
0x000000000011874a : test byte ptr [r11 + 8], 1 ; jne 0x118797 ; ret
0x0000000000035296 : test byte ptr [rax + 0x200], bh ; ret
0x000000000009bc3b : test byte ptr [rax + 0x48000000], bl ; mov esi, ebx ; mov rdi, r12 ; call rax
0x0000000000188fcb : test byte ptr [rax + 0x48fffffc], ah ; mov eax, edi ; vzeroupper ; ret
0x00000000000fca5d : test byte ptr [rax + 0x63], 4 ; mov bh, 0x48 ; add eax, edi ; jmp rax
0x00000000000fa0c2 : test byte ptr [rax + 0x63], 4 ; mov bl, 0x48 ; add eax, ebx ; jmp rax
0x00000000000e2ffa : test byte ptr [rax + 0x63], 4 ; mov dl, 0x48 ; add eax, edx ; jmp rax
0x000000000007c5c1 : test byte ptr [rax + 0xf], 0x44 ; ret 0x36e9
0x000000000005abef : test byte ptr [rax + 0xf], 0x45 ; ret 0x8948
0x000000000009c2e3 : test byte ptr [rax + 1], bh ; add byte ptr [rax], al ; mov rdi, qword ptr [rdi + 0x48] ; mov rsi, rbp ; call rax
0x00000000000fa443 : test byte ptr [rax + 5], cl ; add byte ptr [rax], al ; mov dword ptr [rsp], ebp ; jmp 0xfa419
0x00000000000822bf : test byte ptr [rax + rax - 0x76b80000], ah ; ret
0x000000000015d6af : test byte ptr [rax + rax - 0x7cb70000], dl ; ret
0x00000000000c5bbc : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000054908 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x8b44
0x00000000000547aa : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x8b4c
0x000000000011ba44 : test byte ptr [rax + rax], cl ; mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x000000000011b987 : test byte ptr [rax + rax], cl ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000008bacf : test byte ptr [rax + rbp*4], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0x5e
0x000000000017f928 : test byte ptr [rax + rbx - 0x76b30000], al ; retf
0x0000000000083509 : test byte ptr [rax + rbx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000013eda1 : test byte ptr [rax + rdi*4], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000013f657 : test byte ptr [rax + rdi], ah ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x75], 5 ; ret 0xa47
0x0000000000031d89 : test byte ptr [rax - 0x76b80000], bl ; ret 0x294c
0x00000000000a009a : test byte ptr [rax - 0x77], 0xd0 ; cmovne rax, rdi ; ret
0x000000000010c406 : test byte ptr [rax - 0x77], 0xdf ; call rax
0x000000000010c433 : test byte ptr [rax - 0x77], 0xdf ; mov eax, 0x135 ; syscall
0x0000000000155167 : test byte ptr [rax - 0x77], 0xef ; xor eax, eax ; call rcx
0x000000000012df31 : test byte ptr [rax - 0x77], 0xf0 ; ret
0x00000000000636ae : test byte ptr [rax - 0x77], cl ; ret
0x00000000000e675b : test byte ptr [rax - 0x77], cl ; retf
0x0000000000115473 : test byte ptr [rax - 0x77fffffd], ah ; add cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x0000000000038b54 : test byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x39 ; ret 0xf177
0x00000000000f6e4b : test byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe2c1
0x0000000000134c9f : test byte ptr [rax], ah ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000017188c : test byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000063baa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x00000000000ce48a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000009925a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013b36a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cmp edx, 1 ; jne 0x13b32c ; jmp 0x13b345
0x000000000018e78a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x000000000018e79a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x000000000018e7aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x000000000018e7ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x000000000018e7ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x000000000018e71a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x000000000018e72a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x000000000018e73a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x000000000018e74a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x000000000018e75a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x000000000018e76a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x000000000018e77a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x00000000000cdf7a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi - 0xc] ; ret
0x00000000000cdf9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi - 4] ; ret
0x00000000000cdf8a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi - 8] ; ret
0x00000000000b6a2a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x00000000000b542a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000017618a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000017617a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x000000000017615a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x000000000010b90a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000b644a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000001470aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rsi], 0xa ; ret
0x00000000001470ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rsi], 0xc ; ret
0x00000000001470ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rsi], 8 ; ret
0x00000000000b610a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000ba6da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x10 ; pop rbx ; ret
0x0000000000063b9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x10 ; ret
0x000000000011340a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x10 ; syscall
0x000000000012c7ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x000000000012c41a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x18 ; syscall
0x00000000000ba6fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x20 ; pop rbx ; ret
0x00000000001126ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x22 ; syscall
0x00000000000ba6ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x30 ; pop rbx ; ret
0x00000000000e194a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x3b ; syscall
0x00000000000ba71a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x40 ; pop rbx ; ret
0x0000000000115b0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x4c ; syscall
0x0000000000063a0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x52 ; syscall
0x000000000010cafa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5a ; syscall
0x00000000000ba70a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x60 ; pop rbx ; ret
0x00000000000cf77a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x60 ; syscall
0x00000000000e26fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x66 ; syscall
0x00000000000e271a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x00000000000e270a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x00000000000e272a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x00000000000e26ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6e ; syscall
0x00000000000e273a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x73 ; syscall
0x00000000000e356a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x7e ; ret
0x000000000013b86a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x7fffffff ; ret
0x000000000004475a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x83 ; syscall
0x000000000011320a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x8c ; syscall
0x000000000010179a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x8e ; syscall
0x00000000000cf85a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xa4 ; syscall
0x000000000011db4a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xa6 ; syscall
0x0000000000113e6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xaa ; syscall
0x000000000012c68a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x00000000000e357a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xfffa ; ret
0x000000000008749a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000009c4fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000014780a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x00000000000ba6ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 8 ; pop rbx ; ret
0x0000000000044dda : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x19f3c2] ; ret
0x000000000012422a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; ret
0x00000000000e190a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov edi, edx ; mov eax, esi ; syscall
0x00000000001761ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x00000000001761da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000017619a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x00000000000b645a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000b649a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000b64aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000b646a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000007eeda : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov r9, rsi ; jmp rax
0x000000000018648a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, r8 ; vzeroupper ; ret
0x000000000009297a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000188fda : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; vzeroupper ; ret
0x00000000000a700a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; add rax, rdi ; ret
0x000000000018802a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; vzeroupper ; ret
0x00000000000a70da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], si ; mov rax, rdi ; ret
0x00000000000b64da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000b64ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000018e709 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; lea rax, [rdi + 1] ; ret
0x000000000018e6f9 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; lea rax, [rdi] ; ret
0x00000000000b6419 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000b6429 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov dword ptr [rdi], edx ; ret
0x0000000000117659 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0x1c ; syscall
0x00000000000e1509 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0x25 ; syscall
0x000000000011ead9 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0x31 ; syscall
0x000000000011eba9 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0x34 ; syscall
0x000000000010d859 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0x50 ; syscall
0x000000000010e149 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0x5c ; syscall
0x00000000000dc9b9 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 0xd9 ; syscall
0x00000000001123e9 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, 3 ; syscall
0x00000000000dc9e8 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, dword ptr [rdi] ; ret
0x0000000000092968 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov rax, qword ptr [rdi + 0x68] ; ret
0x0000000000176138 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov word ptr [rcx], dx ; ret
0x00000000000b6408 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov word ptr [rdi], dx ; ret
0x000000000009be89 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x0000000000182179 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; vzeroupper ; xor eax, eax ; ret
0x00000000000b9478 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x0000000000155ec9 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; xor eax, eax ; ret
0x00000000000cdc98 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; xor rax, rax ; ret
0x0000000000176126 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; mov byte ptr [rcx], dl ; ret
0x00000000000b63f6 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; mov byte ptr [rdi], dl ; ret
0x000000000008c2b6 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x00000000000aad17 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000001126e6 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; syscall
0x0000000000088dda : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000008a2fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001875aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; vzeroupper ; ret
0x00000000001825ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x000000000009291a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000632da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; ret
0x000000000012dfca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor ecx, ecx ; mov rax, rcx ; ret
0x0000000000026bca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor edi, edi ; mov eax, edx ; syscall
0x000000000008d6ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor edi, edi ; mov rax, rdi ; ret
0x00000000000a6d6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor edx, edx ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00000000000bc5ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor r15d, r15d ; jmp 0xbc5aa
0x00000000000cdfaa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000010c4e1 : test byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000147acc : test byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x000000000017218c : test byte ptr [rax], al ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000170f8c : test byte ptr [rax], al ; sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000002b4ab : test byte ptr [rax], ch ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x00000000000aea2c : test byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000193b7e : test byte ptr [rax], dh ; add eax, 0x89480000 ; ret 0xc148
0x00000000000636a9 : test byte ptr [rax], dl ; or byte ptr [rcx], spl ; test byte ptr [rax - 0x77], cl ; ret
0x00000000001045ec : test byte ptr [rbp + 0x31000004], bh ; fild dword ptr [rbx - 0x6bf0fb08] ; ret
0x0000000000110e23 : test byte ptr [rbp + 0x40], 4 ; jne 0x110e48 ; mov edi, dword ptr [rbp + 0x28] ; call 0x10d89b
0x00000000000e4036 : test byte ptr [rbp + 0xf66fffb], 0x1f ; add byte ptr [rax], r8b ; xor eax, eax ; ret
0x0000000000127d54 : test byte ptr [rbp + 0xf], 0x44 ; retf
0x0000000000180458 : test byte ptr [rbp + rcx], dl ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000e7ffb : test byte ptr [rbp + rsi*8 - 0x7cb70001], bh ; ret
0x000000000002a4e2 : test byte ptr [rbp - 0x75000000], dl ; adc dword ptr [rdi], ecx ; retf 0xd285
0x000000000012f41e : test byte ptr [rbp - 0x77000000], ah ; ret 0xe283
0x000000000012a5be : test byte ptr [rbx + 0x1c], 0x20 ; je 0x12a5d7 ; pop rbx ; ret
0x0000000000146c86 : test byte ptr [rbx + 0x48fffffe], dl ; mov edi, ebx ; call rax
0x000000000009c557 : test byte ptr [rbx + 0x50], 1 ; jne 0x9c539 ; mov rdi, rsi ; call rax
0x000000000009c556 : test byte ptr [rbx + 0x50], 1 ; jne 0x9c53a ; mov rdi, rsi ; call rax
0x000000000009c555 : test byte ptr [rbx + 0x50], 1 ; jne 0x9c53b ; mov rdi, rsi ; call rax
0x00000000000ecbe3 : test byte ptr [rbx + 0x5bffffff], al ; ret
0x0000000000037e4d : test byte ptr [rbx + 0xf000001], bh ; retf 0xd289
0x0000000000035fe0 : test byte ptr [rbx + 0xf000001], dl ; enter -0x3f77, 0xf ; retf 0x148
0x000000000011874b : test byte ptr [rbx + 8], 1 ; jne 0x118796 ; ret
0x0000000000180638 : test byte ptr [rbx + rcx], dh ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000007c478 : test byte ptr [rbx - 0x7c00001a], dh ; ret
0x0000000000127118 : test byte ptr [rbx - 0x7d000000], ch ; ret 0x8801
0x0000000000193428 : test byte ptr [rbx], al ; or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000104b90 : test byte ptr [rbx], bh ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; fild dword ptr [rbx - 0x6af0fd08] ; ret
0x000000000018fb62 : test byte ptr [rbx], bl ; add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000000a2d21 : test byte ptr [rbx], bl ; cmp eax, 0xf7410000 ; ret 0
0x000000000005566d : test byte ptr [rbx], dh ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000155ba0 : test byte ptr [rcx + 0x1482857], 0xc6 ; mov qword ptr [rdi + 0x18], rsi ; ret
0x00000000000f648b : test byte ptr [rcx + 0x442c244c], 0x29 ; ret 0x8944
0x0000000000192d6f : test byte ptr [rcx + 0xf], 0x44 ; ret 0xfe83
0x0000000000032726 : test byte ptr [rcx + 1], cl ; ret
0x00000000000f0eef : test byte ptr [rcx + rax], ah ; add dh, dh ; ret
0x0000000000180818 : test byte ptr [rcx + rcx - 0x76b30000], dl ; retf
0x0000000000142d15 : test byte ptr [rcx + rcx*4 - 0x19], 0xe8 ; jb 0x142d82 ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000013d029 : test byte ptr [rcx + rcx*4 - 0x19], 0xe8 ; ret
0x000000000005af25 : test byte ptr [rcx - 0x47], 0x40 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000013b479 : test byte ptr [rcx - 0x62601735], 0xee ; dec dword ptr [rax + 0x63] ; retf
0x000000000017bc26 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000015cd2a : test byte ptr [rcx], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001366c9 : test byte ptr [rcx], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x0000000000163436 : test byte ptr [rcx], bh ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000017ca06 : test byte ptr [rcx], bh ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000146b7a : test byte ptr [rcx], bl ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x7ed28a40], al ; ret
0x0000000000162746 : test byte ptr [rcx], ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001666b8 : test byte ptr [rcx], ch ; add eax, 0x14634900 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000017c916 : test byte ptr [rcx], ch ; or eax, 0x894d0000 ; retf
0x0000000000162466 : test byte ptr [rcx], cl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000019262a : test byte ptr [rcx], dl ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0x8166
0x0000000000151b9c : test byte ptr [rdi + 0x48000000], ah ; add eax, 0xa0 ; pop rbx ; ret
0x0000000000151c7c : test byte ptr [rdi + 0x48000000], ah ; add eax, 0xa8 ; pop rbx ; ret
0x0000000000151abc : test byte ptr [rdi + 0x48000000], ah ; sub eax, -0x80 ; pop rbx ; ret
0x00000000001519fc : test byte ptr [rdi + 0x5b000000], cl ; ret
0x00000000000b5b86 : test byte ptr [rdi + 0xf], 0 ; movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000bed68 : test byte ptr [rdi + rax - 0x47b80000], ch ; retf 0xfffe
0x00000000001809f8 : test byte ptr [rdi + rax - 0x76b30000], dh ; retf
0x00000000001080ff : test byte ptr [rdi + rax - 0x7fbf0000], bh ; jmp qword ptr [rdx]
0x0000000000103ae4 : test byte ptr [rdi + rcx - 0x5d180000], dl ; retf 3
0x00000000000f8fec : test byte ptr [rdi - 0x7cfffff7], dh ; ret
0x000000000010bd2a : test byte ptr [rdi - 0x9fffffd], bl ; ret 0xf20
0x00000000000ab30e : test byte ptr [rdi], 0 ; movsxd r9, dword ptr [r10 + r9*4] ; lea r10, [r10 + r9] ; jmp r10
0x0000000000087b56 : test byte ptr [rdi], 0x84 ; ret
0x000000000004848f : test byte ptr [rdi], 0x84 ; ret 0
0x000000000007a545 : test byte ptr [rdi], 0x84 ; retf
0x000000000006820a : test byte ptr [rdi], 0x84 ; retf 0xffcf
0x000000000010a866 : test byte ptr [rdi], 0x84 ; retf 6
0x0000000000082e89 : test byte ptr [rdi], 0x84 ; xchg eax, ecx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x00000000001191f4 : test byte ptr [rdi], 0x85 ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x11920b ; call r12
0x00000000000ece5e : test byte ptr [rdi], 0x85 ; ret
0x0000000000026b0a : test byte ptr [rdi], 0x85 ; retf
0x00000000000a2a4f : test byte ptr [rdi], 0x85 ; retf 0xfffe
0x00000000000e627a : test byte ptr [rdi], 0x85 ; retf 1
0x00000000001191c4 : test byte ptr [rdi], 0x85 ; xor eax, 0x49000001 ; mov edi, dword ptr [rbp] ; call r12
0x0000000000036e17 : test byte ptr [rdi], 0x88 ; retf 0xfffe
0x00000000000549ad : test byte ptr [rdi], 0x8e ; ret
0x00000000000e19a7 : test byte ptr [rdi], 0x94 ; ret 0x854d
0x000000000009a24a : test byte ptr [rdi], 0x94 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x0000000000044e42 : test byte ptr [rdi], 0x95 ; ret
0x000000000007af98 : test byte ptr [rdi], 0x9f ; ret
0x0000000000069a96 : test byte ptr [rdi], 0x9f ; ret 0xd629
0x000000000012ef89 : test byte ptr [rdi], 0x9f ; ror dword ptr [rax - 0x77], 0xc6 ; add ecx, ecx ; jmp 0x8b1cb
0x000000000008c1c2 : test byte ptr [rdi], 4 ; sete al ; ret
0x000000000008c1d2 : test byte ptr [rdi], 8 ; sete al ; ret
0x00000000000b5da8 : test byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x000000000006f2a1 : test byte ptr [rdi], bh ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000eff34 : test byte ptr [rdi], bl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000071ce1 : test byte ptr [rdi], ch ; ret
0x000000000008367c : test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000e8b6c : test byte ptr [rdi], dh ; or al, 0 ; movsxd rax, dword ptr [rdx + r15*4] ; add rax, rdx ; jmp rax
0x000000000006f810 : test byte ptr [rdi], dl ; adc byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4904
0x0000000000035224 : test byte ptr [rdx + 0x200], al ; ret
0x00000000000aff11 : test byte ptr [rdx + 0x48000001], bh ; bsr eax, eax ; add rax, rdi ; ret
0x000000000009e22f : test byte ptr [rdx + 0xcd], 1 ; je 0x9e1fa ; ret
0x00000000000bb3cf : test byte ptr [rdx + 0xcd], 1 ; je 0xbb39a ; ret
0x00000000000b695a : test byte ptr [rdx + 0xf], 0 ; movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000009b199 : test byte ptr [rdx + 1], dh ; add byte ptr [rax], al ; mov rdx, r15 ; mov rdi, r13 ; call rax
0x000000000017f748 : test byte ptr [rdx + rbx], ah ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000146d1c : test byte ptr [rdx + rdx*4], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x0000000000129649 : test byte ptr [rdx - 0x17ffffff], ch ; lodsd eax, dword ptr [rsi] ; ret
0x0000000000076411 : test byte ptr [rdx - 0x7c000017], dh ; ret
0x000000000004ec4c : test byte ptr [rdx], ah ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x000000000003e468 : test byte ptr [rdx], al ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fc08], al ; retf 0
0x0000000000100b21 : test byte ptr [rdx], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000008bbfe : test byte ptr [rdx], dl ; add al, ch ; retf 0xfa93
0x00000000000884f1 : test byte ptr [rdx], dl ; add byte ptr [rax - 0x73], cl ; cmp eax, 0x128415 ; call 0x34fdc
0x000000000010b9c0 : test byte ptr [rip + 0x528b4800], cl ; sbb byte ptr [rax - 0x73], cl ; pushfq ; ret 0x8207
0x0000000000106676 : test byte ptr [rip - 0x76fffffd], dh ; ret 0xc085
0x000000000006f61e : test byte ptr [rip - 0x7cfffffb], ah ; ret 0x3901
0x00000000000a3fd5 : test byte ptr [rip - 0x8ffffd6], ch ; ret
0x00000000000a3fe1 : test byte ptr [rip - 0x8ffffd6], cl ; ret
0x00000000000b03ed : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x00000000000424ca : test byte ptr [rsi + 0x48000002], dl ; add edx, ecx ; jmp 0x424e8
0x000000000017faf8 : test byte ptr [rsi + rdx - 0x76b30000], dh ; retf
0x00000000000a42d5 : test byte ptr [rsi - 0x8ffffdb], al ; ret
0x0000000000108a95 : test byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x00000000000b022d : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000018483e : test byte ptr [rsi], ch ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000018453e : test byte ptr [rsi], ch ; adc eax, 0x894d0000 ; retf
0x000000000018573e : test byte ptr [rsi], ch ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000184e3e : test byte ptr [rsi], ch ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000018513e : test byte ptr [rsi], ch ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000017f568 : test byte ptr [rsp + rbx], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000a56c5 : test byte ptr [rsp + rdi*8 - 1], cl ; dec dword ptr [rax + 0x63] ; dec dword ptr [rcx - 0x77] ; retf 0x8d44
0x00000000000dd632 : test ch, al ; add dword ptr [rax], eax ; add byte ptr [rcx + rdi + 0x3d], cl ; ret 0x10
0x0000000000147ade : test ch, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000002c471 : test ch, dh ; add al, 0 ; add bh, dh ; ret 0
0x0000000000104bc6 : test ch, dl ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; fild dword ptr [rbx - 0x6af0fd08] ; ret
0x000000000017f3cb : test cl, ah ; sbb eax, 0x894d0000 ; retf
0x000000000016b9ea : test cl, al ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x1d], cl ; retf 0x4e1
0x0000000000136629 : test cl, al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000017d546 : test cl, bh ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000a6fa9 : test cl, bh ; jne 0xa6f8c ; ret
0x0000000000162e76 : test cl, bh ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000017d366 : test cl, bl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000162b96 : test cl, bl ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000a8ff6 : test cl, ch ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000a92f6 : test cl, ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000aa1f6 : test cl, ch ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000017d456 : test cl, ch ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000a9ef6 : test cl, ch ; add eax, 0x894d0000 ; retf
0x00000000000a9bf6 : test cl, ch ; or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000a98f6 : test cl, ch ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001635a6 : test cl, cl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000017d276 : test cl, cl ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000013de44 : test cl, cl ; jne 0x13de83 ; pop rbx ; ret
0x00000000000a6df8 : test cl, cl ; jne 0xa6dec ; ret
0x00000000000a6f47 : test cl, cl ; jne 0xa6f3e ; xor eax, eax ; ret
0x00000000000b9a2f : test cl, cl ; jne 0xb9a24 ; ret
0x00000000000b9adf : test cl, cl ; jne 0xb9ad4 ; ret
0x00000000000b9d9f : test cl, cl ; jne 0xb9d98 ; sub rax, 1 ; ret
0x00000000000f9593 : test cl, dh ; sbb al, 0 ; add byte ptr [rax + 0x63], cl ; retf 0x8b48
0x0000000000118780 : test dh, 1 ; jne 0x1187a5 ; ret
0x0000000000087c95 : test dh, 8 ; jne 0x87c3b ; jmp 0x87c65
0x000000000003e8fb : test dh, ah ; sub dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fc07], al ; ret 0x29
0x00000000000a0675 : test dh, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000103e23 : test dh, bl ; add eax, 0xf9830000 ; add cl, byte ptr [rax - 0x77] ; ret 0x940f
0x000000000004b972 : test dh, ch ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x0000000000069d16 : test dh, cl ; ret 0xffff
0x00000000000a6c0d : test dh, dh ; jne 0xa6c07 ; mov qword ptr [rdx], rcx ; ret
0x0000000000029e35 : test dh, dh ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000018e584 : test dl, 0x40 ; jne 0x18e549 ; lea rax, [rdi + 7] ; ret
0x000000000018e5b2 : test dl, 4 ; jne 0x18e549 ; lea rax, [rdi + 3] ; ret
0x00000000000f49c9 : test dl, bh ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; retf 0x8b48
0x00000000000a6e52 : test dl, cl ; jne 0xa6e34 ; ret
0x000000000003a7dc : test dl, dl ; and byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fe07], al ; jmp qword ptr [rax]
0x00000000000a0999 : test dl, dl ; cmovne rax, rdi ; ret
0x00000000000ce457 : test dl, dl ; je 0xce47b ; mov cl, dl ; and cl, 0xf ; je 0xce48b ; ret
0x0000000000041e7b : test dl, dl ; jne 0x41e5c ; ret
0x00000000000a6cd9 : test dl, dl ; jne 0xa6cd1 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00000000000a6db4 : test dl, dl ; jne 0xa6dac ; ret
0x00000000000b9c4f : test dl, dl ; jne 0xb9c48 ; lea rax, [rcx - 1] ; ret
0x00000000000e6712 : test dl, dl ; jne 0xe66f3 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000169cf9 : test dword ptr [r8 + r8], 0x93146349 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000712b6 : test dword ptr [rax + 0x31fffffa], eax ; shr cl, 0xdc ; retf
0x000000000013f350 : test dword ptr [rax + 0x3c000001], esi ; and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x2c3c
0x000000000006fc5a : test dword ptr [rax + 0x48fffffa], esi ; lea edi, [rax + 0x10] ; call 0x9c6ab
0x0000000000119677 : test dword ptr [rax + 0x49000000], eax ; mov edi, dword ptr [rdi] ; call r12
0x0000000000119316 : test dword ptr [rax + 0x49000001], esi ; mov edi, dword ptr [rsi] ; call r12
0x00000000001863cb : test dword ptr [rax + 0x4c000000], esp ; mov eax, eax ; vzeroupper ; ret
0x0000000000187e53 : test dword ptr [rax + 2], ebx ; add byte ptr [rax], al ; vzeroupper ; ret
0x0000000000188b63 : test dword ptr [rax + 2], edi ; add byte ptr [rax], al ; vzeroupper ; ret
0x00000000000b60db : test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x000000000017a0a3 : test dword ptr [rax + 6], ebp ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000000b75fb : test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x00000000000b74fb : test dword ptr [rax + 8], edx ; add byte ptr [rax], al ; ret
0x0000000000169ab6 : test dword ptr [rax + r8], 0x93146349 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000001820c7 : test dword ptr [rax + rax - 0x3fcf0000], edx ; vzeroupper ; ret
0x0000000000169ab7 : test dword ptr [rax + rax], 0x93146349 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000011b897 : test dword ptr [rax + rax], ecx ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000007bd79 : test dword ptr [rax - 0x1400000a], edi ; add ecx, dword ptr [rax - 0x77] ; ror byte ptr [rax - 0x77], 1 ; ret 0x8348
0x0000000000065723 : test dword ptr [rax - 0x16000005], edx ; ret 0xfffd
0x00000000000719e6 : test dword ptr [rax - 0x16000006], edi ; retf
0x000000000009d1d7 : test dword ptr [rax - 0x76b70008], eax ; ret 0x394d
0x000000000007c053 : test dword ptr [rax - 0x77000000], esp ; retf
0x0000000000028e40 : test dword ptr [rax - 0x77], 0x3abe9845 ; add byte ptr [rax], al ; add al, ch ; int1 ; ret 0xffff
0x00000000000454fa : test dword ptr [rax - 0x77], 0xfe894cea ; mov rdi, r12 ; call rbx
0x00000000000e666a : test dword ptr [rax - 0x77], ecx ; retf
0x000000000006090b : test dword ptr [rax - 0x7d000000], esp ; ret
0x00000000000a5f08 : test dword ptr [rax - 0x7d], 0x840f06ef ; ret
0x000000000017a55b : test dword ptr [rax - 0x7fffffff], esi ; cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x00000000000f0005 : test dword ptr [rax], 0x89480000 ; fmul dword ptr [rax - 0x7d] ; ret
0x000000000007a2d6 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000119157 : test dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, qword ptr [rbp] ; call r12
0x000000000010c8a7 : test dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000010bd99 : test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0x000000000007c119 : test dword ptr [rax], eax ; idiv edi ; dec dword ptr [rax - 0x77] ; retf 0x8948
0x000000000007b2f0 : test dword ptr [rax], eax ; idiv edi ; inc esi ; test eax, esi ; idiv bh ; jmp qword ptr [rax]
0x0000000000075839 : test dword ptr [rax], ebp ; idiv edi ; call qword ptr [rax]
0x000000000007b739 : test dword ptr [rax], ebx ; idiv edi ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000071120 : test dword ptr [rax], ebx ; retf
0x00000000000c5af3 : test dword ptr [rax], ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000c7e53 : test dword ptr [rax], ecx ; add eax, 0x83480000 ; ret 0x4801
0x000000000007af91 : test dword ptr [rax], ecx ; idiv edi ; inc dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x9f ; ret
0x000000000017a4fb : test dword ptr [rax], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x00000000000e9e9c : test dword ptr [rax], esi ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000075b78 : test dword ptr [rax], esi ; idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000010bd98 : test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x00000000000ef62e : test dword ptr [rbp + 0x45fffffe], esi ; xor ecx, ecx ; add rdx, rax ; jmp 0xef65f
0x0000000000119156 : test dword ptr [rbp + 0x48000000], eax ; mov edi, dword ptr [rbp] ; call r12
0x000000000010d473 : test dword ptr [rbp + 0x48000000], ecx ; add esp, 0x68 ; ret
0x0000000000112f03 : test dword ptr [rbp + 0x48000000], edi ; add esp, 0x70 ; pop rbx ; ret
0x000000000009b3a5 : test dword ptr [rbp + 0x48000000], esp ; add esp, 0x10 ; pop rbx ; ret
0x00000000001191f6 : test dword ptr [rbp + 0x49000000], esp ; mov edi, dword ptr [rbp] ; call r12
0x00000000000baa4a : test dword ptr [rbp - 0x14000002], esi ; retf
0x000000000008a637 : test dword ptr [rbp], esp ; add byte ptr [rcx - 0x77], al ; ret 0x7ce9
0x00000000000aa768 : test dword ptr [rbx + 0x31000000], esp ; rol bl, 0x83 ; ret 0x6620
0x00000000001117e1 : test dword ptr [rbx + 0x48000000], eax ; add esp, 0x40 ; pop rbx ; ret
0x000000000010cce9 : test dword ptr [rbx + 0x48000000], edi ; add esp, 0x68 ; ret
0x000000000015553f : test dword ptr [rbx + 0x48000000], edx ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013cc4c : test dword ptr [rbx + 0x48000000], edx ; add esp, 0x58 ; pop rbx ; pop rbp ; ret
0x000000000003dbd8 : test dword ptr [rbx + 0xa], edi ; add byte ptr [rax], al ; mov rdi, qword ptr [r15 + 0x18] ; call 0x39ecb
0x0000000000111375 : test dword ptr [rbx + 1], eax ; add byte ptr [rax], al ; mov edi, dword ptr [rbx + 0x3c] ; call 0x10d66a
0x00000000000cd8b0 : test dword ptr [rbx + 1], ecx ; add byte ptr [rax], al ; ret
0x00000000000cde18 : test dword ptr [rbx + 1], esp ; add byte ptr [rax], al ; lea rax, [rdi - 0x10] ; ret
0x0000000000176078 : test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x0000000000176058 : test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x0000000000175f70 : test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00000000000b76f0 : test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x000000000018bd87 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000017a407 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000018c1d6 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000119286 : test dword ptr [rbx + rax], edx ; add byte ptr [rcx - 0x75], cl ; call r12
0x000000000017a3a7 : test dword ptr [rbx + rax], esp ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x00000000000e5301 : test dword ptr [rbx + rdi*8 - 1], ecx ; call qword ptr [rax]
0x0000000000182a08 : test dword ptr [rbx - 0x3a000003], esp ; std ; xlatb ; ret 0xe883
0x0000000000165503 : test dword ptr [rbx - 0x76b703aa], 0x5789f74f ; cld ; ret
0x000000000016adf3 : test dword ptr [rbx - 0x76b703b2], 0x4f89f757 ; cld ; ret
0x00000000000ad687 : test dword ptr [rbx - 0x7cb70000], edx ; jmp 0xad6ab
0x0000000000101d4f : test dword ptr [rbx - 0x7efffffc], ebx ; ret 0xffe0
0x00000000000ffdfe : test dword ptr [rbx], esi ; add dword ptr [rax], eax ; add al, ch ; pop rax ; retf 0xfffd
0x000000000010bd3c : test dword ptr [rbx], esp ; add eax, dword ptr [rax] ; add dh, dh ; ret 0xf02
0x0000000000146038 : test dword ptr [rcx + 0x48000000], ebp ; add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000009b4bc : test dword ptr [rcx + 0x48000000], esi ; add esp, 0x18 ; ret
0x000000000004b90b : test dword ptr [rcx + 0xb], edi ; add byte ptr [rax], al ; add rax, 2 ; add r10, r8 ; jmp 0x4b939
0x000000000004e84b : test dword ptr [rcx + 0xb], edi ; add byte ptr [rax], al ; add rax, 2 ; add r10, r8 ; jmp 0x4e879
0x0000000000069919 : test dword ptr [rcx + 0xf], 0x8948f4b6 ; fucomip st(0) ; retf 0x281
0x0000000000175d7a : test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x000000000018bd5d : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000b5cc2 : test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x000000000018bc6d : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000018bb7d : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000cd8f7 : test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x0000000000190437 : test dword ptr [rcx + rax], edx ; add byte ptr [rax], al ; ret
0x00000000000cd8c7 : test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x000000000005697b : test dword ptr [rcx + rbp - 0x38], 0x244c894c ; or byte ptr [rbp + rcx*4 + 0x2c], cl ; ret 0x894c
0x000000000006857d : test dword ptr [rcx + rdi*8 + 0x1e9ffff], esi ; ret
0x0000000000068559 : test dword ptr [rcx + rdi*8 + 0x25e9ffff], esi ; ret
0x000000000017611a : test dword ptr [rcx - 0x3cffffff], esp ; ret
0x000000000005440f : test dword ptr [rcx - 0x7c000007], esi ; ret 0x3901
0x00000000001914df : test dword ptr [rcx], 0x40003d ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8441
0x000000000013a522 : test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000e9adf : test dword ptr [rcx], edi ; or dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0xdd75
0x000000000018244a : test dword ptr [rcx], edx ; add dword ptr [rax], eax ; add ch, al ; std ; xlatb ; ret 0xc085
0x0000000000088ec1 : test dword ptr [rdi + 0x48000000], eax ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000009050a : test dword ptr [rdi + 0x48000000], edx ; add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000001193d0 : test dword ptr [rdi + 0x49000003], edx ; mov edi, dword ptr [rdi] ; call r12
0x0000000000163e85 : test dword ptr [rdi + 5], 0x14634900 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000015e763 : test dword ptr [rdi + rax*8], edx ; setne al ; movzx eax, al ; ret
0x00000000000b5e27 : test dword ptr [rdi + rax], eax ; add byte ptr [rax], al ; ret
0x000000000011956b : test dword ptr [rdi + rax], edi ; add byte ptr [rax], al ; mov rdi, qword ptr [r15] ; call r12
0x00000000000b5e07 : test dword ptr [rdi + rax], esp ; add byte ptr [rax], al ; ret
0x0000000000044986 : test dword ptr [rdi], eax ; setne al ; movzx eax, al ; ret
0x00000000000e9efc : test dword ptr [rdi], ebp ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000069c37 : test dword ptr [rdi], ecx ; ret
0x000000000006d65a : test dword ptr [rdi], esi ; sbb dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x000000000011953d : test dword ptr [rdx + 0x49000002], ebx ; mov edi, dword ptr [rdi] ; call r12
0x0000000000187f31 : test dword ptr [rdx + 1], edi ; add byte ptr [rax], al ; vzeroupper ; ret
0x000000000017a4c9 : test dword ptr [rdx + 2], eax ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000017a499 : test dword ptr [rdx + 2], esi ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x0000000000188999 : test dword ptr [rdx + 4], eax ; add byte ptr [rax], al ; vzeroupper ; ret
0x00000000000b5fc1 : test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x00000000000b73d9 : test dword ptr [rdx + 9], esi ; add byte ptr [rax], al ; ret
0x00000000001192e6 : test dword ptr [rdx + rax], edi ; add byte ptr [rax], al ; mov rdi, qword ptr [r14] ; call r12
0x000000000018d0d2 : test dword ptr [rdx + rax], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000119256 : test dword ptr [rdx + rax], edx ; add byte ptr [rax], al ; mov rdi, qword ptr [r14] ; call r12
0x000000000018baa2 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000501a5 : test dword ptr [rdx - 0x43000000], ebp ; add byte ptr [rax + rax], cl ; add cl, ch ; ret 0xfffd
0x000000000017a381 : test dword ptr [rdx - 0x7ffffffd], ecx ; cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x000000000017a359 : test dword ptr [rdx - 0x7ffffffd], esi ; cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x000000000017a469 : test dword ptr [rdx - 0x7ffffffe], esp ; cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x0000000000193d57 : test dword ptr [rdx], 0x894c0000 ; ret 0x8341
0x0000000000176037 : test dword ptr [rdx], eax ; add byte ptr [rax], al ; ret
0x000000000002f189 : test dword ptr [rdx], ebx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000017a3d9 : test dword ptr [rdx], esi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x00000000001191c6 : test dword ptr [rip + 0x49000001], esi ; mov edi, dword ptr [rbp] ; call r12
0x000000000005f8e1 : test dword ptr [rip + 0x6f0f6600], edx ; ret 0xc3e8
0x000000000018243e : test dword ptr [rip - 0x3affffff], ebp ; std ; xlatb ; ret
0x0000000000185f13 : test dword ptr [rip - 0x76ffffff], edi ; ret 0x8948
0x0000000000181f0d : test dword ptr [rsi + 0x29fffffe], ebx ; enter -0x73b, 0x77 ; ret
0x000000000010ce6e : test dword ptr [rsi + 0x48000000], edi ; add esp, 0x78 ; ret
0x00000000000cdebd : test dword ptr [rsi + 0x48000000], edi ; lea eax, [rdi - 0x10] ; ret
0x000000000018fdc2 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000188c65 : test dword ptr [rsi + 1], esi ; add byte ptr [rax], al ; vzeroupper ; ret
0x00000000001194e1 : test dword ptr [rsi + 6], esi ; add byte ptr [rax], al ; mov rdi, qword ptr [r15] ; call r12
0x00000000000b5de5 : test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x00000000000b5dc5 : test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x00000000000b5cdd : test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x000000000009c46c : test dword ptr [rsi + rdi*8 - 0x74b70001], ecx ; add eax, 0x147ad8 ; call qword ptr [rax]
0x0000000000062216 : test dword ptr [rsi + rdi*8 - 1], eax ; inc dword ptr [rcx + 0xf] ; mov dh, 0x56 ; or al, 0xf6 ; ret 0x7440
0x000000000007ca63 : test dword ptr [rsi - 0x16000006], edx ; ret
0x00000000000d94c5 : test dword ptr [rsi], esi ; sbb byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000018bfa8 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x0000000000194d07 : test dword ptr [rsp + rdi*8 + 0x7d8b49ff], ecx ; adc byte ptr [rax + 1], cl ; out dx, eax ; call r12
0x00000000000e5523 : test dword ptr [rsp + rdi*8 - 0x49f00001], edx ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x0000000000146039 : test eax, 0x48000000 ; add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000166b93 : test eax, 0x49000524 ; movsxd rdx, dword ptr [rbx + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000001203b3 : test eax, 0x5b000c3f ; ret
0x0000000000094e43 : test eax, 0x76001527 ; xchg eax, edx ; add rsp, 8 ; ret
0x0000000000168fa6 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000000437a3 : test eax, 0x81000000 ; sti ; push rax ; ret
0x000000000005526e : test eax, 0x89480015 ; ret
0x0000000000035066 : test eax, 0x89480017 ; ret
0x00000000000604d5 : test eax, 0x950f7ff0 ; ret 0xc166
0x00000000000efdf9 : test eax, 0xbdfffffc ; add eax, 0xe9000000 ; retf
0x000000000011f94b : test eax, 0xf200e ; jne 0x11f98c ; mov eax, 0x42 ; syscall
0x00000000000cdf41 : test eax, 1 ; je 0xcdfbb ; lea rax, [rdi - 0x10] ; ret
0x00000000000c63a3 : test eax, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000011b7af : test eax, eax ; cmove eax, edx ; ret
0x00000000000cf74e : test eax, eax ; cmove rax, rdx ; add rsp, 0x28 ; ret
0x0000000000113226 : test eax, eax ; cmovns eax, edx ; ret
0x0000000000047cc5 : test eax, eax ; cmovs eax, edx ; ret
0x0000000000103ae1 : test eax, eax ; je 0x104a87 ; call 0x14059a
0x000000000010c3ff : test eax, eax ; je 0x10c43b ; xor edx, edx ; xor esi, esi ; mov rdi, rbx ; call rax
0x000000000010c491 : test eax, eax ; je 0x10c4c6 ; xor edx, edx ; call rax
0x0000000000113cac : test eax, eax ; je 0x113cb5 ; ret
0x0000000000115c01 : test eax, eax ; je 0x115c0f ; mov qword ptr [rax], rdx ; ret
0x000000000011820f : test eax, eax ; je 0x1181ea ; mov eax, 0xffffffff ; jmp 0x1181ef
0x000000000011aa9b : test eax, eax ; je 0x11ab38 ; call rax
0x000000000011ac26 : test eax, eax ; je 0x11ad48 ; call rax
0x000000000012781d : test eax, eax ; je 0x1277ff ; mov r14, qword ptr [r15 + 0x38] ; jmp 0x1277f3
0x000000000012a5af : test eax, eax ; je 0x12a5eb ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x000000000012c222 : test eax, eax ; je 0x12c22c ; call rax
0x000000000012c2e3 : test eax, eax ; je 0x12c2ed ; call rax
0x000000000012c2e3 : test eax, eax ; je 0x12c2f1 ; call rax
0x000000000012c323 : test eax, eax ; je 0x12c32d ; call rax
0x000000000012c323 : test eax, eax ; je 0x12c331 ; call rax
0x000000000012c6e0 : test eax, eax ; je 0x12c714 ; call rax
0x000000000012e0da : test eax, eax ; je 0x12e0f0 ; add rsp, 8 ; ret
0x0000000000136a5d : test eax, eax ; je 0x136a6d ; mov rdi, rbx ; call rax
0x0000000000136d4d : test eax, eax ; je 0x136d5d ; mov rdi, rbx ; call rax
0x0000000000136e5d : test eax, eax ; je 0x136e75 ; lea rdi, [rip + 0xb2378] ; call rax
0x000000000013b69e : test eax, eax ; je 0x13b634 ; jmp 0x13b66b
0x000000000013fbf6 : test eax, eax ; je 0x13fc04 ; ret
0x0000000000140987 : test eax, eax ; je 0x140994 ; ret
0x0000000000144745 : test eax, eax ; je 0x14473c ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001450a0 : test eax, eax ; je 0x1450b0 ; mov rdi, rbx ; call rax
0x00000000001459f7 : test eax, eax ; je 0x145a07 ; mov rdi, rbp ; call rax
0x0000000000145d26 : test eax, eax ; je 0x145d34 ; ret
0x0000000000146a0b : test eax, eax ; je 0x146a1b ; mov rdi, rbx ; call rax
0x0000000000146c83 : test eax, eax ; je 0x146b29 ; mov rdi, rbx ; call rax
0x0000000000146d76 : test eax, eax ; je 0x146d86 ; mov rdi, rbx ; call rax
0x0000000000146f81 : test eax, eax ; je 0x146f96 ; xor eax, eax ; ret
0x0000000000147ac9 : test eax, eax ; je 0x147bdc ; mov rdi, rbp ; call qword ptr [rbx]
0x000000000014bc80 : test eax, eax ; je 0x14bc98 ; lea rdi, [rbx + 0xc8] ; call rax
0x000000000014c681 : test eax, eax ; je 0x14c691 ; mov rdi, r12 ; call rax
0x000000000014c869 : test eax, eax ; je 0x14c87b ; lea rdi, [rbp + 0x10] ; call rax
0x000000000014db1f : test eax, eax ; je 0x14db2f ; mov rdi, rbp ; call rax
0x000000000014dbfe : test eax, eax ; je 0x14dc0e ; mov rdi, r12 ; call rax
0x000000000014e95d : test eax, eax ; je 0x14e96f ; lea rdi, [rbx + 0x68] ; call rax
0x000000000014f087 : test eax, eax ; je 0x14f097 ; mov rdi, r12 ; call rax
0x000000000014f3fd : test eax, eax ; je 0x14f40f ; lea rdi, [rbx + 0x58] ; call rax
0x00000000001519c8 : test eax, eax ; je 0x15195a ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000015194d : test eax, eax ; je 0x15195d ; pop rbx ; ret
0x0000000000152ac9 : test eax, eax ; je 0x152adb ; lea rdi, [rbp + 0x10] ; call rax
0x0000000000153222 : test eax, eax ; je 0x153234 ; lea rdi, [rbp + 0x10] ; call rax
0x00000000001580ba : test eax, eax ; je 0x1580dc ; xor ebx, ebx ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000160e52 : test eax, eax ; je 0x160e3a ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000017c633 : test eax, eax ; je 0x17c63f ; xchg eax, edx ; sub eax, edx ; ret
0x000000000017d618 : test eax, eax ; je 0x17d624 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000196221 : test eax, eax ; je 0x196230 ; call rax
0x0000000000026bfc : test eax, eax ; je 0x26c0c ; mov rdi, rbp ; call rax
0x0000000000029b76 : test eax, eax ; je 0x29b84 ; ret
0x0000000000031ec6 : test eax, eax ; je 0x31ed0 ; call rax
0x00000000000330e9 : test eax, eax ; je 0x330f3 ; call rax
0x00000000000824b5 : test eax, eax ; je 0x824cd ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x0000000000082585 : test eax, eax ; je 0x825a3 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x0000000000083c79 : test eax, eax ; je 0x83ca3 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008d95d : test eax, eax ; je 0x8d96d ; pop rbx ; ret
0x000000000009411f : test eax, eax ; je 0x9412c ; call rax
0x000000000009acae : test eax, eax ; je 0x9ad90 ; call rax
0x000000000009add8 : test eax, eax ; je 0x9aeb0 ; call rax
0x000000000009afc5 : test eax, eax ; je 0x9b03a ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000009bfa4 : test eax, eax ; je 0x9bffa ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009d080 : test eax, eax ; je 0x9d098 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a031b : test eax, eax ; je 0xa039a ; add rax, qword ptr [rbp] ; mov rdx, rax ; jmp 0xa034d
0x00000000000aad4a : test eax, eax ; je 0xaad2a ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000afcef : test eax, eax ; je 0xafd0b ; bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x00000000000badcd : test eax, eax ; je 0xbadc3 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dbaa9 : test eax, eax ; je 0xdbacb ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000ff161 : test eax, eax ; je 0xff176 ; xor eax, eax ; ret
0x000000000012a1d9 : test eax, eax ; jg 0x12a1cc ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011db12 : test eax, eax ; jl 0x11db2f ; je 0x11db1f ; ret
0x0000000000031500 : test eax, eax ; jle 0x31517 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000010b30c : test eax, eax ; jne 0x10b329 ; mov eax, 0x11 ; syscall
0x000000000010b3bc : test eax, eax ; jne 0x10b3d9 ; mov eax, 0x12 ; syscall
0x000000000010ce48 : test eax, eax ; jne 0x10ceba ; mov eax, 0x101 ; syscall
0x000000000010cf79 : test eax, eax ; jne 0x10cf96 ; xor eax, eax ; syscall
0x000000000010d019 : test eax, eax ; jne 0x10d039 ; mov eax, 1 ; syscall
0x000000000010d489 : test eax, eax ; jne 0x10d4b9 ; mov eax, 0x48 ; syscall
0x000000000010d669 : test eax, eax ; jne 0x10d689 ; mov eax, 3 ; syscall
0x000000000010d7d9 : test eax, eax ; jne 0x10d7f9 ; mov eax, 0x55 ; syscall
0x00000000001116e9 : test eax, eax ; jne 0x111709 ; mov eax, 7 ; syscall
0x00000000001120c8 : test eax, eax ; jne 0x1120fc ; mov r10, rcx ; mov eax, 0x146 ; syscall
0x00000000001122bc : test eax, eax ; jne 0x1122d9 ; mov eax, 0x115 ; syscall
0x000000000011235c : test eax, eax ; jne 0x112379 ; mov eax, 0x11d ; syscall
0x0000000000113449 : test eax, eax ; jne 0x113469 ; mov eax, 0x13 ; syscall
0x00000000001134e9 : test eax, eax ; jne 0x113509 ; mov eax, 0x14 ; syscall
0x000000000011358c : test eax, eax ; jne 0x1135b4 ; xor r8d, r8d ; mov eax, 0x127 ; syscall
0x000000000011363c : test eax, eax ; jne 0x113664 ; xor r8d, r8d ; mov eax, 0x128 ; syscall
0x00000000001139ba : test eax, eax ; jne 0x1139f1 ; mov eax, 0x71 ; syscall
0x0000000000113a6a : test eax, eax ; jne 0x113aa1 ; mov eax, 0x72 ; syscall
0x0000000000113ffc : test eax, eax ; jne 0x114019 ; mov eax, 0x17 ; syscall
0x00000000001140eb : test eax, eax ; jne 0x11412c ; mov r8, rbx ; mov eax, 0x10e ; syscall
0x0000000000114219 : test eax, eax ; jne 0x114239 ; mov eax, 0x4a ; syscall
0x00000000001142c9 : test eax, eax ; jne 0x1142e9 ; mov eax, 0x4b ; syscall
0x0000000000114d38 : test eax, eax ; jne 0x114d1a ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000114e29 : test eax, eax ; jne 0x114e0a ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000116337 : test eax, eax ; jne 0x11634f ; jmp 0x11646b
0x00000000001175c9 : test eax, eax ; jne 0x1175e9 ; mov eax, 0x1a ; syscall
0x000000000011964a : test eax, eax ; jne 0x119697 ; mov rdi, qword ptr [r15] ; call r12
0x0000000000119674 : test eax, eax ; jne 0x119708 ; mov rdi, qword ptr [r15] ; call r12
0x00000000001193cd : test eax, eax ; jne 0x119778 ; mov rdi, qword ptr [r15] ; call r12
0x000000000011953a : test eax, eax ; jne 0x1197e8 ; mov rdi, qword ptr [r15] ; call r12
0x0000000000119454 : test eax, eax ; jne 0x119858 ; mov rdi, qword ptr [r15] ; call r12
0x00000000001195f2 : test eax, eax ; jne 0x1198c8 ; mov rdi, qword ptr [r15] ; call r12
0x00000000001194b0 : test eax, eax ; jne 0x119938 ; mov rdi, qword ptr [r15] ; call r12
0x0000000000119482 : test eax, eax ; jne 0x1199a8 ; mov rdi, qword ptr [r15] ; call r12
0x000000000011950c : test eax, eax ; jne 0x119a18 ; mov rdi, qword ptr [r15] ; call r12
0x0000000000119596 : test eax, eax ; jne 0x119a88 ; mov rdi, qword ptr [r15] ; call r12
0x00000000001193f8 : test eax, eax ; jne 0x119af8 ; mov rdi, qword ptr [r15] ; call r12
0x00000000001194de : test eax, eax ; jne 0x119b68 ; mov rdi, qword ptr [r15] ; call r12
0x00000000001195c4 : test eax, eax ; jne 0x119bd8 ; mov rdi, qword ptr [r15] ; call r12
0x0000000000119426 : test eax, eax ; jne 0x119c48 ; mov rdi, qword ptr [r15] ; call r12
0x0000000000119568 : test eax, eax ; jne 0x119cb8 ; mov rdi, qword ptr [r15] ; call r12
0x0000000000119620 : test eax, eax ; jne 0x119d28 ; mov rdi, qword ptr [r15] ; call r12
0x000000000011ddfc : test eax, eax ; jne 0x11de19 ; mov eax, 0xe8 ; syscall
0x000000000011de9c : test eax, eax ; jne 0x11deb9 ; mov eax, 0x114 ; syscall
0x000000000011df4c : test eax, eax ; jne 0x11df69 ; mov eax, 0x116 ; syscall
0x000000000011dffc : test eax, eax ; jne 0x11e019 ; mov eax, 0x113 ; syscall
0x000000000011e0b9 : test eax, eax ; jne 0x11e0d9 ; mov eax, 0x130 ; syscall
0x000000000011ea49 : test eax, eax ; jne 0x11ea69 ; mov eax, 0x2b ; syscall
0x000000000011eb19 : test eax, eax ; jne 0x11eb39 ; mov eax, 0x2a ; syscall
0x000000000011ed3c : test eax, eax ; jne 0x11ed59 ; mov eax, 0x2d ; syscall
0x000000000011edf9 : test eax, eax ; jne 0x11ee19 ; mov eax, 0x2f ; syscall
0x000000000011ef59 : test eax, eax ; jne 0x11ef79 ; mov eax, 0x2e ; syscall
0x000000000011effc : test eax, eax ; jne 0x11f019 ; mov eax, 0x2c ; syscall
0x000000000011f44c : test eax, eax ; jne 0x11f469 ; mov eax, 0x120 ; syscall
0x000000000011f4ec : test eax, eax ; jne 0x11f509 ; mov eax, 0x12b ; syscall
0x000000000011f59c : test eax, eax ; jne 0x11f5b9 ; mov eax, 0x133 ; syscall
0x000000000011f71c : test eax, eax ; jne 0x11f739 ; mov eax, 0x45 ; syscall
0x000000000011f7bc : test eax, eax ; jne 0x11f7d9 ; mov eax, 0x46 ; syscall
0x000000000012b763 : test eax, eax ; jne 0x12b77a ; cmp qword ptr [rdi], 0 ; je 0x12b782 ; ret
0x000000000012bda0 : test eax, eax ; jne 0x12bd9b ; pop rdx ; pop r10 ; ret
0x000000000012c3bf : test eax, eax ; jne 0x12c3f9 ; mov eax, 0x23 ; syscall
0x000000000012c7a1 : test eax, eax ; jne 0x12c7e9 ; mov eax, 0xe6 ; syscall
0x00000000001390e4 : test eax, eax ; jne 0x1390d9 ; mov rdi, r15 ; call 0x25321
0x000000000013b237 : test eax, eax ; jne 0x13b257 ; mov eax, r8d ; ret
0x000000000014003a : test eax, eax ; jne 0x140044 ; ret
0x0000000000140168 : test eax, eax ; jne 0x140180 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000141e08 : test eax, eax ; jne 0x141e14 ; ret
0x0000000000145161 : test eax, eax ; jne 0x14517c ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001462a1 : test eax, eax ; jne 0x1462bc ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000146e21 : test eax, eax ; jne 0x146e3c ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000146ed1 : test eax, eax ; jne 0x146eec ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000146f21 : test eax, eax ; jne 0x146f3c ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000146fa1 : test eax, eax ; jne 0x146fbc ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000147023 : test eax, eax ; jne 0x14707a ; mov dword ptr [rsi], 0 ; ret
0x0000000000149d76 : test eax, eax ; jne 0x149d94 ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000149e11 : test eax, eax ; jne 0x149e2c ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000149eac : test eax, eax ; jne 0x149ecc ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000014ca96 : test eax, eax ; jne 0x14caa4 ; ret
0x0000000000152cc6 : test eax, eax ; jne 0x152cd4 ; ret
0x000000000015b11a : test eax, eax ; jne 0x15b12f ; xor eax, eax ; pop rbx ; ret
0x0000000000160dcd : test eax, eax ; jne 0x160def ; mov eax, 0x27 ; syscall
0x000000000018190b : test eax, eax ; jne 0x1818f9 ; sub eax, ecx ; vzeroupper ; ret
0x0000000000181dd0 : test eax, eax ; jne 0x181db9 ; sub eax, ecx ; vzeroupper ; ret
0x0000000000182101 : test eax, eax ; jne 0x182129 ; xor eax, eax ; vzeroupper ; ret
0x0000000000186401 : test eax, eax ; jne 0x18643a ; mov rax, r8 ; vzeroupper ; ret
0x0000000000189b61 : test eax, eax ; jne 0x189b89 ; xor eax, eax ; vzeroupper ; ret
0x0000000000189fc9 : test eax, eax ; jne 0x189fb9 ; sub eax, ecx ; vzeroupper ; ret
0x000000000018a49e : test eax, eax ; jne 0x18a489 ; sub eax, ecx ; vzeroupper ; ret
0x0000000000039c5a : test eax, eax ; jne 0x39c72 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000048ae9 : test eax, eax ; jne 0x48b09 ; mov eax, 0x13e ; syscall
0x0000000000053493 : test eax, eax ; jne 0x53058 ; jmp 0x53470
0x00000000000632cf : test eax, eax ; jne 0x632e8 ; mov rax, rbx ; pop rbx ; ret
0x000000000009191c : test eax, eax ; jne 0x91914 ; ret
0x0000000000092674 : test eax, eax ; jne 0x9266c ; ret
0x000000000009c4ef : test eax, eax ; jne 0x9c4e6 ; xor eax, eax ; ret
0x00000000000aa795 : test eax, eax ; jne 0xaa7f6 ; xor eax, eax ; ret
0x00000000000aa765 : test eax, eax ; jne 0xaa81a ; xor eax, eax ; ret
0x00000000000aac38 : test eax, eax ; jne 0xaacb6 ; xor eax, eax ; ret
0x00000000000aac67 : test eax, eax ; jne 0xaace6 ; xor eax, eax ; ret
0x00000000000baced : test eax, eax ; jne 0xbace4 ; ret
0x00000000000bb216 : test eax, eax ; jne 0xbb22e ; mov rax, rdi ; ret
0x00000000000cccb5 : test eax, eax ; jne 0xccd16 ; xor eax, eax ; ret
0x00000000000ccc85 : test eax, eax ; jne 0xccd3a ; xor eax, eax ; ret
0x00000000000d3327 : test eax, eax ; jne 0xd3343 ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000dbeb6 : test eax, eax ; jne 0xdbe91 ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000ddaba : test eax, eax ; jne 0xddaf1 ; mov eax, 0x74 ; syscall
0x00000000000e1379 : test eax, eax ; jne 0xe139c ; xor r10d, r10d ; mov eax, 0x3d ; syscall
0x00000000000e146c : test eax, eax ; jne 0xe1494 ; xor r8d, r8d ; mov eax, 0xf7 ; syscall
0x00000000000e15b9 : test eax, eax ; jne 0xe15d9 ; mov eax, 0x22 ; syscall
0x00000000000e1639 : test eax, eax ; jne 0xe1659 ; mov eax, 0x23 ; syscall
0x00000000000e278a : test eax, eax ; jne 0xe27c1 ; mov eax, 0x69 ; syscall
0x00000000000e281a : test eax, eax ; jne 0xe2851 ; mov eax, 0x6a ; syscall
0x00000000000e2aaa : test eax, eax ; jne 0xe2ae1 ; mov eax, 0x75 ; syscall
0x00000000000e2b4a : test eax, eax ; jne 0xe2b81 ; mov eax, 0x77 ; syscall
0x0000000000114712 : test eax, eax ; jns 0x114724 ; mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x0000000000039454 : test eax, eax ; jns 0x39428 ; mov r15, r12 ; jmp 0x3942f
0x000000000010b6f3 : test eax, eax ; js 0x10b713 ; cmp rbx, rax ; pop rbx ; setl al ; ret
0x00000000001133d9 : test eax, eax ; js 0x11339e ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015aee1 : test eax, eax ; js 0x15aefa ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008a50b : test eax, eax ; js 0x8a514 ; ret
0x0000000000114742 : test eax, eax ; mov eax, 0 ; cmove rax, rbx ; pop rbx ; ret
0x00000000001183a9 : test eax, eax ; mov qword ptr [rbx], rax ; pop rbx ; setne al ; movzx eax, al ; ret
0x00000000000a0dd3 : test eax, eax ; mov rax, rbx ; pop rbx ; cmovne rax, rdi ; ret
0x0000000000052ff0 : test eax, eax ; sete al ; add rsp, 8 ; movzx eax, al ; ret
0x00000000001446f6 : test eax, eax ; sete al ; add rsp, 8 ; ret
0x0000000000043b6f : test eax, eax ; sete sil ; xor eax, eax ; mov dword ptr [rbx + 0x40], esi ; pop rbx ; ret
0x0000000000149cb9 : test eax, eax ; setne al ; add rsp, 8 ; movzx eax, al ; ret
0x00000000000639f2 : test eax, eax ; setne al ; movzx eax, al ; neg eax ; pop rbx ; ret
0x00000000000c0274 : test eax, eax ; setne dl ; jmp 0xc028b
0x00000000000c5d1b : test eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000091207 : test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000140f70 : test eax, ebx ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000017a333 : test eax, ebx ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x00000000001192b6 : test eax, ecx ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; call r12
0x00000000000e0f47 : test eax, edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000000c8043 : test eax, edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000011fea4 : test eax, edx ; idiv edi ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0
0x000000000011fe98 : test eax, edx ; idiv edi ; inc dword ptr [rcx + rcx*4 - 0x10] ; syscall
0x0000000000119346 : test eax, esi ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; call r12
0x000000000007b2f6 : test eax, esi ; idiv bh ; jmp qword ptr [rax]
0x000000000017a52b : test eax, esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x000000000007b139 : test eax, esp ; idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000119196 : test ebp, eax ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; jge 0x1191a9 ; call r12
0x0000000000105c49 : test ebp, ebp ; jne 0x105c3a ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001190e8 : test ebp, ebp ; jne 0x119120 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000011912b : test ebp, ebp ; jne 0x119189 ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000140933 : test ebp, ebp ; jne 0x14091c ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000194dc1 : test ebp, ebp ; jne 0x194db2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001962ab : test ebp, ebp ; jne 0x196298 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001963de : test ebp, ebp ; jne 0x1963c2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000005159b : test ebp, ebp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rdx], 0x4d ; add edx, eax ; jmp 0x515c9
0x00000000000d977b : test ebp, ebx ; adc eax, 0x89480000 ; ret 0x894c
0x00000000000aa6d0 : test ebx, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000126078 : test ebx, ebx ; jne 0x126090 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e2c9 : test ebx, ebx ; jne 0x12e2e3 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015e80c : test ebx, ebx ; jne 0x15e81d ; pop rbx ; ret
0x000000000015e83c : test ebx, ebx ; jne 0x15e84d ; pop rbx ; ret
0x000000000019638b : test ebx, ebx ; jne 0x196380 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001965da : test ebx, ebx ; jne 0x1965cd ; pop rbx ; ret
0x0000000000196683 : test ebx, ebx ; jne 0x19666d ; pop rbx ; ret
0x0000000000047bfa : test ebx, ebx ; jne 0x47bca ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008d51c : test ebx, ebx ; jne 0x8d53b ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c8908 : test ebx, ebx ; jne 0xc88f4 ; sub ebx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e8091 : test ebx, ebx ; jns 0xe8085 ; lea rax, [rdx + rax*8] ; jmp 0xe8077
0x0000000000038fd1 : test ebx, edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000017a310 : test ebx, edi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x000000000012c9c5 : test ebx, edx ; add byte ptr [rax], al ; add cl, cl ; ret
0x00000000000c2ba9 : test ebx, edx ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x7af08f08], al ; retf 1
0x00000000000aaba8 : test ebx, esi ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000009724f : test ecx, eax ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000018e572 : test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00000000000a3f62 : test ecx, ebx ; and byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000c7c72 : test ecx, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000031fdb : test ecx, ecx ; je 0x31fe5 ; call rcx
0x00000000000cdacb : test ecx, ecx ; je 0xcdade ; xor eax, eax ; ret
0x00000000001218e9 : test ecx, ecx ; jne 0x1218f4 ; ret
0x0000000000121944 : test ecx, ecx ; jne 0x121954 ; ret
0x000000000012216b : test ecx, ecx ; jne 0x122174 ; ret
0x00000000001221b8 : test ecx, ecx ; jne 0x1221c4 ; ret
0x00000000000baf24 : test ecx, ecx ; jne 0xbaef4 ; ret
0x00000000000bb14b : test ecx, ecx ; jne 0xbb144 ; ret
0x00000000000bb22e : test ecx, ecx ; jne 0xbb229 ; xor edi, edi ; mov rax, rdi ; ret
0x00000000000ce259 : test ecx, ecx ; jne 0xce217 ; mov rax, rdx ; ret
0x00000000000c720a : test ecx, edi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000008cda5 : test ecx, edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000049c19 : test ecx, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000010246b : test edi, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; push rdx ; fmul dword ptr [rax - 0x7d] ; ret 0x4c28
0x000000000013a74c : test edi, ecx ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; fisttp dword ptr [rax + 1] ; ret
0x00000000001172b6 : test edi, edi ; je 0x1172ca ; mov dword ptr [rip + 0xcd088], edi ; ret
0x0000000000047c92 : test edi, edi ; je 0x47cdc ; xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x47cac ; pop rbx ; ret
0x0000000000047d8e : test edi, edi ; je 0x47da3 ; mov dword ptr [rdi], 0 ; pop rbx ; ret
0x00000000001161e8 : test edi, edi ; jne 0x116201 ; mov eax, 1 ; ret
0x000000000011936f : test edi, edi ; jne 0x1193c2 ; mov rdi, qword ptr [r14] ; call r12
0x00000000001193a3 : test edi, edi ; jne 0x11941b ; mov rdi, qword ptr [r14] ; call r12
0x0000000000119253 : test edi, edi ; jne 0x11947b ; mov rdi, qword ptr [r14] ; call r12
0x0000000000119313 : test edi, edi ; jne 0x1194d7 ; mov rdi, qword ptr [r14] ; call r12
0x00000000001192e3 : test edi, edi ; jne 0x119533 ; mov rdi, qword ptr [r14] ; call r12
0x00000000001192b3 : test edi, edi ; jne 0x11958f ; mov rdi, qword ptr [r14] ; call r12
0x0000000000119283 : test edi, edi ; jne 0x1195eb ; mov rdi, qword ptr [r14] ; call r12
0x0000000000119343 : test edi, edi ; jne 0x119647 ; mov rdi, qword ptr [r14] ; call r12
0x000000000012a11e : test edi, edi ; jne 0x12a112 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000136d31 : test edi, edi ; jne 0x136d25 ; pop rbx ; ret
0x000000000014007a : test edi, edi ; jne 0x140072 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001944eb : test edi, edi ; jne 0x19441f ; add rsp, 0x38 ; ret
0x0000000000194ab1 : test edi, edi ; jne 0x194b0a ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000e3765 : test edi, edi ; js 0xe3774 ; ret
0x00000000000bd8ed : test edi, edi ; mov r14, rbp ; setne dl ; jmp 0xbd90e
0x00000000000c2ace : test edi, edi ; mov r14, rbp ; setne dl ; jmp 0xc2aee
0x00000000000ca52e : test edi, edi ; mov r14, rbp ; setne dl ; jmp 0xca54e
0x0000000000043274 : test edx, 0x7fffff ; je 0x43288 ; ret
0x0000000000042e5f : test edx, eax ; je 0x42e6c ; ret
0x000000000017a439 : test edx, edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x000000000011e150 : test edx, edx ; je 0x11e18b ; mov ecx, 0x145 ; mov eax, ecx ; syscall
0x0000000000147590 : test edx, edx ; je 0x1475a0 ; mov rdi, rbp ; call rdx
0x0000000000149dcc : test edx, edx ; je 0x149dea ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000149e8c : test edx, edx ; je 0x149eaa ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000149f7c : test edx, edx ; je 0x149f9a ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000015ec1b : test edx, edx ; je 0x15fb0a ; mov rdx, rax ; jmp 0x15ebf2
0x000000000018140f : test edx, edx ; je 0x1813fa ; movsxd rax, ecx ; add rax, rdi ; ret
0x0000000000196124 : test edx, edx ; je 0x19612e ; call rdx
0x000000000008c75f : test edx, edx ; je 0x8c76c ; ret
0x000000000008cb8f : test edx, edx ; je 0x8cb9c ; ret
0x000000000009aa21 : test edx, edx ; je 0x9aa34 ; mov qword ptr [rbx], rdx ; xor eax, eax ; pop rbx ; ret
0x00000000000b01e2 : test edx, edx ; je 0xb01f0 ; bsf eax, edx ; ret
0x00000000000b01e2 : test edx, edx ; je 0xb01f1 ; bsf eax, edx ; ret
0x00000000000b028b : test edx, edx ; je 0xb02a7 ; bsf rax, rdx ; ret
0x00000000000b028b : test edx, edx ; je 0xb02a8 ; bsf rax, rdx ; ret
0x00000000000b022a : test edx, edx ; je 0xb02bb ; bsf rax, rdx ; ret
0x00000000000b022a : test edx, edx ; je 0xb02bc ; bsf rax, rdx ; ret
0x00000000000b045a : test edx, edx ; je 0xb0487 ; bsf rax, rdx ; ret
0x00000000000b045a : test edx, edx ; je 0xb0488 ; bsf rax, rdx ; ret
0x00000000000b03ea : test edx, edx ; je 0xb049b ; bsf rax, rdx ; ret
0x00000000000b03ea : test edx, edx ; je 0xb049c ; bsf rax, rdx ; ret
0x00000000000ce0ca : test edx, edx ; je 0xce0fc ; bsf rax, rdx ; shr rax, 2 ; ret
0x00000000000e4b1b : test edx, edx ; je 0xe5a0a ; mov rdx, rax ; jmp 0xe4af2
0x0000000000114f6a : test edx, edx ; jne 0x114f45 ; xor eax, eax ; pop rbx ; ret
0x0000000000121b0d : test edx, edx ; jne 0x121b1c ; ret
0x000000000012236d : test edx, edx ; jne 0x12237c ; ret
0x000000000012e5e7 : test edx, edx ; jne 0x12e58b ; mov rax, rdi ; ret
0x00000000001562f0 : test edx, edx ; jne 0x156309 ; mov eax, 1 ; ret
0x0000000000156330 : test edx, edx ; jne 0x156349 ; mov eax, 1 ; ret
0x00000000001946c2 : test edx, edx ; jne 0x194724 ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r14 ; ret
0x00000000001948ec : test edx, edx ; jne 0x194929 ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r14 ; ret
0x0000000000034ded : test edx, edx ; jne 0x34dfc ; ret
0x000000000008631f : test edx, edx ; jne 0x86314 ; ret
0x000000000008fb83 : test edx, edx ; jne 0x8fb94 ; ret
0x000000000009087f : test edx, edx ; jne 0x90874 ; ret
0x000000000009c5d9 : test edx, edx ; jne 0x9c5d4 ; ret
0x00000000000ba451 : test edx, edx ; jne 0xba460 ; mov rax, rdi ; ret
0x00000000000bb481 : test edx, edx ; jne 0xbb47c ; ret
0x00000000000bc6ba : test edx, edx ; jne 0xbc6b3 ; ret
0x00000000000bc6ba : test edx, edx ; jne 0xbc6b4 ; ret
0x00000000000cdb12 : test edx, edx ; jne 0xcdb0b ; ret
0x00000000000cdb12 : test edx, edx ; jne 0xcdb0c ; ret
0x00000000000e6620 : test edx, edx ; jne 0xe6602 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000efed5 : test edx, edx ; jne 0xefe75 ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000112794 : test edx, edx ; js 0x1127ac ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x000000000013b7d6 : test edx, edx ; js 0x13b7f2 ; mov rax, rdx ; movsxd rdx, esi ; ret
0x0000000000044b27 : test edx, edx ; mov edx, 1 ; cmove eax, edx ; ret
0x00000000000ff602 : test edx, edx ; sete al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000bb91e : test edx, edx ; sete al ; ret
0x000000000010b8e6 : test esi, 0x575ff00 ; mov word ptr [rdi], si ; xor eax, eax ; ret
0x00000000000951c5 : test esi, ebx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; retf
0x0000000000049739 : test esi, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000018e565 : test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000001121a4 : test esi, esi ; je 0x1121db ; mov eax, 0x118 ; syscall
0x0000000000115ad1 : test esi, esi ; je 0x115b09 ; mov eax, 0x105 ; syscall
0x00000000000314b0 : test esi, esi ; je 0x314c9 ; cmp esi, 3 ; je 0x314c9 ; ret
0x00000000000933e5 : test esi, esi ; je 0x93439 ; mov qword ptr [rsi], rdi ; ret
0x000000000011901f : test esi, esi ; jne 0x11903a ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011921f : test esi, esi ; jne 0x119249 ; mov rdi, qword ptr [r13] ; call r12
0x0000000000043b54 : test esi, esi ; jne 0x43b6a ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x00000000000b0351 : test esi, esi ; jne 0xb0360 ; xor rax, rax ; ret
0x00000000000cdfc1 : test esi, esi ; jne 0xcdfd0 ; xor rax, rax ; ret
0x00000000000a0099 : test esi, esi ; mov rax, rdx ; cmovne rax, rdi ; ret
0x000000000012ef88 : test esi, esi ; setg cl ; mov rsi, rax ; add ecx, ecx ; jmp 0x8b1cc
0x00000000000d99bb : test esi, esp ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000018e57f : test esp, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000011d963 : test esp, esp ; je 0x11d97a ; mov rdi, rbp ; call r12
0x0000000000059141 : test esp, esp ; je 0x59131 ; call 0x2541a
0x00000000000e4811 : test esp, esp ; je 0xe4827 ; mov rdi, rbx ; call r12
0x00000000000fff11 : test esp, esp ; je 0xfff27 ; mov rdi, rbx ; call r12
0x000000000011a989 : test esp, esp ; jne 0x11a9d1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015208f : test esp, esp ; jne 0x1520a8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000165502 : test qword ptr [rbx - 0x76b703aa], 0x5789f74f ; cld ; ret
0x000000000015e762 : test qword ptr [rdi + rax*8], rdx ; setne al ; movzx eax, al ; ret
0x0000000000044985 : test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x00000000000a6e51 : test r10b, r9b ; jne 0xa6e35 ; ret
0x000000000012e5e6 : test r10d, r10d ; jne 0x12e58c ; mov rax, rdi ; ret
0x000000000011d962 : test r12, r12 ; je 0x11d97b ; mov rdi, rbp ; call r12
0x00000000000e4810 : test r12, r12 ; je 0xe4828 ; mov rdi, rbx ; call r12
0x00000000000fff10 : test r12, r12 ; je 0xfff28 ; mov rdi, rbx ; call r12
0x0000000000059140 : test r12d, r12d ; je 0x59132 ; call 0x2541b
0x000000000011a988 : test r12d, r12d ; jne 0x11a9d2 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015208e : test r12d, r12d ; jne 0x1520a9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011912a : test r13, r13 ; jne 0x11918a ; mov rdi, qword ptr [rbp] ; call r12
0x000000000011921e : test r14, r14 ; jne 0x11924a ; mov rdi, qword ptr [r13] ; call r12
0x000000000011936e : test r15, r15 ; jne 0x1193c3 ; mov rdi, qword ptr [r14] ; call r12
0x00000000001193a2 : test r15, r15 ; jne 0x11941c ; mov rdi, qword ptr [r14] ; call r12
0x00000000000bd8ec : test r15d, r15d ; mov r14, rbp ; setne dl ; jmp 0xbd90f
0x00000000000c2acd : test r15d, r15d ; mov r14, rbp ; setne dl ; jmp 0xc2aef
0x00000000000ca52d : test r15d, r15d ; mov r14, rbp ; setne dl ; jmp 0xca54f
0x000000000012d5a4 : test r8b, r8b ; jne 0x12d546 ; mov rax, rdi ; ret
0x000000000017c632 : test r8d, r8d ; je 0x17c640 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000017d617 : test r8d, r8d ; je 0x17d625 ; xchg eax, edx ; sub eax, edx ; ret
0x00000000000bacec : test r8d, r8d ; jne 0xbace5 ; ret
0x00000000000a6fa8 : test r9b, dil ; jne 0xa6f8d ; ret
0x00000000000ce258 : test r9d, r9d ; jne 0xce218 ; mov rax, rdx ; ret
0x00000000000cdf40 : test rax, 1 ; je 0xcdfbc ; lea rax, [rdi - 0x10] ; ret
0x00000000000cf74d : test rax, rax ; cmove rax, rdx ; add rsp, 0x28 ; ret
0x0000000000103ae0 : test rax, rax ; je 0x104a88 ; call 0x14059b
0x000000000010c3fe : test rax, rax ; je 0x10c43c ; xor edx, edx ; xor esi, esi ; mov rdi, rbx ; call rax
0x000000000010c490 : test rax, rax ; je 0x10c4c7 ; xor edx, edx ; call rax
0x0000000000113cab : test rax, rax ; je 0x113cb6 ; ret
0x0000000000115c00 : test rax, rax ; je 0x115c10 ; mov qword ptr [rax], rdx ; ret
0x000000000011aa9a : test rax, rax ; je 0x11ab39 ; call rax
0x000000000011ac25 : test rax, rax ; je 0x11ad49 ; call rax
0x000000000012a5ae : test rax, rax ; je 0x12a5ec ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x000000000012c221 : test rax, rax ; je 0x12c22d ; call rax
0x000000000012c2e2 : test rax, rax ; je 0x12c2ee ; call rax
0x000000000012c2e2 : test rax, rax ; je 0x12c2f2 ; call rax
0x000000000012c322 : test rax, rax ; je 0x12c32e ; call rax
0x000000000012c322 : test rax, rax ; je 0x12c332 ; call rax
0x000000000012c6df : test rax, rax ; je 0x12c715 ; call rax
0x000000000012e0d9 : test rax, rax ; je 0x12e0f1 ; add rsp, 8 ; ret
0x0000000000136a5c : test rax, rax ; je 0x136a6e ; mov rdi, rbx ; call rax
0x0000000000136d4c : test rax, rax ; je 0x136d5e ; mov rdi, rbx ; call rax
0x0000000000136e5c : test rax, rax ; je 0x136e76 ; lea rdi, [rip + 0xb2378] ; call rax
0x0000000000140986 : test rax, rax ; je 0x140995 ; ret
0x000000000014509f : test rax, rax ; je 0x1450b1 ; mov rdi, rbx ; call rax
0x00000000001459f6 : test rax, rax ; je 0x145a08 ; mov rdi, rbp ; call rax
0x0000000000146a0a : test rax, rax ; je 0x146a1c ; mov rdi, rbx ; call rax
0x0000000000146c82 : test rax, rax ; je 0x146b2a ; mov rdi, rbx ; call rax
0x0000000000146d75 : test rax, rax ; je 0x146d87 ; mov rdi, rbx ; call rax
0x000000000014bc7f : test rax, rax ; je 0x14bc99 ; lea rdi, [rbx + 0xc8] ; call rax
0x000000000014c680 : test rax, rax ; je 0x14c692 ; mov rdi, r12 ; call rax
0x000000000014c868 : test rax, rax ; je 0x14c87c ; lea rdi, [rbp + 0x10] ; call rax
0x000000000014db1e : test rax, rax ; je 0x14db30 ; mov rdi, rbp ; call rax
0x000000000014dbfd : test rax, rax ; je 0x14dc0f ; mov rdi, r12 ; call rax
0x000000000014e95c : test rax, rax ; je 0x14e970 ; lea rdi, [rbx + 0x68] ; call rax
0x000000000014f086 : test rax, rax ; je 0x14f098 ; mov rdi, r12 ; call rax
0x000000000014f3fc : test rax, rax ; je 0x14f410 ; lea rdi, [rbx + 0x58] ; call rax
0x00000000001519c7 : test rax, rax ; je 0x15195b ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000015194c : test rax, rax ; je 0x15195e ; pop rbx ; ret
0x0000000000152ac8 : test rax, rax ; je 0x152adc ; lea rdi, [rbp + 0x10] ; call rax
0x0000000000153221 : test rax, rax ; je 0x153235 ; lea rdi, [rbp + 0x10] ; call rax
0x0000000000160e51 : test rax, rax ; je 0x160e3b ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000196220 : test rax, rax ; je 0x196231 ; call rax
0x0000000000026bfb : test rax, rax ; je 0x26c0d ; mov rdi, rbp ; call rax
0x0000000000031ec5 : test rax, rax ; je 0x31ed1 ; call rax
0x00000000000330e8 : test rax, rax ; je 0x330f4 ; call rax
0x00000000000824b4 : test rax, rax ; je 0x824ce ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x0000000000082584 : test rax, rax ; je 0x825a4 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x0000000000083c78 : test rax, rax ; je 0x83ca4 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008d95c : test rax, rax ; je 0x8d96e ; pop rbx ; ret
0x000000000009411e : test rax, rax ; je 0x9412d ; call rax
0x000000000009acad : test rax, rax ; je 0x9ad91 ; call rax
0x000000000009add7 : test rax, rax ; je 0x9aeb1 ; call rax
0x000000000009afc4 : test rax, rax ; je 0x9b03b ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000009d07f : test rax, rax ; je 0x9d099 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a031a : test rax, rax ; je 0xa039b ; add rax, qword ptr [rbp] ; mov rdx, rax ; jmp 0xa034e
0x00000000000badcc : test rax, rax ; je 0xbadc4 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dbaa8 : test rax, rax ; je 0xdbacc ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000ff160 : test rax, rax ; je 0xff177 ; xor eax, eax ; ret
0x000000000011db11 : test rax, rax ; jl 0x11db30 ; je 0x11db20 ; ret
0x0000000000114d37 : test rax, rax ; jne 0x114d1b ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000114e28 : test rax, rax ; jne 0x114e0b ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000116336 : test rax, rax ; jne 0x116350 ; jmp 0x11646c
0x0000000000119649 : test rax, rax ; jne 0x119698 ; mov rdi, qword ptr [r15] ; call r12
0x0000000000141e07 : test rax, rax ; jne 0x141e15 ; ret
0x0000000000039c59 : test rax, rax ; jne 0x39c73 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000053492 : test rax, rax ; jne 0x53059 ; jmp 0x53471
0x000000000009191b : test rax, rax ; jne 0x91915 ; ret
0x0000000000092673 : test rax, rax ; jne 0x9266d ; ret
0x000000000009c4ee : test rax, rax ; jne 0x9c4e7 ; xor eax, eax ; ret
0x000000000010b6f2 : test rax, rax ; js 0x10b714 ; cmp rbx, rax ; pop rbx ; setl al ; ret
0x00000000000a0dd2 : test rax, rax ; mov rax, rbx ; pop rbx ; cmovne rax, rdi ; ret
0x00000000001446f5 : test rax, rax ; sete al ; add rsp, 8 ; ret
0x0000000000105c48 : test rbp, rbp ; jne 0x105c3b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001190e7 : test rbp, rbp ; jne 0x119121 ; mov rdi, qword ptr [rbx] ; call r12
0x0000000000194dc0 : test rbp, rbp ; jne 0x194db3 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001962aa : test rbp, rbp ; jne 0x196299 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001963dd : test rbp, rbp ; jne 0x1963c3 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000126077 : test rbx, rbx ; jne 0x126091 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e2c8 : test rbx, rbx ; jne 0x12e2e4 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015e80b : test rbx, rbx ; jne 0x15e81e ; pop rbx ; ret
0x000000000015e83b : test rbx, rbx ; jne 0x15e84e ; pop rbx ; ret
0x000000000019638a : test rbx, rbx ; jne 0x196381 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001965d9 : test rbx, rbx ; jne 0x1965ce ; pop rbx ; ret
0x0000000000196682 : test rbx, rbx ; jne 0x19666e ; pop rbx ; ret
0x0000000000047bf9 : test rbx, rbx ; jne 0x47bcb ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008d51b : test rbx, rbx ; jne 0x8d53c ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000031fda : test rcx, rcx ; je 0x31fe6 ; call rcx
0x0000000000047d8d : test rdi, rdi ; je 0x47da4 ; mov dword ptr [rdi], 0 ; pop rbx ; ret
0x00000000001161e7 : test rdi, rdi ; jne 0x116202 ; mov eax, 1 ; ret
0x000000000012a11d : test rdi, rdi ; jne 0x12a113 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000136d30 : test rdi, rdi ; jne 0x136d26 ; pop rbx ; ret
0x0000000000136d2f : test rdi, rdi ; jne 0x136d27 ; pop rbx ; ret
0x0000000000140079 : test rdi, rdi ; jne 0x140073 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000042e5e : test rdx, rax ; je 0x42e6d ; ret
0x000000000014758f : test rdx, rdx ; je 0x1475a1 ; mov rdi, rbp ; call rdx
0x000000000015ec1a : test rdx, rdx ; je 0x15fb0b ; mov rdx, rax ; jmp 0x15ebf3
0x0000000000196123 : test rdx, rdx ; je 0x19612f ; call rdx
0x000000000009aa20 : test rdx, rdx ; je 0x9aa35 ; mov qword ptr [rbx], rdx ; xor eax, eax ; pop rbx ; ret
0x00000000000b028a : test rdx, rdx ; je 0xb02a8 ; bsf rax, rdx ; ret
0x00000000000b028a : test rdx, rdx ; je 0xb02a9 ; bsf rax, rdx ; ret
0x00000000000b0229 : test rdx, rdx ; je 0xb02bc ; bsf rax, rdx ; ret
0x00000000000b0459 : test rdx, rdx ; je 0xb0488 ; bsf rax, rdx ; ret
0x00000000000b0459 : test rdx, rdx ; je 0xb0489 ; bsf rax, rdx ; ret
0x00000000000b03e9 : test rdx, rdx ; je 0xb049c ; bsf rax, rdx ; ret
0x00000000000e4b1a : test rdx, rdx ; je 0xe5a0b ; mov rdx, rax ; jmp 0xe4af3
0x0000000000114f69 : test rdx, rdx ; jne 0x114f46 ; xor eax, eax ; pop rbx ; ret
0x000000000008631e : test rdx, rdx ; jne 0x86315 ; ret
0x000000000008fb82 : test rdx, rdx ; jne 0x8fb95 ; ret
0x000000000009087e : test rdx, rdx ; jne 0x90875 ; ret
0x000000000009c5d8 : test rdx, rdx ; jne 0x9c5d5 ; ret
0x00000000000ba450 : test rdx, rdx ; jne 0xba461 ; mov rax, rdi ; ret
0x000000000013b7d5 : test rdx, rdx ; js 0x13b7f3 ; mov rax, rdx ; movsxd rdx, esi ; ret
0x00000000001121a3 : test rsi, rsi ; je 0x1121dc ; mov eax, 0x118 ; syscall
0x0000000000115ad0 : test rsi, rsi ; je 0x115b0a ; mov eax, 0x105 ; syscall
0x00000000000933e4 : test rsi, rsi ; je 0x9343a ; mov qword ptr [rsi], rdi ; ret
0x000000000011901e : test rsi, rsi ; jne 0x11903b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b0350 : test rsi, rsi ; jne 0xb0361 ; xor rax, rax ; ret
0x00000000000cdfc0 : test rsi, rsi ; jne 0xcdfd1 ; xor rax, rax ; ret
0x00000000000a0098 : test rsi, rsi ; mov rax, rdx ; cmovne rax, rdi ; ret
0x000000000010b8e5 : test si, 0xff00 ; jne 0x10b8fd ; mov word ptr [rdi], si ; xor eax, eax ; ret
0x000000000011877f : test sil, 1 ; jne 0x1187a6 ; ret
0x00000000000a6c0c : test sil, sil ; jne 0xa6c08 ; mov qword ptr [rdx], rcx ; ret
0x0000000000029e34 : test sil, sil ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x0000000000182190 : tzcnt eax, eax ; add rax, rdi ; vzeroupper ; ret
0x0000000000043102 : ucomisd xmm0, xmm4 ; jp 0x4311c ; jne 0x4311c ; addsd xmm0, xmm0 ; ret
0x0000000000043103 : ucomiss xmm0, xmm4 ; jp 0x4311b ; jne 0x4311b ; addsd xmm0, xmm0 ; ret
0x000000000004347f : ucomiss xmm0, xmm4 ; jp 0x4349b ; jne 0x4349b ; addss xmm0, xmm0 ; ret
0x00000000000ba071 : ud0 ; lea rsi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000077d81 : unpckhps xmm0, xmmword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0x3145
0x00000000000bfa07 : verw ax ; ret 0xf755
0x00000000000bd5e8 : verw cx ; retf 0xfffd
0x000000000018d49a : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000188074 : vmovdqu xmmword ptr [rdi + r8 - 0x10], xmm0 ; vzeroupper ; ret
0x0000000000187fcf : vmovdqu xmmword ptr [rdi + r8 - 0x10], xmm3 ; vzeroupper ; ret
0x00000000001890fc : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000186b7e : vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3 ; vzeroupper ; ret
0x000000000018d496 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000001890f8 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000018db75 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000001895e1 : vmovdqu xmmword ptr [rdi], xmm0 ; vzeroupper ; ret
0x000000000018db79 : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000189288 : vmovdqu ymmword ptr [r11], ymm4 ; vzeroupper ; ret
0x000000000018932f : vmovdqu ymmword ptr [r11], ymm8 ; vzeroupper ; ret
0x000000000018d486 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000018d46d : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x000000000018d467 : vmovdqu ymmword ptr [r9 - 0x40], ymm2 ; vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x0000000000188010 : vmovdqu ymmword ptr [rdi + 0x20], ymm3 ; mov byte ptr [rdi + 0x40], cl ; vzeroupper ; ret
0x00000000001881b6 : vmovdqu ymmword ptr [rdi + 0x60], ymm7 ; vzeroupper ; ret
0x0000000000187fef : vmovdqu ymmword ptr [rdi + r8 - 0x20], ymm3 ; vzeroupper ; ret
0x0000000000186b9e : vmovdqu ymmword ptr [rdi + rdx - 0x1f], ymm3 ; vzeroupper ; ret
0x0000000000189045 : vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1 ; vzeroupper ; ret
0x000000000018954b : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0 ; vzeroupper ; ret
0x00000000001891d3 : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3 ; vzeroupper ; ret
0x00000000001891a5 : vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7 ; vzeroupper ; ret
0x000000000018d482 : vmovdqu ymmword ptr [rdi], ymm0 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x00000000001894c2 : vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x000000000018db6b : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000018db6f : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000018e052 : vmovdqu64 zmmword ptr [r11], zmm4 ; vzeroupper ; ret
0x000000000018e118 : vmovdqu64 zmmword ptr [r11], zmm8 ; vzeroupper ; ret
0x000000000018df3b : vmovdqu64 zmmword ptr [rdi + rdx - 0x100], zmm7 ; vzeroupper ; ret
0x000000000018dd8e : vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm1 ; vzeroupper ; ret
0x000000000018e3be : vmovdqu64 zmmword ptr [rdi + rdx - 0x80], zmm0 ; vzeroupper ; ret
0x000000000018df79 : vmovdqu64 zmmword ptr [rdi + rdx - 0x80], zmm3 ; vzeroupper ; ret
0x000000000018e321 : vmovdqu64 zmmword ptr [rdi], zmm0 ; vzeroupper ; ret
0x000000000018db84 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000018db88 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000018d7a3 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000018d63c : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000018d43e : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x000000000018d402 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000018d905 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000018dd28 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x000000000018dc8b : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x000000000018db2a : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x0000000000182b71 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x00000000001827a3 : vpmovmskb eax, ymm2 ; sub eax, -1 ; jne 0x1827bc ; vzeroupper ; ret
0x0000000000189713 : vpmovmskb eax, ymm2 ; sub eax, -1 ; jne 0x18972c ; vzeroupper ; ret
0x0000000000181610 : vzeroupper ; ret
0x0000000000182180 : vzeroupper ; xor eax, eax ; ret
0x0000000000080a3e : wait ; adc al, byte ptr [rax] ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x0000000000080b20 : wait ; adc al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000773d1 : wait ; adc eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0xbe01
0x00000000000aa581 : wait ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000000ddcb1 : wait ; jae 0xddcae ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000087c99 : wait ; jmp 0x87c61
0x0000000000097f21 : wait ; out 0xff, eax ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000012c8e1 : wait ; ret
0x0000000000116641 : wait ; ret 0xffff
0x00000000000631b0 : wait ; retf 0x14
0x00000000001573d1 : wait ; retf 8
0x00000000000b8595 : wait ; sub byte ptr [rdi], cl ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000b966d : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000b96ef : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000b97f1 : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000169936 : xabort 4 ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000145382 : xadd edx, edi ; adc ch, byte ptr [rcx] ; retf 0xc8d
0x000000000017c43f : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000017cc63 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000017e5af : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017c02f : xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x000000000017cd53 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000017cb73 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000017bb3b : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000867a2 : xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000000920cb : xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000017c34b : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000183a6c : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000018328c : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000018367c : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000182e9c : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018599d : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145a86 : xchg bh, dh ; in eax, dx ; dec dword ptr [rax - 0x77] ; ret
0x00000000001844a1 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x00000000001856a1 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000184da1 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001850a1 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000184799 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000120b98 : xchg bl, dl ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0x3101
0x00000000000ba5f2 : xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x000000000017d5bb : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000017f10f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011b7d7 : xchg byte ptr [rax + rax], cl ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000017e8ef : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000017bdbf : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000017e0cf : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000017c0ff : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x000000000017d113 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000017c41b : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011e7e1 : xchg byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000007e7e7 : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000018303b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017c4eb : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000097c4b : xchg byte ptr [rax], dl ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000017ec2f : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017c8a3 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000017e40f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017dbef : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x0000000000184497 : xchg byte ptr [rbp + rdx], dh ; add byte ptr [rcx - 0x7d], cl ; jmp 0x1844bb
0x00000000000a02a6 : xchg byte ptr [rbp - 8], cl ; dec dword ptr [rax + 0x29] ; ret
0x00000000000aa580 : xchg byte ptr [rbx + 0x48000002], bl ; add eax, edi ; add rax, rcx ; ret
0x000000000017edcf : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000017c29f : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000193f8f : xchg byte ptr [rbx + rax], ch ; add byte ptr [rax - 0x77], cl ; retf 0xc149
0x000000000017d2f3 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000185697 : xchg byte ptr [rbx + rax], dh ; add byte ptr [rcx - 0x7d], cl ; jmp 0x1856bb
0x000000000017ca83 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000017ba8f : xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x0000000000121a43 : xchg byte ptr [rbx - 0x172ceffc], cl ; and eax, 1 ; ret
0x000000000002a6e5 : xchg byte ptr [rcx + rax], bl ; add byte ptr [rcx - 0xa], al ; ret
0x000000000017d4d3 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000185097 : xchg byte ptr [rcx + rcx], dh ; add byte ptr [rcx - 0x7d], cl ; jmp 0x1850bb
0x00000000000a1162 : xchg byte ptr [rcx - 0x77], cl ; ret 0x8548
0x0000000000174287 : xchg byte ptr [rcx], ah ; add byte ptr [rax - 0x7bf0ffc7], al ; retf
0x00000000000985ad : xchg byte ptr [rcx], dl ; add al, ch ; retf
0x0000000000078934 : xchg byte ptr [rdi + 0x4cfffff7], dl ; mov edx, dword ptr [rbp - 0x518] ; jmp rax
0x000000000017be8f : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x0000000000184a97 : xchg byte ptr [rdi + rcx], dh ; add byte ptr [rcx - 0x7d], cl ; jmp 0x184abb
0x00000000000510a8 : xchg byte ptr [rdi + rdx], bh ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x00000000000803b4 : xchg byte ptr [rdi], ah ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x76b3d395], cl ; retf 0x8348
0x000000000018352c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000182d4c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000077d80 : xchg byte ptr [rdi], cl ; adc eax, 0x89490000 ; ret 0x3145
0x0000000000183e5c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000c06c8 : xchg byte ptr [rdi], cl ; sbb dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000017c36f : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000017d3e3 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000017bb5f : xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000017df2f : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000e3bd8 : xchg byte ptr [rdx], al ; add byte ptr [rax - 0x77], cl ; ret 0x3de9
0x000000000017bc01 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017cd25 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017ce15 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017cc35 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017bf5f : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000185397 : xchg byte ptr [rsi + rax], dh ; add byte ptr [rcx - 0x7d], cl ; jmp 0x1853bb
0x0000000000184a46 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017e065 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017ed65 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000185946 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000185046 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000184d46 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000017e885 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018342d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018473e : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000183d5d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017c1cf : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000017c993 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x0000000000184d97 : xchg byte ptr [rsp + rcx], dh ; add byte ptr [rcx - 0x7d], cl ; jmp 0x184dbb
0x00000000001808bf : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001806df : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001810b7 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000017ffd7 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000180ed7 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000016d1df : xchg cl, al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000017f0a5 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017e3a5 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x00000000000cb117 : xchg dh, al ; adc al, 0 ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000017dec5 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017ebc5 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000018357d : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000182d9d : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000ef8dd : xchg dh, cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000017bc25 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000005fb19 : xchg dl, al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000007cc78 : xchg dl, bh ; dec dword ptr [rax - 0x77] ; ret
0x000000000017cb45 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017c965 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017ca55 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000120bcb : xchg dl, cl ; add eax, dword ptr [rax] ; add byte ptr [rbp + 0x29], cl ; retf 0xd231
0x000000000017c875 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x000000000005f99e : xchg dl, dl ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000140c55 : xchg dword ptr [rax + 0x31000000], eax ; fisttp dword ptr [rax + 0x39] ; ret 0x850f
0x00000000000869b2 : xchg dword ptr [rax + 0x48000000], esp ; cmp dword ptr [rax + 0x30], 0 ; je 0x869cc ; ret
0x0000000000080a44 : xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x00000000001621ce : xchg dword ptr [rax + rax], eax ; movsxd r9, dword ptr [r10 + r9*4] ; lea r10, [r10 + r9] ; jmp r10
0x00000000000282df : xchg dword ptr [rax - 0x75], ecx ; ret
0x000000000006dae4 : xchg dword ptr [rax - 0x76ffffd2], ebp ; retf 0xc183
0x000000000006e333 : xchg dword ptr [rax - 0x76ffffe9], esp ; ret 0xc083
0x0000000000077ecb : xchg dword ptr [rax - 0x76fffff0], esp ; ret 0xc083
0x00000000000791c0 : xchg dword ptr [rax - 0x76fffffa], edx ; ret 0xc083
0x0000000000148fbb : xchg dword ptr [rax - 0x77000000], ebx ; retf 0xe183
0x0000000000088ec2 : xchg dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000011ddc1 : xchg dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000005a50f : xchg dword ptr [rax], eax ; add eax, 0x63480000 ; ret 0x8d48
0x00000000001874bc : xchg dword ptr [rax], eax ; vzeroupper ; ret
0x000000000006a5e6 : xchg dword ptr [rbp - 0x76ffffec], esi ; ret 0xc083
0x000000000007f7f1 : xchg dword ptr [rbp - 0x76fffffd], edx ; ret 0xc083
0x0000000000164cf5 : xchg dword ptr [rcx + 5], eax ; add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000077641 : xchg dword ptr [rcx + rax - 0x10], ecx ; jmp rax
0x000000000010c1c1 : xchg dword ptr [rcx + rax], ecx ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000775d4 : xchg dword ptr [rcx - 0x76ffffe5], esi ; ret 0xc083
0x000000000006e623 : xchg dword ptr [rcx - 0x76ffffee], esp ; retf 0xc183
0x000000000007e5e2 : xchg dword ptr [rcx - 0x76fffff7], ebx ; ret 0xc083
0x000000000002707d : xchg dword ptr [rcx], ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000012bd9e : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x12bd9d ; pop rdx ; pop r10 ; ret
0x000000000002e33f : xchg dword ptr [rdi], ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf
0x00000000000a70ad : xchg dword ptr [rdi], esi ; adc byte ptr [rax], al ; movsxd rdx, dword ptr [rax + rdx*4] ; add rdx, rax ; jmp rdx
0x0000000000080cc9 : xchg dword ptr [rdx + 0x44000002], ecx ; mov eax, ebx ; jmp 0x80c9e
0x0000000000032c71 : xchg dword ptr [rdx + 0x4b000000], ebp ; movsxd rsi, dword ptr [rax + rcx*4] ; add rsi, r8 ; jmp rsi
0x0000000000056001 : xchg dword ptr [rdx - 0x77000000], ebp ; retf 0xc183
0x0000000000056021 : xchg dword ptr [rdx - 0x77000000], ebx ; retf 0xc183
0x0000000000056041 : xchg dword ptr [rdx - 0x77000000], ecx ; retf 0xc183
0x0000000000080989 : xchg dword ptr [rdx], esp ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rsi ; jmp rax
0x0000000000167ab5 : xchg dword ptr [rip + 0x63490005], edx ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000e9c66 : xchg dword ptr [rsi + rdi*8 - 0x7cb70001], esi ; ret 0xf01
0x000000000006540f : xchg dword ptr [rsi - 0x76ffffd6], edi ; retf 0xc183
0x000000000007f7bf : xchg dword ptr [rsi - 0x76fffffd], esi ; ret 0xc083
0x00000000000ff55d : xchg dword ptr [rsi], ecx ; add al, ch ; retf
0x000000000017fc18 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x00000000000dd492 : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000942bf : xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x840f
0x0000000000050dd5 : xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4a
0x000000000007893b : xchg eax, ebp ; call 0x78940
0x00000000000293ec : xchg eax, ebp ; mov byte ptr [rcx + 0xf], 0x95 ; ret
0x00000000000a0834 : xchg eax, ebp ; mov dword ptr [rbp + 0x38], 0x940f41d0 ; ret
0x00000000000a6fa6 : xchg eax, ebp ; mov dword ptr [rcx - 0x7c], 0xc3db75f9 ; nop ; ret
0x000000000012d5a8 : xchg eax, ebp ; mov rax, rdi ; ret
0x000000000015a907 : xchg eax, ebp ; or byte ptr [rax], al ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000293f0 : xchg eax, ebp ; ret
0x00000000000bd8f3 : xchg eax, ebp ; ret 0x10eb
0x0000000000194613 : xchg eax, ebp ; ret 0x145
0x000000000010e845 : xchg eax, ebp ; ret 0x2141
0x000000000013f358 : xchg eax, ebp ; ret 0x2c3c
0x00000000001909f0 : xchg eax, ebp ; ret 0x3145
0x00000000000a0c32 : xchg eax, ebp ; ret 0x3841
0x00000000000a6e48 : xchg eax, ebp ; ret 0x3941
0x00000000000a10f3 : xchg eax, ebp ; ret 0x3948
0x0000000000143d0c : xchg eax, ebp ; ret 0x8041
0x000000000004ab70 : xchg eax, ebp ; ret 0x8445
0x0000000000046271 : xchg eax, ebp ; ret 0x8548
0x00000000000446f9 : xchg eax, ebp ; ret 0x8948
0x000000000015076b : xchg eax, ebp ; ret 0x8b48
0x0000000000058fb0 : xchg eax, ebp ; ret 0x941
0x0000000000058f6c : xchg eax, ebp ; ret 0xb60f
0x0000000000116424 : xchg eax, ebp ; ret 0xc084
0x00000000000604d9 : xchg eax, ebp ; ret 0xc166
0x0000000000089994 : xchg eax, ebp ; ret 0xc283
0x0000000000193cd6 : xchg eax, ebp ; ret 0xc931
0x00000000000c0277 : xchg eax, ebp ; ret 0xceb
0x00000000000994a1 : xchg eax, ebp ; ret 0xd020
0x000000000011634b : xchg eax, ebp ; ret 0xd189
0x00000000000899c5 : xchg eax, ebp ; ret 0xd201
0x00000000000bf567 : xchg eax, ebp ; ret 0xd284
0x0000000000044e6a : xchg eax, ebp ; ret 0xd321
0x0000000000190e8f : xchg eax, ebp ; ret 0xd348
0x000000000005380f : xchg eax, ebp ; ret 0xdaf7
0x0000000000194876 : xchg eax, ebp ; ret 0xdb31
0x000000000013f774 : xchg eax, ebp ; ret 0xfb80
0x00000000000c2ad4 : xchg eax, ebp ; ret 0xfeb
0x0000000000029b5b : xchg eax, ebp ; retf
0x00000000000e372f : xchg eax, ebp ; rol bl, 0x66 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000a6e4f : xchg eax, ebp ; rol dword ptr [rbp - 0x7c], 0xca ; jne 0xa6e37 ; ret
0x000000000008d3d3 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; neg eax ; ret
0x000000000014cab0 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; add eax, 1 ; ret
0x000000000011dd53 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000147988 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x0000000000116210 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000011dd7d : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000148f3e : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000639f5 : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x00000000001019ee : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x0000000000087646 : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000159f1e : xchg eax, ebp ; sti ; dec dword ptr [rax - 0x77] ; ret
0x0000000000086f63 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000035fe1 : xchg eax, ebx ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; enter -0x3f77, 0xf ; retf 0x148
0x000000000015ece6 : xchg eax, ebx ; add eax, 0x894c0000 ; imul eax ; sahf ; retf 0xfffc
0x000000000018aef0 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x00000000001638d3 : xchg eax, ebx ; add rsi, rdx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000000c65fc : xchg eax, ebx ; cmp rcx, -1 ; cmove rcx, rdi ; jmp 0xc65db
0x00000000000b52ec : xchg eax, ebx ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000163a12 : xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000092a30 : xchg eax, ebx ; or dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x00000000000a234b : xchg eax, ebx ; ret
0x000000000005752c : xchg eax, ebx ; ret 0x3948
0x0000000000045601 : xchg eax, ebx ; ret 0x3949
0x0000000000087083 : xchg eax, ebx ; ret 0x394c
0x000000000014ac84 : xchg eax, ebx ; ret 0x841
0x00000000000c6bbf : xchg eax, ebx ; ret 0x844
0x00000000000a2ae5 : xchg eax, ebx ; ret 0x845
0x0000000000045d60 : xchg eax, ebx ; ret 0x854d
0x00000000000c69d7 : xchg eax, ebx ; ret 0xd008
0x0000000000156544 : xchg eax, ebx ; ret 0xd108
0x0000000000108e19 : xchg eax, ebx ; ret 0xfff1
0x00000000000f8881 : xchg eax, ebx ; retf 0xfff2
0x00000000001667a9 : xchg eax, ebx ; sub byte ptr [rip + 0x14634900], al ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000c742b : xchg eax, ecx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000082e8c : xchg eax, ecx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x000000000005497e : xchg eax, ecx ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; retf 0x7c83
0x0000000000112c53 : xchg eax, ecx ; add dword ptr [rax], eax ; mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000d4c33 : xchg eax, ecx ; jmp 0xffffffffc2974c3f
0x000000000017f1b1 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000058f44 : xchg eax, ecx ; mov edi, 0x8c0fffff ; add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000c7e50 : xchg eax, ecx ; or byte ptr [rdi], cl ; test dword ptr [rax], ecx ; add eax, 0x83480000 ; ret 0x4801
0x00000000000c63a0 : xchg eax, ecx ; or byte ptr [rdi], cl ; test eax, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000c7207 : xchg eax, ecx ; or byte ptr [rdi], cl ; test ecx, edi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000012c8d3 : xchg eax, ecx ; ret
0x0000000000028eab : xchg eax, ecx ; ret 0xffff
0x000000000017d8df : xchg eax, ecx ; sub eax, edx ; ret
0x000000000004ad5e : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc101
0x00000000001669a5 : xchg eax, edi ; add eax, 0x14634900 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000041798 : xchg eax, edi ; add rdx, rdi ; jmp rdx
0x000000000003166d : xchg eax, edi ; cmp al, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x00000000001650e5 : xchg eax, edi ; cmp eax, 0x63490005 ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000078935 : xchg eax, edi ; idiv edi ; dec dword ptr [rbx + rcx*4 - 0x6b] ; call 0x78946
0x00000000000eaac4 : xchg eax, edi ; mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x0000000000082291 : xchg eax, edi ; movabs al, byte ptr [0x1308a8948000000] ; add byte ptr [rax], al ; ret
0x00000000000b52e5 : xchg eax, edi ; push rdi ; str word ptr [rcx + 0x63] ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000015b879 : xchg eax, edi ; rcr byte ptr [rax + rax], 0x84 ; ror byte ptr [rdi], 0x84 ; ret
0x000000000011bc3c : xchg eax, edi ; rcr byte ptr [rax + rax], 0x84 ; ror byte ptr [rdi], 0x84 ; ret 0xc
0x000000000015c229 : xchg eax, edi ; rcr byte ptr [rax + rax], 0x84 ; ror byte ptr [rdi], 0x84 ; retf
0x0000000000145585 : xchg eax, edi ; ret
0x00000000000c6aaa : xchg eax, edi ; ret 0x1489
0x00000000000546d3 : xchg eax, edi ; ret 0x8545
0x000000000014a51d : xchg eax, edi ; ret 0xc75
0x000000000014a52b : xchg eax, edi ; ret 0xd284
0x000000000011b44a : xchg eax, edi ; ret 0xda80
0x0000000000098b89 : xchg eax, edi ; ret 0xe2e9
0x000000000013c7c3 : xchg eax, edi ; ret 0xf631
0x0000000000120856 : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x000000000012576d : xchg eax, edi ; sti ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x00000000000ce257 : xchg eax, edi ; test r9d, r9d ; jne 0xce219 ; mov rax, rdx ; ret
0x00000000001597e1 : xchg eax, edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000055f4a : xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000146d1e : xchg eax, edx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x000000000006f4d5 : xchg eax, edx ; add qword ptr [rax], rax ; add byte ptr [rcx + 1], cl ; ret 0x3b45
0x0000000000094e48 : xchg eax, edx ; add rsp, 8 ; ret
0x00000000000dbf4a : xchg eax, edx ; hlt ; dec dword ptr [rax - 0x77] ; ret
0x0000000000098894 : xchg eax, edx ; jo 0x988a9 ; add byte ptr [rax], al ; cmp rdx, r8 ; jne 0x9886a ; ret
0x0000000000055e78 : xchg eax, edx ; mov byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000061c62 : xchg eax, edx ; mov byte ptr [rax], bl ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x7c], 0x83 ; retf 0xebff
0x000000000009b382 : xchg eax, edx ; ret 0x14
0x00000000000c18c3 : xchg eax, edx ; ret 0x2040
0x0000000000192a55 : xchg eax, edx ; ret 0x3145
0x0000000000039a68 : xchg eax, edx ; ret 0x854d
0x0000000000057319 : xchg eax, edx ; ret 0x8949
0x000000000014a9a0 : xchg eax, edx ; ret 0x8b48
0x0000000000192a2e : xchg eax, edx ; ret 0xb60f
0x000000000014a992 : xchg eax, edx ; ret 0xc75
0x000000000009cb63 : xchg eax, edx ; ret 0xf083
0x0000000000181409 : xchg eax, edx ; ret 0xf40
0x0000000000051eed : xchg eax, edx ; ror byte ptr [rax - 0x7d], 0xfa ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x2041
0x00000000001813db : xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000017c637 : xchg eax, edx ; sub eax, edx ; ret
0x00000000000424cb : xchg eax, esi ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; retf 0xdeb
0x000000000008fbf4 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000018b1f0 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000004e05a : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4a
0x000000000016a7a3 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000000c8a4f : xchg eax, esi ; add eax, 0x74db8500 ; sbb bh, byte ptr [rcx] ; ret
0x00000000000ba684 : xchg eax, esi ; add rax, rsi ; jmp rax
0x0000000000055f7d : xchg eax, esi ; add rdx, rsi ; cmp ecx, 0x2f ; jmp rdx
0x0000000000145f86 : xchg eax, esi ; and al, byte ptr [rdi] ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x2c ; call qword ptr [rax]
0x000000000018b2ad : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000129ac2 : xchg eax, esi ; mov cl, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000f8a51 : xchg eax, esi ; mov r11, rdi ; add rax, rsi ; jmp rax
0x000000000015e956 : xchg eax, esi ; mov word ptr [rax], cs ; add bl, al ; mov eax, 0xffffffff ; ret
0x000000000018b20b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000c5af0 : xchg eax, esi ; or byte ptr [rdi], cl ; test dword ptr [rax], ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000c5d18 : xchg eax, esi ; or byte ptr [rdi], cl ; test eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000c8040 : xchg eax, esi ; or byte ptr [rdi], cl ; test eax, edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000c7c6f : xchg eax, esi ; or byte ptr [rdi], cl ; test ecx, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000401c1 : xchg eax, esi ; or eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe07], al ; ret
0x000000000009f406 : xchg eax, esi ; pop rsi ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000009cf37 : xchg eax, esi ; ret 0x3145
0x000000000013b0b7 : xchg eax, esi ; ret 0x8341
0x0000000000133ac0 : xchg eax, esi ; ret 0x8b41
0x00000000000c91f1 : xchg eax, esi ; ret 0xc085
0x00000000000c9247 : xchg eax, esi ; ret 0xd284
0x000000000009cee1 : xchg eax, esi ; ret 0xf631
0x000000000018b25c : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000014ac7e : xchg eax, esi ; ror byte ptr [rcx + rdi - 0xd], 0xf ; xchg eax, ebx ; ret 0x841
0x00000000000b5be6 : xchg eax, esi ; str word ptr [r11 + 0x63] ; or al, 0x83 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000f7058 : xchg eax, esp ; adc byte ptr [rax], al ; add byte ptr [rbp - 0x76df8b40], al ; ret 0xe283
0x00000000000c5f72 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8348
0x00000000000c5f07 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x894c
0x000000000015d6b0 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000152a0f : xchg eax, esp ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008e922 : xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x88 ; ret
0x000000000013e5f1 : xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x1f0f
0x000000000013efb5 : xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x33e9
0x000000000013e4ed : xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0xf41
0x000000000013f0f3 : xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0xfee9
0x000000000013ee8b : xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x8944
0x000000000013f089 : xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x93e9
0x000000000013f00d : xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x43e9
0x000000000005b01e : xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret 0x4840
0x0000000000096d57 : xchg eax, esp ; and al, 0x88 ; or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x4e72
0x00000000000a1c86 : xchg eax, esp ; and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x8348
0x00000000000a197a : xchg eax, esp ; and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x8b48
0x00000000000cf14d : xchg eax, esp ; and al, 0xa4 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x00000000000fbe02 : xchg eax, esp ; and al, 8 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf
0x00000000000ad688 : xchg eax, esp ; and eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; jmp 0xad6aa
0x000000000018140d : xchg eax, esp ; mov byte ptr [rbp + 0x48dd74d2], 0x63 ; ror dword ptr [rax + 1], 0xf8 ; ret
0x0000000000153d90 : xchg eax, esp ; nop dword ptr [rax] ; ret
0x0000000000180819 : xchg eax, esp ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001160fb : xchg eax, esp ; or dword ptr [rax], eax ; call 0x823a5
0x00000000001160fa : xchg eax, esp ; or dword ptr [rax], eax ; call 0x823a6
0x0000000000116147 : xchg eax, esp ; or dword ptr [rax], eax ; lea rdi, [rip + 0x9b45c] ; call 0x823ac
0x0000000000163ce8 : xchg eax, esp ; push rcx ; add eax, 0x14634900 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000002a29b : xchg eax, esp ; ret
0x000000000015e81e : xchg eax, esp ; ret 0x1389
0x00000000001929a5 : xchg eax, esp ; ret 0x1484
0x0000000000102b9c : xchg eax, esp ; ret 0x1589
0x0000000000051ef4 : xchg eax, esp ; ret 0x2041
0x000000000010daef : xchg eax, esp ; ret 0x2044
0x000000000010e3c3 : xchg eax, esp ; ret 0x2141
0x0000000000126329 : xchg eax, esp ; ret 0x2144
0x000000000004a96f : xchg eax, esp ; ret 0x2948
0x00000000000cf329 : xchg eax, esp ; ret 0x3840
0x00000000000a6efe : xchg eax, esp ; ret 0x3941
0x0000000000150606 : xchg eax, esp ; ret 0x3d83
0x0000000000054e3d : xchg eax, esp ; ret 0x4e9
0x0000000000054646 : xchg eax, esp ; ret 0x7c8b
0x00000000000379e7 : xchg eax, esp ; ret 0x8040
0x0000000000054972 : xchg eax, esp ; ret 0x8341
0x000000000013e97f : xchg eax, esp ; ret 0x841
0x00000000001914e7 : xchg eax, esp ; ret 0x8441
0x00000000000a08fb : xchg eax, esp ; ret 0x8445
0x00000000000e19a9 : xchg eax, esp ; ret 0x854d
0x0000000000103081 : xchg eax, esp ; ret 0x8944
0x00000000000e4b00 : xchg eax, esp ; ret 0x894c
0x00000000000d5e8d : xchg eax, esp ; ret 0x8d48
0x000000000013e9b3 : xchg eax, esp ; ret 0xa3c
0x000000000006ae37 : xchg eax, esp ; ret 0xb60f
0x00000000000f3c2e : xchg eax, esp ; ret 0xc083
0x00000000001813de : xchg eax, esp ; ret 0xc085
0x00000000000ee80e : xchg eax, esp ; ret 0xd009
0x00000000000fdf21 : xchg eax, esp ; ret 0xd020
0x00000000000cef93 : xchg eax, esp ; ret 0xd029
0x000000000009cb6c : xchg eax, esp ; ret 0xd084
0x00000000001153f6 : xchg eax, esp ; ret 0xd108
0x0000000000026bbc : xchg eax, esp ; ret 0xd284
0x00000000000a6d1f : xchg eax, esp ; ret 0xd308
0x00000000000844ed : xchg eax, esp ; ret 0xdaf7
0x00000000000f6e52 : xchg eax, esp ; ret 0xe2c1
0x000000000005dc6b : xchg eax, esp ; ret 0xeb83
0x0000000000028b37 : xchg eax, esp ; ret 0xf4e9
0x00000000000e7bf7 : xchg eax, esp ; ret 0xf883
0x0000000000103c10 : xchg eax, esp ; rol byte ptr [rbx - 0x19743], 0xff ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd009
0x000000000012c3dd : xchg eax, esp ; rol byte ptr [rbx - 0x7cb7fd18], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000026778 : xchg eax, esp ; rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x00000000000a6f05 : xchg eax, esp ; rol dword ptr [rbp + 8], 0xca ; jne 0xa6efc ; cmp r8d, ecx ; je 0xa6efc ; ret
0x000000000009a24c : xchg eax, esp ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x00000000001446f9 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or bl, al ; mov eax, 1 ; ret
0x0000000000154369 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x0000000000052ff3 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000639c3 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x00000000000ff605 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0x00000000000e374c : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x00000000000d5a2f : xchg eax, esp ; ror dword ptr [rax - 0x73], 0x14 ; or dword ptr [rcx - 0x73], eax ; dec dword ptr [r8 + 1] ; retf 0x9848
0x00000000000fbf38 : xchg eax, esp ; ror dword ptr [rcx], 0xc8 ; jmp 0xfb51d
0x0000000000054979 : xchg eax, esp ; ror dword ptr [rdx], 0x8c ; and al, 0x91 ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; retf 0x7c83
0x00000000001154b6 : xchg eax, esp ; sar dword ptr [rax], 0xf ; xchg eax, esp ; ret 0xd108
0x00000000001153f1 : xchg eax, esp ; sar dword ptr [rsp + rbx*2], 0xf ; xchg eax, esp ; ret 0xd108
0x0000000000103ae5 : xchg eax, esp ; sldt word ptr [rax] ; call 0x140596
0x00000000000cdbbe : xchg ebp, ebx ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000013b0f9 : xchg edx, esp ; add byte ptr [rax], al ; add byte ptr [rbx - 0x77], dl ; retf
0x000000000007a889 : xchg edx, esp ; and dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000004ab48 : xchg esi, edi ; sbb eax, 0x894c0000 ; ret 0x8948
0x000000000002836a : xchg rax, r8 ; call rcx
0x00000000000c7e4f : xchg rax, rcx ; or byte ptr [rdi], cl ; test dword ptr [rax], ecx ; add eax, 0x83480000 ; ret 0x4801
0x00000000000c5d17 : xchg rax, rsi ; or byte ptr [rdi], cl ; test eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000c803f : xchg rax, rsi ; or byte ptr [rdi], cl ; test eax, edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000016bf97 : xlatb ; add al, 0 ; movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000018b43b : xlatb ; add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000032f8d : xlatb ; add byte ptr [rax], al ; add dh, dh ; ret 0xf04
0x0000000000164ba5 : xlatb ; add eax, 0x14634900 ; xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000001638d9 : xlatb ; add r9, r11 ; jmp r9
0x0000000000152f2d : xlatb ; and ebp, ebp ; dec dword ptr [rax - 0x77] ; ret
0x000000000018b325 : xlatb ; fadd dword ptr [rdx] ; add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x0000000000068204 : xlatb ; idiv edi ; dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; retf 0xffcf
0x0000000000147a1c : xlatb ; in eax, dx ; dec dword ptr [rax - 0x77] ; ret
0x00000000000ba068 : xlatb ; jb 0xba073 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000012bea0 : xlatb ; jmp rax
0x00000000000418a6 : xlatb ; jmp rdi
0x000000000011ba36 : xlatb ; jne 0x11ba2f ; mov rax, qword ptr [rax + 8] ; ret
0x000000000010bfd0 : xlatb ; mov eax, 0x75 ; syscall
0x000000000010bff8 : xlatb ; mov eax, 0x77 ; syscall
0x00000000000e1911 : xlatb ; mov eax, esi ; syscall
0x00000000000e1920 : xlatb ; mov eax, r8d ; syscall
0x000000000013b3ee : xlatb ; mov qword ptr [r9], rdi ; ret
0x00000000000aa5e4 : xlatb ; ret
0x00000000000b0087 : xlatb ; ret 0x94c
0x0000000000182493 : xlatb ; ret 0xc085
0x00000000000a8a90 : xlatb ; ret 0xc148
0x00000000001826b4 : xlatb ; ret 0xe883
0x00000000000aadbb : xlatb ; ret 0xf188
0x00000000000b0204 : xlatb ; ret 0xf66
0x0000000000182878 : xlatb ; ret 0xff2d
0x00000000000afc6d : xlatb ; retf
0x00000000000cde32 : xlatb ; retf 0x8548
0x00000000000b0164 : xlatb ; retf 0xc148
0x00000000001816bc : xlatb ; retf 0xc985
0x00000000000a7710 : xlatb ; retf 0xead3
0x00000000000cdcdc : xlatb ; retf 0xf66
0x0000000000185ee5 : xlatb ; retf 0xfdc5
0x00000000000aa9b1 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000185f45 : xlatb ; rol ch, cl ; std ; xlatb ; ret
0x00000000001820ff : xlatb ; rol dword ptr [rbp + 0x311b75c0], 0xc0 ; vzeroupper ; ret
0x00000000000aa793 : xlatb ; rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x00000000000aac36 : xlatb ; rol dword ptr [rbp + 0x317475c0], 0xc0 ; ret
0x00000000000aac65 : xlatb ; rol dword ptr [rbp + 0x317575c0], 0xc0 ; ret
0x00000000001821c2 : xlatb ; rol dword ptr [rbp - 0x3a378a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000185c92 : xlatb ; rol dword ptr [rbp - 0x3a678a40], 0xfd ; xlatb ; ret 0xc085
0x00000000000aa763 : xlatb ; rol dword ptr [rbp - 0x5c7af040], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000172c92 : xlatb ; ror byte ptr [rax - 0x73], 0x76 ; adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000172cce : xlatb ; ror byte ptr [rax - 0x73], 0x76 ; adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000b0b3f : xlatb ; ror byte ptr [rax - 0x73], 0x76 ; adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0x13
0x00000000000b575e : xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x0000000000186ee7 : xlatb ; ror byte ptr [rcx - 0x7d], cl ; ret 0x4d20
0x0000000000178e4e : xlatb ; ror byte ptr [rdi], 0x28 ; fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39d9d75
0x0000000000179ece : xlatb ; ror byte ptr [rdi], 0x28 ; fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39dadf5
0x000000000018e526 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000000aabd4 : xlatb ; ror dword ptr [rdi], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000018245d : xlatb ; ror dword ptr [rdi], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; vzeroupper ; ret
0x00000000000a8976 : xlatb ; sal bh, 1 ; ret 0x8000
0x00000000000a8836 : xlatb ; sal bh, 1 ; ret 0xc000
0x00000000000a86f6 : xlatb ; sal bh, 1 ; ret 0xe000
0x00000000000a85b6 : xlatb ; sal bh, 1 ; ret 0xf000
0x00000000000a8476 : xlatb ; sal bh, 1 ; ret 0xf800
0x00000000000a8336 : xlatb ; sal bh, 1 ; ret 0xfc00
0x00000000000a81f6 : xlatb ; sal bh, 1 ; ret 0xfe00
0x00000000000a80b6 : xlatb ; sal bh, 1 ; ret 0xff00
0x00000000000a7f76 : xlatb ; sal bh, 1 ; ret 0xff80
0x00000000000a7e36 : xlatb ; sal bh, 1 ; ret 0xffc0
0x00000000000a7cf6 : xlatb ; sal bh, 1 ; ret 0xffe0
0x00000000000a7bb6 : xlatb ; sal bh, 1 ; ret 0xfff0
0x00000000000a7a76 : xlatb ; sal bh, 1 ; ret 0xfff8
0x00000000000a7936 : xlatb ; sal bh, 1 ; ret 0xfffc
0x00000000000a77f6 : xlatb ; sal bh, 1 ; ret 0xfffe
0x0000000000064f5b : xlatb ; sbb eax, 0x8d830000 ; enter -7, -1 ; add al, 0xe9 ; ret
0x00000000000d2a8e : xlatb ; sete al ; add eax, 0x16d ; ret
0x000000000018e522 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000000b0025 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000000b0036 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000011d8c6 : xlatb ; shr rax, 0xc ; xor al, al ; or eax, edx ; ret
0x0000000000047afc : xlatb ; std ; dec dword ptr [rax - 0x77] ; sub byte ptr [rax - 0x77], cl ; ret
0x0000000000113b34 : xlatb ; syscall
0x000000000015e7a8 : xlatb ; xor eax, eax ; ret
0x00000000000b4d98 : xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x00000000000b1fc0 : xor ah, ah ; mov byte ptr [rdx + 1], ah ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000000b2000 : xor ah, ah ; mov byte ptr [rdx + 4], ah ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000000b4d2e : xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x0000000000080839 : xor al, 0 ; add al, 0 ; add cl, ch ; ret 0xfffc
0x000000000011ebb1 : xor al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000041792 : xor al, 0x16 ; add byte ptr [rax + 0x63], cl ; adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x000000000003333a : xor al, 0x1b ; add byte ptr [rax - 0x77], cl ; retf 0x850f
0x0000000000136f05 : xor al, 0x24 ; call r12
0x0000000000109357 : xor al, 0x24 ; mov rcx, rax ; mov rdi, qword ptr [rbx] ; call 0x105dca
0x00000000001093a4 : xor al, 0x24 ; mov rdi, qword ptr [rbx] ; call 0x105dc7
0x0000000000146c68 : xor al, 0x24 ; mov rdi, rbx ; xor eax, eax ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x0000000000101af9 : xor al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x101b62 ; add rsp, 0x38 ; ret
0x000000000012ed5e : xor al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x12ed81 ; add rsp, 0x28 ; ret
0x000000000012edbe : xor al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x12ede1 ; add rsp, 0x28 ; ret
0x000000000015e3c3 : xor al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x15e3e2 ; add rsp, 0x28 ; ret
0x00000000000eae5c : xor al, 0x31 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000aaceb : xor al, 0x48 ; lea eax, [rdi + rax + 0x20] ; ret
0x000000000018258b : xor al, 0x83 ; shl byte ptr [rax], 0x48 ; add eax, edi ; vzeroupper ; ret
0x0000000000032c78 : xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x00000000000f238b : xor al, 0x8d ; dec dword ptr [rcx - 0x7c25d636] ; ret 0x7401
0x000000000018a35c : xor al, 0xa ; jne 0x18a100 ; vzeroupper ; ret
0x00000000000f93d6 : xor al, 0xb ; add byte ptr [rax + 0x63], cl ; add al, 0x83 ; add rax, rbx ; jmp rax
0x00000000000585e4 : xor al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000059dde : xor al, 0xc7 ; mov rdi, qword ptr [rsp + 0x10] ; call 0x568a9
0x00000000000f88e0 : xor al, 0xca ; dec dword ptr [rcx - 0x75] ; jg 0xf88fa ; call 0x25322
0x00000000000e6dd0 : xor al, 0xe5 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000041ec1 : xor al, 0xfe ; dec dword ptr [rax - 0x77] ; ret
0x00000000000bae60 : xor al, 1 ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000cd8c8 : xor al, 1 ; add byte ptr [rax], al ; ret
0x000000000011e901 : xor al, 1 ; add byte ptr [rax], al ; syscall
0x000000000012c21a : xor al, ah ; or eax, dword ptr [rax] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0x12c234 ; call rax
0x000000000011d8cb : xor al, al ; or eax, edx ; ret
0x000000000011ec41 : xor al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000017a3da : xor al, byte ptr [rbx] ; add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x0000000000114341 : xor al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000000dc4f0 : xor al, ch ; adc cl, byte ptr [rsi - 0x76b7000c] ; ret
0x0000000000110245 : xor al, ch ; in eax, 0x4e ; int1 ; dec dword ptr [rax - 0x77] ; ret 0x348
0x0000000000147a04 : xor al, ch ; mul dl ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x00000000000dc7b0 : xor al, ch ; push rdx ; mov esi, esp ; dec dword ptr [rax - 0x77] ; ret
0x0000000000133517 : xor al, ch ; ret
0x00000000000f027f : xor al, ch ; retf
0x0000000000111578 : xor ax, ax ; ret
0x0000000000132022 : xor bh, ch ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000aa81c : xor bl, al ; nop ; xor eax, eax ; ret
0x000000000018b8cc : xor bl, dl ; add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00000000000cd9bc : xor byte ptr [r11], r15b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000000aa6ed : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x000000000010b4c3 : xor byte ptr [r15], r9b ; adc dword ptr [rdi + 0x40], eax ; ret
0x00000000001480d2 : xor byte ptr [r8 - 0x77], cl ; ret 0x8b48
0x00000000000ba524 : xor byte ptr [r8 - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x00000000000f8df8 : xor byte ptr [r8 - 0x7f], r9b ; retf 0
0x0000000000112909 : xor byte ptr [rax + 0x10], bh ; syscall
0x000000000011e1d7 : xor byte ptr [rax + 0x149], bh ; syscall
0x00000000000437e6 : xor byte ptr [rax + 0x21], cl ; retf 0x948
0x000000000008b8f0 : xor byte ptr [rax + 0x29], cl ; ret 0x3949
0x000000000009b235 : xor byte ptr [rax + 0x31], cl ; ret 0x8948
0x0000000000127dd1 : xor byte ptr [rax + 0x39], cl ; ret 0xe975
0x0000000000102183 : xor byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], 0x84 ; ret 0xfffc
0x000000000010cb87 : xor byte ptr [rax + 0x437501e5], al ; mov eax, 0x10c ; syscall
0x0000000000108439 : xor byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x00000000000afbff : xor byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000000afae1 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x0000000000185b22 : xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x0000000000125e0c : xor byte ptr [rax + 1], bh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001368ac : xor byte ptr [rax + 1], bh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014f2cd : xor byte ptr [rax + 1], bh ; movups xmmword ptr [rdx], xmm1 ; ret
0x00000000000aacc6 : xor byte ptr [rax + 1], cl ; ret 0x547c
0x00000000001105dc : xor byte ptr [rax + 1], cl ; retf 0x8948
0x000000000014f2cc : xor byte ptr [rax + 1], dil ; movups xmmword ptr [rdx], xmm1 ; ret
0x0000000000094514 : xor byte ptr [rax + 8], 0 ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000005bd18 : xor byte ptr [rax + 9], cl ; ret 0xb848
0x000000000014bce7 : xor byte ptr [rax + rax + 0x1b80000], 0 ; add byte ptr [rax], al ; ret
0x000000000012c984 : xor byte ptr [rax - 0x73], cl ; jne 0x12c975 ; lea rdi, [rip - 0x160] ; call rax
0x00000000000b7e47 : xor byte ptr [rax - 0x73], cl ; ret
0x0000000000098a33 : xor byte ptr [rax - 0x75], cl ; add eax, 0x14b4a5 ; mov qword ptr [rax], rdi ; ret
0x0000000000093899 : xor byte ptr [rax - 0x75], cl ; add eax, 0x15063f ; mov qword ptr [rax], rdx ; ret
0x000000000002a071 : xor byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000002a80f : xor byte ptr [rax - 0x75], cl ; je 0x2a844 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000145c19 : xor byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x28 ; mov rsi, qword ptr [rsp + 0x20] ; call qword ptr [rax]
0x0000000000055e75 : xor byte ptr [rax - 0x75], cl ; xchg eax, edx ; mov byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000b4f9f : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000005c215 : xor byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xfc90
0x000000000002c211 : xor byte ptr [rax - 0x77], cl ; jl 0x2c242 ; cmp byte ptr [rcx - 0xa], al ; ret 0x7501
0x000000000002e9be : xor byte ptr [rax - 0x77], cl ; jl 0x2e9ee ; cmp dh, dh ; ret
0x0000000000058824 : xor byte ptr [rax - 0x77], cl ; or byte ptr [r8 + 2], r15b ; ret
0x000000000014bf4b : xor byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x000000000008b61c : xor byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000013f71b : xor byte ptr [rax - 0x77], cl ; ret
0x00000000001480d3 : xor byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000109f7e : xor byte ptr [rax - 0x77], cl ; ret 0xc5e9
0x0000000000050fe8 : xor byte ptr [rax - 0x77], cl ; retf 0x8b48
0x00000000001105d8 : xor byte ptr [rax - 0x77], cl ; xor byte ptr [rax + 1], cl ; retf 0x8948
0x00000000001424a1 : xor byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x000000000014713b : xor byte ptr [rax - 0x7b], cl ; sal byte ptr [rdi + rdi + 0x48], 0x8b ; adc ecx, dword ptr [rdi] ; retf 0x1089
0x00000000000f4acb : xor byte ptr [rax - 0x7d], cl ; ret
0x000000000011549a : xor byte ptr [rax - 0x7d], cl ; ret 0x4104
0x0000000000045aed : xor byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000f8f96 : xor byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000000fd484 : xor byte ptr [rax - 0x7d], cl ; ret 0x4908
0x00000000000f863f : xor byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x00000000000ba525 : xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x00000000000f8df9 : xor byte ptr [rax - 0x7f], cl ; retf 0
0x0000000000088dcb : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000026ead : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x0000000000026b9e : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000472e3 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000029b68 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000052e5a : xor byte ptr [rax], al ; add byte ptr [rax], al ; lea rsi, [rip + 0x7b] ; call rax
0x0000000000055997 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov edi, dword ptr [rsp + 0x24] ; call rax
0x000000000012ef50 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsp + 0x10], rax ; call 0x8b1cb
0x000000000013ba32 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsp], 0 ; call rax
0x00000000000472a2 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x00000000000835e9 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rbp ; call rax
0x00000000000356ca : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000000dbb76 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop r13 ; pop r14 ; jmp rax
0x00000000000ba6f1 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000012fd27 : xor byte ptr [rax], al ; add byte ptr [rax], al ; rol rax, 0x11 ; jmp 0x12fcfc
0x000000000011f0e1 : xor byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000010c48c : xor byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x10c4cb ; xor edx, edx ; call rax
0x000000000012c6db : xor byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x12c719 ; call rax
0x00000000000869ba : xor byte ptr [rax], al ; je 0x869c4 ; ret
0x00000000000b9887 : xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000cd9c0 : xor byte ptr [rbp + 0x3d], dh ; ret
0x00000000000cd9bf : xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000000ba2d5 : xor byte ptr [rbp + 0xf], al ; adc dword ptr [rbx], eax ; ret
0x000000000009ce8c : xor byte ptr [rbp + rcx], bl ; cmovne rax, rdx ; ret
0x00000000000d6aa9 : xor byte ptr [rbp - 0x1c], dh ; nop dword ptr [rax] ; mov r11d, eax ; jmp 0xd6a8b
0x000000000005a6fe : xor byte ptr [rbp - 0x77], cl ; retf
0x000000000008f1e9 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009baf8 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001946c9 : xor byte ptr [rbx + 0x5d], bl ; pop r14 ; ret
0x0000000000091bcd : xor byte ptr [rbx - 0x438a0008], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001496e8 : xor byte ptr [rbx - 0x76b6c31b], al ; ror byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000005a50a : xor byte ptr [rbx - 0x78f0f606], al ; add byte ptr [rip + 0x63480000], al ; ret 0x8d48
0x00000000000bdc4c : xor byte ptr [rbx - 0x78f0f607], al ; retf 0xd
0x00000000000cd9bd : xor byte ptr [rbx], bh ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x0000000000033750 : xor byte ptr [rbx], bl ; add byte ptr [rcx + rcx*4 + 0x25], al ; ret 0x1b30
0x00000000001947f3 : xor byte ptr [rcx + 0x21], cl ; retf
0x00000000001516e2 : xor byte ptr [rcx + 0x56], al ; push r13 ; lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x000000000009cf3d : xor byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xb60f
0x000000000011da9e : xor byte ptr [rcx + rcx*4 + 0x4c], cl ; and al, 0x38 ; syscall
0x0000000000118ac6 : xor byte ptr [rcx + rcx*4 - 0x11], cl ; mov dword ptr [rbp - 0x50], r15d ; call r14
0x00000000000d8768 : xor byte ptr [rcx + rcx*4 - 3], cl ; call 0x25226
0x000000000012b23d : xor byte ptr [rcx - 0x72b77fab], cl ; push rcx ; jo 0x12b261 ; adc dword ptr [rbp - 0x78], edi ; call rax
0x000000000012b431 : xor byte ptr [rcx - 0x72b77fab], cl ; push rcx ; jo 0x12b455 ; adc dword ptr [rbp - 0x78], edi ; call rax
0x00000000000d7cdb : xor byte ptr [rcx - 0x77], al ; ret 0xc781
0x000000000009d310 : xor byte ptr [rcx], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000088dcc : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000008d987 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000082299 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000011e0be : xor byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x000000000005c912 : xor byte ptr [rcx], bh ; ret 0xef72
0x00000000001012eb : xor byte ptr [rcx], bh ; retf 0x840f
0x00000000000bc68c : xor byte ptr [rcx], bl ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000012144a : xor byte ptr [rcx], dh ; rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x0000000000115793 : xor byte ptr [rcx], dh ; xor cl, byte ptr [rax - 0x7d] ; ret 0xe904
0x0000000000115753 : xor byte ptr [rcx], dh ; xor dword ptr [rax - 0x7d], ecx ; ret 0xe904
0x000000000010b4c4 : xor byte ptr [rdi], cl ; adc dword ptr [rdi + 0x40], eax ; ret
0x000000000014e8f8 : xor byte ptr [rdi], cl ; adc dword ptr [rsi], eax ; mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000b7dbe : xor byte ptr [rdi], cl ; add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000001473a9 : xor byte ptr [rdi], cl ; retf 0x5089
0x000000000012f41c : xor byte ptr [rdi], cl ; test byte ptr [rbp - 0x77000000], ah ; ret 0xe283
0x000000000009f53a : xor byte ptr [rdx + 0xe], 0x2a ; ret
0x0000000000193b7f : xor byte ptr [rip - 0x76b80000], al ; ret 0xc148
0x000000000018af9f : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018af9a : xor byte ptr [rsi + 0xf], ah ; out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000affec : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000000aa6ee : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000010bd24 : xor byte ptr [rsi - 0x7d], ah ; clc ; adc byte ptr [rdi], cl ; test byte ptr [rdi - 0x9fffffd], bl ; ret 0xf20
0x0000000000153c46 : xor byte ptr [rsi], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001320d7 : xor ch, bh ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000015208b : xor ch, ch ; inc dword ptr [rbp - 0x7b] ; in al, 0x75 ; or eax, 0x5c415d5b ; ret
0x00000000000b9618 : xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000b962e : xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000b9650 : xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000b966e : xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000b968e : xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000b96b4 : xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000b96d0 : xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000b96f0 : xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000b9710 : xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000b9736 : xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000b9758 : xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000b9776 : xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000b9796 : xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000b97b2 : xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000b97d2 : xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000b97f2 : xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000b9812 : xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000b9838 : xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000b9888 : xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000b955e : xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000b957c : xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000b959c : xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000b95be : xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000b95de : xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000b95fe : xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000b9494 : xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000b94a6 : xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000b94bc : xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000b94d4 : xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000b94ea : xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000b94fc : xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000b951a : xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000b9526 : xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000b953c : xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000b9480 : xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x000000000017b84d : xor cl, byte ptr [rax - 0x75] ; add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000dc1fd : xor cl, byte ptr [rax - 0x77] ; fucomip st(0) ; retf 0xfffc
0x0000000000048d22 : xor cl, byte ptr [rax - 0x77] ; ret 0x35e8
0x00000000000491d7 : xor cl, byte ptr [rax - 0x77] ; ret 0x80e8
0x0000000000058995 : xor cl, byte ptr [rax - 0x77] ; ret 0xc2e8
0x0000000000048f7a : xor cl, byte ptr [rax - 0x77] ; ret 0xdde8
0x00000000000df1c1 : xor cl, byte ptr [rax - 0x77] ; retf 0x44f6
0x000000000013ddba : xor cl, byte ptr [rax - 0x77] ; retf 0xf631
0x000000000005c7de : xor cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000115795 : xor cl, byte ptr [rax - 0x7d] ; ret 0xe904
0x00000000000bb04b : xor cl, byte ptr [rbx + 0x47890846] ; or al, 0x48 ; mov eax, ebx ; pop rbx ; ret
0x000000000002b1ab : xor cl, byte ptr [rcx - 0x73] ; add cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000114b04 : xor cl, byte ptr [rip + 0x1b800] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000114ad3 : xor cl, byte ptr [rip + 0x5894800] ; retf
0x00000000000b4c10 : xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000012e2e3 : xor dh, dh ; dec dword ptr [rax + 0x39] ; ret
0x000000000002a33d : xor dh, dh ; ret 0x7501
0x00000000001475cf : xor dh, dh ; ret 0xf04
0x00000000000a763e : xor dl, byte ptr [rax] ; add byte ptr [rdi + 0x63], cl ; or al, 0x8a ; lea r10, [r10 + r9] ; jmp r10
0x0000000000094348 : xor dl, byte ptr [rip - 0x3b7cb800] ; sbb byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000081052 : xor dword ptr [r8 - 0x7d], ecx ; ret 0x8908
0x0000000000034c8f : xor dword ptr [rax + 0x39], ecx ; ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x0000000000127350 : xor dword ptr [rax + 0x63], ecx ; retf 0x44f6
0x000000000011ad76 : xor dword ptr [rax + 0x88], edi ; syscall
0x000000000004a5de : xor dword ptr [rax - 0x39], ecx ; ret
0x000000000015d80e : xor dword ptr [rax - 0x75], ecx ; adc ecx, dword ptr [rax + 1] ; ret 0x3949
0x000000000005f40d : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0x47e9
0x000000000010055f : xor dword ptr [rax - 0x78], eax ; xor esi, esi ; ret 0x7402
0x00000000000a6c0b : xor dword ptr [rax - 0x7c], eax ; div byte ptr [rbp - 0x11] ; mov qword ptr [rdx], rcx ; ret
0x0000000000061b28 : xor dword ptr [rax - 0x7d], ecx ; ret 0x4404
0x0000000000196d8e : xor dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000081053 : xor dword ptr [rax - 0x7d], ecx ; ret 0x8908
0x0000000000115755 : xor dword ptr [rax - 0x7d], ecx ; ret 0xe904
0x000000000011eae1 : xor dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000008104c : xor dword ptr [rbp + 0xf48ff46], ecx ; xor dword ptr [r8 - 0x7d], ecx ; ret 0x8908
0x000000000017f1ab : xor dword ptr [rbx + 0x148b0001], esp ; xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000010c606 : xor dword ptr [rcx - 0x2976b739], ecx ; mov eax, 5 ; syscall
0x00000000001140ee : xor dword ptr [rcx - 0x77], ecx ; fdivr dword ptr [rax + 0x10e] ; syscall
0x000000000010f15b : xor dword ptr [rcx - 0xf], esp ; dec dword ptr [rax + 0x39] ; ret
0x000000000011e3c1 : xor dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000000a6dd6 : xor dword ptr [rcx], edi ; ret 0x2d74
0x00000000000334c8 : xor dword ptr [rcx], edi ; ret 0x820f
0x000000000014844f : xor eax, 0x10c48348 ; pop rbx ; ret
0x000000000009bdf5 : xor eax, 0x114f25 ; call 0x6277c
0x000000000006d953 : xor eax, 0x13c004 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000642ce : xor eax, 0x144ded ; jmp 0x6429e
0x00000000001122a7 : xor eax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x0000000000030f69 : xor eax, 0x20c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000018de23 : xor eax, 0x48000002 ; mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000012f3d3 : xor eax, 0x4858fff3 ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000009c490 : xor eax, 0x487b8b48 ; mov rsi, r13 ; call rax
0x0000000000150af1 : xor eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x00000000001191c7 : xor eax, 0x49000001 ; mov edi, dword ptr [rbp] ; call r12
0x00000000001460c5 : xor eax, 0x72156 ; lea r9, [rsp + 0x2c] ; call qword ptr [rax]
0x0000000000145f85 : xor eax, 0x72296 ; lea r9, [rsp + 0x2c] ; call qword ptr [rax]
0x0000000000052e60 : xor eax, 0x7b ; call rax
0x0000000000136a52 : xor eax, 0x7bfdd ; call 0x142ca7
0x00000000001369ac : xor eax, 0x7c083 ; mov rdi, r14 ; call 0x142caa
0x00000000000ef06b : xor eax, 0x83fffffe ; retf
0x000000000015e955 : xor eax, 0x88c96 ; ret
0x0000000000106677 : xor eax, 0x89000003 ; ret 0xc085
0x0000000000030d47 : xor eax, 0x89000e18 ; ret
0x000000000004447a : xor eax, 0x98c48148 ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000001160f9 : xor eax, 0x99464 ; call 0x823a7
0x000000000010c8a2 : xor eax, 0xb8c7894c ; test dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000e19cd : xor eax, 0xcdf7a ; mov eax, 0x142 ; syscall
0x000000000014e6ae : xor eax, 0xe8000613 ; jae 0x14e6af ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00000000000e2dba : xor eax, 0xe8000ce3 ; lodsd eax, dword ptr [rsi] ; and al, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000ba5b4 : xor eax, 0xf0a27 ; movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x00000000000418d4 : xor eax, 0xf440016 ; mov dh, 0x3c ; or cl, ch ; ret 0xfffc
0x000000000005836a : xor eax, dword ptr [0x28] ; jne 0x583b8 ; leave ; ret
0x0000000000026eaa : xor eax, dword ptr [0x30] ; add rsp, 0x28 ; jmp rax
0x0000000000026b9b : xor eax, dword ptr [0x30] ; call rax
0x0000000000029b65 : xor eax, dword ptr [0x30] ; jmp rax
0x0000000000055994 : xor eax, dword ptr [0x30] ; mov edi, dword ptr [rsp + 0x24] ; call rax
0x00000000000835e6 : xor eax, dword ptr [0x30] ; mov rdi, rbp ; call rax
0x00000000000dbb73 : xor eax, dword ptr [0x30] ; pop r13 ; pop r14 ; jmp rax
0x000000000012fd24 : xor eax, dword ptr [0x30] ; rol rax, 0x11 ; jmp 0x12fcff
0x000000000012c6d8 : xor eax, dword ptr [0x30] ; test rax, rax ; je 0x12c71c ; call rax
0x000000000011ebe1 : xor eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000190f76 : xor eax, dword ptr [rbx - 0x2eb7fe1e] ; jmp 0x48e318d2
0x00000000000ffdff : xor eax, dword ptr [rcx] ; add byte ptr [rax], al ; call 0xdc866
0x000000000011f5a1 : xor eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000005633f : xor eax, eax ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000476dd : xor eax, eax ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r14 ; ret
0x000000000008d8a0 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000004704c : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004896d : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000cea9e : xor eax, eax ; add rsp, 8 ; ret
0x00000000000ecbc7 : xor eax, eax ; and ecx, 1 ; jne 0xecb3d ; ret
0x00000000000352d0 : xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
0x0000000000127439 : xor eax, eax ; call 0x125e49
0x00000000001586cd : xor eax, eax ; call 0x25134
0x00000000001351b4 : xor eax, eax ; call 0x814a4
0x0000000000027a4b : xor eax, eax ; call rbx
0x000000000015516b : xor eax, eax ; call rcx
0x000000000011fab4 : xor eax, eax ; cmp byte ptr [rcx], 0 ; je 0x11fac7 ; ret
0x0000000000047c96 : xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x47ca8 ; pop rbx ; ret
0x000000000012144b : xor eax, eax ; cmp edi, 9 ; setbe al ; ret
0x000000000010c280 : xor eax, eax ; cmp edx, 4 ; je 0x10c29c ; mov eax, 0x1c ; syscall
0x0000000000087640 : xor eax, eax ; cmp esi, -1 ; setne al ; neg eax ; ret
0x00000000001124e2 : xor eax, eax ; cmp esi, 9 ; je 0x11251c ; mov eax, 0x48 ; syscall
0x000000000008c191 : xor eax, eax ; cmp qword ptr [rdi + 0x18], 0 ; setne al ; ret
0x000000000011831a : xor eax, eax ; cmp qword ptr [rsi], 0 ; mov rbx, rsi ; je 0x11833c ; pop rbx ; ret
0x000000000010eb6d : xor eax, eax ; cmp rcx, rdx ; seta al ; sbb eax, 0 ; ret
0x000000000012c3a0 : xor eax, eax ; cmp rdi, rsi ; sete al ; ret
0x00000000000e3728 : xor eax, eax ; cmp rdx, 0x2f ; setne al ; ret
0x00000000000e36d3 : xor eax, eax ; cmp rdx, 0x414a53 ; setne al ; ret
0x00000000000e36e9 : xor eax, eax ; cmp rdx, 0x5346544e ; setne al ; ret
0x00000000000e3716 : xor eax, eax ; cmp rdx, 0x7275 ; setne al ; ret
0x000000000012b7cb : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x000000000015b420 : xor eax, eax ; jmp 0x15b3ea
0x000000000015b4a0 : xor eax, eax ; jmp 0x15b46a
0x000000000009c698 : xor eax, eax ; jmp 0x9c661
0x00000000000bc156 : xor eax, eax ; lea r9, [rsp + 0x28] ; call rbx
0x0000000000112903 : xor eax, eax ; lea rdx, [rsp + 0x30] ; mov eax, 0x10 ; syscall
0x000000000010b487 : xor eax, eax ; mov dword ptr [rbp], ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000043b75 : xor eax, eax ; mov dword ptr [rbx + 0x40], esi ; pop rbx ; ret
0x000000000010b7b6 : xor eax, eax ; mov dword ptr [rbx + 4], edx ; add rsp, 0x10 ; pop rbx ; ret
0x000000000010b748 : xor eax, eax ; mov dword ptr [rbx + 4], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010b6a5 : xor eax, eax ; mov dword ptr [rbx + 4], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000086b4b : xor eax, eax ; mov dword ptr [rbx], ecx ; pop rbx ; ret
0x0000000000112819 : xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x00000000000489e9 : xor eax, eax ; mov dword ptr [rsi + 0xc], 0x1000b ; ret
0x0000000000113591 : xor eax, eax ; mov eax, 0x127 ; syscall
0x0000000000113641 : xor eax, eax ; mov eax, 0x128 ; syscall
0x0000000000113715 : xor eax, eax ; mov eax, 0x147 ; syscall
0x0000000000113875 : xor eax, eax ; mov eax, 0x148 ; syscall
0x000000000010c6ca : xor eax, eax ; mov eax, 0x14c ; syscall
0x000000000011eea4 : xor eax, eax ; mov eax, 0x2c ; syscall
0x000000000011ec84 : xor eax, eax ; mov eax, 0x2d ; syscall
0x00000000000e1471 : xor eax, eax ; mov eax, 0xf7 ; syscall
0x0000000000189740 : xor eax, eax ; mov edx, dword ptr [rdi] ; cmp edx, dword ptr [rsi] ; jne 0x189734 ; ret
0x0000000000061b71 : xor eax, eax ; mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009cb92 : xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x00000000000a6c2b : xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000015e951 : xor eax, eax ; mov qword ptr [rip + 0x88c96], rsi ; ret
0x00000000000cec78 : xor eax, eax ; mov qword ptr [rsp + 0x50], r15 ; call rbx
0x0000000000146c6d : xor eax, eax ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x0000000000143297 : xor eax, eax ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x0000000000089a59 : xor eax, eax ; mov rdi, r12 ; lea r9, [rsp + 0x20] ; call rbx
0x000000000008995f : xor eax, eax ; mov rdi, r12 ; lea r9, [rsp + 0x28] ; call rbx
0x00000000000bbe59 : xor eax, eax ; mov rdi, rbp ; lea r9, [rsp + 0x30] ; call rbx
0x0000000000154415 : xor eax, eax ; mov rdi, rsp ; mov dword ptr [rsp], 2 ; call rdx
0x0000000000112adf : xor eax, eax ; mov rdx, rsp ; mov eax, ecx ; syscall
0x00000000001457c5 : xor eax, eax ; mov rsi, qword ptr [rsp + 0x18] ; mov rdi, rbp ; call r14
0x000000000014c807 : xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x00000000000ceae7 : xor eax, eax ; mov rsi, rsp ; call 0x12c6cc
0x000000000012c887 : xor eax, eax ; pop r12 ; pop rbp ; ret
0x0000000000146eb0 : xor eax, eax ; pop rbp ; jmp rdx
0x0000000000133e76 : xor eax, eax ; pop rbp ; mov byte ptr [rdx], 0 ; pop r12 ; pop r13 ; ret
0x00000000000a0012 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000039c5f : xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001478a7 : xor eax, eax ; pop rbx ; add rdi, 0x23b0 ; pop rbp ; jmp rcx
0x00000000001456f2 : xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x0000000000032c0b : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000028d3b : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000047b64 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ce815 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000047487 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000047619 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000042146 : xor eax, eax ; pop rbx ; ret
0x000000000008dc6b : xor eax, eax ; punpcklqdq xmm0, xmm0 ; movups xmmword ptr [rbx + 8], xmm0 ; pop rbx ; ret
0x0000000000044910 : xor eax, eax ; ret
0x00000000000a8c9e : xor eax, eax ; sub eax, ecx ; ret
0x000000000010cf7d : xor eax, eax ; syscall
0x000000000012a5bc : xor eax, eax ; test byte ptr [rbx + 0x1c], 0x20 ; je 0x12a5d9 ; pop rbx ; ret
0x000000000008c1c0 : xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x000000000008c1d0 : xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x00000000000bb91c : xor eax, eax ; test edx, edx ; sete al ; ret
0x0000000000126075 : xor eax, eax ; test rbx, rbx ; jne 0x126093 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008fb80 : xor eax, eax ; test rdx, rdx ; jne 0x8fb97 ; ret
0x0000000000181de0 : xor eax, eax ; vzeroupper ; ret
0x0000000000048668 : xor eax, ecx ; ret
0x00000000001493e1 : xor eax, edx ; mov qword ptr [rdi], r8 ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000041e76 : xor eax, edx ; movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x41e61 ; ret
0x0000000000047c17 : xor eax, edx ; sub eax, edx ; ret
0x0000000000047c2b : xor eax, edx ; sub rax, rdx ; ret
0x000000000009d680 : xor ebp, ebp ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000011db19 : xor ebp, ebp ; pop rax ; pop rdi ; call rax
0x0000000000082474 : xor ebp, ebp ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000035aa3 : xor ebp, ebp ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000013fed2 : xor ebp, ebp ; xor ebx, ebx ; jmp 0x13fea0
0x0000000000082664 : xor ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000008a210 : xor ebx, ebx ; add rsp, 0x28 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000dc040 : xor ebx, ebx ; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000f88b3 : xor ebx, ebx ; call 0x2531c
0x000000000013fed4 : xor ebx, ebx ; jmp 0x13fe9e
0x00000000000caee9 : xor ebx, ebx ; jmp 0xcae6c
0x000000000010e057 : xor ebx, ebx ; mov dword ptr fs:[rax], 0x16 ; jmp 0x10e036
0x00000000001580be : xor ebx, ebx ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008d601 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000316c6 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000632e0 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; ret
0x0000000000143d58 : xor ebx, ebx ; mov rdi, r14 ; call 0x140837
0x0000000000159e4f : xor ebx, edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000000f20ce : xor ebx, esi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000194382 : xor ecx, dword ptr [rax + 0x21] ; ret 0x8548
0x000000000019436e : xor ecx, dword ptr [rax + 0x21] ; ret 0xbde9
0x000000000010b5fc : xor ecx, dword ptr [rax + 0x63] ; ret 0xc283
0x000000000005771e : xor ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a0335 : xor ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000010c904 : xor ecx, dword ptr [rcx - 0x3076bb36] ; mov eax, 0x103 ; syscall
0x00000000000c5009 : xor ecx, dword ptr [rdi] ; add byte ptr [rax + 0x21], cl ; ret 0x8948
0x00000000000ef634 : xor ecx, ecx ; add rdx, rax ; jmp 0xef659
0x000000000014f485 : xor ecx, ecx ; call 0x13b6d4
0x00000000000d6933 : xor ecx, ecx ; jmp 0xd3374
0x000000000012dfd0 : xor ecx, ecx ; mov rax, rcx ; ret
0x0000000000027ab6 : xor ecx, ecx ; xor edx, edx ; movzx eax, al ; add eax, 1 ; push rax ; call rbx
0x000000000011eea1 : xor ecx, ecx ; xor r8d, r8d ; mov eax, 0x2c ; syscall
0x000000000011ec81 : xor ecx, ecx ; xor r8d, r8d ; mov eax, 0x2d ; syscall
0x000000000014263d : xor edi, dword ptr [0x30] ; call rax
0x0000000000096527 : xor edi, edi ; call qword ptr [rax]
0x00000000000dbab0 : xor edi, edi ; call rax
0x00000000000bc5d1 : xor edi, edi ; jmp 0xbc5a3
0x000000000012f10d : xor edi, edi ; lea rsi, [rsp - 0x18] ; mov eax, 0x83 ; syscall
0x00000000000dbac5 : xor edi, edi ; mov eax, 0xe4 ; syscall
0x0000000000026bd0 : xor edi, edi ; mov eax, edx ; syscall
0x0000000000084f30 : xor edi, edi ; mov rax, rdi ; ret
0x0000000000135294 : xor edi, edi ; mov rdx, rax ; xor eax, eax ; call 0x814a9
0x000000000011751d : xor edi, edi ; or r10d, 0x40 ; mov eax, ecx ; syscall
0x0000000000112dec : xor edi, edi ; syscall
0x00000000000472e0 : xor edx, dword ptr [0x30] ; call rdx
0x000000000004729f : xor edx, dword ptr [0x30] ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000015e5b9 : xor edx, dword ptr [rbp - 0x12] ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x00000000000941e3 : xor edx, dword ptr [rip - 0x177cb800] ; add dword ptr [rax + 0x39], ecx ; ret 0x860f
0x000000000010b58c : xor edx, edx ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000d3341 : xor edx, edx ; add rsp, 8 ; mov rax, rdx ; ret
0x00000000000ba732 : xor edx, edx ; and eax, 0x3fffc00 ; div ecx ; mov eax, eax ; ret
0x000000000010c495 : xor edx, edx ; call rax
0x000000000015e818 : xor edx, edx ; cmp eax, -1 ; sete dl ; mov dword ptr [rbx], edx ; pop rbx ; ret
0x000000000005f463 : xor edx, edx ; div r8d ; add r9d, eax ; mov eax, r9d ; ret
0x0000000000194739 : xor edx, edx ; jmp 0x19470b
0x000000000004f81e : xor edx, edx ; jmp 0x4e05f
0x0000000000089ac0 : xor edx, edx ; jmp 0x89a91
0x000000000011fa51 : xor edx, edx ; mov eax, 0x1d ; syscall
0x00000000000e137e : xor edx, edx ; mov eax, 0x3d ; syscall
0x00000000000e12e3 : xor edx, edx ; mov edi, 0xffffffff ; mov eax, 0x3d ; syscall
0x0000000000112de3 : xor edx, edx ; mov esi, edi ; mov eax, 0x12e ; xor edi, edi ; syscall
0x00000000000a6cdd : xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x0000000000082240 : xor edx, edx ; mov rax, rdx ; ret
0x0000000000048ba8 : xor edx, edx ; mov rdi, r8 ; mov eax, r10d ; sub rsi, r8 ; syscall
0x0000000000143644 : xor edx, edx ; mov rsi, r12 ; mov rdi, rbx ; mov rcx, r13 ; call r10
0x000000000010c4c5 : xor edx, edx ; mov rsi, rbp ; mov rdi, rbx ; mov eax, ecx ; syscall
0x0000000000027ab8 : xor edx, edx ; movzx eax, al ; add eax, 1 ; push rax ; call rbx
0x00000000000b9f13 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x0000000000091832 : xor edx, edx ; pop rbx ; jmp rax
0x00000000000a6d70 : xor edx, edx ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x0000000000098c14 : xor edx, edx ; pop rbx ; mov rax, rdx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000de1b0 : xor edx, edx ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000098fb0 : xor edx, edx ; pop rbx ; pop rbp ; mov rax, rdx ; pop r12 ; ret
0x00000000000840e4 : xor edx, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000000bbcc9 : xor edx, edx ; push 1 ; lea r9, [rsp + 0x20] ; call rbx
0x00000000001121f8 : xor edx, edx ; xor esi, esi ; mov eax, 0x118 ; syscall
0x000000000010c403 : xor edx, edx ; xor esi, esi ; mov rdi, rbx ; call rax
0x000000000010c430 : xor edx, edx ; xor esi, esi ; mov rdi, rbx ; mov eax, 0x135 ; syscall
0x000000000010a0e1 : xor esi, dword ptr [rdx - 0x7cb7000f] ; ret
0x00000000000f3d57 : xor esi, esi ; call 0x25226
0x000000000012e1e3 : xor esi, esi ; dec dword ptr [rax - 0x77] ; ret 0xf741
0x000000000007719e : xor esi, esi ; jmp rax
0x000000000012c65a : xor esi, esi ; lea edx, [rdi*8 + 2] ; mov edi, edx ; syscall
0x0000000000097997 : xor esi, esi ; mov dword ptr fs:[rax], 0xc ; mov rax, rsi ; ret
0x00000000001121fa : xor esi, esi ; mov eax, 0x118 ; syscall
0x00000000000e1700 : xor esi, esi ; mov edi, 0x1200011 ; mov eax, 0x38 ; syscall
0x0000000000126408 : xor esi, esi ; mov edi, 0x2000004 ; call rcx
0x000000000012df30 : xor esi, esi ; mov rax, rsi ; ret
0x0000000000047950 : xor esi, esi ; mov rdi, r9 ; call rdx
0x000000000010c405 : xor esi, esi ; mov rdi, rbx ; call rax
0x000000000010c432 : xor esi, esi ; mov rdi, rbx ; mov eax, 0x135 ; syscall
0x0000000000100562 : xor esi, esi ; ret 0x7402
0x0000000000111ab2 : xor esi, esi ; syscall
0x000000000019169f : xor esp, 0x894cffff ; retf 0x948
0x000000000015db53 : xor esp, eax ; or byte ptr [rax], al ; call qword ptr [rax]
0x0000000000039d79 : xor esp, esp ; jmp 0x39d43
0x000000000010c369 : xor esp, esp ; pop rbx ; pop rbp ; mov eax, r12d ; pop r12 ; ret
0x000000000009feb1 : xor esp, esp ; pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x0000000000194738 : xor r10d, r10d ; jmp 0x19470c
0x000000000004f81d : xor r10d, r10d ; jmp 0x4e060
0x000000000011fa50 : xor r10d, r10d ; mov eax, 0x1d ; syscall
0x00000000000e137d : xor r10d, r10d ; mov eax, 0x3d ; syscall
0x0000000000112e23 : xor r10d, r10d ; mov esi, edi ; mov eax, 0x12e ; xor edi, edi ; syscall
0x00000000001121f7 : xor r10d, r10d ; xor esi, esi ; mov eax, 0x118 ; syscall
0x0000000000039d78 : xor r12d, r12d ; jmp 0x39d44
0x000000000010c368 : xor r12d, r12d ; pop rbx ; pop rbp ; mov eax, r12d ; pop r12 ; ret
0x000000000009feb0 : xor r12d, r12d ; pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x000000000013fed1 : xor r13d, r13d ; xor ebx, ebx ; jmp 0x13fea1
0x000000000012668a : xor r15d, r15d ; call rax
0x00000000000bc5d0 : xor r15d, r15d ; jmp 0xbc5a4
0x0000000000147a03 : xor r8b, bpl ; mul dl ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000027a4a : xor r8d, r8d ; call rbx
0x00000000000bc155 : xor r8d, r8d ; lea r9, [rsp + 0x28] ; call rbx
0x0000000000113590 : xor r8d, r8d ; mov eax, 0x127 ; syscall
0x0000000000113640 : xor r8d, r8d ; mov eax, 0x128 ; syscall
0x0000000000113714 : xor r8d, r8d ; mov eax, 0x147 ; syscall
0x0000000000113874 : xor r8d, r8d ; mov eax, 0x148 ; syscall
0x000000000011eea3 : xor r8d, r8d ; mov eax, 0x2c ; syscall
0x000000000011ec83 : xor r8d, r8d ; mov eax, 0x2d ; syscall
0x00000000000e1470 : xor r8d, r8d ; mov eax, 0xf7 ; syscall
0x0000000000143296 : xor r8d, r8d ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x0000000000089a58 : xor r8d, r8d ; mov rdi, r12 ; lea r9, [rsp + 0x20] ; call rbx
0x000000000008995e : xor r8d, r8d ; mov rdi, r12 ; lea r9, [rsp + 0x28] ; call rbx
0x00000000000bbe58 : xor r8d, r8d ; mov rdi, rbp ; lea r9, [rsp + 0x30] ; call rbx
0x00000000000ef633 : xor r9d, r9d ; add rdx, rax ; jmp 0xef65a
0x000000000011eea0 : xor r9d, r9d ; xor r8d, r8d ; mov eax, 0x2c ; syscall
0x000000000011ec80 : xor r9d, r9d ; xor r8d, r8d ; mov eax, 0x2d ; syscall
0x00000000001122a6 : xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x0000000000058369 : xor rax, qword ptr [0x28] ; jne 0x583b9 ; leave ; ret
0x0000000000026ea9 : xor rax, qword ptr [0x30] ; add rsp, 0x28 ; jmp rax
0x0000000000026b9a : xor rax, qword ptr [0x30] ; call rax
0x0000000000029b64 : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000055993 : xor rax, qword ptr [0x30] ; mov edi, dword ptr [rsp + 0x24] ; call rax
0x00000000000835e5 : xor rax, qword ptr [0x30] ; mov rdi, rbp ; call rax
0x00000000000dbb72 : xor rax, qword ptr [0x30] ; pop r13 ; pop r14 ; jmp rax
0x0000000000058368 : xor rax, qword ptr fs:[0x28] ; jne 0x583ba ; leave ; ret
0x0000000000026b99 : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000029b63 : xor rax, qword ptr fs:[0x30] ; jmp rax
0x00000000000835e4 : xor rax, qword ptr fs:[0x30] ; mov rdi, rbp ; call rax
0x00000000001586cc : xor rax, rax ; call 0x25135
0x00000000000b0355 : xor rax, rax ; ret
0x00000000001493e0 : xor rax, rdx ; mov qword ptr [rdi], r8 ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000041e75 : xor rax, rdx ; movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x41e62 ; ret
0x0000000000047c2a : xor rax, rdx ; sub rax, rdx ; ret
0x000000000014263c : xor rdi, qword ptr [0x30] ; call rax
0x000000000014263b : xor rdi, qword ptr fs:[0x30] ; call rax
0x00000000000472df : xor rdx, qword ptr [0x30] ; call rdx
0x000000000004729e : xor rdx, qword ptr [0x30] ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x00000000000472de : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 31729
