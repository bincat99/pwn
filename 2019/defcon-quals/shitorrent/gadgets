Gadgets information
============================================================
0x00000000004d2860 : adc ah, 0xfb ; jmp qword ptr [rbx]
0x00000000004ae488 : adc ah, al ; cli ; jmp rax
0x000000000047d56a : adc ah, byte ptr [rax - 0x74b7ffdb] ; add al, 0xf8 ; jmp rax
0x00000000004c59ad : adc al, 0 ; add byte ptr [rax - 0x12], ah ; call qword ptr [rdi]
0x00000000004595cf : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000459639 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004d4188 : adc al, 0 ; add byte ptr [rax], al ; add ah, bh ; add byte ptr [rax], al ; ret 0xfffc
0x000000000041966d : adc al, 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000004d42f8 : adc al, 0 ; add byte ptr [rax], al ; jo 0x4d4304 ; add byte ptr [rax], al ; nop ; retf
0x0000000000499fea : adc al, 0 ; add byte ptr [rax], al ; syscall
0x00000000004434e8 : adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004c59c9 : adc al, 0 ; add byte ptr [rsi + rbp*8 - 0xd], ah ; call qword ptr [rdi]
0x0000000000449a15 : adc al, 0x13 ; jmp rdx
0x0000000000441cd5 : adc al, 0x16 ; sub eax, edx ; ret
0x00000000004aba4c : adc al, 0x1b ; idiv edi ; cmc ; sbb dh, bh ; call rsi
0x000000000041938a : adc al, 0x24 ; mov edi, 1 ; call rax
0x0000000000429be1 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000041b0f7 : adc al, 0x2c ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004609a0 : adc al, 0x48 ; lea eax, [rdi + 0x14] ; ret
0x00000000004b089c : adc al, 0x65 ; cld ; call rsp
0x000000000048de88 : adc al, 0x90 ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000410d3c : adc al, 0x91 ; add rdx, rcx ; jmp rdx
0x000000000045aa60 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000045918e : adc al, 0x91 ; sub eax, edx ; ret
0x0000000000449a11 : adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000428570 : adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x00000000004a9b9c : adc al, 0x98 ; cmc ; call qword ptr [rdi]
0x00000000004408d7 : adc al, 0xa ; jmp r10
0x0000000000441e43 : adc al, 0xa ; sub eax, edx ; ret
0x00000000004c51a0 : adc al, 0xc ; add byte ptr [rax], al ; xor al, 0xdd ; jmp qword ptr [rbx]
0x0000000000462f1f : adc al, 0xe ; cmp rdi, rdx ; jb 0x462f32 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004462ba : adc al, 0xe ; sub eax, edx ; ret
0x0000000000447f8a : adc al, 0xe ; sub eax, edx ; vzeroupper ; ret
0x00000000004cba2c : adc al, 0xe7 ; cmc ; call qword ptr [rdx]
0x000000000041f25f : adc al, 0xf ; retf 0xfa83
0x000000000042e94b : adc al, 0xf6 ; ret 0x7420
0x000000000041970d : adc al, 0xf7 ; ret
0x00000000004404f6 : adc al, 1 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000459777 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004597e1 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004c8dac : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add al, 0xeb ; ret
0x0000000000444e98 : adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000411e50 : adc al, ch ; retf 0x34
0x00000000004cb9f0 : adc bh, ah ; cmc ; call qword ptr [rax]
0x00000000004074ba : adc bh, bh ; ret
0x000000000044083a : adc bh, byte ptr [rbx + 0xf480001] ; ret 0x66c3
0x00000000004d0870 : adc bh, cl ; stc ; call qword ptr [rax]
0x00000000004ad81d : adc bh, dl ; call qword ptr [rax]
0x000000000040ae0c : adc bl, al ; nop ; mov eax, 0xf ; ret
0x000000000045ce65 : adc bl, ch ; call 0xffffffffc41657ba
0x000000000045cd85 : adc bl, ch ; call 0xffffffffc43e56da
0x000000000049ee42 : adc bl, ch ; jno 0x49ee98 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004602d6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000460347 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000004602a7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000004602d5 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000049b2ba : adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x00000000004351d5 : adc byte ptr [r11 + 0x5d], r11b ; ret
0x0000000000407f81 : adc byte ptr [r13 - 0x3f60f040], r8b ; ret
0x0000000000408152 : adc byte ptr [r13 - 0xcea8140], r8b ; ret
0x000000000049f8ae : adc byte ptr [r15], cl ; sahf ; ret 0x3948
0x0000000000478bc9 : adc byte ptr [r15], cl ; sahf ; ret 0x894c
0x00000000004a00c3 : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3949
0x0000000000477de5 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3948
0x00000000004785c6 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3949
0x000000000040af40 : adc byte ptr [r8 + 0x39], r9b ; or byte ptr [r10 + 8], r14b ; ret
0x000000000040a3b5 : adc byte ptr [r8 + 0x39], r9b ; ret 0xc74
0x000000000049dd9f : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000042d452 : adc byte ptr [r8 + 1], r9b ; ret
0x00000000004347bf : adc byte ptr [r8 - 0x77], r9b ; ret 0xf8b
0x00000000004983bf : adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000040a33d : adc byte ptr [r8], r8b ; mov qword ptr [rdi], rax ; ret
0x000000000042d47d : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x00000000004471c6 : adc byte ptr [rax + 0x29], cl ; retf 0x860f
0x00000000004600fa : adc byte ptr [rax + 0x29], cl ; retf 0x8d4c
0x000000000040af41 : adc byte ptr [rax + 0x39], cl ; or byte ptr [r10 + 8], r14b ; ret
0x00000000004a00bd : adc byte ptr [rax + 0x39], cl ; ret
0x000000000043aa43 : adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000040a3dd : adc byte ptr [rax + 0x39], cl ; ret 0x2d74
0x0000000000401a85 : adc byte ptr [rax + 0x39], cl ; ret 0x3174
0x0000000000436d7c : adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x00000000004370f8 : adc byte ptr [rax + 0x39], cl ; ret 0xb277
0x000000000040a3b6 : adc byte ptr [rax + 0x39], cl ; ret 0xc74
0x000000000043fa36 : adc byte ptr [rax + 0x39], cl ; ret 0xf475
0x000000000040c1b2 : adc byte ptr [rax + 0x39], cl ; sal dword ptr [rax + rdi + 0x4c], 0x39 ; ret 0x8b4c
0x000000000040a3dc : adc byte ptr [rax + 0x39], r9b ; ret 0x2d74
0x000000000040c1b1 : adc byte ptr [rax + 0x39], r9b ; sal dword ptr [rax + rdi + 0x4c], 0x39 ; ret 0x8b4c
0x0000000000416836 : adc byte ptr [rax + 0x474663a], al ; xor eax, eax ; ret
0x000000000049dda0 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x000000000042f04e : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000042d453 : adc byte ptr [rax + 1], cl ; ret
0x000000000042c857 : adc byte ptr [rax + 1], cl ; ret 0x2b48
0x00000000004a61fa : adc byte ptr [rax + 1], cl ; retf 0x42f6
0x0000000000467027 : adc byte ptr [rax + 9], cl ; retf 0x8948
0x000000000041c15e : adc byte ptr [rax - 0x39], cl ; ret 0
0x0000000000404175 : adc byte ptr [rax - 0x39], cl ; ret 0x40b0
0x00000000004042f0 : adc byte ptr [rax - 0x39], cl ; ret 0x40d0
0x0000000000403ea7 : adc byte ptr [rax - 0x39], cl ; ret 0x47d0
0x000000000040465f : adc byte ptr [rax - 0x39], cl ; ret 0x6520
0x0000000000404a55 : adc byte ptr [rax - 0x39], cl ; ret 0x67d0
0x0000000000404a95 : adc byte ptr [rax - 0x39], cl ; ret 0x6c70
0x0000000000491af5 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000431833 : adc byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rax + 0x39] ; retf
0x000000000040280b : adc byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x00000000004a4d9f : adc byte ptr [rax - 0x75], cl ; cmp cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x0000000000404172 : adc byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x39], cl ; ret 0x40b0
0x00000000004042ed : adc byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x39], cl ; ret 0x40d0
0x0000000000403ea4 : adc byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x39], cl ; ret 0x47d0
0x000000000040465c : adc byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x39], cl ; ret 0x6520
0x0000000000404a52 : adc byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x39], cl ; ret 0x67d0
0x0000000000404a92 : adc byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x39], cl ; ret 0x6c70
0x0000000000424849 : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call 0x421358
0x00000000004389dd : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call rcx
0x0000000000468b45 : adc byte ptr [rax - 0x77], cl ; and sil, al ; sub byte ptr [rcx], al ; ret
0x00000000004754e8 : adc byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000048cb17 : adc byte ptr [rax - 0x77], cl ; jo 0x48cb35 ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000048cad7 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000040567c : adc byte ptr [rax - 0x77], cl ; ret
0x000000000041136f : adc byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000401ccd : adc byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000043e1ef : adc byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000439db1 : adc byte ptr [rax - 0x77], cl ; ret 0x8d4c
0x00000000004347c0 : adc byte ptr [rax - 0x77], cl ; ret 0xf8b
0x000000000048cf40 : adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x0000000000432f9f : adc byte ptr [rax - 0x78], al ; jl 0x432fc1 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045d047 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x000000000045d083 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x000000000041ae4f : adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000435873 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040db32 : adc byte ptr [rax - 0x7d], cl ; ret 0x4838
0x00000000004721c8 : adc byte ptr [rax - 0x7d], cl ; ret 0x4902
0x0000000000466c29 : adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x00000000004ae378 : adc byte ptr [rax - 6], al ; call qword ptr [rax + 0x10fffa41]
0x000000000049bb49 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jrcxz 0x49bba1 ; mov esi, ebx ; syscall
0x0000000000459222 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x000000000044631a : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8349
0x000000000045ad38 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x000000000045b02c : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000459981 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000465a93 : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x48 ; syscall
0x00000000004d0fe0 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; retf 0
0x00000000004641fc : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004d0fcc : adc byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000004d42cc : adc byte ptr [rax], al ; add byte ptr [rax], al ; std ; add byte ptr [rax], al ; pushfq ; ret 0xfff2
0x0000000000443968 : adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000457238 : adc byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x000000000040a641 : adc byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040a33e : adc byte ptr [rax], al ; mov qword ptr [rdi], rax ; ret
0x000000000040a403 : adc byte ptr [rax], al ; ret
0x00000000004ae324 : adc byte ptr [rax], bh ; cli ; call qword ptr [rax + 0x10fffa39]
0x000000000040a402 : adc byte ptr [rax], r8b ; ret
0x0000000000403625 : adc byte ptr [rbp + 0x10], dh ; xor eax, eax ; ret
0x000000000041a638 : adc byte ptr [rbp + 0x13], dh ; xor eax, eax ; ret
0x0000000000417498 : adc byte ptr [rbp + 0x1d], dh ; xor eax, eax ; ret
0x0000000000478b79 : adc byte ptr [rbp + 0x39], cl ; retf
0x0000000000407f82 : adc byte ptr [rbp - 0x3f60f040], al ; ret
0x0000000000408153 : adc byte ptr [rbp - 0xcea8140], al ; ret
0x00000000004d1510 : adc byte ptr [rbp - 3], ch ; call rdx
0x00000000004097c0 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000403364 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004351d6 : adc byte ptr [rbx + 0x5d], bl ; ret
0x00000000004c78d3 : adc byte ptr [rbx + 0x80e4c02], al ; ret
0x00000000004d348f : adc byte ptr [rbx + 0x80e5802], al ; ret
0x000000000041eb4b : adc byte ptr [rbx + rbp - 0x76b80000], dh ; ret
0x0000000000468b53 : adc byte ptr [rbx - 0x16], dh ; ret
0x0000000000468b52 : adc byte ptr [rbx - 0x16], sil ; ret
0x00000000004343a2 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000048d00e : adc byte ptr [rbx - 0x3b7cb7fa], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000422310 : adc byte ptr [rbx - 0x7bf0fd06], al ; retf 0xe
0x00000000004ae380 : adc byte ptr [rbx - 6], al ; call qword ptr [rax + 0x10fffa44]
0x000000000043558c : adc byte ptr [rbx], al ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004ae32c : adc byte ptr [rbx], bh ; cli ; call qword ptr [rax + 0x10fffa3c]
0x00000000004adbfc : adc byte ptr [rbx], dh ; cli ; call qword ptr [rax + 0x10fffa32]
0x000000000042d47e : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x000000000042df80 : adc byte ptr [rcx + 0x39], al ; retf 0xea77
0x00000000004391ac : adc byte ptr [rcx + 7], al ; add byte ptr [rax - 0x17], dl ; ret
0x000000000048e113 : adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000004ad4fc : adc byte ptr [rcx + rdi*8 - 0x646c901], bh ; jmp rdx
0x0000000000467092 : adc byte ptr [rcx - 0x75], cl ; add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x00000000004a6c2f : adc byte ptr [rcx - 0x77], cl ; ret
0x00000000004a6a5e : adc byte ptr [rcx - 0x77], cl ; retf 0xc148
0x0000000000466ab1 : adc byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; retf 0x4901
0x0000000000435127 : adc byte ptr [rcx - 0x7d], al ; ret
0x000000000049ec94 : adc byte ptr [rcx - 0x7d], cl ; in eax, dx ; or byte ptr [rax + 0x39], cl ; retf
0x0000000000478b61 : adc byte ptr [rcx - 0x7d], cl ; ret
0x000000000044634d : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000004ae33c : adc byte ptr [rcx - 6], al ; call qword ptr [rax + 0x10fffa42]
0x00000000004ae390 : adc byte ptr [rcx - 6], cl ; call qword ptr [rax + 0x10fffa4a]
0x00000000004ad8bc : adc byte ptr [rcx], 0xfa ; call qword ptr [rax]
0x000000000049b45c : adc byte ptr [rcx], ah ; and al, 0 ; ret
0x000000000049e6fa : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000464b59 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004a1340 : adc byte ptr [rcx], bh ; retf 0x557f
0x00000000004343a5 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000042ddc7 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004056a0 : adc byte ptr [rdi + rdx - 0x7d], dh ; retf 0xf0ff
0x00000000004aa8a8 : adc byte ptr [rdi - 0xa], ah ; jmp qword ptr [rbx]
0x00000000004ae34c : adc byte ptr [rdi - 6], al ; call qword ptr [rax + 0x10fffa48]
0x00000000004c5d0c : adc byte ptr [rdi], 0 ; add byte ptr [rax], ah ; call rax
0x00000000004ad908 : adc byte ptr [rdi], al ; cli ; push rax ; or dl, bh ; jmp rax
0x000000000041f24f : adc byte ptr [rdi], cl ; retf 0xd289
0x000000000049f8af : adc byte ptr [rdi], cl ; sahf ; ret 0x3948
0x0000000000478bca : adc byte ptr [rdi], cl ; sahf ; ret 0x894c
0x0000000000460bb3 : adc byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000446731 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000446821 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000446641 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000447089 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x0000000000446be1 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000446371 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x0000000000446dc1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000446551 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000446fa1 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000446eb1 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004467f3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004468e3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000446703 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000446461 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x0000000000446613 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000446433 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000446523 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000446343 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000477de6 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x00000000004785c7 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x0000000000465f29 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x000000000049ff71 : adc byte ptr [rdi], r9b ; sahf ; ret 0x3948
0x000000000049f2ad : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x00000000004cca1b : adc byte ptr [rdx + 0xe], al ; or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rbx + 0xa] ; ret
0x0000000000449f09 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004ae344 : adc byte ptr [rdx + rdi*8 - 1], al ; nop ; cli ; call qword ptr [rax]
0x00000000004ad8c0 : adc byte ptr [rdx + rdi*8], al ; call rax
0x00000000004adbf4 : adc byte ptr [rdx + rdi*8], dh ; call qword ptr [rax + 0x10fffa33]
0x00000000004aa6a0 : adc byte ptr [rdx - 0xa], dl ; call qword ptr [rax]
0x00000000004ae354 : adc byte ptr [rdx - 6], cl ; call qword ptr [rax + 0x10fffa4b]
0x00000000004ad81c : adc byte ptr [rdx], 0xfa ; call qword ptr [rax]
0x00000000004c6a80 : adc byte ptr [rdx], al ; hlt ; call qword ptr [rdi]
0x00000000004ae368 : adc byte ptr [rdx], bh ; cli ; call qword ptr [rax + 0x10fffa3b]
0x00000000004aba2c : adc byte ptr [rdx], bl ; idiv edi ; ret 0xf719
0x0000000000448e4b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004adc04 : adc byte ptr [rdx], dh ; cli ; call qword ptr [rax + 0x10fffa31]
0x00000000004adbec : adc byte ptr [rip + 0x3490fffa], dh ; cli ; call qword ptr [rax]
0x00000000004ae370 : adc byte ptr [rip + 0x3e90fffa], bh ; cli ; call qword ptr [rax]
0x0000000000462b4f : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x0000000000448cfa : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x00000000004482f5 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004486f5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x4486c9
0x0000000000448773 : adc byte ptr [rsi + 0xf], ah ; jmp 0x448747
0x0000000000448c05 : adc byte ptr [rsi + 0xf], ah ; jmp 0x448bd9
0x0000000000448c83 : adc byte ptr [rsi + 0xf], ah ; jmp 0x448c57
0x00000000004486f0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x4486ce
0x000000000044876e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x44874c
0x0000000000448c00 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x448bde
0x0000000000448c7e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x448c5c
0x0000000000440a25 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000454f4b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000004cc2d1 : adc byte ptr [rsi + rcx + 8], al ; ret
0x00000000004ae388 : adc byte ptr [rsi - 6], al ; call qword ptr [rax + 0x10fffa47]
0x00000000004ae334 : adc byte ptr [rsi], bh ; cli ; call qword ptr [rax + 0x10fffa3f]
0x00000000004c8470 : adc byte ptr [rsp + rsi*8], bl ; jmp qword ptr [rdx]
0x000000000044041a : adc ch, byte ptr [rbp] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004ad7c4 : adc cl, 0xf9 ; call rax
0x00000000004ad614 : adc cl, al ; stc ; push qword ptr [rax + 0x50fff9c1] ; ret 0xfff9
0x00000000004022a6 : adc cl, byte ptr [rax + 0x29] ; ror dword ptr [rax - 0x77], 1 ; retf 0xc148
0x0000000000431836 : adc cl, byte ptr [rax + 0x39] ; retf
0x00000000004798bf : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rbx + rcx*4 + 0x6c] ; ret 0x4c40
0x0000000000407245 : adc cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp + 5], cl ; ret
0x000000000046910a : adc cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000045cd75 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000004798c2 : adc cl, byte ptr [rbx + rcx*4 + 0x6c] ; ret 0x4c40
0x00000000004a1f7a : adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x0000000000478e85 : adc cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000408dbf : adc cl, byte ptr [rdx] ; add byte ptr [rax - 0x77], cl ; retf 0x8348
0x00000000004c7dfd : adc dh, ah ; call rdx
0x000000000043842e : adc dh, dh ; ret 0xf0f
0x00000000004074b9 : adc dil, r15b ; ret
0x000000000048c08b : adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x000000000047778d : adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x000000000042d46f : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000004a6c7f : adc dword ptr [rax - 0x77], ecx ; retf
0x000000000042045f : adc dword ptr [rax - 0x7d], ecx ; ret
0x000000000048d6a4 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4110
0x000000000045b02b : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x0000000000459917 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045af2f : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004437e8 : adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000477df5 : adc dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; call qword ptr [rbx]
0x0000000000463178 : adc dword ptr [rbx], eax ; ret
0x00000000004630f1 : adc dword ptr [rbx], esp ; ret
0x0000000000454877 : adc dword ptr [rcx + 7], edi ; ret
0x00000000004630ec : adc dword ptr [rcx - 0x30], eax ; movups xmmword ptr [r11], xmm4 ; ret
0x00000000004a58e6 : adc dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000454512 : adc dword ptr [rcx - 1], ebx ; ret
0x00000000004544d6 : adc dword ptr [rcx - 1], edi ; ret
0x0000000000463173 : adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000462ed3 : adc dword ptr [rdi + rdx - 0x10], ecx ; ret
0x0000000000463055 : adc dword ptr [rdi + rdx - 0x10], edx ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x000000000046305a : adc dword ptr [rdi + rdx - 0x20], ebx ; ret
0x0000000000463032 : adc dword ptr [rdi + rdx - 0x30], esi ; movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x0000000000463037 : adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x00000000004549d9 : adc dword ptr [rdi - 8], edi ; ret
0x0000000000462ed0 : adc dword ptr [rdi], eax ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000046dd72 : adc dword ptr [rdi], ecx ; retf 0xd285
0x0000000000462ccc : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x0000000000495ede : adc dword ptr [rip + 0x20000003], 0x75 ; retf 0x5f6
0x0000000000462dff : adc dword ptr [rsi + 3], edx ; ret
0x0000000000462e9c : adc dword ptr [rsi + 7], edx ; ret
0x0000000000462c9e : adc dword ptr [rsi - 1], edx ; ret
0x00000000004a6ea6 : adc dword ptr [rsp - 0x28], eax ; ret
0x0000000000459916 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000477769 : adc eax, 0x26436a ; je 0x477780 ; ret
0x000000000046a047 : adc eax, 0x26fa6c ; pop rbx ; ret
0x00000000004350c4 : adc eax, 0x2a5787 ; ret
0x00000000004c0fa4 : adc eax, 0x2f3ffae1 ; retf 0xb51a
0x0000000000497c92 : adc eax, 0x4000003 ; ret
0x0000000000497be2 : adc eax, 0x4000003 ; xor eax, eax ; ret
0x0000000000415176 : adc eax, 0x4ce90000 ; ret
0x00000000004594a1 : adc eax, 0x83480000 ; ret 0xe910
0x0000000000485a75 : adc eax, 0x83fffffd ; ret
0x0000000000494d91 : adc eax, 0x89000003 ; ret 0xe8c0
0x0000000000444bb8 : adc eax, 0x894d0000 ; retf
0x0000000000432fa3 : adc eax, 0xc2834800 ; add dword ptr [rax + 0x39], ecx ; retf 0xee75
0x00000000004908fa : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000041523c : adc eax, 0xece90000 ; ret
0x00000000004c5ad5 : adc eax, 0xee580000 ; call qword ptr [rcx]
0x0000000000463d24 : adc eax, 0xf880272 ; ret
0x000000000048fd65 : adc eax, 0xfffd4166 ; cmove rax, rdx ; ret
0x00000000004c5945 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x12], bl ; call qword ptr [rcx]
0x00000000004c592d : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x12], dl ; call qword ptr [rsi]
0x000000000040e3f4 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8b49
0x000000000045ad8e : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000443668 : adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004c5971 : adc eax, dword ptr [rax] ; add byte ptr [rsi + rbp*8 - 0xd], bl ; call qword ptr [rbx]
0x000000000043f7db : adc eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000004a0429 : adc eax, eax ; ret
0x00000000004a0566 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x00000000004c0c45 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x000000000042ec77 : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000491afc : adc ebx, esi ; ret
0x00000000004331ba : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000429da1 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004744b4 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x000000000046655c : adc edi, dword ptr [rax + 0x17] ; syscall
0x000000000049b15e : adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000049b1fb : adc edi, dword ptr [rcx] ; ret 0xc74
0x00000000004ad8bd : adc edx, edi ; call qword ptr [rax]
0x00000000004ad8dd : adc edx, edi ; call rax
0x00000000004c215e : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000432583 : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000041a4ac : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000042e949 : adc esi, dword ptr [rsp + rdx - 0xa] ; ret 0x7420
0x00000000004c7d15 : adc esp, esi ; jmp qword ptr [rdi]
0x0000000000454876 : adc qword ptr [rcx + 7], rdi ; ret
0x0000000000454511 : adc qword ptr [rcx - 1], rbx ; ret
0x00000000004544d5 : adc qword ptr [rcx - 1], rdi ; ret
0x00000000004549d8 : adc qword ptr [rdi - 8], rdi ; ret
0x0000000000462dfe : adc qword ptr [rsi + 3], rdx ; ret
0x0000000000462e9b : adc qword ptr [rsi + 7], rdx ; ret
0x0000000000462c9d : adc qword ptr [rsi - 1], rdx ; ret
0x00000000004c5ad4 : adc rax, -0x11a80000 ; call qword ptr [rcx]
0x00000000004a0565 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000004c7d14 : adc rsp, r14 ; jmp qword ptr [rdi]
0x00000000004c596f : add ah, ah ; adc eax, dword ptr [rax] ; add byte ptr [rsi + rbp*8 - 0xd], bl ; call qword ptr [rbx]
0x00000000004c6e9b : add ah, ah ; add esi, esp ; jmp qword ptr [rbx]
0x00000000004d116f : add ah, ah ; retf
0x00000000004d104f : add ah, al ; retf 0
0x00000000004d418c : add ah, bh ; add byte ptr [rax], al ; ret 0xfffc
0x000000000046414e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000046422b : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000464199 : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004c82b3 : add ah, bh ; sbb esp, esi ; jmp qword ptr [rdx]
0x00000000004c6a67 : add ah, bl ; and al, 0 ; add byte ptr [rdx + rax], al ; hlt ; call qword ptr [rbx]
0x00000000004cc367 : add ah, bl ; jge 0x4cc373 ; add byte ptr [rdx - 0xa], ah ; jmp rdi
0x00000000004ccb67 : add ah, bl ; test dword ptr [rax], eax ; add ah, dl ; push rbx ; idiv bh ; retf
0x00000000004c2187 : add ah, byte ptr [rbp + rdi - 0x55] ; retf 0xa2fe
0x00000000004adf78 : add ah, byte ptr [rbx - 6] ; call qword ptr [rdx + 0x22fffa62]
0x0000000000462dfa : add ah, byte ptr [rdx - 0xf] ; jl 0x462e4f ; adc dword ptr [rsi + 3], edx ; ret
0x00000000004d239a : add ah, byte ptr [rsi + rcx + 8] ; ret
0x00000000004c46e7 : add ah, ch ; add byte ptr [rax], al ; add byte ptr [rdi], dl ; retf
0x00000000004c6c77 : add ah, ch ; add byte ptr es:[rax], al ; push rsp ; add esi, esp ; call qword ptr [rdx]
0x00000000004c6b77 : add ah, ch ; and eax, 0x2a40000 ; hlt ; call qword ptr [rdx]
0x00000000004cff77 : add ah, ch ; mov ecx, 0x82640000 ; stc ; call rdx
0x00000000004c78e3 : add ah, ch ; or al, 0xf4 ; jmp qword ptr [rdx]
0x00000000004c8b33 : add ah, cl ; and dh, ah ; call qword ptr [rsi]
0x00000000004c8c13 : add ah, cl ; and esi, esp ; jmp qword ptr [rdx]
0x00000000004c78b3 : add ah, cl ; or al, 0xf4 ; call qword ptr [rdx]
0x00000000004cc5b3 : add ah, cl ; sub dh, dh ; jmp rdx
0x00000000004cd39b : add ah, dh ; jae 0x4cd399 ; call qword ptr [rdi]
0x00000000004cf27f : add ah, dh ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; stc ; call qword ptr [rdx]
0x0000000000400ad9 : add ah, dh ; nop dword ptr [rax + rax] ; ret
0x00000000004d087f : add ah, dh ; ret 0
0x00000000004c637f : add ah, dh ; sbb eax, 0xfa1c0000 ; call qword ptr [rdx]
0x00000000004c7dfb : add ah, dl ; adc dh, ah ; call rdx
0x00000000004d495f : add ah, dl ; add eax, dword ptr [rcx] ; add byte ptr [rbx + rdi*8], bl ; cld ; jmp qword ptr [rdx]
0x00000000004d3a6b : add ah, dl ; nop ; cld ; call rdx
0x00000000004ccb6b : add ah, dl ; push rbx ; idiv bh ; retf
0x000000000046fdf3 : add al, 0 ; add bh, dh ; ret 0
0x000000000046fde7 : add al, 0 ; add bh, dh ; ret 0xf800
0x0000000000473aef : add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x000000000042cff0 : add al, 0 ; add byte ptr [rax + 1], cl ; ret
0x000000000040192f : add al, 0 ; add byte ptr [rax - 0x75], cl ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004028aa : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004018eb : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000004186bd : add al, 0 ; add byte ptr [rax - 0x7bf0df06], al ; retf 4
0x0000000000446ca7 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000048b736 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x000000000045bc4f : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000446cd5 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041a5d0 : add al, 0 ; add byte ptr [rax], al ; jne 0x41a5f7 ; ret
0x0000000000490983 : add al, 0 ; add byte ptr [rax], al ; ret
0x00000000004655ef : add al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000444568 : add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000048e6a0 : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000425321 : add al, 0 ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x0000000000425f24 : add al, 0 ; add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x00000000004251e0 : add al, 0 ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x0000000000440445 : add al, 0 ; add byte ptr [rsi - 9], dh ; ret 0
0x0000000000401901 : add al, 0 ; add cl, cl ; ret
0x000000000041c3ee : add al, 0 ; lea rdi, [rsp + 0x60] ; call 0x428e09
0x0000000000468bb2 : add al, 0 ; mov eax, 0x15 ; syscall
0x0000000000465271 : add al, 0 ; movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x00000000004640f5 : add al, 0 ; movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x0000000000491afb : add al, 0x11 ; ret
0x00000000004641e4 : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000441cd1 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000441c6a : add al, 0x17 ; sub eax, ecx ; ret
0x00000000004c6890 : add al, 0x23 ; add byte ptr [rax], al ; cmp al, 0xff ; call qword ptr [rbx]
0x00000000004a2d70 : add al, 0x24 ; add rax, qword ptr [rdx + 8] ; call rax
0x00000000004a6da7 : add al, 0x24 ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x00000000004a6aab : add al, 0x24 ; add rsp, 0x38 ; ret
0x000000000040350b : add al, 0x24 ; jne 0x403559 ; add rsp, 0x18 ; ret
0x00000000004a5ca4 : add al, 0x24 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x00000000004777ca : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a037b : add al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x4a03c7 ; leave ; ret
0x0000000000429ca7 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000046add5 : add al, 0x27 ; add byte ptr [rsi + rbp*4 - 0x18], dh ; xchg eax, ecx ; retf 0
0x000000000040b423 : add al, 0x30 ; add bl, dh ; ret
0x000000000048f4ce : add al, 0x31 ; ret
0x000000000048f3ca : add al, 0x37 ; ret
0x0000000000433a3f : add al, 0x3a ; ret
0x0000000000403623 : add al, 0x3c ; adc byte ptr [rbp + 0x10], dh ; xor eax, eax ; ret
0x00000000004c0266 : add al, 0x3d ; retf
0x000000000040747b : add al, 0x48 ; add eax, esi ; ret
0x000000000049ba36 : add al, 0x48 ; cmp ecx, dword ptr [rdi + rsi] ; jae 0x49b9ea ; xor eax, eax ; ret
0x000000000046080b : add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x000000000045fd19 : add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x000000000045fd2b : add al, 0x48 ; lea eax, [rdx + 5] ; ret
0x0000000000419720 : add al, 0x48 ; mov dword ptr [rax], edx ; ret
0x000000000045141a : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x000000000040d4d9 : add al, 0x48 ; mov eax, dword ptr [rax - 0x70] ; add rsp, 8 ; ret
0x0000000000402dc6 : add al, 0x48 ; mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000045e559 : add al, 0x48 ; mov eax, edi ; ret
0x000000000048f7a4 : add al, 0x48 ; xor eax, eax ; ret
0x000000000049a7c6 : add al, 0x4c ; cmp ecx, eax ; jne 0x49a774 ; mov eax, dword ptr [rdx + 4] ; ret
0x0000000000490068 : add al, 0x4c ; lea ecx, [rsp + 0x20] ; call rbx
0x000000000045fd27 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x000000000045e567 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000004744b2 : add al, 0x72 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000470779 : add al, 0x74 ; and eax, 0x833fe283 ; retf 0x4180
0x000000000049983a : add al, 0x75 ; retf
0x000000000040d501 : add al, 0x81 ; add rax, r9 ; jmp rax
0x0000000000410c02 : add al, 0x81 ; add rax, rcx ; jmp rax
0x000000000045918b : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000045aa63 : add al, 0x81 ; sub eax, edx ; ret
0x000000000040f76b : add al, 0x82 ; add rax, rdx ; jmp rax
0x0000000000464728 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0x464718 ; ret
0x0000000000456d97 : add al, 0x82 ; sub eax, ecx ; ret
0x000000000046a119 : add al, 0x83 ; add rax, rbx ; jmp rax
0x00000000004185ba : add al, 0x84 ; add rax, r12 ; jmp rax
0x0000000000483039 : add al, 0x84 ; ror byte ptr [rdi], 0x84 ; ret 0x17
0x0000000000490459 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x0000000000418ebb : add al, 0x86 ; add rax, r14 ; jmp rax
0x00000000004109db : add al, 0x86 ; add rax, rsi ; jmp rax
0x0000000000417569 : add al, 0x87 ; add rax, r15 ; jmp rax
0x000000000048b548 : add al, 0x87 ; add rax, rdi ; jmp rax
0x000000000045fd16 : add al, 0x88 ; add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x000000000045e556 : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x0000000000403393 : add al, 0x88 ; add rax, r8 ; jmp rax
0x0000000000474b96 : add al, 0x89 ; retf
0x00000000004a40e9 : add al, 0x89 ; retf 0xeac0
0x000000000046472b : add al, 0x8a ; je 0x464715 ; ret
0x00000000004641b3 : add al, 0x96 ; add rax, rsi ; jmp rax
0x000000000041146c : add al, 0x97 ; add rax, rdi ; jmp rax
0x0000000000418af3 : add al, 0x99 ; add rax, r9 ; jmp rax
0x0000000000465275 : add al, 0x9a ; add rax, rdx ; jmp rax
0x0000000000409b23 : add al, 0xa ; add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0xc031
0x00000000004981df : add al, 0xa1 ; add rax, rcx ; jmp rax
0x0000000000498b07 : add al, 0xa7 ; add rax, rdi ; jmp rax
0x00000000004330c7 : add al, 0xa8 ; add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x0000000000414e11 : add al, 0xaa ; add rax, rdx ; jmp rax
0x00000000004c85d8 : add al, 0xae ; retf
0x00000000004640f9 : add al, 0xbe ; add rax, rsi ; jmp rax
0x00000000004c85c0 : add al, 0xc2 ; retf
0x0000000000488110 : add al, 0xc6 ; jmp rax
0x000000000047d2aa : add al, 0xc6 ; mov esi, 1 ; jmp rax
0x000000000047d90a : add al, 0xc6 ; xor esi, esi ; jmp rax
0x000000000047d260 : add al, 0xc7 ; jmp rax
0x000000000048814b : add al, 0xc8 ; mov ecx, 1 ; jmp rax
0x000000000040daec : add al, 0xc8 ; ret
0x0000000000475da1 : add al, 0xe8 ; test rax, rax ; je 0x475db1 ; call rax
0x0000000000471a80 : add al, 0xe9 ; cmp eax, 0x89fffff3 ; retf 0xe283
0x0000000000481d6d : add al, 0xe9 ; retf 0xfffb
0x00000000004c8db0 : add al, 0xeb ; ret
0x00000000004734bc : add al, 0xf ; mov dh, 0x40 ; add ecx, dword ptr [rax + 0x39] ; retf
0x00000000004a0d68 : add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004462b6 : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000041fcaa : add al, 0xf ; retf
0x0000000000462c0b : add al, 0xf ; sub rax, rsi ; ret
0x000000000040dc8a : add al, 0xf1 ; mov dword ptr [rbx + 0x38], edx ; pop rbx ; ret
0x0000000000451783 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000041b9fb : add al, 0xf3 ; ret
0x00000000004c6f01 : add al, 0xf4 ; jmp qword ptr [rax]
0x00000000004c7069 : add al, 0xf4 ; jmp qword ptr [rdx]
0x000000000047cd1e : add al, 0xf8 ; jmp rax
0x00000000004ad610 : add al, 0xf9 ; call qword ptr [rax]
0x00000000004ad8a1 : add al, 0xfa ; call qword ptr [rax]
0x00000000004ad8c1 : add al, 0xfa ; call rax
0x00000000004d49fd : add al, 1 ; add byte ptr [rax - 4], ah ; cld ; jmp qword ptr [rcx]
0x000000000042a2f7 : add al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004c6a6c : add al, 2 ; hlt ; call qword ptr [rbx]
0x0000000000449557 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000045c17d : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000048810c : add al, 7 ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x000000000045c398 : add al, 7 ; ret
0x0000000000441e3f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x0000000000468856 : add al, 9 ; retf 0xfa81
0x00000000004c846b : add al, ah ; add byte ptr ds:[rax], al ; adc byte ptr [rsp + rsi*8], bl ; jmp qword ptr [rdx]
0x00000000004cb86b : add al, ah ; jb 0x4cb877 ; add al, dh ; loope 0x4cb870 ; call rsp
0x00000000004d086b : add al, ah ; ret 0
0x00000000004d27ff : add al, ah ; retf 0xfffb
0x00000000004c838f : add al, ah ; sbb esi, esp ; call qword ptr [rdx]
0x00000000004c48bb : add al, al ; add al, byte ptr [rax] ; add byte ptr [rdx], ah ; sal bl, cl ; call qword ptr [rsi]
0x00000000004cd58f : add al, al ; jp 0x4cd58d ; call qword ptr [rdx]
0x00000000004d264b : add al, al ; loopne 0x4d2657 ; add byte ptr [rax - 0x3e], dl ; sti ; jmp qword ptr [rbx]
0x00000000004c9b4b : add al, al ; push rbp ; add byte ptr [rax], al ; and byte ptr [rax], bh ; hlt ; call qword ptr [rdi]
0x00000000004d084b : add al, al ; ret 0
0x00000000004b85e7 : add al, al ; sldt word ptr [rax] ; ret
0x0000000000464245 : add al, bh ; jg 0x464247 ; int1 ; mov eax, eax ; ret
0x00000000004cef17 : add al, bh ; lahf ; clc ; call qword ptr [rax]
0x00000000004c6c63 : add al, bl ; add byte ptr es:[rax], al ; add rsi, rsp ; call qword ptr [rbx]
0x00000000004c8b47 : add al, bl ; and dh, ah ; call qword ptr [rax]
0x00000000004c6b63 : add al, bl ; and eax, 0x2980000 ; hlt ; call qword ptr [rbx]
0x00000000004c60b7 : add al, bl ; div bl ; jmp qword ptr [rdx]
0x00000000004d2663 : add al, bl ; loopne 0x4d266f ; add byte ptr [rax - 0x3e], ch ; sti ; jmp qword ptr [rbx]
0x00000000004c78c7 : add al, bl ; or al, 0xf4 ; jmp qword ptr [rdx]
0x00000000004d0963 : add al, bl ; ret
0x00000000004d41a7 : add al, bl ; ret 0xfffc
0x00000000004c7063 : add al, bl ; sub al, byte ptr [rax] ; add byte ptr [rax], cl ; add al, 0xf4 ; jmp qword ptr [rdx]
0x0000000000428a42 : add al, byte ptr [eax] ; add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x000000000045cd71 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x00000000004713e3 : add al, byte ptr [rax] ; add al, ch ; add eax, 0x89fffaba ; retf 0xe283
0x0000000000470244 : add al, byte ptr [rax] ; add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x000000000046ed1d : add al, byte ptr [rax] ; add al, ch ; retf
0x000000000041c32b : add al, byte ptr [rax] ; add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000004721ba : add al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; retf 0x8341
0x0000000000471ded : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000497040 : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0xed75
0x0000000000439f5d : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; retf 0x820f
0x000000000047bba3 : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000040fd6b : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret 0xc283
0x00000000004471b2 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000004a419e : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret 0x3a83
0x000000000047785d : add al, byte ptr [rax] ; add byte ptr [rax + rcx*2 - 0x77], ah ; adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x000000000041c315 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000484f04 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xbc40
0x000000000043f3f3 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x00000000004983ba : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x00000000004944f5 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000402271 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000048bf7d : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000463734 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000043d6fa : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000047158b : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000446e87 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045a821 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000446eb5 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000428a43 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x0000000000477752 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0x200
0x0000000000499cb6 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000004667b9 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x0000000000428ecc : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x000000000041a5e1 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000004a182c : add al, byte ptr [rax] ; add byte ptr [rbp + rcx*4 + 4], cl ; retf 0x8b41
0x00000000004a3d2a : add al, byte ptr [rax] ; add byte ptr [rbp + rcx*4 + 4], cl ; retf 0xba
0x00000000004446e8 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004621b4 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x000000000042ca56 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fd08], al ; ret
0x00000000004a1aa4 : add al, byte ptr [rax] ; add byte ptr [rcx + 0xc8b48d8], cl ; ret 0xb60f
0x0000000000488ee4 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x00000000004669c0 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; retf
0x00000000004c48bd : add al, byte ptr [rax] ; add byte ptr [rdx], ah ; sal bl, cl ; call qword ptr [rsi]
0x0000000000402c67 : add al, byte ptr [rax] ; add cl, cl ; ret
0x0000000000436dc6 : add al, byte ptr [rax] ; add dh, dh ; ret
0x00000000004403f3 : add al, byte ptr [rax] ; cmove rax, rdx ; ret
0x000000000043f7dc : add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000499895 : add al, byte ptr [rax] ; mov eax, 0x15 ; syscall
0x00000000004903b1 : add al, byte ptr [rax] ; mov edx, 0x5e ; call 0x41cdf9
0x00000000004981db : add al, byte ptr [rax] ; movsxd rax, dword ptr [rcx + r12*4] ; add rax, rcx ; jmp rax
0x0000000000498b03 : add al, byte ptr [rax] ; movsxd rax, dword ptr [rdi + r12*4] ; add rax, rdi ; jmp rax
0x00000000004a0eea : add al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000004017f1 : add al, byte ptr [rax] ; nop ; leave ; ret
0x0000000000400e0f : add al, byte ptr [rax] ; nop ; pop rbp ; ret
0x0000000000467095 : add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x00000000004d50fd : add al, byte ptr [rbx] ; retf
0x000000000046806e : add al, byte ptr [rcx + 0x39] ; ret
0x00000000004cb7c5 : add al, byte ptr [rdx] ; ret 0xb00e
0x000000000040d8b0 : add al, byte ptr [rip + 0x48000000] ; mov eax, edx ; ret
0x00000000004407c1 : add al, byte ptr cs:[rax] ; cmovne rax, rdx ; ret
0x00000000004405ad : add al, byte ptr ss:[rax] ; cmovne rax, rdx ; ret
0x00000000004713e5 : add al, ch ; add eax, 0x89fffaba ; retf 0xe283
0x000000000040c43a : add al, ch ; and byte ptr [rax - 1], al ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000470aee : add al, ch ; cld ; ret 0xfffa
0x00000000004c6427 : add al, ch ; cli ; call qword ptr [rdx]
0x0000000000472411 : add al, ch ; fldcw word ptr [rcx - 0x76be0006] ; ret 0x5be9
0x00000000004a8e76 : add al, ch ; hlt ; ret
0x00000000004d1637 : add al, ch ; jg 0x4d1639 ; call qword ptr [rbx]
0x0000000000470246 : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000004017ed : add al, ch ; or eax, 0x90000288 ; leave ; ret
0x0000000000470a91 : add al, ch ; pop rcx ; ret
0x000000000046f129 : add al, ch ; rcr esp, 0xfa ; inc dword ptr [rcx - 0x77] ; ret
0x0000000000429c77 : add al, ch ; ret
0x000000000041ba68 : add al, ch ; ret 0x1fd
0x000000000041ec38 : add al, ch ; ret 0xbe13
0x000000000040432f : add al, ch ; retf
0x0000000000439b40 : add al, ch ; retf 0x2e4
0x0000000000400f70 : add al, ch ; retf 0x648
0x0000000000482370 : add al, ch ; retf 0xfe5c
0x00000000004cec37 : add al, ch ; sbb esi, edi ; jmp qword ptr [rbx]
0x00000000004042d3 : add al, ch ; test dword ptr [rcx], 0xc7480000 ; ret 0x8ef0
0x000000000040237f : add al, ch ; wait ; sbb al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004c8f53 : add al, cl ; add byte ptr [r8], al ; pop rax ; sub esp, esi ; call qword ptr [rcx]
0x00000000004d4253 : add al, cl ; cld ; add byte ptr [rax], al ; or al, cl ; cld ; jmp qword ptr [rdx]
0x00000000004caad7 : add al, cl ; div ah ; call qword ptr [rbx]
0x00000000004cfd97 : add al, cl ; jg 0x4cfd98 ; call qword ptr [rcx]
0x00000000004d3b37 : add al, cl ; xchg eax, ebx ; cld ; jmp qword ptr [rsi]
0x00000000004c6a7b : add al, dh ; and al, 0 ; add byte ptr [rax], dl ; add dh, ah ; call qword ptr [rdi]
0x00000000004cb86f : add al, dh ; loope 0x4cb86c ; call rsp
0x00000000004ceeef : add al, dl ; jle 0x4ceeef ; call qword ptr [rax]
0x00000000004cf35b : add al, dl ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; ror byte ptr [rbx - 7], 1 ; call qword ptr [rbx]
0x00000000004d0b4f : add al, dl ; out dx, eax ; stc ; call qword ptr [rdi]
0x00000000004cae5b : add al, dl ; push 0xbb00000 ; cmc ; call qword ptr [rdx]
0x00000000004cec1f : add al, dl ; sbb esi, edi ; jmp qword ptr [rbx]
0x00000000004cf35f : add al, dl ; stc ; call qword ptr [rbx]
0x00000000004d39a6 : add bh, ah ; ret
0x000000000046b49f : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047aef7 : add bh, al ; test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x0000000000429d9f : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000041c32d : add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000040b03a : add bh, bh ; ret
0x00000000004a196f : add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x00000000004ad748 : add bh, bl ; stc ; jmp rax
0x00000000004a05f9 : add bh, byte ptr [rax + 1] ; ret
0x00000000004a0756 : add bh, byte ptr [rax + 2] ; ret
0x000000000046560b : add bh, byte ptr [rax - 1] ; ret
0x0000000000462582 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000004ada80 : add bh, byte ptr [rdx + rdi*8] ; call qword ptr [rdx + 0x22fffa3b]
0x00000000004d052f : add bh, dh ; push rdx ; jmp qword ptr [rbx]
0x000000000041c0fa : add bh, dh ; ret 0
0x000000000046fde9 : add bh, dh ; ret 0xf800
0x000000000042a457 : add bh, dh ; ret 0xffef
0x0000000000407fce : add bl, al ; lea rax, [rdi + 0x18] ; ret
0x0000000000490711 : add bl, al ; mov eax, 2 ; ret
0x00000000004a41ba : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000047fa89 : add bl, bl ; sub bl, cl ; in eax, 0xdf ; loopne 0x47fa22 ; ret
0x00000000004a60cb : add bl, ch ; add eax, 0x1489066 ; ret 0xb70f
0x0000000000402ab9 : add bl, ch ; add eax, 0xb8 ; add cl, cl ; ret
0x000000000040d7ab : add bl, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; nop ; xor eax, eax ; ret
0x000000000040a4dd : add bl, ch ; loopne 0x40a52f ; mov dword ptr [rdi], esi ; ret
0x00000000004a1c39 : add bl, ch ; ret
0x0000000000405661 : add bl, ch ; ret 0x1f0f
0x0000000000402456 : add bl, ch ; sbb cl, byte ptr [rax - 0x77] ; ret
0x00000000004a6ea3 : add bl, dh ; movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000400adf : add bl, dh ; ret
0x000000000040a3c6 : add bl, sil ; ret
0x0000000000466a03 : add byte ptr [r11 + 0x94801e1], r8b ; retf 0x8949
0x0000000000471fe3 : add byte ptr [r15], r9b ; mov dh, 0x78 ; add cl, byte ptr [rax + 0x39] ; retf
0x0000000000471fce : add byte ptr [r15], r9b ; mov dh, 0x78 ; add dword ptr [rax + 0x39], ecx ; retf
0x0000000000471ff8 : add byte ptr [r15], r9b ; mov dh, 0x78 ; add ecx, dword ptr [rax + 0x39] ; retf
0x000000000049e8b5 : add byte ptr [r8 + 0x39], r9b ; retf
0x000000000049d650 : add byte ptr [r8 + 9], r9b ; ret 0x840f
0x000000000048e946 : add byte ptr [r8 - 0x77], r9b ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000471f95 : add byte ptr [r8 - 0x77], r9b ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x000000000042949a : add byte ptr [r8 - 0x7d], r9b ; ret
0x000000000040528e : add byte ptr [r8], al ; mov rax, rbx ; pop rbx ; ret
0x00000000004c8f55 : add byte ptr [r8], al ; pop rax ; sub esp, esi ; call qword ptr [rcx]
0x00000000004c8b45 : add byte ptr [r8], r8b ; fsub dword ptr [rdx] ; hlt ; call qword ptr [rax]
0x000000000049185b : add byte ptr [r9 + rbp - 0x48], sil ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x000000000040a139 : add byte ptr [r9 + rsi + 0x5b], r14b ; pop rbp ; pop r12 ; ret
0x00000000004d150b : add byte ptr [rax + 0x100000cf], al ; insd dword ptr [rdi], dx ; std ; call rdx
0x000000000040a51e : add byte ptr [rax + 0x10478d48], dl ; ret
0x000000000040a52e : add byte ptr [rax + 0x10778948], dl ; ret
0x0000000000468bb3 : add byte ptr [rax + 0x15], bh ; syscall
0x00000000004c5ad3 : add byte ptr [rax + 0x15], cl ; add byte ptr [rax], al ; pop rax ; out dx, al ; call qword ptr [rcx]
0x000000000043f4ef : add byte ptr [rax + 0x16], bh ; ret
0x00000000004cba13 : add byte ptr [rax + 0x18000074], cl ; out 0xf5, eax ; call qword ptr [rax]
0x00000000004d1013 : add byte ptr [rax + 0x180000ca], cl ; push -3 ; jmp qword ptr [rdi]
0x000000000046555f : add byte ptr [rax + 0x18], bh ; syscall
0x000000000046555e : add byte ptr [rax + 0x18], dil ; syscall
0x00000000004067be : add byte ptr [rax + 0x1b058d48], dl ; or al, byte ptr ss:[rax] ; ret
0x000000000046673f : add byte ptr [rax + 0x1c], bh ; syscall
0x00000000004c62db : add byte ptr [rax + 0x1d], dl ; add byte ptr [rax], al ; push rax ; stc ; call qword ptr [rdx]
0x00000000004d4cb7 : add byte ptr [rax + 0x1f], cl ; std ; call qword ptr [rdx]
0x00000000004c5d0b : add byte ptr [rax + 0x20000017], al ; call rax
0x00000000004c66cb : add byte ptr [rax + 0x21], al ; add byte ptr [rax], al ; and dh, bh ; call qword ptr [rdx]
0x00000000004c68eb : add byte ptr [rax + 0x23], ah ; add byte ptr [rax], al ; push rbx ; call qword ptr [rbx]
0x00000000004c6b03 : add byte ptr [rax + 0x25], bh ; add byte ptr [rax], al ; js 0x4c6b14 ; hlt ; call qword ptr [rbx]
0x00000000004c6c03 : add byte ptr [rax + 0x26], bh ; add byte ptr [rax], al ; sub byte ptr [rbx], al ; hlt ; call qword ptr [rbx]
0x00000000004a465f : add byte ptr [rax + 0x26], bh ; syscall
0x0000000000467f9f : add byte ptr [rax + 0x29], bh ; syscall
0x00000000004c8f57 : add byte ptr [rax + 0x29], bl ; hlt ; call qword ptr [rcx]
0x00000000004c8f87 : add byte ptr [rax + 0x29], ch ; hlt ; call qword ptr [rcx]
0x0000000000401f7e : add byte ptr [rax + 0x29], cl ; ret
0x000000000046f571 : add byte ptr [rax + 0x29], cl ; ret 0x349
0x00000000004700d7 : add byte ptr [rax + 0x29], cl ; ret 0x8348
0x0000000000482248 : add byte ptr [rax + 0x29], cl ; ret 0x8349
0x0000000000401c55 : add byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000004969ca : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000043e124 : add byte ptr [rax + 0x29], cl ; retf
0x00000000004721bc : add byte ptr [rax + 0x29], cl ; retf 0x8341
0x00000000004815f9 : add byte ptr [rax + 0x29], cl ; retf 0x8948
0x000000000049a970 : add byte ptr [rax + 0x29], cl ; retf 0x8d48
0x0000000000408025 : add byte ptr [rax + 0x29], cl ; ror dword ptr [rax + 0x39], cl ; ret
0x00000000004c6efb : add byte ptr [rax + 0x29], dh ; add byte ptr [rax], al ; xor byte ptr [rsp + rsi*8], al ; jmp qword ptr [rax]
0x00000000004c490b : add byte ptr [rax + 0x2c000003], al ; sal ebx, cl ; jmp qword ptr [rsi]
0x00000000004c7703 : add byte ptr [rax + 0x31], bh ; add byte ptr [rax], al ; test al, 8 ; hlt ; jmp qword ptr [rax]
0x00000000004c492b : add byte ptr [rax + 0x32000003], ah ; sal ebx, cl ; jmp qword ptr [rax]
0x00000000004c6c33 : add byte ptr [rax + 0x38000026], ch ; add esi, esp ; call qword ptr [rbx]
0x00000000004cf723 : add byte ptr [rax + 0x380000b1], bl ; pop rsi ; stc ; jmp qword ptr [rcx]
0x000000000040152e : add byte ptr [rax + 0x39], cl ; ret
0x0000000000402dbb : add byte ptr [rax + 0x39], cl ; ret 0x673
0x0000000000417513 : add byte ptr [rax + 0x39], cl ; ret 0x830f
0x00000000004360cf : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000042f1cf : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000004175a8 : add byte ptr [rax + 0x39], cl ; ret 0x9272
0x0000000000497042 : add byte ptr [rax + 0x39], cl ; ret 0xed75
0x0000000000438f90 : add byte ptr [rax + 0x39], cl ; ret 0xf275
0x000000000049439e : add byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000049e8b6 : add byte ptr [rax + 0x39], cl ; retf
0x0000000000449df6 : add byte ptr [rax + 0x39], cl ; retf 0x280f
0x00000000004506ef : add byte ptr [rax + 0x39], cl ; retf 0x377
0x0000000000439f5f : add byte ptr [rax + 0x39], cl ; retf 0x820f
0x000000000042c78d : add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000462d28 : add byte ptr [rax + 0x39], cl ; retf 0x870f
0x0000000000449916 : add byte ptr [rax + 0x39], cl ; retf 0x8949
0x0000000000464033 : add byte ptr [rax + 0x39], cl ; retf 0xd975
0x0000000000463e70 : add byte ptr [rax + 0x39], cl ; retf 0xe175
0x00000000004a1a08 : add byte ptr [rax + 0x39], cl ; retf 0xe275
0x00000000004c4f1b : add byte ptr [rax + 0x46000009], dl ; fdivr st(3), st(0) ; jmp qword ptr [rsi]
0x00000000004c8bfb : add byte ptr [rax + 0x46], dh ; add byte ptr [rax], al ; mov al, 0x23 ; hlt ; jmp qword ptr [rdx]
0x0000000000465a96 : add byte ptr [rax + 0x48], bh ; syscall
0x00000000004cf2e7 : add byte ptr [rax + 0x4a], ch ; stc ; call qword ptr [rdx]
0x00000000004cb3f7 : add byte ptr [rax + 0x4f], bl ; cmc ; call qword ptr [rdx]
0x00000000004c592b : add byte ptr [rax + 0x50000013], ah ; out dx, al ; call qword ptr [rsi]
0x00000000004ca00b : add byte ptr [rax + 0x5000005a], al ; push rcx ; hlt ; jmp qword ptr [rbx]
0x00000000004ca00f : add byte ptr [rax + 0x51], dl ; hlt ; jmp qword ptr [rbx]
0x00000000004c5943 : add byte ptr [rax + 0x58000013], bh ; out dx, al ; call qword ptr [rcx]
0x00000000004c5b23 : add byte ptr [rax + 0x58000015], bl ; out dx, al ; call qword ptr [rcx]
0x00000000004d12a7 : add byte ptr [rax + 0x5f], bl ; cli ; call qword ptr [rdx]
0x000000000042856d : add byte ptr [rax + 0x63], cl ; adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x000000000048af15 : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rcx ; jmp rax
0x000000000041d254 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000048b545 : add byte ptr [rax + 0x63], cl ; add al, 0x87 ; add rax, rdi ; jmp rax
0x0000000000465272 : add byte ptr [rax + 0x63], cl ; add al, 0x9a ; add rax, rdx ; jmp rax
0x00000000004640f6 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rax, rsi ; jmp rax
0x00000000004762f7 : add byte ptr [rax + 0x63], cl ; ret
0x0000000000418fe3 : add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x000000000040fd2b : add byte ptr [rax + 0x63], cl ; ret 0xc283
0x0000000000484bf5 : add byte ptr [rax + 0x63], cl ; retf 0x8948
0x000000000048dcaf : add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x000000000040e99d : add byte ptr [rax + 0x63], cl ; retf 0x9848
0x0000000000411336 : add byte ptr [rax + 0x63], cl ; retf 0xc283
0x000000000048ba13 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x000000000047a021 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000049161f : add byte ptr [rax + 0x66], bh ; syscall
0x00000000004d0733 : add byte ptr [rax + 0x680000c1], ch ; jb 0x4d0740 ; jmp qword ptr [rdx]
0x000000000049163f : add byte ptr [rax + 0x68], bh ; syscall
0x000000000049162f : add byte ptr [rax + 0x6b], bh ; syscall
0x00000000004cfaaf : add byte ptr [rax + 0x6c], ah ; stc ; jmp qword ptr [rcx]
0x00000000004cfac7 : add byte ptr [rax + 0x6c], bh ; stc ; jmp qword ptr [rcx]
0x000000000049164f : add byte ptr [rax + 0x6c], bh ; syscall
0x00000000004cfa97 : add byte ptr [rax + 0x6c], cl ; stc ; jmp qword ptr [rcx]
0x00000000004cb3f3 : add byte ptr [rax + 0x6e], ch ; add byte ptr [rax], al ; pop rax ; cmc ; call qword ptr [rdx]
0x00000000004d0737 : add byte ptr [rax + 0x72], ch ; std ; jmp qword ptr [rdx]
0x00000000004a58e3 : add byte ptr [rax + 0x74], ah ; adc dword ptr [rcx - 0x7d], ecx ; ret
0x00000000004cb9eb : add byte ptr [rax + 0x74], ah ; add byte ptr [rax], al ; adc bh, ah ; cmc ; call qword ptr [rax]
0x000000000045cd6f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000004cbad3 : add byte ptr [rax + 0x75], cl ; add byte ptr [rax], al ; out dx, al ; cmc ; jmp qword ptr [rax]
0x00000000004d2843 : add byte ptr [rax + 0x780000e2], bh ; sar ebx, 1 ; jmp qword ptr [rax]
0x00000000004607af : add byte ptr [rax + 0x78d4837], cl ; ret
0x0000000000406cbe : add byte ptr [rax + 0x8478b48], dl ; ret
0x00000000004057ce : add byte ptr [rax + 0x8478d48], dl ; ret
0x00000000004048ee : add byte ptr [rax + 0x8ec8348], dl ; call rdi
0x000000000046670f : add byte ptr [rax + 0xa], bh ; syscall
0x00000000004666df : add byte ptr [rax + 0xb], bh ; syscall
0x0000000000468051 : add byte ptr [rax + 0xca], bh ; syscall
0x00000000004652d4 : add byte ptr [rax + 0xe5], bh ; syscall
0x00000000004c53cb : add byte ptr [rax + 0xe], al ; add byte ptr [rax], al ; and esi, ebx ; jmp qword ptr [rdx]
0x0000000000428ecf : add byte ptr [rax + 0xe], bh ; syscall
0x0000000000440719 : add byte ptr [rax + 0xf4802e5], al ; ret 0xc3f3
0x00000000004641c7 : add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x000000000043154f : add byte ptr [rax + 0xf], al ; mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048f335 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x000000000046c86f : add byte ptr [rax + 0xf], cl ; mov esi, 0x83480147 ; ret
0x0000000000438d44 : add byte ptr [rax + 0xf], cl ; ret
0x00000000004971d6 : add byte ptr [rax + 0xf], cl ; ret 0x3e80
0x000000000043f864 : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000042eefa : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000439df3 : add byte ptr [rax + 0xf], cl ; ret 0x894c
0x0000000000497225 : add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x000000000046413a : add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x000000000043f7dd : add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000004404dd : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000470c08 : add byte ptr [rax + 0xf], cl ; ret 0xff85
0x00000000004a05bc : add byte ptr [rax + 1], bh ; ret
0x00000000004659af : add byte ptr [rax + 1], bh ; syscall
0x00000000004471b4 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000041ade7 : add byte ptr [rax + 1], cl ; ret
0x000000000049f7c8 : add byte ptr [rax + 1], cl ; ret 0x149
0x00000000004a41a0 : add byte ptr [rax + 1], cl ; ret 0x3a83
0x00000000004507ad : add byte ptr [rax + 1], cl ; retf 0x8148
0x0000000000469730 : add byte ptr [rax + 1], cl ; retf 0x8548
0x0000000000414bbb : add byte ptr [rax + 1], cl ; retf 0x8948
0x000000000046d695 : add byte ptr [rax + 1], cl ; retf 0x8b48
0x00000000004c6b07 : add byte ptr [rax + 2], bh ; hlt ; call qword ptr [rbx]
0x000000000041a5df : add byte ptr [rax + 2], bh ; ret
0x0000000000465c5f : add byte ptr [rax + 3], bh ; syscall
0x00000000004c6c67 : add byte ptr [rax + 3], cl ; hlt ; call qword ptr [rbx]
0x00000000004659df : add byte ptr [rax + 8], bh ; syscall
0x00000000004659de : add byte ptr [rax + 8], dil ; syscall
0x000000000049d651 : add byte ptr [rax + 9], cl ; ret 0x840f
0x0000000000492240 : add byte ptr [rax + 9], cl ; ret 0x850f
0x00000000004b758b : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x00000000004cc5ff : add byte ptr [rax + rax*4], dh ; add byte ptr [rax + rsi - 0xa], ch ; call qword ptr [rax]
0x000000000046d0c3 : add byte ptr [rax + rax*8 - 0x76b3178b], al ; ret 0x294c
0x00000000004d10b7 : add byte ptr [rax + rax], ah ; add byte ptr [rax], dh ; retf
0x000000000048e69f : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000440444 : add byte ptr [rax + rax], al ; add byte ptr [rsi - 9], dh ; ret 0
0x00000000004c46c3 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; cmp al, 1 ; add byte ptr [rax], al ; ret 0xf3c7
0x00000000004d087b : add byte ptr [rax + rax], ch ; add ah, dh ; ret 0
0x00000000004d095f : add byte ptr [rax + rax], ch ; add al, bl ; ret
0x0000000000439c9b : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x000000000048fd47 : add byte ptr [rax + rax], cl ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000004c6e47 : add byte ptr [rax + rbp + 0x3b40000], bh ; hlt ; call qword ptr [rdx]
0x000000000047776d : add byte ptr [rax + rcx - 0xd], dh ; ret
0x00000000004c8e37 : add byte ptr [rax + rcx*2 + 0x26240000], ch ; hlt ; call qword ptr [rdx]
0x000000000047785f : add byte ptr [rax + rcx*2 - 0x77], ah ; adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x00000000004c9bfb : add byte ptr [rax + rdi - 0xc], ah ; call qword ptr [rdi]
0x00000000004cbdef : add byte ptr [rax + rdi*2], ah ; add byte ptr [rdi + rdi*8], bh ; cmc ; call qword ptr [rdi]
0x00000000004c7df7 : add byte ptr [rax + rdi], ch ; add ah, dl ; adc dh, ah ; call rdx
0x00000000004b8737 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x00000000004cc603 : add byte ptr [rax + rsi - 0xa], ch ; call qword ptr [rax]
0x00000000004c59af : add byte ptr [rax - 0x12], ah ; call qword ptr [rdi]
0x00000000004c5947 : add byte ptr [rax - 0x12], bl ; call qword ptr [rcx]
0x00000000004cbad7 : add byte ptr [rax - 0x12], cl ; cmc ; jmp qword ptr [rax]
0x00000000004c592f : add byte ptr [rax - 0x12], dl ; call qword ptr [rsi]
0x000000000048b587 : add byte ptr [rax - 0x14dff3b5], al ; retf 0x9066
0x0000000000497a94 : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0xeac1
0x00000000004391af : add byte ptr [rax - 0x17], dl ; ret
0x00000000004d1633 : add byte ptr [rax - 0x17ffff30], ch ; jg 0x4d163d ; call qword ptr [rbx]
0x00000000004cec33 : add byte ptr [rax - 0x17ffff5a], ch ; sbb esi, edi ; jmp qword ptr [rbx]
0x00000000004c6423 : add byte ptr [rax - 0x17ffffe2], bl ; cli ; call qword ptr [rdx]
0x0000000000413e25 : add byte ptr [rax - 0x188b7f80], 0x89 ; ret 0xeac1
0x00000000004d27fb : add byte ptr [rax - 0x1e], dh ; add byte ptr [rax], al ; loopne 0x4d27d4 ; sti ; jmp rdx
0x00000000004d29e7 : add byte ptr [rax - 0x26], bl ; sti ; jmp qword ptr [rax]
0x00000000004c8b43 : add byte ptr [rax - 0x27ffffbb], bh ; and dh, ah ; call qword ptr [rax]
0x00000000004c6627 : add byte ptr [rax - 0x2ac0000], bl ; call qword ptr [rdx]
0x000000000040dd49 : add byte ptr [rax - 0x2d], cl ; call 0xffffffffc342bddb
0x00000000004d2847 : add byte ptr [rax - 0x2f], bh ; sti ; jmp qword ptr [rax]
0x00000000004cec1b : add byte ptr [rax - 0x2fffff5a], dl ; sbb esi, edi ; jmp qword ptr [rbx]
0x00000000004d3b33 : add byte ptr [rax - 0x37ffff0b], ch ; xchg eax, ebx ; cld ; jmp qword ptr [rsi]
0x0000000000408487 : add byte ptr [rax - 0x39], cl ; ret
0x0000000000404ad8 : add byte ptr [rax - 0x39], cl ; ret 0x6cd0
0x0000000000404b38 : add byte ptr [rax - 0x39], cl ; ret 0x6d80
0x0000000000404b98 : add byte ptr [rax - 0x39], cl ; ret 0x6dc0
0x0000000000404bf8 : add byte ptr [rax - 0x39], cl ; ret 0x6e00
0x0000000000404c58 : add byte ptr [rax - 0x39], cl ; ret 0x6e40
0x0000000000404dd8 : add byte ptr [rax - 0x39], cl ; ret 0x6e80
0x0000000000404e38 : add byte ptr [rax - 0x39], cl ; ret 0x6f30
0x0000000000404e98 : add byte ptr [rax - 0x39], cl ; ret 0x6f70
0x0000000000404ef8 : add byte ptr [rax - 0x39], cl ; ret 0x6fb0
0x000000000040415d : add byte ptr [rax - 0x39], cl ; ret 0x8ec8
0x00000000004042d8 : add byte ptr [rax - 0x39], cl ; ret 0x8ef0
0x0000000000403e93 : add byte ptr [rax - 0x39], cl ; ret 0x8f88
0x000000000040495f : add byte ptr [rax - 0x39], cl ; ret 0xa100
0x000000000042b813 : add byte ptr [rax - 0x39], cl ; ret 0xbc40
0x00000000004815eb : add byte ptr [rax - 0x39], cl ; ret 0xc3a8
0x00000000004798af : add byte ptr [rax - 0x39], cl ; ret 0xff90
0x0000000000428ef7 : add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000043f3f5 : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x0000000000484575 : add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x000000000049096f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000049094f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000004909af : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x000000000049095f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000049099f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000047795f : add byte ptr [rax - 0x39], cl ; ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x00000000004050cf : add byte ptr [rax - 0x3a7cb7fd], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000004d2667 : add byte ptr [rax - 0x3e], ch ; sti ; jmp qword ptr [rbx]
0x00000000004d264f : add byte ptr [rax - 0x3e], dl ; sti ; jmp qword ptr [rbx]
0x00000000004754b9 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000475490 : add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x0000000000474df0 : add byte ptr [rax - 0x3f], cl ; ret 0x8511
0x000000000049e7b5 : add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x00000000004d0243 : add byte ptr [rax - 0x47ffff44], bh ; pushfq ; stc ; jmp qword ptr [rax]
0x00000000004cf8f3 : add byte ptr [rax - 0x4d], ch ; add byte ptr [rax], al ; cwde ; movsxd rdi, ecx ; call qword ptr [rbx]
0x000000000047d9af : add byte ptr [rax - 0x4f743], al ; jmp qword ptr [rax]
0x00000000004cd62b : add byte ptr [rax - 0x4fffff70], ah ; jnp 0x4cd631 ; call qword ptr [rsi]
0x00000000004cb92b : add byte ptr [rax - 0x4fffff8d], ah ; in al, 0xf5 ; jmp qword ptr [rax]
0x00000000004d03af : add byte ptr [rax - 0x56], dl ; stc ; call qword ptr [rax]
0x00000000004ceeeb : add byte ptr [rax - 0x57], ah ; add byte ptr [rax], al ; sar byte ptr [rsi - 8], 1 ; call qword ptr [rax]
0x00000000004cecdb : add byte ptr [rax - 0x59], dl ; add byte ptr [rax], al ; push rax ; test bh, dh ; jmp qword ptr [rbx]
0x00000000004d432b : add byte ptr [rax - 0x5fffff03], ah ; retf
0x00000000004c9a3b : add byte ptr [rax - 0x5fffffac], dh ; hlt ; call qword ptr [rdi]
0x00000000004c6e33 : add byte ptr [rax - 0x67ffffd8], ch ; add esi, esp ; jmp qword ptr [rdi]
0x00000000004ad4a8 : add byte ptr [rax - 0x6f0f0007], dl ; stc ; jmp rax
0x00000000004cf30b : add byte ptr [rax - 0x6fffff53], al ; stc ; call qword ptr [rbx]
0x0000000000471d8a : add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000473f0d : add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], r9d ; ret
0x0000000000469eef : add byte ptr [rax - 0x73], cl ; add eax, 0x271429 ; ret
0x000000000040650f : add byte ptr [rax - 0x73], cl ; add eax, 0xa3879 ; ret
0x00000000004047ff : add byte ptr [rax - 0x73], cl ; add eax, 0xa5491 ; ret
0x00000000004047ef : add byte ptr [rax - 0x73], cl ; add eax, 0xa5492 ; ret
0x000000000040408f : add byte ptr [rax - 0x73], cl ; add eax, 0xa5b29 ; ret
0x000000000040409f : add byte ptr [rax - 0x73], cl ; add eax, 0xa5b41 ; ret
0x0000000000473f2b : add byte ptr [rax - 0x73], cl ; add r9b, byte ptr [rax + 0x39] ; ret
0x0000000000473f49 : add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [rax + 0x39] ; ret
0x0000000000494046 : add byte ptr [rax - 0x73], cl ; dec dword ptr [rax - 0x7d] ; ret
0x000000000049ea37 : add byte ptr [rax - 0x73], cl ; pop rsp ; retf 0x4df0
0x000000000043842a : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000043aa3f : add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x0000000000436d78 : add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000487beb : add byte ptr [rax - 0x73], cl ; xor eax, 0x24fc8d ; jmp rax
0x00000000004983bc : add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000043586f : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004a1f77 : add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x00000000004a6aa8 : add byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x000000000047d907 : add byte ptr [rax - 0x75], cl ; add al, 0xc6 ; xor esi, esi ; jmp rax
0x000000000047d25d : add byte ptr [rax - 0x75], cl ; add al, 0xc7 ; jmp rax
0x000000000047cd1b : add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x0000000000401f7b : add byte ptr [rax - 0x75], cl ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000401931 : add byte ptr [rax - 0x75], cl ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000401f69 : add byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047460f : add byte ptr [rax - 0x75], cl ; add eax, 0x268c21 ; ret
0x000000000046c10f : add byte ptr [rax - 0x75], cl ; add eax, 0x2719d1 ; ret
0x000000000043469f : add byte ptr [rax - 0x75], cl ; add eax, 0x2a5a99 ; ret
0x000000000040681f : add byte ptr [rax - 0x75], cl ; add eax, 0x2d5c79 ; ret
0x000000000042923b : add byte ptr [rax - 0x75], cl ; and al, 8 ; call rax
0x0000000000402b5f : add byte ptr [rax - 0x75], cl ; clc ; leave ; ret
0x000000000040466f : add byte ptr [rax - 0x75], cl ; clc ; ret
0x000000000046b55f : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000403098 : add byte ptr [rax - 0x75], cl ; fmul dword ptr [r8 + 1] ; ror cl, 1 ; ret
0x000000000043e8cf : add byte ptr [rax - 0x75], cl ; je 0x43e901 ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x00000000004781fb : add byte ptr [rax - 0x75], cl ; jl 0x47822c ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x0000000000429cd2 : add byte ptr [rax - 0x75], cl ; js 0x429cfc ; call rdx
0x00000000004027af : add byte ptr [rax - 0x75], cl ; loopne 0x402784 ; ret
0x000000000048df9f : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x00000000004160bf : add byte ptr [rax - 0x75], cl ; or ecx, dword ptr [rax - 0x7d] ; ret 0x4408
0x0000000000401ddc : add byte ptr [rax - 0x75], cl ; pop rbp ; clc ; leave ; ret
0x00000000004a2cc0 : add byte ptr [rax - 0x75], cl ; pop rbp ; mov eax, 0x89fd8945 ; ret 0xe283
0x000000000041d123 : add byte ptr [rax - 0x75], cl ; pop rsp ; retf
0x000000000041c1dd : add byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x0000000000418fdf : add byte ptr [rax - 0x75], cl ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x000000000044b33f : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000049eb32 : add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x48f8
0x000000000042e30f : add byte ptr [rax - 0x76b80000], al ; ret
0x000000000048cf3d : add byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x00000000004a0a56 : add byte ptr [rax - 0x77], cl ; add eax, 0x23c9ca ; ret
0x000000000043573a : add byte ptr [rax - 0x77], cl ; add eax, 0x2a513e ; ret
0x0000000000435235 : add byte ptr [rax - 0x77], cl ; add eax, 0x2a55d3 ; ret
0x000000000043520d : add byte ptr [rax - 0x77], cl ; add eax, 0x2a55f3 ; ret
0x00000000004351ed : add byte ptr [rax - 0x77], cl ; add eax, 0x2a560b ; ret
0x000000000040a69f : add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000404916 : add byte ptr [rax - 0x77], cl ; clc ; xchg qword ptr [rdx], rax ; ret
0x00000000004306f3 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000471f96 : add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x0000000000471980 : add byte ptr [rax - 0x77], cl ; fldl2t ; retf 0xfffd
0x000000000040ed25 : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xffe7
0x00000000004179be : add byte ptr [rax - 0x77], cl ; fucomip st(1) ; ret
0x000000000043428b : add byte ptr [rax - 0x77], cl ; imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x000000000041cac1 : add byte ptr [rax - 0x77], cl ; jbe 0x41cadb ; syscall
0x0000000000468b5f : add byte ptr [rax - 0x77], cl ; jo 0x468b89 ; ret
0x000000000049bb4b : add byte ptr [rax - 0x77], cl ; jrcxz 0x49bb9f ; mov esi, ebx ; syscall
0x000000000042eae3 : add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x00000000004a1be1 : add byte ptr [rax - 0x77], cl ; or al, 0x24 ; call 0x43e647
0x000000000043f54f : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rax ; call rcx
0x0000000000400c07 : add byte ptr [rax - 0x77], cl ; ret
0x000000000046546b : add byte ptr [rax - 0x77], cl ; ret 0x16e9
0x0000000000439c47 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000042d0c6 : add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000042f11a : add byte ptr [rax - 0x77], cl ; ret 0x294d
0x0000000000401eb8 : add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000041ad8c : add byte ptr [rax - 0x77], cl ; ret 0x3948
0x0000000000465517 : add byte ptr [rax - 0x77], cl ; ret 0x6ae9
0x000000000041e0ce : add byte ptr [rax - 0x77], cl ; ret 0x7ce9
0x000000000047c0d8 : add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000040bb74 : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004145c0 : add byte ptr [rax - 0x77], cl ; ret 0x840f
0x000000000041de4f : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000407518 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004018ed : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000040e3f6 : add byte ptr [rax - 0x77], cl ; ret 0x8b49
0x00000000004019fa : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000411886 : add byte ptr [rax - 0x77], cl ; ret 0x91e8
0x0000000000472ff8 : add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x000000000040e88a : add byte ptr [rax - 0x77], cl ; ret 0xb9e9
0x000000000040389a : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000004192d7 : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000042ae9d : add byte ptr [rax - 0x77], cl ; ret 0xf748
0x0000000000430878 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000465482 : add byte ptr [rax - 0x77], cl ; ret 0xffe9
0x0000000000409d0f : add byte ptr [rax - 0x77], cl ; retf
0x0000000000459224 : add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x000000000041124f : add byte ptr [rax - 0x77], cl ; retf 0x48e9
0x000000000040d1f3 : add byte ptr [rax - 0x77], cl ; retf 0x4e8
0x0000000000408dc1 : add byte ptr [rax - 0x77], cl ; retf 0x8348
0x000000000044631c : add byte ptr [rax - 0x77], cl ; retf 0x8349
0x000000000047a83b : add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000042caf7 : add byte ptr [rax - 0x77], cl ; retf 0x894c
0x0000000000472597 : add byte ptr [rax - 0x77], cl ; retf 0x8966
0x00000000004042b7 : add byte ptr [rax - 0x77], cl ; retf 0x8d4c
0x000000000044625a : add byte ptr [rax - 0x77], cl ; retf 0x9066
0x0000000000472d49 : add byte ptr [rax - 0x77], cl ; retf 0xb60f
0x00000000004590a6 : add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000045ac1c : add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x0000000000409b25 : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0xc031
0x0000000000407acf : add byte ptr [rax - 0x77], cl ; sal bl, 1 ; ret
0x0000000000462f90 : add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000049dcd1 : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000004190ff : add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x0000000000497743 : add byte ptr [rax - 0x77], cl ; xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x000000000042bbff : add byte ptr [rax - 0x77], cl ; xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000004d4313 : add byte ptr [rax - 0x77ffff03], cl ; retf
0x00000000004d1333 : add byte ptr [rax - 0x77ffff33], ch ; cli ; call qword ptr [rcx]
0x00000000004c6b33 : add byte ptr [rax - 0x77ffffdb], ch ; add dh, ah ; call qword ptr [rbx]
0x00000000004a6b86 : add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x000000000048f79f : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000048d9fb : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x000000000047f839 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; retf 6
0x00000000004186bf : add byte ptr [rax - 0x7bf0df06], al ; retf 4
0x000000000041b23e : add byte ptr [rax - 0x7d], cl ; and al, 0x10 ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000043bbfc : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000439037 : add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x0000000000438c94 : add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x000000000049b9ed : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x000000000043f79d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000041cd79 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000042d10a : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; retf
0x000000000047de13 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000040890a : add byte ptr [rax - 0x7d], cl ; in al, dx ; or byte ptr [rcx], dh ; shr al, 0x7a ; ret
0x00000000004a68b1 : add byte ptr [rax - 0x7d], cl ; in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000432acf : add byte ptr [rax - 0x7d], cl ; jg 0x432b15 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x000000000043b082 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000048d9b6 : add byte ptr [rax - 0x7d], cl ; js 0x48d9f4 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000040535f : add byte ptr [rax - 0x7d], cl ; rcl byte ptr [rax], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000004054b6 : add byte ptr [rax - 0x7d], cl ; rcr byte ptr [rax], 0x48 ; mov dword ptr [rdi], eax ; ret
0x00000000004055bc : add byte ptr [rax - 0x7d], cl ; rcr byte ptr [rax], 0x48 ; mov dword ptr [rsi], eax ; ret
0x0000000000403baf : add byte ptr [rax - 0x7d], cl ; ret
0x000000000040d847 : add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x000000000046267f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x0000000000468f07 : add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000041181d : add byte ptr [rax - 0x7d], cl ; ret 0x4120
0x000000000048b557 : add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000040f127 : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000472c54 : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000004a19ef : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000499cba : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000047a004 : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000446349 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000040f10f : add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000043a6d7 : add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x000000000041a4bf : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000040d9af : add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000048b738 : add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x00000000004401a0 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000459303 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000446377 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000040399f : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000435d1a : add byte ptr [rax - 0x7d], cl ; retf
0x000000000043e229 : add byte ptr [rax - 0x7d], cl ; retf 0x4801
0x0000000000428a45 : add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x0000000000438e30 : add byte ptr [rax - 0x7d], cl ; retf 0x4901
0x0000000000428aa5 : add byte ptr [rax - 0x7d], cl ; retf 0xeb08
0x0000000000441d7f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000048f8df : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000004a5652 : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x3901
0x00000000004d0017 : add byte ptr [rax - 0x7d], cl ; stc ; call qword ptr [rcx]
0x0000000000429c70 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000042a038 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf
0x0000000000439b39 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf 0x2e4
0x0000000000482369 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf 0xfe5c
0x0000000000477754 : add byte ptr [rax - 0x7f], cl ; ret 0x200
0x000000000044efab : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004cef13 : add byte ptr [rax - 0x7ffff57], cl ; lahf ; clc ; call qword ptr [rax]
0x00000000004d131b : add byte ptr [rax - 0x7fffff33], dl ; cli ; call qword ptr [rdi]
0x00000000004d052b : add byte ptr [rax - 0x8ffff41], ah ; push rdx ; jmp qword ptr [rbx]
0x00000000004aa9b0 : add byte ptr [rax - 0xa], ch ; jmp rax
0x0000000000407349 : add byte ptr [rax - 0xc38b2f1], al ; ret
0x00000000004c68ef : add byte ptr [rax - 1], al ; call qword ptr [rbx]
0x000000000040d857 : add byte ptr [rax - 1], bh ; ret
0x00000000004c68a7 : add byte ptr [rax - 1], cl ; call qword ptr [rdi]
0x00000000004d42fb : add byte ptr [rax - 3], dh ; add byte ptr [rax], al ; nop ; retf
0x00000000004d49ff : add byte ptr [rax - 4], ah ; cld ; jmp qword ptr [rcx]
0x00000000004c62df : add byte ptr [rax - 7], dl ; call qword ptr [rdx]
0x00000000004d0ab7 : add byte ptr [rax*8 - 0x197c0000], ch ; stc ; call rcx
0x0000000000429c74 : add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000042a03c : add byte ptr [rax], 0 ; add al, ch ; retf
0x0000000000439b3d : add byte ptr [rax], 0 ; add al, ch ; retf 0x2e4
0x000000000048236d : add byte ptr [rax], 0 ; add al, ch ; retf 0xfe5c
0x0000000000431a1a : add byte ptr [rax], 0 ; add bl, dh ; ret
0x0000000000463e6d : add byte ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0xe175
0x00000000004507aa : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; retf 0x8148
0x0000000000430875 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000045178b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000040714b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; ret
0x000000000046417b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x00000000004344b3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000000000040dbb3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004658db : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; syscall
0x000000000042e22e : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x30], al ; pop rbx ; ret
0x0000000000448571 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004cc601 : add byte ptr [rax], 0 ; insb byte ptr [rdi], dx ; xor dh, dh ; call qword ptr [rax]
0x00000000004c59ab : add byte ptr [rax], ah ; adc al, 0 ; add byte ptr [rax - 0x12], ah ; call qword ptr [rdi]
0x00000000004c5d0f : add byte ptr [rax], ah ; call rax
0x00000000004c9b4f : add byte ptr [rax], ah ; cmp ah, dh ; call qword ptr [rdi]
0x0000000000414fcb : add byte ptr [rax], ah ; jmp 0x411a03
0x0000000000414f6f : add byte ptr [rax], ah ; jmp 0x411a6f
0x00000000004cfaab : add byte ptr [rax], ah ; mov ch, 0 ; add byte ptr [rax + 0x6c], ah ; stc ; jmp qword ptr [rcx]
0x00000000004d03ab : add byte ptr [rax], ah ; mov esi, 0xaa500000 ; stc ; call qword ptr [rax]
0x00000000004d07ab : add byte ptr [rax], ah ; ret 0
0x00000000004d285e : add byte ptr [rax], al ; adc ah, 0xfb ; jmp qword ptr [rbx]
0x00000000004c519e : add byte ptr [rax], al ; adc al, 0xc ; add byte ptr [rax], al ; xor al, 0xdd ; jmp qword ptr [rbx]
0x00000000004cba2a : add byte ptr [rax], al ; adc al, 0xe7 ; cmc ; call qword ptr [rdx]
0x00000000004cb9ee : add byte ptr [rax], al ; adc bh, ah ; cmc ; call qword ptr [rax]
0x00000000004d086e : add byte ptr [rax], al ; adc bh, cl ; stc ; call qword ptr [rax]
0x00000000004d0fde : add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; retf 0
0x00000000004d0fca : add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000004d150e : add byte ptr [rax], al ; adc byte ptr [rbp - 3], ch ; call rdx
0x00000000004c5d0a : add byte ptr [rax], al ; adc byte ptr [rdi], 0 ; add byte ptr [rax], ah ; call rax
0x00000000004c6a7e : add byte ptr [rax], al ; adc byte ptr [rdx], al ; hlt ; call qword ptr [rdi]
0x00000000004c846e : add byte ptr [rax], al ; adc byte ptr [rsp + rsi*8], bl ; jmp qword ptr [rdx]
0x00000000004c5ad2 : add byte ptr [rax], al ; adc rax, -0x11a80000 ; call qword ptr [rcx]
0x00000000004c7d12 : add byte ptr [rax], al ; adc rsp, r14 ; jmp qword ptr [rdi]
0x00000000004d116d : add byte ptr [rax], al ; add ah, ah ; retf
0x00000000004d104d : add byte ptr [rax], al ; add ah, al ; retf 0
0x00000000004d418a : add byte ptr [rax], al ; add ah, bh ; add byte ptr [rax], al ; ret 0xfffc
0x00000000004c46e5 : add byte ptr [rax], al ; add ah, ch ; add byte ptr [rax], al ; add byte ptr [rdi], dl ; retf
0x00000000004d087d : add byte ptr [rax], al ; add ah, dh ; ret 0
0x00000000004c688e : add byte ptr [rax], al ; add al, 0x23 ; add byte ptr [rax], al ; cmp al, 0xff ; call qword ptr [rbx]
0x00000000004c85d6 : add byte ptr [rax], al ; add al, 0xae ; retf
0x00000000004c85be : add byte ptr [rax], al ; add al, 0xc2 ; retf
0x00000000004c8dae : add byte ptr [rax], al ; add al, 0xeb ; ret
0x00000000004c6a6a : add byte ptr [rax], al ; add al, 2 ; hlt ; call qword ptr [rbx]
0x00000000004d0869 : add byte ptr [rax], al ; add al, ah ; ret 0
0x00000000004d0849 : add byte ptr [rax], al ; add al, al ; ret 0
0x00000000004d0961 : add byte ptr [rax], al ; add al, bl ; ret
0x0000000000429c75 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000041ba66 : add byte ptr [rax], al ; add al, ch ; ret 0x1fd
0x000000000042a03d : add byte ptr [rax], al ; add al, ch ; retf
0x0000000000439b3e : add byte ptr [rax], al ; add al, ch ; retf 0x2e4
0x0000000000400f6e : add byte ptr [rax], al ; add al, ch ; retf 0x648
0x000000000048236e : add byte ptr [rax], al ; add al, ch ; retf 0xfe5c
0x000000000047af3e : add byte ptr [rax], al ; add bh, al ; test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x0000000000429d9d : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004a196d : add byte ptr [rax], al ; add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x000000000049070f : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x000000000040d7a9 : add byte ptr [rax], al ; add bl, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; nop ; xor eax, eax ; ret
0x00000000004a1c37 : add byte ptr [rax], al ; add bl, ch ; ret
0x000000000042a72e : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x000000000040484d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040a51c : add byte ptr [rax], al ; add byte ptr [rax + 0x10478d48], dl ; ret
0x000000000040a52c : add byte ptr [rax], al ; add byte ptr [rax + 0x10778948], dl ; ret
0x00000000004a465d : add byte ptr [rax], al ; add byte ptr [rax + 0x26], bh ; syscall
0x0000000000484f58 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000482246 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8349
0x00000000004969c8 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x00000000004815f7 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf 0x8948
0x000000000049a96e : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf 0x8d48
0x000000000043b26f : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000417511 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x830f
0x00000000004360cd : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000042f1cd : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000004175a6 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x9272
0x0000000000449df4 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x00000000004531e1 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000042c78b : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000463e6e : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0xe175
0x0000000000465a94 : add byte ptr [rax], al ; add byte ptr [rax + 0x48], bh ; syscall
0x0000000000487674 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000040ffa1 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0xc283
0x000000000048dcad : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x0000000000411334 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0xc283
0x000000000049163d : add byte ptr [rax], al ; add byte ptr [rax + 0x68], bh ; syscall
0x000000000049162d : add byte ptr [rax], al ; add byte ptr [rax + 0x6b], bh ; syscall
0x000000000049164d : add byte ptr [rax], al ; add byte ptr [rax + 0x6c], bh ; syscall
0x00000000004607ad : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x0000000000406cbc : add byte ptr [rax], al ; add byte ptr [rax + 0x8478b48], dl ; ret
0x00000000004057cc : add byte ptr [rax], al ; add byte ptr [rax + 0x8478d48], dl ; ret
0x00000000004048ec : add byte ptr [rax], al ; add byte ptr [rax + 0x8ec8348], dl ; call rdi
0x00000000004666dd : add byte ptr [rax], al ; add byte ptr [rax + 0xb], bh ; syscall
0x000000000046804f : add byte ptr [rax], al ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000004652d2 : add byte ptr [rax], al ; add byte ptr [rax + 0xe5], bh ; syscall
0x0000000000428ecd : add byte ptr [rax], al ; add byte ptr [rax + 0xe], bh ; syscall
0x00000000004641c5 : add byte ptr [rax], al ; add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x0000000000438d42 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004a11b2 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000046fbf2 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000439df1 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x894c
0x0000000000464138 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x000000000049042d : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000470c06 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xff85
0x00000000004a05ba : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000004659ad : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; syscall
0x000000000049f0f9 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x000000000049f7c6 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x149
0x00000000004507ab : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0x8148
0x000000000046d693 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0x8b48
0x000000000041a5dd : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x00000000004d10b5 : add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax], dh ; retf
0x00000000004d0879 : add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add ah, dh ; ret 0
0x00000000004d095d : add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add al, bl ; ret
0x000000000048b585 : add byte ptr [rax], al ; add byte ptr [rax - 0x14dff3b5], al ; retf 0x9066
0x000000000040dd47 : add byte ptr [rax], al ; add byte ptr [rax - 0x2d], cl ; call 0xffffffffc342bddd
0x0000000000466481 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000404458 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0x8ef0
0x000000000042b811 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xbc40
0x00000000004798ad : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xff90
0x00000000004658ad : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x00000000004754b7 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000047548e : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x0000000000474dee : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x8511
0x000000000049e7b3 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x00000000004d4329 : add byte ptr [rax], al ; add byte ptr [rax - 0x5fffff03], ah ; retf
0x0000000000473f0b : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], r9d ; ret
0x0000000000473f29 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r9b, byte ptr [rax + 0x39] ; ret
0x0000000000473f47 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [rax + 0x39] ; ret
0x000000000043586d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000402b5d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; clc ; leave ; ret
0x0000000000429cd0 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; js 0x429cfe ; call rdx
0x00000000004027ad : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; loopne 0x402786 ; ret
0x00000000004027ac : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; loopne 0x402787 ; ret
0x000000000041d121 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rsp ; retf
0x000000000040a69d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047197e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fldl2t ; retf 0xfffd
0x000000000040ed23 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xffe7
0x00000000004179bc : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(1) ; ret
0x000000000041cabf : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jbe 0x41cadd ; syscall
0x0000000000468b5d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jo 0x468b8b ; ret
0x00000000004a1bdf : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; or al, 0x24 ; call 0x43e649
0x000000000043f54d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rax ; call rcx
0x000000000040300f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042d0c4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000047c534 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x00000000004378cd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000041a4dd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000040e888 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb9e9
0x0000000000403898 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000004869d5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000042ae9b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x0000000000430876 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000467532 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x000000000047a839 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x00000000004042b5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8d4c
0x0000000000446258 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x0000000000472d47 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xb60f
0x00000000004590a4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000045ac1a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x0000000000407acd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; sal bl, 1 ; ret
0x00000000004190fd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x00000000004d4311 : add byte ptr [rax], al ; add byte ptr [rax - 0x77ffff03], cl ; retf
0x00000000004a6b84 : add byte ptr [rax], al ; add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x0000000000403bad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000046267d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000041094d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004a19ed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000499cb8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000447063 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041a4bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000040d9ad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000048ec5e : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000045a9c1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000044708d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000040399d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000441d7d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00000000004a5650 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x3901
0x00000000004507a4 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000407347 : add byte ptr [rax], al ; add byte ptr [rax - 0xc38b2f1], al ; ret
0x000000000042db28 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000004d42f9 : add byte ptr [rax], al ; add byte ptr [rax - 3], dh ; add byte ptr [rax], al ; nop ; retf
0x00000000004d07a9 : add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0
0x00000000004d0fdc : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; retf 0
0x000000000042d77b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf
0x0000000000429d9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004a196b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x000000000040484b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000042f1cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000048dcab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x00000000004798ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xff90
0x00000000004658ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000040a69b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000468b5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jo 0x468b8d ; ret
0x00000000004378cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000041a4db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000407acb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; sal bl, 1 ; ret
0x00000000004190fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x0000000000403bab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000046267b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000042a59b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041a4bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000040d9ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000040399b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000004ad39a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; loopne 0x4ad3e0 ; stc ; jmp qword ptr [rax]
0x00000000004332b6 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004b9412 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004b9902 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x00000000004b8ac2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004b9452 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x00000000004b9942 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x00000000004b8aba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x000000000043502b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004628bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00000000004420cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000004409db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000040b45b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], al ; ret 0x8b48
0x000000000047658b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], cl ; retf 0x4a8d
0x000000000042ec4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x0000000000435dcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x00000000004d10b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr fs:[rax], al ; add byte ptr [rax], dh ; retf
0x000000000043e6fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x4804
0x000000000046667b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x000000000049092c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x00000000004005f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000429d9c : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x0000000000435d3c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000004a196c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rbx
0x00000000004bb43c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004ba5ec : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004d4189 : add byte ptr [rax], al ; add byte ptr [rax], al ; cld ; add byte ptr [rax], al ; ret 0xfffc
0x0000000000464137 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x00000000004d0878 : add byte ptr [rax], al ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; add ah, dh ; ret 0
0x00000000004196c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; je 0x4196ac ; ret
0x00000000004a1c36 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x4a1c04
0x000000000047c36d : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000460ddc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x0000000000460dec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x0000000000460dfc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x0000000000460e0c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x0000000000460e1c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x0000000000460d5c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 1] ; ret
0x0000000000460d6c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x0000000000460d7c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x0000000000460d8c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x0000000000460d9c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x0000000000460dac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x0000000000460dbc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x0000000000460dcc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x0000000000460d4c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x0000000000402abd : add byte ptr [rax], al ; add byte ptr [rax], al ; leave ; ret
0x00000000004ad39c : add byte ptr [rax], al ; add byte ptr [rax], al ; loopne 0x4ad3de ; stc ; jmp qword ptr [rax]
0x000000000040ac18 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rax], 0 ; ret
0x00000000004607ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x000000000046018c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000040a3fd : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rsi + 0x10], 0 ; ret
0x00000000004a465c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x26 ; syscall
0x000000000049163c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x000000000049162c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x000000000049164c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x00000000004666dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x000000000043464c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000004a05b9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000004659ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; syscall
0x000000000041a5dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000046502c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edi, edx ; mov eax, esi ; syscall
0x000000000045178c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000468b5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rax + 0x20], rsi ; ret
0x000000000049db8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x00000000004346bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x0000000000406cac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; ret
0x000000000040714c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; ret
0x000000000040a69c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000407acc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdx ; ret
0x000000000049d00c : add byte ptr [rax], al ; add byte ptr [rax], al ; movsx eax, dl ; sub eax, ecx ; ret
0x000000000042ec4c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000046417c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x00000000004518dc : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000040a51b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; lea rax, [rdi + 0x10] ; ret
0x00000000004057cb : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; lea rax, [rdi + 8] ; ret
0x00000000004025c3 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; leave ; ret
0x000000000040a52b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov qword ptr [rdi + 0x10], rsi ; ret
0x000000000040cc8a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov qword ptr [rdi], rsi ; ret
0x0000000000406cbb : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov rax, qword ptr [rdi + 8] ; ret
0x000000000040738b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov rax, qword ptr [rdi] ; ret
0x000000000040759a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov rax, rdi ; ret
0x00000000004048cb : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00000000004048eb : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; sub rsp, 8 ; call rdi
0x000000000040d449 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000043502c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000403f6c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000040484c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004ba40c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004baba4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004b9414 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004b9904 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x00000000004b8ac4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004ba444 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x00000000004babe4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x00000000004b9454 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x00000000004b9944 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x00000000004b8abc : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x00000000004d0ff0 : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf 0
0x0000000000400407 : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x40041b ; call rax
0x00000000004478bc : add byte ptr [rax], al ; add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x000000000040dbb4 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004658dc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; syscall
0x000000000048f78c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x000000000040d8bc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor edx, edx ; mov rax, rdx ; ret
0x0000000000460b8c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000049cf4c : add byte ptr [rax], al ; add byte ptr [rax], bh ; retf 0x850f
0x00000000004d10a1 : add byte ptr [rax], al ; add byte ptr [rax], bl ; retf
0x00000000004d111d : add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rax], al ; cwde ; retf
0x00000000004d10b9 : add byte ptr [rax], al ; add byte ptr [rax], dh ; retf
0x00000000004d0865 : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax], al ; add al, ah ; ret 0
0x00000000004655c4 : add byte ptr [rax], al ; add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; ret
0x00000000004a10ed : add byte ptr [rax], al ; add byte ptr [rbp + 0x12], dh ; add rsp, 0x38 ; ret
0x000000000041a5d1 : add byte ptr [rax], al ; add byte ptr [rbp + 0x1a], dh ; ret
0x00000000004919ab : add byte ptr [rax], al ; add byte ptr [rbp + 0x1b], dh ; add rsp, 0x38 ; ret
0x000000000049df12 : add byte ptr [rax], al ; add byte ptr [rbp + 0x27], dh ; add rsp, 0x68 ; ret
0x000000000049de52 : add byte ptr [rax], al ; add byte ptr [rbp + 0x2c], dh ; add rsp, 0x38 ; ret
0x0000000000474535 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x000000000049e073 : add byte ptr [rax], al ; add byte ptr [rbp + 0x36], dh ; add rsp, 0x78 ; ret
0x00000000004a037e : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], dh ; leave ; ret
0x0000000000405218 : add byte ptr [rax], al ; add byte ptr [rbp + 0x3e], dh ; add rsp, 0x18 ; ret
0x000000000040555f : add byte ptr [rax], al ; add byte ptr [rbp + 0x3f], dh ; add rsp, 0x18 ; ret
0x00000000004667cd : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x00000000004657f4 : add byte ptr [rax], al ; add byte ptr [rbp + 0x42], dh ; add rsp, 0x58 ; ret
0x0000000000491879 : add byte ptr [rax], al ; add byte ptr [rbp + 0x45], dh ; add rsp, 0x58 ; ret
0x0000000000465b84 : add byte ptr [rax], al ; add byte ptr [rbp + 0x4a], dh ; add rsp, 0x68 ; ret
0x0000000000466533 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; ret
0x00000000004a4448 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; add rsp, 0x38 ; ret
0x00000000004054f9 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x00000000004a100a : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x0000000000419706 : add byte ptr [rax], al ; add byte ptr [rbp + rax + 0x48], dh ; mov dword ptr [rdi + rsi*8], edx ; ret
0x000000000043b009 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x46], cl ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000467d68 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x0000000000447018 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000474769 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x000000000045106d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000430222 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004331d4 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004068df : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004c8dad : add byte ptr [rax], al ; add byte ptr [rbx + rbp*8], al ; ret
0x00000000004196c5 : add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x00000000004c45bd : add byte ptr [rax], al ; add byte ptr [rbx - 0x2e], cl ; call qword ptr [rdx]
0x000000000048936d : add byte ptr [rax], al ; add byte ptr [rbx - 0x4f743], al ; jmp qword ptr [rax]
0x000000000048237a : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000004c490a : add byte ptr [rax], al ; add byte ptr [rbx], 0 ; add byte ptr [rbx + rdx*8], ch ; jmp qword ptr [rsi]
0x000000000047c7eb : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; retf 0x8944
0x000000000042d3b4 : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x000000000040672b : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x000000000047ce57 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x0000000000488c38 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x0000000000485946 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x46 ; or al, 0x83 ; ret
0x0000000000489bd2 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; ret 0x3941
0x00000000004628bd : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x0000000000429423 : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0x149
0x00000000004c46c5 : add byte ptr [rax], al ; add byte ptr [rcx + rax], bh ; add byte ptr [rax], al ; ret 0xf3c7
0x00000000004a946d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x000000000042e22f : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x30], al ; pop rbx ; ret
0x000000000048fb6d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x00000000004a8bcd : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x000000000043fe8d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*8 - 0x7cb7dd8c], al ; ret 0x4801
0x0000000000467418 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x467427 ; call r12
0x0000000000467448 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x467457 ; call r12
0x00000000004751d9 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; push rsi ; cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000047b751 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000041faee : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x0000000000495dc2 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x0000000000438e65 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000004420cd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000004409dd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000447a90 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x0000000000447ab6 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x000000000040ddc7 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; clc ; ret
0x0000000000466693 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x0000000000429fb2 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000044739a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x0000000000419433 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call r14
0x000000000041945b : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call rax
0x000000000041a1aa : add byte ptr [rax], al ; add byte ptr [rdi + 2], dh ; sbb eax, eax ; ret
0x00000000004ca4a5 : add byte ptr [rax], al ; add byte ptr [rdi + rbx*2], bl ; add byte ptr [rax], al ; xchg eax, esp ; ret 0xfff4
0x000000000040db15 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x46], al ; ret 0x74b9
0x000000000040b45d : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], al ; ret 0x8b48
0x000000000047658d : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], cl ; retf 0x4a8d
0x000000000047f7b3 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; or al, 0x89 ; ret 0xc689
0x0000000000428ea4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x8944c689 ; ret 0xeab8
0x000000000049d0f4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x940fc085 ; ret 0x3d
0x00000000004640c5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000045186d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000004518dd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000470ed9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4e ; add dword ptr [rcx - 0x77], eax ; retf
0x000000000046417d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x000000000042ec4d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x00000000004473dd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000004754d9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc083
0x0000000000481a11 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; retf 0x45e9
0x0000000000416fe9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd285
0x00000000004928e0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x00000000004c46e9 : add byte ptr [rax], al ; add byte ptr [rdi], dl ; retf
0x0000000000419635 : add byte ptr [rax], al ; add byte ptr [rdx + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004c85bd : add byte ptr [rax], al ; add byte ptr [rdx + rax*8], al ; retf
0x00000000004a1320 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x0000000000448572 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000435dcd : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x0000000000447302 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000004c85d5 : add byte ptr [rax], al ; add byte ptr [rsi + rbp*4], al ; retf
0x000000000040a50b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; lea rax, [rdi + 0x10] ; ret
0x000000000040a4eb : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000040cc8b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov qword ptr [rdi], rsi ; ret
0x000000000040758b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov rax, qword ptr [rdi] ; ret
0x000000000040759b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov rax, rdi ; ret
0x00000000004c838a : add byte ptr [rax], al ; add byte ptr [rsi], bh ; add byte ptr [rax], al ; loopne 0x4c83b6 ; hlt ; call qword ptr [rdx]
0x00000000004c838b : add byte ptr [rax], al ; add byte ptr ds:[rax], al ; loopne 0x4c83b5 ; hlt ; call qword ptr [rdx]
0x00000000004d10b6 : add byte ptr [rax], al ; add byte ptr fs:[rax], al ; add byte ptr [rax], dh ; retf
0x0000000000411272 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000047b178 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x0000000000471806 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x000000000043f364 : add byte ptr [rax], al ; add cl, ch ; retf
0x00000000004a6bce : add byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x0000000000402abe : add byte ptr [rax], al ; add cl, cl ; ret
0x000000000040a3fe : add byte ptr [rax], al ; add dh, al ; adc byte ptr [rax], r8b ; ret
0x000000000040ac19 : add byte ptr [rax], al ; add dh, al ; add byte ptr [rax], al ; ret
0x0000000000486456 : add byte ptr [rax], al ; add dh, al ; test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x000000000047ac80 : add byte ptr [rax], al ; add dh, al ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000046dc5c : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000043e6fd : add byte ptr [rax], al ; add dh, dh ; ret 0x4804
0x000000000046667d : add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x0000000000462011 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000004c6c4a : add byte ptr [rax], al ; add r14d, esp ; call qword ptr [rdx]
0x000000000049092e : add byte ptr [rax], al ; add rax, 3 ; ret
0x00000000004471b3 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x00000000004c6c66 : add byte ptr [rax], al ; add rsi, rsp ; call qword ptr [rbx]
0x000000000042d752 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000419670 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000409683 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004028cf : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004a094c : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000000004a6cc3 : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000043214b : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004656e9 : add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x0000000000465a7c : add byte ptr [rax], al ; add rsp, 0x78 ; ret
0x000000000041c80c : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x000000000040700f : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004005f6 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004c879a : add byte ptr [rax], al ; and al, 0x1f ; hlt ; jmp qword ptr [rsi]
0x00000000004c8e3a : add byte ptr [rax], al ; and al, 0x26 ; hlt ; call qword ptr [rdx]
0x00000000004c7aae : add byte ptr [rax], al ; and al, 0x35 ; add byte ptr [rax], al ; or al, 0xe ; hlt ; jmp qword ptr [rax]
0x00000000004c82ae : add byte ptr [rax], al ; and al, 0x3d ; add byte ptr [rax], al ; cld ; sbb esp, esi ; jmp qword ptr [rdx]
0x00000000004c6bea : add byte ptr [rax], al ; and al, 3 ; hlt ; call qword ptr [rdx]
0x00000000004c59aa : add byte ptr [rax], al ; and byte ptr [rax + rax], dl ; add byte ptr [rax - 0x12], ah ; call qword ptr [rdi]
0x00000000004c9b4e : add byte ptr [rax], al ; and byte ptr [rax], bh ; hlt ; call qword ptr [rdi]
0x00000000004cfaaa : add byte ptr [rax], al ; and byte ptr [rbp + 0x6c600000], dh ; stc ; jmp qword ptr [rcx]
0x00000000004d03aa : add byte ptr [rax], al ; and byte ptr [rsi - 0x55b00000], bh ; stc ; call qword ptr [rax]
0x0000000000414f6e : add byte ptr [rax], al ; and cl, ch ; cmc ; retf 0xffff
0x00000000004c66ce : add byte ptr [rax], al ; and dh, bh ; call qword ptr [rdx]
0x00000000004cc36a : add byte ptr [rax], al ; and dh, dh ; jmp rdi
0x00000000004c5d0e : add byte ptr [rax], al ; and dl, dh ; call rax
0x00000000004c48be : add byte ptr [rax], al ; and dl, dl ; call qword ptr [rsi]
0x00000000004c53ce : add byte ptr [rax], al ; and esi, ebx ; jmp qword ptr [rdx]
0x00000000004473de : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x000000000045ca00 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000048f334 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x00000000004c6426 : add byte ptr [rax], al ; call 0x134c582c
0x00000000004d1636 : add byte ptr [rax], al ; call 0x144d10c1
0x00000000004cec36 : add byte ptr [rax], al ; call 0x244ce35d
0x0000000000470aed : add byte ptr [rax], al ; call 0x41cdf4
0x00000000004a8fa5 : add byte ptr [rax], al ; call 0x435274
0x0000000000482390 : add byte ptr [rax], al ; call 0x43e644
0x000000000042b5a0 : add byte ptr [rax], al ; call 0x468014
0x000000000042b606 : add byte ptr [rax], al ; call 0x468044
0x0000000000429d9e : add byte ptr [rax], al ; call qword ptr [rbx]
0x0000000000419439 : add byte ptr [rax], al ; call r14
0x000000000041938f : add byte ptr [rax], al ; call rax
0x00000000004a196e : add byte ptr [rax], al ; call rbx
0x00000000004bb43e : add byte ptr [rax], al ; call rdi
0x0000000000429be5 : add byte ptr [rax], al ; call rdx
0x00000000004ba5ee : add byte ptr [rax], al ; call rsp
0x0000000000464244 : add byte ptr [rax], al ; clc ; jg 0x464248 ; int1 ; mov eax, eax ; ret
0x00000000004cef16 : add byte ptr [rax], al ; clc ; lahf ; clc ; call qword ptr [rax]
0x00000000004d418b : add byte ptr [rax], al ; cld ; add byte ptr [rax], al ; ret 0xfffc
0x00000000004c82b2 : add byte ptr [rax], al ; cld ; sbb esp, esi ; jmp qword ptr [rdx]
0x00000000004d0fd2 : add byte ptr [rax], al ; cli ; call qword ptr [rdx]
0x00000000004cb40a : add byte ptr [rax], al ; cmc ; call rsp
0x0000000000464171 : add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x0000000000464139 : add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x000000000044041c : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000043f813 : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000004c9bfa : add byte ptr [rax], al ; cmp ah, dh ; call qword ptr [rdi]
0x00000000004c59c6 : add byte ptr [rax], al ; cmp al, 0x14 ; add byte ptr [rax], al ; out dx, al ; call qword ptr [rdi]
0x00000000004c64c6 : add byte ptr [rax], al ; cmp al, 0x1f ; add byte ptr [rax], al ; mov ah, 0xfb ; call qword ptr [rdx]
0x00000000004d02c6 : add byte ptr [rax], al ; cmp al, 0xbd ; add byte ptr [rax], al ; mov ah, 0x9d ; stc ; jmp qword ptr [rdx]
0x00000000004c6892 : add byte ptr [rax], al ; cmp al, 0xff ; call qword ptr [rbx]
0x00000000004cbdf2 : add byte ptr [rax], al ; cmp al, 0xff ; cmc ; call qword ptr [rdi]
0x00000000004c46c6 : add byte ptr [rax], al ; cmp al, 1 ; add byte ptr [rax], al ; ret 0xf3c7
0x00000000004d07d6 : add byte ptr [rax], al ; cmp byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret 0
0x00000000004cfac2 : add byte ptr [rax], al ; cmp byte ptr [rbp + 0x6c780000], dh ; stc ; jmp qword ptr [rcx]
0x00000000004c6c36 : add byte ptr [rax], al ; cmp byte ptr [rbx], al ; hlt ; call qword ptr [rbx]
0x00000000004c78c2 : add byte ptr [rax], al ; cmp byte ptr [rbx], dh ; add byte ptr [rax], al ; fmul dword ptr [rsp + rsi*8] ; jmp qword ptr [rdx]
0x00000000004ceec2 : add byte ptr [rax], al ; cmp byte ptr [rcx + 0x5cb80000], ch ; clc ; call qword ptr [rax]
0x00000000004cffc2 : add byte ptr [rax], al ; cmp byte ptr [rdx - 0x7d080000], bh ; stc ; call qword ptr [rax]
0x00000000004cf726 : add byte ptr [rax], al ; cmp byte ptr [rsi - 7], bl ; jmp qword ptr [rcx]
0x00000000004c676e : add byte ptr [rax], al ; cmp dh, 0xf3 ; call qword ptr [rbx]
0x000000000043b687 : add byte ptr [rax], al ; cmp rdx, r8 ; jne 0x43b658 ; ret
0x00000000004c5b22 : add byte ptr [rax], al ; cwde ; adc eax, 0xee580000 ; call qword ptr [rcx]
0x00000000004c6b66 : add byte ptr [rax], al ; cwde ; add dh, ah ; call qword ptr [rbx]
0x00000000004c6e36 : add byte ptr [rax], al ; cwde ; add esi, esp ; jmp qword ptr [rdi]
0x00000000004cf722 : add byte ptr [rax], al ; cwde ; mov cl, 0 ; add byte ptr [rax], bh ; pop rsi ; stc ; jmp qword ptr [rcx]
0x00000000004cf8f6 : add byte ptr [rax], al ; cwde ; movsxd rdi, ecx ; call qword ptr [rbx]
0x00000000004d1122 : add byte ptr [rax], al ; cwde ; retf
0x00000000004b759a : add byte ptr [rax], al ; enter 0, 0 ; retf
0x00000000004bb5ee : add byte ptr [rax], al ; enter 0, 0 ; retf 0
0x00000000004b8746 : add byte ptr [rax], al ; enter 0x10, 0 ; retf
0x00000000004c8f52 : add byte ptr [rax], al ; enter 0x49, 0 ; pop rax ; sub esp, esi ; call qword ptr [rcx]
0x00000000004b7f46 : add byte ptr [rax], al ; enter 0xa, 0 ; retf
0x00000000004b8346 : add byte ptr [rax], al ; enter 0xd, 0 ; retf
0x00000000004d4252 : add byte ptr [rax], al ; enter 0xfc, 0 ; or al, cl ; cld ; jmp qword ptr [rdx]
0x00000000004bb7ee : add byte ptr [rax], al ; enter 1, 0 ; retf 1
0x00000000004bb9ee : add byte ptr [rax], al ; enter 2, 0 ; retf 2
0x00000000004bbbee : add byte ptr [rax], al ; enter 3, 0 ; retf 3
0x00000000004bbdee : add byte ptr [rax], al ; enter 4, 0 ; retf 4
0x00000000004bbfee : add byte ptr [rax], al ; enter 5, 0 ; retf 5
0x00000000004bc1ee : add byte ptr [rax], al ; enter 6, 0 ; retf 6
0x00000000004bc3ee : add byte ptr [rax], al ; enter 7, 0 ; retf 7
0x00000000004bc5ee : add byte ptr [rax], al ; enter 8, 0 ; retf 8
0x00000000004bc7ee : add byte ptr [rax], al ; enter 9, 0 ; retf 9
0x00000000004d1766 : add byte ptr [rax], al ; fcom st(0), st(1) ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; test al, 0xfa ; call qword ptr [rsi]
0x00000000004c60b6 : add byte ptr [rax], al ; fdiv st(6) ; jmp qword ptr [rdx]
0x00000000004cc366 : add byte ptr [rax], al ; fdivr qword ptr [rbp] ; add byte ptr [rdx - 0xa], ah ; jmp rdi
0x00000000004c4f1e : add byte ptr [rax], al ; fdivr st(3), st(0) ; jmp qword ptr [rsi]
0x00000000004c78c6 : add byte ptr [rax], al ; fmul dword ptr [rsp + rsi*8] ; jmp qword ptr [rdx]
0x00000000004cea62 : add byte ptr [rax], al ; fsub dword ptr [rax + rax - 0x8f1a800] ; jmp qword ptr [rbx]
0x00000000004c8b46 : add byte ptr [rax], al ; fsub dword ptr [rdx] ; hlt ; call qword ptr [rax]
0x00000000004c6b62 : add byte ptr [rax], al ; fsub dword ptr [rip + 0x2980000] ; hlt ; call qword ptr [rbx]
0x00000000004c6c62 : add byte ptr [rax], al ; fsub dword ptr [rsi] ; add byte ptr [rax], al ; add rsi, rsp ; call qword ptr [rbx]
0x00000000004c6a66 : add byte ptr [rax], al ; fsub qword ptr [rax + rax] ; add byte ptr [rdx + rax], al ; hlt ; call qword ptr [rbx]
0x00000000004c7062 : add byte ptr [rax], al ; fsubr dword ptr [rdx] ; add byte ptr [rax], al ; or byte ptr [rsp + rsi*8], al ; jmp qword ptr [rdx]
0x00000000004cd39a : add byte ptr [rax], al ; hlt ; jae 0x4cd39a ; call qword ptr [rdi]
0x00000000004cf27e : add byte ptr [rax], al ; hlt ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; stc ; call qword ptr [rdx]
0x00000000004d087e : add byte ptr [rax], al ; hlt ; ret 0
0x00000000004c637e : add byte ptr [rax], al ; hlt ; sbb eax, 0xfa1c0000 ; call qword ptr [rdx]
0x00000000004c596e : add byte ptr [rax], al ; in al, 0x13 ; add byte ptr [rax], al ; pop rsp ; out dx, al ; call qword ptr [rbx]
0x00000000004c6e9a : add byte ptr [rax], al ; in al, 3 ; hlt ; jmp qword ptr [rbx]
0x00000000004c46e6 : add byte ptr [rax], al ; in al, dx ; add byte ptr [rax], al ; add byte ptr [rdi], dl ; retf
0x00000000004c6c76 : add byte ptr [rax], al ; in al, dx ; add byte ptr es:[rax], al ; push rsp ; add esi, esp ; call qword ptr [rdx]
0x00000000004c6b76 : add byte ptr [rax], al ; in al, dx ; and eax, 0x2a40000 ; hlt ; call qword ptr [rdx]
0x00000000004cff76 : add byte ptr [rax], al ; in al, dx ; mov ecx, 0x82640000 ; stc ; call rdx
0x00000000004c78e2 : add byte ptr [rax], al ; in al, dx ; or al, 0xf4 ; jmp qword ptr [rdx]
0x00000000004c59f6 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; adc al, 0 ; add byte ptr [rsi + rbp*8 - 0xd], ah ; call qword ptr [rdi]
0x00000000004d087a : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; add ah, dh ; ret 0
0x00000000004d095e : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; add al, bl ; ret
0x00000000004c7df6 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp byte ptr [rax], al ; add ah, dl ; adc dh, ah ; call rdx
0x00000000004c9bf6 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; push rsi ; add byte ptr [rax], al ; cmp ah, dh ; call qword ptr [rdi]
0x00000000004d0ff6 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf 0
0x00000000004cf282 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; stc ; call qword ptr [rdx]
0x00000000004cfa96 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; stc ; jmp qword ptr [rcx]
0x00000000004cc602 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; xor dh, dh ; call qword ptr [rax]
0x000000000041a1ab : add byte ptr [rax], al ; ja 0x41a1b8 ; sbb eax, eax ; ret
0x0000000000419636 : add byte ptr [rax], al ; je 0x419624 ; add rsp, 0x18 ; ret
0x00000000004196c6 : add byte ptr [rax], al ; je 0x4196aa ; ret
0x0000000000419707 : add byte ptr [rax], al ; je 0x419718 ; mov qword ptr [rdi + rsi*8], rdx ; ret
0x000000000042e8e6 : add byte ptr [rax], al ; je 0x42e8f1 ; ret
0x0000000000440480 : add byte ptr [rax], al ; je 0x44044f ; ret
0x000000000048fd49 : add byte ptr [rax], al ; je 0x48fd55 ; ret
0x00000000004c66fe : add byte ptr [rax], al ; je 0x4c672c ; add byte ptr [rax], al ; sbb al, 0xfe ; call qword ptr [rbx]
0x00000000004c68fe : add byte ptr [rax], al ; je 0x4c692e ; add byte ptr [rax], al ; push rbx ; call qword ptr [rdi]
0x00000000004c6aea : add byte ptr [rax], al ; je 0x4c6af5 ; hlt ; call qword ptr [rdx]
0x00000000004cb9fe : add byte ptr [rax], al ; je 0x4cba7f ; add byte ptr [rax], al ; or al, 0xe7 ; cmc ; call qword ptr [rdx]
0x00000000004cc5fe : add byte ptr [rax], al ; je 0x4cc58b ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; xor dh, dh ; call qword ptr [rax]
0x00000000004d1bfe : add byte ptr [rax], al ; je 0x4d1be1 ; add byte ptr [rax], al ; jl 0x4d1c6b ; sti ; jmp qword ptr [rax]
0x00000000004c8812 : add byte ptr [rax], al ; jl 0x4c883a ; hlt ; jmp qword ptr [rbx]
0x00000000004c8811 : add byte ptr [rax], al ; jl 0x4c883b ; hlt ; jmp qword ptr [rbx]
0x00000000004cb406 : add byte ptr [rax], al ; jl 0x4cb481 ; add byte ptr [rax], al ; cmc ; call rsp
0x00000000004cf206 : add byte ptr [rax], al ; jl 0x4cf1bf ; add byte ptr [rax], al ; xchg eax, esp ; stc ; call rsp
0x00000000004cfb42 : add byte ptr [rax], al ; jl 0x4cfbb8 ; stc ; call rsi
0x00000000004d1052 : add byte ptr [rax], al ; jl 0x4d109e ; cli ; jmp rax
0x00000000004d1c02 : add byte ptr [rax], al ; jl 0x4d1c67 ; sti ; jmp qword ptr [rax]
0x00000000004a1c38 : add byte ptr [rax], al ; jmp 0x4a1c02
0x000000000041a0ff : add byte ptr [rax], al ; jmp rax
0x0000000000405219 : add byte ptr [rax], al ; jne 0x405263 ; add rsp, 0x18 ; ret
0x00000000004054fa : add byte ptr [rax], al ; jne 0x40550b ; add rsp, 0x18 ; ret
0x0000000000405560 : add byte ptr [rax], al ; jne 0x4055ab ; add rsp, 0x18 ; ret
0x00000000004065cb : add byte ptr [rax], al ; jne 0x4065de ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000406d1b : add byte ptr [rax], al ; jne 0x406d64 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000406ecb : add byte ptr [rax], al ; jne 0x406f14 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004081f0 : add byte ptr [rax], al ; jne 0x40823b ; add rsp, 0x18 ; ret
0x00000000004095ce : add byte ptr [rax], al ; jne 0x409617 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000409b0e : add byte ptr [rax], al ; jne 0x409b3c ; add rsp, 0x10 ; pop rbx ; ret
0x000000000041a5d2 : add byte ptr [rax], al ; jne 0x41a5f5 ; ret
0x0000000000435fae : add byte ptr [rax], al ; jne 0x435fc1 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000448072 : add byte ptr [rax], al ; jne 0x447f88 ; ret
0x000000000046480d : add byte ptr [rax], al ; jne 0x46483d ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004655c5 : add byte ptr [rax], al ; jne 0x4655e1 ; add rsp, 0x28 ; ret
0x00000000004657f5 : add byte ptr [rax], al ; jne 0x465843 ; add rsp, 0x58 ; ret
0x0000000000465b85 : add byte ptr [rax], al ; jne 0x465bdb ; add rsp, 0x68 ; ret
0x0000000000466534 : add byte ptr [rax], al ; jne 0x46654f ; add rsp, 0x28 ; ret
0x000000000046845e : add byte ptr [rax], al ; jne 0x46846f ; add rsp, 0x18 ; ret
0x00000000004778ad : add byte ptr [rax], al ; jne 0x4778be ; add rsp, 0x18 ; ret
0x000000000049187a : add byte ptr [rax], al ; jne 0x4918cb ; add rsp, 0x58 ; ret
0x00000000004919ac : add byte ptr [rax], al ; jne 0x4919d3 ; add rsp, 0x38 ; ret
0x000000000049dd58 : add byte ptr [rax], al ; jne 0x49dd6b ; add rsp, 0x20 ; pop rbx ; ret
0x000000000049de53 : add byte ptr [rax], al ; jne 0x49de8b ; add rsp, 0x38 ; ret
0x000000000049df13 : add byte ptr [rax], al ; jne 0x49df46 ; add rsp, 0x68 ; ret
0x000000000049e074 : add byte ptr [rax], al ; jne 0x49e0b6 ; add rsp, 0x78 ; ret
0x000000000049e343 : add byte ptr [rax], al ; jne 0x49e376 ; add rsp, 0x68 ; ret
0x00000000004a037f : add byte ptr [rax], al ; jne 0x4a03c3 ; leave ; ret
0x00000000004a100b : add byte ptr [rax], al ; jne 0x4a101c ; add rsp, 0x38 ; ret
0x00000000004a10ee : add byte ptr [rax], al ; jne 0x4a110c ; add rsp, 0x38 ; ret
0x00000000004a38b9 : add byte ptr [rax], al ; jne 0x4a38c4 ; pop rbx ; ret
0x00000000004a4449 : add byte ptr [rax], al ; jne 0x4a4464 ; add rsp, 0x38 ; ret
0x00000000004cbad2 : add byte ptr [rax], al ; jne 0x4cbae0 ; add byte ptr [rax - 0x12], cl ; cmc ; jmp qword ptr [rax]
0x00000000004c6efa : add byte ptr [rax], al ; jo 0x4c6f30 ; add byte ptr [rax], al ; xor byte ptr [rsp + rsi*8], al ; jmp qword ptr [rax]
0x00000000004c8bfa : add byte ptr [rax], al ; jo 0x4c8c4d ; add byte ptr [rax], al ; mov al, 0x23 ; hlt ; jmp qword ptr [rdx]
0x00000000004d27fa : add byte ptr [rax], al ; jo 0x4d27e9 ; add byte ptr [rax], al ; loopne 0x4d27d5 ; sti ; jmp rdx
0x00000000004d42fa : add byte ptr [rax], al ; jo 0x4d4302 ; add byte ptr [rax], al ; nop ; retf
0x00000000004c6b06 : add byte ptr [rax], al ; js 0x4c6b11 ; hlt ; call qword ptr [rbx]
0x00000000004c6b02 : add byte ptr [rax], al ; js 0x4c6b34 ; add byte ptr [rax], al ; js 0x4c6b15 ; hlt ; call qword ptr [rbx]
0x00000000004c6c02 : add byte ptr [rax], al ; js 0x4c6c35 ; add byte ptr [rax], al ; sub byte ptr [rbx], al ; hlt ; call qword ptr [rbx]
0x00000000004c7702 : add byte ptr [rax], al ; js 0x4c7740 ; add byte ptr [rax], al ; test al, 8 ; hlt ; jmp qword ptr [rax]
0x00000000004cbdee : add byte ptr [rax], al ; js 0x4cbdfc ; add byte ptr [rdi + rdi*8], bh ; cmc ; call qword ptr [rdi]
0x00000000004cfac6 : add byte ptr [rax], al ; js 0x4cfb3b ; stc ; jmp qword ptr [rcx]
0x00000000004d2846 : add byte ptr [rax], al ; js 0x4d2820 ; sti ; jmp qword ptr [rax]
0x0000000000460dde : add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x0000000000460dee : add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x0000000000460dfe : add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x0000000000460e0e : add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x0000000000460e1e : add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x0000000000460d3d : add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x0000000000460d5e : add byte ptr [rax], al ; lea rax, [rdi + 1] ; ret
0x0000000000460d6e : add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x0000000000460d7e : add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x0000000000460d8e : add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x0000000000460d9e : add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x0000000000460dae : add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x0000000000460cea : add byte ptr [rax], al ; lea rax, [rdi + 7] ; ret
0x0000000000460dbe : add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x0000000000460dce : add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x0000000000460d4e : add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x0000000000469eee : add byte ptr [rax], al ; lea rax, [rip + 0x271429] ; ret
0x00000000004047fe : add byte ptr [rax], al ; lea rax, [rip + 0xa5491] ; ret
0x000000000040408e : add byte ptr [rax], al ; lea rax, [rip + 0xa5b29] ; ret
0x000000000040409e : add byte ptr [rax], al ; lea rax, [rip + 0xa5b41] ; ret
0x0000000000487bea : add byte ptr [rax], al ; lea rsi, [rip + 0x24fc8d] ; jmp rax
0x0000000000401902 : add byte ptr [rax], al ; leave ; ret
0x00000000004c8e36 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; and al, 0x26 ; hlt ; call qword ptr [rdx]
0x00000000004c4fbe : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; fdivr st(3), st(0) ; jmp qword ptr [rsi]
0x00000000004cf2ce : add byte ptr [rax], al ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; mov word ptr [rcx - 7], cs ; jmp rbx
0x00000000004ad39e : add byte ptr [rax], al ; loopne 0x4ad3dc ; stc ; jmp qword ptr [rax]
0x00000000004c4d6a : add byte ptr [rax], al ; loopne 0x4c4d7e ; add byte ptr [rax], al ; rcr dl, 1 ; call qword ptr [rcx]
0x00000000004c676a : add byte ptr [rax], al ; loopne 0x4c6798 ; add byte ptr [rax], al ; cmp dh, 0xf3 ; call qword ptr [rbx]
0x00000000004c838e : add byte ptr [rax], al ; loopne 0x4c83b2 ; hlt ; call qword ptr [rdx]
0x00000000004c846a : add byte ptr [rax], al ; loopne 0x4c84b5 ; add byte ptr [rax], al ; adc byte ptr [rsp + rsi*8], bl ; jmp qword ptr [rdx]
0x00000000004d086a : add byte ptr [rax], al ; loopne 0x4d0839 ; add byte ptr [rax], al ; adc bh, cl ; stc ; call qword ptr [rax]
0x00000000004d27fe : add byte ptr [rax], al ; loopne 0x4d27d1 ; sti ; jmp rdx
0x00000000004c573e : add byte ptr [rax], al ; mov ah, 0x11 ; add byte ptr [rax], al ; mov ecx, gs ; call qword ptr [rbx]
0x00000000004ceeda : add byte ptr [rax], al ; mov ah, 0x5c ; clc ; jmp qword ptr [rsi]
0x00000000004d02ca : add byte ptr [rax], al ; mov ah, 0x9d ; stc ; jmp qword ptr [rdx]
0x00000000004c784a : add byte ptr [rax], al ; mov ah, 0xa ; hlt ; jmp qword ptr [rdx]
0x00000000004cfb3e : add byte ptr [rax], al ; mov ah, 0xb5 ; add byte ptr [rax], al ; jl 0x4cfbbc ; stc ; call rsi
0x00000000004c5dca : add byte ptr [rax], al ; mov ah, 0xf4 ; call qword ptr [rsi]
0x00000000004c64ca : add byte ptr [rax], al ; mov ah, 0xfb ; call qword ptr [rdx]
0x00000000004c6baa : add byte ptr [rax], al ; mov ah, 2 ; hlt ; call qword ptr [rdx]
0x00000000004c6e4a : add byte ptr [rax], al ; mov ah, 3 ; hlt ; call qword ptr [rdx]
0x00000000004c6586 : add byte ptr [rax], al ; mov ah, bh ; call qword ptr [rdx]
0x00000000004c8bfe : add byte ptr [rax], al ; mov al, 0x23 ; hlt ; jmp qword ptr [rdx]
0x00000000004cae5e : add byte ptr [rax], al ; mov al, 0xb ; cmc ; call qword ptr [rdx]
0x00000000004cb92e : add byte ptr [rax], al ; mov al, 0xe4 ; cmc ; jmp qword ptr [rax]
0x00000000004c617e : add byte ptr [rax], al ; mov al, 0xf7 ; call qword ptr [rdx]
0x000000000045fcbe : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x000000000045e50e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000004d4316 : add byte ptr [rax], al ; mov bl, cl ; cld ; jmp qword ptr [rdx]
0x00000000004cba12 : add byte ptr [rax], al ; mov byte ptr [rax + rax], dh ; sbb bh, ah ; cmc ; call qword ptr [rax]
0x000000000040ac1a : add byte ptr [rax], al ; mov byte ptr [rax], 0 ; ret
0x00000000004cb496 : add byte ptr [rax], al ; mov byte ptr [rbp - 0xb], dl ; call rax
0x00000000004cef12 : add byte ptr [rax], al ; mov byte ptr [rcx - 0x60080000], ch ; clc ; call qword ptr [rax]
0x00000000004cd4b6 : add byte ptr [rax], al ; mov byte ptr [rcx - 0xa], bh ; call qword ptr [rsi]
0x00000000004c6712 : add byte ptr [rax], al ; mov byte ptr [rcx], ah ; add byte ptr [rax], al ; sub dh, bh ; call qword ptr [rdi]
0x000000000040a33a : add byte ptr [rax], al ; mov byte ptr [rdi + 0x10], 0 ; mov qword ptr [rdi], rax ; ret
0x000000000042e98e : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000004607ae : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x000000000046018e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000004d0012 : add byte ptr [rax], al ; mov byte ptr [rdx - 0x7cb80000], bh ; stc ; call qword ptr [rcx]
0x00000000004c6b36 : add byte ptr [rax], al ; mov byte ptr [rdx], al ; hlt ; call qword ptr [rbx]
0x000000000040a3ff : add byte ptr [rax], al ; mov byte ptr [rsi + 0x10], 0 ; ret
0x00000000004d4312 : add byte ptr [rax], al ; mov ch, bh ; add byte ptr [rax], al ; mov bl, cl ; cld ; jmp qword ptr [rdx]
0x00000000004d1012 : add byte ptr [rax], al ; mov dl, cl ; add byte ptr [rax], al ; sbb byte ptr [rdx - 3], ch ; jmp qword ptr [rdi]
0x000000000048da9b : add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000407f9e : add byte ptr [rax], al ; mov dword ptr [rdi + 0x10], 0 ; ret
0x0000000000407f8e : add byte ptr [rax], al ; mov dword ptr [rdi + 0x10], 0xffffffff ; ret
0x000000000043524c : add byte ptr [rax], al ; mov dword ptr [rip + 0x2a55d8], eax ; ret
0x000000000046019e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000043f76e : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x000000000046673e : add byte ptr [rax], al ; mov eax, 0x1c ; syscall
0x00000000004a465e : add byte ptr [rax], al ; mov eax, 0x26 ; syscall
0x0000000000467f9e : add byte ptr [rax], al ; mov eax, 0x29 ; syscall
0x0000000000465a95 : add byte ptr [rax], al ; mov eax, 0x48 ; syscall
0x00000000004c5942 : add byte ptr [rax], al ; mov eax, 0x58000013 ; out dx, al ; call qword ptr [rcx]
0x000000000049161e : add byte ptr [rax], al ; mov eax, 0x66 ; syscall
0x000000000049163e : add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x000000000049162e : add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x000000000049164e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x00000000004d2842 : add byte ptr [rax], al ; mov eax, 0x780000e2 ; sar ebx, 1 ; jmp qword ptr [rax]
0x000000000046670e : add byte ptr [rax], al ; mov eax, 0xa ; syscall
0x00000000004666de : add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x00000000004d0242 : add byte ptr [rax], al ; mov eax, 0xb80000bc ; pushfq ; stc ; jmp qword ptr [rax]
0x0000000000468050 : add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x00000000004c8b42 : add byte ptr [rax], al ; mov eax, 0xd8000045 ; and dh, ah ; call qword ptr [rax]
0x0000000000428ece : add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x00000000004652d3 : add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x000000000040d856 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000004a05bb : add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000004659ae : add byte ptr [rax], al ; mov eax, 1 ; syscall
0x000000000041a5de : add byte ptr [rax], al ; mov eax, 2 ; ret
0x0000000000407f6e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; shr eax, 0x1f ; ret
0x000000000043436e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000041ba4e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x41ba69 ; ret
0x000000000041bc7e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x41bc99 ; ret
0x000000000040672c : add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000428e99 : add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000046837e : add byte ptr [rax], al ; mov eax, edi ; ror ax, 8 ; ret
0x000000000049a74f : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000484c32 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00000000004823d1 : add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000042e230 : add byte ptr [rax], al ; mov eax, r10d ; pop rbx ; ret
0x00000000004601ce : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000004c5742 : add byte ptr [rax], al ; mov ecx, gs ; call qword ptr [rbx]
0x000000000048238b : add byte ptr [rax], al ; mov edi, 0x100 ; call 0x43e649
0x00000000004a9b12 : add byte ptr [rax], al ; mov edi, 0xe2fff57b ; jnp 0x4a9b19 ; jmp rdx
0x0000000000419434 : add byte ptr [rax], al ; mov edi, 1 ; call r14
0x000000000041945c : add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000046502e : add byte ptr [rax], al ; mov edi, edx ; mov eax, esi ; syscall
0x000000000045106e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000045178e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000468106 : add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x00000000004c6c46 : add byte ptr [rax], al ; mov esp, 0x44000026 ; add esi, esp ; call qword ptr [rdx]
0x00000000004c6b46 : add byte ptr [rax], al ; mov esp, 0x94000025 ; add dh, ah ; call qword ptr [rdx]
0x00000000004d1346 : add byte ptr [rax], al ; mov esp, 0x940000cd ; cli ; call qword ptr [rcx]
0x00000000004c6e46 : add byte ptr [rax], al ; mov esp, 0xb4000028 ; add esi, esp ; call qword ptr [rdx]
0x00000000004c7846 : add byte ptr [rax], al ; mov esp, 0xb4000032 ; or dh, ah ; jmp qword ptr [rdx]
0x0000000000468b5e : add byte ptr [rax], al ; mov qword ptr [rax + 0x20], rsi ; ret
0x00000000004a0f88 : add byte ptr [rax], al ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000049dcd0 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000004a44c2 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x00000000004a4596 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x0000000000497714 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x308], rax ; ret
0x000000000041975e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x98], rsi ; ret
0x0000000000407550 : add byte ptr [rax], al ; mov qword ptr [rdi], rax ; mov qword ptr [rsi], rdx ; ret
0x0000000000407f4e : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000043520c : add byte ptr [rax], al ; mov qword ptr [rip + 0x2a55f3], rax ; ret
0x00000000004351ec : add byte ptr [rax], al ; mov qword ptr [rip + 0x2a560b], rax ; ret
0x000000000041cac0 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x00000000004a1be0 : add byte ptr [rax], al ; mov qword ptr [rsp], rcx ; call 0x43e648
0x00000000004338fe : add byte ptr [rax], al ; mov rax, -1 ; ret
0x000000000047795e : add byte ptr [rax], al ; mov rax, 0xf ; syscall
0x000000000049094e : add byte ptr [rax], al ; mov rax, 1 ; ret
0x000000000049095e : add byte ptr [rax], al ; mov rax, 2 ; ret
0x000000000049096e : add byte ptr [rax], al ; mov rax, 3 ; ret
0x000000000049097e : add byte ptr [rax], al ; mov rax, 4 ; ret
0x000000000049098e : add byte ptr [rax], al ; mov rax, 5 ; ret
0x000000000049099e : add byte ptr [rax], al ; mov rax, 6 ; ret
0x00000000004909ae : add byte ptr [rax], al ; mov rax, 7 ; ret
0x0000000000498ce3 : add byte ptr [rax], al ; mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000042d67e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000049db8e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x00000000004027ae : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 0x20] ; leave ; ret
0x0000000000402b5e : add byte ptr [rax], al ; mov rax, qword ptr [rbp - 8] ; leave ; ret
0x00000000004984fe : add byte ptr [rax], al ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000048df9e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000004346be : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x00000000004196de : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000041976e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa0] ; ret
0x00000000004197ce : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa8] ; ret
0x00000000004197be : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000041977e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb8] ; ret
0x000000000040ad3e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; add rax, qword ptr [rdi] ; ret
0x0000000000406cae : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; ret
0x000000000040af8e : add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; add rax, rsi ; ret
0x000000000040743e : add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax - 0x10] ; ret
0x000000000040740e : add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax - 0x18] ; ret
0x000000000040714e : add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; ret
0x000000000040716e : add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; sub rax, 0x18 ; ret
0x000000000047460e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x268c21] ; ret
0x000000000046c11e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2719d1] ; ret
0x000000000043469e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2a5a99] ; ret
0x000000000040681e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2d5c79] ; ret
0x00000000004174ae : add byte ptr [rax], al ; mov rax, qword ptr [rsi + 0xa8] ; ret
0x000000000048fb6e : add byte ptr [rax], al ; mov rax, r8 ; vzeroupper ; ret
0x0000000000410800 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004198d8 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000004306f2 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040528f : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x000000000040a69e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000407ace : add byte ptr [rax], al ; mov rax, rdx ; ret
0x0000000000439c9e : add byte ptr [rax], al ; mov rax, rsi ; ret
0x00000000004a0b48 : add byte ptr [rax], al ; mov rbp, rax ; call 0x41ce47
0x000000000049bb4a : add byte ptr [rax], al ; mov rbx, rsp ; mov rsi, rbx ; syscall
0x0000000000462f8f : add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000467419 : add byte ptr [rax], al ; mov rdi, qword ptr [r13] ; call r12
0x0000000000429cd1 : add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000041f6c1 : add byte ptr [rax], al ; mov rdi, qword ptr [rsp + 0x18] ; call 0x43c0f9
0x00000000004a946e : add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x00000000004a8bce : add byte ptr [rax], al ; mov rdi, r15 ; call rax
0x000000000048b38f : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000004515ce : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000043c2e6 : add byte ptr [rax], al ; mov rsi, qword ptr [rsp + 0x68] ; call rax
0x000000000041a14e : add byte ptr [rax], al ; mov rsi, r14 ; mov rdi, r12 ; call r15
0x00000000004a0c22 : add byte ptr [rax], al ; mov rsi, rax ; call 0x41ce47
0x000000000043f54e : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rax ; call rcx
0x00000000004cf2d2 : add byte ptr [rax], al ; mov word ptr [rcx - 7], cs ; jmp rbx
0x00000000004c6b16 : add byte ptr [rax], al ; mov word ptr [rip + 0x2840000], fs ; hlt ; call qword ptr [rdx]
0x00000000004c7b32 : add byte ptr [rax], al ; mov word ptr [rsi], cs ; hlt ; call qword ptr [rcx]
0x00000000004c6c16 : add byte ptr [rax], al ; mov word ptr [rsi], fs ; add byte ptr [rax], al ; xor al, 3 ; hlt ; call qword ptr [rdx]
0x00000000004c6b7a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add dh, ah ; call qword ptr [rdx]
0x00000000004d176a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; test al, 0xfa ; call qword ptr [rsi]
0x00000000004c7b2e : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, 0xe8c0000 ; hlt ; call qword ptr [rcx]
0x000000000049d00e : add byte ptr [rax], al ; movsx eax, dl ; sub eax, ecx ; ret
0x0000000000417565 : add byte ptr [rax], al ; movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x000000000048b544 : add byte ptr [rax], al ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x0000000000476f9d : add byte ptr [rax], al ; movsxd rdi, dword ptr [r11 + rsi*4] ; add rdi, r11 ; jmp rdi
0x0000000000476a9e : add byte ptr [rax], al ; movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x000000000042ec4e : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000046417e : add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x00000000004511fe : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004518de : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000045186e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000040a50c : add byte ptr [rax], al ; nop ; lea rax, [rdi + 0x10] ; ret
0x00000000004057cd : add byte ptr [rax], al ; nop ; lea rax, [rdi + 8] ; ret
0x0000000000401834 : add byte ptr [rax], al ; nop ; leave ; ret
0x00000000004a13cc : add byte ptr [rax], al ; nop ; mov eax, 0x27 ; syscall
0x0000000000467e0c : add byte ptr [rax], al ; nop ; mov eax, 0x63 ; syscall
0x0000000000490ebc : add byte ptr [rax], al ; nop ; mov eax, 0xc9 ; syscall
0x000000000040a52d : add byte ptr [rax], al ; nop ; mov qword ptr [rdi + 0x10], rsi ; ret
0x000000000040a4ec : add byte ptr [rax], al ; nop ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000040cc8c : add byte ptr [rax], al ; nop ; mov qword ptr [rdi], rsi ; ret
0x0000000000406cbd : add byte ptr [rax], al ; nop ; mov rax, qword ptr [rdi + 8] ; ret
0x000000000040738d : add byte ptr [rax], al ; nop ; mov rax, qword ptr [rdi] ; ret
0x000000000040759c : add byte ptr [rax], al ; nop ; mov rax, rdi ; ret
0x00000000004c4f1a : add byte ptr [rax], al ; nop ; or dword ptr [rax], eax ; add byte ptr [rsi - 0x24], al ; jmp qword ptr [rsi]
0x00000000004048cd : add byte ptr [rax], al ; nop ; ret
0x00000000004d42fe : add byte ptr [rax], al ; nop ; retf
0x00000000004cf2be : add byte ptr [rax], al ; nop ; stc ; call qword ptr [rax]
0x00000000004cf30e : add byte ptr [rax], al ; nop ; stc ; call qword ptr [rbx]
0x00000000004048ed : add byte ptr [rax], al ; nop ; sub rsp, 8 ; call rdi
0x00000000004047b9 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x000000000040749a : add byte ptr [rax], al ; nop dword ptr [rax] ; mov rax, qword ptr [rdi] ; ret
0x000000000040d43a : add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000004c6e96 : add byte ptr [rax], al ; or al, 0x29 ; add byte ptr [rax], al ; in al, 3 ; hlt ; jmp qword ptr [rbx]
0x00000000004c8796 : add byte ptr [rax], al ; or al, 0x42 ; add byte ptr [rax], al ; and al, 0x1f ; hlt ; jmp qword ptr [rsi]
0x00000000004cd396 : add byte ptr [rax], al ; or al, 0x8e ; add byte ptr [rax], al ; hlt ; jae 0x4cd39e ; call qword ptr [rdi]
0x00000000004c7ab2 : add byte ptr [rax], al ; or al, 0xe ; hlt ; jmp qword ptr [rax]
0x00000000004cba02 : add byte ptr [rax], al ; or al, 0xe7 ; cmc ; call qword ptr [rdx]
0x00000000004d4256 : add byte ptr [rax], al ; or al, cl ; cld ; jmp qword ptr [rdx]
0x00000000004d150a : add byte ptr [rax], al ; or bh, 0 ; add byte ptr [rax], dl ; insd dword ptr [rdi], dx ; std ; call rdx
0x00000000004cfd92 : add byte ptr [rax], al ; or byte ptr [rax + 0x7fc80000], bh ; stc ; call qword ptr [rcx]
0x00000000004cfa92 : add byte ptr [rax], al ; or byte ptr [rbp + 0x6c480000], dh ; stc ; jmp qword ptr [rcx]
0x0000000000407c34 : add byte ptr [rax], al ; or byte ptr [rdi], 0x4d ; ret
0x00000000004c6b92 : add byte ptr [rax], al ; or byte ptr [rsi], ah ; add byte ptr [rax], al ; test al, 2 ; hlt ; call qword ptr [rbx]
0x00000000004c7066 : add byte ptr [rax], al ; or byte ptr [rsp + rsi*8], al ; jmp qword ptr [rdx]
0x00000000004c59ca : add byte ptr [rax], al ; out dx, al ; call qword ptr [rdi]
0x00000000004cbad6 : add byte ptr [rax], al ; out dx, al ; cmc ; jmp qword ptr [rax]
0x00000000004cb3f6 : add byte ptr [rax], al ; pop rax ; cmc ; call qword ptr [rdx]
0x00000000004d29e2 : add byte ptr [rax], al ; pop rax ; in al, 0 ; add byte ptr [rax - 0x26], bl ; sti ; jmp qword ptr [rax]
0x00000000004c5946 : add byte ptr [rax], al ; pop rax ; out dx, al ; call qword ptr [rcx]
0x00000000004d12a6 : add byte ptr [rax], al ; pop rax ; pop rdi ; cli ; call qword ptr [rdx]
0x00000000004d0fe2 : add byte ptr [rax], al ; pop rax ; retf 0
0x00000000004c8f56 : add byte ptr [rax], al ; pop rax ; sub esp, esi ; call qword ptr [rcx]
0x00000000004667ce : add byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x0000000000415e0f : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000400b16 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000048237b : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000047476a : add byte ptr [rax], al ; pop rbx ; pop r12 ; ret
0x0000000000419227 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004331d5 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004014ab : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000403f6e : add byte ptr [rax], al ; pop rbx ; ret
0x00000000004ca4d6 : add byte ptr [rax], al ; pop rdi ; add byte ptr [rax], al ; push rsp ; ret
0x00000000004c6be6 : add byte ptr [rax], al ; pop rsp ; add byte ptr es:[rax], al ; and al, 3 ; hlt ; call qword ptr [rdx]
0x00000000004c6ae6 : add byte ptr [rax], al ; pop rsp ; and eax, 0x2740000 ; hlt ; call qword ptr [rdx]
0x00000000004c5972 : add byte ptr [rax], al ; pop rsp ; out dx, al ; call qword ptr [rbx]
0x00000000004cf8f2 : add byte ptr [rax], al ; push -0x67ffff4d ; movsxd rdi, ecx ; call qword ptr [rbx]
0x00000000004cb3f2 : add byte ptr [rax], al ; push 0x5800006e ; cmc ; call qword ptr [rdx]
0x00000000004d104a : add byte ptr [rax], al ; push rax ; add byte ptr [rax], al ; add ah, al ; retf 0
0x00000000004cecda : add byte ptr [rax], al ; push rax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; push rax ; test bh, dh ; jmp qword ptr [rbx]
0x00000000004cffda : add byte ptr [rax], al ; push rax ; mov edx, 0x82f00000 ; stc ; call qword ptr [rdx]
0x00000000004c4eda : add byte ptr [rax], al ; push rax ; or dword ptr [rax], eax ; add byte ptr [rdi], dh ; fdivr st(3), st(0) ; jmp qword ptr [rsi]
0x00000000004c592e : add byte ptr [rax], al ; push rax ; out dx, al ; call qword ptr [rsi]
0x00000000004ca00e : add byte ptr [rax], al ; push rax ; push rcx ; hlt ; jmp qword ptr [rbx]
0x00000000004d07da : add byte ptr [rax], al ; push rax ; ret 0
0x00000000004d264e : add byte ptr [rax], al ; push rax ; ret 0xfffb
0x00000000004c62da : add byte ptr [rax], al ; push rax ; sbb eax, 0xf9500000 ; call qword ptr [rdx]
0x00000000004c62de : add byte ptr [rax], al ; push rax ; stc ; call qword ptr [rdx]
0x00000000004d03ae : add byte ptr [rax], al ; push rax ; stosb byte ptr [rdi], al ; stc ; call qword ptr [rax]
0x00000000004cecde : add byte ptr [rax], al ; push rax ; test bh, dh ; jmp qword ptr [rbx]
0x00000000004c68ee : add byte ptr [rax], al ; push rbx ; call qword ptr [rbx]
0x00000000004c68a6 : add byte ptr [rax], al ; push rbx ; call qword ptr [rdi]
0x00000000004c6c7a : add byte ptr [rax], al ; push rsp ; add esi, esp ; call qword ptr [rdx]
0x00000000004ca4da : add byte ptr [rax], al ; push rsp ; ret
0x00000000004c662a : add byte ptr [rax], al ; push rsp ; std ; call qword ptr [rdx]
0x00000000004c78de : add byte ptr [rax], al ; push rsp ; xor eax, dword ptr [rax] ; add ah, ch ; or al, 0xf4 ; jmp qword ptr [rdx]
0x00000000004c5a26 : add byte ptr [rax], al ; pushfq ; adc al, 0 ; add byte ptr [rsi + rbp*8 - 0xd], ah ; call qword ptr [rdi]
0x00000000004c6626 : add byte ptr [rax], al ; pushfq ; and byte ptr [rax], al ; add byte ptr [rbp + rdi*8 - 0xd], dl ; call qword ptr [rdx]
0x00000000004c5432 : add byte ptr [rax], al ; pushfq ; fdivrp st(3) ; call qword ptr [rcx]
0x00000000004cba26 : add byte ptr [rax], al ; pushfq ; je 0x4cba34 ; add byte ptr [rdi], dl ; cmc ; call qword ptr [rdx]
0x00000000004c6952 : add byte ptr [rax], al ; pushfq ; push rbx ; jmp qword ptr [rbx]
0x00000000004d42d2 : add byte ptr [rax], al ; pushfq ; ret 0xfff2
0x00000000004c9b4a : add byte ptr [rax], al ; rcl byte ptr [rbp], 0 ; and byte ptr [rax], bh ; hlt ; call qword ptr [rdi]
0x00000000004c4d6e : add byte ptr [rax], al ; rcr dl, 1 ; call qword ptr [rcx]
0x0000000000400ade : add byte ptr [rax], al ; ret
0x00000000004b17c6 : add byte ptr [rax], al ; ret 0
0x00000000004b873e : add byte ptr [rax], al ; ret 0x10
0x00000000004ba40e : add byte ptr [rax], al ; ret 0x1d4
0x00000000004baba6 : add byte ptr [rax], al ; ret 0x1d5
0x00000000004b9416 : add byte ptr [rax], al ; ret 0x24
0x00000000004b9906 : add byte ptr [rax], al ; ret 0x33
0x00000000004b7f3e : add byte ptr [rax], al ; ret 0xa
0x00000000004b833e : add byte ptr [rax], al ; ret 0xd
0x00000000004c46ca : add byte ptr [rax], al ; ret 0xf3c7
0x00000000004c4d2e : add byte ptr [rax], al ; ret 0xf3da
0x00000000004d418e : add byte ptr [rax], al ; ret 0xfffc
0x00000000004bb7e2 : add byte ptr [rax], al ; ret 1
0x00000000004bb9e2 : add byte ptr [rax], al ; ret 2
0x00000000004bbbe2 : add byte ptr [rax], al ; ret 3
0x00000000004bbde2 : add byte ptr [rax], al ; ret 4
0x00000000004bbfe2 : add byte ptr [rax], al ; ret 5
0x00000000004b7ae6 : add byte ptr [rax], al ; ret 6
0x00000000004bc3e2 : add byte ptr [rax], al ; ret 7
0x00000000004bc5e2 : add byte ptr [rax], al ; ret 8
0x00000000004bc7e2 : add byte ptr [rax], al ; ret 9
0x00000000004b17ea : add byte ptr [rax], al ; retf
0x00000000004b17e6 : add byte ptr [rax], al ; retf 0
0x00000000004b889e : add byte ptr [rax], al ; retf 0x11
0x00000000004ba446 : add byte ptr [rax], al ; retf 0x1d4
0x00000000004babe6 : add byte ptr [rax], al ; retf 0x1d5
0x00000000004b9456 : add byte ptr [rax], al ; retf 0x24
0x00000000004b9946 : add byte ptr [rax], al ; retf 0x33
0x00000000004b809e : add byte ptr [rax], al ; retf 0xb
0x00000000004b849e : add byte ptr [rax], al ; retf 0xe
0x00000000004b8abe : add byte ptr [rax], al ; retf 1
0x00000000004bb9f2 : add byte ptr [rax], al ; retf 2
0x00000000004bbbf2 : add byte ptr [rax], al ; retf 3
0x00000000004b7946 : add byte ptr [rax], al ; retf 4
0x00000000004bbff2 : add byte ptr [rax], al ; retf 5
0x00000000004bc1f2 : add byte ptr [rax], al ; retf 6
0x00000000004bc3f2 : add byte ptr [rax], al ; retf 7
0x00000000004bc5f2 : add byte ptr [rax], al ; retf 8
0x00000000004bc7f2 : add byte ptr [rax], al ; retf 9
0x00000000004bbdde : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00000000004c48ba : add byte ptr [rax], al ; rol byte ptr [rdx], 0 ; add byte ptr [rdx], ah ; sal bl, cl ; call qword ptr [rsi]
0x00000000004d0b4a : add byte ptr [rax], al ; rol ch, 0 ; add al, dl ; out dx, eax ; stc ; call qword ptr [rdi]
0x00000000004b81e6 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x00000000004cf35e : add byte ptr [rax], al ; ror byte ptr [rbx - 7], 1 ; call qword ptr [rbx]
0x00000000004c45be : add byte ptr [rax], al ; sal r11b, cl ; call qword ptr [rdx]
0x00000000004ceeee : add byte ptr [rax], al ; sar byte ptr [rsi - 8], 1 ; call qword ptr [rax]
0x00000000004c6ba6 : add byte ptr [rax], al ; sbb al, 0x26 ; add byte ptr [rax], al ; mov ah, 2 ; hlt ; call qword ptr [rdx]
0x00000000004ca4a6 : add byte ptr [rax], al ; sbb al, 0x5f ; add byte ptr [rax], al ; xchg eax, esp ; ret 0xfff4
0x00000000004c5062 : add byte ptr [rax], al ; sbb al, 0xdd ; jmp qword ptr [rdx]
0x00000000004c6382 : add byte ptr [rax], al ; sbb al, 0xfa ; call qword ptr [rdx]
0x00000000004c6702 : add byte ptr [rax], al ; sbb al, 0xfe ; call qword ptr [rbx]
0x00000000004cba16 : add byte ptr [rax], al ; sbb bh, ah ; cmc ; call qword ptr [rax]
0x00000000004cde0a : add byte ptr [rax], al ; sbb byte ptr [rax - 0x3aa00000], 0xf6 ; jmp rsi
0x00000000004d0ff2 : add byte ptr [rax], al ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf 0
0x00000000004c68a2 : add byte ptr [rax], al ; sbb byte ptr [rbx], ah ; add byte ptr [rax], al ; push rbx ; call qword ptr [rdi]
0x00000000004cfea2 : add byte ptr [rax], al ; sbb byte ptr [rcx - 0x7f080000], bh ; stc ; jmp qword ptr [rcx]
0x00000000004c9ea6 : add byte ptr [rax], al ; sbb byte ptr [rcx - 0xc], al ; call qword ptr [rax]
0x00000000004c9ea2 : add byte ptr [rax], al ; sbb byte ptr [rcx], bl ; add byte ptr [rax], bl ; hlt ; call qword ptr [rax]
0x00000000004d1016 : add byte ptr [rax], al ; sbb byte ptr [rdx - 3], ch ; jmp qword ptr [rdi]
0x00000000004ca00a : add byte ptr [rax], al ; sbb byte ptr [rdx], 0 ; push rax ; push rcx ; hlt ; jmp qword ptr [rbx]
0x00000000004d12a2 : add byte ptr [rax], al ; sbb ch, cl ; add byte ptr [rax], al ; pop rax ; pop rdi ; cli ; call qword ptr [rdx]
0x00000000004d264a : add byte ptr [rax], al ; shl al, 0 ; add byte ptr [rax - 0x3e], dl ; sti ; jmp qword ptr [rbx]
0x00000000004d285a : add byte ptr [rax], al ; shl dl, 1 ; add byte ptr [rax], al ; adc ah, 0xfb ; jmp qword ptr [rbx]
0x00000000004d0b4e : add byte ptr [rax], al ; shr bh, 1 ; stc ; call qword ptr [rdi]
0x00000000004cf35a : add byte ptr [rax], al ; shr byte ptr [rbp + 0x4bd00000], 1 ; stc ; call qword ptr [rbx]
0x000000000043ad1c : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000040dd48 : add byte ptr [rax], al ; shr rax, cl ; and eax, 1 ; ret
0x00000000004d42ce : add byte ptr [rax], al ; std ; add byte ptr [rax], al ; pushfq ; ret 0xfff2
0x00000000004d0ab6 : add byte ptr [rax], al ; sub al, 0xc5 ; add byte ptr [rax], al ; test dh, ah ; stc ; call rcx
0x00000000004c490e : add byte ptr [rax], al ; sub al, 0xd3 ; jmp qword ptr [rsi]
0x00000000004d08f2 : add byte ptr [rax], al ; sub al, 0xd3 ; stc ; jmp qword ptr [rdx]
0x00000000004cf30a : add byte ptr [rax], al ; sub byte ptr [rbp + 0x4a900000], 0xf9 ; call qword ptr [rbx]
0x00000000004c6c06 : add byte ptr [rax], al ; sub byte ptr [rbx], al ; hlt ; call qword ptr [rbx]
0x00000000004c60b2 : add byte ptr [rax], al ; sub byte ptr [rbx], bl ; add byte ptr [rax], al ; fdiv st(6) ; jmp qword ptr [rdx]
0x00000000004c572e : add byte ptr [rax], al ; sub cl, 0xf3 ; call qword ptr [rbx]
0x00000000004c6716 : add byte ptr [rax], al ; sub dh, bh ; call qword ptr [rdi]
0x0000000000416800 : add byte ptr [rax], al ; sub dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x0000000000448fbc : add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000433a46 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x0000000000462ad1 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000040494e : add byte ptr [rax], al ; sub rsp, 8 ; call rdi
0x00000000004182c6 : add byte ptr [rax], al ; syscall
0x00000000004c6b32 : add byte ptr [rax], al ; test al, 0x25 ; add byte ptr [rax], al ; mov byte ptr [rdx], al ; hlt ; call qword ptr [rbx]
0x00000000004c6c32 : add byte ptr [rax], al ; test al, 0x26 ; add byte ptr [rax], al ; cmp byte ptr [rbx], al ; hlt ; call qword ptr [rbx]
0x00000000004c6e32 : add byte ptr [rax], al ; test al, 0x28 ; add byte ptr [rax], al ; cwde ; add esi, esp ; jmp qword ptr [rdi]
0x00000000004cec32 : add byte ptr [rax], al ; test al, 0xa6 ; add byte ptr [rax], al ; call 0x244ce361
0x00000000004d1632 : add byte ptr [rax], al ; test al, 0xd0 ; add byte ptr [rax], al ; call 0x144d10c5
0x00000000004c6b96 : add byte ptr [rax], al ; test al, 2 ; hlt ; call qword ptr [rbx]
0x00000000004c7706 : add byte ptr [rax], al ; test al, 8 ; hlt ; jmp qword ptr [rax]
0x00000000004c623a : add byte ptr [rax], al ; test al, bh ; call qword ptr [rdx]
0x00000000004c7d0e : add byte ptr [rax], al ; test byte ptr [rdi], dh ; add byte ptr [rax], al ; adc rsp, r14 ; jmp qword ptr [rdi]
0x00000000004c880e : add byte ptr [rax], al ; test byte ptr [rdx], al ; add byte ptr [rdi + rbx - 0xc], bh ; jmp qword ptr [rbx]
0x00000000004c6b1a : add byte ptr [rax], al ; test byte ptr [rdx], al ; hlt ; call qword ptr [rdx]
0x00000000004c8c0e : add byte ptr [rax], al ; test byte ptr [rsi], al ; add ah, cl ; and esi, esp ; jmp qword ptr [rdx]
0x00000000004d0aba : add byte ptr [rax], al ; test dh, ah ; stc ; call rcx
0x0000000000467d69 : add byte ptr [rax], al ; test eax, eax ; cmove eax, edx ; ret
0x00000000004ceed6 : add byte ptr [rax], al ; test rax, 0x5cb40000 ; clc ; jmp qword ptr [rsi]
0x0000000000400409 : add byte ptr [rax], al ; test rax, rax ; je 0x400419 ; call rax
0x0000000000404633 : add byte ptr [rax], al ; test rax, rax ; je 0x404645 ; call rax
0x00000000004478be : add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x00000000004c6b4a : add byte ptr [rax], al ; xchg eax, esp ; add dh, ah ; call qword ptr [rdx]
0x00000000004d134a : add byte ptr [rax], al ; xchg eax, esp ; cli ; call qword ptr [rcx]
0x00000000004ca4aa : add byte ptr [rax], al ; xchg eax, esp ; ret 0xfff4
0x00000000004cf20a : add byte ptr [rax], al ; xchg eax, esp ; stc ; call rsp
0x00000000004c51a2 : add byte ptr [rax], al ; xor al, 0xdd ; jmp qword ptr [rbx]
0x00000000004c6c1a : add byte ptr [rax], al ; xor al, 3 ; hlt ; call qword ptr [rdx]
0x00000000004c45ba : add byte ptr [rax], al ; xor byte ptr [rax], al ; add byte ptr [rax], al ; sal r11b, cl ; call qword ptr [rdx]
0x00000000004cf2ba : add byte ptr [rax], al ; xor byte ptr [rbp + 0x49900000], ch ; stc ; call qword ptr [rax]
0x00000000004af39e : add byte ptr [rax], al ; xor byte ptr [rdx - 0x60ab0005], ah ; sti ; call qword ptr [rax]
0x00000000004c4fba : add byte ptr [rax], al ; xor byte ptr [rdx], cl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; fdivr st(3), st(0) ; jmp qword ptr [rsi]
0x00000000004c6efe : add byte ptr [rax], al ; xor byte ptr [rsp + rsi*8], al ; jmp qword ptr [rax]
0x00000000004c492e : add byte ptr [rax], al ; xor dl, bl ; jmp qword ptr [rax]
0x00000000004795f7 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000491dd6 : add byte ptr [rax], al ; xor eax, eax ; leave ; ret
0x000000000040de1e : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004198e5 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000041079e : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000040dbb6 : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004658de : add byte ptr [rax], al ; xor eax, eax ; syscall
0x000000000044780a : add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x000000000040ddc8 : add byte ptr [rax], al ; xor edi, edi ; mov rax, rdi ; ret
0x00000000004663ba : add byte ptr [rax], al ; xor edi, edi ; syscall
0x000000000040d8be : add byte ptr [rax], al ; xor edx, edx ; mov rax, rdx ; ret
0x0000000000474536 : add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x0000000000460b8e : add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004c6c37 : add byte ptr [rax], bh ; add esi, esp ; call qword ptr [rbx]
0x00000000004cfac3 : add byte ptr [rax], bh ; mov ch, 0 ; add byte ptr [rax + 0x6c], bh ; stc ; jmp qword ptr [rcx]
0x00000000004cffc3 : add byte ptr [rax], bh ; mov edx, 0x82f80000 ; stc ; call qword ptr [rax]
0x00000000004cf727 : add byte ptr [rax], bh ; pop rsi ; stc ; jmp qword ptr [rcx]
0x000000000049cf4e : add byte ptr [rax], bh ; retf 0x850f
0x00000000004ceec3 : add byte ptr [rax], bh ; test eax, 0x5cb80000 ; clc ; call qword ptr [rax]
0x00000000004c78c3 : add byte ptr [rax], bh ; xor eax, dword ptr [rax] ; add al, bl ; or al, 0xf4 ; jmp qword ptr [rdx]
0x00000000004c68a3 : add byte ptr [rax], bl ; and eax, dword ptr [rax] ; add byte ptr [rax - 1], cl ; call qword ptr [rdi]
0x00000000004c9ea7 : add byte ptr [rax], bl ; hlt ; call qword ptr [rax]
0x00000000004cfea3 : add byte ptr [rax], bl ; mov ecx, 0x80f80000 ; stc ; jmp qword ptr [rcx]
0x00000000004cba17 : add byte ptr [rax], bl ; out 0xf5, eax ; call qword ptr [rax]
0x00000000004c9ea3 : add byte ptr [rax], bl ; pop rcx ; add byte ptr [rax], al ; sbb byte ptr [rcx - 0xc], al ; call qword ptr [rax]
0x00000000004d1017 : add byte ptr [rax], bl ; push -3 ; jmp qword ptr [rdi]
0x00000000004d10a3 : add byte ptr [rax], bl ; retf
0x00000000004c6c07 : add byte ptr [rax], ch ; add esi, esp ; call qword ptr [rbx]
0x00000000004d3fe7 : add byte ptr [rax], ch ; mov al, 0xfc ; jmp qword ptr [rcx]
0x00000000004c60b3 : add byte ptr [rax], ch ; sbb eax, dword ptr [rax] ; add al, bl ; div bl ; jmp qword ptr [rdx]
0x00000000004c7067 : add byte ptr [rax], cl ; add al, 0xf4 ; jmp qword ptr [rdx]
0x00000000004d111f : add byte ptr [rax], cl ; add byte ptr [rax], al ; cwde ; retf
0x00000000004c6b93 : add byte ptr [rax], cl ; add byte ptr es:[rax], al ; test al, 2 ; hlt ; call qword ptr [rbx]
0x0000000000417eae : add byte ptr [rax], cl ; mov byte ptr [rip + 0x2c4649], 8 ; ret
0x00000000004cfa93 : add byte ptr [rax], cl ; mov ch, 0 ; add byte ptr [rax + 0x6c], cl ; stc ; jmp qword ptr [rcx]
0x00000000004cfd93 : add byte ptr [rax], cl ; mov eax, 0x7fc80000 ; stc ; call qword ptr [rcx]
0x00000000004cb493 : add byte ptr [rax], cl ; outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; mov byte ptr [rbp - 0xb], dl ; call rax
0x0000000000417eb5 : add byte ptr [rax], cl ; ret
0x00000000004c6eff : add byte ptr [rax], dh ; add al, 0xf4 ; jmp qword ptr [rax]
0x00000000004c45bb : add byte ptr [rax], dh ; add byte ptr [rax], al ; add byte ptr [rbx - 0x2e], cl ; call qword ptr [rdx]
0x00000000004d08eb : add byte ptr [rax], dh ; add byte ptr [rax], al ; ret
0x00000000004adc14 : add byte ptr [rax], dh ; cli ; push qword ptr [rax + 0x2f] ; cli ; jmp rax
0x00000000004cf2bb : add byte ptr [rax], dh ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; nop ; stc ; call qword ptr [rax]
0x00000000004d10bb : add byte ptr [rax], dh ; retf
0x00000000004d0867 : add byte ptr [rax], dl ; add byte ptr [rax], al ; add al, ah ; ret 0
0x00000000004c6a7f : add byte ptr [rax], dl ; add dh, ah ; call qword ptr [rdi]
0x00000000004d150f : add byte ptr [rax], dl ; insd dword ptr [rdi], dx ; std ; call rdx
0x00000000004d086f : add byte ptr [rax], dl ; iretd ; stc ; call qword ptr [rax]
0x00000000004cb9ef : add byte ptr [rax], dl ; out 0xf5, eax ; call qword ptr [rax]
0x00000000004c846f : add byte ptr [rax], dl ; sbb al, 0xf4 ; jmp qword ptr [rdx]
0x000000000046730d : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004c8bfd : add byte ptr [rax], r8b ; mov al, 0x23 ; hlt ; jmp qword ptr [rdx]
0x000000000043f76d : add byte ptr [rax], r8b ; mov eax, 0x16 ; ret
0x000000000046673d : add byte ptr [rax], r8b ; mov eax, 0x1c ; syscall
0x0000000000467f9d : add byte ptr [rax], r8b ; mov eax, 0x29 ; syscall
0x000000000049161d : add byte ptr [rax], r8b ; mov eax, 0x66 ; syscall
0x000000000046670d : add byte ptr [rax], r8b ; mov eax, 0xa ; syscall
0x000000000040d855 : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x000000000043436d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000046837d : add byte ptr [rax], r8b ; mov eax, edi ; ror ax, 8 ; ret
0x00000000004601bd : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000407f4d : add byte ptr [rax], r8b ; mov qword ptr [rdi], rsi ; ret
0x000000000040adcd : add byte ptr [rax], r8b ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000004073cd : add byte ptr [rax], r8b ; mov rax, qword ptr [rdi] ; ret
0x00000000004601fd : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000043c2e5 : add byte ptr [rax], r8b ; mov rsi, qword ptr [rsp + 0x68] ; call rax
0x0000000000400b15 : add byte ptr [rax], r8b ; pop rbp ; ret
0x00000000004a0cdd : add byte ptr [rax], r8b ; pop rbx ; ret
0x0000000000400add : add byte ptr [rax], r8b ; ret
0x000000000040494d : add byte ptr [rax], r8b ; sub rsp, 8 ; call rdi
0x000000000040de1d : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041079d : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; ret
0x000000000040de4d : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x000000000040d9cd : add byte ptr [rax], r8b ; xor edx, edx ; mov rax, rdx ; ret
0x00000000004655c6 : add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; ret
0x00000000004a10ef : add byte ptr [rbp + 0x12], dh ; add rsp, 0x38 ; ret
0x000000000041a5d3 : add byte ptr [rbp + 0x1a], dh ; ret
0x00000000004919ad : add byte ptr [rbp + 0x1b], dh ; add rsp, 0x38 ; ret
0x0000000000409551 : add byte ptr [rbp + 0x1c], dh ; lea rax, [rdi + 0x18] ; ret
0x0000000000409b0f : add byte ptr [rbp + 0x21], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000046480e : add byte ptr [rbp + 0x23], dh ; add rsp, 0x20 ; pop rbx ; ret
0x000000000049df14 : add byte ptr [rbp + 0x27], dh ; add rsp, 0x68 ; ret
0x00000000004c6b17 : add byte ptr [rbp + 0x2840000], cl ; hlt ; call qword ptr [rdx]
0x00000000004c6b47 : add byte ptr [rbp + 0x2940000], bh ; hlt ; call qword ptr [rdx]
0x000000000049de54 : add byte ptr [rbp + 0x2c], dh ; add rsp, 0x38 ; ret
0x000000000042f0ca : add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x0000000000474537 : add byte ptr [rbp + 0x31], al ; leave ; call r15
0x000000000049e075 : add byte ptr [rbp + 0x36], dh ; add rsp, 0x78 ; ret
0x000000000040a221 : add byte ptr [rbp + 0x37], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004a0380 : add byte ptr [rbp + 0x3b], dh ; leave ; ret
0x0000000000406d1c : add byte ptr [rbp + 0x3c], dh ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000410434 : add byte ptr [rbp + 0x3c], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040521a : add byte ptr [rbp + 0x3e], dh ; add rsp, 0x18 ; ret
0x0000000000405561 : add byte ptr [rbp + 0x3f], dh ; add rsp, 0x18 ; ret
0x00000000004667cf : add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x0000000000415e10 : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000004657f6 : add byte ptr [rbp + 0x42], dh ; add rsp, 0x58 ; ret
0x0000000000415360 : add byte ptr [rbp + 0x44], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000049187b : add byte ptr [rbp + 0x45], dh ; add rsp, 0x58 ; ret
0x0000000000432427 : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000465b86 : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x68 ; ret
0x0000000000408f84 : add byte ptr [rbp + 0x54], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000042e707 : add byte ptr [rbp + 0x63], cl ; retf 0xc148
0x0000000000408287 : add byte ptr [rbp + 0x69], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000049efaf : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x000000000049ee9f : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000466535 : add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; ret
0x00000000004a444a : add byte ptr [rbp + 0xf], dh ; add rsp, 0x38 ; ret
0x00000000004a38ba : add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x00000000004054fb : add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x00000000004a100c : add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x00000000004065cc : add byte ptr [rbp + 6], dh ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000405323 : add byte ptr [rbp + 7], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000408e66 : add byte ptr [rbp + 7], dh ; lea rax, [rdi + 0x18] ; ret
0x0000000000407fb6 : add byte ptr [rbp + 7], dh ; ret
0x0000000000419708 : add byte ptr [rbp + rax + 0x48], dh ; mov dword ptr [rdi + rsi*8], edx ; ret
0x00000000004024c3 : add byte ptr [rbp + rax - 0x18], dh ; add eax, 0xc900065e ; ret
0x0000000000401780 : add byte ptr [rbp + rax - 0x18], dh ; imul rax, qword ptr [rsi], 0 ; leave ; ret
0x0000000000401665 : add byte ptr [rbp + rax - 0x18], dh ; movsxd rbp, dword ptr [rsi + rax] ; leave ; ret
0x0000000000401d65 : add byte ptr [rbp + rax - 0x18], dh ; movsxd rsp, dword ptr [rbp + 6] ; add cl, cl ; ret
0x0000000000401878 : add byte ptr [rbp + rax - 0x18], dh ; push rax ; push 6 ; add cl, cl ; ret
0x0000000000401f43 : add byte ptr [rbp + rax - 0x18], dh ; test dword ptr [rbx + 6], esp ; add cl, cl ; ret
0x00000000004c8b2f : add byte ptr [rbp + rax*2 + 0x22cc0000], ah ; hlt ; call qword ptr [rsi]
0x00000000004cfb43 : add byte ptr [rbp + rbp*2 - 7], bh ; call rsi
0x0000000000419620 : add byte ptr [rbp + rbx + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004b8337 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x000000000041856e : add byte ptr [rbp + rcx*4 + 0x25], cl ; ret 0x92e
0x000000000043b00b : add byte ptr [rbp + rcx*4 + 0x46], cl ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000048e10e : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x000000000048e208 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x000000000048e302 : add byte ptr [rbp + rcx*4 + 0x4d], cl ; ror byte ptr [rcx + rcx*4 - 1], 0x41 ; call rsp
0x00000000004a182e : add byte ptr [rbp + rcx*4 + 4], cl ; retf 0x8b41
0x00000000004a3d2c : add byte ptr [rbp + rcx*4 + 4], cl ; retf 0xba
0x00000000004d1347 : add byte ptr [rbp + rcx*8 + 0x64940000], bh ; cli ; call qword ptr [rcx]
0x00000000004ca59b : add byte ptr [rbp + rcx*8 - 0xc], dl ; jmp qword ptr [rsi]
0x00000000004c662b : add byte ptr [rbp + rdi*8 - 0xd], dl ; call qword ptr [rdx]
0x00000000004c7b2f : add byte ptr [rbp + rsi + 0xe8c0000], ah ; hlt ; call qword ptr [rcx]
0x00000000004cfb3f : add byte ptr [rbp + rsi*4 + 0x6d7c0000], dh ; stc ; call rsi
0x00000000004a7524 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x0000000000467d6a : add byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000004b85e3 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x0000000000464e67 : add byte ptr [rbp - 0x57c03b0], cl ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x00000000004a2bb4 : add byte ptr [rbp - 0x75], al ; or byte ptr [rbx + 0x394401c2], al ; retf 0x830f
0x000000000049eb2f : add byte ptr [rbp - 0x75], cl ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x48f8
0x00000000004850f9 : add byte ptr [rbp - 0x75], cl ; je 0x48512a ; and byte ptr [rax + 1], cl ; ret
0x000000000044328d : add byte ptr [rbp - 0x77], cl ; retf
0x0000000000409dc9 : add byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbx + rcx*4 + 0x4c], 0x89 ; ret 0x61e8
0x000000000046a025 : add byte ptr [rbp - 0xcf98b40], al ; ret
0x000000000041b9f7 : add byte ptr [rbp - 0xcfb8b40], al ; ret
0x00000000004ae0a4 : add byte ptr [rbp - 6], ah ; call qword ptr [rax + 0x20fffa64]
0x00000000004c6ae7 : add byte ptr [rbp], bl ; add byte ptr [rdx + rax - 0xc], dh ; call qword ptr [rdx]
0x0000000000459189 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x00000000004a88b3 : add byte ptr [rbx + 0x231f7a3d], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004a13ed : add byte ptr [rbx + 0x23c12c0d], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000049bdd5 : add byte ptr [rbx + 0x23f42b0d], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x000000000046654f : add byte ptr [rbx + 0x27747605], cl ; add byte ptr [rcx - 0x77], cl ; retf 0xc085
0x000000000043f8ef : add byte ptr [rbx + 0x29d8ba15], cl ; add bh, dh ; ret 0
0x000000000043c25f : add byte ptr [rbx + 0x29e5ce3d], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000434737 : add byte ptr [rbx + 0x2a899505], al ; add byte ptr [rcx], al ; ret
0x0000000000435d2f : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000047476b : add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x00000000004601cf : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000045fcff : add byte ptr [rbx + 0x48028901], cl ; lea eax, [rdx + 3] ; ret
0x000000000045106f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x000000000043d9ef : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x000000000040b3a7 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000419228 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004210b1 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004014ac : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000476a9f : add byte ptr [rbx + 0x63], cl ; xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x000000000041ba4f : add byte ptr [rbx + 0x75c08507], cl ; or dh, bl ; ret
0x0000000000466a04 : add byte ptr [rbx + 0x94801e1], al ; retf 0x8949
0x00000000004c6c4b : add byte ptr [rbx + rax - 0xc], al ; call qword ptr [rdx]
0x00000000004c6c7b : add byte ptr [rbx + rax - 0xc], dl ; call qword ptr [rdx]
0x000000000048fd4a : add byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000004d1053 : add byte ptr [rbx + rax*2 - 6], bh ; jmp rax
0x00000000004d0fd3 : add byte ptr [rbx + rax*2 - 6], cl ; call qword ptr [rdx]
0x00000000004d08ef : add byte ptr [rbx + rax*8], ah ; add byte ptr [rbx + rdx*8], ch ; stc ; jmp qword ptr [rdx]
0x00000000004c6beb : add byte ptr [rbx + rax], ah ; hlt ; call qword ptr [rdx]
0x00000000004c6c1b : add byte ptr [rbx + rax], dh ; hlt ; call qword ptr [rdx]
0x00000000004c8daf : add byte ptr [rbx + rbp*8], al ; ret
0x00000000004196c7 : add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x00000000004a0557 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00000000004a4357 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000004a103b : add byte ptr [rbx + rcx*4 + 0xd], cl ; popfq ; retf 0x23
0x00000000004d4963 : add byte ptr [rbx + rdi*8], bl ; cld ; jmp qword ptr [rdx]
0x00000000004c490f : add byte ptr [rbx + rdx*8], ch ; jmp qword ptr [rsi]
0x00000000004d08f3 : add byte ptr [rbx + rdx*8], ch ; stc ; jmp qword ptr [rdx]
0x00000000004c78df : add byte ptr [rbx + rsi], dl ; add ah, ch ; or al, 0xf4 ; jmp qword ptr [rdx]
0x00000000004c45bf : add byte ptr [rbx - 0x2e], cl ; call qword ptr [rdx]
0x00000000004641f8 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x0000000000464206 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x00000000004641ff : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x0000000000464214 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x000000000046420d : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x00000000004641f1 : add byte ptr [rbx - 0x3d], bl ; mov eax, 8 ; pop rbx ; ret
0x000000000048df59 : add byte ptr [rbx - 0x3d], bl ; nop dword ptr [rax] ; ret
0x000000000040939f : add byte ptr [rbx - 0x3f7a07b9], cl ; jg 0x409367 ; jmp 0x409375
0x0000000000407f7f : add byte ptr [rbx - 0x3f7aefb9], cl ; setg al ; ret
0x000000000048936f : add byte ptr [rbx - 0x4f743], al ; jmp qword ptr [rax]
0x000000000046446e : add byte ptr [rbx - 0x50f0fe40], al ; ret 0xf8e9
0x000000000048237c : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000004621b6 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000004221f5 : add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x0000000000425cc1 : add byte ptr [rbx - 0x7bf0fc06], al ; retf 0xd
0x0000000000425f26 : add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x00000000004250d4 : add byte ptr [rbx - 0x7bf0fc08], al ; retf 6
0x000000000042ca58 : add byte ptr [rbx - 0x7bf0fd08], al ; ret
0x0000000000422f6c : add byte ptr [rbx - 0x7bf0fe02], al ; ret 0x1b
0x0000000000422322 : add byte ptr [rbx - 0x7bf0fe06], al ; retf
0x000000000042238e : add byte ptr [rbx - 0x7bf0fe07], al ; retf 0x1b
0x000000000042513f : add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x00000000004251e2 : add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x000000000042ec57 : add byte ptr [rbx - 0x7c2e76ed], cl ; retf 0x8320
0x000000000041b46f : add byte ptr [rbx - 0x7fbf8f19], al ; jmp qword ptr [rax]
0x00000000004c490c : add byte ptr [rbx], 0 ; add byte ptr [rbx + rdx*8], ch ; jmp qword ptr [rsi]
0x00000000004c688f : add byte ptr [rbx], al ; add byte ptr [rax], al ; cmp al, 0xff ; call qword ptr [rbx]
0x0000000000497747 : add byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x00000000004c68ff : add byte ptr [rbx], dh ; add byte ptr [rdi + rdi*8 - 0xd], cl ; call qword ptr [rdi]
0x000000000047c7ed : add byte ptr [rcx + 0x29], al ; retf 0x8944
0x0000000000483635 : add byte ptr [rcx + 0x29], cl ; ret
0x00000000004462a5 : add byte ptr [rcx + 0x29], cl ; retf
0x000000000042d44f : add byte ptr [rcx + 0x2b], cl ; adc byte ptr [r8 + 1], r9b ; ret
0x000000000042d3b6 : add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x00000000004a5ab2 : add byte ptr [rcx + 0x348b4cd8], cl ; ret 0xf41
0x000000000048f90f : add byte ptr [rcx + 0x39], cl ; ret
0x000000000040672d : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x00000000004351d0 : add byte ptr [rcx + 0x4789246f], cl ; adc byte ptr [rbx + 0x5d], bl ; ret
0x000000000042ec40 : add byte ptr [rcx + 0x5c], al ; pop r13 ; pop r14 ; ret
0x000000000048da9c : add byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x0000000000449a0e : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000417566 : add byte ptr [rcx + 0x63], cl ; add al, 0x87 ; add rax, r15 ; jmp rax
0x0000000000476f9e : add byte ptr [rcx + 0x63], cl ; cmp al, 0xb3 ; add rdi, r11 ; jmp rdi
0x000000000044826c : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x0000000000460048 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000047ce59 : add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x0000000000488c3a : add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x00000000004a1aa6 : add byte ptr [rcx + 0xc8b48d8], cl ; ret 0xb60f
0x0000000000485948 : add byte ptr [rcx + 0xf], al ; mov dh, 0x46 ; or al, 0x83 ; ret
0x0000000000489bd4 : add byte ptr [rcx + 0xf], al ; ret 0x3941
0x000000000047e17f : add byte ptr [rcx + 0xf], al ; ret 0xc839
0x00000000004831e7 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000004881fa : add byte ptr [rcx + 1], al ; ret 0x8b48
0x00000000004628bf : add byte ptr [rcx + 1], cl ; ret
0x0000000000429425 : add byte ptr [rcx + 1], cl ; ret 0x149
0x00000000004187b5 : add byte ptr [rcx + 1], cl ; ret 0xef89
0x000000000040428f : add byte ptr [rcx + 1], cl ; ror dword ptr [rcx + rcx*4 + 8], 1 ; jmp 0x40426b
0x00000000004d50f8 : add byte ptr [rcx + rax + 0x302b505], bh ; retf
0x00000000004351ad : add byte ptr [rcx + rax + 0x57], al ; sbb byte ptr [rax + 0x39], cl ; ret
0x000000000041d4c2 : add byte ptr [rcx + rax - 0x18], cl ; jmp rax
0x00000000004c46c7 : add byte ptr [rcx + rax], bh ; add byte ptr [rax], al ; ret 0xf3c7
0x000000000049185c : add byte ptr [rcx + rbp - 0x48], dh ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000004c6e97 : add byte ptr [rcx + rbp], cl ; add byte ptr [rax], al ; in al, 3 ; hlt ; jmp qword ptr [rbx]
0x0000000000432ad4 : add byte ptr [rcx + rcx - 0xd], dh ; ret
0x00000000004cf283 : add byte ptr [rcx + rcx*2 - 7], ch ; call qword ptr [rdx]
0x00000000004a946f : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x000000000042e231 : add byte ptr [rcx + rcx*4 - 0x30], al ; pop rbx ; ret
0x000000000048fb6f : add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x000000000041a14f : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call r15
0x00000000004a8bcf : add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x000000000043fe8f : add byte ptr [rcx + rcx*8 - 0x7cb7dd8c], al ; ret 0x4801
0x000000000043b688 : add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x43b657 ; ret
0x00000000004ad484 : add byte ptr [rcx + rdi*8 - 0x67a8f01], al ; jmp rax
0x00000000004ad458 : add byte ptr [rcx + rdi*8 - 1], dh ; xor byte ptr [rsi - 7], bl ; call qword ptr [rax]
0x00000000004c573f : add byte ptr [rcx + rdx - 0x16740000], dh ; call qword ptr [rbx]
0x00000000004c7d13 : add byte ptr [rcx + rdx - 0xc], cl ; jmp qword ptr [rdi]
0x000000000040a13a : add byte ptr [rcx + rsi + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x000000000047204f : add byte ptr [rcx - 0x46], al ; add eax, 0xe9000000 ; ret
0x0000000000477a22 : add byte ptr [rcx - 0x46], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000049b15b : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000049b1f8 : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0xc74
0x0000000000429497 : add byte ptr [rcx - 0x75], cl ; add byte ptr [r8 - 0x7d], r9b ; ret
0x000000000046741a : add byte ptr [rcx - 0x75], cl ; jge 0x467425 ; call r12
0x000000000046744a : add byte ptr [rcx - 0x75], cl ; jge 0x467455 ; call r12
0x00000000004a957f : add byte ptr [rcx - 0x75], cl ; pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x0000000000468067 : add byte ptr [rcx - 0x77], al ; ret
0x00000000004885fe : add byte ptr [rcx - 0x77], al ; ret 0x1674
0x000000000042e25a : add byte ptr [rcx - 0x77], al ; ret 0x8beb
0x0000000000487117 : add byte ptr [rcx - 0x77], al ; retf
0x0000000000467ee5 : add byte ptr [rcx - 0x77], al ; retf 0xc085
0x00000000004751db : add byte ptr [rcx - 0x77], cl ; push rsi ; cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000047ae37 : add byte ptr [rcx - 0x77], cl ; ret
0x000000000041faf0 : add byte ptr [rcx - 0x77], cl ; ret 0x149
0x00000000004a8c22 : add byte ptr [rcx - 0x77], cl ; ret 0x8349
0x0000000000495dc4 : add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x0000000000467ddf : add byte ptr [rcx - 0x77], cl ; retf 0x19b8
0x0000000000466555 : add byte ptr [rcx - 0x77], cl ; retf 0xc085
0x00000000004a6a7a : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x00000000004a6b89 : add byte ptr [rcx - 0x7b], cl ; ret 0x840f
0x000000000048d55b : add byte ptr [rcx - 0x7cb7e8f4], cl ; ret 0x4804
0x00000000004ae3fc : add byte ptr [rcx - 0x7cef0006], al ; cli ; jmp qword ptr [rax]
0x00000000004a6d8f : add byte ptr [rcx - 0x7d], al ; retf 0xb801
0x000000000047d612 : add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x0000000000477df7 : add byte ptr [rcx - 0x7d], cl ; call qword ptr [rbx]
0x0000000000438e67 : add byte ptr [rcx - 0x7d], cl ; ret
0x00000000004353ef : add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x000000000047806e : add byte ptr [rcx - 0x7d], cl ; ret 0x6601
0x00000000004420cf : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000004409df : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000004669c2 : add byte ptr [rcx - 0x7d], cl ; retf
0x00000000004adecc : add byte ptr [rcx - 6], ah ; call qword ptr [rax + 0x20fffa60]
0x0000000000447a92 : add byte ptr [rcx - 9], cl ; ret 1
0x0000000000447ab8 : add byte ptr [rcx - 9], cl ; ret 2
0x0000000000470aeb : add byte ptr [rcx], 0 ; add al, ch ; cld ; ret 0xfffa
0x0000000000472594 : add byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; retf 0x8966
0x00000000004d08e9 : add byte ptr [rcx], 0 ; jo 0x4d08f6 ; add byte ptr [rax], al ; ret
0x00000000004c53cf : add byte ptr [rcx], ah ; fdivrp st(3) ; jmp qword ptr [rdx]
0x00000000004179ba : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(1) ; ret
0x000000000048238e : add byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x43e646
0x0000000000462acf : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x0000000000429e9f : add byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004ad95c : add byte ptr [rcx], al ; cli ; inc dword ptr [rax - 0x14] ; stc ; call qword ptr [rax]
0x0000000000400b8b : add byte ptr [rcx], al ; pop rbp ; ret
0x000000000049bddb : add byte ptr [rcx], al ; pop rbx ; ret
0x000000000043473d : add byte ptr [rcx], al ; ret
0x000000000046a03c : add byte ptr [rcx], bh ; ret
0x00000000004015e4 : add byte ptr [rcx], bh ; ret 0x707d
0x0000000000402838 : add byte ptr [rcx], bh ; ret 0x940f
0x00000000004011d7 : add byte ptr [rcx], bh ; ret 0xc7e
0x0000000000401262 : add byte ptr [rcx], bh ; ret 0xd7f
0x0000000000416801 : add byte ptr [rcx], ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040d782 : add byte ptr [rcx], ch ; test r9d, r9d ; cmovne eax, edx ; ret
0x00000000004c66ff : add byte ptr [rcx], dh ; add byte ptr [rsi + rdi*8], bl ; call qword ptr [rbx]
0x000000000040ddc9 : add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; clc ; ret
0x000000000049407c : add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x0000000000466695 : add byte ptr [rcx], dh ; inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x000000000040de1f : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000044739c : add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x00000000004919ea : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0x491a21 ; ret
0x00000000004307ff : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x430819 ; ret
0x000000000046a05b : add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x000000000048238c : add byte ptr [rdi + 0x100], bh ; call 0x43e648
0x00000000004c82af : add byte ptr [rdi + 0x19fc0000], ah ; hlt ; jmp qword ptr [rdx]
0x000000000044eeba : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x0000000000419435 : add byte ptr [rdi + 1], bh ; call r14
0x000000000041945d : add byte ptr [rdi + 1], bh ; call rax
0x000000000041a1ac : add byte ptr [rdi + 2], dh ; sbb eax, eax ; ret
0x00000000004c8813 : add byte ptr [rdi + rbx - 0xc], bh ; jmp qword ptr [rbx]
0x00000000004ca4a7 : add byte ptr [rdi + rbx*2], bl ; add byte ptr [rax], al ; xchg eax, esp ; ret 0xfff4
0x00000000004c879b : add byte ptr [rdi + rbx], ah ; hlt ; jmp qword ptr [rsi]
0x00000000004c64c7 : add byte ptr [rdi + rbx], bh ; add byte ptr [rax], al ; mov ah, 0xfb ; call qword ptr [rdx]
0x000000000049e527 : add byte ptr [rdi + rcx + 0x44], cl ; retf 0x8d48
0x000000000040db17 : add byte ptr [rdi + rcx + 0x46], al ; ret 0x74b9
0x000000000040b45f : add byte ptr [rdi + rcx - 0x42], al ; ret 0x8b48
0x000000000047658f : add byte ptr [rdi + rcx - 0x42], cl ; retf 0x4a8d
0x000000000047f7b5 : add byte ptr [rdi + rcx - 0x4a], al ; or al, 0x89 ; ret 0xc689
0x00000000004cb40b : add byte ptr [rdi + rcx*2 - 0xb], ah ; call rsp
0x00000000004c6903 : add byte ptr [rdi + rdi*8 - 0xd], cl ; call qword ptr [rdi]
0x00000000004c6893 : add byte ptr [rdi + rdi*8], bh ; call qword ptr [rbx]
0x00000000004cbdf3 : add byte ptr [rdi + rdi*8], bh ; cmc ; call qword ptr [rdi]
0x00000000004c7d0f : add byte ptr [rdi + rsi + 0x114c0000], al ; hlt ; jmp qword ptr [rdi]
0x00000000004a9b13 : add byte ptr [rdi - 0x1d000a85], bh ; jnp 0x4a9b18 ; jmp rdx
0x00000000004d02c7 : add byte ptr [rdi*4 - 0x624c0000], bh ; stc ; jmp qword ptr [rdx]
0x00000000004ad7e4 : add byte ptr [rdi], al ; cli ; jmp rax
0x00000000004ae550 : add byte ptr [rdi], bl ; sti ; jmp qword ptr [rax]
0x00000000004ade18 : add byte ptr [rdi], ch ; cli ; push qword ptr [rax + 0x2e] ; cli ; call qword ptr [rax]
0x0000000000428ea6 : add byte ptr [rdi], cl ; add eax, 0x8944c689 ; ret 0xeab8
0x000000000049d0f6 : add byte ptr [rdi], cl ; add eax, 0x940fc085 ; ret 0x3d
0x00000000004cba03 : add byte ptr [rdi], cl ; cmc ; call qword ptr [rdx]
0x0000000000450836 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000004640c7 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000045186f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000004518df : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000470edb : add byte ptr [rdi], cl ; mov dh, 0x4e ; add dword ptr [rcx - 0x77], eax ; retf
0x0000000000471fe4 : add byte ptr [rdi], cl ; mov dh, 0x78 ; add cl, byte ptr [rax + 0x39] ; retf
0x0000000000471fcf : add byte ptr [rdi], cl ; mov dh, 0x78 ; add dword ptr [rax + 0x39], ecx ; retf
0x0000000000471ff9 : add byte ptr [rdi], cl ; mov dh, 0x78 ; add ecx, dword ptr [rax + 0x39] ; retf
0x000000000046417f : add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x0000000000441c7f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042ec4f : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x0000000000407257 : add byte ptr [rdi], cl ; mov dh, 6 ; mov byte ptr [rdi], al ; ret
0x0000000000447fff : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000447b3f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000047e91b : add byte ptr [rdi], cl ; mov ds, word ptr [rax + rax + 0x63490000] ; ret 0x8944
0x00000000004473cf : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x00000000004473ff : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000004473ef : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000004473df : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000488c34 : add byte ptr [rdi], cl ; mov ss, word ptr [rax + rax + 0x63490000] ; ret 0x8948
0x0000000000497aa3 : add byte ptr [rdi], cl ; ret 0x8d48
0x0000000000413e34 : add byte ptr [rdi], cl ; ret 0x8d49
0x00000000004754db : add byte ptr [rdi], cl ; ret 0xc083
0x0000000000481a13 : add byte ptr [rdi], cl ; retf 0x45e9
0x0000000000416feb : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd285
0x000000000044629f : add byte ptr [rdi], cl ; sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x0000000000428e8b : add byte ptr [rdi], cl ; sub dword ptr [rsp + 0xf0], eax ; syscall
0x000000000042cf66 : add byte ptr [rdi], cl ; test dword ptr [rcx - 0x16000002], esi ; retf 0xfffe
0x000000000043dbfe : add byte ptr [rdi], cl ; test ebx, edi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000485da8 : add byte ptr [rdi], cl ; xchg dword ptr [rdx + rbx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043c65e : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3d83
0x00000000004928e3 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x000000000046c4a4 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x00000000004c4edf : add byte ptr [rdi], dh ; fdivr st(3), st(0) ; jmp qword ptr [rsi]
0x00000000004cba2b : add byte ptr [rdi], dl ; cmc ; call qword ptr [rdx]
0x00000000004c46eb : add byte ptr [rdi], dl ; retf
0x0000000000470ae9 : add byte ptr [rdx + 0x180], bh ; call 0x41cdf8
0x0000000000470b0d : add byte ptr [rdx + 0x19f], bh ; call 0x41cdf8
0x0000000000470b2c : add byte ptr [rdx + 0x1be], bh ; call 0x41cdf8
0x000000000045fcbf : add byte ptr [rdx + 0x48028801], cl ; lea eax, [rdx] ; ret
0x000000000045e50f : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x0000000000419637 : add byte ptr [rdx + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004903b2 : add byte ptr [rdx + 0x5e], bh ; call 0x41cdf8
0x00000000004981dc : add byte ptr [rdx + 0x63], cl ; add al, 0xa1 ; add rax, rcx ; jmp rax
0x0000000000498b04 : add byte ptr [rdx + 0x63], cl ; add al, 0xa7 ; add rax, rdi ; jmp rax
0x0000000000414e0e : add byte ptr [rdx + 0x63], cl ; add al, 0xaa ; add rax, rdx ; jmp rax
0x00000000004903d1 : add byte ptr [rdx + 0x7b], bh ; call 0x41cdf8
0x00000000004c6aeb : add byte ptr [rdx + rax - 0xc], dh ; call qword ptr [rdx]
0x000000000042e8e7 : add byte ptr [rdx + rax - 0xd], dh ; ret
0x00000000004c880f : add byte ptr [rdx + rax*2 + 0x1f7c0000], al ; hlt ; jmp qword ptr [rbx]
0x00000000004c8797 : add byte ptr [rdx + rax*2], cl ; add byte ptr [rax], al ; and al, 0x1f ; hlt ; jmp qword ptr [rsi]
0x00000000004cff7b : add byte ptr [rdx + rax*4 - 7], ah ; call rdx
0x00000000004c85bf : add byte ptr [rdx + rax*8], al ; retf
0x00000000004c6a6b : add byte ptr [rdx + rax], al ; hlt ; call qword ptr [rbx]
0x00000000004b7f37 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x00000000004d0fcf : add byte ptr [rdx + rcx*8], al ; add byte ptr [rbx + rax*2 - 6], cl ; call qword ptr [rdx]
0x0000000000473da0 : add byte ptr [rdx + rdi*2 - 0xa], dh ; ret
0x0000000000473d9f : add byte ptr [rdx + rdi*2 - 0xa], sil ; ret
0x00000000004c6383 : add byte ptr [rdx + rdi*8], bl ; call qword ptr [rdx]
0x00000000004c7847 : add byte ptr [rdx + rsi + 0xab40000], bh ; hlt ; jmp qword ptr [rdx]
0x00000000004ad514 : add byte ptr [rdx - 0x450f0007], bh ; stc ; jmp rax
0x00000000004cc36b : add byte ptr [rdx - 0xa], ah ; jmp rdi
0x00000000004c48bf : add byte ptr [rdx], ah ; sal bl, cl ; call qword ptr [rsi]
0x0000000000402cd4 : add byte ptr [rdx], al ; add byte ptr [rax], al ; nop ; leave ; ret
0x00000000004ad9d4 : add byte ptr [rdx], bh ; cli ; call qword ptr [rax + 0x20fffa39]
0x00000000004c492f : add byte ptr [rdx], dh ; sal ebx, cl ; jmp qword ptr [rax]
0x00000000004ae4f4 : add byte ptr [rip + 0x1d10fffb], bl ; sti ; jmp qword ptr [rax]
0x00000000004c6c17 : add byte ptr [rsi + 0x3340000], cl ; hlt ; call qword ptr [rdx]
0x00000000004c6c47 : add byte ptr [rsi + 0x3440000], bh ; hlt ; call qword ptr [rdx]
0x0000000000468107 : add byte ptr [rsi + 0x80], bh ; syscall
0x00000000004c7aaf : add byte ptr [rsi + 0xe0c0000], ah ; hlt ; jmp qword ptr [rax]
0x00000000004a1322 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x0000000000448574 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004825da : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x1ce8
0x000000000047f85a : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x0000000000436397 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x4466
0x000000000047f883 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x73e8
0x0000000000435dcf : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x000000000047f821 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x000000000048257c : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf
0x0000000000447304 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000436396 : add byte ptr [rsi + 0xf], spl ; outsd dx, dword ptr [rsi] ; ret 0x4466
0x00000000004c8c0f : add byte ptr [rsi + rax*2 + 0x23cc0000], al ; hlt ; jmp qword ptr [rdx]
0x0000000000440481 : add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x00000000004cb407 : add byte ptr [rsi + rbp*2], bh ; add byte ptr [rdi + rcx*2 - 0xb], ah ; call rsp
0x000000000046add7 : add byte ptr [rsi + rbp*4 - 0x18], dh ; xchg eax, ecx ; retf 0
0x00000000004c85d7 : add byte ptr [rsi + rbp*4], al ; retf
0x00000000004c59cb : add byte ptr [rsi + rbp*8 - 0xd], ah ; call qword ptr [rdi]
0x00000000004c5973 : add byte ptr [rsi + rbp*8 - 0xd], bl ; call qword ptr [rbx]
0x00000000004c542f : add byte ptr [rsi + rcx - 0x21640000], ah ; call qword ptr [rcx]
0x00000000004cd397 : add byte ptr [rsi + rcx*4], cl ; add byte ptr [rax], al ; hlt ; jae 0x4cd39d ; call qword ptr [rdi]
0x00000000004c7ab3 : add byte ptr [rsi + rcx], cl ; hlt ; jmp qword ptr [rax]
0x00000000004c6703 : add byte ptr [rsi + rdi*8], bl ; call qword ptr [rbx]
0x00000000004c9bf7 : add byte ptr [rsi + rdx*2], ch ; add byte ptr [rax + rdi - 0xc], ah ; call qword ptr [rdi]
0x00000000004d1bff : add byte ptr [rsi + rdx*8], dh ; add byte ptr [rsp + rbx*2 - 5], bh ; jmp qword ptr [rax]
0x0000000000472b60 : add byte ptr [rsi + rsi*2 - 0xa], dh ; ret
0x0000000000472b5f : add byte ptr [rsi + rsi*2 - 0xa], sil ; ret
0x00000000004c4f1f : add byte ptr [rsi - 0x24], al ; jmp qword ptr [rsi]
0x000000000040a50d : add byte ptr [rsi - 0x70], ah ; lea rax, [rdi + 0x10] ; ret
0x00000000004a13cd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x27 ; syscall
0x0000000000467e0d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x63 ; syscall
0x0000000000490ebd : add byte ptr [rsi - 0x70], ah ; mov eax, 0xc9 ; syscall
0x000000000040a4ed : add byte ptr [rsi - 0x70], ah ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000040cc8d : add byte ptr [rsi - 0x70], ah ; mov qword ptr [rdi], rsi ; ret
0x000000000040758d : add byte ptr [rsi - 0x70], ah ; mov rax, qword ptr [rdi] ; ret
0x000000000040759d : add byte ptr [rsi - 0x70], ah ; mov rax, rdi ; ret
0x000000000040715d : add byte ptr [rsi - 0x70], ah ; mov rax, rsi ; mov qword ptr [rdi], rsi ; ret
0x00000000004004cd : add byte ptr [rsi - 0x70], ah ; ret
0x00000000004aa824 : add byte ptr [rsi - 0xa], dl ; jmp rsp
0x0000000000440447 : add byte ptr [rsi - 9], dh ; ret 0
0x00000000004c8e3b : add byte ptr [rsi], ah ; hlt ; call qword ptr [rdx]
0x00000000004c838c : add byte ptr [rsi], bh ; add byte ptr [rax], al ; loopne 0x4c83b4 ; hlt ; call qword ptr [rdx]
0x00000000004adbac : add byte ptr [rsi], bh ; cli ; call qword ptr [rax + 0x20fffa3d]
0x00000000004c6ba7 : add byte ptr [rsi], bl ; add byte ptr [rax], al ; mov ah, 2 ; hlt ; call qword ptr [rdx]
0x00000000004c6be7 : add byte ptr [rsi], bl ; add byte ptr [rbx + rax], ah ; hlt ; call qword ptr [rdx]
0x00000000004ae530 : add byte ptr [rsi], bl ; sti ; jmp qword ptr [rax]
0x00000000004c5473 : add byte ptr [rsi], dl ; ret
0x00000000004d4a2f : add byte ptr [rsp + rax - 0x363ffff], ah ; cld ; jmp rsp
0x00000000004330c5 : add byte ptr [rsp + rax - 0x58], dh ; add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x00000000004c6237 : add byte ptr [rsp + rbx - 0x77c0000], ch ; call qword ptr [rdx]
0x00000000004d1c03 : add byte ptr [rsp + rbx*2 - 5], bh ; jmp qword ptr [rax]
0x000000000041c0ce : add byte ptr [rsp + rcx - 0x7f], dh ; retf 0x440
0x00000000004c519f : add byte ptr [rsp + rcx], dl ; add byte ptr [rax], al ; xor al, 0xdd ; jmp qword ptr [rbx]
0x00000000004c5a27 : add byte ptr [rsp + rdx - 0x119c0000], bl ; call qword ptr [rdi]
0x00000000004c59c7 : add byte ptr [rsp + rdx], bh ; add byte ptr [rax], al ; out dx, al ; call qword ptr [rdi]
0x00000000004c59f7 : add byte ptr [rsp + rdx], ch ; add byte ptr [rsi + rbp*8 - 0xd], ah ; call qword ptr [rdi]
0x000000000046f81c : add byte ptr [rsp + rsi - 0xa], dh ; ret
0x00000000004cba27 : add byte ptr [rsp + rsi*2 - 0x18ec0000], bl ; cmc ; call qword ptr [rdx]
0x00000000004cb9ff : add byte ptr [rsp + rsi*2], dh ; add byte ptr [rdi], cl ; cmc ; call qword ptr [rdx]
0x0000000000411271 : add byte ptr cs:[rax], al ; add cl, ch ; ret
0x00000000004c846d : add byte ptr ds:[rax], al ; adc byte ptr [rsp + rsi*8], bl ; jmp qword ptr [rdx]
0x00000000004c838d : add byte ptr ds:[rax], al ; loopne 0x4c83b3 ; hlt ; call qword ptr [rdx]
0x000000000047776c : add byte ptr es:[rax + rcx - 0xd], dh ; ret
0x00000000004c6c49 : add byte ptr es:[rax], al ; add r14d, esp ; call qword ptr [rdx]
0x00000000004c6c65 : add byte ptr es:[rax], al ; add rsi, rsp ; call qword ptr [rbx]
0x00000000004c6be9 : add byte ptr es:[rax], al ; and al, 3 ; hlt ; call qword ptr [rdx]
0x00000000004c6c35 : add byte ptr es:[rax], al ; cmp byte ptr [rbx], al ; hlt ; call qword ptr [rbx]
0x00000000004c6ba9 : add byte ptr es:[rax], al ; mov ah, 2 ; hlt ; call qword ptr [rdx]
0x00000000004c6c79 : add byte ptr es:[rax], al ; push rsp ; add esi, esp ; call qword ptr [rdx]
0x00000000004c6c05 : add byte ptr es:[rax], al ; sub byte ptr [rbx], al ; hlt ; call qword ptr [rbx]
0x00000000004c6b95 : add byte ptr es:[rax], al ; test al, 2 ; hlt ; call qword ptr [rbx]
0x00000000004c6c19 : add byte ptr es:[rax], al ; xor al, 3 ; hlt ; call qword ptr [rdx]
0x00000000004d10b8 : add byte ptr fs:[rax], al ; add byte ptr [rax], dh ; retf
0x0000000000467d67 : add byte ptr fs:[rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000004b8343 : add ch, al ; or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x000000000042a4f7 : add ch, al ; ret
0x000000000048f71f : add ch, al ; std ; xlatb ; retf 0xc985
0x00000000004c2c9c : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004c2c9d : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x00000000004d39fd : add ch, byte ptr [rbp + rcx + 7] ; ret
0x000000000048de1a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000043ed8a : add ch, byte ptr [rdi - 1] ; dec dword ptr [rbx + 0x90c2454] ; ret 0xbae9
0x0000000000485983 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004cc4ef : add ch, byte ptr [rsi + rcx + 8] ; ret
0x00000000004182a7 : add ch, cl ; retf 0xfffc
0x00000000004c206a : add cl, bl ; retf 0xea91
0x000000000045e537 : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x0000000000486162 : add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x0000000000471d8e : add cl, byte ptr [rax + 0x39] ; ret
0x00000000004856b6 : add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x0000000000471fe8 : add cl, byte ptr [rax + 0x39] ; retf
0x000000000044eaba : add cl, byte ptr [rax + 0x39] ; retf 0x820f
0x0000000000463e94 : add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x000000000043903b : add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x0000000000438c98 : add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x000000000044071c : add cl, byte ptr [rax + 0xf] ; ret 0xc3f3
0x000000000042d554 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000042d473 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000046d92c : add cl, byte ptr [rax + 1] ; fimul word ptr [rax + 1] ; ret
0x0000000000402c2c : add cl, byte ptr [rax + 1] ; ret 0x8b48
0x0000000000472326 : add cl, byte ptr [rax - 0x73] ; add rcx, qword ptr [rax + 0x39] ; retf
0x000000000045e538 : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x000000000045e4a5 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000004a1625 : add cl, byte ptr [rax - 0x77] ; je 0x4a1656 ; or byte ptr [rax + 1], cl ; ret
0x0000000000401ce1 : add cl, byte ptr [rax - 0x77] ; ret 0x8b48
0x000000000049a774 : add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x0000000000434352 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x0000000000400ec3 : add cl, byte ptr [rax - 0x7d] ; ret 0x4804
0x000000000045cd00 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000400ee3 : add cl, byte ptr [rax - 0x7d] ; ret 0xc704
0x000000000045cd63 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x0000000000414bc1 : add cl, byte ptr [rax - 0x7d] ; ret 0xeb08
0x00000000004a011d : add cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x00000000004182a3 : add cl, byte ptr [rax - 0x7d] ; rol byte ptr [rdx], 0xe9 ; retf 0xfffc
0x000000000048d360 : add cl, byte ptr [rax - 9] ; fiadd dword ptr [rbx - 0x7bf0fc1e] ; retf
0x00000000004516b2 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000475098 : add cl, byte ptr [rcx + 0x39] ; retf
0x000000000046ea5a : add cl, byte ptr [rcx - 0x7d] ; ret
0x000000000041fb69 : add cl, byte ptr [rdi] ; retf 0x8b48
0x0000000000462bbb : add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x00000000004c78d5 : add cl, byte ptr [rsi + rcx + 8] ; ret
0x000000000041523e : add cl, ch ; in al, dx ; ret
0x0000000000411274 : add cl, ch ; ret
0x00000000004a3e38 : add cl, ch ; ret 0xb5c1
0x000000000047b17a : add cl, ch ; ret 0xfffa
0x0000000000471808 : add cl, ch ; ret 0xfffd
0x0000000000425150 : add cl, ch ; retf
0x000000000045723a : add cl, ch ; retf 0xfffe
0x0000000000400db0 : add cl, cl ; ret
0x00000000004c1f23 : add cl, dh ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000004c1f22 : add cl, sil ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000004c6a6d : add dh, ah ; call qword ptr [rbx]
0x00000000004c6a81 : add dh, ah ; call qword ptr [rdi]
0x00000000004c6aed : add dh, ah ; call qword ptr [rdx]
0x000000000040a33b : add dh, al ; adc byte ptr [r8], r8b ; mov qword ptr [rdi], rax ; ret
0x000000000040a400 : add dh, al ; adc byte ptr [rax], r8b ; ret
0x000000000040ac1b : add dh, al ; add byte ptr [rax], al ; ret
0x00000000004bbfeb : add dh, al ; add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x0000000000486458 : add dh, al ; test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x000000000047ac82 : add dh, al ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x00000000004c0d5e : add dh, bh ; movsxd rax, dword ptr [rbp + 0x275dcc4c] ; retf 0xd1cb
0x00000000004bb437 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000451863 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000040058e : add dh, bl ; ret
0x00000000004ad6e4 : add dh, bl ; stc ; jmp rax
0x00000000004404be : add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004cca21 : add dh, byte ptr [rbx + 0xa] ; ret
0x0000000000436dc8 : add dh, dh ; ret
0x000000000046dc5e : add dh, dh ; ret 0x4801
0x000000000043e6ff : add dh, dh ; ret 0x4804
0x0000000000498688 : add dh, dh ; ret 0x7403
0x000000000046667f : add dh, dh ; ret 0x7404
0x0000000000460be7 : add dh, dh ; ret 0x7501
0x0000000000460bf4 : add dh, dh ; ret 0x7502
0x0000000000460c01 : add dh, dh ; ret 0x7504
0x0000000000460bb9 : add dh, dh ; ret 0x7510
0x0000000000460bc6 : add dh, dh ; ret 0x7520
0x00000000004406ec : add dh, dh ; ret 0x7540
0x000000000043ea23 : add dh, dh ; ret 0xf02
0x0000000000476ef8 : add dh, dh ; ret 0xf04
0x0000000000436cf9 : add dh, dh ; ret 0xf08
0x0000000000483041 : add dh, dh ; ret 0xf40
0x0000000000483027 : add dh, dh ; ret 0xf50
0x00000000004ad6cc : add dl, ah ; stc ; jmp rax
0x0000000000495a4d : add dword ptr [r15], r9d ; xchg eax, ebp ; ret 0xc283
0x000000000048c087 : add dword ptr [r8 - 0x75], r9d ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x000000000048b235 : add dword ptr [r8 - 0x7d], ecx ; ret 0x8502
0x000000000046c873 : add dword ptr [r8 - 0x7d], r9d ; ret
0x0000000000402f5d : add dword ptr [r8], eax ; add cl, cl ; ret
0x000000000045fcc1 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x0000000000481c3a : add dword ptr [rax + 0x29], ecx ; fimul dword ptr [rax + 0x39] ; ret 0xe57f
0x0000000000481bff : add dword ptr [rax + 0x29], ecx ; fimul dword ptr [rax + 0x39] ; retf 0xe87f
0x00000000004734d8 : add dword ptr [rax + 0x39480742], ecx ; retf
0x0000000000472355 : add dword ptr [rax + 0x39480750], ecx ; retf
0x0000000000432ccd : add dword ptr [rax + 0x39], ecx ; ret
0x000000000049bc19 : add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000049bc2b : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x00000000004780bf : add dword ptr [rax + 0x39], ecx ; ret 0x8841
0x000000000048101a : add dword ptr [rax + 0x39], ecx ; ret 0x8c0f
0x000000000042a5a3 : add dword ptr [rax + 0x39], ecx ; ret 0xd774
0x000000000042a52d : add dword ptr [rax + 0x39], ecx ; ret 0xed75
0x0000000000471fd3 : add dword ptr [rax + 0x39], ecx ; retf
0x0000000000432fa8 : add dword ptr [rax + 0x39], ecx ; retf 0xee75
0x000000000040c7f9 : add dword ptr [rax + 0x39], ecx ; retf 0xf175
0x0000000000473f10 : add dword ptr [rax + 0x39], r9d ; ret
0x000000000041a4c3 : add dword ptr [rax + 0x7900ff7a], eax ; sbb dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x0000000000418aae : add dword ptr [rax + 1], ecx ; retf
0x00000000004968c9 : add dword ptr [rax + 1], ecx ; retf 0x8948
0x000000000049dfe7 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000428dda : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x0000000000495245 : add dword ptr [rax + 9], ecx ; ret 0x1475
0x0000000000439dfe : add dword ptr [rax + 9], ecx ; ret 0x8949
0x0000000000495217 : add dword ptr [rax + 9], ecx ; ret 0xe75
0x0000000000466a07 : add dword ptr [rax + 9], ecx ; retf 0x8949
0x0000000000491930 : add dword ptr [rax + rax], edx ; mov eax, ecx ; syscall
0x00000000004c1b1b : add dword ptr [rax + rdx*4 + 0x16], edi ; out dx, al ; out 0x78, al ; jnp 0x4c1b87 ; retf
0x000000000047d693 : add dword ptr [rax - 0x4f743], eax ; jmp qword ptr [rax]
0x000000000041df2f : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x000000000043edd4 : add dword ptr [rax - 0x73], ecx ; clc ; cmovne rax, rcx ; ret
0x000000000048c088 : add dword ptr [rax - 0x75], ecx ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x000000000040dae9 : add dword ptr [rax - 0x75], ecx ; add al, 0xc8 ; ret
0x000000000045e511 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x00000000004350c1 : add dword ptr [rax - 0x77], ecx ; adc eax, 0x2a5787 ; ret
0x000000000040dc87 : add dword ptr [rax - 0x77], ecx ; add al, 0xf1 ; mov dword ptr [rbx + 0x38], edx ; pop rbx ; ret
0x000000000045e4a2 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000049b363 : add dword ptr [rax - 0x77], ecx ; add eax, 0x242205 ; ret
0x000000000047a580 : add dword ptr [rax - 0x77], ecx ; push rsi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000042124c : add dword ptr [rax - 0x77], ecx ; ret
0x000000000046cdd7 : add dword ptr [rax - 0x77], ecx ; ret 0x2b48
0x0000000000430096 : add dword ptr [rax - 0x77], ecx ; ret 0x3c75
0x000000000040f3bc : add dword ptr [rax - 0x77], ecx ; ret 0x8440
0x000000000047969c : add dword ptr [rax - 0x77], ecx ; retf 0x8948
0x00000000004a1a02 : add dword ptr [rax - 0x77], ecx ; rol byte ptr [rbx + 0x394800d3], 1 ; retf 0xe275
0x000000000049b362 : add dword ptr [rax - 0x77], r9d ; add eax, 0x242205 ; ret
0x000000000040dd87 : add dword ptr [rax - 0x7b], ecx ; push qword ptr [rbp - 0x15] ; xor eax, eax ; ret
0x00000000004050d5 : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000478529 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000414934 : add dword ptr [rax - 0x7d], ecx ; ret 0x4820
0x000000000048b236 : add dword ptr [rax - 0x7d], ecx ; ret 0x8502
0x000000000041df79 : add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x000000000046d3c6 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b01
0x000000000048b887 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b04
0x00000000004296fb : add dword ptr [rax - 0x7d], ecx ; ret 0xf10
0x00000000004861c9 : add dword ptr [rax - 0x91743], eax ; jmp qword ptr [rax]
0x000000000047acc5 : add dword ptr [rax - 0x93b43], eax ; jmp qword ptr [rax]
0x0000000000420c80 : add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x0000000000401c35 : add dword ptr [rax], 0xc9900000 ; ret
0x0000000000470aec : add dword ptr [rax], eax ; add al, ch ; cld ; ret 0xfffa
0x0000000000470a8f : add dword ptr [rax], eax ; add al, ch ; pop rcx ; ret
0x00000000004160b6 : add dword ptr [rax], eax ; add bl, ch ; ret 0x1f0f
0x000000000042bc04 : add dword ptr [rax], eax ; add bl, dh ; ret
0x0000000000464031 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf 0xd975
0x000000000040e99b : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; retf 0x9848
0x000000000043597a : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x0000000000414bb9 : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; retf 0x8948
0x00000000004042d6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0x8ef0
0x0000000000484573 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x0000000000471d88 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000494044 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; dec dword ptr [rax - 0x7d] ; ret
0x000000000043aa3d : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000048cf3b : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x0000000000402d27 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000465469 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x16e9
0x000000000041ad8a : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x3948
0x00000000004145be : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x840f
0x0000000000402350 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000411884 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x91e8
0x0000000000472ff6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x00000000004192d5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000409d0d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000472595 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf 0x8966
0x0000000000462f8e : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000048d9f9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x000000000042d108 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; retf
0x000000000043b080 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000040433a : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000046783c : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000472c52 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000446f77 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043a6d5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x000000000044019e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000045beef : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000446fa5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000428aa3 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0xeb08
0x0000000000414fc9 : add dword ptr [rax], eax ; add byte ptr [rax], ah ; jmp 0x411a05
0x0000000000414f6d : add dword ptr [rax], eax ; add byte ptr [rax], ah ; jmp 0x411a71
0x000000000046b4a1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004bb43a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004ba5ea : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004ba412 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004ba40a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004baba2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004ba44a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004ba442 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x00000000004babe2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x0000000000419437 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r14
0x000000000041938d : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x00000000004d095c : add dword ptr [rax], eax ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; add al, bl ; ret
0x000000000041a1a9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ja 0x41a1ba ; sbb eax, eax ; ret
0x000000000041a0fd : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x0000000000491e82 : add dword ptr [rax], eax ; add byte ptr [rax], al ; leave ; ret
0x000000000046804e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x00000000004652d1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x000000000049a74d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000419a40 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x00000000004a05d6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000048b38d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000004331d3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a28fe : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000049bde1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000040dcaa : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000046591b : add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000040ddc6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor edi, edi ; mov rax, rdi ; ret
0x000000000042f0c8 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x0000000000444868 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000419226 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000046acd2 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004014aa : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000042513d : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x00000000004a957d : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x000000000047d610 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x00000000004167ff : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049407a : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x0000000000402d9d : add dword ptr [rax], eax ; add cl, cl ; ret
0x0000000000460be5 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x0000000000460bf2 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x0000000000460bff : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000460bb7 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000460bc4 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000460bd1 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x0000000000476ef6 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x0000000000402471 : add dword ptr [rax], eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000043f8dc : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x000000000043f843 : add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x0000000000400ad8 : add dword ptr [rax], eax ; hlt ; nop dword ptr [rax + rax] ; ret
0x00000000004d08ea : add dword ptr [rax], eax ; jo 0x4d08f5 ; add byte ptr [rax], al ; ret
0x000000000042b87c : add dword ptr [rax], eax ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004903d0 : add dword ptr [rax], eax ; mov edx, 0x7b ; call 0x41cdf9
0x00000000004a6ea2 : add dword ptr [rax], eax ; movss dword ptr [rsp - 0x28], xmm0 ; ret
0x00000000004210b0 : add dword ptr [rax], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004d4a32 : add dword ptr [rax], eax ; pushfq ; cld ; cld ; jmp rsp
0x00000000004d4962 : add dword ptr [rax], eax ; sbb al, 0xfb ; cld ; jmp qword ptr [rdx]
0x00000000004691e1 : add dword ptr [rax], esp ; jmp rdx
0x00000000004c2064 : add dword ptr [rbp + 0x6c], ebx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x000000000049209e : add dword ptr [rbp + rcx*4 + 0xd], ecx ; retf 0x2b4
0x0000000000400b8c : add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x0000000000482b00 : add dword ptr [rbp - 0x41f040be], ecx ; retf 0x53c
0x0000000000464e09 : add dword ptr [rbp - 0x57c03b0], ecx ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x00000000004671bd : add dword ptr [rbp - 0x77], ecx ; retf
0x000000000047ab02 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x00000000004c244a : add dword ptr [rbp - 9], 0x8d626770 ; rcl byte ptr [rdi], cl ; retf
0x0000000000451722 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000004c102a : add dword ptr [rbx + 0x1e40293b], ebp ; cli ; test bh, dl ; retf 0xdf7f
0x0000000000488635 : add dword ptr [rbx - 0x4f743], eax ; jmp qword ptr [rax]
0x00000000004a5139 : add dword ptr [rbx - 0x77], ecx ; push rsp ; ret 0x4808
0x00000000004287ce : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000004921ac : add dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x77] ; retf
0x0000000000484bef : add dword ptr [rcx + 0x256f560d], ecx ; add byte ptr [rax + 0x63], cl ; retf 0x8948
0x0000000000478f82 : add dword ptr [rcx + 0x39], ecx ; ret
0x0000000000466f13 : add dword ptr [rcx + 9], ecx ; ret
0x00000000004669c6 : add dword ptr [rcx + rcx*4 + 0x5f], ecx ; or byte ptr [rcx - 0x77], cl ; retf
0x000000000042943a : add dword ptr [rcx - 0x73], ecx ; or byte ptr [r8 + 0x39], cl ; ret
0x000000000045e541 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x000000000048b02e : add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x0000000000470edf : add dword ptr [rcx - 0x77], eax ; retf
0x00000000004765c8 : add dword ptr [rcx - 0x78], eax ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000468fd5 : add dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000483701 : add dword ptr [rcx - 0x7d], ecx ; ret 0x2504
0x000000000049498b : add dword ptr [rcx - 0x7d], ecx ; ret 0xf01
0x000000000049174a : add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x0000000000430d23 : add dword ptr [rcx], ecx ; retf 0xd284
0x0000000000480b13 : add dword ptr [rcx], edi ; retf
0x00000000004c1f75 : add dword ptr [rcx], edx ; cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x0000000000463d22 : add dword ptr [rdi + 0x15], esi ; jb 0x463d30 ; mov byte ptr [rdi], cl ; ret
0x000000000040dae6 : add dword ptr [rdi + 0x40], 1 ; mov rax, qword ptr [rax + rcx*8] ; ret
0x00000000004072b6 : add dword ptr [rdi + rcx + 0x48], esi ; test edx, edx ; jne 0x4072c9 ; ret
0x00000000004072d6 : add dword ptr [rdi + rcx + 0x48], esi ; test edx, edx ; jne 0x4072e9 ; ret
0x00000000004072f6 : add dword ptr [rdi + rcx + 0x48], esi ; test edx, edx ; jne 0x407309 ; ret
0x0000000000407316 : add dword ptr [rdi + rcx + 0x48], esi ; test edx, edx ; jne 0x407329 ; ret
0x000000000040a7c6 : add dword ptr [rdi + rcx + 0x48], esi ; test edx, edx ; jne 0x40a7d9 ; ret
0x000000000040a7e6 : add dword ptr [rdi + rcx + 0x48], esi ; test edx, edx ; jne 0x40a7f9 ; ret
0x000000000040a806 : add dword ptr [rdi + rcx + 0x48], esi ; test edx, edx ; jne 0x40a819 ; ret
0x000000000040a826 : add dword ptr [rdi + rcx + 0x48], esi ; test edx, edx ; jne 0x40a839 ; ret
0x00000000004d39c5 : add dword ptr [rdi], 0x48 ; or eax, 0x1370303 ; ret
0x00000000004d395d : add dword ptr [rdi], 0x48 ; or eax, 0x34b0303 ; ret
0x00000000004d3991 : add dword ptr [rdi], 0x48 ; or eax, 0x35b0303 ; ret
0x00000000004d396e : add dword ptr [rdi], 0xd ; add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004d39a2 : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; cld ; ret
0x00000000004d39d6 : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004d01a5 : add dword ptr [rdi], 3 ; ret 0xa01
0x00000000004734d0 : add dword ptr [rdi], ecx ; mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000049a857 : add dword ptr [rdi], ecx ; mov esi, 0xaf0f4907 ; retf 0x14c
0x000000000043a5fb : add dword ptr [rdi], ecx ; ret 0x8948
0x0000000000464471 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x00000000004150c1 : add dword ptr [rdi], ecx ; test edi, ecx ; ret
0x0000000000470e41 : add dword ptr [rdi], ecx ; xchg byte ptr [rdi], dl ; or eax, 0xea810000 ; ret 0
0x0000000000495a4e : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0xc283
0x0000000000462d1c : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x00000000004545ad : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004a142b : add dword ptr [rdx + rax*2], 1 ; ret
0x0000000000407283 : add dword ptr [rdx + rbx + 0x48], esi ; test esi, esi ; jne 0x407299 ; ret
0x000000000040a793 : add dword ptr [rdx + rbx + 0x48], esi ; test esi, esi ; jne 0x40a7a9 ; ret
0x0000000000407243 : add dword ptr [rdx + rdx + 0x48], esi ; test edx, edx ; jne 0x407259 ; ret
0x0000000000407263 : add dword ptr [rdx + rdx + 0x48], esi ; test edx, edx ; jne 0x407279 ; ret
0x000000000040a753 : add dword ptr [rdx + rdx + 0x48], esi ; test edx, edx ; jne 0x40a769 ; ret
0x000000000040a773 : add dword ptr [rdx + rdx + 0x48], esi ; test edx, edx ; jne 0x40a789 ; ret
0x00000000004c1c4f : add dword ptr [rdx - 0x36a5831f], esp ; retf
0x00000000004d2b54 : add dword ptr [rdx], 0x4a ; ret
0x00000000004cae94 : add dword ptr [rdx], 0x55 ; ret
0x00000000004ce9a0 : add dword ptr [rdx], 0x5a ; ret
0x00000000004cae50 : add dword ptr [rdx], 0x76 ; ret
0x00000000004cc592 : add dword ptr [rdx], eax ; retf
0x0000000000434738 : add dword ptr [rip + 0x2a8995], 1 ; ret
0x000000000041523b : add dword ptr [rip - 0x13170000], edx ; ret
0x0000000000407bdf : add dword ptr [rsi + rbp*8 - 0xd], esi ; ret
0x00000000004cc4eb : add dword ptr [rsi + rcx + 0x30], ecx ; add ch, byte ptr [rsi + rcx + 8] ; ret
0x000000000045e522 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000004330c9 : add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x0000000000405361 : add eax, 0x10 ; mov qword ptr [rbx], rax ; pop rbx ; ret
0x00000000004a60cd : add eax, 0x1489066 ; ret 0xb70f
0x00000000004054b8 : add eax, 0x18 ; mov qword ptr [rdi], rax ; ret
0x00000000004055be : add eax, 0x18 ; mov qword ptr [rsi], rax ; ret
0x00000000004054fd : add eax, 0x18c48348 ; ret
0x0000000000440839 : add eax, 0x1bb12 ; cmove rax, rdx ; ret
0x000000000043f8d9 : add eax, 0x1d0a2 ; cmove rax, rdx ; ret
0x000000000046564a : add eax, 0x1f0fc3f3 ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000044786a : add eax, 0x20 ; add rax, rdi ; vzeroupper ; ret
0x00000000004403f0 : add eax, 0x221ab ; cmove rax, rdx ; ret
0x0000000000440779 : add eax, 0x22732 ; cmovne rax, rdx ; ret
0x0000000000440639 : add eax, 0x22862 ; cmovne rax, rdx ; ret
0x00000000004404d9 : add eax, 0x229d2 ; cmovne rax, rdx ; ret
0x00000000004407e0 : add eax, 0x22a7b ; cmovne rax, rdx ; ret
0x00000000004406a0 : add eax, 0x22bab ; cmovne rax, rdx ; ret
0x0000000000440540 : add eax, 0x22d1b ; cmovne rax, rdx ; ret
0x00000000004407bf : add eax, 0x22ecc ; cmovne rax, rdx ; ret
0x000000000044067f : add eax, 0x22ffc ; cmovne rax, rdx ; ret
0x000000000044051f : add eax, 0x2316c ; cmovne rax, rdx ; ret
0x000000000043f860 : add eax, 0x231db ; cmovne rax, rdx ; ret
0x000000000044058e : add eax, 0x237dd ; cmovne rax, rdx ; ret
0x00000000004405df : add eax, 0x2390c ; cmovne rax, rdx ; ret
0x00000000004a3800 : add eax, 0x23a212 ; jne 0x4a3836 ; ret
0x00000000004a15d1 : add eax, 0x23c4aa ; ret
0x00000000004a0a59 : add eax, 0x23c9ca ; ret
0x00000000004a0a3e : add eax, 0x23c9e5 ; add rsp, 8 ; ret
0x000000000049b4cc : add eax, 0x242097 ; mov qword ptr [rsi], rax ; ret
0x000000000049b45b : add eax, 0x242110 ; ret
0x000000000049b422 : add eax, 0x242149 ; add rsp, 8 ; ret
0x000000000049b366 : add eax, 0x242205 ; ret
0x0000000000488d97 : add eax, 0x24eee4 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000488d44 : add eax, 0x24ef37 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000488817 : add eax, 0x24ef64 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000488bb6 : add eax, 0x24f0c5 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000488b71 : add eax, 0x24f10a ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000488b2c : add eax, 0x24f14f ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000488add : add eax, 0x24f19e ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000047d208 : add eax, 0x259e73 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000047d5b7 : add eax, 0x259fc4 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000047d569 : add eax, 0x25a012 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000047d4ba : add eax, 0x25a0c1 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000047d45e : add eax, 0x25a11d ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000047d1be : add eax, 0x25a3bd ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000047d170 : add eax, 0x25a40b ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000047cd17 : add eax, 0x25a564 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000474612 : add eax, 0x268c21 ; ret
0x0000000000469ef2 : add eax, 0x271429 ; ret
0x000000000046c112 : add eax, 0x2719d1 ; ret
0x000000000046f56f : add eax, 0x29480000 ; ret 0x349
0x0000000000440759 : add eax, 0x29ca52 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x0000000000440619 : add eax, 0x29cb92 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004404b9 : add eax, 0x29ccf2 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x000000000043b817 : add eax, 0x29f064 ; ret
0x000000000043b821 : add eax, 0x2a1906 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000043573d : add eax, 0x2a513e ; ret
0x0000000000435238 : add eax, 0x2a55d3 ; ret
0x000000000043524f : add eax, 0x2a55d8 ; ret
0x0000000000435210 : add eax, 0x2a55f3 ; ret
0x00000000004351f0 : add eax, 0x2a560b ; ret
0x00000000004350e6 : add eax, 0x2a577d ; ret
0x00000000004350d6 : add eax, 0x2a5785 ; ret
0x0000000000435086 : add eax, 0x2a578d ; ret
0x0000000000435076 : add eax, 0x2a57a5 ; ret
0x00000000004346a2 : add eax, 0x2a5a99 ; ret
0x00000000004356f1 : add eax, 0x2a7a36 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000435265 : add eax, 0x2a7eea ; ret
0x000000000043479d : add eax, 0x2a8932 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041d11e : add eax, 0x2b9 ; add byte ptr [rax - 0x75], cl ; pop rsp ; retf
0x000000000041bb11 : add eax, 0x2c0bce ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000041ba01 : add eax, 0x2c0cde ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000406822 : add eax, 0x2d5c79 ; ret
0x0000000000406815 : add eax, 0x2d5c86 ; ret
0x00000000004d1cd4 : add eax, 0x3400e4e ; ret
0x00000000004a100e : add eax, 0x38c48348 ; ret
0x0000000000438f8e : add eax, 0x39480000 ; ret 0xf275
0x000000000044788a : add eax, 0x40 ; add rax, rdi ; vzeroupper ; ret
0x000000000040d8b1 : add eax, 0x48000000 ; mov eax, edx ; ret
0x00000000004a0b46 : add eax, 0x48000000 ; mov ebp, eax ; call 0x41ce49
0x00000000004a0c20 : add eax, 0x48000000 ; mov esi, eax ; call 0x41ce49
0x000000000045fd58 : add eax, 0x48054289 ; lea eax, [rdx + 8] ; ret
0x000000000045e588 : add eax, 0x48054289 ; mov eax, edi ; ret
0x0000000000460256 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x000000000045fdd9 : add eax, 0x5428948 ; lea rax, [rdx + 0xc] ; ret
0x000000000045e5c9 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x00000000004a11b0 : add eax, 0x5b ; cmovne rax, rdx ; ret
0x00000000004bbfdd : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x000000000048d9da : add eax, 0x5c415d5b ; ret
0x00000000004bbfed : add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x00000000004478aa : add eax, 0x60 ; add rax, rdi ; vzeroupper ; ret
0x0000000000402e37 : add eax, 0x65493e8 ; add cl, cl ; ret
0x000000000040251a : add eax, 0x65db0e8 ; add cl, cl ; ret
0x00000000004024c5 : add eax, 0x65e05e8 ; add cl, cl ; ret
0x00000000004023ea : add eax, 0x65ee0e8 ; add cl, cl ; ret
0x0000000000401fea : add eax, 0x662e0e8 ; add cl, cl ; ret
0x0000000000401f45 : add eax, 0x66385e8 ; add cl, cl ; ret
0x0000000000401d67 : add eax, 0x66563e8 ; add cl, cl ; ret
0x00000000004018c6 : add eax, 0x66a04e8 ; add cl, cl ; ret
0x000000000040187a : add eax, 0x66a50e8 ; add cl, cl ; ret
0x0000000000401782 : add eax, 0x66b48e8 ; add cl, cl ; ret
0x0000000000401714 : add eax, 0x66bb6e8 ; add cl, cl ; ret
0x0000000000401667 : add eax, 0x66c63e8 ; add cl, cl ; ret
0x00000000004011fb : add eax, 0x670cfe8 ; add cl, cl ; ret
0x0000000000400dab : add eax, 0x6751fe8 ; add cl, cl ; ret
0x0000000000440809 : add eax, 0x6c52 ; cmove rax, rdx ; ret
0x0000000000440419 : add eax, 0x6d12 ; cmove rax, rdx ; ret
0x00000000004ad801 : add eax, 0x6f0fffa ; cli ; call rax
0x00000000004ad7e1 : add eax, 0x700fffa ; cli ; jmp rax
0x0000000000414b3a : add eax, 0x742f3883 ; call 0xffffffffac2d154c
0x000000000044047d : add eax, 0x79ee ; je 0x440452 ; ret
0x0000000000446bb7 : add eax, 0x83480000 ; ret 0x4910
0x000000000045a4e1 : add eax, 0x83480000 ; ret 0xe910
0x0000000000446be5 : add eax, 0x83480000 ; ret 0xeb10
0x0000000000438e2e : add eax, 0x83480000 ; retf 0x4901
0x000000000047b485 : add eax, 0x83ffffef ; ret
0x000000000045fd5b : add eax, 0x8428d48 ; ret
0x0000000000428ea8 : add eax, 0x8944c689 ; ret 0xeab8
0x0000000000401a0a : add eax, 0x89480000 ; ret
0x0000000000475a93 : add eax, 0x89480000 ; ret 0x2948
0x00000000004019f8 : add eax, 0x89480000 ; ret 0x8d48
0x00000000004a8c20 : add eax, 0x89490000 ; ret 0x8349
0x00000000004443e8 : add eax, 0x894d0000 ; retf
0x00000000004713e7 : add eax, 0x89fffaba ; retf 0xe283
0x000000000049d0f8 : add eax, 0x940fc085 ; ret 0x3d
0x000000000048e8e9 : add eax, 0x9f2 ; cmove rax, rdx ; ret
0x000000000048fcf9 : add eax, 0xa22 ; cmove rax, rdx ; ret
0x0000000000406c62 : add eax, 0xa3298 ; ret
0x00000000004067c2 : add eax, 0xa361b ; ret
0x0000000000406512 : add eax, 0xa3879 ; ret
0x0000000000404802 : add eax, 0xa5491 ; ret
0x00000000004047f2 : add eax, 0xa5492 ; ret
0x0000000000404092 : add eax, 0xa5b29 ; ret
0x00000000004040a2 : add eax, 0xa5b41 ; ret
0x00000000004016c9 : add eax, 0xa8446 ; add rax, rdx ; jmp rax
0x0000000000402abb : add eax, 0xb8 ; add cl, cl ; ret
0x00000000004492aa : add eax, 0xc0310000 ; ret
0x000000000045fddd : add eax, 0xc428d48 ; ret
0x00000000004608bd : add eax, 0xc478d48 ; ret
0x0000000000404dd6 : add eax, 0xc7480000 ; ret 0x6e80
0x0000000000404e96 : add eax, 0xc7480000 ; ret 0x6f70
0x0000000000404ef6 : add eax, 0xc7480000 ; ret 0x6fb0
0x00000000004024c7 : add eax, 0xc900065e ; ret
0x0000000000472052 : add eax, 0xe9000000 ; ret
0x000000000048e8b9 : add eax, 0xee2 ; cmove rax, rdx ; ret
0x000000000041970a : add eax, 0xf7148948 ; ret
0x0000000000451713 : add eax, 0xf7f0ff3 ; ret
0x000000000041ba1a : add eax, 0xffff50e9 ; push rbx ; ret
0x0000000000403f15 : add eax, 0xffffffb0 ; ret
0x0000000000411723 : add eax, 1 ; jmp 0x4116f7
0x000000000041191b : add eax, 1 ; jmp 0x4118ef
0x0000000000411c8b : add eax, 1 ; jmp 0x411c5f
0x0000000000411d03 : add eax, 1 ; jmp 0x411cd7
0x0000000000411d7b : add eax, 1 ; jmp 0x411d4f
0x0000000000412053 : add eax, 1 ; jmp 0x412027
0x00000000004121bb : add eax, 1 ; jmp 0x41218f
0x00000000004122eb : add eax, 1 ; jmp 0x4122bf
0x0000000000412363 : add eax, 1 ; jmp 0x412337
0x00000000004123db : add eax, 1 ; jmp 0x4123af
0x0000000000412453 : add eax, 1 ; jmp 0x412427
0x00000000004124cb : add eax, 1 ; jmp 0x41249f
0x0000000000412543 : add eax, 1 ; jmp 0x412517
0x00000000004125bb : add eax, 1 ; jmp 0x41258f
0x0000000000412633 : add eax, 1 ; jmp 0x412607
0x00000000004126b3 : add eax, 1 ; jmp 0x412687
0x000000000041272b : add eax, 1 ; jmp 0x4126ff
0x00000000004127a3 : add eax, 1 ; jmp 0x412777
0x000000000041281b : add eax, 1 ; jmp 0x4127ef
0x0000000000412893 : add eax, 1 ; jmp 0x412867
0x000000000041290b : add eax, 1 ; jmp 0x4128df
0x0000000000412983 : add eax, 1 ; jmp 0x412957
0x0000000000412a7b : add eax, 1 ; jmp 0x412a4f
0x0000000000412bcb : add eax, 1 ; jmp 0x412b9f
0x0000000000412c43 : add eax, 1 ; jmp 0x412c17
0x0000000000412cbb : add eax, 1 ; jmp 0x412c8f
0x0000000000412d33 : add eax, 1 ; jmp 0x412d07
0x0000000000412dab : add eax, 1 ; jmp 0x412d7f
0x0000000000412e23 : add eax, 1 ; jmp 0x412df7
0x0000000000412e9b : add eax, 1 ; jmp 0x412e6f
0x0000000000413223 : add eax, 1 ; jmp 0x4131f7
0x000000000041329b : add eax, 1 ; jmp 0x41326f
0x00000000004134e3 : add eax, 1 ; jmp 0x4134b7
0x000000000041356b : add eax, 1 ; jmp 0x41353f
0x0000000000413b03 : add eax, 1 ; jmp 0x413ad7
0x000000000041409b : add eax, 1 ; jmp 0x41406f
0x000000000041410b : add eax, 1 ; jmp 0x4140df
0x000000000041426b : add eax, 1 ; jmp 0x41423f
0x00000000004142db : add eax, 1 ; jmp 0x4142af
0x000000000041440d : add eax, 1 ; jmp 0x4143e1
0x00000000004146f1 : add eax, 1 ; jmp 0x4146c5
0x000000000041545b : add eax, 1 ; jmp 0x41542f
0x00000000004154f3 : add eax, 1 ; jmp 0x4154c7
0x0000000000415573 : add eax, 1 ; jmp 0x415547
0x00000000004155f3 : add eax, 1 ; jmp 0x4155c7
0x00000000004158cb : add eax, 1 ; jmp 0x41589f
0x0000000000415943 : add eax, 1 ; jmp 0x415917
0x00000000004159c3 : add eax, 1 ; jmp 0x415997
0x0000000000415a43 : add eax, 1 ; jmp 0x415a17
0x0000000000415ac3 : add eax, 1 ; jmp 0x415a97
0x0000000000415b43 : add eax, 1 ; jmp 0x415b17
0x0000000000415bc3 : add eax, 1 ; jmp 0x415b97
0x000000000041621b : add eax, 1 ; jmp 0x4161e7
0x000000000041698b : add eax, 1 ; jmp 0x41695f
0x000000000046b485 : add eax, 1 ; push rax ; call rbx
0x0000000000490921 : add eax, 1 ; ret
0x0000000000490918 : add eax, 2 ; ret
0x0000000000490931 : add eax, 3 ; ret
0x00000000004777c9 : add eax, dword ptr [0] ; ret
0x0000000000407194 : add eax, dword ptr [rax - 0x18] ; ret
0x0000000000497748 : add eax, dword ptr [rax] ; add bl, dh ; ret
0x000000000040fd29 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret 0xc283
0x0000000000410870 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x63], cl ; retf 0x9848
0x00000000004a58e1 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x74], ah ; adc dword ptr [rcx - 0x7d], ecx ; ret
0x00000000004a5f3c : add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000046972e : add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; retf 0x8548
0x000000000040415b : add eax, dword ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0x8ec8
0x0000000000438428 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x0000000000436d76 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000041c1db : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x00000000004021f8 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000436efa : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000040195f : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000043bbfa : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000043bdc0 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000446d97 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045a681 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000446dc5 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000046c064 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004667cc : add eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x0000000000490973 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000465beb : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000446d48 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004c490d : add eax, dword ptr [rax] ; add byte ptr [rbx + rdx*8], ch ; jmp qword ptr [rsi]
0x000000000046446c : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe40], al ; ret 0xf8e9
0x00000000004a5ab0 : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x348b4cd8], cl ; ret 0xf41
0x000000000047e17d : add eax, dword ptr [rax] ; add byte ptr [rcx + 0xf], al ; ret 0xc839
0x0000000000468065 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x00000000004c492d : add eax, dword ptr [rax] ; add byte ptr [rdx], dh ; sal ebx, cl ; jmp qword ptr [rax]
0x0000000000468105 : add eax, dword ptr [rax] ; add byte ptr [rsi + 0x80], bh ; syscall
0x0000000000498686 : add eax, dword ptr [rax] ; add dh, dh ; ret 0x7403
0x0000000000436cf7 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf08
0x0000000000470ae8 : add eax, dword ptr [rax] ; mov edx, 0x180 ; call 0x41cdf9
0x0000000000470b0c : add eax, dword ptr [rax] ; mov edx, 0x19f ; call 0x41cdf9
0x0000000000470b2b : add eax, dword ptr [rax] ; mov edx, 0x1be ; call 0x41cdf9
0x000000000048af14 : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000048b65b : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000048b6c9 : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000464150 : add eax, dword ptr [rax] ; pop rbx ; ret
0x0000000000404626 : add eax, dword ptr [rax] ; test rax, rax ; je 0x404638 ; pop rbx ; ret
0x000000000049934c : add eax, dword ptr [rbp - 0xb8] ; call rax
0x00000000004d3971 : add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x000000000040093a : add eax, dword ptr [rcx + 0xf] ; xchg eax, esp ; rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x0000000000491afa : add eax, dword ptr [rcx + rdx] ; ret
0x0000000000470f20 : add eax, dword ptr [rcx - 0x77] ; retf
0x00000000004d4961 : add eax, dword ptr [rcx] ; add byte ptr [rbx + rdi*8], bl ; cld ; jmp qword ptr [rdx]
0x00000000004cccc2 : add eax, dword ptr [rdi + 0xe] ; and byte ptr [rdx], al ; imul ecx, dword ptr [rsi], 0x18 ; ret
0x000000000040ad35 : add eax, dword ptr [rdi] ; ret
0x00000000004a2d73 : add eax, dword ptr [rdx + 8] ; call rax
0x00000000004d39a5 : add eax, dword ptr [rdx] ; cld ; ret
0x00000000004d39d9 : add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004d19ea : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000004983c6 : add eax, dword ptr [rsi] ; call rax
0x0000000000403396 : add eax, eax ; jmp rax
0x000000000040d600 : add eax, ebp ; jmp rax
0x0000000000408653 : add eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000004a3460 : add eax, ebp ; retf 0xfff3
0x00000000004986e7 : add eax, ebx ; call rax
0x000000000046a11c : add eax, ebx ; jmp rax
0x00000000004087be : add eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000045c808 : add eax, ecx ; add rax, rdi ; vzeroupper ; ret
0x000000000040d504 : add eax, ecx ; jmp rax
0x00000000004471b9 : add eax, ecx ; ret
0x000000000045cb6d : add eax, ecx ; sub rax, rdx ; vzeroupper ; ret
0x00000000004476e6 : add eax, ecx ; vzeroupper ; ret
0x00000000004471b6 : add eax, edi ; add rax, rcx ; ret
0x00000000004476e3 : add eax, edi ; add rax, rcx ; vzeroupper ; ret
0x000000000041146f : add eax, edi ; jmp rax
0x00000000004473e4 : add eax, edi ; ret
0x00000000004a1360 : add eax, edi ; sub rax, r8 ; ret
0x000000000045cc25 : add eax, edi ; sub rax, rdx ; vzeroupper ; ret
0x0000000000462bca : add eax, edi ; sub rax, rsi ; ret
0x000000000044785a : add eax, edi ; vzeroupper ; ret
0x00000000004016cf : add eax, edx ; jmp rax
0x000000000040309e : add eax, edx ; leave ; ret
0x0000000000401c7e : add eax, edx ; pop rbp ; ret
0x000000000045cb16 : add eax, edx ; sub rax, rdi ; ret
0x000000000049061b : add eax, edx ; sub rax, rdi ; shr rax, 2 ; ret
0x00000000004109de : add eax, esi ; jmp rax
0x00000000004343fd : add eax, esi ; mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x0000000000407464 : add eax, esi ; ret
0x00000000004185bd : add eax, esp ; jmp rax
0x000000000047f498 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000004c0bb7 : add ebp, ebp ; retf
0x00000000004983c2 : add ebx, 0x18 ; add rax, qword ptr [r14] ; call rax
0x00000000004099aa : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000004a4730 : add ebx, dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x0000000000408675 : add ebx, dword ptr [rbx + 0x48] ; add eax, dword ptr [rax - 0x18] ; ret
0x0000000000432b11 : add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004d3996 : add ebx, dword ptr [rbx + 3] ; ret
0x000000000046acef : add ebx, dword ptr [rbx - 0x2d] ; loopne 0x46ad58 ; pop r12 ; ret
0x00000000004aba44 : add ebx, dword ptr [rdx] ; idiv edi ; ret 0xf719
0x000000000049e821 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000447fcb : add ebx, eax ; nop dword ptr [rax] ; ret
0x000000000041621d : add ebx, ebp ; ret
0x0000000000411725 : add ebx, ebp ; retf
0x00000000004518d3 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000040d739 : add ebx, esi ; ret
0x0000000000463d07 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x463cfc ; ret
0x000000000045e575 : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x0000000000473f4d : add ecx, dword ptr [rax + 0x39] ; ret
0x0000000000471ffd : add ecx, dword ptr [rax + 0x39] ; retf
0x000000000040d5f9 : add ecx, dword ptr [rax + 0x63] ; test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x000000000042939e : add ecx, dword ptr [rax + 1] ; fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000046ddaa : add ecx, dword ptr [rax - 0x77] ; and al, 0x50 ; call 0x46a088
0x000000000045e579 : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x000000000049a817 : add ecx, dword ptr [rax - 0x77] ; mov rax, rcx ; ret
0x000000000046c963 : add ecx, dword ptr [rax - 0x77] ; or byte ptr [r15], 0x8e ; ret 1
0x00000000004506f4 : add ecx, dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x000000000041807f : add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000429d91 : add ecx, dword ptr [rbp + rcx*4 + 0x64] ; ret
0x000000000049cdda : add ecx, dword ptr [rbp - 0x77] ; dec byte ptr [rax - 0x7d] ; ret
0x000000000049f2f0 : add ecx, dword ptr [rbp - 0x77] ; ret 0x8d48
0x0000000000451642 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004d3962 : add ecx, dword ptr [rbx + 3] ; ret
0x00000000004601f4 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000045e576 : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x0000000000464e0f : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x0000000000464e6d : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x00000000004cb7c1 : add ecx, dword ptr [rsi + rcx - 0x50] ; add al, byte ptr [rdx] ; ret 0xb00e
0x00000000004822c9 : add ecx, eax ; mov eax, r9d ; ret
0x0000000000470585 : add ecx, ebp ; retf 0xfff6
0x00000000004498db : add ecx, ebx ; jmp r9
0x0000000000448272 : add ecx, ebx ; jmp rcx
0x0000000000404291 : add ecx, edx ; mov qword ptr [rax], r9 ; jmp 0x404269
0x0000000000464124 : add ecx, esi ; jmp rcx
0x000000000041a5ce : add edi, dword ptr [rax + 4] ; jne 0x41a5f9 ; ret
0x0000000000476fa4 : add edi, ebx ; jmp rdi
0x00000000004498d8 : add edi, edx ; add r9, r11 ; jmp r9
0x00000000004ad901 : add edi, edx ; inc dword ptr [rax + 5] ; cli ; call qword ptr [rax]
0x000000000042885c : add edi, edx ; jmp rdi
0x0000000000440071 : add edi, esp ; dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x0000000000412f93 : add edx, 1 ; jmp 0x412f67
0x000000000040d83a : add edx, 1 ; mov qword ptr [r10 + 0x18], rdx ; ret
0x0000000000410792 : add edx, 1 ; mov qword ptr [rbx + 0x18], rdx ; pop rbx ; ret
0x000000000040d849 : add edx, 1 ; xor eax, eax ; mov qword ptr [r10 + 0x18], rdx ; ret
0x00000000004073b7 : add edx, dword ptr [rdx - 0x18] ; mov qword ptr [rdi], rdx ; ret
0x000000000040ad55 : add edx, dword ptr [rsi] ; mov rax, rdi ; mov qword ptr [rdi], rdx ; ret
0x000000000049f552 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x0000000000410d3f : add edx, ecx ; jmp rdx
0x00000000004ad95d : add edx, edi ; inc dword ptr [rax - 0x14] ; stc ; call qword ptr [rax]
0x0000000000428573 : add edx, edi ; jmp rdx
0x0000000000470f1a : add esi, dword ptr [rdi + 0xf] ; mov dh, 0x4e ; add eax, dword ptr [rcx - 0x77] ; retf
0x0000000000475356 : add esi, dword ptr [rdi + rax - 0xd] ; ret
0x0000000000476aa5 : add esi, eax ; jmp rsi
0x00000000004517f3 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000462f25 : add esi, ebx ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000408fec : add esi, ebx ; ret
0x0000000000404510 : add esi, ebx ; stosq qword ptr [rdi], rax ; mov rax, rdx ; pop rbx ; ret
0x000000000043ad20 : add esi, ebx ; stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000046422e : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x00000000004498d5 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000004c6c09 : add esi, esp ; call qword ptr [rbx]
0x00000000004c6bed : add esi, esp ; call qword ptr [rdx]
0x00000000004c6e9d : add esi, esp ; jmp qword ptr [rbx]
0x00000000004c6e39 : add esi, esp ; jmp qword ptr [rdi]
0x0000000000408ade : add esp, 0x10 ; mov rax, rbx ; pop rbx ; ret
0x0000000000432641 : add esp, 0x10 ; pop rbx ; jmp rax
0x0000000000403362 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000406d20 : add esp, 0x10 ; pop rbx ; ret
0x000000000042ddc5 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000462acd : add esp, 0x100 ; sub rax, rdx ; ret
0x000000000049e6f8 : add esp, 0x110 ; pop rbx ; ret
0x0000000000428eee : add esp, 0x118 ; ret
0x00000000004014a7 : add esp, 0x148 ; pop rbx ; pop rbp ; ret
0x0000000000477afa : add esp, 0x148 ; ret
0x0000000000436159 : add esp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000043b40b : add esp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000043ba26 : add esp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x00000000004035cc : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040193c : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000403510 : add esp, 0x18 ; ret
0x000000000043314d : add esp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x0000000000432d2d : add esp, 0x20 ; pop rbx ; jmp rax
0x0000000000433186 : add esp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000403141 : add esp, 0x20 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000040584f : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040563a : add esp, 0x20 ; pop rbx ; ret
0x0000000000401bee : add esp, 0x28 ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000406890 : add esp, 0x28 ; pop rbx ; pop rbp ; jmp rax
0x0000000000464c52 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040156e : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004197ab : add esp, 0x28 ; ret
0x000000000046c1f8 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a094f : add esp, 0x30 ; pop rbx ; ret
0x00000000004a6cc6 : add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x0000000000409d72 : add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004684c0 : add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000400c68 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004919b1 : add esp, 0x38 ; ret
0x0000000000402d77 : add esp, 0x40 ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000004a455c : add esp, 0x40 ; pop rbx ; ret
0x000000000049dc8c : add esp, 0x48 ; jmp qword ptr [rax]
0x00000000004652a2 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000400d2e : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000040239e : add esp, 0x50 ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000004a4643 : add esp, 0x50 ; pop rbx ; ret
0x000000000049dc1a : add esp, 0x58 ; jmp qword ptr [rax]
0x00000000004657fa : add esp, 0x58 ; ret
0x00000000004656ec : add esp, 0x68 ; ret
0x000000000048fe14 : add esp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000465a7f : add esp, 0x78 ; ret
0x0000000000484c2e : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x0000000000491493 : add esp, 0x80 ; pop rbx ; ret
0x0000000000431a18 : add esp, 0x80 ; ret
0x0000000000467cbd : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x000000000041c092 : add esp, 0x88 ; pop rbx ; ret
0x000000000041c80f : add esp, 0x98 ; ret
0x00000000004915b3 : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000474766 : add esp, 0xb8 ; pop rbx ; pop r12 ; ret
0x000000000042b627 : add esp, 0xd0 ; pop rbx ; ret
0x000000000042b7b6 : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000042b284 : add esp, 0xd8 ; ret
0x0000000000403f11 : add esp, 8 ; add rax, -0x50 ; ret
0x000000000040864f : add esp, 8 ; add rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000004087ba : add esp, 8 ; add rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000417309 : add esp, 8 ; and eax, 0xfffffffe ; ret
0x000000000042dacf : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000049bceb : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000042bb4e : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000467300 : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000408626 : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000004043a8 : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000408ed4 : add esp, 8 ; mov rax, rcx ; pop rbx ; pop rbp ; ret
0x00000000004326f9 : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000004a4499 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x00000000004067a0 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000004036f4 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000404279 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400413 : add esp, 8 ; ret
0x0000000000410739 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004c22ab : add esp, dword ptr [rbx + 0x74] ; or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf 0xbb9a
0x000000000047230a : add qword ptr [rax + 0x39], rcx ; retf
0x00000000004014a9 : add qword ptr [rax], rax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000470ede : add qword ptr [rcx - 0x77], r8 ; retf
0x00000000004518d2 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000451862 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000004c6c4c : add r14d, esp ; call qword ptr [rdx]
0x00000000004517f2 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000040b039 : add r15b, dil ; ret
0x0000000000446dc4 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000470f1f : add r8, qword ptr [rcx - 0x77] ; retf
0x000000000040fdee : add r8b, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret 0xc283
0x00000000004498da : add r9, r11 ; jmp r9
0x0000000000404290 : add r9, rdx ; mov qword ptr [rax], r9 ; jmp 0x40426a
0x00000000004c2069 : add r9b, bl ; retf 0xea91
0x0000000000473f2e : add r9b, byte ptr [rax + 0x39] ; ret
0x0000000000473f4c : add r9d, dword ptr [rax + 0x39] ; ret
0x00000000004822c8 : add r9d, eax ; mov eax, r9d ; ret
0x0000000000403f14 : add rax, -0x50 ; ret
0x0000000000405360 : add rax, 0x10 ; mov qword ptr [rbx], rax ; pop rbx ; ret
0x00000000004054b7 : add rax, 0x18 ; mov qword ptr [rdi], rax ; ret
0x00000000004055bd : add rax, 0x18 ; mov qword ptr [rsi], rax ; ret
0x0000000000411722 : add rax, 1 ; jmp 0x4116f8
0x000000000041191a : add rax, 1 ; jmp 0x4118f0
0x0000000000411c8a : add rax, 1 ; jmp 0x411c60
0x0000000000411d02 : add rax, 1 ; jmp 0x411cd8
0x0000000000411d7a : add rax, 1 ; jmp 0x411d50
0x0000000000412052 : add rax, 1 ; jmp 0x412028
0x00000000004121ba : add rax, 1 ; jmp 0x412190
0x00000000004122ea : add rax, 1 ; jmp 0x4122c0
0x0000000000412362 : add rax, 1 ; jmp 0x412338
0x00000000004123da : add rax, 1 ; jmp 0x4123b0
0x0000000000412452 : add rax, 1 ; jmp 0x412428
0x00000000004124ca : add rax, 1 ; jmp 0x4124a0
0x0000000000412542 : add rax, 1 ; jmp 0x412518
0x00000000004125ba : add rax, 1 ; jmp 0x412590
0x0000000000412632 : add rax, 1 ; jmp 0x412608
0x00000000004126b2 : add rax, 1 ; jmp 0x412688
0x000000000041272a : add rax, 1 ; jmp 0x412700
0x00000000004127a2 : add rax, 1 ; jmp 0x412778
0x000000000041281a : add rax, 1 ; jmp 0x4127f0
0x0000000000412892 : add rax, 1 ; jmp 0x412868
0x000000000041290a : add rax, 1 ; jmp 0x4128e0
0x0000000000412982 : add rax, 1 ; jmp 0x412958
0x0000000000412a7a : add rax, 1 ; jmp 0x412a50
0x0000000000412bca : add rax, 1 ; jmp 0x412ba0
0x0000000000412c42 : add rax, 1 ; jmp 0x412c18
0x0000000000412cba : add rax, 1 ; jmp 0x412c90
0x0000000000412d32 : add rax, 1 ; jmp 0x412d08
0x0000000000412daa : add rax, 1 ; jmp 0x412d80
0x0000000000412e22 : add rax, 1 ; jmp 0x412df8
0x0000000000412e9a : add rax, 1 ; jmp 0x412e70
0x0000000000413222 : add rax, 1 ; jmp 0x4131f8
0x000000000041329a : add rax, 1 ; jmp 0x413270
0x00000000004134e2 : add rax, 1 ; jmp 0x4134b8
0x000000000041356a : add rax, 1 ; jmp 0x413540
0x0000000000413b02 : add rax, 1 ; jmp 0x413ad8
0x000000000041409a : add rax, 1 ; jmp 0x414070
0x000000000041410a : add rax, 1 ; jmp 0x4140e0
0x000000000041426a : add rax, 1 ; jmp 0x414240
0x00000000004142da : add rax, 1 ; jmp 0x4142b0
0x000000000041440c : add rax, 1 ; jmp 0x4143e2
0x00000000004146f0 : add rax, 1 ; jmp 0x4146c6
0x000000000041545a : add rax, 1 ; jmp 0x415430
0x00000000004154f2 : add rax, 1 ; jmp 0x4154c8
0x0000000000415572 : add rax, 1 ; jmp 0x415548
0x00000000004155f2 : add rax, 1 ; jmp 0x4155c8
0x00000000004158ca : add rax, 1 ; jmp 0x4158a0
0x0000000000415942 : add rax, 1 ; jmp 0x415918
0x00000000004159c2 : add rax, 1 ; jmp 0x415998
0x0000000000415a42 : add rax, 1 ; jmp 0x415a18
0x0000000000415ac2 : add rax, 1 ; jmp 0x415a98
0x0000000000415b42 : add rax, 1 ; jmp 0x415b18
0x0000000000415bc2 : add rax, 1 ; jmp 0x415b98
0x000000000041621a : add rax, 1 ; jmp 0x4161e8
0x000000000041698a : add rax, 1 ; jmp 0x416960
0x0000000000490920 : add rax, 1 ; ret
0x0000000000490917 : add rax, 2 ; ret
0x0000000000490930 : add rax, 3 ; ret
0x00000000004777c8 : add rax, qword ptr [0] ; ret
0x00000000004983c5 : add rax, qword ptr [r14] ; call rax
0x0000000000407193 : add rax, qword ptr [rax - 0x18] ; ret
0x000000000049934b : add rax, qword ptr [rbp - 0xb8] ; call rax
0x000000000040ad34 : add rax, qword ptr [rdi] ; ret
0x00000000004a2d72 : add rax, qword ptr [rdx + 8] ; call rax
0x00000000004777c7 : add rax, qword ptr fs:[0] ; ret
0x00000000004986e6 : add rax, r11 ; call rax
0x00000000004185bc : add rax, r12 ; jmp rax
0x000000000041d4c3 : add rax, r13 ; jmp rax
0x0000000000418ebd : add rax, r14 ; jmp rax
0x000000000041756b : add rax, r15 ; jmp rax
0x0000000000403395 : add rax, r8 ; jmp rax
0x000000000040d503 : add rax, r9 ; jmp rax
0x000000000040d5ff : add rax, rbp ; jmp rax
0x0000000000408652 : add rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000046a11b : add rax, rbx ; jmp rax
0x00000000004087bd : add rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000045c807 : add rax, rcx ; add rax, rdi ; vzeroupper ; ret
0x0000000000410c04 : add rax, rcx ; jmp rax
0x00000000004471b8 : add rax, rcx ; ret
0x000000000045cb6c : add rax, rcx ; sub rax, rdx ; vzeroupper ; ret
0x00000000004476e5 : add rax, rcx ; vzeroupper ; ret
0x00000000004471b5 : add rax, rdi ; add rax, rcx ; ret
0x00000000004476e2 : add rax, rdi ; add rax, rcx ; vzeroupper ; ret
0x000000000041146e : add rax, rdi ; jmp rax
0x00000000004473e3 : add rax, rdi ; ret
0x00000000004a135f : add rax, rdi ; sub rax, r8 ; ret
0x000000000045cc24 : add rax, rdi ; sub rax, rdx ; vzeroupper ; ret
0x0000000000462bc9 : add rax, rdi ; sub rax, rsi ; ret
0x0000000000447859 : add rax, rdi ; vzeroupper ; ret
0x00000000004016ce : add rax, rdx ; jmp rax
0x000000000040309d : add rax, rdx ; leave ; ret
0x0000000000401c7d : add rax, rdx ; pop rbp ; ret
0x000000000045cb15 : add rax, rdx ; sub rax, rdi ; ret
0x00000000004109dd : add rax, rsi ; jmp rax
0x0000000000407463 : add rax, rsi ; ret
0x00000000004983c1 : add rbx, 0x18 ; add rax, qword ptr [r14] ; call rax
0x0000000000472329 : add rcx, qword ptr [rax + 0x39] ; retf
0x0000000000448271 : add rcx, r11 ; jmp rcx
0x0000000000464123 : add rcx, rsi ; jmp rcx
0x000000000042885b : add rdi, r10 ; jmp rdi
0x0000000000476fa3 : add rdi, r11 ; jmp rdi
0x00000000004498d7 : add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000412f92 : add rdx, 1 ; jmp 0x412f68
0x000000000040d839 : add rdx, 1 ; mov qword ptr [r10 + 0x18], rdx ; ret
0x0000000000410791 : add rdx, 1 ; mov qword ptr [rbx + 0x18], rdx ; pop rbx ; ret
0x00000000004073b6 : add rdx, qword ptr [rdx - 0x18] ; mov qword ptr [rdi], rdx ; ret
0x000000000040ad54 : add rdx, qword ptr [rsi] ; mov rax, rdi ; mov qword ptr [rdi], rdx ; ret
0x000000000049f551 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000410d3e : add rdx, rcx ; jmp rdx
0x0000000000428572 : add rdx, rdi ; jmp rdx
0x0000000000476aa4 : add rsi, r8 ; jmp rsi
0x00000000004c6c68 : add rsi, rsp ; call qword ptr [rbx]
0x0000000000408add : add rsp, 0x10 ; mov rax, rbx ; pop rbx ; ret
0x0000000000432640 : add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000403361 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000406d1f : add rsp, 0x10 ; pop rbx ; ret
0x000000000049e6f7 : add rsp, 0x110 ; pop rbx ; ret
0x0000000000428eed : add rsp, 0x118 ; ret
0x00000000004014a6 : add rsp, 0x148 ; pop rbx ; pop rbp ; ret
0x0000000000477af9 : add rsp, 0x148 ; ret
0x0000000000436158 : add rsp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000043b40a : add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000043ba25 : add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x000000000040193b : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040350f : add rsp, 0x18 ; ret
0x000000000043314c : add rsp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x0000000000432d2c : add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000433185 : add rsp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000403140 : add rsp, 0x20 ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000040584e : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000405639 : add rsp, 0x20 ; pop rbx ; ret
0x000000000040688f : add rsp, 0x28 ; pop rbx ; pop rbp ; jmp rax
0x000000000040156d : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004197aa : add rsp, 0x28 ; ret
0x000000000046c1f7 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a094e : add rsp, 0x30 ; pop rbx ; ret
0x00000000004a6cc5 : add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x0000000000400c67 : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004919b0 : add rsp, 0x38 ; ret
0x0000000000402d76 : add rsp, 0x40 ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000004a455b : add rsp, 0x40 ; pop rbx ; ret
0x000000000049dc8b : add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000400d2d : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000040239d : add rsp, 0x50 ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000004a4642 : add rsp, 0x50 ; pop rbx ; ret
0x000000000049dc19 : add rsp, 0x58 ; jmp qword ptr [rax]
0x00000000004657f9 : add rsp, 0x58 ; ret
0x00000000004656eb : add rsp, 0x68 ; ret
0x000000000048fe13 : add rsp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000465a7e : add rsp, 0x78 ; ret
0x0000000000491492 : add rsp, 0x80 ; pop rbx ; ret
0x0000000000431a17 : add rsp, 0x80 ; ret
0x0000000000467cbc : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x000000000041c091 : add rsp, 0x88 ; pop rbx ; ret
0x000000000041c80e : add rsp, 0x98 ; ret
0x00000000004915b2 : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x000000000042b626 : add rsp, 0xd0 ; pop rbx ; ret
0x000000000042b7b5 : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000042b283 : add rsp, 0xd8 ; ret
0x000000000040864e : add rsp, 8 ; add rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000004087b9 : add rsp, 8 ; add rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000417308 : add rsp, 8 ; and eax, 0xfffffffe ; ret
0x000000000042dace : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000049bcea : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000042bb4d : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004672ff : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000408625 : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000004043a7 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000408ed3 : add rsp, 8 ; mov rax, rcx ; pop rbx ; pop rbp ; ret
0x00000000004326f8 : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000004a4498 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x0000000000404278 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400412 : add rsp, 8 ; ret
0x0000000000410738 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000409d0c : add word ptr [rax], ax ; add byte ptr [rax - 0x77], cl ; retf
0x00000000004a142a : add word ptr [rdx + rax*2], 1 ; ret
0x000000000049b368 : and ah, byte ptr [rax + rax] ; ret
0x00000000004c46e4 : and al, 0 ; add byte ptr [rax], al ; in al, dx ; add byte ptr [rax], al ; add byte ptr [rdi], dl ; retf
0x00000000004c6a7d : and al, 0 ; add byte ptr [rax], dl ; add dh, ah ; call qword ptr [rdi]
0x00000000004c6a69 : and al, 0 ; add byte ptr [rdx + rax], al ; hlt ; call qword ptr [rbx]
0x000000000049b425 : and al, 0 ; add rsp, 8 ; ret
0x0000000000487bf1 : and al, 0 ; jmp rax
0x000000000049b4cf : and al, 0 ; mov qword ptr [rsi], rax ; ret
0x000000000048881a : and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000049b369 : and al, 0 ; ret
0x0000000000497bd2 : and al, 0 ; xor eax, eax ; add rsp, 8 ; ret
0x00000000004197a8 : and al, 0x10 ; add rsp, 0x28 ; ret
0x00000000004a4431 : and al, 0x10 ; call 0x4a0e64
0x000000000041b360 : and al, 0x10 ; call r14
0x0000000000466928 : and al, 0x10 ; call rax
0x000000000049e6bb : and al, 0x10 ; call rdx
0x00000000004389dc : and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000424848 : and al, 0x10 ; mov qword ptr [rsp + 8], rcx ; call 0x421359
0x000000000048e112 : and al, 0x10 ; mov rdi, r12 ; call rbx
0x000000000041b148 : and al, 0x10 ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000041f6c6 : and al, 0x18 ; call 0x43c0f4
0x000000000041c445 : and al, 0x18 ; call rax
0x00000000004917d0 : and al, 0x18 ; mov eax, 0x101 ; syscall
0x000000000046b408 : and al, 0x18 ; mov r9, r13 ; call rbx
0x000000000048e02d : and al, 0x18 ; mov rdi, r12 ; call rbx
0x000000000049032f : and al, 0x18 ; mov rdi, rbp ; mov r9, r14 ; call rbx
0x000000000049e6b6 : and al, 0x18 ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x00000000004c879c : and al, 0x1f ; hlt ; jmp qword ptr [rsi]
0x000000000046dae7 : and al, 0x20 ; call r15
0x000000000046fd1e : and al, 0x20 ; call rax
0x000000000048fff0 : and al, 0x20 ; call rbx
0x0000000000465b66 : and al, 0x20 ; je 0x465b99 ; mov eax, 0x48 ; syscall
0x000000000046d9b2 : and al, 0x20 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000004c8e3c : and al, 0x26 ; hlt ; call qword ptr [rdx]
0x00000000004c0de4 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x000000000043ba23 : and al, 0x28 ; add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x000000000046dae2 : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x000000000043e8d3 : and al, 0x28 ; mov rdi, rbp ; call rax
0x000000000046e3c3 : and al, 0x30 ; call r14
0x000000000046e59b : and al, 0x30 ; call rbx
0x00000000004901de : and al, 0x30 ; mov rdi, rbp ; call rbx
0x00000000004c7ab0 : and al, 0x35 ; add byte ptr [rax], al ; or al, 0xe ; hlt ; jmp qword ptr [rax]
0x000000000046f81a : and al, 0x38 ; add byte ptr [rsp + rsi - 0xa], dh ; ret
0x000000000046e885 : and al, 0x38 ; call r12
0x000000000046eebd : and al, 0x38 ; call r14
0x0000000000471e81 : and al, 0x38 ; call r15
0x000000000046e0cb : and al, 0x38 ; call rbx
0x000000000048fec8 : and al, 0x38 ; lea rcx, [rax + 1] ; call rbx
0x000000000046ddd7 : and al, 0x38 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000046e3be : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x000000000046e596 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000004c82b0 : and al, 0x3d ; add byte ptr [rax], al ; cld ; sbb esp, esi ; jmp qword ptr [rdx]
0x000000000048373c : and al, 0x40 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000473d9e : and al, 0x40 ; add byte ptr [rdx + rdi*2 - 0xa], dh ; ret
0x0000000000472b5e : and al, 0x40 ; add byte ptr [rsi + rsi*2 - 0xa], dh ; ret
0x000000000049dc89 : and al, 0x40 ; add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000049dc17 : and al, 0x40 ; add rsp, 0x58 ; jmp qword ptr [rax]
0x00000000004702fc : and al, 0x40 ; call r15
0x0000000000472aa8 : and al, 0x40 ; call rbx
0x000000000046fd19 : and al, 0x40 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000046e880 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x000000000046eeb8 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000471e7c : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x000000000046e0c6 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00000000004a2d71 : and al, 0x48 ; add eax, dword ptr [rdx + 8] ; call rax
0x0000000000432668 : and al, 0x48 ; add esp, 0x10 ; pop rbx ; jmp rax
0x00000000004a6da8 : and al, 0x48 ; add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x00000000004a6aac : and al, 0x48 ; add esp, 0x38 ; ret
0x000000000042f344 : and al, 0x48 ; mov edi, ebx ; call rax
0x000000000041a24e : and al, 0x48 ; mov edx, dword ptr [rbp] ; call r12
0x00000000004702f7 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000472aa3 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000041a1ff : and al, 0x4c ; lea esi, [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x00000000004a5cf7 : and al, 0x4c ; mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x00000000004a5ca5 : and al, 0x4c ; mov esi, esp ; mov edi, ebp ; call rax
0x000000000046ddae : and al, 0x50 ; call 0x46a084
0x000000000046ddad : and al, 0x50 ; call 0x46a085
0x000000000041c3f3 : and al, 0x60 ; call 0x428e04
0x000000000043c2eb : and al, 0x68 ; call rax
0x000000000040350c : and al, 0x75 ; add rsp, 0x18 ; ret
0x000000000047fe0e : and al, 0x83 ; ret
0x00000000004330cb : and al, 0x83 ; retf 0x4c01
0x000000000047445d : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004351d3 : and al, 0x89 ; adc byte ptr [r11 + 0x5d], r11b ; ret
0x000000000041faec : and al, 0x8c ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x000000000046e2de : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004a946b : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000004a8bcb : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x000000000046ed6b : and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000046e760 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000403896 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000474533 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x000000000041938b : and al, 0xbf ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x0000000000465c2c : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000465ad3 : and al, 0xc ; mov eax, 0x48 ; syscall
0x0000000000432652 : and al, 0xc ; mov qword ptr [rsp], rdi ; call 0x42e8e8
0x000000000041c440 : and al, 0xc ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000495dc0 : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000049209c : and al, 0xd ; add dword ptr [rbp + rcx*4 + 0xd], ecx ; retf 0x2b4
0x000000000042c085 : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xbc40
0x00000000004a6ea8 : and al, 0xd8 ; ret
0x00000000004a1be5 : and al, 0xe8 ; push rbp ; retf 0xfff9
0x0000000000434243 : and al, 0xe9 ; ret 0xfffd
0x000000000046f17e : and al, 0xf6 ; ret
0x00000000004ae5c9 : and al, 0xfb ; call qword ptr [rax]
0x00000000004ae5c1 : and al, 0xfb ; call rax
0x00000000004ae5c5 : and al, 0xfb ; push rax ; and al, 0xfb ; call qword ptr [rax]
0x00000000004c6bec : and al, 3 ; hlt ; call qword ptr [rdx]
0x0000000000432d5d : and al, 8 ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000042484d : and al, 8 ; call 0x421354
0x000000000042484c : and al, 8 ; call 0x421355
0x0000000000438ff6 : and al, 8 ; call 0x435294
0x000000000042923f : and al, 8 ; call rax
0x00000000004389e1 : and al, 8 ; call rcx
0x0000000000407f25 : and al, 8 ; je 0x407ef3 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000040cc58 : and al, 8 ; je 0x40cc20 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000466923 : and al, 8 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000042d0f0 : and al, 8 ; mov rdi, r15 ; call rax
0x00000000004ad6c8 : and al, ah ; stc ; inc dword ptr [rax] ; loop 0x4ad6cf ; jmp rax
0x000000000040e538 : and al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8b49
0x000000000047de11 : and al, byte ptr [rcx] ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000402ca6 : and al, byte ptr [rdx] ; add byte ptr [rax], al ; nop ; leave ; ret
0x000000000045cd7a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x00000000004ad698 : and al, ch ; stc ; jmp qword ptr [rax]
0x000000000043f683 : and al, ch ; xlatb ; ret
0x00000000004a38b7 : and ax, word ptr [rax] ; add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x0000000000485981 : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x000000000046fd1f : and bh, bh ; rol byte ptr [rbx - 0x76befb08], 1 ; ret 0x415f
0x00000000004ae585 : and bh, bl ; call qword ptr [rax]
0x00000000004ae579 : and bh, bl ; call rax
0x00000000004ae575 : and bh, bl ; inc eax ; and bh, bl ; call rax
0x00000000004ae57d : and bh, bl ; jmp rax
0x00000000004ae581 : and bh, bl ; push rax ; and bh, bl ; call qword ptr [rax]
0x000000000047d25a : and bl, byte ptr [rdi - 0x74b7ffdb] ; add al, 0xc7 ; jmp rax
0x000000000048b58b : and bl, ch ; retf 0x9066
0x000000000042d389 : and byte ptr [r11 + rcx*4 + 0x75], r9b ; sbb byte ptr [rax - 0x77], cl ; retf
0x000000000042d3b9 : and byte ptr [r8 + 1], r9b ; ret
0x0000000000437eaf : and byte ptr [r8 - 0x7d], r9b ; retf
0x000000000042d31e : and byte ptr [r9 - 0x77], r9b ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x00000000004476f6 : and byte ptr [rax + 0x29], cl ; retf 0x860f
0x000000000045c71a : and byte ptr [rax + 0x3a], al ; xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x000000000044786c : and byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x000000000042d3ba : and byte ptr [rax + 1], cl ; ret
0x000000000041c1e1 : and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000048283e : and byte ptr [rax + 9], cl ; ret 0xff83
0x000000000045c9e8 : and byte ptr [rax + 9], cl ; retf 0x8948
0x000000000045cb0d : and byte ptr [rax + 9], cl ; retf 0xf48
0x000000000048f94e : and byte ptr [rax + 9], cl ; retf 0xf4c
0x000000000049b4ce : and byte ptr [rax + rax], ah ; mov qword ptr [rsi], rax ; ret
0x00000000004c59ac : and byte ptr [rax + rax], dl ; add byte ptr [rax - 0x12], ah ; call qword ptr [rdi]
0x000000000046d9b3 : and byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000493328 : and byte ptr [rax - 0x75], cl ; sub byte ptr [rax + 0x39], r9b ; ret 0x870f
0x000000000040776f : and byte ptr [rax - 0x77], cl ; ret
0x00000000004771a4 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x4771b8 ; call rax
0x000000000046c6f6 : and byte ptr [rax - 0x7d], cl ; ret
0x0000000000419886 : and byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000484274 : and byte ptr [rax - 0x7d], cl ; ret 0xe920
0x0000000000437eb0 : and byte ptr [rax - 0x7d], cl ; retf
0x000000000040c43c : and byte ptr [rax - 1], al ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000042ee62 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000040e739 : and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b49
0x000000000047c54b : and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x0000000000419859 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000046420a : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004c6629 : and byte ptr [rax], al ; add byte ptr [rbp + rdi*8 - 0xd], dl ; call qword ptr [rdx]
0x00000000004c9b50 : and byte ptr [rax], bh ; hlt ; call qword ptr [rdi]
0x00000000004cfaac : and byte ptr [rbp + 0x6c600000], dh ; stc ; jmp qword ptr [rcx]
0x00000000004a972c : and byte ptr [rbp - 0x77], cl ; ret
0x00000000004a95f7 : and byte ptr [rbp - 0x77], cl ; retf 0x8b49
0x00000000004ae404 : and byte ptr [rbp - 0x78cf0006], al ; cli ; call rax
0x00000000004c2b88 : and byte ptr [rbx + 0x3d], bh ; retf
0x0000000000403143 : and byte ptr [rbx + 0x41], bl ; pop rsp ; pop rbp ; ret
0x0000000000405851 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000469b1b : and byte ptr [rbx + 4], bl ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004844d3 : and byte ptr [rbx + rcx*4 + 0x40], cl ; sub cl, ch ; ret 0xffe8
0x000000000042d38a : and byte ptr [rbx + rcx*4 + 0x75], cl ; sbb byte ptr [rax - 0x77], cl ; retf
0x00000000004addf8 : and byte ptr [rbx], dh ; cli ; jmp qword ptr [rax + 0x20fffa32]
0x000000000047a170 : and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000043314f : and byte ptr [rcx - 0x2dcea42f], cl ; jmp rax
0x000000000042d31f : and byte ptr [rcx - 0x77], cl ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x00000000004ade08 : and byte ptr [rcx], dh ; cli ; jmp qword ptr [rax + 0x20fffa30]
0x000000000049b604 : and byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret
0x0000000000463171 : and byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000042b7db : and byte ptr [rdi], cl ; test dword ptr [rsi - 0x77000000], esp ; ret 0xe281
0x0000000000460bc0 : and byte ptr [rdi], cl ; test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00000000004addf0 : and byte ptr [rdx + rdi*8], dh ; jmp qword ptr [rax + 0x20fffa33]
0x00000000004cccc5 : and byte ptr [rdx], al ; imul ecx, dword ptr [rsi], 0x18 ; ret
0x00000000004ade00 : and byte ptr [rdx], dh ; cli ; jmp qword ptr [rax + 0x20fffa31]
0x000000000044830a : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004d19ed : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000004aa70c : and byte ptr [rsi + rsi*8 - 1], dl ; adc byte ptr [rdx - 0xa], dl ; call qword ptr [rax]
0x00000000004d03ac : and byte ptr [rsi - 0x55b00000], bh ; stc ; call qword ptr [rax]
0x00000000004adbe4 : and byte ptr [rsi], dh ; cli ; jmp qword ptr [rax + 0x10fffa35]
0x0000000000490912 : and ch, 0xf ; je 0x490939 ; add rax, 2 ; ret
0x00000000004641c8 : and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x000000000044071a : and ch, 2 ; cmovne rax, rdx ; ret
0x000000000048f69b : and ch, al ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x00000000004ad640 : and ch, bl ; stc ; jmp rax
0x00000000004af968 : and ch, byte ptr [rcx - 0x57d70005] ; sti ; call rdx
0x00000000004aec00 : and ch, byte ptr [rcx - 5] ; call rdx
0x00000000004908fd : and cl, 0xf ; je 0x490925 ; ret
0x00000000004ad2ed : and cl, bh ; jmp qword ptr [rax]
0x000000000043379a : and cl, byte ptr [rax + 0x39] ; retf
0x00000000004692d1 : and cl, byte ptr [rax + 0x63] ; add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000049b404 : and cl, byte ptr [rax - 0x77] ; ret 0x1f0f
0x000000000043fe93 : and cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000447b4d : and cl, byte ptr [rcx - 0x77] ; ret
0x000000000048fcfa : and cl, byte ptr [rdx] ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000414f70 : and cl, ch ; cmc ; retf 0xffff
0x00000000004c8b49 : and dh, ah ; call qword ptr [rax]
0x00000000004c8b35 : and dh, ah ; call qword ptr [rsi]
0x000000000046503d : and dh, ah ; mov edi, edx ; mov eax, r8d ; syscall
0x00000000004ad694 : and dh, ah ; stc ; jmp qword ptr [rax]
0x0000000000468b49 : and dh, al ; sub byte ptr [rcx], al ; ret
0x00000000004c66d0 : and dh, bh ; call qword ptr [rdx]
0x00000000004cc36d : and dh, dh ; jmp rdi
0x0000000000485980 : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004c5d10 : and dl, dh ; call rax
0x00000000004c48c0 : and dl, dl ; call qword ptr [rsi]
0x00000000004854f8 : and dword ptr [r8], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000049b424 : and dword ptr [rax + rax], esp ; add rsp, 8 ; ret
0x000000000049b45d : and dword ptr [rax + rax], esp ; ret
0x00000000004854f9 : and dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00000000004c6701 : and dword ptr [rax], eax ; add byte ptr [rsi + rdi*8], bl ; call qword ptr [rbx]
0x00000000004c2902 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x00000000004ad534 : and dword ptr [rbp - 0x425e0007], edi ; stc ; jmp qword ptr [rcx]
0x0000000000433957 : and dword ptr [rbx], 0xffffffef ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004339af : and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004347de : and dword ptr [rdi], ecx ; mov dh, 0 ; ret
0x00000000004403f2 : and dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004bf9b9 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004ad53c : and dword ptr [rsi - 0x415e0007], edi ; stc ; jmp qword ptr [rcx]
0x00000000004c2901 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004777cb : and eax, 0 ; ret
0x00000000004c8da9 : and eax, 0x12fff4 ; add byte ptr [rax], al ; add al, 0xeb ; ret
0x00000000004c6ae9 : and eax, 0x2740000 ; hlt ; call qword ptr [rdx]
0x00000000004c6b05 : and eax, 0x2780000 ; hlt ; call qword ptr [rbx]
0x00000000004a037c : and eax, 0x28 ; jne 0x4a03c6 ; leave ; ret
0x00000000004c6b19 : and eax, 0x2840000 ; hlt ; call qword ptr [rdx]
0x00000000004c6b35 : and eax, 0x2880000 ; hlt ; call qword ptr [rbx]
0x00000000004c6b49 : and eax, 0x2940000 ; hlt ; call qword ptr [rdx]
0x00000000004c6b65 : and eax, 0x2980000 ; hlt ; call qword ptr [rbx]
0x00000000004c6b79 : and eax, 0x2a40000 ; hlt ; call qword ptr [rdx]
0x00000000004004c9 : and eax, 0x2d9bfa ; nop ; ret
0x0000000000429ca8 : and eax, 0x30 ; call rax
0x0000000000429be2 : and eax, 0x30 ; call rdx
0x0000000000429cce : and eax, 0x30 ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x0000000000438305 : and eax, 0x3948002a ; ret
0x000000000046414d : and eax, 0x3fc00 ; pop rbx ; ret
0x0000000000464198 : and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000047cd1a : and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000408ff7 : and eax, 0x48ffffff ; add esp, 8 ; ret
0x0000000000464243 : and eax, 0x7ff80000 ; div ecx ; mov eax, eax ; ret
0x00000000004641e7 : and eax, 0x7ff80000 ; ret
0x000000000047077b : and eax, 0x833fe283 ; retf 0x4180
0x00000000004680e7 : and eax, 0xc ; cmp eax, 4 ; je 0x4680f8 ; ret
0x0000000000402c66 : and eax, 0xc9000002 ; ret
0x000000000041730c : and eax, 0xfffffffe ; ret
0x000000000040d737 : and eax, 1 ; ret
0x000000000049e81c : and eax, 2 ; sub eax, 1 ; ret
0x00000000004c68ed : and eax, dword ptr [rax] ; add byte ptr [rax - 1], al ; call qword ptr [rbx]
0x00000000004c68a5 : and eax, dword ptr [rax] ; add byte ptr [rax - 1], cl ; call qword ptr [rdi]
0x00000000004a38b8 : and eax, dword ptr [rax] ; add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x00000000004c6901 : and eax, dword ptr [rax] ; add byte ptr [rdi + rdi*8 - 0xd], cl ; call qword ptr [rdi]
0x00000000004c6891 : and eax, dword ptr [rax] ; add byte ptr [rdi + rdi*8], bh ; call qword ptr [rbx]
0x00000000004a0a41 : and eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00000000004a1428 : and eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000004a3803 : and eax, dword ptr [rax] ; jne 0x4a3833 ; ret
0x00000000004a7523 : and eax, dword ptr [rax] ; jne 0x4a750d ; pop rbx ; ret
0x00000000004a0e7a : and eax, dword ptr [rax] ; mov qword ptr [rax], rdx ; add rsp, 8 ; ret
0x00000000004a0a55 : and eax, dword ptr [rax] ; mov qword ptr [rip + 0x23c9ca], rax ; ret
0x00000000004a0a5c : and eax, dword ptr [rax] ; ret
0x000000000046f56e : and eax, dword ptr [rip + 0x29480000] ; ret 0x349
0x0000000000433958 : and ebp, edi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004339b0 : and ebp, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000468082 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x468095 ; ret
0x00000000004c10b4 : and ebx, dword ptr [rbx] ; xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x0000000000449885 : and ecx, 0xff ; sub eax, ecx ; ret
0x0000000000448fb8 : and ecx, 0xffff ; sub eax, ecx ; ret
0x000000000046764a : and ecx, dword ptr [rax - 0x77] ; ret 0xabe
0x0000000000499893 : and ecx, dword ptr [rdx + 2] ; add byte ptr [rax + 0x15], bh ; syscall
0x00000000004ae5a9 : and edi, ebx ; call qword ptr [rax]
0x00000000004ae5a1 : and edi, ebx ; call rax
0x00000000004ae59d : and edi, ebx ; inc eax ; and edi, ebx ; call rax
0x00000000004ae5a5 : and edi, ebx ; push rax ; and edi, ebx ; call qword ptr [rax]
0x00000000004c3b88 : and edx, esp ; std ; jmp qword ptr [rbx]
0x00000000004c53d0 : and esi, ebx ; jmp qword ptr [rdx]
0x00000000004c8c01 : and esi, esp ; jmp qword ptr [rdx]
0x00000000004aa8ac : and esp, dword ptr [rbp - 0xa] ; jmp qword ptr [rbx]
0x000000000049b423 : and qword ptr [r8 + rax], rsp ; add rsp, 8 ; ret
0x0000000000468b48 : and sil, al ; sub byte ptr [rcx], al ; ret
0x0000000000490457 : bnd je 0x490466 ; test edx, edx ; jne 0x490458 ; ret
0x00000000004474ba : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x00000000004473e0 : bsf eax, eax ; add rax, rdi ; ret
0x00000000004478d1 : bsf eax, eax ; add rax, rdi ; vzeroupper ; ret
0x00000000004473f0 : bsf eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x0000000000447400 : bsf eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x00000000004473d0 : bsf eax, eax ; lea rax, [rax + rdi - 0x10] ; ret
0x000000000044732f : bsf eax, eax ; lea rax, [rdi + rax + 0x30] ; ret
0x000000000045c393 : bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x000000000045c9b6 : bsf eax, edx ; ret
0x0000000000490507 : bsf eax, edx ; shr rax, 2 ; ret
0x000000000045cb12 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x000000000045c4b0 : bsf rax, rax ; lea rax, [rdi + rax] ; ret
0x000000000045ca02 : bsf rax, rdx ; ret
0x0000000000490506 : bsf rax, rdx ; shr rax, 2 ; ret
0x000000000048f337 : bsr eax, eax ; add rax, rdi ; ret
0x000000000048f5bb : bsr eax, esi ; add rax, rdi ; ret
0x000000000048f4c9 : bsr esi, esi ; lea rax, [rcx + rsi] ; ret
0x000000000048f3c5 : bsr esi, esi ; lea rax, [rdi + rsi] ; ret
0x000000000048f336 : bsr rax, rax ; add rax, rdi ; ret
0x000000000048f5ba : bsr rax, rsi ; add rax, rdi ; ret
0x000000000048f4c8 : bsr rsi, rsi ; lea rax, [rcx + rsi] ; ret
0x000000000048f3c4 : bsr rsi, rsi ; lea rax, [rdi + rsi] ; ret
0x00000000004aa69c : call 0x114a9cf8
0x00000000004aa720 : call 0x114a9d7c
0x00000000004c6428 : call 0x134c582a
0x00000000004d1638 : call 0x144d10bf
0x0000000000486056 : call 0x21486054
0x00000000004861cc : call 0x214861ca
0x000000000048645b : call 0x21486459
0x0000000000486920 : call 0x2148691e
0x0000000000486ade : call 0x21486adc
0x00000000004870af : call 0x214870ad
0x00000000004872e8 : call 0x214872e6
0x00000000004cec38 : call 0x244ce35b
0x00000000004939f0 : call 0x40043a
0x00000000004a39bc : call 0x40048a
0x000000000040899c : call 0x404c92
0x0000000000410cd6 : call 0x40d722
0x0000000000470aef : call 0x41cdf2
0x00000000004a0b4d : call 0x41ce42
0x000000000042484f : call 0x421352
0x000000000041c3f5 : call 0x428e02
0x0000000000432658 : call 0x42e8e2
0x00000000004a8fa7 : call 0x435272
0x0000000000438ff8 : call 0x435292
0x000000000043da75 : call 0x439cb2
0x000000000047ed9f : call 0x43b832
0x000000000041f6c8 : call 0x43c0f2
0x0000000000482392 : call 0x43e642
0x000000000049fb58 : call 0x45be47
0x000000000047b568 : call 0x467fd2
0x000000000042b5a2 : call 0x468012
0x000000000042b608 : call 0x468042
0x000000000046ddb0 : call 0x46a082
0x000000000046adda : call 0x477872
0x000000000047d842 : call 0x479ae2
0x00000000004a4433 : call 0x4a0e62
0x00000000004c225a : call 0xffffffffab59ed50
0x0000000000414b3f : call 0xffffffffac2d1547
0x000000000040dd4c : call 0xffffffffc342bdd8
0x00000000004073b9 : call 0xffffffffc357fd0a
0x00000000004073f9 : call 0xffffffffc357fd4a
0x0000000000439c30 : call 0xffffffffc37ce43a
0x000000000043aff9 : call 0xffffffffc37cf803
0x0000000000486eee : call 0xffffffffc3cc6ef6
0x000000000045ce67 : call 0xffffffffc41657b8
0x0000000000408fea : call 0xffffffffc4339365
0x000000000045cd87 : call 0xffffffffc43e56d8
0x0000000000467305 : call 0xffffffffe145d068
0x0000000000433d58 : call 2
0x00000000004a5b50 : call qword ptr [r14]
0x00000000004aa6f7 : call qword ptr [rax + 0x10fff653]
0x00000000004adc07 : call qword ptr [rax + 0x10fffa31]
0x00000000004adbff : call qword ptr [rax + 0x10fffa32]
0x00000000004adbf7 : call qword ptr [rax + 0x10fffa33]
0x00000000004adbef : call qword ptr [rax + 0x10fffa34]
0x00000000004ae363 : call qword ptr [rax + 0x10fffa38]
0x00000000004ae327 : call qword ptr [rax + 0x10fffa39]
0x00000000004ae36b : call qword ptr [rax + 0x10fffa3b]
0x00000000004ae32f : call qword ptr [rax + 0x10fffa3c]
0x00000000004ae373 : call qword ptr [rax + 0x10fffa3e]
0x00000000004ae337 : call qword ptr [rax + 0x10fffa3f]
0x00000000004ae37b : call qword ptr [rax + 0x10fffa41]
0x00000000004ae33f : call qword ptr [rax + 0x10fffa42]
0x00000000004ae383 : call qword ptr [rax + 0x10fffa44]
0x00000000004ae347 : call qword ptr [rax + 0x10fffa45]
0x00000000004ae38b : call qword ptr [rax + 0x10fffa47]
0x00000000004ae34f : call qword ptr [rax + 0x10fffa48]
0x00000000004ae393 : call qword ptr [rax + 0x10fffa4a]
0x00000000004ae357 : call qword ptr [rax + 0x10fffa4b]
0x00000000004ad2eb : call qword ptr [rax + 0x20fff920]
0x00000000004ad63b : call qword ptr [rax + 0x20fff9ea]
0x00000000004ad9d7 : call qword ptr [rax + 0x20fffa39]
0x00000000004adbaf : call qword ptr [rax + 0x20fffa3d]
0x00000000004adecf : call qword ptr [rax + 0x20fffa60]
0x00000000004ae0a7 : call qword ptr [rax + 0x20fffa64]
0x00000000004ae4d7 : call qword ptr [rax + 0x20fffada]
0x00000000004ad983 : call qword ptr [rax - 0x1f000607]
0x00000000004ad92f : call qword ptr [rax - 0x1f00060e]
0x00000000004ad7b7 : call qword ptr [rax - 0x1f000633]
0x00000000004ad763 : call qword ptr [rax - 0x1f00063a]
0x00000000004aab73 : call qword ptr [rax - 0x2f00098b]
0x0000000000417497 : call qword ptr [rax]
0x0000000000429da0 : call qword ptr [rbx]
0x0000000000416c54 : call qword ptr [rcx]
0x00000000004a9b9f : call qword ptr [rdi]
0x00000000004ada83 : call qword ptr [rdx + 0x22fffa3b]
0x00000000004adf7b : call qword ptr [rdx + 0x22fffa62]
0x00000000004ada63 : call qword ptr [rdx]
0x00000000004ad587 : call qword ptr [rsi + 0x26fff9bf]
0x00000000004adf17 : call qword ptr [rsi + 0x26fffa5f]
0x00000000004a5b51 : call qword ptr [rsi]
0x00000000004987a7 : call r10
0x00000000004009ac : call r11
0x000000000041a207 : call r12
0x000000000041943b : call r14
0x000000000041a156 : call r15
0x0000000000400410 : call rax
0x00000000004009ad : call rbx
0x00000000004389e3 : call rcx
0x00000000004048f4 : call rdi
0x0000000000429be7 : call rdx
0x000000000041943c : call rsi
0x000000000041a208 : call rsp
0x0000000000444e97 : cdq ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000418af4 : cdq ; add rax, r9 ; jmp rax
0x00000000004a9ba1 : cdq ; cmc ; call qword ptr [rdi]
0x00000000004c2160 : cdq ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000401b93 : cdq ; or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000004346a3 : cdq ; pop rdx ; sub al, byte ptr [rax] ; ret
0x000000000044eed3 : cdq ; ret 0x28
0x000000000047d843 : cdq ; ret 0xffff
0x00000000004ab3d4 : cdq ; retf 0xfff6
0x000000000042238b : cdq ; sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe07], al ; retf 0x1b
0x000000000040d7f5 : cdqe ; mov qword ptr [r10 + 8], rax ; mov rax, r10 ; ret
0x0000000000499839 : clc ; add al, 0x75 ; retf
0x0000000000494024 : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000486161 : clc ; add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x000000000043903a : clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x0000000000438c97 : clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x0000000000401ce0 : clc ; add cl, byte ptr [rax - 0x77] ; ret 0x8b48
0x000000000049a773 : clc ; add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x00000000004287cd : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000004a472f : clc ; add ebx, dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x000000000046c962 : clc ; add ecx, dword ptr [rax - 0x77] ; or byte ptr [r15], 0x8e ; ret 1
0x00000000004471b7 : clc ; add rax, rcx ; ret
0x00000000004476e4 : clc ; add rax, rcx ; vzeroupper ; ret
0x00000000004073b5 : clc ; add rdx, qword ptr [rdx - 0x18] ; mov qword ptr [rdi], rdx ; ret
0x00000000004ceeca : clc ; call qword ptr [rax]
0x00000000004c623d : clc ; call qword ptr [rdx]
0x000000000043edd8 : clc ; cmovne rax, rcx ; ret
0x0000000000449829 : clc ; cmp rcx, rax ; jne 0x44985b ; xor eax, eax ; ret
0x0000000000449828 : clc ; cmp rcx, rax ; jne 0x44985c ; xor eax, eax ; ret
0x00000000004798ce : clc ; dec dword ptr [rax + 0x29] ; ret
0x000000000049b9f0 : clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x000000000043f7a0 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000041af9a : clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000042c0b9 : clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x000000000042d10d : clc ; dec dword ptr [rax - 0x77] ; retf
0x0000000000479075 : clc ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a9565 : clc ; dec dword ptr [rcx - 0x73] ; and byte ptr [rax - 0x7d], cl ; retf
0x000000000047de16 : clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000047bdbe : clc ; dec dword ptr [rdi] ; test dword ptr [rsi - 0x16000007], esi ; ret
0x000000000047b173 : clc ; idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x00000000004763d2 : clc ; inc dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000040d573 : clc ; je 0x40d587 ; mov rax, rsi ; ret
0x00000000004641ea : clc ; jg 0x4641b9 ; mov eax, 0x80 ; pop rbx ; ret
0x0000000000464246 : clc ; jg 0x464246 ; int1 ; mov eax, eax ; ret
0x0000000000470c77 : clc ; jg 0x470c06 ; ret 0xdb76
0x0000000000470c77 : clc ; jg 0x470c0a ; ret 0xdb76
0x00000000004ceede : clc ; jmp qword ptr [rsi]
0x0000000000411470 : clc ; jmp rax
0x00000000004cef18 : clc ; lahf ; clc ; call qword ptr [rax]
0x0000000000401de0 : clc ; leave ; ret
0x00000000004c0dc2 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000042e964 : clc ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000402c33 : clc ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x0000000000402808 : clc ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040199c : clc ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x0000000000401d20 : clc ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x0000000000402e77 : clc ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x000000000044b327 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000044bc97 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000450be7 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000044be97 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000450b57 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000044c097 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000450ac7 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000044b343 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000463d2e : clc ; mov qword ptr [rdi], rcx ; ret
0x0000000000463ead : clc ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x00000000004073c5 : clc ; mov qword ptr [rdi], rdx ; ret
0x000000000045457c : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000462fba : clc ; mov qword ptr [rdi], rsi ; ret
0x000000000040284b : clc ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x0000000000402847 : clc ; mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x0000000000401deb : clc ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000419c01 : clc ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000402b93 : clc ; nop ; pop rbp ; ret
0x00000000004046de : clc ; nop ; pop rbx ; ret
0x000000000042e97c : clc ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000436ba6 : clc ; pop rbp ; pop r12 ; ret
0x0000000000401d76 : clc ; pop rbp ; ret
0x000000000048d9d7 : clc ; push qword ptr [rbp + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x0000000000407820 : clc ; push qword ptr [rbp - 0x14] ; ret
0x000000000040c562 : clc ; push qword ptr [rbp - 0x16] ; ret
0x0000000000491583 : clc ; push qword ptr [rdi + rax*2 - 0x77] ; ret 0xe283
0x0000000000404673 : clc ; ret
0x000000000045ad04 : clc ; rol ch, 1 ; jns 0x45ace5 ; retf 0xead3
0x000000000045ae54 : clc ; rol ch, 1 ; jns 0x45ae35 ; retf 0xead3
0x000000000045afa4 : clc ; rol ch, 1 ; jns 0x45af85 ; retf 0xead3
0x000000000045b0f4 : clc ; rol ch, 1 ; jns 0x45b0d5 ; retf 0xead3
0x000000000045b244 : clc ; rol ch, 1 ; jns 0x45b225 ; retf 0xead3
0x000000000045b394 : clc ; rol ch, 1 ; jns 0x45b375 ; retf 0xead3
0x000000000045b4e4 : clc ; rol ch, 1 ; jns 0x45b4c5 ; retf 0xead3
0x000000000045b634 : clc ; rol ch, 1 ; jns 0x45b615 ; retf 0xead3
0x000000000045b784 : clc ; rol ch, 1 ; jns 0x45b765 ; retf 0xead3
0x000000000045b8d4 : clc ; rol ch, 1 ; jns 0x45b8b5 ; retf 0xead3
0x000000000045ba24 : clc ; rol ch, 1 ; jns 0x45ba05 ; retf 0xead3
0x000000000045bb74 : clc ; rol ch, 1 ; jns 0x45bb55 ; retf 0xead3
0x000000000045bcc4 : clc ; rol ch, 1 ; jns 0x45bca5 ; retf 0xead3
0x000000000045be14 : clc ; rol ch, 1 ; jns 0x45bdf5 ; retf 0xead3
0x000000000045bf64 : clc ; rol ch, 1 ; jns 0x45bf45 ; retf 0xead3
0x0000000000468381 : clc ; ror ax, 8 ; ret
0x000000000049eeea : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000049061f : clc ; shr rax, 2 ; ret
0x00000000004ad981 : clc ; stc ; call qword ptr [rax - 0x1f000607]
0x000000000049db5d : clc ; std ; jbe 0x49db6d ; ret
0x00000000004be1e8 : clc ; stosd dword ptr [rdi], eax ; std ; jmp rax
0x00000000004a1361 : clc ; sub rax, r8 ; ret
0x000000000045cc26 : clc ; sub rax, rdx ; vzeroupper ; ret
0x0000000000462bcb : clc ; sub rax, rsi ; ret
0x00000000004093a2 : clc ; test eax, eax ; jg 0x409364 ; jmp 0x409372
0x00000000004093a1 : clc ; test eax, eax ; jg 0x409365 ; jmp 0x409373
0x000000000044785b : clc ; vzeroupper ; ret
0x0000000000404919 : clc ; xchg qword ptr [rdx], rax ; ret
0x0000000000406812 : clc ; xchg qword ptr [rip + 0x2d5c86], rax ; ret
0x00000000004d4255 : cld ; add byte ptr [rax], al ; or al, cl ; cld ; jmp qword ptr [rdx]
0x00000000004d418d : cld ; add byte ptr [rax], al ; ret 0xfffc
0x000000000046414f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x0000000000487bf0 : cld ; and al, 0 ; jmp rax
0x00000000004bcdaa : cld ; call qword ptr [rax]
0x00000000004c6589 : cld ; call qword ptr [rdx]
0x00000000004d3a6e : cld ; call rdx
0x00000000004b089e : cld ; call rsp
0x00000000004d4a01 : cld ; cld ; jmp qword ptr [rcx]
0x00000000004b0894 : cld ; cld ; jmp rsp
0x00000000004ada5c : cld ; cmp dl, bh ; jmp qword ptr [rdx + 0x12fffa38]
0x0000000000434f5d : cld ; dec dword ptr [rax - 0x77] ; ret
0x0000000000465242 : cld ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000440072 : cld ; dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x0000000000497d2e : cld ; inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x000000000046422c : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000046419a : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004b084a : cld ; jmp qword ptr [rax]
0x00000000004d3a5a : cld ; jmp qword ptr [rcx]
0x00000000004d425a : cld ; jmp qword ptr [rdx]
0x00000000004d3b3a : cld ; jmp qword ptr [rsi]
0x00000000004d4332 : cld ; jmp rdx
0x00000000004b0896 : cld ; jmp rsp
0x00000000004c1b45 : cld ; lodsb al, byte ptr [rsi] ; loop 0x4c1b14 ; retf
0x000000000044bab2 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000044bcb5 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000044beb5 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000044c0b5 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000463d36 : cld ; mov dword ptr [rdi], ecx ; ret
0x0000000000463eb8 : cld ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x000000000045458e : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000462fc8 : cld ; mov dword ptr [rdi], esi ; ret
0x0000000000462fc2 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000044b6e6 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000450d76 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000044b8c6 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000450cf6 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000044baa6 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000450c76 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000044b506 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000450df6 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000465d37 : cld ; mov rdi, r12 ; mov eax, 0x4f ; syscall
0x00000000004b0846 : cld ; push qword ptr [rax + 0x62] ; cld ; jmp qword ptr [rax]
0x00000000004b0842 : cld ; push qword ptr [rax] ; movsxd rdi, esp ; push qword ptr [rax + 0x62] ; cld ; jmp qword ptr [rax]
0x000000000044b391 : cld ; ret
0x0000000000470af0 : cld ; ret 0xfffa
0x0000000000424850 : cld ; retf 0xffff
0x00000000004c82b4 : cld ; sbb esp, esi ; jmp qword ptr [rdx]
0x00000000004c0263 : cld ; shr al, cl ; add al, 0x3d ; retf
0x00000000004c0276 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000463852 : cld ; vzeroupper ; ret
0x00000000004856b5 : cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x000000000042d472 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000463d21 : cli ; add dword ptr [rdi + 0x15], esi ; jb 0x463d31 ; mov byte ptr [rdi], cl ; ret
0x0000000000462d1b : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x00000000004545ac : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000464e0e : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x0000000000464e6c : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x00000000004c2259 : cli ; call 0xffffffffab59ed51
0x00000000004adc06 : cli ; call qword ptr [rax + 0x10fffa31]
0x00000000004adbfe : cli ; call qword ptr [rax + 0x10fffa32]
0x00000000004adbf6 : cli ; call qword ptr [rax + 0x10fffa33]
0x00000000004adbee : cli ; call qword ptr [rax + 0x10fffa34]
0x00000000004ae362 : cli ; call qword ptr [rax + 0x10fffa38]
0x00000000004ae326 : cli ; call qword ptr [rax + 0x10fffa39]
0x00000000004ae36a : cli ; call qword ptr [rax + 0x10fffa3b]
0x00000000004ae32e : cli ; call qword ptr [rax + 0x10fffa3c]
0x00000000004ae372 : cli ; call qword ptr [rax + 0x10fffa3e]
0x00000000004ae336 : cli ; call qword ptr [rax + 0x10fffa3f]
0x00000000004ae37a : cli ; call qword ptr [rax + 0x10fffa41]
0x00000000004ae33e : cli ; call qword ptr [rax + 0x10fffa42]
0x00000000004ae382 : cli ; call qword ptr [rax + 0x10fffa44]
0x00000000004ae346 : cli ; call qword ptr [rax + 0x10fffa45]
0x00000000004ae38a : cli ; call qword ptr [rax + 0x10fffa47]
0x00000000004ae34e : cli ; call qword ptr [rax + 0x10fffa48]
0x00000000004ae392 : cli ; call qword ptr [rax + 0x10fffa4a]
0x00000000004ae356 : cli ; call qword ptr [rax + 0x10fffa4b]
0x00000000004ad9d6 : cli ; call qword ptr [rax + 0x20fffa39]
0x00000000004adbae : cli ; call qword ptr [rax + 0x20fffa3d]
0x00000000004adece : cli ; call qword ptr [rax + 0x20fffa60]
0x00000000004ae0a6 : cli ; call qword ptr [rax + 0x20fffa64]
0x00000000004ae4d6 : cli ; call qword ptr [rax + 0x20fffada]
0x00000000004ad81e : cli ; call qword ptr [rax]
0x00000000004d163a : cli ; call qword ptr [rbx]
0x00000000004d133a : cli ; call qword ptr [rcx]
0x00000000004d1322 : cli ; call qword ptr [rdi]
0x00000000004ada82 : cli ; call qword ptr [rdx + 0x22fffa3b]
0x00000000004adf7a : cli ; call qword ptr [rdx + 0x22fffa62]
0x00000000004ada62 : cli ; call qword ptr [rdx]
0x00000000004adf16 : cli ; call qword ptr [rsi + 0x26fffa5f]
0x00000000004ad9fe : cli ; call qword ptr [rsi]
0x00000000004ad806 : cli ; call rax
0x00000000004ada92 : cli ; call rdx
0x00000000004ad9ee : cli ; call rsi
0x00000000004adb5a : cli ; call rsp
0x0000000000468df5 : cli ; cmp eax, 0x83497174 ; ret
0x000000000049b590 : cli ; dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000048dc27 : cli ; dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x00000000004adb9a : cli ; dec edx ; cmp dl, bh ; push qword ptr [rax + 0x38] ; cli ; jmp rax
0x00000000004ad8ba : cli ; inc dword ptr [rax + 0x10fffa11] ; add al, 0xfa ; call rax
0x00000000004ad8da : cli ; inc dword ptr [rax + 0x11] ; cli ; call rax
0x00000000004adbba : cli ; inc dword ptr [rax + 0x3c] ; cli ; call rax
0x00000000004ad9a2 : cli ; inc dword ptr [rax + 0x3f] ; cli ; call rax
0x00000000004adeda : cli ; inc dword ptr [rax + 0x5f] ; cli ; call rsi
0x00000000004ae0b2 : cli ; inc dword ptr [rax + 0x63] ; cli ; call rax
0x00000000004ad86a : cli ; inc dword ptr [rax + 0xa] ; cli ; jmp qword ptr [rax]
0x00000000004ad8d6 : cli ; inc dword ptr [rax + 0xf] ; cli ; inc dword ptr [rax + 0x11] ; cli ; call rax
0x00000000004ad902 : cli ; inc dword ptr [rax + 5] ; cli ; call qword ptr [rax]
0x00000000004ad95e : cli ; inc dword ptr [rax - 0x14] ; stc ; call qword ptr [rax]
0x00000000004ae4d2 : cli ; inc dword ptr [rax - 0x27] ; cli ; call qword ptr [rax + 0x20fffada]
0x00000000004ae4a2 : cli ; inc dword ptr [rax - 0x2f000537] ; retf 0xfffa
0x00000000004ad816 : cli ; inc dword ptr [rax - 0x7f0005f0] ; adc bh, dl ; call qword ptr [rax]
0x00000000004ad8b6 : cli ; inc dword ptr [rax - 0x7f0005f1] ; adc edx, edi ; call qword ptr [rax]
0x00000000004ae04e : cli ; inc dword ptr [rax - 6] ; call rsp
0x00000000004adbaa : cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax + 0x20fffa3d]
0x00000000004ae0a2 : cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax + 0x20fffa64]
0x00000000004ad9d2 : cli ; inc dword ptr [rax] ; cmp bh, dl ; call qword ptr [rax + 0x20fffa39]
0x00000000004ae3fa : cli ; inc dword ptr [rax] ; cmp edx, 0xfa8310ff ; jmp qword ptr [rax]
0x00000000004adc12 : cli ; inc dword ptr [rax] ; xor dl, bh ; push qword ptr [rax + 0x2f] ; cli ; jmp rax
0x00000000004763cf : cli ; inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x00000000004adb56 : cli ; inc dword ptr [rcx + rdi - 6] ; call rsp
0x000000000046f12d : cli ; inc dword ptr [rcx - 0x77] ; ret
0x0000000000472415 : cli ; inc dword ptr [rcx - 0x77] ; ret 0x5be9
0x00000000004ada8e : cli ; inc dword ptr [rdx + 0x3a] ; cli ; call rdx
0x00000000004adf86 : cli ; inc dword ptr [rdx + 0x61] ; cli ; call rdx
0x00000000004ada7e : cli ; inc dword ptr [rdx] ; cmp al, 0xfa ; call qword ptr [rdx + 0x22fffa3b]
0x00000000004adf76 : cli ; inc dword ptr [rdx] ; movsxd rdi, edx ; call qword ptr [rdx + 0x22fffa62]
0x00000000004ad9ea : cli ; inc dword ptr [rsi + 0x3e] ; cli ; call rsi
0x00000000004adee2 : cli ; inc dword ptr [rsi + 0x65] ; cli ; call rsi
0x00000000004ae3ea : cli ; inc eax ; js 0x4ae3ee ; call rax
0x00000000004ada6e : cli ; inc edx ; cmp eax, 0x3d52fffa ; cli ; jmp rdx
0x0000000000454567 : cli ; jg 0x45457a ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000462ce6 : cli ; jg 0x462cf8 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000463319 : cli ; jg 0x46332c ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000463781 : cli ; jg 0x463794 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000463ea2 : cli ; jg 0x463eb2 ; vzeroupper ; ret
0x0000000000464078 : cli ; jg 0x464088 ; vzeroupper ; ret
0x00000000004addd2 : cli ; jmp qword ptr [rax + 0x10fffa2f]
0x00000000004adbe6 : cli ; jmp qword ptr [rax + 0x10fffa35]
0x00000000004ade0a : cli ; jmp qword ptr [rax + 0x20fffa30]
0x00000000004ade02 : cli ; jmp qword ptr [rax + 0x20fffa31]
0x00000000004addfa : cli ; jmp qword ptr [rax + 0x20fffa32]
0x00000000004addf2 : cli ; jmp qword ptr [rax + 0x20fffa33]
0x00000000004addea : cli ; jmp qword ptr [rax + 0x20fffa34]
0x00000000004ad86e : cli ; jmp qword ptr [rax]
0x00000000004ada5e : cli ; jmp qword ptr [rdx + 0x12fffa38]
0x00000000004ada86 : cli ; jmp qword ptr [rdx]
0x00000000004ad9e2 : cli ; jmp qword ptr [rsi]
0x00000000004ad7e6 : cli ; jmp rax
0x0000000000428574 : cli ; jmp rdx
0x00000000004ada12 : cli ; jmp rsi
0x00000000004adb3e : cli ; jmp rsp
0x00000000004050fd : cli ; jp 0x40517d ; jo 0xffffffff944f7709 ; ret 0xb60f
0x00000000004add1a : cli ; lcall [rsi + 0x2efffa2e] ; cli ; call rsp
0x00000000004ae29a : cli ; ljmp [rdx + 0x3afffa54] ; push rsp ; cli ; jmp rax
0x00000000004add1e : cli ; ljmp [rsi] ; cli ; call rsp
0x00000000004ae15e : cli ; ljmp [rsp + rdx*2 - 6] ; call qword ptr [rdx]
0x0000000000471a8c : cli ; loopne 0x471b09 ; jae 0x471a1f ; retf 0xb941
0x000000000044beb8 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000428856 : cli ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x0000000000447b68 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000446616 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004c26e1 : cli ; push 0x6e ; ja 0x4c266e ; ret 0x48f
0x00000000004ade1a : cli ; push qword ptr [rax + 0x2e] ; cli ; call qword ptr [rax]
0x00000000004adc16 : cli ; push qword ptr [rax + 0x2f] ; cli ; jmp rax
0x00000000004adb9e : cli ; push qword ptr [rax + 0x38] ; cli ; jmp rax
0x00000000004adbb6 : cli ; push qword ptr [rax + 0x40fffa3c] ; cmp al, 0xfa ; call rax
0x00000000004aded6 : cli ; push qword ptr [rax + 0x40fffa5f] ; pop rdi ; cli ; call rsi
0x00000000004ae0ae : cli ; push qword ptr [rax + 0x40fffa63] ; movsxd rdi, edx ; call rax
0x00000000004ae04a : cli ; push qword ptr [rax + 0x6044fffa] ; cli ; call rsp
0x00000000004ae482 : cli ; push qword ptr [rax - 0x3e] ; cli ; call qword ptr [rax]
0x00000000004ae4de : cli ; push qword ptr [rax - 0x3f0004e4] ; sbb al, 0xfb ; call rax
0x00000000004ae3e6 : cli ; push qword ptr [rax - 0x3f00058a] ; js 0x4ae3f2 ; call rax
0x00000000004ae462 : cli ; push qword ptr [rax - 0x4b] ; cli ; call qword ptr [rax]
0x00000000004ad7fe : cli ; push qword ptr [rax] ; add eax, 0x6f0fffa ; cli ; call rax
0x00000000004ae45a : cli ; push qword ptr [rax] ; mov dl, 0xfa ; call rax
0x00000000004ad886 : cli ; push qword ptr [rax] ; or dl, bh ; call qword ptr [rax]
0x00000000004ae2de : cli ; push qword ptr [rax] ; push rsp ; cli ; call rax
0x00000000004ae406 : cli ; push qword ptr [rax] ; xchg edx, edi ; call rax
0x00000000004addce : cli ; push qword ptr [rax] ; xor dl, bh ; jmp qword ptr [rax + 0x10fffa2f]
0x00000000004adde6 : cli ; push qword ptr [rax] ; xor eax, 0x34a0fffa ; cli ; jmp qword ptr [rax]
0x00000000004ae226 : cli ; push qword ptr [rbx + rbx*2 - 6] ; jmp rsp
0x00000000004adb52 : cli ; push qword ptr [rcx + rdi + 0x3944fffa] ; cli ; call rsp
0x00000000004adc66 : cli ; push qword ptr [rdx + 0x35] ; cli ; jmp rdx
0x00000000004ada8a : cli ; push qword ptr [rdx + 0x42fffa3a] ; cmp bh, dl ; call rdx
0x00000000004ad9e6 : cli ; push qword ptr [rsi + 0x46fffa3e] ; cli ; call rsi
0x00000000004ae31e : cli ; push rax ; cli ; call qword ptr [rax]
0x00000000004ad9ae : cli ; push rax ; cmp eax, 0x3d80fffa ; cli ; call qword ptr [rax]
0x00000000004ad90a : cli ; push rax ; or dl, bh ; jmp rax
0x00000000004adc62 : cli ; push rdx ; xor eax, 0x3572fffa ; cli ; jmp rdx
0x00000000004ae222 : cli ; push rsp ; pop rbx ; cli ; push qword ptr [rbx + rbx*2 - 6] ; jmp rsp
0x0000000000463c59 : cli ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000004c1185 : cli ; ret 0xac65
0x000000000046800b : cli ; setae al ; ret
0x00000000004ad949 : cli ; stc ; inc eax ; sti ; stc ; call qword ptr [rax]
0x00000000004c1030 : cli ; test bh, dl ; retf 0xdf7f
0x00000000004bfdca : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000004cb9f2 : cmc ; call qword ptr [rax]
0x00000000004a9b9e : cmc ; call qword ptr [rdi]
0x00000000004cae62 : cmc ; call qword ptr [rdx]
0x00000000004cb49a : cmc ; call rax
0x00000000004a9b2a : cmc ; call rsp
0x00000000004a9b56 : cmc ; inc esi ; jnp 0x4a9b55 ; jmp rdx
0x00000000004cb5b2 : cmc ; jmp qword ptr [rax]
0x00000000004a9b16 : cmc ; jmp rdx
0x00000000004c2b09 : cmc ; mov ch, 0xab ; ret
0x0000000000450cfa : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000044b73e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004620a3 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000004bf9b7 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004a9b52 : cmc ; push rcx ; jnp 0x4a9b55 ; inc esi ; jnp 0x4a9b59 ; jmp rdx
0x0000000000414f72 : cmc ; retf 0xffff
0x00000000004aba50 : cmc ; sbb dh, bh ; call rsi
0x00000000004620a7 : cmc ; sub eax, edx ; ret
0x00000000004c2145 : cmc ; xlatb ; ret 0x4e27
0x000000000040720e : cmova eax, edx ; ret
0x000000000040720d : cmova rax, rdx ; ret
0x0000000000435059 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000040c304 : cmovae eax, edx ; ret
0x0000000000435058 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000040c303 : cmovae rax, rdx ; ret
0x0000000000464174 : cmove eax, ecx ; pop rbx ; ret
0x000000000048df81 : cmove eax, ecx ; ret
0x000000000043f7a3 : cmove eax, edx ; add rsp, 8 ; ret
0x000000000046413c : cmove eax, edx ; pop rbx ; ret
0x000000000043f8df : cmove eax, edx ; ret
0x0000000000430aaf : cmove ebp, esp ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049a878 : cmove ecx, eax ; mov rax, rcx ; ret
0x000000000048df80 : cmove r8, rcx ; ret
0x0000000000464173 : cmove rax, rcx ; pop rbx ; ret
0x000000000043f7a2 : cmove rax, rdx ; add rsp, 8 ; ret
0x000000000046413b : cmove rax, rdx ; pop rbx ; ret
0x000000000043f8de : cmove rax, rdx ; ret
0x000000000049a877 : cmove rcx, rax ; mov rax, rcx ; ret
0x000000000043249b : cmovg eax, ecx ; test rdx, rdx ; jne 0x432499 ; ret
0x000000000048ca9b : cmovg eax, ecx ; test rdx, rdx ; jne 0x48ca99 ; ret
0x0000000000407f05 : cmovge eax, ebx ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000407c37 : cmovge eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040734b : cmovge eax, edi ; ret
0x000000000043edda : cmovne eax, ecx ; ret
0x00000000004641cc : cmovne eax, edx ; pop rbx ; ret
0x000000000040d788 : cmovne eax, edx ; ret
0x000000000045c5e4 : cmovne eax, edx ; vzeroupper ; ret
0x000000000043edd9 : cmovne rax, rcx ; ret
0x00000000004641cb : cmovne rax, rdx ; pop rbx ; ret
0x000000000043f7de : cmovne rax, rdx ; ret
0x000000000045c5e3 : cmovne rax, rdx ; vzeroupper ; ret
0x00000000004072b8 : cmovs eax, dword ptr [rbp - 0xcfd8a2e] ; ret
0x0000000000447178 : cmovs eax, dword ptr [rbx + 0x148f0e7] ; retf 0x8348
0x000000000046d78c : cmovs eax, edx ; ret
0x000000000040b29e : cmovs ebp, dword ptr [rcx] ; retf
0x000000000041a0f8 : cmovs ecx, dword ptr [rcx + 0x1bffe] ; add byte ptr [rax], al ; jmp rax
0x000000000048dce8 : cmovs edi, dword ptr [rcx] ; int1 ; jne 0x48dce9 ; lea eax, [rdx + rdi] ; ret
0x000000000040c905 : cmovs edi, dword ptr [rcx] ; ror byte ptr [rax + 0xf], 1 ; ret 0xdeb
0x000000000046411e : cmovs esp, dword ptr [rbx + 0xc] ; xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x00000000004641b0 : cmovs esp, dword ptr [rbx + 4] ; xchg eax, esi ; add rax, rsi ; jmp rax
0x0000000000462bb8 : cmp ah, byte ptr [rbx - 0x27] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000046a023 : cmp ah, byte ptr [rdi] ; add byte ptr [rbp - 0xcf98b40], al ; ret
0x00000000004c9b51 : cmp ah, dh ; call qword ptr [rdi]
0x0000000000403624 : cmp al, 0x10 ; jne 0x40363e ; xor eax, eax ; ret
0x00000000004c59c8 : cmp al, 0x14 ; add byte ptr [rax], al ; out dx, al ; call qword ptr [rdi]
0x00000000004c64c8 : cmp al, 0x1f ; add byte ptr [rax], al ; mov ah, 0xfb ; call qword ptr [rdx]
0x00000000004a44c0 : cmp al, 0x23 ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x00000000004725b2 : cmp al, 0x24 ; add byte ptr [rcx - 0x77], al ; ret
0x000000000046c4a2 : cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x0000000000432667 : cmp al, 0x24 ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000432656 : cmp al, 0x24 ; call 0x42e8e4
0x000000000041a24d : cmp al, 0x24 ; mov rdx, qword ptr [rbp] ; call r12
0x0000000000436c17 : cmp al, 0x2a ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000436c0d : cmp al, 0x2a ; add byte ptr [rax + 1], cl ; ret
0x000000000041971c : cmp al, 0x31 ; or byte ptr [rbp + 4], dh ; mov qword ptr [rax], rdx ; ret
0x00000000004196ad : cmp al, 0x32 ; or byte ptr [rbp + 0x1a], dh ; mov rax, qword ptr [rax] ; ret
0x00000000004c0dc0 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000406d1e : cmp al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x0000000000410436 : cmp al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040d572 : cmp al, 0x4f ; je 0x40d588 ; mov rax, rsi ; ret
0x00000000004bfcc3 : cmp al, 0x66 ; movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x000000000040f402 : cmp al, 0x7d ; retf 0x8b48
0x00000000004c27ab : cmp al, 0x93 ; in al, dx ; retf 0xae32
0x0000000000476fa1 : cmp al, 0xb3 ; add rdi, r11 ; jmp rdi
0x0000000000428859 : cmp al, 0xba ; add rdi, r10 ; jmp rdi
0x00000000004d02c8 : cmp al, 0xbd ; add byte ptr [rax], al ; mov ah, 0x9d ; stc ; jmp qword ptr [rdx]
0x00000000004ae331 : cmp al, 0xfa ; call qword ptr [rax]
0x00000000004ada81 : cmp al, 0xfa ; call qword ptr [rdx + 0x22fffa3b]
0x00000000004ad9fd : cmp al, 0xfa ; call qword ptr [rsi]
0x00000000004adbbd : cmp al, 0xfa ; call rax
0x00000000004adbb9 : cmp al, 0xfa ; inc dword ptr [rax + 0x3c] ; cli ; call rax
0x00000000004adb3d : cmp al, 0xfa ; jmp rsp
0x00000000004c6894 : cmp al, 0xff ; call qword ptr [rbx]
0x00000000004cbdf4 : cmp al, 0xff ; cmc ; call qword ptr [rdi]
0x000000000046772d : cmp al, 0xff ; dec dword ptr [rax - 0x7f] ; ret
0x00000000004c46c8 : cmp al, 1 ; add byte ptr [rax], al ; ret 0xf3c7
0x000000000041181b : cmp al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4120
0x000000000040dba7 : cmp al, byte ptr [rdx + 0xf] ; test byte ptr [rsi - 0xd000000], dh ; ret
0x0000000000462566 : cmp al, byte ptr [rsi - 1] ; jne 0x46258c ; xor eax, eax ; ret
0x00000000004473d6 : cmp al, dh ; ret
0x00000000004473d5 : cmp al, r14b ; ret
0x0000000000417496 : cmp bh, 0x10 ; jne 0x4174bf ; xor eax, eax ; ret
0x000000000041a636 : cmp bh, 0x10 ; jne 0x41a655 ; xor eax, eax ; ret
0x000000000041b496 : cmp bh, 0x10 ; jne 0x41b4b5 ; xor eax, eax ; ret
0x00000000004a6ee6 : cmp bh, 0x10 ; jne 0x4a6f0f ; xor eax, eax ; ret
0x000000000041a61c : cmp bh, 0x30 ; jne 0x41a651 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000041b47c : cmp bh, 0x30 ; jne 0x41b4b1 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000040cc7a : cmp bh, 0xff ; nop dword ptr [rax] ; mov qword ptr [rdi], rsi ; ret
0x00000000004ad3b1 : cmp bh, cl ; jmp qword ptr [rax]
0x00000000004ae369 : cmp bh, dl ; call qword ptr [rax + 0x10fffa3b]
0x00000000004ad9d5 : cmp bh, dl ; call qword ptr [rax + 0x20fffa39]
0x00000000004adbcd : cmp bh, dl ; call qword ptr [rax]
0x00000000004ada91 : cmp bh, dl ; call rdx
0x00000000004ada8d : cmp bh, dl ; inc dword ptr [rdx + 0x3a] ; cli ; call rdx
0x00000000004ada11 : cmp bh, dl ; jmp rsi
0x000000000040f3fe : cmp byte ptr [r11], dil ; cmp al, 0x7d ; retf 0x8b48
0x000000000042c852 : cmp byte ptr [r8 - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000042e38f : cmp byte ptr [rax + 0x29], cl ; ret
0x0000000000492e13 : cmp byte ptr [rax + 0x29], cl ; ret 0x8d49
0x00000000004074d2 : cmp byte ptr [rax + 0x29], cl ; retf
0x000000000042c2ae : cmp byte ptr [rax + 0x39], cl ; ret
0x000000000042ee39 : cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000041c99b : cmp byte ptr [rax + 0x39], cl ; ret 0x4f76
0x000000000049e96e : cmp byte ptr [rax + 0x39], cl ; retf
0x0000000000447417 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x000000000048c605 : cmp byte ptr [rax + 1], cl ; ret
0x000000000048c090 : cmp byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000004751df : cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000477c07 : cmp byte ptr [rax - 0x73], cl ; dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x000000000046ddd8 : cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000477d84 : cmp byte ptr [rax - 0x75], cl ; jl 0x477db5 ; and byte ptr [rax + 1], cl ; ret
0x000000000042c853 : cmp byte ptr [rax - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000049a299 : cmp byte ptr [rax - 0x77], cl ; retf
0x000000000042d0e0 : cmp byte ptr [rax - 0x77], cl ; retf 0x775
0x000000000042c0b6 : cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x000000000046f6e4 : cmp byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000447406 : cmp byte ptr [rax], ah ; ret
0x00000000004c7df9 : cmp byte ptr [rax], al ; add ah, dl ; adc dh, ah ; call rdx
0x00000000004d07d8 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret 0
0x000000000041961f : cmp byte ptr [rax], al ; je 0x419648 ; add rsp, 0x18 ; ret
0x0000000000432ad3 : cmp byte ptr [rax], al ; je 0x432ae5 ; ret
0x0000000000462b52 : cmp byte ptr [rax], al ; retf 0xf66
0x000000000045c180 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x00000000004473f6 : cmp byte ptr [rax], dl ; ret
0x00000000004473f5 : cmp byte ptr [rax], r10b ; ret
0x0000000000447405 : cmp byte ptr [rax], r12b ; ret
0x000000000045c17f : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000004cfac4 : cmp byte ptr [rbp + 0x6c780000], dh ; stc ; jmp qword ptr [rcx]
0x00000000004aa6bc : cmp byte ptr [rbp - 0xa], dl ; call qword ptr [rax]
0x00000000004d39a1 : cmp byte ptr [rbx + 0x2030d07], al ; cld ; ret
0x00000000004d39d5 : cmp byte ptr [rbx + 0x2030d07], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004d396d : cmp byte ptr [rbx + 0x3030d07], al ; or al, byte ptr [rcx] ; ret
0x00000000004a6cc8 : cmp byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x0000000000409d74 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004684c2 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r14 ; ret
0x0000000000400c6a : cmp byte ptr [rbx + 0x5d], bl ; ret
0x000000000040df5f : cmp byte ptr [rbx + 0xb7476fe], al ; xor eax, eax ; ret
0x000000000040ff86 : cmp byte ptr [rbx + 0xf], dh ; xchg eax, esp ; ret 0x8b48
0x00000000004cc58c : cmp byte ptr [rbx - 0x1ff1b5f9], al ; add dword ptr [rdx], eax ; retf
0x000000000040dc8e : cmp byte ptr [rbx - 0x3d], bl ; xor eax, eax ; pop rbx ; ret
0x00000000004c6c38 : cmp byte ptr [rbx], al ; hlt ; call qword ptr [rbx]
0x000000000040f3ff : cmp byte ptr [rbx], bh ; cmp al, 0x7d ; retf 0x8b48
0x00000000004c78c4 : cmp byte ptr [rbx], dh ; add byte ptr [rax], al ; fmul dword ptr [rsp + rsi*8] ; jmp qword ptr [rdx]
0x00000000004ceec4 : cmp byte ptr [rcx + 0x5cb80000], ch ; clc ; call qword ptr [rax]
0x000000000048da10 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x0000000000407bdd : cmp byte ptr [rcx + rax], dh ; je 0x407bd6 ; ret
0x000000000040c91d : cmp byte ptr [rcx + rax], dh ; je 0x40c916 ; ret
0x0000000000407bdc : cmp byte ptr [rcx + rax], sil ; je 0x407bd7 ; ret
0x000000000040c91c : cmp byte ptr [rcx + rax], sil ; je 0x40c917 ; ret
0x000000000042e168 : cmp byte ptr [rcx + rcx*4 - 0x30], al ; ret
0x000000000041971b : cmp byte ptr [rcx + rsi], 8 ; jne 0x41972e ; mov qword ptr [rax], rdx ; ret
0x000000000041f25b : cmp byte ptr [rcx - 0x75], al ; push rdi ; adc al, 0xf ; retf 0xfa83
0x0000000000474f07 : cmp byte ptr [rcx - 0x77], cl ; push rsi ; sub byte ptr [rax - 0x3f], cl ; retf
0x000000000049c166 : cmp byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x000000000040de42 : cmp byte ptr [rdi], ch ; jne 0x40de28 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000432a98 : cmp byte ptr [rdi], cl ; ret 0x389
0x0000000000448cfd : cmp byte ptr [rdi], dl ; ret
0x0000000000449810 : cmp byte ptr [rdi], dl ; ret 0x2373
0x00000000004497f9 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x00000000004497e2 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000044829e : cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004196ac : cmp byte ptr [rdx + rsi], 8 ; jne 0x4196d5 ; mov rax, qword ptr [rax] ; ret
0x00000000004cffc4 : cmp byte ptr [rdx - 0x7d080000], bh ; stc ; call qword ptr [rax]
0x0000000000416837 : cmp byte ptr [rdx], 0x66 ; je 0x416847 ; xor eax, eax ; ret
0x00000000004adbcc : cmp byte ptr [rdx], 0xfa ; call qword ptr [rax]
0x00000000004ad7e0 : cmp byte ptr [rip + 0x700fffa], al ; cli ; jmp rax
0x00000000004cf728 : cmp byte ptr [rsi - 7], bl ; jmp qword ptr [rcx]
0x00000000004ad990 : cmp ch, 0xf9 ; call rax
0x0000000000410cd5 : cmp ch, al ; retf 0xffff
0x0000000000436e2f : cmp ch, byte ptr [rdx] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000411382 : cmp cl, 0x45 ; je 0x4113bb ; xor eax, eax ; pop rbx ; ret
0x0000000000418c54 : cmp cl, 0xff ; dec dword ptr [rcx + 0x31] ; retf 0x8948
0x00000000004ad3a9 : cmp cl, bh ; jmp qword ptr [rax - 0x1f0006c7]
0x000000000040c13f : cmp cl, byte ptr [rax + 0x29] ; retf
0x0000000000410b6d : cmp cl, byte ptr [rax + 0x63] ; retf 0xc283
0x00000000004a4da2 : cmp cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x0000000000402122 : cmp cl, byte ptr [rax] ; add byte ptr [rax], al ; nop ; leave ; ret
0x0000000000449ee1 : cmp cl, byte ptr [rdi] ; retf 0x6601
0x000000000044a031 : cmp cl, byte ptr [rdi] ; retf 0x6602
0x000000000044a181 : cmp cl, byte ptr [rdi] ; retf 0x6603
0x000000000044a2d1 : cmp cl, byte ptr [rdi] ; retf 0x6604
0x000000000044a421 : cmp cl, byte ptr [rdi] ; retf 0x6605
0x000000000044a571 : cmp cl, byte ptr [rdi] ; retf 0x6606
0x000000000044a6c1 : cmp cl, byte ptr [rdi] ; retf 0x6607
0x000000000044a811 : cmp cl, byte ptr [rdi] ; retf 0x6608
0x000000000044a961 : cmp cl, byte ptr [rdi] ; retf 0x6609
0x000000000044aab1 : cmp cl, byte ptr [rdi] ; retf 0x660a
0x000000000044ac01 : cmp cl, byte ptr [rdi] ; retf 0x660b
0x000000000044ad51 : cmp cl, byte ptr [rdi] ; retf 0x660c
0x000000000044aea1 : cmp cl, byte ptr [rdi] ; retf 0x660d
0x000000000044aff1 : cmp cl, byte ptr [rdi] ; retf 0x660e
0x000000000044b141 : cmp cl, byte ptr [rdi] ; retf 0x660f
0x000000000044f11a : cmp cl, byte ptr [rdi] ; retf 0xf01
0x000000000044f29a : cmp cl, byte ptr [rdi] ; retf 0xf02
0x000000000044f41a : cmp cl, byte ptr [rdi] ; retf 0xf03
0x000000000044f59a : cmp cl, byte ptr [rdi] ; retf 0xf04
0x000000000044f71a : cmp cl, byte ptr [rdi] ; retf 0xf05
0x000000000044f89a : cmp cl, byte ptr [rdi] ; retf 0xf06
0x000000000044fa1a : cmp cl, byte ptr [rdi] ; retf 0xf07
0x000000000044fb9a : cmp cl, byte ptr [rdi] ; retf 0xf08
0x000000000044fd1a : cmp cl, byte ptr [rdi] ; retf 0xf09
0x000000000044fe9a : cmp cl, byte ptr [rdi] ; retf 0xf0a
0x000000000045001a : cmp cl, byte ptr [rdi] ; retf 0xf0b
0x000000000045019a : cmp cl, byte ptr [rdi] ; retf 0xf0c
0x000000000045031a : cmp cl, byte ptr [rdi] ; retf 0xf0d
0x000000000045049a : cmp cl, byte ptr [rdi] ; retf 0xf0e
0x000000000045061a : cmp cl, byte ptr [rdi] ; retf 0xf0f
0x00000000004c2b86 : cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x000000000041fb17 : cmp cl, ch ; ret 0xfffb
0x00000000004c6770 : cmp dh, 0xf3 ; call qword ptr [rbx]
0x000000000045c5e1 : cmp dh, byte ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x000000000046405a : cmp dh, byte ptr [rdx + 2] ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000417495 : cmp dil, 0x10 ; jne 0x4174c0 ; xor eax, eax ; ret
0x000000000041a635 : cmp dil, 0x10 ; jne 0x41a656 ; xor eax, eax ; ret
0x000000000041b495 : cmp dil, 0x10 ; jne 0x41b4b6 ; xor eax, eax ; ret
0x00000000004a6ee5 : cmp dil, 0x10 ; jne 0x4a6f10 ; xor eax, eax ; ret
0x00000000004ada90 : cmp dil, dl ; call rdx
0x0000000000463d20 : cmp dl, 1 ; ja 0x463d43 ; jb 0x463d32 ; mov byte ptr [rdi], cl ; ret
0x00000000004545ab : cmp dl, 1 ; jb 0x4545bd ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000462d1a : cmp dl, 1 ; jb 0x462d28 ; mov byte ptr [rdi], cl ; ret
0x000000000043ee45 : cmp dl, al ; jne 0x43ee38 ; sub rax, 0x10 ; ret
0x00000000004ae325 : cmp dl, bh ; call qword ptr [rax + 0x10fffa39]
0x00000000004ae365 : cmp dl, bh ; call qword ptr [rax]
0x00000000004ada61 : cmp dl, bh ; call qword ptr [rdx]
0x00000000004ad9a1 : cmp dl, bh ; inc dword ptr [rax + 0x3f] ; cli ; call rax
0x00000000004ada5d : cmp dl, bh ; jmp qword ptr [rdx + 0x12fffa38]
0x00000000004ad9e1 : cmp dl, bh ; jmp qword ptr [rsi]
0x00000000004adba1 : cmp dl, bh ; jmp rax
0x00000000004adb9d : cmp dl, bh ; push qword ptr [rax + 0x38] ; cli ; jmp rax
0x000000000043ee44 : cmp dl, r8b ; jne 0x43ee39 ; sub rax, 0x10 ; ret
0x000000000048d9b8 : cmp dword ptr [rax + 0x30], 0 ; je 0x48d9c7 ; ret
0x00000000004018ea : cmp dword ptr [rax + rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000445cf7 : cmp dword ptr [rax + rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004464d7 : cmp dword ptr [rax + rax], ecx ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000407454 : cmp dword ptr [rax - 0x18], 0 ; sete al ; ret
0x0000000000408fe8 : cmp dword ptr [rax - 0x18], edx ; jb 0x408ff6 ; ret
0x0000000000429d71 : cmp dword ptr [rax - 0x39], ecx ; ret
0x000000000040de41 : cmp dword ptr [rax], 0x2f ; jne 0x40de29 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000450838 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000432ad1 : cmp dword ptr [rdi + 0x38], 0 ; je 0x432ae7 ; ret
0x000000000040af81 : cmp dword ptr [rdi + 8], 0 ; sete al ; ret
0x000000000040af43 : cmp dword ptr [rdi + 8], eax ; jb 0x40af56 ; ret
0x000000000040ae05 : cmp dword ptr [rdi], eax ; je 0x40ae18 ; mov rax, qword ptr [rdi + 0x10] ; ret
0x000000000040a0d4 : cmp dword ptr [rdi], eax ; sete al ; ret
0x00000000004405e1 : cmp dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000049b9ef : cmp eax, -1 ; cmove rax, rdx ; ret
0x000000000048d9d6 : cmp eax, -1 ; je 0x48d9e9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040781f : cmp eax, -1 ; jne 0x407816 ; ret
0x000000000040c561 : cmp eax, -1 ; jne 0x40c556 ; ret
0x000000000049db5c : cmp eax, -3 ; jbe 0x49db6e ; ret
0x00000000004c82b1 : cmp eax, 0x19fc0000 ; hlt ; jmp qword ptr [rdx]
0x00000000004a38b5 : cmp eax, 0x2366bd ; add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x000000000047d259 : cmp eax, 0x259f22 ; mov rax, qword ptr [rdi + rax*8] ; jmp rax
0x000000000046add3 : cmp eax, 0x270434 ; je 0x46ad91 ; call 0x477879
0x000000000042e8e2 : cmp eax, 0x2ab6c0 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000041eb4a : cmp eax, 0x2bb410 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004a9059 : cmp eax, 0x39c2 ; call 0x435277
0x00000000004a8fb2 : cmp eax, 0x39e9 ; call 0x435277
0x00000000004a8fa2 : cmp eax, 0x3a51 ; call 0x435277
0x00000000004ada71 : cmp eax, 0x3d52fffa ; cli ; jmp rdx
0x00000000004ad9b1 : cmp eax, 0x3d80fffa ; cli ; call qword ptr [rax]
0x00000000004ae371 : cmp eax, 0x3e90fffa ; cli ; call qword ptr [rax]
0x00000000004ad3b9 : cmp eax, 0x3ea0fff9 ; stc ; jmp rax
0x0000000000466842 : cmp eax, 0x7d8b48 ; call r12
0x0000000000468fcf : cmp eax, 0x83482f74 ; ret
0x0000000000468df6 : cmp eax, 0x83497174 ; ret
0x000000000048f624 : cmp eax, 0x89000001 ; ret 0x8948
0x0000000000471a82 : cmp eax, 0x89fffff3 ; retf 0xe283
0x00000000004c00ab : cmp eax, 0xaf6a2574 ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004655f6 : cmp eax, 0xfffff000 ; ja 0x465608 ; ret
0x0000000000465644 : cmp eax, 0xfffff000 ; ja 0x465658 ; ret
0x000000000046584f : cmp eax, 0xfffff000 ; ja 0x4658b8 ; ret
0x00000000004658e5 : cmp eax, 0xfffff000 ; ja 0x4658f8 ; ret
0x0000000000465922 : cmp eax, 0xfffff000 ; ja 0x465988 ; ret
0x00000000004659b8 : cmp eax, 0xfffff000 ; ja 0x4659d0 ; ret
0x00000000004659e8 : cmp eax, 0xfffff000 ; ja 0x465a00 ; ret
0x0000000000465bf2 : cmp eax, 0xfffff000 ; ja 0x465c40 ; ret
0x0000000000465c68 : cmp eax, 0xfffff000 ; ja 0x465c80 ; ret
0x00000000004663c1 : cmp eax, 0xfffff000 ; ja 0x4663d8 ; ret
0x0000000000466402 : cmp eax, 0xfffff000 ; ja 0x466418 ; ret
0x0000000000466565 : cmp eax, 0xfffff000 ; ja 0x4665d8 ; ret
0x0000000000467e52 : cmp eax, 0xfffff000 ; ja 0x467eb8 ; ret
0x0000000000467efb : cmp eax, 0xfffff000 ; ja 0x467f70 ; ret
0x0000000000477b8e : cmp eax, 0xfffff000 ; ja 0x477ba8 ; ret
0x0000000000491676 : cmp eax, 0xfffff000 ; ja 0x491688 ; ret
0x00000000004916ca : cmp eax, 0xfffff000 ; ja 0x4916e0 ; ret
0x0000000000465568 : cmp eax, 0xfffff001 ; jae 0x465577 ; ret
0x00000000004666e8 : cmp eax, 0xfffff001 ; jae 0x4666f7 ; ret
0x0000000000466718 : cmp eax, 0xfffff001 ; jae 0x466727 ; ret
0x0000000000466748 : cmp eax, 0xfffff001 ; jae 0x466757 ; ret
0x0000000000467deb : cmp eax, 0xfffff001 ; jae 0x467dfa ; ret
0x0000000000467e18 : cmp eax, 0xfffff001 ; jae 0x467e27 ; ret
0x0000000000467fa8 : cmp eax, 0xfffff001 ; jae 0x467fb7 ; ret
0x00000000004915f8 : cmp eax, 0xfffff001 ; jae 0x491607 ; ret
0x00000000004a4668 : cmp eax, 0xfffff001 ; jae 0x4a4677 ; ret
0x00000000004646db : cmp eax, 2 ; je 0x4646ef ; xor eax, eax ; ret
0x00000000004680ea : cmp eax, 4 ; je 0x4680f5 ; ret
0x00000000004c1f77 : cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x0000000000462b6f : cmp eax, ecx ; jle 0x462baf ; movsxd rax, ecx ; ret
0x0000000000462583 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000040720b : cmp eax, edx ; cmova rax, rdx ; ret
0x00000000004347db : cmp eax, edx ; jae 0x434807 ; movzx eax, byte ptr [rax] ; ret
0x00000000004a3de4 : cmp eax, esi ; je 0x4a3df5 ; ret
0x0000000000468086 : cmp ebx, 0xa ; je 0x468091 ; ret
0x000000000048fd45 : cmp ecx, 0xc00 ; je 0x48fd59 ; ret
0x0000000000468b51 : cmp ecx, dword ptr [rax + 0x10] ; jae 0x468b46 ; ret
0x000000000049e628 : cmp ecx, dword ptr [rax - 0x77] ; retf 0xfe8
0x000000000046b562 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000049ba38 : cmp ecx, dword ptr [rdi + rsi] ; jae 0x49b9e8 ; xor eax, eax ; ret
0x000000000048df7e : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000044982b : cmp ecx, eax ; jne 0x449859 ; xor eax, eax ; ret
0x000000000049a7c8 : cmp ecx, eax ; jne 0x49a772 ; mov eax, dword ptr [rdx + 4] ; ret
0x00000000004a0382 : cmp ecx, ecx ; ret
0x00000000004ad3ad : cmp ecx, edi ; jmp rax
0x00000000004071ab : cmp ecx, esi ; jb 0x4071b6 ; ret
0x000000000048dcea : cmp ecx, esi ; jne 0x48dce7 ; lea eax, [rdx + rdi] ; ret
0x000000000049a7b6 : cmp ecx, esi ; jne 0x49a795 ; ret
0x0000000000407fb1 : cmp edi, 0x6dc4c0 ; jne 0x407fc9 ; ret
0x0000000000408181 : cmp edi, 0x6dc4c0 ; jne 0x408199 ; ret
0x0000000000494b49 : cmp edi, dword ptr [rcx - 0x7cb7000a] ; ret
0x00000000004822b0 : cmp edi, eax ; ja 0x482297 ; mov eax, r9d ; ret
0x00000000004ae32d : cmp edi, edx ; call qword ptr [rax + 0x10fffa3c]
0x00000000004ae36d : cmp edi, edx ; call qword ptr [rax]
0x00000000004919ee : cmp edi, edx ; ja 0x491a1d ; ret
0x0000000000462f22 : cmp edi, edx ; jb 0x462f2f ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004ada85 : cmp edi, edx ; jmp qword ptr [rdx]
0x00000000004ad9c9 : cmp edi, edx ; jmp rax
0x00000000004822af : cmp edi, r8d ; ja 0x482298 ; mov eax, r9d ; ret
0x00000000004ae3fd : cmp edx, 0xfa8310ff ; jmp qword ptr [rax]
0x000000000043b68a : cmp edx, eax ; jne 0x43b655 ; ret
0x00000000004065e3 : cmp edx, eax ; sete al ; lea eax, [rax + rax*4 + 1] ; ret
0x0000000000402839 : cmp edx, eax ; sete al ; leave ; ret
0x0000000000463d0b : cmp edx, ecx ; jne 0x463cf8 ; ret
0x0000000000463e72 : cmp edx, ecx ; jne 0x463e5e ; vzeroupper ; ret
0x0000000000464035 : cmp edx, ecx ; jne 0x464019 ; vzeroupper ; ret
0x00000000004ae329 : cmp edx, edi ; call qword ptr [rax]
0x00000000004adb59 : cmp edx, edi ; call rsp
0x00000000004adb55 : cmp edx, edi ; inc dword ptr [rcx + rdi - 6] ; call rsp
0x00000000004ad9d9 : cmp edx, edi ; jmp qword ptr [rax]
0x000000000046800a : cmp edx, edi ; setae al ; ret
0x0000000000490456 : cmp edx, esi ; je 0x490467 ; test edx, edx ; jne 0x490459 ; ret
0x00000000004adb58 : cmp edx, r15d ; call rsp
0x0000000000434819 : cmp esi, -1 ; setne al ; neg eax ; ret
0x000000000040df60 : cmp esi, 0x76 ; je 0x40df77 ; xor eax, eax ; ret
0x0000000000475354 : cmp esi, 3 ; je 0x475366 ; ret
0x0000000000463305 : cmp esi, dword ptr [rdx + 5] ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004093f7 : cmp esi, eax ; ja 0x409417 ; jb 0x409407 ; ret
0x00000000004c2144 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x000000000040a6c8 : cmp esi, ecx ; ja 0x40a6d3 ; ret
0x0000000000433a3a : cmp esi, ecx ; jne 0x433a37 ; lea eax, [rdx + rdi] ; ret
0x0000000000407478 : cmp esi, edx ; jae 0x407487 ; add rax, rsi ; ret
0x00000000004071e5 : cmp esi, edx ; jb 0x4071f0 ; ret
0x000000000040a702 : cmp esi, edx ; jb 0x40a70d ; ret
0x0000000000407232 : cmp esi, edx ; seta al ; ret
0x000000000048d9b7 : cmp qword ptr [rax + 0x30], 0 ; je 0x48d9c8 ; ret
0x0000000000407453 : cmp qword ptr [rax - 0x18], 0 ; sete al ; ret
0x0000000000408fe7 : cmp qword ptr [rax - 0x18], rdx ; jb 0x408ff7 ; ret
0x0000000000432ad0 : cmp qword ptr [rdi + 0x38], 0 ; je 0x432ae8 ; ret
0x000000000040af80 : cmp qword ptr [rdi + 8], 0 ; sete al ; ret
0x000000000040af42 : cmp qword ptr [rdi + 8], rax ; jb 0x40af57 ; ret
0x000000000040ae04 : cmp qword ptr [rdi], rax ; je 0x40ae19 ; mov rax, qword ptr [rdi + 0x10] ; ret
0x000000000040a0d3 : cmp qword ptr [rdi], rax ; sete al ; ret
0x0000000000468085 : cmp r11d, 0xa ; je 0x468092 ; ret
0x000000000040d571 : cmp r8b, 0x4f ; je 0x40d589 ; mov rax, rsi ; ret
0x00000000004655f5 : cmp rax, -0x1000 ; ja 0x465609 ; ret
0x0000000000465643 : cmp rax, -0x1000 ; ja 0x465659 ; ret
0x000000000046584e : cmp rax, -0x1000 ; ja 0x4658b9 ; ret
0x00000000004658e4 : cmp rax, -0x1000 ; ja 0x4658f9 ; ret
0x0000000000465921 : cmp rax, -0x1000 ; ja 0x465989 ; ret
0x00000000004659b7 : cmp rax, -0x1000 ; ja 0x4659d1 ; ret
0x00000000004659e7 : cmp rax, -0x1000 ; ja 0x465a01 ; ret
0x0000000000465bf1 : cmp rax, -0x1000 ; ja 0x465c41 ; ret
0x0000000000465c67 : cmp rax, -0x1000 ; ja 0x465c81 ; ret
0x00000000004663c0 : cmp rax, -0x1000 ; ja 0x4663d9 ; ret
0x0000000000466401 : cmp rax, -0x1000 ; ja 0x466419 ; ret
0x0000000000466564 : cmp rax, -0x1000 ; ja 0x4665d9 ; ret
0x0000000000467e51 : cmp rax, -0x1000 ; ja 0x467eb9 ; ret
0x0000000000467efa : cmp rax, -0x1000 ; ja 0x467f71 ; ret
0x0000000000477b8d : cmp rax, -0x1000 ; ja 0x477ba9 ; ret
0x0000000000491675 : cmp rax, -0x1000 ; ja 0x491689 ; ret
0x00000000004916c9 : cmp rax, -0x1000 ; ja 0x4916e1 ; ret
0x0000000000465567 : cmp rax, -0xfff ; jae 0x465578 ; ret
0x00000000004666e7 : cmp rax, -0xfff ; jae 0x4666f8 ; ret
0x0000000000466717 : cmp rax, -0xfff ; jae 0x466728 ; ret
0x0000000000466747 : cmp rax, -0xfff ; jae 0x466758 ; ret
0x0000000000467dea : cmp rax, -0xfff ; jae 0x467dfb ; ret
0x0000000000467e17 : cmp rax, -0xfff ; jae 0x467e28 ; ret
0x0000000000467fa7 : cmp rax, -0xfff ; jae 0x467fb8 ; ret
0x00000000004915f7 : cmp rax, -0xfff ; jae 0x491608 ; ret
0x00000000004a4667 : cmp rax, -0xfff ; jae 0x4a4678 ; ret
0x000000000049b9ee : cmp rax, -1 ; cmove rax, rdx ; ret
0x000000000040781e : cmp rax, -1 ; jne 0x407817 ; ret
0x000000000040c560 : cmp rax, -1 ; jne 0x40c557 ; ret
0x000000000049db5b : cmp rax, -3 ; jbe 0x49db6f ; ret
0x000000000040720a : cmp rax, rdx ; cmova rax, rdx ; ret
0x00000000004347da : cmp rax, rdx ; jae 0x434808 ; movzx eax, byte ptr [rax] ; ret
0x00000000004a3de3 : cmp rax, rsi ; je 0x4a3df6 ; ret
0x0000000000468b50 : cmp rcx, qword ptr [rax + 0x10] ; jae 0x468b47 ; ret
0x000000000049ba37 : cmp rcx, qword ptr [rdi + rsi] ; jae 0x49b9e9 ; xor eax, eax ; ret
0x000000000048df7d : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000049a7c7 : cmp rcx, r8 ; jne 0x49a773 ; mov eax, dword ptr [rdx + 4] ; ret
0x000000000044982a : cmp rcx, rax ; jne 0x44985a ; xor eax, eax ; ret
0x00000000004071aa : cmp rcx, rsi ; jb 0x4071b7 ; ret
0x000000000048dce9 : cmp rcx, rsi ; jne 0x48dce8 ; lea eax, [rdx + rdi] ; ret
0x000000000049a7b5 : cmp rcx, rsi ; jne 0x49a796 ; ret
0x00000000004919ed : cmp rdi, rdx ; ja 0x491a1e ; ret
0x0000000000462f21 : cmp rdi, rdx ; jb 0x462f30 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000043b689 : cmp rdx, r8 ; jne 0x43b656 ; ret
0x0000000000463d0a : cmp rdx, rcx ; jne 0x463cf9 ; ret
0x0000000000463d09 : cmp rdx, rcx ; jne 0x463cfa ; ret
0x0000000000463e71 : cmp rdx, rcx ; jne 0x463e5f ; vzeroupper ; ret
0x0000000000464034 : cmp rdx, rcx ; jne 0x46401a ; vzeroupper ; ret
0x0000000000468009 : cmp rdx, rdi ; setae al ; ret
0x00000000004093f6 : cmp rsi, rax ; ja 0x409418 ; jb 0x409408 ; ret
0x000000000040a6c7 : cmp rsi, rcx ; ja 0x40a6d4 ; ret
0x0000000000433a39 : cmp rsi, rcx ; jne 0x433a38 ; lea eax, [rdx + rdi] ; ret
0x0000000000407477 : cmp rsi, rdx ; jae 0x407488 ; add rax, rsi ; ret
0x00000000004071e4 : cmp rsi, rdx ; jb 0x4071f1 ; ret
0x000000000040a701 : cmp rsi, rdx ; jb 0x40a70e ; ret
0x0000000000407231 : cmp rsi, rdx ; seta al ; ret
0x00000000004cec35 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; call 0x244ce35e
0x00000000004492a9 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000040058c : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400595 ; ret
0x00000000004c0176 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4c0142 ; mov ecx, 0x5b92ac50 ; retf
0x0000000000459f96 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004c2291 : cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x00000000004cecdd : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; push rax ; test bh, dh ; jmp qword ptr [rbx]
0x0000000000438e2d : cmpsd dword ptr [rsi], dword ptr [rdi] ; add eax, 0x83480000 ; retf 0x4901
0x0000000000498b08 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add rax, rdi ; jmp rax
0x000000000042c789 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000041ec35 : cmpsd dword ptr [rsi], dword ptr [rdi] ; fild qword ptr [rbx] ; add al, ch ; ret 0xbe13
0x00000000004a3e35 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jae 0x4a3e60 ; add cl, ch ; ret 0xb5c1
0x00000000004bfc5f : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov bx, 0xf32d ; retf
0x000000000040d7ad : cmpsd dword ptr [rsi], dword ptr [rdi] ; nop ; xor eax, eax ; ret
0x0000000000401ea6 : cmpsd dword ptr [rsi], dword ptr [rdi] ; or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004af9ad : cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; call qword ptr [rbx]
0x00000000004af9e9 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; dec esp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp rax
0x00000000004af9ed : cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp rax
0x00000000004c5b24 : cwde ; adc eax, 0xee580000 ; call qword ptr [rcx]
0x0000000000417510 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x830f
0x00000000004360cc : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000004175a5 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x9272
0x000000000042c78a : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000046e2df : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004a946c : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000004a8bcc : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x00000000004c6b68 : cwde ; add dh, ah ; call qword ptr [rbx]
0x00000000004c6e38 : cwde ; add esi, esp ; jmp qword ptr [rdi]
0x0000000000438304 : cwde ; and eax, 0x3948002a ; ret
0x00000000004a9b9d : cwde ; cmc ; call qword ptr [rdi]
0x00000000004aec3c : cwde ; imul edi, ebx, 0xfb696aff ; jmp qword ptr [rdx]
0x00000000004cf724 : cwde ; mov cl, 0 ; add byte ptr [rax], bh ; pop rsi ; stc ; jmp qword ptr [rcx]
0x000000000040d7f6 : cwde ; mov qword ptr [r10 + 8], rax ; mov rax, r10 ; ret
0x00000000004cf8f8 : cwde ; movsxd rdi, ecx ; call qword ptr [rbx]
0x00000000004ae658 : cwde ; pop rbx ; sti ; call rax
0x00000000004d1124 : cwde ; retf
0x000000000045e281 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x000000000045e282 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000409b9d : dec byte ptr [rax + 0x39] ; ret 0x1877
0x000000000046384d : dec byte ptr [rax + 0x7f] ; jl 0x463872 ; cld ; vzeroupper ; ret
0x000000000047a0c9 : dec byte ptr [rax - 0x75] ; mov ebp, 0xfffff758 ; call rax
0x000000000049ce3f : dec byte ptr [rax - 0x77] ; fisttp word ptr [rax - 0x77] ; ret 0x5de8
0x000000000048e7d0 : dec byte ptr [rax - 0x77] ; ret
0x000000000049cddd : dec byte ptr [rax - 0x7d] ; ret
0x0000000000466992 : dec byte ptr [rbx + rcx*4 + 0x5f] ; or byte ptr [rcx - 0xa], al ; ret
0x0000000000429716 : dec byte ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000467023 : dec byte ptr [rcx + rcx*4 + 0x42] ; adc byte ptr [rax + 9], cl ; retf 0x8948
0x00000000004292c7 : dec byte ptr [rcx + rcx*4 - 0x11] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000049db59 : dec dword ptr [r8 - 0x7d] ; clc ; std ; jbe 0x49db71 ; ret
0x00000000004734d3 : dec dword ptr [r8 - 0x7d] ; ret 0x8801
0x00000000004304be : dec dword ptr [rax + 0x21] ; retf 0x2148
0x00000000004029e2 : dec dword ptr [rax + 0x29] ; ret
0x000000000045e3c2 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x000000000049eb21 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x000000000049ec61 : dec dword ptr [rax + 0x29] ; ret 0x894c
0x000000000043a715 : dec dword ptr [rax + 0x29] ; ret 0x8d4c
0x00000000004688d7 : dec dword ptr [rax + 0x39] ; ret
0x000000000042f0cd : dec dword ptr [rax + 0x39] ; ret 0x860f
0x00000000004a5309 : dec dword ptr [rax + 0x39] ; ret 0xf48
0x0000000000439ab5 : dec dword ptr [rax + 0x39] ; retf 0x2a74
0x000000000040c7dd : dec dword ptr [rax + 0x39] ; retf 0x3073
0x0000000000439a87 : dec dword ptr [rax + 0x39] ; retf 0x4b74
0x00000000004a081e : dec dword ptr [rax + 0x48e57506] ; mov eax, esi ; ret
0x000000000040fe77 : dec dword ptr [rax + 0x63] ; ret 0xc283
0x000000000047b1fc : dec dword ptr [rax + 0x63] ; retf
0x000000000048b232 : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8502
0x000000000048f5b9 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x000000000049b9f1 : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00000000004075d3 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000048fd69 : dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000040c302 : dec dword ptr [rax + 0xf] ; ret 0xfc3
0x0000000000477c0b : dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x000000000048e921 : dec dword ptr [rax + 1] ; ret
0x00000000004ab3cf : dec dword ptr [rax - 0x37] ; idiv bh ; cdq ; retf 0xfff6
0x000000000041e323 : dec dword ptr [rax - 0x39] ; ret
0x00000000004654ef : dec dword ptr [rax - 0x39] ; ret 0
0x0000000000465494 : dec dword ptr [rax - 0x39] ; ret 0x8000
0x00000000004049bd : dec dword ptr [rax - 0x39] ; ret 0x8f88
0x0000000000404647 : dec dword ptr [rax - 0x39] ; ret 0x9018
0x0000000000404a3d : dec dword ptr [rax - 0x39] ; ret 0x90c8
0x0000000000404a7d : dec dword ptr [rax - 0x39] ; ret 0x9178
0x000000000047a130 : dec dword ptr [rax - 0x39] ; ret 0xbc40
0x000000000040969b : dec dword ptr [rax - 0x39] ; ret 0xc4c0
0x0000000000465407 : dec dword ptr [rax - 0x39] ; ret 0xff80
0x0000000000484de6 : dec dword ptr [rax - 0x39] ; ret 0xff90
0x0000000000465785 : dec dword ptr [rax - 0x39] ; ret 0xffc0
0x000000000046535c : dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000004182bf : dec dword ptr [rax - 0x46] ; mov eax, 0xf ; syscall
0x00000000004ab383 : dec dword ptr [rax - 0x4f00093d] ; ret
0x00000000004733e4 : dec dword ptr [rax - 0x73] ; add cl, byte ptr [rax + 0x39] ; ret
0x000000000049bc15 : dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000043ab68 : dec dword ptr [rax - 0x73] ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000040294b : dec dword ptr [rax - 0x75] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004027e1 : dec dword ptr [rax - 0x75] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000402939 : dec dword ptr [rax - 0x75] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004187b2 : dec dword ptr [rax - 0x75] ; add byte ptr [rcx + 1], cl ; ret 0xef89
0x0000000000402f12 : dec dword ptr [rax - 0x75] ; add cl, cl ; ret
0x0000000000408672 : dec dword ptr [rax - 0x75] ; add ebx, dword ptr [rbx + 0x48] ; add eax, dword ptr [rax - 0x18] ; ret
0x000000000046bcec : dec dword ptr [rax - 0x75] ; jne 0x46bc86 ; call rsi
0x00000000004855fb : dec dword ptr [rax - 0x75] ; mov ebp, 0xfffff730 ; call rax
0x000000000040bb04 : dec dword ptr [rax - 0x75] ; or byte ptr [r8 + 0x39], r9b ; retf
0x0000000000466c25 : dec dword ptr [rax - 0x75] ; push rdi ; adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000049dd9c : dec dword ptr [rax - 0x77] ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000043b814 : dec dword ptr [rax - 0x77] ; add eax, 0x29f064 ; ret
0x00000000004099a7 : dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000040ddcb : dec dword ptr [rax - 0x77] ; clc ; ret
0x000000000040d0ba : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000410e67 : dec dword ptr [rax - 0x77] ; fisttp word ptr [rcx - 0x77] ; ret
0x0000000000402a0e : dec dword ptr [rax - 0x77] ; ret
0x00000000004919de : dec dword ptr [rax - 0x77] ; ret 0x1477
0x00000000004076fd : dec dword ptr [rax - 0x77] ; ret 0x2948
0x00000000004403bb : dec dword ptr [rax - 0x77] ; ret 0x5ae9
0x0000000000498dc7 : dec dword ptr [rax - 0x77] ; ret 0x68e8
0x000000000049193d : dec dword ptr [rax - 0x77] ; ret 0x7577
0x000000000043ad8c : dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000043f717 : dec dword ptr [rax - 0x77] ; ret 0x854d
0x00000000004010b5 : dec dword ptr [rax - 0x77] ; ret 0x858b
0x0000000000477a32 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x0000000000489e90 : dec dword ptr [rax - 0x77] ; ret 0x8b44
0x000000000040210f : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004947ac : dec dword ptr [rax - 0x77] ; ret 0x8d4c
0x000000000043fe36 : dec dword ptr [rax - 0x77] ; ret 0x90e9
0x000000000040e7b5 : dec dword ptr [rax - 0x77] ; ret 0x91eb
0x000000000048a186 : dec dword ptr [rax - 0x77] ; ret 0x99e8
0x00000000004666a5 : dec dword ptr [rax - 0x77] ; ret 0xa076
0x00000000004170a6 : dec dword ptr [rax - 0x77] ; ret 0xa0e9
0x00000000004733fd : dec dword ptr [rax - 0x77] ; ret 0xb2eb
0x00000000004653cd : dec dword ptr [rax - 0x77] ; ret 0xb4e9
0x0000000000440248 : dec dword ptr [rax - 0x77] ; ret 0xb60f
0x0000000000487f09 : dec dword ptr [rax - 0x77] ; ret 0xb848
0x0000000000403990 : dec dword ptr [rax - 0x77] ; ret 0xc931
0x0000000000491f1c : dec dword ptr [rax - 0x77] ; ret 0xefeb
0x000000000042c0ba : dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000420b2f : dec dword ptr [rax - 0x77] ; ret 0xf748
0x000000000040e849 : dec dword ptr [rax - 0x77] ; ret 0xfae9
0x000000000042d10e : dec dword ptr [rax - 0x77] ; retf
0x0000000000493f4c : dec dword ptr [rax - 0x77] ; retf 0x2de9
0x000000000047e354 : dec dword ptr [rax - 0x77] ; retf 0x8948
0x000000000042ca89 : dec dword ptr [rax - 0x77] ; retf 0x894c
0x0000000000493ead : dec dword ptr [rax - 0x77] ; retf 0xb60f
0x000000000048934f : dec dword ptr [rax - 0x77] ; retf 0xc148
0x0000000000414c19 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; pop rbp ; retf 0xffff
0x000000000041af97 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000049db5a : dec dword ptr [rax - 0x7d] ; clc ; std ; jbe 0x49db70 ; ret
0x000000000041a538 : dec dword ptr [rax - 0x7d] ; ret
0x00000000004042fc : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000410989 : dec dword ptr [rax - 0x7d] ; ret 0x4802
0x000000000046f8eb : dec dword ptr [rax - 0x7d] ; ret 0x4804
0x000000000042107b : dec dword ptr [rax - 0x7d] ; ret 0x4901
0x00000000004734d4 : dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000041a5a7 : dec dword ptr [rax - 0x7d] ; ret 0xe902
0x0000000000428cac : dec dword ptr [rax - 0x7d] ; retf 0xeb0b
0x0000000000475fd8 : dec dword ptr [rax - 0x7d] ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x0000000000467730 : dec dword ptr [rax - 0x7f] ; ret
0x000000000045083c : dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000049311d : dec dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x000000000041afa4 : dec dword ptr [rax - 9] ; ret
0x0000000000475155 : dec dword ptr [rax - 9] ; ror dword ptr [rax - 0x77], 1 ; retf 0x8348
0x00000000004aa8fb : dec dword ptr [rax] ; idiv bh ; and esp, dword ptr [rbp - 0xa] ; jmp qword ptr [rbx]
0x000000000047e034 : dec dword ptr [rbp + 0x63] ; ret 0x20be
0x000000000049347e : dec dword ptr [rbp + rcx*4 + 0xd] ; retf 0x29f
0x000000000048427d : dec dword ptr [rbp - 0x77] ; ret 0x894c
0x000000000046e05d : dec dword ptr [rbp - 0x77] ; retf
0x0000000000479076 : dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000440073 : dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x000000000041c0f4 : dec dword ptr [rbx + 0x2c10c115] ; add bh, dh ; ret 0
0x000000000040125c : dec dword ptr [rbx + 0x2db1b505] ; add byte ptr [rcx], bh ; ret 0xd7f
0x00000000004011d1 : dec dword ptr [rbx + 0x2db24005] ; add byte ptr [rcx], bh ; ret 0xc7e
0x000000000043ed8d : dec dword ptr [rbx + 0x90c2454] ; ret 0xbae9
0x0000000000420994 : dec dword ptr [rbx + rcx*4 + 0x3d] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x2b
0x000000000048dc28 : dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x000000000048d1bb : dec dword ptr [rbx - 0x3b7cb7fa] ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000418bd8 : dec dword ptr [rcx + 0x21] ; retf 0x8948
0x0000000000418bf6 : dec dword ptr [rcx + 0x29] ; retf 0x8948
0x0000000000418c57 : dec dword ptr [rcx + 0x31] ; retf 0x8948
0x000000000047c873 : dec dword ptr [rcx + 0x39] ; ret
0x000000000047df8f : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x0000000000498469 : dec dword ptr [rcx + 0x39] ; ret 0x860f
0x00000000004a6dda : dec dword ptr [rcx + 0x39] ; retf
0x0000000000418c62 : dec dword ptr [rcx + 0x39] ; retf 0x8948
0x0000000000487715 : dec dword ptr [rcx + 0x63] ; ret
0x0000000000487297 : dec dword ptr [rcx + 0x63] ; ret 0x8545
0x0000000000489a3e : dec dword ptr [rcx + 0x63] ; retf 0x20be
0x000000000041d4bd : dec dword ptr [rcx + 0x63] ; test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x0000000000418c2b : dec dword ptr [rcx + 1] ; retf 0x8948
0x0000000000418c20 : dec dword ptr [rcx + 9] ; retf 0x8948
0x00000000004986e5 : dec dword ptr [rcx + rax - 0x28] ; call rax
0x0000000000474dda : dec dword ptr [rcx + rcx*4 - 0x11] ; call r12
0x000000000046bce9 : dec dword ptr [rcx + rcx*4 - 1] ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x0000000000474f31 : dec dword ptr [rcx + rcx*4 - 9] ; call rbx
0x000000000047520f : dec dword ptr [rcx + rcx*4 - 9] ; call rdx
0x0000000000479f26 : dec dword ptr [rcx - 0x2f42763f] ; idiv bh ; call rax
0x0000000000489273 : dec dword ptr [rcx - 0x4e773] ; inc dword ptr [rcx + 0x29] ; retf 0x98e9
0x0000000000437eac : dec dword ptr [rcx - 0x73] ; and byte ptr [r8 - 0x7d], r9b ; retf
0x00000000004a9566 : dec dword ptr [rcx - 0x73] ; and byte ptr [rax - 0x7d], cl ; retf
0x00000000004a5567 : dec dword ptr [rcx - 0x73] ; or byte ptr [rax - 0x77], r9b ; ret
0x000000000042958f : dec dword ptr [rcx - 0x75] ; add byte ptr [r8 - 0x7d], r9b ; ret
0x000000000047c7d7 : dec dword ptr [rcx - 0x77] ; ret
0x00000000004987b0 : dec dword ptr [rcx - 0x77] ; ret 0x13e9
0x000000000041fac1 : dec dword ptr [rcx - 0x77] ; ret 0x149
0x0000000000499150 : dec dword ptr [rcx - 0x77] ; ret 0x9be9
0x0000000000487264 : dec dword ptr [rcx - 0x77] ; ret 0xff31
0x0000000000438246 : dec dword ptr [rcx - 0x7b] ; ret
0x000000000047c5df : dec dword ptr [rcx - 0x7d] ; ret
0x000000000047cadb : dec dword ptr [rdi + rcx + 0x48] ; ret 0x958b
0x00000000004af9e7 : dec dword ptr [rdi - 0x33000459] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp rax
0x000000000046d78b : dec dword ptr [rdi] ; ret 0x41c3
0x000000000046fdef : dec dword ptr [rdi] ; test byte ptr [rsi - 0x8fffffc], cl ; ret 0
0x0000000000462410 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000047bdbf : dec dword ptr [rdi] ; test dword ptr [rsi - 0x16000007], esi ; ret
0x00000000004998aa : dec dword ptr [rdi] ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000047c547 : dec dword ptr [rdi] ; xchg byte ptr [rdx], ah ; and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000043d31c : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd020
0x000000000043481b : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x00000000004aba6b : dec dword ptr [rdx + 0x7cfff71a] ; sbb dh, bh ; jmp qword ptr [rax]
0x00000000004c85d3 : dec dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rsi + rbp*4], al ; retf
0x00000000004aebfb : dec eax ; push 0x6922fffb ; sti ; call rdx
0x00000000004ab42f : dec eax ; ret 0xfff6
0x00000000004adb9b : dec edx ; cmp dl, bh ; push qword ptr [rax + 0x38] ; cli ; jmp rax
0x00000000004af9ab : dec esp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; call qword ptr [rbx]
0x00000000004af9eb : dec esp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp rax
0x00000000004aab93 : dec esp ; test al, 0xf6 ; call rax
0x0000000000478128 : dec qword ptr [r13 - 0x77] ; retf
0x000000000045e3c1 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x00000000004caad9 : div ah ; call qword ptr [rbx]
0x00000000004c60b9 : div bl ; jmp qword ptr [rdx]
0x000000000048f7a2 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x0000000000407288 : div byte ptr [rbp + 5] ; ret
0x000000000049a815 : div byte ptr [rbx + rax + 0x48] ; mov dword ptr [rsi], edi ; mov rax, rcx ; ret
0x000000000047f836 : div byte ptr [rcx + 2] ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; retf 6
0x0000000000475351 : div byte ptr [rsp + rcx - 0x7d] ; inc byte ptr [rbx] ; je 0x475369 ; ret
0x000000000046de22 : div dword ptr [rdi + rbp - 0x75] ; adc dword ptr [rdi], ecx ; retf 0xd285
0x00000000004822c6 : div eax ; add r9d, eax ; mov eax, r9d ; ret
0x00000000004c6181 : div ebx ; call qword ptr [rdx]
0x0000000000464248 : div ecx ; mov eax, eax ; ret
0x000000000046422f : div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000004822c5 : div r8d ; add r9d, eax ; mov eax, r9d ; ret
0x0000000000447907 : enter -0x23b, -0x29 ; ret 0xc085
0x000000000049a770 : enter -0x3eb8, -8 ; add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x0000000000462584 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000004aebfc : enter -0x498, -1 ; and ch, byte ptr [rcx - 5] ; call rdx
0x000000000049f8ab : enter -0x72b8, 0x41 ; adc byte ptr [rdi], cl ; sahf ; ret 0x3948
0x000000000045e27e : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000045e3be : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x00000000004921a0 : enter -0x72b8, 0xc ; xor byte ptr [rax + 1], cl ; retf
0x00000000004476e7 : enter -0x73b, 0x77 ; ret
0x000000000049a87a : enter -0x76b8, -0x38 ; ret
0x0000000000480b0f : enter -0x7cb7, -0x40 ; add dword ptr [rcx], edi ; retf
0x000000000040c55f : enter -0x7cb8, -8 ; push qword ptr [rbp - 0x16] ; ret
0x000000000040916c : enter -0x8e, -1 ; jmp 0x40913a
0x00000000004aaa68 : enter -0x98e, -1 ; pop rax ; jle 0x4aaa6c ; call rax
0x00000000004ab3c5 : enter -0xa, -0x30 ; enter -0xa, 0x28 ; retf 0xfff6
0x00000000004ab3c9 : enter -0xa, 0x28 ; retf 0xfff6
0x00000000004480b4 : enter -2, -1 ; ret
0x00000000004ae4a1 : enter -6, -0x80 ; leave ; cli ; call rax
0x00000000004ad7a9 : enter -7, -0x60 ; leave ; stc ; push rax ; retf 0xfff9
0x00000000004b759c : enter 0, 0 ; retf
0x00000000004bb5f0 : enter 0, 0 ; retf 0
0x00000000004b8748 : enter 0x10, 0 ; retf
0x000000000045c809 : enter 0x148, -8 ; vzeroupper ; ret
0x000000000048814c : enter 0x1b9, 0 ; add byte ptr [rax], al ; jmp rax
0x00000000004a0671 : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000045cb6e : enter 0x2948, -0x30 ; vzeroupper ; ret
0x0000000000441c6d : enter 0x31c3, -0x40 ; ret
0x0000000000462b70 : enter 0x357e, 0x48 ; movsxd rax, ecx ; ret
0x00000000004080a5 : enter 0x415d, 0x5c ; ret
0x00000000004c8f54 : enter 0x49, 0 ; pop rax ; sub esp, esi ; call qword ptr [rcx]
0x00000000004c28fc : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004b7f48 : enter 0xa, 0 ; retf
0x00000000004b8348 : enter 0xd, 0 ; retf
0x0000000000449356 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000045c1d1 : enter 0xf66, -0x15 ; ret
0x00000000004d4254 : enter 0xfc, 0 ; or al, cl ; cld ; jmp qword ptr [rdx]
0x00000000004bb7f0 : enter 1, 0 ; retf 1
0x00000000004b8b00 : enter 2, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004bb9f0 : enter 2, 0 ; retf 2
0x00000000004bbbf0 : enter 3, 0 ; retf 3
0x00000000004bbdf0 : enter 4, 0 ; retf 4
0x00000000004bbff0 : enter 5, 0 ; retf 5
0x00000000004bc1f0 : enter 6, 0 ; retf 6
0x00000000004bc3f0 : enter 7, 0 ; retf 7
0x00000000004bc5f0 : enter 8, 0 ; retf 8
0x00000000004bc7f0 : enter 9, 0 ; retf 9
0x00000000004196c3 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x000000000042b7b8 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000042b286 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000474d05 : fadd qword ptr [rax - 0x7bf0ffc2] ; retf
0x00000000004ccb68 : fadd qword ptr [rbp + 0x53d40000] ; idiv bh ; retf
0x00000000004822b3 : fadd qword ptr [rcx + rcx*4 - 0x38] ; ret
0x000000000040255b : fadd qword ptr [rsi] ; add byte ptr [rax], al ; leave ; ret
0x0000000000448ea1 : fbld tbyte ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004a7394 : fbstp tbyte ptr [rbp - 0x17] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004c1f38 : fcmovb st(0), st(3) ; ret
0x000000000045cc8b : fcmovnb st(0), st(5) ; std ; xlatb ; ret
0x000000000047afa6 : fcmovnb st(0), st(6) ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x00000000004ae15c : fcom qword ptr [rdx + rdi*8 - 1] ; insb byte ptr [rdi], dx ; push rsp ; cli ; call qword ptr [rdx]
0x00000000004d1768 : fcom st(0), st(1) ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; test al, 0xfa ; call qword ptr [rsi]
0x00000000004c3b80 : fcom st(0), st(3) ; std ; push rsp ; sar ebp, cl ; jmp qword ptr [rbx]
0x00000000004196c9 : fcomi st(3) ; ret
0x0000000000407880 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000407783 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000040d0bd : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004043ad : fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000040757b : fcomp dword ptr [rbx - 0x3d] ; nop ; mov rax, qword ptr [rdi] ; ret
0x00000000004c2cb9 : fcomp dword ptr [rdx + 0x21] ; ret
0x000000000040d3d3 : fcomp dword ptr [rdx + 0x5b] ; ret
0x00000000004c0f20 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000004a4558 : fdiv dword ptr [rbp + 0x11] ; add rsp, 0x40 ; pop rbx ; ret
0x00000000004a463f : fdiv dword ptr [rbp + 0x12] ; add rsp, 0x50 ; pop rbx ; ret
0x0000000000405636 : fdiv dword ptr [rbp + 0x3a] ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004098cc : fdiv dword ptr [rbp + 7] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004ad6c1 : fdiv st(1), st(0) ; inc dword ptr [rax - 0x22] ; stc ; jmp qword ptr [rax]
0x00000000004ad6e1 : fdiv st(1), st(0) ; inc dword ptr [rax] ; fdivp st(1) ; jmp rax
0x000000000046f12c : fdiv st(2), st(0) ; inc dword ptr [rcx - 0x77] ; ret
0x00000000004a6ea9 : fdiv st(3) ; ret
0x00000000004c60b8 : fdiv st(6) ; jmp qword ptr [rdx]
0x00000000004ad625 : fdivp st(1) ; call rax
0x00000000004ad6c5 : fdivp st(1) ; jmp qword ptr [rax]
0x00000000004ad6e5 : fdivp st(1) ; jmp rax
0x00000000004cc368 : fdivr qword ptr [rbp] ; add byte ptr [rdx - 0xa], ah ; jmp rdi
0x00000000004c4ee1 : fdivr st(3), st(0) ; jmp qword ptr [rsi]
0x00000000004c0275 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000462588 : fdivr st(7) ; ret
0x00000000004c5435 : fdivrp st(3) ; call qword ptr [rcx]
0x00000000004c53d1 : fdivrp st(3) ; jmp qword ptr [rdx]
0x000000000042ab18 : fiadd dword ptr [rbp + 0x450f48c9] ; ret 0x8348
0x000000000048d363 : fiadd dword ptr [rbx - 0x7bf0fc1e] ; retf
0x000000000042e51a : fiadd word ptr [rcx + rcx*4 - 0x11] ; mov eax, r9d ; syscall
0x000000000040de45 : ficomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004c2b06 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x00000000004971d3 : fidiv word ptr [rdi + 2] ; add byte ptr [rax + 0xf], cl ; ret 0x3e80
0x00000000004a41b5 : fidivr dword ptr [rax + 1] ; ret
0x000000000041ec36 : fild qword ptr [rbx] ; add al, ch ; ret 0xbe13
0x00000000004406d1 : fild word ptr [r9] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000040dd30 : fild word ptr [rax - 0x6bf0b006] ; ret 0xd009
0x00000000004810a2 : fild word ptr [rbp - 0x77] ; ret 0x8b4c
0x00000000004406d2 : fild word ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000435cbc : fimul dword ptr [rax + 0x21] ; ret 0x8948
0x0000000000471f99 : fimul dword ptr [rax + 0x29] ; ret 0x8348
0x000000000049ce37 : fimul dword ptr [rax + 0x39] ; ret 0x7472
0x0000000000481c3d : fimul dword ptr [rax + 0x39] ; ret 0xe57f
0x00000000004a28a4 : fimul dword ptr [rax + 0x39] ; retf 0xe677
0x0000000000481c02 : fimul dword ptr [rax + 0x39] ; retf 0xe87f
0x0000000000446436 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004885bd : fimul dword ptr [rax - 0x3f] ; clc ; add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x000000000041fca4 : fimul dword ptr [rbx + 0x4d8b005d] ; add al, 0xf ; retf
0x000000000046d92f : fimul word ptr [rax + 1] ; ret
0x00000000004a04fc : fimul word ptr [rbp + 0x11] ; retf
0x000000000043da71 : fimul word ptr [rcx + rcx*4 - 0x11] ; call 0x439cb6
0x000000000040a7a9 : fistp dword ptr [rdi + rdi*8 - 1] ; nop dword ptr [rax] ; mov byte ptr [rdi], dl ; ret
0x000000000046659f : fistp qword ptr [rax + 0x17] ; syscall
0x0000000000467e7f : fistp qword ptr [rax + 0x2a] ; syscall
0x0000000000467f36 : fistp qword ptr [rax + 0x2c] ; syscall
0x000000000046594f : fistp qword ptr [rax + 1] ; syscall
0x00000000004326fe : fistp word ptr [rbx + 0x5d] ; jmp rax
0x000000000048ce90 : fistp word ptr [rbx + 0x5d] ; pop r12 ; jmp rax
0x000000000041bc41 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000049f4b1 : fisttp dword ptr [rax - 0x77] ; ret
0x0000000000482a8c : fisttp dword ptr [rax - 0x7b] ; rol byte ptr [rcx + 0xf], 0x94 ; ret
0x000000000049b606 : fisttp dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret
0x000000000049407e : fisttp dword ptr [rax - 0x7d] ; ret
0x0000000000418af0 : fisttp dword ptr [rbx + 0x63] ; add al, 0x99 ; add rax, r9 ; jmp rax
0x000000000049f4cb : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x0000000000471c77 : fisttp dword ptr [rcx - 0x7d] ; ret
0x0000000000499724 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x000000000043cf0b : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xd020
0x000000000042109e : fisttp qword ptr [rax - 0x7d] ; ret 0x4401
0x00000000004748ca : fisttp qword ptr [rdi] ; ret 0xc389
0x0000000000411e4c : fisttp word ptr [rax - 0x75] ; push rax ; adc al, ch ; retf 0x34
0x000000000049ce42 : fisttp word ptr [rax - 0x77] ; ret 0x5de8
0x0000000000403885 : fisttp word ptr [rax - 0x77] ; ret 0x8948
0x0000000000418eec : fisttp word ptr [rax - 0x7d] ; ret
0x000000000049f54f : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000465c0d : fisttp word ptr [rcx + 0x3b8c2] ; add byte ptr [rax], al ; syscall
0x0000000000410e6a : fisttp word ptr [rcx - 0x77] ; ret
0x000000000045b2cd : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x0000000000449271 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000448f71 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004a1039 : fld dword ptr [rcx] ; add byte ptr [rbx + rcx*4 + 0xd], cl ; popfq ; retf 0x23
0x000000000049f7c4 : fld qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x149
0x00000000004c0f61 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x000000000048f5f2 : fld st(5) ; std ; xlatb ; retf 0xfdc5
0x000000000048f652 : fld st(5) ; std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x0000000000472413 : fldcw word ptr [rcx - 0x76be0006] ; ret 0x5be9
0x0000000000447319 : fldenv [rsi + 0xf] ; je 0x447376 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000004475f7 : fldenv [rsi + 0xf] ; je 0x447654 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000004492f1 : fldenv [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000447211 : fldenv [rsi + 0xf] ; xlatb ; ret
0x0000000000471983 : fldl2t ; retf 0xfffd
0x0000000000484aac : fldpi ; stosd dword ptr [rdi], eax ; mov eax, 1 ; ret
0x000000000040309b : fmul dword ptr [r8 + 1] ; ror cl, 1 ; ret
0x00000000004028c1 : fmul dword ptr [r8 - 0x77] ; ret 0x8948
0x0000000000402b00 : fmul dword ptr [r8 - 0x77] ; ror dword ptr [rax - 0x77], 1 ; ret 0x8948
0x00000000004a0564 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000436dbf : fmul dword ptr [rax + 0x39] ; ret
0x000000000040309c : fmul dword ptr [rax + 1] ; ror cl, 1 ; ret
0x0000000000462857 : fmul dword ptr [rax + 9] ; retf 0x4466
0x000000000042e018 : fmul dword ptr [rax - 0x77] ; ret
0x00000000004028c2 : fmul dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000402b01 : fmul dword ptr [rax - 0x77] ; ror dword ptr [rax - 0x77], 1 ; ret 0x8948
0x00000000004293a1 : fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000004015de : fmul dword ptr [rbx + 0x2dae3305] ; add byte ptr [rcx], bh ; ret 0x707d
0x00000000004a5ab4 : fmul dword ptr [rbx + rcx*4 + 0x34] ; ret 0xf41
0x000000000046901c : fmul dword ptr [rbx - 0x7ad33ebc] ; ror byte ptr [rdi], 0x84 ; retf 0
0x0000000000493120 : fmul dword ptr [rcx + 0x21] ; ret
0x000000000040da79 : fmul dword ptr [rcx - 0x77] ; imul ecx, dword ptr [rax + 0x5b], 0x5d ; ret
0x0000000000485490 : fmul dword ptr [rdi] ; ret
0x00000000004c78c8 : fmul dword ptr [rsp + rsi*8] ; jmp qword ptr [rdx]
0x00000000004a2d42 : fmul qword ptr [rax - 0x77] ; ret
0x000000000041b55e : fmul qword ptr [rbx + rcx*4 + 0x58] ; sub byte ptr [rbp + 1], cl ; retf
0x0000000000440a29 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000454f4f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000047bb9f : fmul qword ptr [rdi] ; lea ebp, [rdx] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000474ac8 : fmul qword ptr [rdi] ; ret 0xc389
0x000000000048f5f0 : fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x000000000044058f : fnsave dword ptr [rdi] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004c27aa : fnstsw dword ptr [rbx + rdx*4] ; in al, dx ; retf 0xae32
0x0000000000428df9 : fpatan ; ret
0x0000000000449071 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004ae4d5 : fsqrt ; call qword ptr [rax + 0x20fffada]
0x00000000004c0c47 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000004c0fc0 : fstp st(0) ; ret 0xde5d
0x00000000004c018b : fstp st(3), st(0) ; retf 0xeb83
0x00000000004cea64 : fsub dword ptr [rax + rax - 0x8f1a800] ; jmp qword ptr [rbx]
0x00000000004aa8f4 : fsub dword ptr [rbp - 0xa] ; jmp qword ptr [rbx]
0x0000000000465578 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000465608 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000004c8b48 : fsub dword ptr [rdx] ; hlt ; call qword ptr [rax]
0x00000000004c6b64 : fsub dword ptr [rip + 0x2980000] ; hlt ; call qword ptr [rbx]
0x0000000000449371 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000045d0f4 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000004c6c64 : fsub dword ptr [rsi] ; add byte ptr [rax], al ; add rsi, rsp ; call qword ptr [rbx]
0x00000000004c6a68 : fsub qword ptr [rax + rax] ; add byte ptr [rdx + rax], al ; hlt ; call qword ptr [rbx]
0x000000000040a3c0 : fsub qword ptr [rbp + 0x1f0fffff] ; add bl, sil ; ret
0x00000000004c2578 : fsub qword ptr [rbx] ; sub dword ptr [rsi], 0x76 ; retf
0x000000000046299b : fsub qword ptr [rsi + 0xf] ; jmp 0x462967
0x0000000000449171 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000045c2ec : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000043f8f3 : fsubr dword ptr [rcx] ; add bh, dh ; ret 0
0x00000000004c7064 : fsubr dword ptr [rdx] ; add byte ptr [rax], al ; or byte ptr [rsp + rsi*8], al ; jmp qword ptr [rdx]
0x0000000000465bb4 : fsubr st(3) ; ret 0xf66
0x00000000004c2c98 : fucom st(5) ; loop 0x4c2cf1 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004962b1 : fucomi st(3) ; ret 0x1f0f
0x0000000000415239 : fucomip st(0) ; add dword ptr [rip - 0x13170000], edx ; ret
0x000000000042b467 : fucomip st(0) ; ret
0x000000000040ed28 : fucomip st(0) ; ret 0xffe7
0x00000000004179c1 : fucomip st(1) ; ret
0x00000000004c22de : fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004c8b4a : hlt ; call qword ptr [rax]
0x00000000004c6a6e : hlt ; call qword ptr [rbx]
0x00000000004c7b36 : hlt ; call qword ptr [rcx]
0x00000000004c6a82 : hlt ; call qword ptr [rdi]
0x00000000004c6aee : hlt ; call qword ptr [rdx]
0x00000000004c5dcd : hlt ; call qword ptr [rsi]
0x0000000000466d61 : hlt ; call r15
0x00000000004c7dfe : hlt ; call rdx
0x00000000004c85d2 : hlt ; dec dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rsi + rbp*4], al ; retf
0x0000000000409698 : hlt ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xc4c0
0x00000000004cd39c : hlt ; jae 0x4cd398 ; call qword ptr [rdi]
0x00000000004c6f02 : hlt ; jmp qword ptr [rax]
0x00000000004c6e9e : hlt ; jmp qword ptr [rbx]
0x00000000004c6e3a : hlt ; jmp qword ptr [rdi]
0x00000000004c706a : hlt ; jmp qword ptr [rdx]
0x00000000004c879e : hlt ; jmp qword ptr [rsi]
0x00000000004c888e : hlt ; jmp rax
0x00000000004c85ba : hlt ; lcall [rcx] ; add byte ptr [rax], al ; add byte ptr [rdx + rax*8], al ; retf
0x00000000004cf280 : hlt ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; stc ; call qword ptr [rdx]
0x0000000000450c7a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000044b92e : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x000000000046503e : hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x0000000000462093 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000400ada : hlt ; nop dword ptr [rax + rax] ; ret
0x00000000004ae224 : hlt ; pop rbx ; cli ; push qword ptr [rbx + rbx*2 - 6] ; jmp rsp
0x00000000004a8e78 : hlt ; ret
0x00000000004d0880 : hlt ; ret 0
0x00000000004c3b84 : hlt ; sar ebp, cl ; jmp qword ptr [rbx]
0x00000000004c6380 : hlt ; sbb eax, 0xfa1c0000 ; call qword ptr [rdx]
0x00000000004207a0 : hlt ; shr dword ptr [rbx], cl ; add al, ch ; retf
0x00000000004c1183 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000462097 : hlt ; sub eax, edx ; ret
0x00000000004aa8a6 : idiv bh ; adc byte ptr [rdi - 0xa], ah ; jmp qword ptr [rbx]
0x00000000004aa69e : idiv bh ; adc byte ptr [rdx - 0xa], dl ; call qword ptr [rax]
0x00000000004aa9ae : idiv bh ; add byte ptr [rax - 0xa], ch ; jmp rax
0x00000000004aa822 : idiv bh ; add byte ptr [rsi - 0xa], dl ; jmp rsp
0x00000000004aa70a : idiv bh ; and byte ptr [rsi + rsi*8 - 1], dl ; adc byte ptr [rdx - 0xa], dl ; call qword ptr [rax]
0x00000000004aa8aa : idiv bh ; and esp, dword ptr [rbp - 0xa] ; jmp qword ptr [rbx]
0x00000000004aa69a : idiv bh ; call 0x114a9cfa
0x00000000004aa71e : idiv bh ; call 0x114a9d7e
0x0000000000479f2c : idiv bh ; call rax
0x00000000004ab3d2 : idiv bh ; cdq ; retf 0xfff6
0x00000000004aa6ba : idiv bh ; cmp byte ptr [rbp - 0xa], dl ; call qword ptr [rax]
0x00000000004027df : idiv bh ; dec dword ptr [rax - 0x75] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004031aa : idiv bh ; dec dword ptr [rax - 0x75] ; add cl, cl ; ret
0x00000000004aaa66 : idiv bh ; enter -0x98e, -1 ; pop rax ; jle 0x4aaa6e ; call rax
0x00000000004aa8f2 : idiv bh ; fsub dword ptr [rbp - 0xa] ; jmp qword ptr [rbx]
0x000000000047b174 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x000000000047ac86 : idiv bh ; jmp qword ptr [rax]
0x00000000004aa89e : idiv bh ; jne 0x4aa90e ; idiv bh ; pushfq ; movsxd rsi, esi ; call qword ptr [rax]
0x00000000004aaace : idiv bh ; jno 0x4aaace ; call rax
0x00000000004ab3ce : idiv bh ; leave ; idiv bh ; cdq ; retf 0xfff6
0x00000000004aac1e : idiv bh ; mov esp, 0xd0fff6af ; test al, 0xf6 ; call rax
0x00000000004aab72 : idiv bh ; nop ; jne 0x4aab72 ; call rax
0x00000000004aa8fa : idiv bh ; or byte ptr [rsi - 0xa], ah ; jmp qword ptr [rbx]
0x00000000004aaa6a : idiv bh ; pop rax ; jle 0x4aaa6a ; call rax
0x00000000004aa9aa : idiv bh ; pop rbx ; idiv bh ; add byte ptr [rax - 0xa], ch ; jmp rax
0x00000000004aa81e : idiv bh ; push rsi ; idiv bh ; add byte ptr [rsi - 0xa], dl ; jmp rsp
0x00000000004aa8a2 : idiv bh ; pushfq ; movsxd rsi, esi ; call qword ptr [rax]
0x00000000004aa772 : idiv bh ; rcl byte ptr [rbx - 0xa], 0xff ; adc byte ptr [rdx - 0xa], dl ; call qword ptr [rax]
0x00000000004aaada : idiv bh ; ret
0x00000000004ccb6e : idiv bh ; retf
0x00000000004aab82 : idiv bh ; retf 0xf6a2
0x00000000004ab42a : idiv bh ; rol dl, 0xf6 ; dec eax ; ret 0xfff6
0x00000000004ab376 : idiv bh ; rol dl, 0xf6 ; inc dword ptr [rax] ; ret
0x00000000004aab6e : idiv bh ; sal byte ptr [rax - 0xa], 1 ; call qword ptr [rax - 0x2f00098b]
0x00000000004aaaae : idiv bh ; sal byte ptr [rax - 0xa], 1 ; call rax
0x00000000004aa96a : idiv bh ; sub byte ptr [rsi - 0xa], ah ; jmp rax
0x00000000004aa6d2 : idiv bh ; test al, 0x52 ; idiv bh ; adc byte ptr [rdx - 0xa], dl ; call qword ptr [rax]
0x00000000004aaaaa : idiv bh ; xchg dword ptr [rax - 0xa], esi ; call rax
0x000000000046d786 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x00000000004ad93d : idiv cl ; call rax
0x00000000004ad941 : idiv ecx ; jmp qword ptr [rax]
0x00000000004aba4a : idiv edi ; adc al, 0x1b ; idiv edi ; cmc ; sbb dh, bh ; call rsi
0x00000000004aba2a : idiv edi ; adc byte ptr [rdx], bl ; idiv edi ; ret 0xf719
0x00000000004aba42 : idiv edi ; add ebx, dword ptr [rdx] ; idiv edi ; ret 0xf719
0x000000000047a246 : idiv edi ; call qword ptr [rax]
0x00000000004aba4e : idiv edi ; cmc ; sbb dh, bh ; call rsi
0x000000000047b1fa : idiv edi ; dec dword ptr [rax + 0x63] ; retf
0x000000000047a12e : idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xbc40
0x0000000000409699 : idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xc4c0
0x0000000000486c31 : idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000410084 : idiv edi ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000485e8d : idiv edi ; inc dword ptr [rcx - 1] ; push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000486c66 : idiv edi ; jmp 0x486c30
0x000000000048e5ae : idiv edi ; mov rcx, rax ; jmp 0x48e57e
0x00000000004aba2e : idiv edi ; ret 0xf719
0x00000000004aba5a : idiv edi ; ret 0xf71a
0x0000000000494b47 : imul al ; cmp edi, dword ptr [rcx - 0x7cb7000a] ; ret
0x000000000040f747 : imul eax ; ret
0x000000000040c3ef : imul eax ; retf
0x0000000000460bf1 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x0000000000444867 : imul eax, dword ptr [rcx], 0x894d0000 ; retf
0x0000000000484572 : imul eax, dword ptr [rcx], 0xc7480000 ; ret 0xffe0
0x0000000000444267 : imul eax, dword ptr [rdi], 0x894d0000 ; retf
0x0000000000497223 : imul eax, dword ptr [rdx], 0x450f4800 ; ret 0x8b48
0x0000000000401717 : imul eax, dword ptr [rsi], 0 ; leave ; ret
0x00000000004ad5dc : imul eax, edx, -7 ; push rax ; ret 0xfff9
0x000000000040da7c : imul ecx, dword ptr [rax + 0x5b], 0x5d ; ret
0x0000000000408289 : imul ecx, dword ptr [rax - 0x7d], 0x5d5b18c4 ; ret
0x00000000004455c7 : imul ecx, dword ptr [rbx], 0x894d0000 ; retf
0x00000000004467a7 : imul ecx, dword ptr [rcx], 0x894d0000 ; retf
0x0000000000443f67 : imul ecx, dword ptr [rdx], 0x894d0000 ; retf
0x00000000004cccc7 : imul ecx, dword ptr [rsi], 0x18 ; ret
0x00000000004aebf9 : imul edi, ebx, 0xfb68c8ff ; jmp qword ptr [rdx]
0x00000000004aec3d : imul edi, ebx, 0xfb696aff ; jmp qword ptr [rdx]
0x00000000004aeae5 : imul edi, ebx, 0xfb6a76ff ; jmp rsi
0x000000000041fc54 : imul edi, edx, -1 ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000443967 : imul edx, dword ptr [rax], 0x894d0000 ; retf
0x0000000000443667 : imul edx, dword ptr [rbx], 0x894d0000 ; retf
0x0000000000443367 : imul edx, dword ptr [rsi], 0x894d0000 ; retf
0x000000000043428e : imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x000000000046006c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x0000000000401784 : imul rax, qword ptr [rsi], 0 ; leave ; ret
0x00000000004d29e5 : in al, 0 ; add byte ptr [rax - 0x26], bl ; sti ; jmp qword ptr [rax]
0x00000000004c5970 : in al, 0x13 ; add byte ptr [rax], al ; pop rsp ; out dx, al ; call qword ptr [rbx]
0x00000000004c25c1 : in al, 0x4c ; pop rax ; retf
0x000000000045cd7c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x0000000000468df3 : in al, 0x80 ; cli ; cmp eax, 0x83497174 ; ret
0x0000000000488d98 : in al, 0xee ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000047a820 : in al, 0xf ; lahf ; ret
0x0000000000450c5a : in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000463d0e : in al, 0xf3 ; ret
0x00000000004cb931 : in al, 0xf5 ; jmp qword ptr [rax]
0x00000000004ad691 : in al, 0xf9 ; jmp qword ptr [rax]
0x00000000004c6e9c : in al, 3 ; hlt ; jmp qword ptr [rbx]
0x0000000000409e90 : in al, 5 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000402584 : in al, 6 ; add byte ptr [rax], al ; nop ; leave ; ret
0x000000000040bb72 : in al, 9 ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000429c73 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000042a03b : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf
0x0000000000439b3c : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf 0x2e4
0x000000000048236c : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf 0xfe5c
0x00000000004c46e8 : in al, dx ; add byte ptr [rax], al ; add byte ptr [rdi], dl ; retf
0x00000000004c6c78 : in al, dx ; add byte ptr es:[rax], al ; push rsp ; add esi, esp ; call qword ptr [rdx]
0x000000000047acc4 : in al, dx ; add dword ptr [rax - 0x93b43], eax ; jmp qword ptr [rax]
0x000000000047ab01 : in al, dx ; add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x0000000000440070 : in al, dx ; add edi, esp ; dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x00000000004c6b78 : in al, dx ; and eax, 0x2a40000 ; hlt ; call qword ptr [rdx]
0x0000000000430ab1 : in al, dx ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004cff78 : in al, dx ; mov ecx, 0x82640000 ; stc ; call rdx
0x000000000044b92a : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000045105a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004c78e4 : in al, dx ; or al, 0xf4 ; jmp qword ptr [rdx]
0x00000000004153da : in al, dx ; or byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rcx ; jmp rax
0x000000000040b29a : in al, dx ; or byte ptr [rax - 0x75], cl ; cmovs ebp, dword ptr [rcx] ; retf
0x000000000040c41b : in al, dx ; or byte ptr [rax - 0x75], cl ; or byte ptr [r8 + 0x39], r9b ; retf 0x2773
0x00000000004071bd : in al, dx ; or byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000043adaf : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000446824 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000408995 : in al, dx ; or byte ptr [rcx + rcx*4 - 0x37], cl ; xor eax, eax ; call 0x404c99
0x000000000040890d : in al, dx ; or byte ptr [rcx], dh ; shr al, 0x7a ; ret
0x0000000000407823 : in al, dx ; ret
0x00000000004c27ad : in al, dx ; retf 0xae32
0x000000000041a2a9 : in al, dx ; sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x00000000004a68b4 : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004ad961 : in al, dx ; stc ; call qword ptr [rax]
0x00000000004c26de : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4c2671 ; ret 0x48f
0x00000000004c26dd : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4c2672 ; ret 0x48f
0x00000000004652d6 : in eax, 0 ; add byte ptr [rax], al ; syscall
0x00000000004c0de3 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000043c263 : in eax, 0x29 ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000042c1f6 : in eax, 0x2a ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000402b8f : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; nop ; pop rbp ; ret
0x0000000000401d72 : in eax, 0x48 ; mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x00000000004a0822 : in eax, 0x48 ; mov eax, esi ; ret
0x00000000004c0079 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x00000000004187ea : in eax, 0x83 ; call qword ptr [rcx]
0x00000000004a0a3f : in eax, 0xc9 ; and eax, dword ptr [rax] ; add rsp, 8 ; ret
0x000000000047fa8d : in eax, 0xdf ; loopne 0x47fa1e ; ret
0x00000000004c2c99 : in eax, 0xe2 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004c0e3a : in eax, 0xe5 ; retf 0x2a91
0x0000000000490913 : in eax, 0xf ; je 0x490938 ; add rax, 2 ; ret
0x00000000004641c9 : in eax, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x0000000000450cda : in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004c2161 : in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000044071b : in eax, 2 ; cmovne rax, rdx ; ret
0x0000000000483038 : in eax, dx ; add al, 0x84 ; ror byte ptr [rdi], 0x84 ; ret 0x17
0x00000000004861c8 : in eax, dx ; add dword ptr [rax - 0x91743], eax ; jmp qword ptr [rax]
0x000000000046681a : in eax, dx ; jne 0x466837 ; mov rdi, qword ptr [rbx] ; call r12
0x0000000000467385 : in eax, dx ; jne 0x4673af ; mov rdi, qword ptr [rbx] ; call r12
0x00000000004673b8 : in eax, dx ; jne 0x467408 ; mov rdi, qword ptr [rbp] ; call r12
0x00000000004673e4 : in eax, dx ; jne 0x467468 ; mov rdi, qword ptr [rbp] ; call r12
0x00000000004a73df : in eax, dx ; jne 0x4a73c1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004a7632 : in eax, dx ; jne 0x4a761f ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a81ec : in eax, dx ; jne 0x4a81d7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004628b2 : in eax, dx ; lea rax, [rcx - 1] ; ret
0x000000000044b73a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000410976 : in eax, dx ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004510da : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000049ec97 : in eax, dx ; or byte ptr [rax + 0x39], cl ; retf
0x00000000004324a2 : in eax, dx ; ret
0x00000000004c0bb8 : in eax, dx ; retf
0x0000000000462a02 : in eax, dx ; sub rax, 1 ; ret
0x0000000000462d18 : inc bl ; cmp dl, 1 ; jb 0x462d2a ; mov byte ptr [rdi], cl ; ret
0x000000000041730e : inc bl ; mov eax, 0xfffffffd ; ret
0x0000000000432a92 : inc byte ptr [rbp + 0x738948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x00000000004669ac : inc byte ptr [rbp - 0x60f0be13] ; ret 0x8545
0x0000000000475355 : inc byte ptr [rbx] ; je 0x475365 ; ret
0x000000000049b2b8 : inc dword ptr [r9 + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004ad8bb : inc dword ptr [rax + 0x10fffa11] ; add al, 0xfa ; call rax
0x00000000004ad8db : inc dword ptr [rax + 0x11] ; cli ; call rax
0x00000000004adbbb : inc dword ptr [rax + 0x3c] ; cli ; call rax
0x00000000004ad9a3 : inc dword ptr [rax + 0x3f] ; cli ; call rax
0x00000000004c57a7 : inc dword ptr [rax + 0x4000001] ; ret
0x00000000004ad6bf : inc dword ptr [rax + 0x40fff9dc] ; fdivp st(1) ; jmp qword ptr [rax]
0x00000000004adedb : inc dword ptr [rax + 0x5f] ; cli ; call rsi
0x00000000004ae0b3 : inc dword ptr [rax + 0x63] ; cli ; call rax
0x00000000004ad49b : inc dword ptr [rax + 0x76] ; stc ; jmp qword ptr [rax]
0x00000000004ad86b : inc dword ptr [rax + 0xa] ; cli ; jmp qword ptr [rax]
0x00000000004ad8d7 : inc dword ptr [rax + 0xf] ; cli ; inc dword ptr [rax + 0x11] ; cli ; call rax
0x00000000004ad903 : inc dword ptr [rax + 5] ; cli ; call qword ptr [rax]
0x00000000004ad95f : inc dword ptr [rax - 0x14] ; stc ; call qword ptr [rax]
0x00000000004ad68f : inc dword ptr [rax - 0x1c] ; stc ; jmp qword ptr [rax]
0x00000000004ad6c3 : inc dword ptr [rax - 0x22] ; stc ; jmp qword ptr [rax]
0x00000000004ad6df : inc dword ptr [rax - 0x24] ; stc ; inc dword ptr [rax] ; fdivp st(1) ; jmp rax
0x00000000004ae4d3 : inc dword ptr [rax - 0x27] ; cli ; call qword ptr [rax + 0x20fffada]
0x00000000004ae4a3 : inc dword ptr [rax - 0x2f000537] ; retf 0xfffa
0x00000000004ad93b : inc dword ptr [rax - 0x2f00060a] ; idiv ecx ; jmp qword ptr [rax]
0x00000000004ad7c3 : inc dword ptr [rax - 0x2f00062f] ; sar cl, cl ; jmp qword ptr [rax]
0x00000000004ad76f : inc dword ptr [rax - 0x2f000636] ; retf
0x00000000004ad7b3 : inc dword ptr [rax - 0x34] ; stc ; call qword ptr [rax - 0x1f000633]
0x00000000004af3d3 : inc dword ptr [rax - 0x5f] ; sti ; jmp qword ptr [rax]
0x00000000004ae653 : inc dword ptr [rax - 0x670004a5] ; pop rbx ; sti ; call rax
0x00000000004ad817 : inc dword ptr [rax - 0x7f0005f0] ; adc bh, dl ; call qword ptr [rax]
0x00000000004ad8b7 : inc dword ptr [rax - 0x7f0005f1] ; adc edx, edi ; call qword ptr [rax]
0x000000000048691d : inc dword ptr [rax - 0x91743] ; jmp qword ptr [rax]
0x000000000047b1b5 : inc dword ptr [rax - 0x93b43] ; jmp qword ptr [rax]
0x00000000004ad92b : inc dword ptr [rax - 0xf] ; stc ; call qword ptr [rax - 0x1f00060e]
0x00000000004ae04f : inc dword ptr [rax - 6] ; call rsp
0x00000000004ad97f : inc dword ptr [rax - 8] ; stc ; call qword ptr [rax - 0x1f000607]
0x0000000000418fdd : inc dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x000000000047c7e9 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; retf 0x8944
0x000000000047b176 : inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x000000000046416f : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x0000000000449887 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x00000000004ad95b : inc dword ptr [rax] ; add edx, edi ; inc dword ptr [rax - 0x14] ; stc ; call qword ptr [rax]
0x00000000004adbab : inc dword ptr [rax] ; cli ; call qword ptr [rax + 0x20fffa3d]
0x00000000004ae0a3 : inc dword ptr [rax] ; cli ; call qword ptr [rax + 0x20fffa64]
0x00000000004ad9d3 : inc dword ptr [rax] ; cmp bh, dl ; call qword ptr [rax + 0x20fffa39]
0x00000000004ae3fb : inc dword ptr [rax] ; cmp edx, 0xfa8310ff ; jmp qword ptr [rax]
0x00000000004ad6e3 : inc dword ptr [rax] ; fdivp st(1) ; jmp rax
0x00000000004ad457 : inc dword ptr [rax] ; je 0x4ad45c ; push qword ptr [rax] ; pop rsi ; stc ; call qword ptr [rax]
0x00000000004ad6cb : inc dword ptr [rax] ; loop 0x4ad6cc ; jmp rax
0x00000000004ad513 : inc dword ptr [rax] ; mov edx, 0xbaf0fff9 ; stc ; jmp rax
0x00000000004ad4a7 : inc dword ptr [rax] ; nop ; stc ; push rax ; nop ; stc ; jmp rax
0x00000000004ab37b : inc dword ptr [rax] ; ret
0x00000000004ae4f3 : inc dword ptr [rax] ; sbb eax, 0x1d10fffb ; sti ; jmp qword ptr [rax]
0x00000000004ad483 : inc dword ptr [rax] ; test cl, bh ; push qword ptr [rax - 0x7b] ; stc ; jmp rax
0x00000000004adc13 : inc dword ptr [rax] ; xor dl, bh ; push qword ptr [rax + 0x2f] ; cli ; jmp rax
0x0000000000471c74 : inc dword ptr [rbp + 0x31] ; fisttp dword ptr [rcx - 0x7d] ; ret
0x0000000000497d2f : inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x000000000049e6ac : inc dword ptr [rbp - 0x76b08a40] ; ret
0x000000000041da50 : inc dword ptr [rbp - 0x7aa48740] ; ror byte ptr [rdi], 0x84 ; ret
0x00000000004009a7 : inc dword ptr [rbx + 0x438d01c1] ; call rbx
0x00000000004287cb : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x000000000041a819 : inc dword ptr [rbx - 0x38b7f808] ; ret 0xffff
0x00000000004763d0 : inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x0000000000418a13 : inc dword ptr [rbx - 0x7bf0bf1e] ; ret
0x000000000047b134 : inc dword ptr [rbx - 0x8f743] ; call qword ptr [rax]
0x000000000046422d : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000046419b : inc dword ptr [rbx] ; pop rbx ; ret
0x000000000049b2b9 : inc dword ptr [rcx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004af97b : inc dword ptr [rcx + 0x28fffba8] ; test al, 0xfb ; call qword ptr [rbx]
0x000000000047c502 : inc dword ptr [rcx + 0x29] ; ret 0x8545
0x0000000000489279 : inc dword ptr [rcx + 0x29] ; retf 0x98e9
0x00000000004a40e4 : inc dword ptr [rcx + 0xf] ; mov dh, 0x49 ; add al, 0x89 ; retf 0xeac0
0x000000000049cff2 : inc dword ptr [rcx + rbp - 0x40] ; ret
0x000000000042e77b : inc dword ptr [rcx + rcx*4 - 0x18] ; syscall
0x000000000048bcc1 : inc dword ptr [rcx + rcx*4 - 0x40] ; jmp 0x48bc97
0x00000000004adb57 : inc dword ptr [rcx + rdi - 6] ; call rsp
0x00000000004ad54b : inc dword ptr [rcx - 0x40] ; stc ; call rcx
0x000000000046f12e : inc dword ptr [rcx - 0x77] ; ret
0x0000000000472416 : inc dword ptr [rcx - 0x77] ; ret 0x5be9
0x00000000004763d3 : inc dword ptr [rcx - 0x77] ; ret 0x840f
0x0000000000468662 : inc dword ptr [rcx - 0x7d] ; ret 0x4101
0x000000000048a036 : inc dword ptr [rcx - 0x7d] ; retf
0x0000000000466697 : inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x0000000000485e8f : inc dword ptr [rcx - 1] ; push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004ad557 : inc dword ptr [rcx] ; ret 0xfff9
0x000000000048159f : inc dword ptr [rcx] ; retf
0x00000000004aaaab : inc dword ptr [rdi - 0x2f000990] ; jo 0x4aaab1 ; call rax
0x00000000004aaaa7 : inc dword ptr [rdi - 0x78000990] ; jo 0x4aaaad ; call rax
0x00000000004ad59f : inc dword ptr [rdi] ; ret
0x00000000004ada8f : inc dword ptr [rdx + 0x3a] ; cli ; call rdx
0x00000000004aa81f : inc dword ptr [rdx + 0x56] ; idiv bh ; add byte ptr [rsi - 0xa], dl ; jmp rsp
0x00000000004adf87 : inc dword ptr [rdx + 0x61] ; cli ; call rdx
0x00000000004ada7f : inc dword ptr [rdx] ; cmp al, 0xfa ; call qword ptr [rdx + 0x22fffa3b]
0x00000000004adf77 : inc dword ptr [rdx] ; movsxd rdi, edx ; call qword ptr [rdx + 0x22fffa62]
0x000000000045baad : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000004ad9eb : inc dword ptr [rsi + 0x3e] ; cli ; call rsi
0x00000000004adee3 : inc dword ptr [rsi + 0x65] ; cli ; call rsi
0x00000000004aaacb : inc dword ptr [rsi + 0x71] ; idiv bh ; jno 0x4aaad1 ; call rax
0x00000000004aaacf : inc dword ptr [rsi + 0x71] ; idiv bh ; sal byte ptr [rax - 0xa], 1 ; call rax
0x00000000004ad59b : inc dword ptr [rsi + 0x7fff9c2] ; ret
0x00000000004aab8f : inc dword ptr [rsi - 0x3300095d] ; test al, 0xf6 ; call rax
0x00000000004ad593 : inc dword ptr [rsi - 0x3f] ; stc ; jmp rsi
0x000000000041a5f2 : inc dword ptr [rsi*2 + 0x8b80f] ; add byte ptr [rax], al ; ret
0x00000000004ad583 : inc dword ptr [rsi] ; mov edi, 0xbf96fff9 ; stc ; jmp qword ptr [rsi]
0x00000000004ae577 : inc eax ; and bh, bl ; call rax
0x00000000004ae59f : inc eax ; and edi, ebx ; call rax
0x00000000004ad77f : inc eax ; iretd ; stc ; call qword ptr [rax]
0x00000000004ae3eb : inc eax ; js 0x4ae3ed ; call rax
0x00000000004aa773 : inc eax ; push rbx ; idiv bh ; adc byte ptr [rdx - 0xa], dl ; call qword ptr [rax]
0x00000000004ab377 : inc eax ; ret 0xfff6
0x00000000004ae4e3 : inc eax ; sbb al, 0xfb ; call rax
0x00000000004ad94b : inc eax ; sti ; stc ; call qword ptr [rax]
0x00000000004481dc : inc ebp ; std ; xlatb ; ret 0xe883
0x000000000040854d : inc ebx ; nop ; ret
0x000000000048df8c : inc ebx ; nop ; xor eax, eax ; ret
0x0000000000462589 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004ada6f : inc edx ; cmp eax, 0x3d52fffa ; cli ; jmp rdx
0x00000000004a9b57 : inc esi ; jnp 0x4a9b54 ; jmp rdx
0x00000000004c59f8 : insb byte ptr [rdi], dx ; adc al, 0 ; add byte ptr [rsi + rbp*8 - 0xd], ah ; call qword ptr [rdi]
0x00000000004d087c : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; add ah, dh ; ret 0
0x00000000004d0960 : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; add al, bl ; ret
0x000000000044080b : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000446fa4 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004c7df8 : insb byte ptr [rdi], dx ; cmp byte ptr [rax], al ; add ah, dl ; adc dh, ah ; call rdx
0x00000000004c2c9e : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x000000000046d2b0 : insb byte ptr [rdi], dx ; jmp qword ptr [rsi]
0x00000000004c9bf8 : insb byte ptr [rdi], dx ; push rsi ; add byte ptr [rax], al ; cmp ah, dh ; call qword ptr [rdi]
0x00000000004ae160 : insb byte ptr [rdi], dx ; push rsp ; cli ; call qword ptr [rdx]
0x00000000004798c5 : insb byte ptr [rdi], dx ; ret 0x4c40
0x0000000000400630 : insb byte ptr [rdi], dx ; retf
0x00000000004d0ff8 : insb byte ptr [rdi], dx ; retf 0
0x00000000004c2066 : insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x00000000004cf284 : insb byte ptr [rdi], dx ; stc ; call qword ptr [rdx]
0x00000000004cfa99 : insb byte ptr [rdi], dx ; stc ; jmp qword ptr [rcx]
0x00000000004cc604 : insb byte ptr [rdi], dx ; xor dh, dh ; call qword ptr [rax]
0x0000000000440520 : insb byte ptr [rdi], dx ; xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000046fde6 : insd dword ptr [rdi], dx ; add al, 0 ; add bh, dh ; ret 0xf800
0x00000000004251df : insd dword ptr [rdi], dx ; add al, 0 ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x0000000000429d7e : insd dword ptr [rdi], dx ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004815ea : insd dword ptr [rdi], dx ; add byte ptr [rax - 0x39], cl ; ret 0xc3a8
0x0000000000404915 : insd dword ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; clc ; xchg qword ptr [rdx], rax ; ret
0x000000000042f793 : insd dword ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000042f119 : insd dword ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; ret 0x294d
0x000000000047c0d7 : insd dword ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x00000000004054b5 : insd dword ptr [rdi], dx ; add byte ptr [rax - 0x7d], cl ; rcr byte ptr [rax], 0x48 ; mov dword ptr [rdi], eax ; ret
0x00000000004055bb : insd dword ptr [rdi], dx ; add byte ptr [rax - 0x7d], cl ; rcr byte ptr [rax], 0x48 ; mov dword ptr [rsi], eax ; ret
0x000000000044041b : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000409550 : insd dword ptr [rdi], dx ; add byte ptr [rbp + 0x1c], dh ; lea rax, [rdi + 0x18] ; ret
0x0000000000408e65 : insd dword ptr [rdi], dx ; add byte ptr [rbp + 7], dh ; lea rax, [rdi + 0x18] ; ret
0x0000000000407fb5 : insd dword ptr [rdi], dx ; add byte ptr [rbp + 7], dh ; ret
0x00000000004a7462 : insd dword ptr [rdi], dx ; js 0x4a74df ; ret 0x8b48
0x00000000004c2c9f : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004c104d : insd dword ptr [rdi], dx ; ret 0xb9b9
0x00000000004cfb45 : insd dword ptr [rdi], dx ; stc ; call rsi
0x00000000004d1511 : insd dword ptr [rdi], dx ; std ; call rdx
0x00000000004c1f5f : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x000000000048456a : int 0x80
0x0000000000488adf : int1 ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000490336 : int1 ; call rbx
0x00000000004071ac : int1 ; jb 0x4071b5 ; ret
0x0000000000462c9b : int1 ; jl 0x462cec ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000462cbc : int1 ; jl 0x462d0d ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000462ccf : int1 ; jl 0x462d20 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000462da4 : int1 ; jl 0x462df5 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000462dfc : int1 ; jl 0x462e4d ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000462e99 : int1 ; jl 0x462eea ; adc dword ptr [rsi + 7], edx ; ret
0x0000000000464125 : int1 ; jmp rcx
0x000000000048dceb : int1 ; jne 0x48dce6 ; lea eax, [rdx + rdi] ; ret
0x000000000049a7b7 : int1 ; jne 0x49a794 ; ret
0x00000000004a9b54 : int1 ; jnp 0x4a9b53 ; inc esi ; jnp 0x4a9b57 ; jmp rdx
0x00000000004c1f24 : int1 ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x000000000040dc8b : int1 ; mov dword ptr [rbx + 0x38], edx ; pop rbx ; ret
0x0000000000464249 : int1 ; mov eax, eax ; ret
0x0000000000450acb : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000044beff : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000407abe : int1 ; mov rax, -1 ; ret
0x0000000000462063 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000464230 : int1 ; pop rbx ; mov eax, eax ; ret
0x000000000048bedb : int1 ; ret
0x00000000004c2676 : int1 ; ret 0x5803
0x00000000004ad92d : int1 ; stc ; call qword ptr [rax - 0x1f00060e]
0x0000000000462067 : int1 ; sub eax, edx ; ret
0x00000000004d150d : iretd ; add byte ptr [rax], al ; adc byte ptr [rbp - 3], ch ; call rdx
0x00000000004009a6 : iretd ; inc dword ptr [rbx + 0x438d01c1] ; call rbx
0x00000000004ad781 : iretd ; stc ; call qword ptr [rax]
0x00000000004093f9 : ja 0x409415 ; jb 0x409405 ; ret
0x000000000040a4f2 : ja 0x40a4fe ; ret
0x000000000040a532 : ja 0x40a546 ; ret
0x000000000040a545 : ja 0x40a555 ; mov byte ptr [rax + rsi], 0 ; ret
0x000000000040a6ca : ja 0x40a6d1 ; ret
0x000000000040a6ff : ja 0x40a711 ; cmp rsi, rdx ; jb 0x40a710 ; ret
0x000000000040b420 : ja 0x40b431 ; mov byte ptr [rax + rsi], 0 ; ret
0x000000000041a1ad : ja 0x41a1b6 ; sbb eax, eax ; ret
0x00000000004210ad : ja 0x42108e ; mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004549d3 : ja 0x4549d7 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00000000004601b7 : ja 0x4601bd ; ret
0x00000000004601d3 : ja 0x4601dd ; mov dword ptr [rdi], ecx ; ret
0x0000000000460214 : ja 0x460223 ; mov qword ptr [rdi], rcx ; ret
0x0000000000460299 : ja 0x4602ad ; ret
0x00000000004602ef : ja 0x460307 ; ret
0x0000000000460371 : ja 0x46038d ; ret
0x00000000004607d7 : ja 0x4607e1 ; lea rax, [rdi + 2] ; ret
0x00000000004607f3 : ja 0x460801 ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x0000000000460844 : ja 0x460857 ; mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x0000000000460929 : ja 0x460941 ; lea rax, [rdi + 0x10] ; ret
0x000000000046099f : ja 0x4609bb ; lea rax, [rdi + 0x14] ; ret
0x0000000000460a21 : ja 0x460a41 ; lea rax, [rdi + 0x18] ; ret
0x0000000000462fa4 : ja 0x462fd5 ; jb 0x462fb6 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000463304 : ja 0x46334a ; jb 0x463316 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000463754 : ja 0x4637b2 ; jb 0x463766 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000463d23 : ja 0x463d40 ; jb 0x463d2f ; mov byte ptr [rdi], cl ; ret
0x0000000000463e91 : ja 0x463ec8 ; jb 0x463ea0 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000464059 : ja 0x46409e ; jb 0x464068 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000046503c : ja 0x465068 ; hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x00000000004655fb : ja 0x465603 ; ret
0x0000000000465649 : ja 0x465653 ; ret
0x0000000000465854 : ja 0x4658b3 ; ret
0x00000000004658ea : ja 0x4658f3 ; ret
0x0000000000465927 : ja 0x465983 ; ret
0x00000000004659bd : ja 0x4659cb ; ret
0x00000000004659ed : ja 0x4659fb ; ret
0x0000000000465bf7 : ja 0x465c3b ; ret
0x0000000000465c6d : ja 0x465c7b ; ret
0x00000000004663c6 : ja 0x4663d3 ; ret
0x0000000000466407 : ja 0x466413 ; ret
0x000000000046656a : ja 0x4665d3 ; ret
0x0000000000467e57 : ja 0x467eb3 ; ret
0x0000000000467f00 : ja 0x467f6b ; ret
0x00000000004692d0 : ja 0x4692fd ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000046a115 : ja 0x46a169 ; movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x0000000000477b93 : ja 0x477ba3 ; ret
0x00000000004822b2 : ja 0x482295 ; mov eax, r9d ; ret
0x0000000000490df9 : ja 0x490dc7 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000049167b : ja 0x491683 ; ret
0x00000000004916cf : ja 0x4916db ; ret
0x00000000004919f0 : ja 0x491a1b ; ret
0x00000000004971d4 : ja 0x4971de ; add byte ptr [rax + 0xf], cl ; ret 0x3e80
0x000000000049ef4e : ja 0x49efa0 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004c26e4 : ja 0x4c266b ; ret 0x48f
0x000000000040747a : jae 0x407485 ; add rax, rsi ; ret
0x000000000040afb7 : jae 0x40afc8 ; mov rax, qword ptr [rdi] ; add rax, rsi ; ret
0x000000000040afe7 : jae 0x40aff8 ; mov rax, qword ptr [rdi] ; add rax, rsi ; ret
0x000000000040ff87 : jae 0x40ff9b ; xchg eax, esp ; ret 0x8b48
0x000000000041b136 : jae 0x41b149 ; mov rdx, qword ptr [r15] ; mov rdi, r13 ; call r14
0x00000000004347dd : jae 0x434805 ; movzx eax, byte ptr [rax] ; ret
0x000000000046556d : jae 0x465572 ; ret
0x00000000004666ed : jae 0x4666f2 ; ret
0x000000000046671d : jae 0x466722 ; ret
0x000000000046674d : jae 0x466752 ; ret
0x0000000000467df0 : jae 0x467df5 ; ret
0x0000000000467e1d : jae 0x467e22 ; ret
0x0000000000467fad : jae 0x467fb2 ; ret
0x0000000000468b54 : jae 0x468b43 ; ret
0x0000000000471a8f : jae 0x471a1c ; retf 0xb941
0x000000000047793e : jae 0x477985 ; xor eax, eax ; pop rbx ; ret
0x000000000047d209 : jae 0x47d1b1 ; and eax, 0x48b4800 ; clc ; jmp rax
0x00000000004915fd : jae 0x491602 ; ret
0x000000000049ba3b : jae 0x49b9e5 ; xor eax, eax ; ret
0x00000000004a3e36 : jae 0x4a3e5f ; add cl, ch ; ret 0xb5c1
0x00000000004a41b4 : jae 0x4a4197 ; mov eax, 1 ; ret
0x00000000004a466d : jae 0x4a4672 ; ret
0x00000000004c0ca2 : jae 0x4c0c84 ; jo 0x4c0d20 ; mov ebp, 0xfb67d10d ; ret
0x00000000004c1b3e : jae 0x4c1b19 ; push rsi ; pop rdx ; je 0x4c1b0e ; ret 0xacfc
0x00000000004cca22 : jae 0x4cca30 ; ret
0x00000000004cd39d : jae 0x4cd397 ; call qword ptr [rdi]
0x00000000004071ad : jb 0x4071b4 ; ret
0x00000000004071e7 : jb 0x4071ee ; ret
0x0000000000408feb : jb 0x408ff3 ; ret
0x00000000004093fb : jb 0x409403 ; ret
0x000000000040a704 : jb 0x40a70b ; ret
0x000000000040af46 : jb 0x40af53 ; ret
0x0000000000439c67 : jb 0x439c51 ; mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x0000000000449f0a : jb 0x449f1a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044a05a : jb 0x44a06a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044a1aa : jb 0x44a1ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044a2fa : jb 0x44a30a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044a44a : jb 0x44a45a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044a59a : jb 0x44a5aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044a6ea : jb 0x44a6fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044a83a : jb 0x44a84a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044a98a : jb 0x44a99a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044aada : jb 0x44aaea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044ac2a : jb 0x44ac3a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044ad7a : jb 0x44ad8a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044aeca : jb 0x44aeda ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044b01a : jb 0x44b02a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044b16a : jb 0x44b17a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044c8da : jb 0x44c8ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044ca2a : jb 0x44ca3a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044cb7a : jb 0x44cb8a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044ccca : jb 0x44ccda ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044ce1a : jb 0x44ce2a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044cf6a : jb 0x44cf7a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044d0ba : jb 0x44d0ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044d20a : jb 0x44d21a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044d35a : jb 0x44d36a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044d4aa : jb 0x44d4ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044d5fa : jb 0x44d60a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044d74a : jb 0x44d75a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044d89a : jb 0x44d8aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044d9ea : jb 0x44d9fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044db3a : jb 0x44db4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004545ae : jb 0x4545ba ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000462d05 : jb 0x462d14 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000462d10 : jb 0x462d23 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000462d1d : jb 0x462d25 ; mov byte ptr [rdi], cl ; ret
0x0000000000462f24 : jb 0x462f2d ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000462fa6 : jb 0x462fb4 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000462fa5 : jb 0x462fb5 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000463306 : jb 0x463314 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000463756 : jb 0x463764 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000463d25 : jb 0x463d2d ; mov byte ptr [rdi], cl ; ret
0x0000000000463e93 : jb 0x463e9e ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000046405b : jb 0x464066 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000004adc68 : jb 0x4adca2 ; cli ; jmp rdx
0x00000000004cb86d : jb 0x4cb875 ; add al, dh ; loope 0x4cb86e ; call rsp
0x00000000004d0739 : jb 0x4d073a ; jmp qword ptr [rdx]
0x000000000041cac4 : jbe 0x41cad8 ; syscall
0x000000000042c6bf : jbe 0x42c712 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000447416 : jbe 0x447455 ; add rax, rdi ; ret
0x0000000000447426 : jbe 0x447457 ; lea rax, [rdi + rax + 0x10] ; ret
0x0000000000447436 : jbe 0x447457 ; lea rax, [rdi + rax + 0x20] ; ret
0x0000000000447446 : jbe 0x447457 ; lea rax, [rdi + rax + 0x30] ; ret
0x0000000000447857 : jbe 0x4478c8 ; add rax, rdi ; vzeroupper ; ret
0x0000000000472b62 : jbe 0x472b5c ; ret
0x000000000049db5f : jbe 0x49db6b ; ret
0x00000000004ad49d : jbe 0x4ad49a ; jmp qword ptr [rax]
0x00000000004ad49c : jbe 0x4ad49b ; jmp qword ptr [rax]
0x00000000004ae3e9 : jbe 0x4ae3eb ; inc eax ; js 0x4ae3ef ; call rax
0x00000000004aeae8 : jbe 0x4aeb57 ; sti ; jmp rsi
0x00000000004c257c : jbe 0x4c254f ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x00000000004c257b : jbe 0x4c2550 ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x000000000040040e : je 0x400414 ; call rax
0x0000000000400b09 : je 0x400b20 ; pop rbp ; mov edi, 0x6dbbe8 ; jmp rax
0x0000000000400b4b : je 0x400b60 ; pop rbp ; mov edi, 0x6dbbe8 ; jmp rax
0x0000000000402414 : je 0x402423 ; add byte ptr [rax], al ; nop ; leave ; ret
0x0000000000403622 : je 0x403630 ; cmp al, 0x10 ; jne 0x403640 ; xor eax, eax ; ret
0x0000000000403880 : je 0x4038ae ; sub byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x8948
0x0000000000403f58 : je 0x403f64 ; mov rdi, rbx ; call rax
0x000000000040462b : je 0x404633 ; pop rbx ; ret
0x0000000000404638 : je 0x404640 ; call rax
0x0000000000404724 : je 0x404777 ; mov dword ptr [rdi + 0x28], edx ; add rsp, 8 ; ret
0x000000000040565a : je 0x405689 ; psubsb mm1, mm6 ; sub al, byte ptr [rax] ; add bl, ch ; ret 0x1f0f
0x0000000000407244 : je 0x407260 ; test rdx, rdx ; jne 0x407258 ; ret
0x0000000000407264 : je 0x407280 ; test rdx, rdx ; jne 0x407278 ; ret
0x0000000000407284 : je 0x4072a8 ; test rsi, rsi ; jne 0x407298 ; ret
0x00000000004072b7 : je 0x4072d0 ; test rdx, rdx ; jne 0x4072c8 ; ret
0x00000000004072d7 : je 0x4072f0 ; test rdx, rdx ; jne 0x4072e8 ; ret
0x00000000004072f7 : je 0x407310 ; test rdx, rdx ; jne 0x407308 ; ret
0x0000000000407317 : je 0x407330 ; test rdx, rdx ; jne 0x407328 ; ret
0x0000000000407be0 : je 0x407bd3 ; ret
0x0000000000407cbd : je 0x407c8a ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000407d70 : je 0x407d3d ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000407f27 : je 0x407ef1 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000040a13b : je 0x40a174 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040a754 : je 0x40a770 ; test rdx, rdx ; jne 0x40a768 ; ret
0x000000000040a774 : je 0x40a790 ; test rdx, rdx ; jne 0x40a788 ; ret
0x000000000040a794 : je 0x40a7b8 ; test rsi, rsi ; jne 0x40a7a8 ; ret
0x000000000040a7c7 : je 0x40a7e0 ; test rdx, rdx ; jne 0x40a7d8 ; ret
0x000000000040a7e7 : je 0x40a800 ; test rdx, rdx ; jne 0x40a7f8 ; ret
0x000000000040a807 : je 0x40a820 ; test rdx, rdx ; jne 0x40a818 ; ret
0x000000000040a827 : je 0x40a840 ; test rdx, rdx ; jne 0x40a838 ; ret
0x000000000040ae07 : je 0x40ae16 ; mov rax, qword ptr [rdi + 0x10] ; ret
0x000000000040c920 : je 0x40c913 ; ret
0x000000000040c9f8 : je 0x40c9c4 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040ca9b : je 0x40ca67 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040cc5a : je 0x40cc1e ; add rsp, 0x10 ; pop rbx ; ret
0x000000000040d553 : je 0x40d563 ; test rcx, rcx ; jne 0x40d51e ; xor eax, eax ; ret
0x000000000040d575 : je 0x40d585 ; mov rax, rsi ; ret
0x000000000040d574 : je 0x40d586 ; mov rax, rsi ; ret
0x000000000040dba9 : je 0x40dc6c ; ret
0x000000000040dba8 : je 0x40dc6d ; ret
0x000000000040dca7 : je 0x40dcb7 ; mov eax, 1 ; ret
0x000000000040df63 : je 0x40df74 ; xor eax, eax ; ret
0x000000000040df5e : je 0x40dfa1 ; cmp esi, 0x76 ; je 0x40df79 ; xor eax, eax ; ret
0x0000000000411385 : je 0x4113b8 ; xor eax, eax ; pop rbx ; ret
0x0000000000411384 : je 0x4113b9 ; xor eax, eax ; pop rbx ; ret
0x000000000041683a : je 0x416844 ; xor eax, eax ; ret
0x0000000000416839 : je 0x416845 ; xor eax, eax ; ret
0x0000000000419638 : je 0x419622 ; add rsp, 0x18 ; ret
0x0000000000419621 : je 0x419646 ; add rsp, 0x18 ; ret
0x00000000004196c8 : je 0x4196a8 ; ret
0x0000000000419709 : je 0x419716 ; mov qword ptr [rdi + rsi*8], rdx ; ret
0x000000000041b9fa : je 0x41ba03 ; ret
0x000000000041ba33 : je 0x41ba44 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x41ba49 ; ret
0x000000000041bb0a : je 0x41bb13 ; ret
0x0000000000420c7e : je 0x420c8e ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x000000000042a4f5 : je 0x42a51f ; add ch, al ; ret
0x000000000042e38d : je 0x42e3b8 ; cmp byte ptr [rax + 0x29], cl ; ret
0x000000000042e8e8 : je 0x42e8ef ; ret
0x00000000004304bc : je 0x4304f3 ; dec dword ptr [rax + 0x21] ; retf 0x2148
0x0000000000432651 : je 0x432680 ; or al, 0x48 ; mov dword ptr [rsp], edi ; call 0x42e8e9
0x0000000000432ad5 : je 0x432ae3 ; ret
0x000000000043e8d2 : je 0x43e8fe ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000043edc3 : je 0x43edd6 ; lea rax, [rdx - 0x10] ; ret
0x000000000043efd0 : je 0x43ef5d ; retf 0x4c89
0x000000000043efcf : je 0x43ef5e ; retf 0x4c89
0x0000000000440482 : je 0x44044d ; ret
0x0000000000446203 : je 0x4461cd ; lea r10, [r10 + r9] ; jmp r10
0x00000000004470ea : je 0x4470f2 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000044731c : je 0x447373 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000004475fa : je 0x447651 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000447fc5 : je 0x447fd7 ; sbb eax, eax ; or eax, 1 ; ret
0x00000000004495e7 : je 0x4495f1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000459023 : je 0x458fed ; lea r10, [r10 + r9] ; jmp r10
0x000000000045abb3 : je 0x45ab7d ; lea r10, [r10 + r9] ; jmp r10
0x000000000045c391 : je 0x45c3a9 ; bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x000000000045c9b4 : je 0x45c9bf ; bsf eax, edx ; ret
0x000000000045ca5d : je 0x45ca76 ; bsf rax, rdx ; ret
0x0000000000463033 : je 0x463054 ; ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x00000000004646de : je 0x4646ec ; xor eax, eax ; ret
0x00000000004646d9 : je 0x4646f9 ; cmp eax, 2 ; je 0x4646f1 ; xor eax, eax ; ret
0x000000000046472d : je 0x464713 ; ret
0x0000000000465b68 : je 0x465b97 ; mov eax, 0x48 ; syscall
0x0000000000465f27 : je 0x465f52 ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x00000000004664ca : je 0x4664d1 ; ret
0x0000000000466553 : je 0x466581 ; add byte ptr [rcx - 0x77], cl ; retf 0xc085
0x0000000000468089 : je 0x46808e ; ret
0x00000000004680ed : je 0x4680f2 ; ret
0x00000000004691dc : je 0x4691ef ; lea rdi, [rcx + rax + 0x20] ; jmp rdx
0x000000000046a028 : je 0x46a033 ; ret
0x000000000046a044 : je 0x46a059 ; mov dword ptr [rip + 0x26fa6c], edx ; pop rbx ; ret
0x000000000046add8 : je 0x46ad8c ; call 0x477874
0x000000000046e0c5 : je 0x46e0f3 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x000000000046e87f : je 0x46e8ae ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x000000000046eb6f : je 0x46eb9e ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x000000000046eeb7 : je 0x46eee6 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000046f0f6 : je 0x46f125 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000046f75e : je 0x46f78c ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00000000004702f6 : je 0x470325 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000471382 : je 0x4713b1 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000471e7b : je 0x471eaa ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000472223 : je 0x472252 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000472667 : je 0x472696 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000472aa2 : je 0x472ad0 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000473064 : je 0x473093 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000473393 : je 0x4733c2 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000004738a7 : je 0x4738d6 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000473ce2 : je 0x473d10 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000475357 : je 0x475363 ; ret
0x0000000000475352 : je 0x475368 ; cmp esi, 3 ; je 0x475368 ; ret
0x0000000000475caa : je 0x475cb0 ; call rsi
0x0000000000475da6 : je 0x475dac ; call rax
0x00000000004771ab : je 0x4771b1 ; call rax
0x000000000047776e : je 0x47777b ; ret
0x0000000000479074 : je 0x479076 ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000479073 : je 0x479077 ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x00000000004850fc : je 0x485127 ; and byte ptr [rax + 1], cl ; ret
0x000000000048cb66 : je 0x48cbb6 ; add esp, 0x20 ; pop rbx ; ret
0x000000000048cb65 : je 0x48cbb7 ; add esp, 0x20 ; pop rbx ; ret
0x000000000048d9bc : je 0x48d9c3 ; ret
0x000000000048d9d9 : je 0x48d9e6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048da13 : je 0x48da75 ; pop rbp ; pop r12 ; ret
0x000000000048da9f : je 0x48db01 ; pop rbp ; pop r12 ; ret
0x000000000048dc2a : je 0x48dc54 ; or al, 0xeb ; ret 0x5590
0x000000000048f8ac : je 0x48f8d6 ; bsf rax, rdx ; ret
0x000000000048fd4b : je 0x48fd53 ; ret
0x000000000049032e : je 0x49035d ; sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov r9, r14 ; call rbx
0x0000000000490458 : je 0x490465 ; test edx, edx ; jne 0x490457 ; ret
0x00000000004908f9 : je 0x490919 ; mov cl, dl ; and cl, 0xf ; je 0x490929 ; ret
0x0000000000490900 : je 0x490922 ; ret
0x0000000000490915 : je 0x490936 ; add rax, 2 ; ret
0x000000000049185d : je 0x49188f ; mov eax, 0x101 ; syscall
0x0000000000491dd2 : je 0x491ed1 ; xor eax, eax ; leave ; ret
0x000000000049a816 : je 0x49a823 ; mov qword ptr [rsi], rdi ; mov rax, rcx ; ret
0x000000000049cfed : je 0x49cf3f ; sub eax, r8d ; ret
0x00000000004a1122 : je 0x4a1136 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a1628 : je 0x4a1653 ; or byte ptr [rax + 1], cl ; ret
0x00000000004a3de6 : je 0x4a3df3 ; ret
0x00000000004a6c2d : je 0x4a6c58 ; adc byte ptr [rcx - 0x77], cl ; ret
0x00000000004a8163 : je 0x4a816e ; call rax
0x00000000004ad459 : je 0x4ad45a ; push qword ptr [rax] ; pop rsi ; stc ; call qword ptr [rax]
0x00000000004ae228 : je 0x4ae288 ; cli ; jmp rsp
0x00000000004c00ac : je 0x4c00da ; push -0x51 ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004c0e08 : je 0x4c0dd3 ; xor al, 0xd8 ; ret
0x00000000004c1b42 : je 0x4c1b0a ; ret 0xacfc
0x00000000004c6700 : je 0x4c672a ; add byte ptr [rax], al ; sbb al, 0xfe ; call qword ptr [rbx]
0x00000000004c6900 : je 0x4c692c ; add byte ptr [rax], al ; push rbx ; call qword ptr [rdi]
0x00000000004c6aec : je 0x4c6af3 ; hlt ; call qword ptr [rdx]
0x00000000004cb9ed : je 0x4cb9f5 ; add byte ptr [rax], dl ; out 0xf5, eax ; call qword ptr [rax]
0x00000000004cba01 : je 0x4cba09 ; add byte ptr [rdi], cl ; cmc ; call qword ptr [rdx]
0x00000000004cba15 : je 0x4cba1d ; add byte ptr [rax], bl ; out 0xf5, eax ; call qword ptr [rax]
0x00000000004cba29 : je 0x4cba31 ; add byte ptr [rdi], dl ; cmc ; call qword ptr [rdx]
0x00000000004cba00 : je 0x4cba7d ; add byte ptr [rax], al ; or al, 0xe7 ; cmc ; call qword ptr [rdx]
0x00000000004cc600 : je 0x4cc589 ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; xor dh, dh ; call qword ptr [rax]
0x00000000004d1c00 : je 0x4d1bdf ; add byte ptr [rax], al ; jl 0x4d1c69 ; sti ; jmp qword ptr [rax]
0x0000000000408545 : jg 0x408561 ; mov dword ptr [rax - 8], 0xffffffff ; ret
0x00000000004093a5 : jg 0x409361 ; jmp 0x40936f
0x0000000000432ad2 : jg 0x432b12 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x000000000044bae9 : jg 0x44bb3c ; ret
0x000000000044bb30 : jg 0x44bb80 ; mov ebx, 0x4f7f0ff3 ; retf
0x000000000044bb35 : jg 0x44bb88 ; retf
0x000000000044bb6f : jg 0x44bbba ; ret
0x000000000044bbaf : jg 0x44bbfa ; retf
0x000000000044bce9 : jg 0x44bd3c ; ret 0x894c
0x000000000044bd30 : jg 0x44bd80 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x000000000044bd35 : jg 0x44bd88 ; retf 0x894c
0x000000000044bd6f : jg 0x44bdba ; ret 0x894c
0x000000000044bdab : jg 0x44bdf6 ; retf 0x894c
0x000000000044e4b9 : jg 0x44e50c ; ret
0x000000000044e500 : jg 0x44e550 ; mov ebx, 0x4f7f0ff3 ; retf
0x000000000044e505 : jg 0x44e558 ; retf
0x000000000044e53f : jg 0x44e58a ; ret
0x000000000044e57f : jg 0x44e5ca ; retf
0x000000000044e6b9 : jg 0x44e70c ; ret 0x894c
0x000000000044e700 : jg 0x44e750 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x000000000044e705 : jg 0x44e758 ; retf 0x894c
0x000000000044e73f : jg 0x44e78a ; ret 0x894c
0x000000000044e77b : jg 0x44e7c6 ; retf 0x894c
0x0000000000450aa8 : jg 0x450af9 ; loope 0x450aa7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000450b1f : jg 0x450b6a ; ret 0xff2
0x0000000000450b38 : jg 0x450b89 ; loop 0x450b37 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000450baf : jg 0x450bfa ; ret
0x0000000000450bc8 : jg 0x450c19 ; jrcxz 0x450bc7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000450c58 : jg 0x450ca9 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000450cd8 : jg 0x450d29 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000450d58 : jg 0x450da9 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000450dd8 : jg 0x450e29 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000450f35 : jg 0x450f85 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x0000000000450f3f : jg 0x450f8a ; retf 0xff2
0x0000000000450fb5 : jg 0x451005 ; mov ebx, 0x46f00ff2 ; retf
0x0000000000450fbf : jg 0x45100a ; retf
0x0000000000451058 : jg 0x4510a9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004510d8 : jg 0x451129 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000451168 : jg 0x4511b9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004511e8 : jg 0x451239 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000045125c : jg 0x451267 ; ret
0x00000000004512b6 : jg 0x4512c9 ; ret
0x00000000004512b1 : jg 0x451301 ; psllq mm1, qword ptr [rdi] ; jg 0x4512ce ; ret
0x0000000000451326 : jg 0x451339 ; ret
0x0000000000451396 : jg 0x4513a9 ; ret
0x0000000000451391 : jg 0x4513e1 ; or eax, 0xf7f0ff3 ; ret
0x0000000000451406 : jg 0x451419 ; ret
0x0000000000451401 : jg 0x451451 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000451476 : jg 0x451489 ; ret
0x0000000000451471 : jg 0x4514c1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000004514e6 : jg 0x4514f9 ; ret
0x00000000004514e1 : jg 0x451531 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000451556 : jg 0x451569 ; ret
0x0000000000451551 : jg 0x4515a1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000004515c6 : jg 0x4515d9 ; ret
0x00000000004515c1 : jg 0x451611 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000451636 : jg 0x451649 ; ret
0x00000000004516a6 : jg 0x4516b9 ; ret
0x0000000000451716 : jg 0x451729 ; ret
0x0000000000451711 : jg 0x451761 ; add eax, 0xf7f0ff3 ; ret
0x0000000000451786 : jg 0x451799 ; ret
0x0000000000451781 : jg 0x4517d1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000004517f6 : jg 0x451809 ; ret
0x00000000004517f1 : jg 0x451841 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000451866 : jg 0x451879 ; ret
0x0000000000451861 : jg 0x4518b1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000004518d6 : jg 0x4518e9 ; ret
0x00000000004518d1 : jg 0x451921 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000004535c8 : jg 0x453619 ; loope 0x4535c7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000045363f : jg 0x45368a ; ret 0xff2
0x0000000000453658 : jg 0x4536a9 ; loop 0x453657 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004536cf : jg 0x45371a ; ret
0x00000000004536e8 : jg 0x453739 ; jrcxz 0x4536e7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000453778 : jg 0x4537c9 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004537f8 : jg 0x453849 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000453878 : jg 0x4538c9 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004538f8 : jg 0x453949 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000453a55 : jg 0x453aa5 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x0000000000453a5f : jg 0x453aaa ; retf 0xff2
0x0000000000453ad5 : jg 0x453b25 ; mov ebx, 0x46f00ff2 ; retf
0x0000000000453adf : jg 0x453b2a ; retf
0x0000000000453b78 : jg 0x453bc9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000453bf8 : jg 0x453c49 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000453c88 : jg 0x453cd9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000453d08 : jg 0x453d59 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000453d7c : jg 0x453d87 ; ret
0x0000000000453dd6 : jg 0x453de9 ; ret
0x0000000000453dd1 : jg 0x453e21 ; psllq mm1, qword ptr [rdi] ; jg 0x453dee ; ret
0x0000000000453e46 : jg 0x453e59 ; ret
0x0000000000453eb6 : jg 0x453ec9 ; ret
0x0000000000453eb1 : jg 0x453f01 ; or eax, 0xf7f0ff3 ; ret
0x0000000000453f26 : jg 0x453f39 ; ret
0x0000000000453f21 : jg 0x453f71 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000453f96 : jg 0x453fa9 ; ret
0x0000000000453f91 : jg 0x453fe1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000454006 : jg 0x454019 ; ret
0x0000000000454001 : jg 0x454051 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000454076 : jg 0x454089 ; ret
0x0000000000454071 : jg 0x4540c1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000004540e6 : jg 0x4540f9 ; ret
0x00000000004540e1 : jg 0x454131 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000454156 : jg 0x454169 ; ret
0x00000000004541c6 : jg 0x4541d9 ; ret
0x0000000000454236 : jg 0x454249 ; ret
0x0000000000454231 : jg 0x454281 ; add eax, 0xf7f0ff3 ; ret
0x00000000004542a6 : jg 0x4542b9 ; ret
0x00000000004542a1 : jg 0x4542f1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000454316 : jg 0x454329 ; ret
0x0000000000454311 : jg 0x454361 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000454386 : jg 0x454399 ; ret
0x0000000000454381 : jg 0x4543d1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000004543f6 : jg 0x454409 ; ret
0x00000000004543f1 : jg 0x454441 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000454554 : jg 0x454565 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x0000000000454568 : jg 0x454579 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000004549da : jg 0x4549d6 ; ret
0x0000000000460286 : jg 0x460291 ; ret
0x0000000000460296 : jg 0x4602a4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000004602aa : jg 0x4602b9 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000004602c9 : jg 0x4602d7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000004602d9 : jg 0x4602e7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000004602e9 : jg 0x4602fa ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000046030a : jg 0x460319 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000046032a : jg 0x460339 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000046034a : jg 0x460359 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000046036a : jg 0x46037c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000004603ad : jg 0x4603bf ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000004603cd : jg 0x4603df ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000004603eb : jg 0x4603fb ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000046040b : jg 0x46041b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000046042b : jg 0x46043b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000046044b : jg 0x46045b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000460916 : jg 0x460925 ; lea rax, [rdi + 0xf] ; ret
0x0000000000460926 : jg 0x460938 ; mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x0000000000460959 : jg 0x46096b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x0000000000460979 : jg 0x46098b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x0000000000460a9f : jg 0x460aff ; or eax, 0x1c478d48 ; ret
0x0000000000462ce7 : jg 0x462cf7 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000462cdd : jg 0x462cfd ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000463174 : jg 0x4631ac ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000463242 : jg 0x46327a ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000046331a : jg 0x46332b ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000004634ab : jg 0x4634d5 ; vzeroupper ; ret
0x0000000000463552 : jg 0x46355c ; vzeroupper ; ret
0x00000000004635de : jg 0x463608 ; vzeroupper ; ret
0x000000000046366e : jg 0x463678 ; vzeroupper ; ret
0x0000000000463782 : jg 0x463793 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000463966 : jg 0x463990 ; vzeroupper ; ret
0x0000000000463965 : jg 0x463991 ; vzeroupper ; ret
0x0000000000463a2c : jg 0x463a36 ; vzeroupper ; ret
0x0000000000463a2b : jg 0x463a37 ; vzeroupper ; ret
0x0000000000463aff : jg 0x463b29 ; vzeroupper ; ret
0x0000000000463afe : jg 0x463b2a ; vzeroupper ; ret
0x0000000000463bd2 : jg 0x463bdc ; vzeroupper ; ret
0x0000000000463bd1 : jg 0x463bdd ; vzeroupper ; ret
0x0000000000463c3c : jg 0x463c47 ; ret
0x0000000000463c8c : jg 0x463c97 ; ret
0x0000000000463d03 : jg 0x463d4f ; xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000463d94 : jg 0x463da2 ; vzeroupper ; ret
0x0000000000463de4 : jg 0x463df2 ; vzeroupper ; ret
0x0000000000463ea3 : jg 0x463eb1 ; vzeroupper ; ret
0x0000000000463f21 : jg 0x463f2f ; vzeroupper ; ret
0x0000000000463f20 : jg 0x463f30 ; vzeroupper ; ret
0x0000000000463f81 : jg 0x463f8f ; vzeroupper ; ret
0x0000000000463f80 : jg 0x463f90 ; vzeroupper ; ret
0x000000000046406b : jg 0x464079 ; vzeroupper ; ret
0x0000000000464079 : jg 0x464087 ; vzeroupper ; ret
0x00000000004640d0 : jg 0x46410d ; ret 0x2b77
0x00000000004641eb : jg 0x4641b8 ; mov eax, 0x80 ; pop rbx ; ret
0x0000000000464247 : jg 0x464245 ; int1 ; mov eax, eax ; ret
0x000000000046afd6 : jg 0x46af5d ; retf
0x0000000000470c78 : jg 0x470c05 ; ret 0xdb76
0x0000000000470c78 : jg 0x470c09 ; ret 0xdb76
0x000000000047b482 : jg 0x47b49b ; test byte ptr [rip - 0x7c000011], al ; ret
0x0000000000485a72 : jg 0x485a8b ; test byte ptr [rip - 0x7c000003], dl ; ret
0x0000000000486eea : jg 0x486f03 ; test byte ptr [rbp - 0x7c000018], bl ; ret
0x0000000000486fe7 : jg 0x487000 ; test byte ptr [rax - 0x7c000019], ah ; ret
0x000000000049b4a7 : jg 0x49b4b9 ; test rdi, rdi ; jne 0x49b488 ; ret
0x00000000004a6a78 : jg 0x4a6a82 ; add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x00000000004ad479 : jg 0x4ad476 ; jmp qword ptr [rax]
0x00000000004cfd99 : jg 0x4cfd96 ; call qword ptr [rcx]
0x00000000004d1639 : jg 0x4d1637 ; call qword ptr [rbx]
0x0000000000401d75 : jge 0x401d72 ; pop rbp ; ret
0x0000000000401dea : jge 0x401deb ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004020e8 : jge 0x4020e9 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004023f8 : jge 0x4023f9 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402528 : jge 0x402529 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402857 : jge 0x402858 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402884 : jge 0x402885 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402b92 : jge 0x402b90 ; nop ; pop rbp ; ret
0x0000000000402ce1 : jge 0x402ce2 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402e76 : jge 0x402e78 ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x0000000000402e86 : jge 0x402e88 ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x0000000000402ec2 : jge 0x402ec4 ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x0000000000402ed2 : jge 0x402ed0 ; nop ; pop rbp ; ret
0x00000000004030e9 : jge 0x4030ea ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004031b8 : jge 0x4031b9 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004032e7 : jge 0x4032e8 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000419a82 : jge 0x419a7f ; leave ; ret
0x0000000000419c00 : jge 0x419c03 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000419d4c : jge 0x419d49 ; leave ; ret
0x0000000000419d98 : jge 0x419d9b ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000419f27 : jge 0x419f2a ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000041a087 : jge 0x41a084 ; leave ; ret
0x000000000041a0d8 : jge 0x41a0db ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000042923a : jge 0x429243 ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004350e7 : jge 0x435144 ; sub al, byte ptr [rax] ; ret
0x0000000000466845 : jge 0x46684a ; call r12
0x000000000046686d : jge 0x466872 ; call r12
0x0000000000466d5d : jge 0x466d0d ; mov r12d, r14d ; call r15
0x00000000004673bd : jge 0x4673c2 ; call r12
0x00000000004673e9 : jge 0x4673ee ; call r12
0x000000000046741d : jge 0x467422 ; call r12
0x000000000046744d : jge 0x467452 ; call r12
0x0000000000467475 : jge 0x46747a ; call r12
0x00000000004674a5 : jge 0x4674aa ; call r12
0x00000000004a39ba : jge 0x4a3980 ; call 0x40048c
0x00000000004aaa7d : jge 0x4aaa77 ; jmp rax
0x00000000004c010a : jge 0x4c00eb ; push r8 ; xor byte ptr [rcx], ah ; retf
0x00000000004c1a54 : jge 0x4c1ac5 ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004cc369 : jge 0x4cc371 ; add byte ptr [rdx - 0xa], ah ; jmp rdi
0x00000000004031eb : jl 0x4031f2 ; add byte ptr [rax], al ; leave ; ret
0x0000000000413a7d : jl 0x413a96 ; jmp qword ptr [rax]
0x000000000041c43f : jl 0x41c46d ; or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x000000000041fd56 : jl 0x41fd81 ; sub byte ptr [rax - 0x7d], cl ; ret
0x0000000000428748 : jl 0x428773 ; or byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x0000000000432fa2 : jl 0x432fbe ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000043a9eb : jl 0x43a9e5 ; ret 0x7508
0x00000000004544d4 : jl 0x454523 ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000454510 : jl 0x45455f ; adc dword ptr [rcx - 1], ebx ; ret
0x000000000045470e : jl 0x45475d ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000454875 : jl 0x4548c4 ; adc dword ptr [rcx + 7], edi ; ret
0x00000000004549d7 : jl 0x454a26 ; adc dword ptr [rdi - 8], edi ; ret
0x0000000000462c9c : jl 0x462ceb ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000462cbd : jl 0x462d0c ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000462cd0 : jl 0x462d1f ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000462da5 : jl 0x462df4 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000462dfd : jl 0x462e4c ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000462e9a : jl 0x462ee9 ; adc dword ptr [rsi + 7], edx ; ret
0x0000000000463850 : jl 0x46386f ; cld ; vzeroupper ; ret
0x0000000000466922 : jl 0x466950 ; or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x000000000046d9b1 : jl 0x46d9df ; and byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x000000000046ddd6 : jl 0x46de04 ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000046fd18 : jl 0x46fd46 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x00000000004702fb : jl 0x470325 ; call r15
0x0000000000470d4a : jl 0x470d78 ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000047266c : jl 0x472696 ; call r15
0x0000000000472aa7 : jl 0x472ad0 ; call rbx
0x0000000000472b5d : jl 0x472b8a ; add byte ptr [rsi + rsi*2 - 0xa], sil ; ret
0x000000000047328d : jl 0x4732b7 ; or al, 0xe9 ; ret
0x00000000004738ac : jl 0x4738d6 ; call r15
0x0000000000473ce7 : jl 0x473d10 ; call rbx
0x0000000000473d9d : jl 0x473dca ; add byte ptr [rdx + rdi*2 - 0xa], sil ; ret
0x0000000000477d87 : jl 0x477db2 ; and byte ptr [rax + 1], cl ; ret
0x00000000004781fe : jl 0x478229 ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x0000000000478546 : jl 0x478571 ; xor byte ptr [rax + 0x39], cl ; ret 0x8d48
0x000000000048373b : jl 0x483768 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000484e25 : jl 0x484e50 ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000004917cf : jl 0x4917fd ; sbb byte ptr [rax + 0x101], bh ; syscall
0x000000000049209b : jl 0x4920c8 ; or eax, 0xd8d4c01 ; retf 0x2b4
0x00000000004976a5 : jl 0x4976d0 ; or byte ptr [rax - 0x7d], cl ; ret 0x101
0x000000000049e6b5 : jl 0x49e6e3 ; sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x00000000004c1c52 : jl 0x4c1cb1 ; leave ; retf
0x00000000004c8814 : jl 0x4c8838 ; hlt ; jmp qword ptr [rbx]
0x00000000004cb408 : jl 0x4cb47f ; add byte ptr [rax], al ; cmc ; call rsp
0x00000000004cf208 : jl 0x4cf1bd ; add byte ptr [rax], al ; xchg eax, esp ; stc ; call rsp
0x00000000004cfb44 : jl 0x4cfbb6 ; stc ; call rsi
0x00000000004d1054 : jl 0x4d109c ; cli ; jmp rax
0x00000000004d1c04 : jl 0x4d1c65 ; sti ; jmp qword ptr [rax]
0x0000000000408156 : jle 0x408170 ; ret
0x000000000045c9fe : jle 0x45ca08 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000462b71 : jle 0x462bad ; movsxd rax, ecx ; ret
0x00000000004753a2 : jle 0x4753b5 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000004aaa6d : jle 0x4aaa67 ; call rax
0x00000000004aeae4 : jle 0x4aeb56 ; sti ; push qword ptr [rsi + 0x6a] ; sti ; jmp rsi
0x00000000004c0102 : jle 0x4c009b ; xlatb ; retf 0xa1eb
0x00000000004c1cc5 : jle 0x4c1d00 ; pop rsp ; sbb ebp, ebx ; retf
0x00000000004ceef1 : jle 0x4ceeed ; call qword ptr [rax]
0x0000000000404296 : jmp 0x404264
0x0000000000409098 : jmp 0x40905e
0x0000000000409170 : jmp 0x409136
0x00000000004093a7 : jmp 0x40936d
0x000000000040ed45 : jmp 0x40ed13
0x0000000000414b4e : jmp 0x411632
0x0000000000411726 : jmp 0x4116f4
0x000000000041191e : jmp 0x4118ec
0x0000000000414fcd : jmp 0x411a01
0x0000000000414f71 : jmp 0x411a6d
0x0000000000411c8e : jmp 0x411c5c
0x0000000000411d06 : jmp 0x411cd4
0x0000000000411d7e : jmp 0x411d4c
0x0000000000412056 : jmp 0x412024
0x00000000004121be : jmp 0x41218c
0x00000000004122ee : jmp 0x4122bc
0x0000000000412366 : jmp 0x412334
0x00000000004123de : jmp 0x4123ac
0x0000000000412456 : jmp 0x412424
0x00000000004124ce : jmp 0x41249c
0x0000000000412546 : jmp 0x412514
0x00000000004125be : jmp 0x41258c
0x0000000000412636 : jmp 0x412604
0x00000000004126b6 : jmp 0x412684
0x000000000041272e : jmp 0x4126fc
0x00000000004127a6 : jmp 0x412774
0x000000000041281e : jmp 0x4127ec
0x0000000000412896 : jmp 0x412864
0x000000000041290e : jmp 0x4128dc
0x0000000000412986 : jmp 0x412954
0x0000000000412a7e : jmp 0x412a4c
0x0000000000412bce : jmp 0x412b9c
0x0000000000412c46 : jmp 0x412c14
0x0000000000412cbe : jmp 0x412c8c
0x0000000000412d36 : jmp 0x412d04
0x0000000000412dae : jmp 0x412d7c
0x0000000000412e26 : jmp 0x412df4
0x0000000000412e9e : jmp 0x412e6c
0x0000000000412f96 : jmp 0x412f64
0x0000000000413226 : jmp 0x4131f4
0x000000000041329e : jmp 0x41326c
0x00000000004134e6 : jmp 0x4134b4
0x000000000041356e : jmp 0x41353c
0x0000000000413b06 : jmp 0x413ad4
0x000000000041409e : jmp 0x41406c
0x000000000041410e : jmp 0x4140dc
0x000000000041426e : jmp 0x41423c
0x00000000004142de : jmp 0x4142ac
0x0000000000414410 : jmp 0x4143de
0x00000000004146f4 : jmp 0x4146c2
0x000000000041545e : jmp 0x41542c
0x00000000004154f6 : jmp 0x4154c4
0x0000000000415576 : jmp 0x415544
0x00000000004155f6 : jmp 0x4155c4
0x00000000004158ce : jmp 0x41589c
0x0000000000415946 : jmp 0x415914
0x00000000004159c6 : jmp 0x415994
0x0000000000415a46 : jmp 0x415a14
0x0000000000415ac6 : jmp 0x415a94
0x0000000000415b46 : jmp 0x415b14
0x0000000000415bc6 : jmp 0x415b94
0x000000000041621e : jmp 0x4161e4
0x000000000041698e : jmp 0x41695c
0x0000000000430732 : jmp 0x4306f8
0x000000000043f785 : jmp 0x43f753
0x00000000004486f8 : jmp 0x4486c6
0x0000000000448776 : jmp 0x448744
0x0000000000448c08 : jmp 0x448bd6
0x0000000000448c86 : jmp 0x448c54
0x000000000045c1d4 : jmp 0x45c19a
0x000000000045c3ec : jmp 0x45c3b2
0x000000000046285e : jmp 0x462824
0x000000000046292f : jmp 0x4628f5
0x000000000046299e : jmp 0x462964
0x00000000004644e8 : jmp 0x4644b6
0x000000000046adb2 : jmp 0x477822
0x0000000000486c68 : jmp 0x486c2e
0x00000000004877a3 : jmp 0x487771
0x000000000048bcc5 : jmp 0x48bc93
0x000000000048e5b3 : jmp 0x48e579
0x00000000004a1c3a : jmp 0x4a1c00
0x00000000004c1cc9 : jmp 0x4c1c97
0x00000000004c2216 : jmp 0x4c21e4
0x00000000004c8db1 : jmp 0x4c8d77
0x000000000049ef51 : jmp 0xffffffffc35978a6
0x0000000000497a99 : jmp 0xffffffffeb0b3d29
0x0000000000491593 : jmp 0xfffffffff67ad823
0x0000000000469b65 : jmp qword ptr [r14]
0x00000000004ab86b : jmp qword ptr [rax + 0x10fff6eb]
0x00000000004addd3 : jmp qword ptr [rax + 0x10fffa2f]
0x00000000004adbe7 : jmp qword ptr [rax + 0x10fffa35]
0x00000000004ade0b : jmp qword ptr [rax + 0x20fffa30]
0x00000000004ade03 : jmp qword ptr [rax + 0x20fffa31]
0x00000000004addfb : jmp qword ptr [rax + 0x20fffa32]
0x00000000004addf3 : jmp qword ptr [rax + 0x20fffa33]
0x00000000004addeb : jmp qword ptr [rax + 0x20fffa34]
0x00000000004ad3cb : jmp qword ptr [rax - 0x1f0006bd]
0x00000000004ad3bb : jmp qword ptr [rax - 0x1f0006c2]
0x00000000004ad3ab : jmp qword ptr [rax - 0x1f0006c7]
0x00000000004ab37f : jmp qword ptr [rax - 0x3d]
0x0000000000413a7f : jmp qword ptr [rax]
0x00000000004aa8ab : jmp qword ptr [rbx]
0x00000000004ad52f : jmp qword ptr [rcx + 0x21fff9bc]
0x00000000004ad537 : jmp qword ptr [rcx + 0x21fff9bd]
0x00000000004ad53f : jmp qword ptr [rcx + 0x21fff9be]
0x00000000004ab803 : jmp qword ptr [rcx]
0x00000000004c2904 : jmp qword ptr [rdi]
0x00000000004ada5f : jmp qword ptr [rdx + 0x12fffa38]
0x00000000004ada87 : jmp qword ptr [rdx]
0x00000000004ad51f : jmp qword ptr [rip - 0x2e000647]
0x0000000000469b66 : jmp qword ptr [rsi]
0x00000000004408d9 : jmp r10
0x000000000049c160 : jmp r11
0x00000000004498dd : jmp r9
0x0000000000400b11 : jmp rax
0x000000000043f5c8 : jmp rbx
0x000000000043e442 : jmp rcx
0x000000000042885e : jmp rdi
0x0000000000410d41 : jmp rdx
0x0000000000476aa7 : jmp rsi
0x00000000004aa7a7 : jmp rsp
0x000000000040058d : jne 0x400594 ; ret
0x0000000000400dae : jne 0x400dba ; add cl, cl ; ret
0x0000000000401815 : jne 0x40180e ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000401900 : jne 0x40190b ; add byte ptr [rax], al ; leave ; ret
0x0000000000402e7a : jne 0x402e70 ; nop ; pop rbp ; ret
0x0000000000402e8a : jne 0x402e80 ; nop ; pop rbp ; ret
0x0000000000402ec6 : jne 0x402ebc ; nop ; pop rbp ; ret
0x000000000040350d : jne 0x403557 ; add rsp, 0x18 ; ret
0x0000000000403626 : jne 0x40363c ; xor eax, eax ; ret
0x0000000000404276 : jne 0x4042d7 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004046a6 : jne 0x4046ea ; mov qword ptr [rax], rsi ; xor eax, eax ; pop rbx ; ret
0x000000000040521b : jne 0x405261 ; add rsp, 0x18 ; ret
0x0000000000405324 : jne 0x405335 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000405414 : jne 0x405425 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004054fc : jne 0x405509 ; add rsp, 0x18 ; ret
0x0000000000405562 : jne 0x4055a9 ; add rsp, 0x18 ; ret
0x0000000000405637 : jne 0x40567a ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004065cd : jne 0x4065dc ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000406d1d : jne 0x406d62 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000406ecd : jne 0x406f12 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000407249 : jne 0x407253 ; ret
0x0000000000407269 : jne 0x407273 ; ret
0x0000000000407289 : jne 0x407293 ; ret
0x00000000004072bc : jne 0x4072c3 ; ret
0x00000000004072dc : jne 0x4072e3 ; ret
0x00000000004072fc : jne 0x407303 ; ret
0x000000000040731c : jne 0x407323 ; ret
0x0000000000407822 : jne 0x407813 ; ret
0x0000000000407abd : jne 0x407ab9 ; mov rax, -1 ; ret
0x0000000000407fb7 : jne 0x407fc3 ; ret
0x00000000004080a0 : jne 0x4080d1 ; pop rbx ; mov rax, rcx ; pop rbp ; pop r12 ; ret
0x0000000000408187 : jne 0x408193 ; ret
0x00000000004081f2 : jne 0x408239 ; add rsp, 0x18 ; ret
0x0000000000408288 : jne 0x4082fb ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004087d6 : jne 0x4087e3 ; ret
0x0000000000408e67 : jne 0x408e76 ; lea rax, [rdi + 0x18] ; ret
0x0000000000408f85 : jne 0x408fe3 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000409552 : jne 0x409576 ; lea rax, [rdi + 0x18] ; ret
0x00000000004095d0 : jne 0x409615 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004098cd : jne 0x4098de ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000409935 : jne 0x409981 ; pop rbx ; mov rax, rcx ; pop rbp ; pop r12 ; ret
0x00000000004099ee : jne 0x409a41 ; pop rbx ; mov rax, rcx ; pop rbp ; pop r12 ; ret
0x0000000000409b10 : jne 0x409b3a ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000409c3e : jne 0x409c91 ; pop rbx ; mov rax, rcx ; pop rbp ; pop r12 ; ret
0x000000000040a222 : jne 0x40a263 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040a759 : jne 0x40a763 ; ret
0x000000000040a779 : jne 0x40a783 ; ret
0x000000000040a799 : jne 0x40a7a3 ; ret
0x000000000040a7cc : jne 0x40a7d3 ; ret
0x000000000040a7ec : jne 0x40a7f3 ; ret
0x000000000040a80c : jne 0x40a813 ; ret
0x000000000040a82c : jne 0x40a833 ; ret
0x000000000040c564 : jne 0x40c553 ; ret
0x000000000040c7fd : jne 0x40c7f9 ; mov rax, -1 ; ret
0x000000000040d558 : jne 0x40d519 ; xor eax, eax ; ret
0x000000000040dd8b : jne 0x40dd7c ; xor eax, eax ; ret
0x000000000040dd90 : jne 0x40dd93 ; mov rax, qword ptr [rdi + 8] ; ret
0x000000000040de44 : jne 0x40de26 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410435 : jne 0x41047b ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000415361 : jne 0x4153af ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000417499 : jne 0x4174bc ; xor eax, eax ; ret
0x0000000000417481 : jne 0x4174c1 ; mov rax, qword ptr [rsi + 0xb0] ; ret
0x00000000004196b0 : jne 0x4196d1 ; mov rax, qword ptr [rax] ; ret
0x000000000041971f : jne 0x41972a ; mov qword ptr [rax], rdx ; ret
0x0000000000419a7e : jne 0x419a77 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x0000000000419d48 : jne 0x419d41 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000041a083 : jne 0x41a07c ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000041a5d4 : jne 0x41a5f3 ; ret
0x000000000041a5f4 : jne 0x41a60c ; mov eax, 8 ; ret
0x000000000041a61f : jne 0x41a64e ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000041a639 : jne 0x41a652 ; xor eax, eax ; ret
0x000000000041b47f : jne 0x41b4ae ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000041b499 : jne 0x41b4b2 ; xor eax, eax ; ret
0x000000000041ba39 : jne 0x41ba43 ; ret
0x000000000041ba54 : jne 0x41ba63 ; ret
0x000000000041bc84 : jne 0x41bc93 ; ret
0x00000000004210cc : jne 0x4210e0 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000428df8 : jne 0x428dd6 ; ret
0x0000000000428eeb : jne 0x428f15 ; add rsp, 0x118 ; ret
0x000000000042b281 : jne 0x42b294 ; add rsp, 0xd8 ; ret
0x000000000042b332 : jne 0x42b345 ; add rsp, 0xd8 ; ret
0x0000000000430805 : jne 0x430813 ; ret
0x0000000000432428 : jne 0x43247c ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004324a1 : jne 0x432493 ; ret
0x00000000004333be : jne 0x4333b3 ; ret
0x00000000004339f1 : jne 0x4339b7 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000433a3c : jne 0x433a35 ; lea eax, [rdx + rdi] ; ret
0x0000000000434356 : jne 0x43434b ; ret
0x0000000000435fb0 : jne 0x435fbf ; add rsp, 0x20 ; pop rbx ; ret
0x000000000043b68c : jne 0x43b653 ; ret
0x000000000043eb3a : jne 0x43eac1 ; ret
0x000000000043ee47 : jne 0x43ee36 ; sub rax, 0x10 ; ret
0x0000000000441f2c : jne 0x441f16 ; xor eax, eax ; sub eax, ecx ; ret
0x00000000004473c7 : jne 0x447424 ; xor eax, eax ; ret
0x0000000000447397 : jne 0x447448 ; xor eax, eax ; ret
0x0000000000447843 : jne 0x447867 ; xor eax, eax ; vzeroupper ; ret
0x0000000000447f7a : jne 0x447f85 ; vzeroupper ; ret
0x0000000000448074 : jne 0x447f86 ; ret
0x00000000004481bf : jne 0x447f89 ; vzeroupper ; ret
0x000000000044982d : jne 0x449857 ; xor eax, eax ; ret
0x0000000000448e21 : jne 0x44985b ; xor eax, eax ; ret
0x0000000000448e49 : jne 0x449867 ; xor eax, eax ; ret
0x0000000000460c05 : jne 0x460b96 ; lea rax, [rdi + 3] ; ret
0x0000000000460bd7 : jne 0x460b96 ; lea rax, [rdi + 7] ; ret
0x0000000000460bd6 : jne 0x460b97 ; lea rax, [rdi + 7] ; ret
0x0000000000462364 : jne 0x462578 ; xor eax, eax ; ret
0x0000000000462569 : jne 0x462589 ; xor eax, eax ; ret
0x0000000000462411 : jne 0x46258d ; xor eax, eax ; ret
0x0000000000462581 : jne 0x46258e ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000462691 : jne 0x462682 ; ret
0x0000000000462741 : jne 0x462732 ; ret
0x00000000004628b1 : jne 0x4628a6 ; lea rax, [rcx - 1] ; ret
0x0000000000462a01 : jne 0x4629f6 ; sub rax, 1 ; ret
0x0000000000463d0d : jne 0x463cf6 ; ret
0x0000000000463e74 : jne 0x463e5c ; vzeroupper ; ret
0x0000000000464037 : jne 0x464017 ; vzeroupper ; ret
0x00000000004644e2 : jne 0x464417 ; jmp 0x4644bc
0x000000000046480f : jne 0x46483b ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004655c7 : jne 0x4655df ; add rsp, 0x28 ; ret
0x00000000004657f7 : jne 0x465841 ; add rsp, 0x58 ; ret
0x0000000000465848 : jne 0x465864 ; xor eax, eax ; syscall
0x0000000000465918 : jne 0x465937 ; mov eax, 1 ; syscall
0x0000000000465a55 : jne 0x465abf ; mov eax, 0x48 ; syscall
0x0000000000465b87 : jne 0x465bd9 ; add rsp, 0x68 ; ret
0x0000000000465be8 : jne 0x465c07 ; mov eax, 3 ; syscall
0x0000000000466536 : jne 0x46654d ; add rsp, 0x28 ; ret
0x000000000046655b : jne 0x466577 ; mov eax, 0x17 ; syscall
0x000000000046681b : jne 0x466836 ; mov rdi, qword ptr [rbx] ; call r12
0x0000000000466841 : jne 0x466887 ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000466869 : jne 0x4668a7 ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000467386 : jne 0x4673ae ; mov rdi, qword ptr [rbx] ; call r12
0x00000000004673b9 : jne 0x467407 ; mov rdi, qword ptr [rbp] ; call r12
0x00000000004673e5 : jne 0x467467 ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000467471 : jne 0x4674d8 ; mov rdi, qword ptr [r13] ; call r12
0x00000000004674a1 : jne 0x467509 ; mov rdi, qword ptr [r13] ; call r12
0x0000000000467e48 : jne 0x467e67 ; mov eax, 0x2a ; syscall
0x0000000000468032 : jne 0x468029 ; pop rdx ; pop r10 ; ret
0x0000000000468022 : jne 0x468034 ; nop ; mov eax, 0xca ; syscall
0x00000000004681b8 : jne 0x4681cb ; add rsp, 0xd8 ; ret
0x0000000000468460 : jne 0x46846d ; add rsp, 0x18 ; ret
0x000000000046a03a : jne 0x46a042 ; add byte ptr [rcx], bh ; ret
0x000000000046a059 : jne 0x46a063 ; add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x000000000046bcef : jne 0x46bc83 ; call rsi
0x00000000004778af : jne 0x4778bc ; add rsp, 0x18 ; ret
0x0000000000477af7 : jne 0x477b4c ; add rsp, 0x148 ; ret
0x0000000000484d22 : jne 0x484d35 ; add rsp, 0xd8 ; ret
0x000000000048caa1 : jne 0x48ca93 ; ret
0x000000000048dcec : jne 0x48dce5 ; lea eax, [rdx + rdi] ; ret
0x000000000048f7a3 : jne 0x48f7ae ; xor rax, rax ; ret
0x000000000048fba3 : jne 0x48fbd8 ; mov rax, r8 ; vzeroupper ; ret
0x000000000049045c : jne 0x490453 ; ret
0x0000000000490463 : jne 0x49046e ; xor rax, rax ; ret
0x00000000004906fb : jne 0x4906b6 ; mov rax, rdx ; ret
0x0000000000491747 : jne 0x4917ad ; mov eax, 0x101 ; syscall
0x000000000049187c : jne 0x4918c9 ; add rsp, 0x58 ; ret
0x00000000004918ff : jne 0x491912 ; movzx eax, al ; add rsp, 0x58 ; ret
0x00000000004919ae : jne 0x4919d1 ; add rsp, 0x38 ; ret
0x000000000049a7ca : jne 0x49a770 ; mov eax, dword ptr [rdx + 4] ; ret
0x000000000049a7b8 : jne 0x49a793 ; ret
0x000000000049b457 : jne 0x49b471 ; mov rax, qword ptr [rip + 0x242110] ; ret
0x000000000049b4ac : jne 0x49b483 ; ret
0x000000000049cf69 : jne 0x49cf41 ; movsx eax, cl ; neg eax ; ret
0x000000000049dd5a : jne 0x49dd69 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000049de55 : jne 0x49de89 ; add rsp, 0x38 ; ret
0x000000000049df15 : jne 0x49df44 ; add rsp, 0x68 ; ret
0x000000000049e076 : jne 0x49e0b4 ; add rsp, 0x78 ; ret
0x000000000049e345 : jne 0x49e374 ; add rsp, 0x68 ; ret
0x00000000004a0381 : jne 0x4a03c1 ; leave ; ret
0x00000000004a0821 : jne 0x4a080d ; mov rax, rsi ; ret
0x00000000004a08a5 : jne 0x4a0885 ; mov rax, rsi ; ret
0x00000000004a100d : jne 0x4a101a ; add rsp, 0x38 ; ret
0x00000000004a10f0 : jne 0x4a110a ; add rsp, 0x38 ; ret
0x00000000004a3806 : jne 0x4a3830 ; ret
0x00000000004a3805 : jne 0x4a3831 ; ret
0x00000000004a38bb : jne 0x4a38c2 ; pop rbx ; ret
0x00000000004a3ca9 : jne 0x4a3cd3 ; add al, ch ; ret
0x00000000004a444b : jne 0x4a4462 ; add rsp, 0x38 ; ret
0x00000000004a4559 : jne 0x4a4573 ; add rsp, 0x40 ; pop rbx ; ret
0x00000000004a4640 : jne 0x4a465b ; add rsp, 0x50 ; pop rbx ; ret
0x00000000004a6ee9 : jne 0x4a6f0c ; xor eax, eax ; ret
0x00000000004a7395 : jne 0x4a7388 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004a73e0 : jne 0x4a73c0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004a7525 : jne 0x4a750b ; pop rbx ; ret
0x00000000004a7633 : jne 0x4a761e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a81ed : jne 0x4a81d6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a8371 : jne 0x4a8388 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004aa8a0 : jne 0x4aa90c ; idiv bh ; pushfq ; movsxd rsi, esi ; call qword ptr [rax]
0x00000000004aab75 : jne 0x4aab6f ; call rax
0x00000000004c0177 : jne 0x4c0141 ; mov ecx, 0x5b92ac50 ; retf
0x00000000004c210b : jne 0x4c2132 ; retf 0x32dd
0x00000000004cbad5 : jne 0x4cbadd ; add byte ptr [rax - 0x12], cl ; cmc ; jmp qword ptr [rax]
0x00000000004cbad4 : jne 0x4cbade ; add byte ptr [rax - 0x12], cl ; cmc ; jmp qword ptr [rax]
0x00000000004490de : jno 0x4490ed ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004544d0 : jno 0x4544d9 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000045470a : jno 0x454713 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x0000000000454871 : jno 0x454882 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x00000000004549d6 : jno 0x454a5a ; adc qword ptr [rdi - 8], rdi ; ret
0x000000000047f837 : jno 0x47f843 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; retf 6
0x000000000049ee44 : jno 0x49ee96 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004aaad1 : jno 0x4aaacb ; call rax
0x00000000004aaad0 : jno 0x4aaacc ; call rax
0x00000000004407e1 : jnp 0x440815 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004903d3 : jnp 0x4903db ; add byte ptr [rax], al ; call 0x41cdf6
0x00000000004a9b15 : jnp 0x4a9b0e ; jmp rdx
0x00000000004a9b19 : jnp 0x4a9b12 ; jmp rdx
0x00000000004a9b1d : jnp 0x4a9b16 ; jmp rdx
0x00000000004a9b21 : jnp 0x4a9b1a ; jmp rdx
0x00000000004a9b25 : jnp 0x4a9b1e ; jmp rdx
0x00000000004a9b29 : jnp 0x4a9b22 ; call rsp
0x00000000004a9b2d : jnp 0x4a9b26 ; jmp rdx
0x00000000004a9b31 : jnp 0x4a9b2a ; jmp rdx
0x00000000004a9b35 : jnp 0x4a9b2e ; jmp rdx
0x00000000004a9b39 : jnp 0x4a9b32 ; jmp rdx
0x00000000004a9b3d : jnp 0x4a9b36 ; jmp rdx
0x00000000004a9b41 : jnp 0x4a9b3a ; jmp rdx
0x00000000004a9b45 : jnp 0x4a9b3e ; jmp rdx
0x00000000004a9b49 : jnp 0x4a9b42 ; jmp rdx
0x00000000004a9b4d : jnp 0x4a9b46 ; jmp rdx
0x00000000004a9b55 : jnp 0x4a9b52 ; inc esi ; jnp 0x4a9b56 ; jmp rdx
0x00000000004a9b59 : jnp 0x4a9b52 ; jmp rdx
0x00000000004a9b5d : jnp 0x4a9b56 ; jmp rdx
0x00000000004a9b61 : jnp 0x4a9b5a ; jmp rdx
0x00000000004a9b65 : jnp 0x4a9b5e ; jmp rdx
0x00000000004ad46d : jnp 0x4ad46a ; call rax
0x00000000004c0b25 : jnp 0x4c0ae2 ; ret
0x00000000004c1b22 : jnp 0x4c1b80 ; retf
0x00000000004c1f29 : jnp 0x4c1f76 ; retf 0x99e0
0x00000000004c2b89 : jnp 0x4c2bca ; retf
0x00000000004cd631 : jnp 0x4cd62b ; call qword ptr [rsi]
0x00000000004cd645 : jnp 0x4cd63f ; call qword ptr [rsi]
0x00000000004033be : jns 0x4033cb ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x0000000000406513 : jns 0x406551 ; or al, byte ptr [rax] ; ret
0x000000000040dcd0 : jns 0x40dcac ; ret
0x000000000041736e : jns 0x41737b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000041961e : jns 0x419661 ; add byte ptr [rbp + rbx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000041a38e : jns 0x41a39b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000044047f : jns 0x440487 ; add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x00000000004544d7 : jns 0x4544da ; ret
0x0000000000454711 : jns 0x454714 ; ret
0x0000000000454878 : jns 0x454883 ; ret
0x000000000045ad07 : jns 0x45ace2 ; retf 0xead3
0x000000000045ae57 : jns 0x45ae32 ; retf 0xead3
0x000000000045afa7 : jns 0x45af82 ; retf 0xead3
0x000000000045b0f7 : jns 0x45b0d2 ; retf 0xead3
0x000000000045b247 : jns 0x45b222 ; retf 0xead3
0x000000000045b397 : jns 0x45b372 ; retf 0xead3
0x000000000045b4e7 : jns 0x45b4c2 ; retf 0xead3
0x000000000045b637 : jns 0x45b612 ; retf 0xead3
0x000000000045b787 : jns 0x45b762 ; retf 0xead3
0x000000000045b8d7 : jns 0x45b8b2 ; retf 0xead3
0x000000000045ba27 : jns 0x45ba02 ; retf 0xead3
0x000000000045bb77 : jns 0x45bb52 ; retf 0xead3
0x000000000045bcc7 : jns 0x45bca2 ; retf 0xead3
0x000000000045be17 : jns 0x45bdf2 ; retf 0xead3
0x000000000045bf67 : jns 0x45bf42 ; retf 0xead3
0x00000000004673e6 : jns 0x467436 ; mov edi, dword ptr [rbp] ; call r12
0x00000000004a6f6e : jns 0x4a6f7b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x00000000004bfc2e : jns 0x4bfbc4 ; ret 0xf869
0x00000000004bfc2d : jns 0x4bfbc5 ; ret 0xf869
0x00000000004cd4b9 : jns 0x4cd4b3 ; call qword ptr [rsi]
0x00000000004011fe : jo 0x40120a ; add cl, cl ; ret
0x00000000004071e2 : jo 0x4071d4 ; cmp rsi, rdx ; jb 0x4071f3 ; ret
0x0000000000430624 : jo 0x430675 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000430654 : jo 0x4306a5 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000046629d : jo 0x4662a1 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000468b62 : jo 0x468b86 ; ret
0x000000000046fbf0 : jo 0x46fbfa ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000048cb1a : jo 0x48cb32 ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000048fe16 : jo 0x48fe78 ; pop rbp ; pop r12 ; ret
0x000000000049002d : jo 0x49008f ; pop rbp ; pop r12 ; ret
0x000000000049e234 : jo 0x49e29a ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004aaaad : jo 0x4aaaa7 ; call rax
0x00000000004aaab1 : jo 0x4aaaab ; call rax
0x00000000004aaab5 : jo 0x4aaaaf ; call rax
0x00000000004aaab9 : jo 0x4aaab3 ; call rax
0x00000000004aaabd : jo 0x4aaab7 ; call rax
0x00000000004aaac1 : jo 0x4aaabb ; call rax
0x00000000004aaac5 : jo 0x4aaabf ; call rax
0x00000000004aaad5 : jo 0x4aaacf ; call rax
0x00000000004aab71 : jo 0x4aab6f ; call qword ptr [rax - 0x2f00098b]
0x00000000004aab79 : jo 0x4aab73 ; call rax
0x00000000004ad488 : jo 0x4ad412 ; stc ; jmp rax
0x00000000004ad77c : jo 0x4ad753 ; stc ; inc eax ; iretd ; stc ; call qword ptr [rax]
0x00000000004ad948 : jo 0x4ad94b ; stc ; inc eax ; sti ; stc ; call qword ptr [rax]
0x00000000004adba0 : jo 0x4adbdd ; cli ; jmp rax
0x00000000004adc18 : jo 0x4adc4c ; cli ; jmp rax
0x00000000004ade1c : jo 0x4ade4f ; cli ; call qword ptr [rax]
0x00000000004ae464 : jo 0x4ae41e ; cli ; call qword ptr [rax]
0x00000000004ae484 : jo 0x4ae44b ; cli ; call qword ptr [rax]
0x00000000004b0848 : jo 0x4b08af ; cld ; jmp qword ptr [rax]
0x00000000004c0ca4 : jo 0x4c0d1e ; mov ebp, 0xfb67d10d ; ret
0x00000000004c6efc : jo 0x4c6f2e ; add byte ptr [rax], al ; xor byte ptr [rsp + rsi*8], al ; jmp qword ptr [rax]
0x00000000004c8bfc : jo 0x4c8c4b ; add byte ptr [rax], al ; mov al, 0x23 ; hlt ; jmp qword ptr [rdx]
0x00000000004ce35c : jo 0x4ce363 ; ret 0xa01
0x00000000004d08ec : jo 0x4d08f3 ; add byte ptr [rax], al ; ret
0x00000000004d27fc : jo 0x4d27e7 ; add byte ptr [rax], al ; loopne 0x4d27d3 ; sti ; jmp rdx
0x00000000004d379d : jo 0x4d37a4 ; retf
0x00000000004d42fc : jo 0x4d4300 ; add byte ptr [rax], al ; nop ; retf
0x0000000000405100 : jo 0xffffffff944f7706 ; ret 0xb60f
0x0000000000401974 : jp 0x40197f ; add byte ptr [rax], al ; leave ; ret
0x00000000004050fe : jp 0x40517c ; jo 0xffffffff944f7708 ; ret 0xb60f
0x00000000004150bf : jp 0x4150d7 ; add dword ptr [rdi], ecx ; test edi, ecx ; ret
0x0000000000473da2 : jp 0x473d9c ; ret
0x00000000004ae3f1 : jp 0x4ae3ef ; jmp rax
0x00000000004c0e33 : jp 0x4c0ded ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x00000000004cd591 : jp 0x4cd58b ; call qword ptr [rdx]
0x000000000040bc62 : jrcxz 0x40bc72 ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000040bcb9 : jrcxz 0x40bcc9 ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000410e65 : jrcxz 0x410e6e ; dec dword ptr [rax - 0x77] ; fisttp word ptr [rcx - 0x77] ; ret
0x0000000000450bca : jrcxz 0x450bc5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000450bc9 : jrcxz 0x450bc6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004536ea : jrcxz 0x4536e5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004536e9 : jrcxz 0x4536e6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000468083 : jrcxz 0x468048 ; cmp r11d, 0xa ; je 0x468094 ; ret
0x000000000048466f : jrcxz 0x484675 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x000000000048466e : jrcxz 0x484676 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x000000000049bb4e : jrcxz 0x49bb9c ; mov esi, ebx ; syscall
0x00000000004a7634 : jrcxz 0x4a7696 ; pop rbp ; pop r12 ; ret
0x00000000004bfa85 : jrcxz 0x4bfadf ; ret
0x00000000004c1c4d : jrcxz 0x4c1c10 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x00000000004c27a9 : jrcxz 0x4c278d ; cmp al, 0x93 ; in al, dx ; retf 0xae32
0x00000000004198d6 : js 0x4198e3 ; add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000004198e3 : js 0x4198ef ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000429cd5 : js 0x429cf9 ; call rdx
0x000000000048d9b9 : js 0x48d9f1 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000497d32 : js 0x497d45 ; pop rbx ; ret
0x00000000004a7463 : js 0x4a74de ; ret 0x8b48
0x00000000004ae3ed : js 0x4ae3eb ; call rax
0x00000000004c1b88 : js 0x4c1b5c ; movsxd rbx, dword ptr [rsi + rax*8 + 0x74] ; retf 0x93a2
0x00000000004c1b21 : js 0x4c1ba1 ; pop rdx ; retf
0x00000000004c6b08 : js 0x4c6b0f ; hlt ; call qword ptr [rbx]
0x00000000004c6b04 : js 0x4c6b32 ; add byte ptr [rax], al ; js 0x4c6b13 ; hlt ; call qword ptr [rbx]
0x00000000004c6c04 : js 0x4c6c33 ; add byte ptr [rax], al ; sub byte ptr [rbx], al ; hlt ; call qword ptr [rbx]
0x00000000004c7704 : js 0x4c773e ; add byte ptr [rax], al ; test al, 8 ; hlt ; jmp qword ptr [rax]
0x00000000004cbdf1 : js 0x4cbdf9 ; add byte ptr [rdi + rdi*8], bh ; cmc ; call qword ptr [rdi]
0x00000000004cbdf0 : js 0x4cbdfa ; add byte ptr [rdi + rdi*8], bh ; cmc ; call qword ptr [rdi]
0x00000000004cfac8 : js 0x4cfb39 ; stc ; jmp qword ptr [rcx]
0x00000000004d2848 : js 0x4d281e ; sti ; jmp qword ptr [rax]
0x0000000000487673 : lahf ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000472ff5 : lahf ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x000000000043b07f : lahf ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000047d5b9 : lahf ; and eax, 0x48b4800 ; clc ; jmp rax
0x00000000004cef19 : lahf ; clc ; call qword ptr [rax]
0x00000000004c2163 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000049a7cb : lahf ; mov eax, dword ptr [rdx + 4] ; ret
0x000000000045b80d : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047af1f : lahf ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004c1a52 : lahf ; or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004c2254 : lahf ; push -0x57d3205 ; call 0xffffffffab59ed56
0x00000000004c0260 : lahf ; push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x0000000000466afb : lahf ; ret
0x0000000000434cff : lahf ; ret 0x3949
0x0000000000434db2 : lahf ; ret 0x48e9
0x00000000004669b1 : lahf ; ret 0x8545
0x00000000004bf9bd : lahf ; ret 0x871e
0x00000000004640c9 : lahf ; ret 0xea81
0x0000000000418c91 : lahf ; ret 0xf45
0x00000000004af3a5 : lahf ; sti ; call qword ptr [rax]
0x00000000004af960 : lahf ; test eax, 0xa96afffb ; sti ; jmp qword ptr [rdx]
0x000000000045be9d : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000040d3cf : lcall [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x0000000000407897 : lcall [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000004ad5cf : lcall [rbx + 0x2bfff9c0] ; sar ecx, 0xff ; retf
0x0000000000436ba2 : lcall [rbx + 0x48] ; mov eax, edi ; pop rbp ; pop r12 ; ret
0x000000000046adad : lcall [rbx + 0x5d] ; pop r12 ; jmp 0x477827
0x0000000000435400 : lcall [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000042dde5 : lcall [rbx + 0x5d] ; pop r12 ; ret
0x000000000042db6b : lcall [rbx + 0x5d] ; ret
0x00000000004aa9ab : lcall [rbx + 0x64] ; idiv bh ; add byte ptr [rax - 0xa], ch ; jmp rax
0x000000000049bdf6 : lcall [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x000000000042c49e : lcall [rbx - 0x77] ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; ret
0x00000000004ab427 : lcall [rcx - 0x3f000936] ; ret 0xfff6
0x00000000004ab3d3 : lcall [rcx - 0x66000936] ; retf 0xfff6
0x00000000004c85bb : lcall [rcx] ; add byte ptr [rax], al ; add byte ptr [rdx + rax*8], al ; retf
0x00000000004af9a7 : lcall [rdi] ; lodsb al, byte ptr [rsi] ; sti ; dec esp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; call qword ptr [rbx]
0x00000000004add1b : lcall [rsi + 0x2efffa2e] ; cli ; call rsp
0x00000000004ad55f : lcall [rsi] ; ret
0x00000000004af973 : lcall [rsi] ; stosb byte ptr [rdi], al ; sti ; call rdi
0x00000000004aac33 : lcall [rsp + rbp*4 - 0xa] ; call rax
0x0000000000451256 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000433a4b : lea eax, [r8 - 1] ; ret
0x00000000004033dc : lea eax, [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x00000000004065e8 : lea eax, [rax + rax*4 + 1] ; ret
0x00000000004473f4 : lea eax, [rax + rdi + 0x10] ; ret
0x0000000000447404 : lea eax, [rax + rdi + 0x20] ; ret
0x00000000004473d4 : lea eax, [rax + rdi - 0x10] ; ret
0x00000000004074b8 : lea eax, [rax + rdx - 1] ; ret
0x0000000000433a4c : lea eax, [rax - 1] ; ret
0x0000000000403fbf : lea eax, [rbx - 0x80] ; pop rbx ; ret
0x000000000040feba : lea eax, [rcx + rdi*8 - 1] ; dec dword ptr [rax + 0x63] ; ret 0xc283
0x000000000048f4cd : lea eax, [rcx + rsi] ; ret
0x00000000004628b4 : lea eax, [rcx - 1] ; ret
0x000000000040a551 : lea eax, [rdi + 0x10] ; cmp qword ptr [rdi], rax ; sete al ; ret
0x000000000040a511 : lea eax, [rdi + 0x10] ; ret
0x0000000000460941 : lea eax, [rdi + 0x11] ; ret
0x000000000046095f : lea eax, [rdi + 0x12] ; ret
0x000000000046097f : lea eax, [rdi + 0x13] ; ret
0x00000000004609a2 : lea eax, [rdi + 0x14] ; ret
0x00000000004609c1 : lea eax, [rdi + 0x15] ; ret
0x00000000004609e1 : lea eax, [rdi + 0x16] ; ret
0x0000000000460a01 : lea eax, [rdi + 0x17] ; ret
0x0000000000407fd1 : lea eax, [rdi + 0x18] ; ret
0x0000000000460a49 : lea eax, [rdi + 0x19] ; ret
0x0000000000460a67 : lea eax, [rdi + 0x1a] ; ret
0x0000000000460a87 : lea eax, [rdi + 0x1b] ; ret
0x0000000000460aa3 : lea eax, [rdi + 0x1c] ; ret
0x0000000000460ac3 : lea eax, [rdi + 0x1d] ; ret
0x0000000000460ae3 : lea eax, [rdi + 0x1e] ; ret
0x0000000000460b03 : lea eax, [rdi + 0x1f] ; ret
0x000000000046087d : lea eax, [rdi + 0xa] ; ret
0x000000000046089d : lea eax, [rdi + 0xb] ; ret
0x00000000004608bf : lea eax, [rdi + 0xc] ; ret
0x00000000004608df : lea eax, [rdi + 0xd] ; ret
0x00000000004608ff : lea eax, [rdi + 0xe] ; ret
0x0000000000460919 : lea eax, [rdi + 0xf] ; ret
0x00000000004607c7 : lea eax, [rdi + 1] ; ret
0x00000000004607da : lea eax, [rdi + 2] ; ret
0x00000000004607e5 : lea eax, [rdi + 3] ; ret
0x00000000004607f8 : lea eax, [rdi + 4] ; ret
0x000000000046080d : lea eax, [rdi + 5] ; ret
0x000000000046082b : lea eax, [rdi + 6] ; ret
0x0000000000460837 : lea eax, [rdi + 7] ; ret
0x00000000004057c1 : lea eax, [rdi + 8] ; ret
0x000000000046085f : lea eax, [rdi + 9] ; ret
0x0000000000447429 : lea eax, [rdi + rax + 0x10] ; ret
0x0000000000447439 : lea eax, [rdi + rax + 0x20] ; ret
0x0000000000447333 : lea eax, [rdi + rax + 0x30] ; ret
0x000000000048f715 : lea eax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x000000000045c397 : lea eax, [rdi + rax] ; ret
0x0000000000462c0a : lea eax, [rdi + rcx] ; sub rax, rsi ; ret
0x000000000048f3c9 : lea eax, [rdi + rsi] ; ret
0x00000000004607b3 : lea eax, [rdi] ; ret
0x000000000045fd9d : lea eax, [rdx + 0xa] ; ret
0x000000000045fdbd : lea eax, [rdx + 0xb] ; ret
0x000000000045fddf : lea eax, [rdx + 0xc] ; ret
0x000000000045fdff : lea eax, [rdx + 0xd] ; ret
0x000000000045fe1f : lea eax, [rdx + 0xe] ; ret
0x000000000045fcaf : lea eax, [rdx + 0xf] ; ret
0x000000000045fcd7 : lea eax, [rdx + 1] ; ret
0x000000000045fced : lea eax, [rdx + 2] ; ret
0x000000000045fd05 : lea eax, [rdx + 3] ; ret
0x000000000045fd1b : lea eax, [rdx + 4] ; ret
0x000000000045fd2d : lea eax, [rdx + 5] ; ret
0x000000000045fd4b : lea eax, [rdx + 6] ; ret
0x000000000045fc57 : lea eax, [rdx + 7] ; ret
0x000000000045fd5d : lea eax, [rdx + 8] ; ret
0x000000000045fd7d : lea eax, [rdx + 9] ; ret
0x000000000040b038 : lea eax, [rdx + rax - 1] ; ret
0x0000000000433a3e : lea eax, [rdx + rdi] ; ret
0x00000000004641e3 : lea eax, [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000043edc6 : lea eax, [rdx - 0x10] ; ret
0x000000000040e999 : lea eax, [rdx] ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; retf 0x9848
0x000000000045fcc5 : lea eax, [rdx] ; ret
0x0000000000469ef1 : lea eax, [rip + 0x271429] ; ret
0x000000000044047c : lea eax, [rip + 0x79ee] ; je 0x440453 ; ret
0x0000000000406c61 : lea eax, [rip + 0xa3298] ; ret
0x00000000004067c1 : lea eax, [rip + 0xa361b] ; ret
0x0000000000406511 : lea eax, [rip + 0xa3879] ; ret
0x0000000000404801 : lea eax, [rip + 0xa5491] ; ret
0x00000000004047f1 : lea eax, [rip + 0xa5492] ; ret
0x0000000000404091 : lea eax, [rip + 0xa5b29] ; ret
0x00000000004040a1 : lea eax, [rip + 0xa5b41] ; ret
0x00000000004016c8 : lea eax, [rip + 0xa8446] ; add rax, rdx ; jmp rax
0x000000000048779c : lea eax, [rsi + 8] ; mov qword ptr [rdx + 8], rax ; jmp 0x487778
0x000000000047bba1 : lea ebp, [rdx] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000040ff9f : lea ebx, [rax + rax + 0x63480000] ; ret 0xc283
0x0000000000429361 : lea ebx, [rdi + rax] ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004c0271 : lea ebx, [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000040806d : lea ecx, [rax + 0x18] ; mov rax, rcx ; ret
0x000000000048fecb : lea ecx, [rax + 1] ; call rbx
0x0000000000490066 : lea ecx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x000000000048e304 : lea ecx, [rbp - 0x40] ; mov rdi, r15 ; call r12
0x0000000000449940 : lea ecx, [rbx + rcx] ; jmp r9
0x000000000046004e : lea ecx, [rbx + rcx] ; jmp rcx
0x000000000043edd6 : lea ecx, [rdx - 8] ; cmovne rax, rcx ; ret
0x0000000000491af7 : lea ecx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000048e110 : lea ecx, [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000048e02b : lea ecx, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x000000000048ffee : lea ecx, [rsp + 0x20] ; call rbx
0x00000000004901dc : lea ecx, [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x000000000048fec6 : lea ecx, [rsp + 0x38] ; lea rcx, [rax + 1] ; call rbx
0x00000000004691df : lea edi, [rcx + rax + 0x20] ; jmp rdx
0x00000000004a9058 : lea edi, [rip + 0x39c2] ; call 0x435278
0x00000000004a8fb1 : lea edi, [rip + 0x39e9] ; call 0x435278
0x00000000004a8fa1 : lea edi, [rip + 0x3a51] ; call 0x435278
0x000000000041c3f1 : lea edi, [rsp + 0x60] ; call 0x428e06
0x0000000000434361 : lea edx, [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000048de87 : lea edx, [rax + rdx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000449a14 : lea edx, [rbx + rdx] ; jmp rdx
0x00000000004408d6 : lea edx, [rdx + rcx] ; jmp r10
0x0000000000449e08 : lea edx, [rdx - 0x40] ; jmp r9
0x000000000041a201 : lea esi, [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x0000000000487bed : lea esi, [rip + 0x24fc8d] ; jmp rax
0x0000000000462f2f : lea esi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000405094 : lea esp, [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000049a2e6 : lea esp, [rbx + rdi*8 - 0x76b30001] ; ret 0x2948
0x00000000004408d5 : lea r10, [r10 + r9] ; jmp r10
0x000000000041a200 : lea r14, [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x000000000044993f : lea r9, [r11 + r9] ; jmp r9
0x000000000048e303 : lea r9, [rbp - 0x40] ; mov rdi, r15 ; call r12
0x000000000048e10f : lea r9, [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000048e02a : lea r9, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x000000000048ffed : lea r9, [rsp + 0x20] ; call rbx
0x00000000004901db : lea r9, [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x000000000048fec5 : lea r9, [rsp + 0x38] ; lea rcx, [rax + 1] ; call rbx
0x00000000004033db : lea rax, [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x00000000004473f3 : lea rax, [rax + rdi + 0x10] ; ret
0x0000000000447403 : lea rax, [rax + rdi + 0x20] ; ret
0x00000000004473d3 : lea rax, [rax + rdi - 0x10] ; ret
0x00000000004074b7 : lea rax, [rax + rdx - 1] ; ret
0x0000000000403fbe : lea rax, [rbx - 0x80] ; pop rbx ; ret
0x000000000048f4cc : lea rax, [rcx + rsi] ; ret
0x00000000004628b3 : lea rax, [rcx - 1] ; ret
0x000000000040a510 : lea rax, [rdi + 0x10] ; ret
0x0000000000460940 : lea rax, [rdi + 0x11] ; ret
0x000000000046095e : lea rax, [rdi + 0x12] ; ret
0x000000000046097e : lea rax, [rdi + 0x13] ; ret
0x00000000004609a1 : lea rax, [rdi + 0x14] ; ret
0x00000000004609c0 : lea rax, [rdi + 0x15] ; ret
0x00000000004609e0 : lea rax, [rdi + 0x16] ; ret
0x0000000000460a00 : lea rax, [rdi + 0x17] ; ret
0x0000000000407fd0 : lea rax, [rdi + 0x18] ; ret
0x0000000000460a48 : lea rax, [rdi + 0x19] ; ret
0x0000000000460a66 : lea rax, [rdi + 0x1a] ; ret
0x0000000000460a86 : lea rax, [rdi + 0x1b] ; ret
0x0000000000460aa2 : lea rax, [rdi + 0x1c] ; ret
0x0000000000460ac2 : lea rax, [rdi + 0x1d] ; ret
0x0000000000460ae2 : lea rax, [rdi + 0x1e] ; ret
0x0000000000460b02 : lea rax, [rdi + 0x1f] ; ret
0x000000000046087c : lea rax, [rdi + 0xa] ; ret
0x000000000046089c : lea rax, [rdi + 0xb] ; ret
0x00000000004608be : lea rax, [rdi + 0xc] ; ret
0x00000000004608de : lea rax, [rdi + 0xd] ; ret
0x00000000004608fe : lea rax, [rdi + 0xe] ; ret
0x0000000000460918 : lea rax, [rdi + 0xf] ; ret
0x00000000004607c6 : lea rax, [rdi + 1] ; ret
0x00000000004607d9 : lea rax, [rdi + 2] ; ret
0x00000000004607e4 : lea rax, [rdi + 3] ; ret
0x00000000004607f7 : lea rax, [rdi + 4] ; ret
0x000000000046080c : lea rax, [rdi + 5] ; ret
0x000000000046082a : lea rax, [rdi + 6] ; ret
0x0000000000460836 : lea rax, [rdi + 7] ; ret
0x00000000004057c0 : lea rax, [rdi + 8] ; ret
0x000000000046085e : lea rax, [rdi + 9] ; ret
0x0000000000447428 : lea rax, [rdi + rax + 0x10] ; ret
0x0000000000447438 : lea rax, [rdi + rax + 0x20] ; ret
0x0000000000447332 : lea rax, [rdi + rax + 0x30] ; ret
0x000000000048f714 : lea rax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x000000000045c396 : lea rax, [rdi + rax] ; ret
0x0000000000462c09 : lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x000000000048f3c8 : lea rax, [rdi + rsi] ; ret
0x00000000004607b2 : lea rax, [rdi] ; ret
0x000000000045fd9c : lea rax, [rdx + 0xa] ; ret
0x000000000045fdbc : lea rax, [rdx + 0xb] ; ret
0x000000000045fdde : lea rax, [rdx + 0xc] ; ret
0x000000000045fdfe : lea rax, [rdx + 0xd] ; ret
0x000000000045fe1e : lea rax, [rdx + 0xe] ; ret
0x000000000045fcae : lea rax, [rdx + 0xf] ; ret
0x000000000045fcd6 : lea rax, [rdx + 1] ; ret
0x000000000045fcec : lea rax, [rdx + 2] ; ret
0x000000000045fd04 : lea rax, [rdx + 3] ; ret
0x000000000045fd1a : lea rax, [rdx + 4] ; ret
0x000000000045fd2c : lea rax, [rdx + 5] ; ret
0x000000000045fd4a : lea rax, [rdx + 6] ; ret
0x000000000045fc56 : lea rax, [rdx + 7] ; ret
0x000000000045fd5c : lea rax, [rdx + 8] ; ret
0x000000000045fd7c : lea rax, [rdx + 9] ; ret
0x000000000040b037 : lea rax, [rdx + rax - 1] ; ret
0x000000000043edc5 : lea rax, [rdx - 0x10] ; ret
0x000000000045fcc4 : lea rax, [rdx] ; ret
0x0000000000469ef0 : lea rax, [rip + 0x271429] ; ret
0x0000000000406c60 : lea rax, [rip + 0xa3298] ; ret
0x00000000004067c0 : lea rax, [rip + 0xa361b] ; ret
0x0000000000406510 : lea rax, [rip + 0xa3879] ; ret
0x0000000000404800 : lea rax, [rip + 0xa5491] ; ret
0x00000000004047f0 : lea rax, [rip + 0xa5492] ; ret
0x0000000000404090 : lea rax, [rip + 0xa5b29] ; ret
0x00000000004040a0 : lea rax, [rip + 0xa5b41] ; ret
0x000000000048779b : lea rax, [rsi + 8] ; mov qword ptr [rdx + 8], rax ; jmp 0x487779
0x0000000000429360 : lea rbx, [r15 + rax] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000046004d : lea rcx, [r11 + rcx] ; jmp rcx
0x000000000040806c : lea rcx, [rax + 0x18] ; mov rax, rcx ; ret
0x000000000048feca : lea rcx, [rax + 1] ; call rbx
0x0000000000490065 : lea rcx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x000000000043edd5 : lea rcx, [rdx - 8] ; cmovne rax, rcx ; ret
0x0000000000491af6 : lea rcx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x00000000004691de : lea rdi, [rcx + rax + 0x20] ; jmp rdx
0x00000000004a9057 : lea rdi, [rip + 0x39c2] ; call 0x435279
0x00000000004a8fb0 : lea rdi, [rip + 0x39e9] ; call 0x435279
0x00000000004a8fa0 : lea rdi, [rip + 0x3a51] ; call 0x435279
0x000000000041c3f0 : lea rdi, [rsp + 0x60] ; call 0x428e07
0x0000000000449a13 : lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000449e07 : lea rdx, [rdx - 0x40] ; jmp r9
0x0000000000487bec : lea rsi, [rip + 0x24fc8d] ; jmp rax
0x0000000000462f2e : lea rsi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000405093 : lea rsp, [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000468bb0 : leave ; add al, 0 ; mov eax, 0x15 ; syscall
0x0000000000445e67 : leave ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000446d47 : leave ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004a0a40 : leave ; and eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00000000004a0a5b : leave ; and eax, dword ptr [rax] ; ret
0x000000000047453a : leave ; call r15
0x00000000004ae4a5 : leave ; cli ; call rax
0x000000000040d787 : leave ; cmovne eax, edx ; ret
0x00000000004ab3d1 : leave ; idiv bh ; cdq ; retf 0xfff6
0x00000000004046a5 : leave ; jne 0x4046eb ; mov qword ptr [rax], rsi ; xor eax, eax ; pop rbx ; ret
0x000000000040d557 : leave ; jne 0x40d51a ; xor eax, eax ; ret
0x0000000000462690 : leave ; jne 0x462683 ; ret
0x0000000000462740 : leave ; jne 0x462733 ; ret
0x0000000000462a00 : leave ; jne 0x4629f7 ; sub rax, 1 ; ret
0x00000000004906fa : leave ; jne 0x4906b7 ; mov rax, rdx ; ret
0x0000000000462c08 : leave ; lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x0000000000403390 : leave ; movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x0000000000488109 : leave ; movzx eax, byte ptr [rdi + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000400db1 : leave ; ret
0x00000000004c1c54 : leave ; retf
0x00000000004c0421 : leave ; retf 0x6ee8
0x00000000004bf549 : leave ; retf 0xcccb
0x00000000004ad76d : leave ; stc ; inc dword ptr [rax - 0x2f000636] ; retf
0x00000000004ad7ad : leave ; stc ; push rax ; retf 0xfff9
0x0000000000408999 : leave ; xor eax, eax ; call 0x404c95
0x000000000048ffea : leave ; xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000467eef : leave ; xor r8d, r8d ; mov eax, 0x2c ; syscall
0x000000000043e546 : ljmp [rax + 0x158d4804] ; push rax ; ret
0x00000000004af3cf : ljmp [rax - 0x5f] ; sti ; inc dword ptr [rax - 0x5f] ; sti ; jmp qword ptr [rax]
0x00000000004ab3cb : ljmp [rax] ; retf 0xfff6
0x00000000004af97f : ljmp [rax] ; test al, 0xfb ; call qword ptr [rbx]
0x00000000004af96b : ljmp [rax] ; test al, 0xfb ; call rdx
0x00000000004ae697 : ljmp [rbx + rbx*2 + 0x5b89fffb] ; sti ; call rsi
0x00000000004c3b6f : ljmp [rbx + rdx*8 - 0x2c430003] ; std ; jmp qword ptr [rbx]
0x00000000004ad5db : ljmp [rbx - 0x3e] ; stc ; push rax ; ret 0xfff9
0x00000000004ad5d3 : ljmp [rbx] ; sar ecx, 0xff ; retf
0x00000000004ae29b : ljmp [rdx + 0x3afffa54] ; push rsp ; cli ; jmp rax
0x00000000004aec3f : ljmp [rdx + 0x69] ; sti ; jmp qword ptr [rdx]
0x00000000004af963 : ljmp [rdx - 0x57] ; sti ; jmp qword ptr [rdx]
0x000000000042bcc6 : ljmp [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004add1f : ljmp [rsi] ; cli ; call rsp
0x00000000004ae15f : ljmp [rsp + rdx*2 - 6] ; call qword ptr [rdx]
0x000000000044862e : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000049b2b7 : lock inc dword ptr [r9 + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043b819 : lock sub dword ptr [rax], eax ; ret
0x000000000043b818 : lock sub dword ptr fs:[rax], eax ; ret
0x000000000042bc40 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000462010 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000004c8e38 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; and al, 0x26 ; hlt ; call qword ptr [rdx]
0x00000000004cf281 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; stc ; call qword ptr [rdx]
0x00000000004cf209 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; xchg eax, esp ; stc ; call rsp
0x00000000004029d0 : lodsb al, byte ptr [rsi] ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004c4fc0 : lodsb al, byte ptr [rsi] ; fdivr st(3), st(0) ; jmp qword ptr [rsi]
0x00000000004c1b46 : lodsb al, byte ptr [rsi] ; loop 0x4c1b13 ; retf
0x0000000000446464 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004c28fd : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000420980 : lodsb al, byte ptr [rsi] ; ret 0x2b
0x00000000004af9a9 : lodsb al, byte ptr [rsi] ; sti ; dec esp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; call qword ptr [rbx]
0x00000000004c017b : lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x00000000004cf2d1 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; mov word ptr [rcx - 7], cs ; jmp rbx
0x00000000004cf2bd : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; nop ; stc ; call qword ptr [rax]
0x00000000004cf30d : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; nop ; stc ; call qword ptr [rbx]
0x00000000004cf35d : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; ror byte ptr [rbx - 7], 1 ; call qword ptr [rbx]
0x000000000047d60f : lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x00000000004763ce : lodsd eax, dword ptr [rsi] ; cli ; inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x00000000004c1f25 : lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x000000000049efb2 : lodsd eax, dword ptr [rsi] ; ret
0x0000000000401c7b : loop 0x401c85 ; add rax, rdx ; pop rbp ; ret
0x000000000040bd85 : loop 0x40bd95 ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000040bdd5 : loop 0x40bde5 ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000040bdd4 : loop 0x40bde6 ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000412241 : loop 0x4121d3 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000413729 : loop 0x4136bb ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000041391c : loop 0x4138ae ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000004141c1 : loop 0x414153 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000415cfa : loop 0x415cf5 ; ret 0x3107
0x0000000000419639 : loop 0x419688 ; add esp, 0x18 ; ret
0x000000000043da6e : loop 0x43dac1 ; mov esi, ebx ; mov rdi, r13 ; call 0x439cb9
0x0000000000441f2d : loop 0x441f65 ; shr byte ptr [rcx], 0xc8 ; ret
0x0000000000450b3a : loop 0x450b35 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000450b39 : loop 0x450b36 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000045365a : loop 0x453655 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000453659 : loop 0x453656 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004641af : loop 0x4641c9 ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x0000000000468b73 : loop 0x468bc6 ; mov dword ptr [rax + 0x20], ecx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000048e8ba : loop 0x48e8d2 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000049192e : loop 0x4918f6 ; add dword ptr [rax + rax], edx ; mov eax, ecx ; syscall
0x00000000004939e9 : loop 0x493a40 ; mov esi, ebp ; mov rdi, rax ; call 0x400441
0x00000000004a9b18 : loop 0x4a9b98 ; cmc ; jmp rdx
0x00000000004a9b1c : loop 0x4a9b9c ; cmc ; jmp rdx
0x00000000004a9b20 : loop 0x4a9ba0 ; cmc ; jmp rdx
0x00000000004a9b24 : loop 0x4a9ba4 ; cmc ; jmp rdx
0x00000000004a9b28 : loop 0x4a9ba8 ; cmc ; call rsp
0x00000000004a9b30 : loop 0x4a9bb0 ; cmc ; jmp rdx
0x00000000004a9b34 : loop 0x4a9bb4 ; cmc ; jmp rdx
0x00000000004a9b38 : loop 0x4a9bb8 ; cmc ; jmp rdx
0x00000000004a9b3c : loop 0x4a9bbc ; cmc ; jmp rdx
0x00000000004a9b40 : loop 0x4a9bc0 ; cmc ; jmp rdx
0x00000000004a9b44 : loop 0x4a9bc4 ; cmc ; jmp rdx
0x00000000004a9b48 : loop 0x4a9bc8 ; cmc ; jmp rdx
0x00000000004a9b4c : loop 0x4a9bcc ; cmc ; jmp rdx
0x00000000004a9b5c : loop 0x4a9bdc ; cmc ; jmp rdx
0x00000000004a9b60 : loop 0x4a9be0 ; cmc ; jmp rdx
0x00000000004a9b64 : loop 0x4a9be4 ; cmc ; jmp rdx
0x00000000004ad68d : loop 0x4ad68e ; inc dword ptr [rax - 0x1c] ; stc ; jmp qword ptr [rax]
0x00000000004ad6ad : loop 0x4ad6aa ; call qword ptr [rax]
0x00000000004ad6cd : loop 0x4ad6ca ; jmp rax
0x00000000004c1b47 : loop 0x4c1b12 ; retf
0x00000000004c2c9a : loop 0x4c2cef ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004d27fd : loop 0x4d2803 ; add al, ah ; retf 0xfffb
0x00000000004d2845 : loop 0x4d284d ; add byte ptr [rax - 0x2f], bh ; sti ; jmp qword ptr [rax]
0x000000000043c77f : loope 0x43c7af ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000450aaa : loope 0x450aa5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000450aa9 : loope 0x450aa6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004535ca : loope 0x4535c5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004535c9 : loope 0x4535c6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000460d3b : loope 0x460d45 ; add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x000000000046472e : loope 0x464725 ; ret
0x000000000046acee : loope 0x46acfb ; pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x00000000004908fe : loope 0x490913 ; je 0x490924 ; ret
0x0000000000498acb : loope 0x498ad1 ; dec dword ptr [rcx - 0x77] ; ret
0x000000000049ee47 : loope 0x49ee99 ; mov dword ptr [rdi], ecx ; ret
0x000000000049ee78 : loope 0x49eecb ; mov dword ptr [rdi - 8], ecx ; ret
0x000000000049eeed : loope 0x49ef40 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x00000000004a7526 : loope 0x4a7585 ; ret
0x00000000004a81ee : loope 0x4a8250 ; pop rbp ; pop r12 ; ret
0x00000000004ad72d : loope 0x4ad72a ; jmp qword ptr [rax]
0x00000000004c1c51 : loope 0x4c1cd3 ; pop rdx ; leave ; retf
0x00000000004cb871 : loope 0x4cb86a ; call rsp
0x00000000004027b3 : loopne 0x402780 ; ret
0x00000000004027b2 : loopne 0x402781 ; ret
0x0000000000408a21 : loopne 0x408a85 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000408a3d : loopne 0x408aa1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040a4df : loopne 0x40a52d ; mov dword ptr [rdi], esi ; ret
0x000000000040d738 : loopne 0x40d73e ; ret
0x000000000040dd4e : loopne 0x40dd53 ; ret
0x000000000041730d : loopne 0x41730f ; ret
0x000000000041bb04 : loopne 0x41bb1a ; sub al, 0 ; test eax, eax ; je 0x41bb19 ; ret
0x0000000000428f2c : loopne 0x428f47 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000042b417 : loopne 0x42b47d ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004389bc : loopne 0x4389d0 ; xchg eax, esp ; ret 0x3de9
0x000000000043e33f : loopne 0x43e3a5 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000449e61 : loopne 0x449e78 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000449e60 : loopne 0x449e79 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000449fb1 : loopne 0x449fc8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000449fb0 : loopne 0x449fc9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044a101 : loopne 0x44a118 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044a100 : loopne 0x44a119 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044a251 : loopne 0x44a268 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044a250 : loopne 0x44a269 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044a3a1 : loopne 0x44a3b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044a3a0 : loopne 0x44a3b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044a4f1 : loopne 0x44a508 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044a4f0 : loopne 0x44a509 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044a641 : loopne 0x44a658 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044a640 : loopne 0x44a659 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044a78f : loopne 0x44a7a6 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044a78e : loopne 0x44a7a7 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044a8e1 : loopne 0x44a8f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044a8e0 : loopne 0x44a8f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044aa31 : loopne 0x44aa48 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044aa30 : loopne 0x44aa49 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044ab81 : loopne 0x44ab98 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044ab80 : loopne 0x44ab99 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044acd1 : loopne 0x44ace8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044acd0 : loopne 0x44ace9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044ae21 : loopne 0x44ae38 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044ae20 : loopne 0x44ae39 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044af71 : loopne 0x44af88 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044af70 : loopne 0x44af89 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044b0c1 : loopne 0x44b0d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044b0c0 : loopne 0x44b0d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044c831 : loopne 0x44c848 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044c830 : loopne 0x44c849 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044c981 : loopne 0x44c998 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044c980 : loopne 0x44c999 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044cad1 : loopne 0x44cae8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044cad0 : loopne 0x44cae9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044cc21 : loopne 0x44cc38 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044cc20 : loopne 0x44cc39 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044cd71 : loopne 0x44cd88 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044cd70 : loopne 0x44cd89 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044cec1 : loopne 0x44ced8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044cec0 : loopne 0x44ced9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044d011 : loopne 0x44d028 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044d010 : loopne 0x44d029 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044d15f : loopne 0x44d176 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044d15e : loopne 0x44d177 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044d2b1 : loopne 0x44d2c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044d2b0 : loopne 0x44d2c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044d401 : loopne 0x44d418 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044d400 : loopne 0x44d419 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044d551 : loopne 0x44d568 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044d550 : loopne 0x44d569 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044d6a1 : loopne 0x44d6b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044d6a0 : loopne 0x44d6b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044d7f1 : loopne 0x44d808 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044d7f0 : loopne 0x44d809 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044d941 : loopne 0x44d958 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044d940 : loopne 0x44d959 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044da91 : loopne 0x44daa8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000044da90 : loopne 0x44daa9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000046411d : loopne 0x464137 ; movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x00000000004680e8 : loopne 0x4680fd ; cmp eax, 4 ; je 0x4680f7 ; ret
0x000000000046acf2 : loopne 0x46ad55 ; pop r12 ; ret
0x0000000000471a8d : loopne 0x471b08 ; jae 0x471a1e ; retf 0xb941
0x000000000047fa8f : loopne 0x47fa1c ; ret
0x0000000000489bfa : loopne 0x489c00 ; dec dword ptr [rcx + 0x63] ; ret
0x000000000048b129 : loopne 0x48b18d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000048b905 : loopne 0x48b969 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000497d2c : loopne 0x497d20 ; cld ; inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x000000000049e81d : loopne 0x49e826 ; sub eax, 1 ; ret
0x00000000004ad3a0 : loopne 0x4ad3da ; stc ; jmp qword ptr [rax]
0x00000000004ad3b0 : loopne 0x4ad3ef ; stc ; jmp qword ptr [rax]
0x00000000004ad3c0 : loopne 0x4ad404 ; stc ; jmp qword ptr [rax]
0x00000000004ad3d0 : loopne 0x4ad419 ; stc ; jmp qword ptr [rax]
0x00000000004ad4b0 : loopne 0x4ad446 ; stc ; call rax
0x00000000004ad51c : loopne 0x4ad4e0 ; stc ; jmp qword ptr [rip - 0x2e000647]
0x00000000004ad6a9 : loopne 0x4ad6aa ; push qword ptr [rax] ; loop 0x4ad6ae ; call qword ptr [rax]
0x00000000004ad6c9 : loopne 0x4ad6ca ; inc dword ptr [rax] ; loop 0x4ad6ce ; jmp rax
0x00000000004ad74c : loopne 0x4ad731 ; stc ; call rax
0x00000000004ad74d : loopne 0x4ad74a ; call rax
0x00000000004ae580 : loopne 0x4ae5ab ; sti ; push rax ; and bh, bl ; call qword ptr [rax]
0x00000000004bcd99 : loopne 0x4bcd99 ; jmp qword ptr [rax]
0x00000000004bcda9 : loopne 0x4bcda9 ; call qword ptr [rax]
0x00000000004c0274 : loopne 0x4c0254 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004c4d6c : loopne 0x4c4d7c ; add byte ptr [rax], al ; rcr dl, 1 ; call qword ptr [rcx]
0x00000000004c676c : loopne 0x4c6796 ; add byte ptr [rax], al ; cmp dh, 0xf3 ; call qword ptr [rbx]
0x00000000004c8390 : loopne 0x4c83b0 ; hlt ; call qword ptr [rdx]
0x00000000004c846c : loopne 0x4c84b3 ; add byte ptr [rax], al ; adc byte ptr [rsp + rsi*8], bl ; jmp qword ptr [rdx]
0x00000000004d086c : loopne 0x4d0837 ; add byte ptr [rax], al ; adc bh, cl ; stc ; call qword ptr [rax]
0x00000000004d264d : loopne 0x4d2655 ; add byte ptr [rax - 0x3e], dl ; sti ; jmp qword ptr [rbx]
0x00000000004d2665 : loopne 0x4d266d ; add byte ptr [rax - 0x3e], ch ; sti ; jmp qword ptr [rbx]
0x00000000004d2800 : loopne 0x4d27cf ; sti ; jmp rdx
0x0000000000402ae4 : lsl eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004c5740 : mov ah, 0x11 ; add byte ptr [rax], al ; mov ecx, gs ; call qword ptr [rbx]
0x00000000004bfc8a : mov ah, 0x13 ; ret
0x00000000004a946a : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000004a8bca : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x00000000004adb54 : mov ah, 0x39 ; cli ; inc dword ptr [rcx + rdi - 6] ; call rsp
0x00000000004ceedc : mov ah, 0x5c ; clc ; jmp qword ptr [rsi]
0x00000000004ae04c : mov ah, 0x60 ; cli ; inc dword ptr [rax - 6] ; call rsp
0x00000000004d02cc : mov ah, 0x9d ; stc ; jmp qword ptr [rdx]
0x00000000004c784c : mov ah, 0xa ; hlt ; jmp qword ptr [rdx]
0x00000000004c0130 : mov ah, 0xa5 ; ret
0x00000000004cfb40 : mov ah, 0xb5 ; add byte ptr [rax], al ; jl 0x4cfbba ; stc ; call rsi
0x00000000004c5dcc : mov ah, 0xf4 ; call qword ptr [rsi]
0x00000000004c64cc : mov ah, 0xfb ; call qword ptr [rdx]
0x0000000000434f5c : mov ah, 0xfc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004c6bac : mov ah, 2 ; hlt ; call qword ptr [rdx]
0x00000000004c6e4c : mov ah, 3 ; hlt ; call qword ptr [rdx]
0x00000000004c6588 : mov ah, bh ; call qword ptr [rdx]
0x00000000004bfa84 : mov ah, bl ; push rsi ; ret
0x0000000000417486 : mov al, 0 ; add byte ptr [rax], al ; ret
0x0000000000474534 : mov al, 0 ; add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x00000000004ae4e0 : mov al, 0x1c ; sti ; inc eax ; sbb al, 0xfb ; call rax
0x00000000004c8c00 : mov al, 0x23 ; hlt ; jmp qword ptr [rdx]
0x00000000004ae59c : mov al, 0x23 ; sti ; inc eax ; and edi, ebx ; call rax
0x00000000004ae5c0 : mov al, 0x24 ; sti ; call rax
0x00000000004adbb8 : mov al, 0x3c ; cli ; inc dword ptr [rax + 0x3c] ; cli ; call rax
0x00000000004ad3e4 : mov al, 0x4d ; stc ; call rax
0x00000000004ae314 : mov al, 0x55 ; cli ; jmp qword ptr [rax]
0x00000000004ae110 : mov al, 0x56 ; cli ; jmp qword ptr [rax]
0x00000000004ad404 : mov al, 0x56 ; stc ; call rax
0x00000000004aded8 : mov al, 0x5f ; cli ; inc dword ptr [rax + 0x5f] ; cli ; call rsi
0x00000000004ae0b0 : mov al, 0x63 ; cli ; inc dword ptr [rax + 0x63] ; cli ; call rax
0x00000000004ae3e8 : mov al, 0x76 ; cli ; inc eax ; js 0x4ae3f0 ; call rax
0x00000000004ad478 : mov al, 0x7f ; stc ; jmp qword ptr [rax]
0x00000000004cae60 : mov al, 0xb ; cmc ; call qword ptr [rdx]
0x0000000000429d7c : mov al, 0xc3 ; insd dword ptr [rdi], dx ; add byte ptr [rax + 0x39], cl ; ret
0x000000000045c75f : mov al, 0xc5 ; std ; xlatb ; ret
0x00000000004cb930 : mov al, 0xe4 ; cmc ; jmp qword ptr [rax]
0x0000000000419d2f : mov al, 0xe8 ; retf
0x00000000004c1f36 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x000000000041f97f : mov al, 0xf ; retf
0x00000000004c6180 : mov al, 0xf7 ; call qword ptr [rdx]
0x00000000004ae459 : mov al, 0xfa ; push qword ptr [rax] ; mov dl, 0xfa ; call rax
0x00000000004d3fe9 : mov al, 0xfc ; jmp qword ptr [rcx]
0x000000000047fa9b : mov al, byte ptr [rbx - 0x76ffffe6] ; ret 0xc389
0x000000000045e536 : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000045e554 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000045fcc0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x000000000045e510 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000045e520 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000451871 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000004c1fc0 : mov bh, 0x38 ; push 0xfd4cbe ; retf 0xf64
0x0000000000474b94 : mov bh, 0x43 ; add al, 0x89 ; retf
0x000000000047470f : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x0000000000460bd8 : mov bh, 0x48 ; lea eax, [rdi + 7] ; ret
0x00000000004c2298 : mov bh, 0x4e ; retf 0x9d7d
0x00000000004c0f64 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x000000000048dc25 : mov bh, 0xc ; cli ; dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x00000000004bf546 : mov bh, 0xc8 ; leave ; retf 0xcccb
0x000000000042f3a9 : mov bh, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xbc40
0x0000000000440655 : mov bh, 0xe7 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000004093a6 : mov bh, 0xeb ; ret
0x0000000000439ab3 : mov bh, 0xff ; dec dword ptr [rax + 0x39] ; retf 0x2a74
0x000000000040a3a5 : mov bh, 4 ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x00000000004c2673 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004624ce : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004c22fb : mov bl, 0x29 ; retf 0xbf4b
0x00000000004906fc : mov bl, 0x48 ; mov eax, edx ; ret
0x0000000000476fa2 : mov bl, 0x4c ; add edi, ebx ; jmp rdi
0x00000000004c2043 : mov bl, 0x8e ; ret 0xdcd9
0x0000000000431b43 : mov bl, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xbc40
0x00000000004c22e0 : mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004650be : mov bl, 0xf9 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004ae461 : mov bl, 0xfa ; push qword ptr [rax - 0x4b] ; cli ; call qword ptr [rax]
0x00000000004d4318 : mov bl, cl ; cld ; jmp qword ptr [rdx]
0x00000000004bfc61 : mov bx, 0xf32d ; retf
0x000000000049d0f0 : mov byte ptr [r8 + 0x15], r15b ; syscall
0x000000000046afaa : mov byte ptr [r8 - 0x7d], r9b ; ret 0x4830
0x0000000000407503 : mov byte ptr [r8], al ; mov rax, rbx ; pop rbx ; ret
0x000000000049d0f1 : mov byte ptr [rax + 0x15], bh ; syscall
0x0000000000468b4a : mov byte ptr [rax + 0x28], 1 ; ret
0x00000000004bbdec : mov byte ptr [rax + rax], 0 ; enter 4, 0 ; retf 4
0x00000000004cba14 : mov byte ptr [rax + rax], dh ; sbb bh, ah ; cmc ; call qword ptr [rax]
0x000000000040a547 : mov byte ptr [rax + rsi], 0 ; ret
0x000000000046afab : mov byte ptr [rax - 0x7d], cl ; ret 0x4830
0x000000000040ac1c : mov byte ptr [rax], 0 ; ret
0x0000000000467cbf : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000041c094 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000407504 : mov byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x000000000042e167 : mov byte ptr [rax], bh ; mov eax, r10d ; ret
0x000000000042e166 : mov byte ptr [rax], dil ; mov eax, r10d ; ret
0x000000000040c173 : mov byte ptr [rax], dl ; mov rax, rbx ; pop rbx ; ret
0x00000000004cb498 : mov byte ptr [rbp - 0xb], dl ; call rax
0x0000000000414fc6 : mov byte ptr [rbx + 0x108], 0x20 ; jmp 0x411a08
0x0000000000414f6a : mov byte ptr [rbx + 0x108], 0x20 ; jmp 0x411a74
0x000000000048b017 : mov byte ptr [rcx + 0xf], 0x4f ; ret
0x0000000000476aa3 : mov byte ptr [rcx + rax - 0x3a], cl ; jmp rsi
0x0000000000403394 : mov byte ptr [rcx + rax - 0x40], cl ; jmp rax
0x00000000004cef14 : mov byte ptr [rcx - 0x60080000], ch ; clc ; call qword ptr [rax]
0x00000000004cd4b8 : mov byte ptr [rcx - 0xa], bh ; call qword ptr [rsi]
0x0000000000403e56 : mov byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004210af : mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004c6714 : mov byte ptr [rcx], ah ; add byte ptr [rax], al ; sub dh, bh ; call qword ptr [rdi]
0x000000000047ae33 : mov byte ptr [rcx], cl ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000040a33c : mov byte ptr [rdi + 0x10], 0 ; mov qword ptr [rdi], rax ; ret
0x0000000000460928 : mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x0000000000460298 : mov byte ptr [rdi + 0x10], dh ; ret
0x000000000046099e : mov byte ptr [rdi + 0x14], dh ; lea rax, [rdi + 0x14] ; ret
0x00000000004602ee : mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000460a20 : mov byte ptr [rdi + 0x18], dh ; lea rax, [rdi + 0x18] ; ret
0x0000000000460370 : mov byte ptr [rdi + 0x18], dh ; ret
0x00000000004607d6 : mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x00000000004601b6 : mov byte ptr [rdi + 2], dh ; ret
0x00000000004607f2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x00000000004601d2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000460213 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000407fca : mov byte ptr [rdi + rsi + 0x18], 0 ; ret
0x00000000004c22f5 : mov byte ptr [rdi - 0x17ac8d3c], al ; mov bl, 0x29 ; retf 0xbf4b
0x000000000044b48b : mov byte ptr [rdi - 1], dl ; ret
0x000000000042e990 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x000000000040725b : mov byte ptr [rdi], al ; ret
0x00000000004545b2 : mov byte ptr [rdi], cl ; ret
0x0000000000463e95 : mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000004607b0 : mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x0000000000460190 : mov byte ptr [rdi], dh ; ret
0x00000000004072a0 : mov byte ptr [rdi], dl ; ret
0x000000000045fce9 : mov byte ptr [rdx + 2], al ; lea rax, [rdx + 2] ; ret
0x000000000045e539 : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000045fd17 : mov byte ptr [rdx + 4], al ; lea rax, [rdx + 4] ; ret
0x000000000045e557 : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000040b23a : mov byte ptr [rdx + rsi], 0 ; pop rbx ; ret
0x00000000004d0014 : mov byte ptr [rdx - 0x7cb80000], bh ; stc ; call qword ptr [rcx]
0x00000000004c6b38 : mov byte ptr [rdx], al ; hlt ; call qword ptr [rbx]
0x000000000045fcc2 : mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x000000000045e512 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000417eb0 : mov byte ptr [rip + 0x2c4649], 8 ; ret
0x0000000000400b86 : mov byte ptr [rip + 0x2db833], 1 ; pop rbp ; ret
0x000000000040a401 : mov byte ptr [rsi + 0x10], 0 ; ret
0x0000000000439c69 : mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x00000000004a081f : mov byte ptr [rsi], al ; jne 0x4a080f ; mov rax, rsi ; ret
0x00000000004a08a3 : mov byte ptr [rsi], al ; jne 0x4a0887 ; mov rax, rsi ; ret
0x000000000048e5ac : mov byte ptr [rsi], bl ; idiv edi ; mov rcx, rax ; jmp 0x48e580
0x00000000004cfaad : mov ch, 0 ; add byte ptr [rax + 0x6c], ah ; stc ; jmp qword ptr [rcx]
0x00000000004cfac5 : mov ch, 0 ; add byte ptr [rax + 0x6c], bh ; stc ; jmp qword ptr [rcx]
0x00000000004cfa95 : mov ch, 0 ; add byte ptr [rax + 0x6c], cl ; stc ; jmp qword ptr [rcx]
0x00000000004cfb41 : mov ch, 0 ; add byte ptr [rbp + rbp*2 - 7], bh ; call rsi
0x00000000004bfa82 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x00000000004c0dc3 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004c1a56 : mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004c215f : mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004c2b0a : mov ch, 0xab ; ret
0x000000000048d497 : mov ch, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xbc40
0x00000000004ae465 : mov ch, 0xfa ; call qword ptr [rax]
0x00000000004a3e3c : mov ch, 0xff ; nop ; add rsp, 8 ; ret
0x00000000004491a6 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004d4314 : mov ch, bh ; add byte ptr [rax], al ; mov bl, cl ; cld ; jmp qword ptr [rdx]
0x00000000004cf725 : mov cl, 0 ; add byte ptr [rax], bh ; pop rsi ; stc ; jmp qword ptr [rcx]
0x0000000000401260 : mov cl, 0x2d ; add byte ptr [rcx], bh ; ret 0xd7f
0x00000000004c2561 : mov cl, 0x3f ; retf
0x000000000040156b : mov cl, 0x90 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004ad548 : mov cl, 0xbf ; stc ; inc dword ptr [rcx - 0x40] ; stc ; call rcx
0x000000000040915e : mov cl, 0xeb ; ret 0x1f0f
0x000000000046deab : mov cl, 0xf ; retf 0xd285
0x00000000004025f8 : mov cl, 6 ; add byte ptr [rax], al ; nop ; leave ; ret
0x00000000004776a7 : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x0000000000456d95 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x00000000004408d4 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x00000000004c1f32 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x0000000000447ff4 : mov cl, byte ptr [rsi + rdx - 1] ; sub eax, ecx ; ret
0x00000000004545b0 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004908fb : mov cl, dl ; and cl, 0xf ; je 0x490927 ; ret
0x00000000004c21ec : mov cs, edi ; ret 0x8b36
0x0000000000484522 : mov cs, word ptr [rdx - 0x77000000] ; ror byte ptr [rcx - 0x77], cl ; ret
0x000000000045b31e : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x00000000004601b0 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000004a094a : mov dh, 0 ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000000000040dbab : mov dh, 0 ; add byte ptr [rax], al ; ret
0x000000000041a56f : mov dh, 0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000432752 : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042ec3f : mov dh, 0 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004347e0 : mov dh, 0 ; ret
0x000000000040c171 : mov dh, 0x16 ; mov byte ptr [rax], dl ; mov rax, rbx ; pop rbx ; ret
0x00000000004518e1 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000447b44 : mov dh, 0x16 ; sub eax, edx ; ret
0x0000000000428df4 : mov dh, 0x17 ; test dl, dl ; jne 0x428dda ; ret
0x000000000042e8e4 : mov dh, 0x2a ; add byte ptr [rax], al ; je 0x42e8f3 ; ret
0x0000000000482afe : mov dh, 0x34 ; add dword ptr [rbp - 0x41f040be], ecx ; retf 0x53c
0x00000000004ad9e0 : mov dh, 0x38 ; cli ; jmp qword ptr [rsi]
0x00000000004ad9e8 : mov dh, 0x3e ; cli ; inc dword ptr [rsi + 0x3e] ; cli ; call rsi
0x00000000004734a8 : mov dh, 0x40 ; add cl, byte ptr [rax - 0x73] ; add rcx, qword ptr [rax + 0x39] ; retf
0x000000000048b02c : mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x00000000004734be : mov dh, 0x40 ; add ecx, dword ptr [rax + 0x39] ; retf
0x0000000000428d19 : mov dh, 0x40 ; or dword ptr [rax + rax*8 - 0x38b79f8c], eax ; ret 0xfff0
0x00000000004734d2 : mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000048594b : mov dh, 0x46 ; or al, 0x83 ; ret
0x00000000004620a1 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000462091 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000462061 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000462081 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000462071 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000047a529 : mov dh, 0x47 ; or al, 0x83 ; ret
0x00000000004a40e7 : mov dh, 0x49 ; add al, 0x89 ; retf 0xeac0
0x0000000000470edd : mov dh, 0x4e ; add dword ptr [rcx - 0x77], eax ; retf
0x0000000000470f1e : mov dh, 0x4e ; add eax, dword ptr [rcx - 0x77] ; retf
0x00000000004c0f22 : mov dh, 0x4e ; ret 0x474c
0x00000000004620a5 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x0000000000462095 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x0000000000462065 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x0000000000462075 : mov dh, 0x56 ; sub eax, edx ; ret
0x000000000047f7b8 : mov dh, 0x67 ; or al, 0x89 ; ret 0xc689
0x000000000040f3ba : mov dh, 0x6a ; add dword ptr [rax - 0x77], ecx ; ret 0x8440
0x000000000042124a : mov dh, 0x73 ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000042a204 : mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000471fe6 : mov dh, 0x78 ; add cl, byte ptr [rax + 0x39] ; retf
0x00000000004182a1 : mov dh, 0x78 ; add cl, byte ptr [rax - 0x7d] ; rol byte ptr [rdx], 0xe9 ; retf 0xfffc
0x0000000000471fd1 : mov dh, 0x78 ; add dword ptr [rax + 0x39], ecx ; retf
0x0000000000471ffb : mov dh, 0x78 ; add ecx, dword ptr [rax + 0x39] ; retf
0x0000000000472324 : mov dh, 0x7a ; add cl, byte ptr [rax - 0x73] ; add rcx, qword ptr [rax + 0x39] ; retf
0x0000000000494d8f : mov dh, 0x87 ; adc eax, 0x89000003 ; ret 0xe8c0
0x0000000000403894 : mov dh, 0x8c ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000491902 : mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x00000000004185b6 : mov dh, 0xc0 ; movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x000000000040f767 : mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000004109d7 : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000004a449d : mov dh, 0xc0 ; neg eax ; ret
0x00000000004a0d6a : mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040dd3a : mov dh, 0xc0 ; ret
0x00000000004ad590 : mov dh, 0xc0 ; stc ; inc dword ptr [rsi - 0x3f] ; stc ; jmp rsi
0x000000000046b481 : mov dh, 0xc0 ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x0000000000464181 : mov dh, 0xc1 ; pop rbx ; ret
0x0000000000431552 : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004c2164 : mov dh, 0xc7 ; ret 0xe71f
0x000000000040338f : mov dh, 0xc9 ; movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x0000000000410d38 : mov dh, 0xd2 ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x0000000000447b6a : mov dh, 0xd2 ; sub eax, edx ; ret
0x0000000000418aef : mov dh, 0xdb ; movsxd rax, dword ptr [r9 + r11*4] ; add rax, r9 ; jmp rax
0x0000000000462fa9 : mov dh, 0xe ; mov byte ptr [rdi], cl ; ret
0x0000000000441c81 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000448004 : mov dh, 0xe ; sub eax, ecx ; ret
0x0000000000484de4 : mov dh, 0xf7 ; dec dword ptr [rax - 0x39] ; ret 0xff90
0x0000000000428855 : mov dh, 0xfa ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x0000000000432761 : mov dh, 2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042ec51 : mov dh, 2 ; ret
0x0000000000407501 : mov dh, 6 ; mov byte ptr [r8], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000407259 : mov dh, 6 ; mov byte ptr [rdi], al ; ret
0x0000000000448001 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000447b41 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000441c84 : mov dh, 7 ; sub eax, ecx ; ret
0x000000000046472c : mov dh, byte ptr [rcx - 0xd] ; ret
0x00000000004aab6d : mov dh, dh ; call rax
0x00000000004011d5 : mov dl, 0x2d ; add byte ptr [rcx], bh ; ret 0xc7e
0x00000000004ada8c : mov dl, 0x3a ; cli ; inc dword ptr [rdx + 0x3a] ; cli ; call rdx
0x00000000004adf84 : mov dl, 0x61 ; cli ; inc dword ptr [rdx + 0x61] ; cli ; call rdx
0x00000000004ae45d : mov dl, 0xfa ; call rax
0x000000000044b510 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004d1014 : mov dl, cl ; add byte ptr [rax], al ; sbb byte ptr [rdx - 3], ch ; jmp qword ptr [rdi]
0x000000000047e91d : mov ds, word ptr [rax + rax + 0x63490000] ; ret 0x8944
0x00000000004c257e : mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x00000000004545a6 : mov dword ptr [r9 - 2], ecx ; ret
0x0000000000454591 : mov dword ptr [r9 - 4], ecx ; ret
0x00000000004025c0 : mov dword ptr [rax + 0x10], 0 ; nop ; leave ; ret
0x000000000040803d : mov dword ptr [rax + 0x10], 0 ; pop rbx ; ret
0x0000000000468ae1 : mov dword ptr [rax + 0x10], ecx ; mov qword ptr [rax + 8], rdx ; ret
0x000000000040d544 : mov dword ptr [rax + 0x10], ecx ; ret
0x000000000048cad9 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000402c35 : mov dword ptr [rax + 0x10], edx ; nop ; leave ; ret
0x000000000048cb19 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000048db18 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000468b47 : mov dword ptr [rax + 0x20], ecx ; mov byte ptr [rax + 0x28], 1 ; ret
0x0000000000468b61 : mov dword ptr [rax + 0x20], esi ; ret
0x000000000048cadd : mov dword ptr [rax + 0x40], ecx ; ret
0x000000000048db9a : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000046d6bf : mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x000000000046d6c2 : mov dword ptr [rax + 0x54], edx ; ret
0x0000000000433475 : mov dword ptr [rax + 8], 0 ; ret
0x0000000000410279 : mov dword ptr [rax + 8], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040d540 : mov dword ptr [rax + 8], edx ; mov qword ptr [rax + 0x10], rcx ; ret
0x0000000000402917 : mov dword ptr [rax + 8], edx ; nop ; leave ; ret
0x0000000000468ae5 : mov dword ptr [rax + 8], edx ; ret
0x000000000040856a : mov dword ptr [rax - 8], 0xffffffff ; pop rbx ; ret
0x0000000000408547 : mov dword ptr [rax - 8], 0xffffffff ; ret
0x00000000004823cd : mov dword ptr [rax], 0x16 ; mov eax, edx ; ret
0x000000000042a622 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x0000000000439c9a : mov dword ptr [rax], 0xc ; mov rax, rsi ; ret
0x0000000000402999 : mov dword ptr [rax], ebx ; nop ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000404294 : mov dword ptr [rax], ecx ; jmp 0x404266
0x00000000004a0f2d : mov dword ptr [rax], edi ; pop rbx ; ret
0x00000000004a0e7d : mov dword ptr [rax], edx ; add rsp, 8 ; ret
0x000000000040280a : mov dword ptr [rax], edx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x00000000004367a2 : mov dword ptr [rax], edx ; mov rax, rdx ; add rsp, 8 ; ret
0x000000000040199e : mov dword ptr [rax], edx ; nop ; leave ; ret
0x0000000000401d22 : mov dword ptr [rax], edx ; nop ; pop rbp ; ret
0x00000000004a0f21 : mov dword ptr [rax], edx ; pop rbx ; ret
0x0000000000419722 : mov dword ptr [rax], edx ; ret
0x000000000048de8b : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x00000000004046d9 : mov dword ptr [rax], esi ; mov rax, qword ptr [rbx - 8] ; nop ; pop rbx ; ret
0x00000000004046a9 : mov dword ptr [rax], esi ; xor eax, eax ; pop rbx ; ret
0x00000000004987a1 : mov dword ptr [rbp - 0x100], ebx ; call r10
0x0000000000401814 : mov dword ptr [rbp - 0x10], esi ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402e79 : mov dword ptr [rbp - 0x10], esi ; nop ; pop rbp ; ret
0x00000000004a39b9 : mov dword ptr [rbp - 0x40], edi ; call 0x40048d
0x000000000047ee14 : mov dword ptr [rbp - 0x4e8], eax ; call 0x43b838
0x000000000047ee13 : mov dword ptr [rbp - 0x4e8], r8d ; call 0x43b839
0x000000000047ed99 : mov dword ptr [rbp - 0x528], eax ; call 0x43b838
0x000000000047ed98 : mov dword ptr [rbp - 0x528], r8d ; call 0x43b839
0x000000000049d0ef : mov dword ptr [rbp - 0x78], eax ; mov eax, 0x15 ; syscall
0x000000000047b562 : mov dword ptr [rbp - 0x8e0], edx ; call 0x467fd8
0x0000000000499141 : mov dword ptr [rbp - 0xe0], ebx ; call r10
0x0000000000402e75 : mov dword ptr [rbp - 8], edi ; mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x0000000000401de9 : mov dword ptr [rbp - 8], edi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402b91 : mov dword ptr [rbp - 8], edi ; nop ; pop rbp ; ret
0x0000000000401d74 : mov dword ptr [rbp - 8], edi ; pop rbp ; ret
0x000000000040a06d : mov dword ptr [rbp], eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000040a138 : mov dword ptr [rbp], eax ; je 0x40a177 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004086b9 : mov dword ptr [rbp], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000475392 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x000000000042ea67 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x000000000049dd9e : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000042ee4f : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x000000000049ba8e : mov dword ptr [rbx + 0x10], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a1c33 : mov dword ptr [rbx + 0x18], 0 ; jmp 0x4a1c07
0x000000000049dcd3 : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000004a44c5 : mov dword ptr [rbx + 0x18], eax ; pop rbx ; ret
0x0000000000410796 : mov dword ptr [rbx + 0x18], edx ; pop rbx ; ret
0x00000000004a4599 : mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x000000000040dc8c : mov dword ptr [rbx + 0x38], edx ; pop rbx ; ret
0x000000000047793d : mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x0000000000432b0d : mov dword ptr [rbx + 0x40], esp ; mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040da7b : mov dword ptr [rbx + 0x48], ebp ; pop rbx ; pop rbp ; ret
0x00000000004325f1 : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000410362 : mov dword ptr [rbx + 0x58], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000048dd4a : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000043428d : mov dword ptr [rbx + 0x60], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000430622 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000048cb64 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000048da11 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004753a7 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000403fbb : mov dword ptr [rbx - 0x18], eax ; lea rax, [rbx - 0x80] ; pop rbx ; ret
0x00000000004ae69c : mov dword ptr [rbx - 5], ebx ; call rsi
0x00000000004a16f3 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000432a9c : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004099a9 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000432b10 : mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000405365 : mov dword ptr [rbx], eax ; pop rbx ; ret
0x000000000042e965 : mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048db1b : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x00000000004a504d : mov dword ptr [rbx], esp ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000042bc01 : mov dword ptr [rcx + 0x130], edx ; ret
0x000000000041c04e : mov dword ptr [rcx + rax*2], 0x72f2a30f ; ret 0xfe83
0x000000000040dc89 : mov dword ptr [rcx + rsi*8], eax ; mov dword ptr [rbx + 0x38], edx ; pop rbx ; ret
0x000000000046da15 : mov dword ptr [rcx - 0x7d], 0x940f07fc ; ret 0x1f0f
0x00000000004545a7 : mov dword ptr [rcx - 2], ecx ; ret
0x0000000000454592 : mov dword ptr [rcx - 4], ecx ; ret
0x0000000000454581 : mov dword ptr [rcx - 8], ecx ; ret
0x0000000000401437 : mov dword ptr [rcx], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046557a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000407fa0 : mov dword ptr [rdi + 0x10], 0 ; ret
0x0000000000407f90 : mov dword ptr [rdi + 0x10], 0xffffffff ; ret
0x00000000004351d4 : mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x000000000046093d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x11] ; ret
0x000000000046097b : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000004609fd : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x17] ; ret
0x00000000004602eb : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000046036d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000004602ad : mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000004603b0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000004603d0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000460391 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000040a531 : mov dword ptr [rdi + 0x10], esi ; ret
0x0000000000460a63 : mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1a] ; ret
0x00000000004603b3 : mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000004324d3 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000460a45 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x19] ; ret
0x0000000000460a83 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1b] ; ret
0x0000000000460395 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000004351d1 : mov dword ptr [rdi + 0x24], ebp ; mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x0000000000404726 : mov dword ptr [rdi + 0x28], edx ; add rsp, 8 ; ret
0x0000000000497745 : mov dword ptr [rdi + 0x300], eax ; ret
0x0000000000497717 : mov dword ptr [rdi + 0x308], eax ; ret
0x0000000000432503 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000419761 : mov dword ptr [rdi + 0x98], esi ; ret
0x00000000004609bd : mov dword ptr [rdi + 0xe], ecx ; lea rax, [rdi + 0x15] ; ret
0x000000000046030d : mov dword ptr [rdi + 0xe], ecx ; ret
0x000000000046095b : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x00000000004609dd : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x16] ; ret
0x00000000004602cb : mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000451725 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000451568 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000451808 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x00000000004516b5 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004514f8 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000460827 : mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x0000000000451645 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000451488 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004601f7 : mov dword ptr [rdi + 3], edx ; ret
0x0000000000460809 : mov dword ptr [rdi + 4], edx ; lea rax, [rdi + 5] ; ret
0x0000000000451418 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004601e9 : mov dword ptr [rdi + 4], edx ; ret
0x00000000004608bb : mov dword ptr [rdi + 5], edx ; lea rax, [rdi + 0xc] ; ret
0x00000000004513a8 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000046025b : mov dword ptr [rdi + 5], edx ; ret
0x00000000004608db : mov dword ptr [rdi + 6], edx ; lea rax, [rdi + 0xd] ; ret
0x0000000000451338 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000046026b : mov dword ptr [rdi + 6], edx ; ret
0x0000000000460879 : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x00000000004608fb : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xe] ; ret
0x00000000004512c8 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000460239 : mov dword ptr [rdi + 7], edx ; ret
0x00000000004a076e : mov dword ptr [rdi + 8], eax ; mov eax, 2 ; ret
0x000000000040c1dc : mov dword ptr [rdi + 8], eax ; mov qword ptr [rsi + 8], rdx ; ret
0x00000000004324d7 : mov dword ptr [rdi + 8], eax ; ret
0x000000000049ef84 : mov dword ptr [rdi + 8], ecx ; ret
0x0000000000460899 : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x000000000046085b : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 9] ; ret
0x00000000004a0424 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x000000000046022b : mov dword ptr [rdi + 8], edx ; ret
0x000000000040a544 : mov dword ptr [rdi + 8], esi ; mov byte ptr [rax + rsi], 0 ; ret
0x000000000040a4f1 : mov dword ptr [rdi + 8], esi ; ret
0x0000000000463d3b : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], cx ; ret
0x0000000000462fd5 : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], si ; ret
0x0000000000463d33 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000463eb5 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x0000000000462fc5 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x0000000000463d2b : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rcx ; ret
0x0000000000462fb7 : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rsi ; ret
0x000000000041970c : mov dword ptr [rdi + rsi*8], edx ; ret
0x000000000044b1d5 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000044b213 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000049eeef : mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000044b55c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000450d78 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000044b73c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000450cf8 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000044b92c : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000450c78 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000044bafd : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000450be9 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000044bcfd : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000450b59 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000044befd : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000450ac9 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000044b8dd : mov dword ptr [rdi - 2], ecx ; ret
0x000000000044b6f5 : mov dword ptr [rdi - 2], edx ; ret
0x000000000044b8d9 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x000000000044bcb9 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000044b38f : mov dword ptr [rdi - 4], edx ; ret
0x000000000044bcb6 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000044beb6 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000044c0b6 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000044b1d9 : mov dword ptr [rdi - 8], ecx ; ret
0x000000000044b217 : mov dword ptr [rdi - 8], edx ; ret
0x000000000044b38c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x000000000044b488 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000044b3d4 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000450df8 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000407553 : mov dword ptr [rdi], eax ; mov qword ptr [rsi], rdx ; ret
0x00000000004054bc : mov dword ptr [rdi], eax ; ret
0x000000000049ee74 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x000000000049ef7e : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000484b4a : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004607f5 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x0000000000460847 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 8] ; ret
0x00000000004607d4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x00000000004601b4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000460825 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x00000000004601f5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x0000000000460877 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x0000000000460237 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000460897 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x0000000000460247 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000462d07 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000460258 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000460268 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000460278 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000004601e6 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000460228 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000462d13 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x00000000004512cc : mov dword ptr [rdi], ecx ; ret
0x0000000000463eaf : mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x00000000004607c4 : mov dword ptr [rdi], edx ; lea rax, [rdi + 1] ; ret
0x00000000004607e2 : mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x0000000000460834 : mov dword ptr [rdi], edx ; lea rax, [rdi + 7] ; ret
0x00000000004073bb : mov dword ptr [rdi], edx ; ret
0x0000000000407fc8 : mov dword ptr [rdi], esi ; mov byte ptr [rdi + rsi + 0x18], 0 ; ret
0x000000000045458f : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000004a05f6 : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000045457e : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x00000000004545a3 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x0000000000407164 : mov dword ptr [rdi], esi ; ret
0x0000000000449df2 : mov dword ptr [rdi], esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x000000000042eae5 : mov dword ptr [rdx + 0x130], edi ; pop rbx ; ret
0x000000000040dfaf : mov dword ptr [rdx + 0x18], eax ; mov eax, 1 ; ret
0x000000000040d83e : mov dword ptr [rdx + 0x18], edx ; ret
0x000000000040d95f : mov dword ptr [rdx + 0x48], edx ; mov rax, rdx ; ret
0x000000000045fd47 : mov dword ptr [rdx + 3], eax ; lea rax, [rdx + 6] ; ret
0x000000000045e577 : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000045fd29 : mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x000000000045e569 : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000045fddb : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 0xc] ; ret
0x000000000045fd59 : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 8] ; ret
0x000000000045e589 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000045fdfb : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 0xd] ; ret
0x000000000045fd79 : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 9] ; ret
0x000000000045e599 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000045fd99 : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xa] ; ret
0x000000000045fe1b : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xe] ; ret
0x000000000045e5a9 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000004877a0 : mov dword ptr [rdx + 8], eax ; jmp 0x487774
0x000000000045fdb9 : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xb] ; ret
0x000000000045fcab : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xf] ; ret
0x000000000040d7f8 : mov dword ptr [rdx + 8], eax ; mov rax, r10 ; ret
0x000000000045e4fb : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000434400 : mov dword ptr [rdx + 8], eax ; xor eax, eax ; ret
0x000000000040d8af : mov dword ptr [rdx], 5 ; mov rax, rdx ; ret
0x000000000045fcd4 : mov dword ptr [rdx], eax ; lea rax, [rdx + 1] ; ret
0x000000000045fd02 : mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x000000000045fc54 : mov dword ptr [rdx], eax ; lea rax, [rdx + 7] ; ret
0x000000000046560a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000004a05f8 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000004a0755 : mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x00000000004658ba : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x000000000045e4a4 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000004a0f0d : mov dword ptr [rdx], eax ; pop rbx ; ret
0x00000000004033c4 : mov dword ptr [rdx], eax ; ret
0x000000000043473b : mov dword ptr [rdx], ebp ; add byte ptr [rcx], al ; ret
0x00000000004a751f : mov dword ptr [rip + 0x235b8b], ebx ; jne 0x4a7511 ; pop rbx ; ret
0x00000000004a0a58 : mov dword ptr [rip + 0x23c9ca], eax ; ret
0x000000000049b365 : mov dword ptr [rip + 0x242205], eax ; ret
0x0000000000477768 : mov dword ptr [rip + 0x26436a], edx ; je 0x477781 ; ret
0x000000000046a046 : mov dword ptr [rip + 0x26fa6c], edx ; pop rbx ; ret
0x000000000043b816 : mov dword ptr [rip + 0x29f064], eax ; ret
0x000000000043573c : mov dword ptr [rip + 0x2a513e], eax ; ret
0x0000000000435237 : mov dword ptr [rip + 0x2a55d3], eax ; ret
0x000000000043524e : mov dword ptr [rip + 0x2a55d8], eax ; ret
0x000000000043520f : mov dword ptr [rip + 0x2a55f3], eax ; ret
0x00000000004351ef : mov dword ptr [rip + 0x2a560b], eax ; ret
0x00000000004350e5 : mov dword ptr [rip + 0x2a577d], eax ; ret
0x00000000004350d5 : mov dword ptr [rip + 0x2a5785], eax ; ret
0x00000000004350c3 : mov dword ptr [rip + 0x2a5787], edx ; ret
0x0000000000435085 : mov dword ptr [rip + 0x2a578d], eax ; ret
0x0000000000435075 : mov dword ptr [rip + 0x2a57a5], eax ; ret
0x0000000000435264 : mov dword ptr [rip + 0x2a7eea], eax ; ret
0x000000000041cac3 : mov dword ptr [rsi + 0x10], esi ; syscall
0x000000000042e163 : mov dword ptr [rsi + 0x28], ecx ; mov byte ptr [rax], dil ; mov eax, r10d ; ret
0x000000000040c1e0 : mov dword ptr [rsi + 8], edx ; ret
0x0000000000462d16 : mov dword ptr [rsi - 2], ecx ; ret
0x0000000000462d09 : mov dword ptr [rsi - 4], ecx ; ret
0x0000000000494931 : mov dword ptr [rsi], 0xffffffff ; xor eax, eax ; ret
0x000000000041974e : mov dword ptr [rsi], eax ; mov rax, qword ptr [rdi + 0x98] ; ret
0x00000000004055c2 : mov dword ptr [rsi], eax ; ret
0x000000000049a819 : mov dword ptr [rsi], edi ; mov rax, rcx ; ret
0x0000000000407556 : mov dword ptr [rsi], edx ; ret
0x00000000004389da : mov dword ptr [rsp + 0x10], ebx ; mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000438a97 : mov dword ptr [rsp + 0x10], edx ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000046ddac : mov dword ptr [rsp + 0x50], eax ; call 0x46a086
0x00000000004389df : mov dword ptr [rsp + 8], eax ; call rcx
0x000000000042484b : mov dword ptr [rsp + 8], ecx ; call 0x421356
0x000000000042d0ee : mov dword ptr [rsp + 8], ecx ; mov rdi, r15 ; call rax
0x0000000000438ff4 : mov dword ptr [rsp + 8], edx ; call 0x435296
0x0000000000438ff3 : mov dword ptr [rsp + 8], r10d ; call 0x435297
0x00000000004a5ca3 : mov dword ptr [rsp], eax ; mov rsi, r12 ; mov edi, ebp ; call rax
0x00000000004a1be3 : mov dword ptr [rsp], ecx ; call 0x43e645
0x000000000042f342 : mov dword ptr [rsp], ecx ; mov rdi, rbx ; call rax
0x0000000000432655 : mov dword ptr [rsp], edi ; call 0x42e8e5
0x00000000004823cc : mov dword ptr fs:[rax], 0x16 ; mov eax, edx ; ret
0x000000000042a621 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x0000000000491a0c : mov dword ptr fs:[rax], edx ; xor eax, eax ; ret
0x0000000000465579 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000465609 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000462fc4 : mov dword ptr ss:[rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000044b6f0 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000004601a0 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000402abc : mov eax, 0 ; leave ; ret
0x00000000004641fb : mov eax, 0x10 ; pop rbx ; ret
0x0000000000491749 : mov eax, 0x101 ; syscall
0x00000000004916c2 : mov eax, 0x106 ; syscall
0x00000000004663b7 : mov eax, 0x12e ; xor edi, edi ; syscall
0x0000000000499fe9 : mov eax, 0x14 ; syscall
0x0000000000468bb4 : mov eax, 0x15 ; syscall
0x000000000043f4f0 : mov eax, 0x16 ; ret
0x000000000046655d : mov eax, 0x17 ; syscall
0x0000000000465560 : mov eax, 0x18 ; syscall
0x0000000000467de3 : mov eax, 0x19 ; syscall
0x0000000000466740 : mov eax, 0x1c ; syscall
0x0000000000464209 : mov eax, 0x20 ; pop rbx ; ret
0x00000000004a4660 : mov eax, 0x26 ; syscall
0x00000000004a13d0 : mov eax, 0x27 ; syscall
0x0000000000467fa0 : mov eax, 0x29 ; syscall
0x0000000000467e4a : mov eax, 0x2a ; syscall
0x0000000000467ef3 : mov eax, 0x2c ; syscall
0x0000000000464202 : mov eax, 0x30 ; pop rbx ; ret
0x00000000004915f0 : mov eax, 0x3f ; syscall
0x0000000000464217 : mov eax, 0x40 ; pop rbx ; ret
0x00000000004c007b : mov eax, 0x45155e93 ; ret 0x591c
0x0000000000465a57 : mov eax, 0x48 ; syscall
0x0000000000465d3b : mov eax, 0x4f ; syscall
0x00000000004c5944 : mov eax, 0x58000013 ; out dx, al ; call qword ptr [rcx]
0x0000000000474768 : mov eax, 0x5b000000 ; pop r12 ; ret
0x0000000000400b89 : mov eax, 0x5d01002d ; ret
0x0000000000464210 : mov eax, 0x60 ; pop rbx ; ret
0x0000000000467e10 : mov eax, 0x63 ; syscall
0x0000000000491620 : mov eax, 0x66 ; syscall
0x0000000000491640 : mov eax, 0x68 ; syscall
0x0000000000491630 : mov eax, 0x6b ; syscall
0x0000000000491650 : mov eax, 0x6c ; syscall
0x0000000000404921 : mov eax, 0x6da0f8 ; mov rax, qword ptr [rax] ; ret
0x0000000000404971 : mov eax, 0x6da100 ; mov rax, qword ptr [rax] ; ret
0x0000000000407351 : mov eax, 0x6dc4c0 ; ret
0x00000000004d2844 : mov eax, 0x780000e2 ; sar ebx, 1 ; jmp qword ptr [rax]
0x00000000004cfd95 : mov eax, 0x7fc80000 ; stc ; call qword ptr [rcx]
0x00000000004641ed : mov eax, 0x80 ; pop rbx ; ret
0x00000000004cfdf5 : mov eax, 0x80180000 ; stc ; jmp qword ptr [rcx]
0x00000000004a5aaf : mov eax, 0x89000003 ; fmul dword ptr [rbx + rcx*4 + 0x34] ; ret 0xf41
0x0000000000494c20 : mov eax, 0x8948fff6 ; ret
0x00000000004a2cc4 : mov eax, 0x89fd8945 ; ret 0xe283
0x000000000049223e : mov eax, 0x9480002 ; ret 0x850f
0x000000000041cabd : mov eax, 0x9e ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x0000000000466710 : mov eax, 0xa ; syscall
0x00000000004666e0 : mov eax, 0xb ; syscall
0x00000000004d0244 : mov eax, 0xb80000bc ; pushfq ; stc ; jmp qword ptr [rax]
0x0000000000428ea2 : mov eax, 0xba ; syscall
0x0000000000490ec0 : mov eax, 0xc9 ; syscall
0x0000000000468025 : mov eax, 0xca ; syscall
0x00000000004c8b44 : mov eax, 0xd8000045 ; and dh, ah ; call qword ptr [rax]
0x0000000000428ed0 : mov eax, 0xe ; syscall
0x00000000004652d5 : mov eax, 0xe5 ; syscall
0x000000000040216f : mov eax, 0xe8c78948 ; ret 0xfff6
0x0000000000428eae : mov eax, 0xea ; syscall
0x000000000040ae10 : mov eax, 0xf ; ret
0x00000000004182c2 : mov eax, 0xf ; syscall
0x0000000000474f2c : mov eax, 0xff514ee8 ; dec dword ptr [rcx + rcx*4 - 9] ; call rbx
0x0000000000417310 : mov eax, 0xfffffffd ; ret
0x000000000042dde1 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042db67 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000042ee63 : mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000407ac0 : mov eax, 0xffffffff ; ret
0x0000000000491e81 : mov eax, 1 ; leave ; ret
0x00000000004a05d5 : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x00000000004331d2 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a28fd : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000049bde0 : mov eax, 1 ; pop rbx ; ret
0x000000000040dca9 : mov eax, 1 ; ret
0x000000000046591a : mov eax, 1 ; syscall
0x000000000041a5e0 : mov eax, 2 ; ret
0x0000000000490971 : mov eax, 3 ; ret
0x0000000000465bea : mov eax, 3 ; syscall
0x000000000041a5cf : mov eax, 4 ; jne 0x41a5f8 ; ret
0x0000000000490981 : mov eax, 4 ; ret
0x00000000004655ee : mov eax, 4 ; syscall
0x0000000000490991 : mov eax, 5 ; ret
0x000000000046563c : mov eax, 5 ; syscall
0x00000000004068dd : mov eax, 6 ; pop rbx ; pop rbp ; ret
0x00000000004909a1 : mov eax, 6 ; ret
0x000000000049166e : mov eax, 6 ; syscall
0x00000000004909b1 : mov eax, 7 ; ret
0x00000000004641f4 : mov eax, 8 ; pop rbx ; ret
0x000000000041a5f6 : mov eax, 8 ; ret
0x00000000004659e0 : mov eax, 8 ; syscall
0x000000000046663c : mov eax, 9 ; syscall
0x000000000042d681 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000040688c : mov eax, dword ptr [rax + 0x40] ; add rsp, 0x28 ; pop rbx ; pop rbp ; jmp rax
0x000000000048dfa4 : mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000004333b8 : mov eax, dword ptr [rax + 0x68] ; test rax, rax ; jne 0x4333b9 ; ret
0x00000000004047a9 : mov eax, dword ptr [rax + 8] ; add rsp, 8 ; ret
0x000000000049db91 : mov eax, dword ptr [rax + 8] ; ret
0x0000000000475da0 : mov eax, dword ptr [rax + rbp*8] ; test rax, rax ; je 0x475db2 ; call rax
0x000000000048814a : mov eax, dword ptr [rax + rcx*8] ; mov ecx, 1 ; jmp rax
0x000000000040daeb : mov eax, dword ptr [rax + rcx*8] ; ret
0x00000000004777af : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000047cd1d : mov eax, dword ptr [rax + rdi*8] ; jmp rax
0x0000000000407444 : mov eax, dword ptr [rax - 0x10] ; ret
0x0000000000407414 : mov eax, dword ptr [rax - 0x18] ; ret
0x000000000040d4db : mov eax, dword ptr [rax - 0x70] ; add rsp, 8 ; ret
0x0000000000402837 : mov eax, dword ptr [rax] ; cmp edx, eax ; sete al ; leave ; ret
0x00000000004033d9 : mov eax, dword ptr [rax] ; lea rax, [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x0000000000402f14 : mov eax, dword ptr [rax] ; leave ; ret
0x00000000004033c1 : mov eax, dword ptr [rax] ; mov qword ptr [r10], r8 ; ret
0x000000000040284d : mov eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000404928 : mov eax, dword ptr [rax] ; ret
0x0000000000401818 : mov eax, dword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004027b1 : mov eax, dword ptr [rbp - 0x20] ; leave ; ret
0x000000000040309a : mov eax, dword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x00000000004986e0 : mov eax, dword ptr [rbp - 0xb8] ; add rax, r11 ; call rax
0x0000000000402b61 : mov eax, dword ptr [rbp - 8] ; leave ; ret
0x0000000000402c31 : mov eax, dword ptr [rbp - 8] ; mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x000000000040199a : mov eax, dword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x0000000000401d1e : mov eax, dword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x0000000000402849 : mov eax, dword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x0000000000401ded : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000498501 : mov eax, dword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000043263d : mov eax, dword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004a0f29 : mov eax, dword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000432d29 : mov eax, dword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x00000000004046dc : mov eax, dword ptr [rbx - 8] ; nop ; pop rbx ; ret
0x000000000046dda9 : mov eax, dword ptr [rbx] ; mov qword ptr [rsp + 0x50], rax ; call 0x46a089
0x0000000000408674 : mov eax, dword ptr [rbx] ; pop rbx ; add rax, qword ptr [rax - 0x18] ; ret
0x00000000004085b4 : mov eax, dword ptr [rbx] ; pop rbx ; ret
0x000000000045e574 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000045e586 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000045e596 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000045e5a6 : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000045e5b6 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000045918a : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000045aa62 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000045fd00 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x000000000045e540 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000045fc51 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x000000000045e4a1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000045fcd1 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x000000000045e521 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000498ce6 : mov eax, dword ptr [rdi + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000040ae0a : mov eax, dword ptr [rdi + 0x10] ; ret
0x000000000048ddfe : mov eax, dword ptr [rdi + 0x10] ; sar rdx, 2 ; sub eax, edx ; ret
0x0000000000407f70 : mov eax, dword ptr [rdi + 0x10] ; shr eax, 0x1f ; ret
0x0000000000434370 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000434398 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000407f80 : mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; setg al ; ret
0x00000000004a815d : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x4a8174 ; call rax
0x000000000048dfa1 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000004346c1 : mov eax, dword ptr [rdi + 0x68] ; ret
0x00000000004196e1 : mov eax, dword ptr [rdi + 0x90] ; ret
0x0000000000419731 : mov eax, dword ptr [rdi + 0x98] ; ret
0x0000000000419771 : mov eax, dword ptr [rdi + 0xa0] ; ret
0x00000000004197d1 : mov eax, dword ptr [rdi + 0xa8] ; ret
0x00000000004197c1 : mov eax, dword ptr [rdi + 0xb0] ; ret
0x0000000000419781 : mov eax, dword ptr [rdi + 0xb8] ; ret
0x000000000040ad31 : mov eax, dword ptr [rdi + 8] ; add rax, qword ptr [rdi] ; ret
0x0000000000406cb1 : mov eax, dword ptr [rdi + 8] ; ret
0x000000000047d25f : mov eax, dword ptr [rdi + rax*8] ; jmp rax
0x0000000000404671 : mov eax, dword ptr [rdi - 8] ; ret
0x00000000004093a0 : mov eax, dword ptr [rdi - 8] ; test eax, eax ; jg 0x409366 ; jmp 0x409374
0x0000000000407191 : mov eax, dword ptr [rdi] ; add rax, qword ptr [rax - 0x18] ; ret
0x0000000000407461 : mov eax, dword ptr [rdi] ; add rax, rsi ; ret
0x00000000004a3de1 : mov eax, dword ptr [rdi] ; cmp rax, rsi ; je 0x4a3df8 ; ret
0x0000000000434365 : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000407441 : mov eax, dword ptr [rdi] ; mov rax, qword ptr [rax - 0x10] ; ret
0x0000000000407411 : mov eax, dword ptr [rdi] ; mov rax, qword ptr [rax - 0x18] ; ret
0x0000000000435261 : mov eax, dword ptr [rdi] ; nop ; mov dword ptr [rip + 0x2a7eea], eax ; ret
0x0000000000407151 : mov eax, dword ptr [rdi] ; ret
0x0000000000407171 : mov eax, dword ptr [rdi] ; sub rax, 0x18 ; ret
0x000000000041ba35 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x41ba47 ; ret
0x000000000041ba50 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x41ba67 ; ret
0x000000000041bc80 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x41bc97 ; ret
0x000000000049a7cc : mov eax, dword ptr [rdx + 4] ; ret
0x0000000000464727 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x464719 ; ret
0x0000000000456d96 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000434351 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x434350 ; ret
0x00000000004a15d0 : mov eax, dword ptr [rip + 0x23c4aa] ; ret
0x000000000049b4cb : mov eax, dword ptr [rip + 0x242097] ; mov qword ptr [rsi], rax ; ret
0x000000000049b45a : mov eax, dword ptr [rip + 0x242110] ; ret
0x0000000000474611 : mov eax, dword ptr [rip + 0x268c21] ; ret
0x000000000046c111 : mov eax, dword ptr [rip + 0x2719d1] ; ret
0x00000000004346a1 : mov eax, dword ptr [rip + 0x2a5a99] ; ret
0x0000000000406821 : mov eax, dword ptr [rip + 0x2d5c79] ; ret
0x000000000041a622 : mov eax, dword ptr [rsi + 0x10] ; ret
0x00000000004174b1 : mov eax, dword ptr [rsi + 0xa8] ; ret
0x0000000000417484 : mov eax, dword ptr [rsi + 0xb0] ; ret
0x00000000004174a1 : mov eax, dword ptr [rsi + 0xb8] ; ret
0x000000000041a641 : mov eax, dword ptr [rsi + 8] ; ret
0x000000000048810f : mov eax, dword ptr [rsi + rax*8] ; jmp rax
0x000000000047d2a9 : mov eax, dword ptr [rsi + rax*8] ; mov esi, 1 ; jmp rax
0x000000000047d909 : mov eax, dword ptr [rsi + rax*8] ; xor esi, esi ; jmp rax
0x000000000048d00f : mov eax, dword ptr [rsi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040a0d1 : mov eax, dword ptr [rsi] ; cmp qword ptr [rdi], rax ; sete al ; ret
0x00000000004197a6 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x0000000000466926 : mov eax, dword ptr [rsp + 0x10] ; call rax
0x000000000041c443 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x000000000046fd1c : mov eax, dword ptr [rsp + 0x20] ; call rax
0x0000000000465c2a : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000042923d : mov eax, dword ptr [rsp + 8] ; call rax
0x00000000004a2d6f : mov eax, dword ptr [rsp] ; add rax, qword ptr [rdx + 8] ; call rax
0x00000000004a6aaa : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000040350a : mov eax, dword ptr [rsp] ; jne 0x40355a ; add rsp, 0x18 ; ret
0x000000000049bdf8 : mov eax, dword ptr fs:[rax] ; ret
0x0000000000436910 : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000048bcc3 : mov eax, eax ; jmp 0x48bc95
0x0000000000465879 : mov eax, eax ; mov rsi, rbp ; mov edi, ebx ; xor eax, eax ; syscall
0x000000000043e6ef : mov eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000464232 : mov eax, eax ; ret
0x0000000000490d34 : mov eax, eax ; shr rax, 2 ; vzeroupper ; ret
0x0000000000465042 : mov eax, eax ; syscall
0x000000000048fb71 : mov eax, eax ; vzeroupper ; ret
0x0000000000409148 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000467304 : mov eax, ebp ; pop rbx ; pop rbp ; jmp rax
0x000000000040886a : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040672e : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040862a : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000042e77d : mov eax, ebp ; syscall
0x00000000004a0563 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000405635 : mov eax, ebx ; jne 0x40567c ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004a4557 : mov eax, ebx ; jne 0x4a4575 ; add rsp, 0x40 ; pop rbx ; ret
0x00000000004a463e : mov eax, ebx ; jne 0x4a465d ; add rsp, 0x50 ; pop rbx ; ret
0x000000000040b238 : mov eax, ebx ; mov byte ptr [rdx + rsi], 0 ; pop rbx ; ret
0x000000000040da78 : mov eax, ebx ; mov qword ptr [r11 + 0x48], rbp ; pop rbx ; pop rbp ; ret
0x0000000000407782 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040d0bc : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004043ac : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000405292 : mov eax, ebx ; pop rbx ; ret
0x000000000040d3d2 : mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000004a0427 : mov eax, ecx ; adc eax, eax ; ret
0x000000000040c55e : mov eax, ecx ; cmp rax, -1 ; jne 0x40c559 ; ret
0x00000000004080a4 : mov eax, ecx ; pop rbp ; pop r12 ; ret
0x0000000000408ed8 : mov eax, ecx ; pop rbx ; pop rbp ; ret
0x0000000000408071 : mov eax, ecx ; ret
0x0000000000428e9b : mov eax, ecx ; syscall
0x00000000004073b4 : mov eax, edi ; add rdx, qword ptr [rdx - 0x18] ; mov qword ptr [rdi], rdx ; ret
0x000000000042e963 : mov eax, edi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004073c4 : mov eax, edi ; mov qword ptr [rdi], rdx ; ret
0x0000000000436ba5 : mov eax, edi ; pop rbp ; pop r12 ; ret
0x00000000004075a1 : mov eax, edi ; ret
0x0000000000468380 : mov eax, edi ; ror ax, 8 ; ret
0x0000000000404918 : mov eax, edi ; xchg qword ptr [rdx], rax ; ret
0x0000000000406811 : mov eax, edi ; xchg qword ptr [rip + 0x2d5c86], rax ; ret
0x00000000004045af : mov eax, edx ; add rsp, 8 ; ret
0x0000000000407bda : mov eax, edx ; cmp byte ptr [rcx + rax], sil ; je 0x407bd9 ; ret
0x000000000040c91a : mov eax, edx ; cmp byte ptr [rcx + rax], sil ; je 0x40c919 ; ret
0x000000000040781c : mov eax, edx ; cmp rax, -1 ; jne 0x407819 ; ret
0x000000000042c4a0 : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000048237e : mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000042c549 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000042bb51 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000404515 : mov eax, edx ; pop rbx ; ret
0x0000000000407ad1 : mov eax, edx ; ret
0x0000000000401c5a : mov eax, edx ; sar rax, 2 ; pop rbp ; ret
0x000000000041c53a : mov eax, edx ; syscall
0x000000000040a6c5 : mov eax, esi ; cmp rsi, rcx ; ja 0x40a6d6 ; ret
0x00000000004087d4 : mov eax, esi ; jne 0x4087e5 ; ret
0x0000000000407161 : mov eax, esi ; mov qword ptr [rdi], rsi ; ret
0x000000000049e7d7 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000040d4fd : mov eax, esi ; movsxd rax, dword ptr [r9 + r8*4] ; add rax, r9 ; jmp rax
0x000000000042fc3a : mov eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000042bf64 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000439c6d : mov eax, esi ; pop rbx ; ret
0x000000000040d578 : mov eax, esi ; ret
0x0000000000465032 : mov eax, esi ; syscall
0x0000000000408a20 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000042e232 : mov eax, r10d ; pop rbx ; ret
0x000000000042e169 : mov eax, r10d ; ret
0x000000000042e77c : mov eax, r13d ; syscall
0x000000000048bcc2 : mov eax, r8d ; jmp 0x48bc96
0x0000000000465041 : mov eax, r8d ; syscall
0x00000000004822b4 : mov eax, r9d ; ret
0x000000000042e51e : mov eax, r9d ; syscall
0x00000000004a38b6 : mov ebp, 0x2366 ; jne 0x4a38c7 ; pop rbx ; ret
0x000000000047d1bf : mov ebp, 0x480025a3 ; mov eax, dword ptr [rax + rdi*8] ; jmp rax
0x00000000004c1f74 : mov ebp, 0x63b1101 ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x000000000046a22b : mov ebp, 0x8900272f ; ret 0xe083
0x00000000004a9564 : mov ebp, 0x8d49fff8 ; and byte ptr [rax - 0x7d], cl ; retf
0x00000000004d02c9 : mov ebp, 0x9db40000 ; stc ; jmp qword ptr [rdx]
0x00000000004ad535 : mov ebp, 0xbda1fff9 ; stc ; jmp qword ptr [rcx]
0x00000000004ad5fd : mov ebp, 0xbe50fff9 ; stc ; call rax
0x00000000004ae479 : mov ebp, 0xbf30fffa ; cli ; call rax
0x00000000004b85e4 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x00000000004bf53d : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x000000000048f338 : mov ebp, 0xf80148c0 ; ret
0x000000000048f5bc : mov ebp, 0xf80148c6 ; ret
0x00000000004c0ca6 : mov ebp, 0xfb67d10d ; ret
0x00000000004855fe : mov ebp, 0xfffff730 ; call rax
0x000000000047a0cc : mov ebp, 0xfffff758 ; call rax
0x00000000004885f9 : mov ebp, 0xfffffae8 ; add byte ptr [rcx - 0x77], al ; ret 0x1674
0x00000000004814d5 : mov ebp, 0xffffff40 ; call rax
0x000000000042e777 : mov ebp, 0xffffff7c ; mov eax, r13d ; syscall
0x0000000000419c03 : mov ebp, dword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004a0b4b : mov ebp, eax ; call 0x41ce44
0x000000000049e7dd : mov ebp, ecx ; nop ; jmp rdx
0x0000000000402b8e : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; nop ; pop rbp ; ret
0x0000000000401d71 : mov ebp, esp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000040cc5b : mov ebx, 0x10c48348 ; pop rbx ; ret
0x00000000004c1cc4 : mov ebx, 0x1b5c347e ; jmp 0x4c1c9c
0x0000000000450fb7 : mov ebx, 0x46f00ff2 ; retf
0x000000000044bb14 : mov ebx, 0x4e6f0ff3 ; retf
0x000000000044bb32 : mov ebx, 0x4f7f0ff3 ; retf
0x0000000000468084 : mov ebx, 0xafb8341 ; je 0x468093 ; ret
0x00000000004ad51d : mov ebx, 0xb925fff9 ; stc ; call rcx
0x00000000004ad5ed : mov ebx, 0xbc50fff9 ; stc ; call rax
0x00000000004ad52d : mov ebx, 0xbca1fff9 ; stc ; jmp qword ptr [rcx]
0x00000000004bf53b : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x0000000000400b50 : mov ebx, 0xe0ff006d ; nop dword ptr [rax] ; pop rbp ; ret
0x000000000044083b : mov ebx, 0xf480001 ; ret 0x66c3
0x0000000000430444 : mov ebx, 0xf48002a ; ret 0x8948
0x0000000000401dde : mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x00000000004a7521 : mov ebx, dword ptr [rbx + 0x23] ; add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x00000000004c22e4 : mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004771a6 : mov ebx, edi ; test rax, rax ; je 0x4771b6 ; call rax
0x00000000004914b0 : mov ebx, esi ; sub rsp, 8 ; syscall
0x000000000049bb4d : mov ebx, esp ; mov rsi, rbx ; syscall
0x0000000000428e96 : mov ecx, 0x27 ; mov eax, ecx ; syscall
0x000000000049176c : mov ecx, 0x48000000 ; add esp, 0x78 ; ret
0x00000000004c0179 : mov ecx, 0x5b92ac50 ; retf
0x00000000004c1c4e : mov ecx, 0x7ce1a201 ; pop rdx ; leave ; retf
0x00000000004cfea5 : mov ecx, 0x80f80000 ; stc ; jmp qword ptr [rcx]
0x00000000004cff79 : mov ecx, 0x82640000 ; stc ; call rdx
0x0000000000494b4a : mov ecx, 0x8348fff6 ; ret
0x00000000004ad4f1 : mov ecx, 0xba30fff9 ; stc ; jmp qword ptr [rax]
0x00000000004919d0 : mov ecx, 0xc ; mov eax, ecx ; syscall
0x000000000048814d : mov ecx, 1 ; jmp rax
0x00000000004071a7 : mov ecx, dword ptr [rcx - 0x18] ; cmp rcx, rsi ; jb 0x4071ba ; ret
0x000000000045458c : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000044993e : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x000000000048df7b : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x0000000000456d93 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000004c2104 : mov ecx, dword ptr [rsi + rdi*2 + 0xaaed8a9] ; jne 0x4c2139 ; retf 0x32dd
0x000000000044bcb3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000044beb3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000044c0b3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004601d0 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000460211 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000451723 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004516b3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000451643 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000451565 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004514f5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000451485 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000451415 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004513a5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000451335 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004512c5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000451805 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000004601b1 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000049dc87 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000049dc15 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x58 ; jmp qword ptr [rax]
0x000000000048e5b1 : mov ecx, eax ; jmp 0x48e57b
0x000000000046b40b : mov ecx, ebp ; call rbx
0x0000000000408998 : mov ecx, ecx ; xor eax, eax ; call 0x404c96
0x0000000000433150 : mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x0000000000462f92 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000043318a : mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000490335 : mov ecx, esi ; call rbx
0x00000000004c5744 : mov ecx, gs ; call qword ptr [rbx]
0x000000000048238d : mov edi, 0x100 ; call 0x43e647
0x0000000000418aac : mov edi, 0x148015b ; retf
0x000000000047b91a : mov edi, 0x440f48c0 ; ret 0xae9
0x0000000000400b0c : mov edi, 0x6dbbe8 ; jmp rax
0x00000000004ad585 : mov edi, 0xbf96fff9 ; stc ; jmp qword ptr [rsi]
0x00000000004ad549 : mov edi, 0xc041fff9 ; stc ; call rcx
0x00000000004ad60d : mov edi, 0xc080fff9 ; stc ; call qword ptr [rax]
0x00000000004a9b14 : mov edi, 0xe2fff57b ; jnp 0x4a9b17 ; jmp rdx
0x00000000004656c4 : mov edi, 0xffffff9c ; syscall
0x0000000000419436 : mov edi, 1 ; call r14
0x000000000041938c : mov edi, 1 ; call rax
0x000000000041a0fc : mov edi, 1 ; jmp rax
0x0000000000429cd4 : mov edi, dword ptr [rax + 0x20] ; call rdx
0x0000000000466d5c : mov edi, dword ptr [rbp - 0x58] ; mov r12d, r14d ; call r15
0x000000000042e776 : mov edi, dword ptr [rbp - 0x84] ; mov eax, r13d ; syscall
0x000000000047a0cb : mov edi, dword ptr [rbp - 0x8a8] ; call rax
0x00000000004855fd : mov edi, dword ptr [rbp - 0x8d0] ; call rax
0x00000000004814d4 : mov edi, dword ptr [rbp - 0xc0] ; call rax
0x0000000000419a81 : mov edi, dword ptr [rbp - 8] ; leave ; ret
0x0000000000466844 : mov edi, dword ptr [rbp] ; call r12
0x0000000000429239 : mov edi, dword ptr [rbp] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000046681e : mov edi, dword ptr [rbx] ; call r12
0x00000000004988cf : mov edi, dword ptr [rbx] ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000049b4a6 : mov edi, dword ptr [rdi + 8] ; test rdi, rdi ; jne 0x49b489 ; ret
0x0000000000410cd4 : mov edi, dword ptr [rdx] ; call 0x40d724
0x00000000004c0f66 : mov edi, dword ptr [rdx] ; ret
0x00000000004a442f : mov edi, dword ptr [rsp + 0x10] ; call 0x4a0e66
0x000000000041b35e : mov edi, dword ptr [rsp + 0x10] ; call r14
0x000000000041f6c4 : mov edi, dword ptr [rsp + 0x18] ; call 0x43c0f6
0x00000000004917ce : mov edi, dword ptr [rsp + 0x18] ; mov eax, 0x101 ; syscall
0x000000000049e6b4 : mov edi, dword ptr [rsp + 0x18] ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x000000000046dae5 : mov edi, dword ptr [rsp + 0x20] ; call r15
0x000000000046d9b0 : mov edi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000046e3c1 : mov edi, dword ptr [rsp + 0x30] ; call r14
0x000000000046e599 : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x000000000046e883 : mov edi, dword ptr [rsp + 0x38] ; call r12
0x000000000046eebb : mov edi, dword ptr [rsp + 0x38] ; call r14
0x0000000000471e7f : mov edi, dword ptr [rsp + 0x38] ; call r15
0x000000000046e0c9 : mov edi, dword ptr [rsp + 0x38] ; call rbx
0x000000000046ddd5 : mov edi, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000004702fa : mov edi, dword ptr [rsp + 0x40] ; call r15
0x0000000000472aa6 : mov edi, dword ptr [rsp + 0x40] ; call rbx
0x000000000046fd17 : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000465ad1 : mov edi, dword ptr [rsp + 0xc] ; mov eax, 0x48 ; syscall
0x000000000041c43e : mov edi, dword ptr [rsp + 0xc] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000432d5b : mov edi, dword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000466921 : mov edi, dword ptr [rsp + 8] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000432666 : mov edi, dword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000041a24c : mov edi, dword ptr [rsp] ; mov rdx, qword ptr [rbp] ; call r12
0x00000000004939ee : mov edi, eax ; call 0x40043c
0x000000000043f554 : mov edi, eax ; call rcx
0x0000000000428ea0 : mov edi, eax ; mov eax, 0xba ; syscall
0x000000000043da73 : mov edi, ebp ; call 0x439cb4
0x00000000004a5b4e : mov edi, ebp ; call qword ptr [r14]
0x00000000004a5c22 : mov edi, ebp ; call qword ptr [rax]
0x00000000004a5cfe : mov edi, ebp ; call qword ptr [rcx]
0x0000000000474ddc : mov edi, ebp ; call r12
0x000000000041b13c : mov edi, ebp ; call r14
0x000000000043e8d6 : mov edi, ebp ; call rax
0x00000000004901e1 : mov edi, ebp ; call rbx
0x000000000046663a : mov edi, ebp ; mov eax, 9 ; syscall
0x000000000042e51c : mov edi, ebp ; mov eax, r9d ; syscall
0x0000000000490332 : mov edi, ebp ; mov r9, r14 ; call rbx
0x00000000004292c9 : mov edi, ebp ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000046b70e : mov edi, ebx ; call r14
0x0000000000403f5b : mov edi, ebx ; call rax
0x000000000046659e : mov edi, ebx ; mov eax, 0x17 ; syscall
0x0000000000467e7e : mov edi, ebx ; mov eax, 0x2a ; syscall
0x0000000000467f35 : mov edi, ebx ; mov eax, 0x2c ; syscall
0x000000000046594e : mov edi, ebx ; mov eax, 1 ; syscall
0x0000000000465c0c : mov edi, ebx ; mov edx, eax ; mov eax, 3 ; syscall
0x00000000004326fd : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x000000000048ce8f : mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000046587e : mov edi, ebx ; xor eax, eax ; syscall
0x00000000004ad499 : mov edi, ecx ; inc dword ptr [rax + 0x76] ; stc ; jmp qword ptr [rax]
0x000000000048e308 : mov edi, edi ; call r12
0x000000000042d0f3 : mov edi, edi ; call rax
0x000000000046bceb : mov edi, edi ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x00000000004a08a1 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x4a0889 ; mov rax, rsi ; ret
0x0000000000465030 : mov edi, edx ; mov eax, esi ; syscall
0x000000000046503f : mov edi, edx ; mov eax, r8d ; syscall
0x0000000000474f33 : mov edi, esi ; call rbx
0x0000000000475211 : mov edi, esi ; call rdx
0x0000000000438ff1 : mov edi, esi ; mov dword ptr [rsp + 8], r10d ; call 0x435299
0x000000000041a154 : mov edi, esp ; call r15
0x000000000048e030 : mov edi, esp ; call rbx
0x0000000000465d39 : mov edi, esp ; mov eax, 0x4f ; syscall
0x00000000004a39b6 : mov edi, esp ; mov qword ptr [rbp - 0x40], rdi ; call 0x400490
0x0000000000433d54 : mov edi, esp ; xor edx, edx ; call 6
0x000000000042e51b : mov edi, r13d ; mov eax, r9d ; syscall
0x000000000042eae6 : mov edx, 0x130 ; pop rbx ; ret
0x0000000000470aea : mov edx, 0x180 ; call 0x41cdf7
0x0000000000470b0e : mov edx, 0x19f ; call 0x41cdf7
0x0000000000470b2d : mov edx, 0x1be ; call 0x41cdf7
0x0000000000450f37 : mov edx, 0x46f00ff2 ; retf 0xff3
0x000000000044bd14 : mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x000000000044bd32 : mov edx, 0x4f7f0ff3 ; retf 0x894c
0x00000000004903b3 : mov edx, 0x5e ; call 0x41cdf7
0x00000000004903d2 : mov edx, 0x7b ; call 0x41cdf7
0x00000000004cffdd : mov edx, 0x82f00000 ; stc ; call qword ptr [rdx]
0x00000000004cffc5 : mov edx, 0x82f80000 ; stc ; call qword ptr [rax]
0x00000000004d0015 : mov edx, 0x83480000 ; stc ; call qword ptr [rcx]
0x000000000047190e : mov edx, 0x89fffff3 ; retf 0xe283
0x00000000004ad515 : mov edx, 0xbaf0fff9 ; stc ; jmp rax
0x00000000004ad4f5 : mov edx, 0xbb20fff9 ; stc ; call qword ptr [rax]
0x00000000004a281c : mov edx, 0xe8000000 ; retf
0x000000000043f8f2 : mov edx, 0xf70029d8 ; ret 0
0x00000000004182c1 : mov edx, 0xfc0c7 ; add byte ptr [rax], al ; syscall
0x000000000046d787 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000049a74c : mov edx, 1 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000477a24 : mov edx, 8 ; mov eax, ecx ; syscall
0x00000000004074b4 : mov edx, dword ptr [rax - 0x18] ; lea rax, [rax + rdx - 1] ; ret
0x0000000000416835 : mov edx, dword ptr [rax] ; cmp byte ptr [rdx], 0x66 ; je 0x416849 ; xor eax, eax ; ret
0x0000000000402913 : mov edx, dword ptr [rbp - 0x10] ; mov qword ptr [rax + 8], rdx ; nop ; leave ; ret
0x0000000000402611 : mov edx, dword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000047520a : mov edx, dword ptr [rbp - 0x98] ; mov rdi, r14 ; call rdx
0x000000000041a250 : mov edx, dword ptr [rbp] ; call r12
0x00000000004a0f09 : mov edx, dword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x000000000045aa5f : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000045918d : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000004a0f1d : mov edx, dword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000040b035 : mov edx, dword ptr [rdi] ; lea rax, [rdx + rax - 1] ; ret
0x000000000041b139 : mov edx, dword ptr [rdi] ; mov rdi, r13 ; call r14
0x0000000000410cd1 : mov edx, dword ptr [rdx + 8] ; mov edi, dword ptr [rdx] ; call 0x40d727
0x00000000004601f2 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000004601e3 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000460233 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000460243 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000044b6f1 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000044bab0 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000044b341 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004607e0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x0000000000451790 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000460831 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x00000000004515d1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000004073c1 : mov edx, dword ptr [rsi] ; mov rax, rdi ; mov qword ptr [rdi], rdx ; ret
0x00000000004607c1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x00000000004601a1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000049e6b9 : mov edx, dword ptr [rsp + 0x10] ; call rdx
0x0000000000419389 : mov edx, dword ptr [rsp] ; mov edi, 1 ; call rax
0x0000000000411720 : mov edx, eax ; add rax, 1 ; jmp 0x4116fa
0x0000000000411918 : mov edx, eax ; add rax, 1 ; jmp 0x4118f2
0x0000000000411c88 : mov edx, eax ; add rax, 1 ; jmp 0x411c62
0x0000000000411d00 : mov edx, eax ; add rax, 1 ; jmp 0x411cda
0x0000000000411d78 : mov edx, eax ; add rax, 1 ; jmp 0x411d52
0x0000000000412050 : mov edx, eax ; add rax, 1 ; jmp 0x41202a
0x00000000004121b8 : mov edx, eax ; add rax, 1 ; jmp 0x412192
0x00000000004122e8 : mov edx, eax ; add rax, 1 ; jmp 0x4122c2
0x0000000000412360 : mov edx, eax ; add rax, 1 ; jmp 0x41233a
0x00000000004123d8 : mov edx, eax ; add rax, 1 ; jmp 0x4123b2
0x0000000000412450 : mov edx, eax ; add rax, 1 ; jmp 0x41242a
0x00000000004124c8 : mov edx, eax ; add rax, 1 ; jmp 0x4124a2
0x0000000000412540 : mov edx, eax ; add rax, 1 ; jmp 0x41251a
0x00000000004125b8 : mov edx, eax ; add rax, 1 ; jmp 0x412592
0x0000000000412630 : mov edx, eax ; add rax, 1 ; jmp 0x41260a
0x00000000004126b0 : mov edx, eax ; add rax, 1 ; jmp 0x41268a
0x0000000000412728 : mov edx, eax ; add rax, 1 ; jmp 0x412702
0x00000000004127a0 : mov edx, eax ; add rax, 1 ; jmp 0x41277a
0x0000000000412818 : mov edx, eax ; add rax, 1 ; jmp 0x4127f2
0x0000000000412890 : mov edx, eax ; add rax, 1 ; jmp 0x41286a
0x0000000000412908 : mov edx, eax ; add rax, 1 ; jmp 0x4128e2
0x0000000000412980 : mov edx, eax ; add rax, 1 ; jmp 0x41295a
0x0000000000412a78 : mov edx, eax ; add rax, 1 ; jmp 0x412a52
0x0000000000412bc8 : mov edx, eax ; add rax, 1 ; jmp 0x412ba2
0x0000000000412c40 : mov edx, eax ; add rax, 1 ; jmp 0x412c1a
0x0000000000412cb8 : mov edx, eax ; add rax, 1 ; jmp 0x412c92
0x0000000000412d30 : mov edx, eax ; add rax, 1 ; jmp 0x412d0a
0x0000000000412da8 : mov edx, eax ; add rax, 1 ; jmp 0x412d82
0x0000000000412e20 : mov edx, eax ; add rax, 1 ; jmp 0x412dfa
0x0000000000412e98 : mov edx, eax ; add rax, 1 ; jmp 0x412e72
0x0000000000413220 : mov edx, eax ; add rax, 1 ; jmp 0x4131fa
0x0000000000413298 : mov edx, eax ; add rax, 1 ; jmp 0x413272
0x00000000004134e0 : mov edx, eax ; add rax, 1 ; jmp 0x4134ba
0x0000000000413568 : mov edx, eax ; add rax, 1 ; jmp 0x413542
0x0000000000413b00 : mov edx, eax ; add rax, 1 ; jmp 0x413ada
0x0000000000414098 : mov edx, eax ; add rax, 1 ; jmp 0x414072
0x0000000000414108 : mov edx, eax ; add rax, 1 ; jmp 0x4140e2
0x0000000000414268 : mov edx, eax ; add rax, 1 ; jmp 0x414242
0x00000000004142d8 : mov edx, eax ; add rax, 1 ; jmp 0x4142b2
0x000000000041440a : mov edx, eax ; add rax, 1 ; jmp 0x4143e4
0x00000000004146ee : mov edx, eax ; add rax, 1 ; jmp 0x4146c8
0x0000000000415458 : mov edx, eax ; add rax, 1 ; jmp 0x415432
0x00000000004154f0 : mov edx, eax ; add rax, 1 ; jmp 0x4154ca
0x0000000000415570 : mov edx, eax ; add rax, 1 ; jmp 0x41554a
0x00000000004155f0 : mov edx, eax ; add rax, 1 ; jmp 0x4155ca
0x00000000004158c8 : mov edx, eax ; add rax, 1 ; jmp 0x4158a2
0x0000000000415940 : mov edx, eax ; add rax, 1 ; jmp 0x41591a
0x00000000004159c0 : mov edx, eax ; add rax, 1 ; jmp 0x41599a
0x0000000000415a40 : mov edx, eax ; add rax, 1 ; jmp 0x415a1a
0x0000000000415ac0 : mov edx, eax ; add rax, 1 ; jmp 0x415a9a
0x0000000000415b40 : mov edx, eax ; add rax, 1 ; jmp 0x415b1a
0x0000000000415bc0 : mov edx, eax ; add rax, 1 ; jmp 0x415b9a
0x0000000000416218 : mov edx, eax ; add rax, 1 ; jmp 0x4161ea
0x0000000000416988 : mov edx, eax ; add rax, 1 ; jmp 0x416962
0x0000000000428eac : mov edx, eax ; mov eax, 0xea ; syscall
0x0000000000465c0e : mov edx, eax ; mov eax, 3 ; syscall
0x000000000040dcca : mov edx, eax ; xor eax, eax ; test edx, edx ; jns 0x40dcb2 ; ret
0x00000000004a5b49 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x00000000004a5c1d : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x00000000004a5cf9 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x00000000004a5b03 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call rax
0x00000000004916c0 : mov edx, ecx ; mov eax, 0x106 ; syscall
0x0000000000467de1 : mov edx, ecx ; mov eax, 0x19 ; syscall
0x0000000000463c58 : mov edx, edi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000411468 : mov edx, esi ; movsxd rax, dword ptr [rdi + rdx*4] ; add rax, rdi ; jmp rax
0x000000000049192d : mov edx, esp ; mov esi, 0x5401 ; mov eax, ecx ; syscall
0x0000000000428eab : mov edx, r8d ; mov eax, 0xea ; syscall
0x00000000004728a9 : mov es, edx ; add eax, 0x29480000 ; ret 0x349
0x000000000046fdf2 : mov es, word ptr [rax + rax] ; add bh, dh ; ret 0
0x00000000004cd399 : mov es, word ptr [rax] ; add ah, dh ; jae 0x4cd39b ; call qword ptr [rdi]
0x0000000000491af9 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x000000000046d6bc : mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000004c1f26 : mov esi, 0x497b96cc ; retf 0x99e0
0x000000000049192f : mov esi, 0x5401 ; mov eax, ecx ; syscall
0x00000000004c1fc3 : mov esi, 0x6400fd4c ; retf 0xf64
0x00000000004c00aa : mov esi, 0x6a25743d ; scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x0000000000468108 : mov esi, 0x80 ; syscall
0x000000000046c872 : mov esi, 0x83480147 ; ret
0x00000000004d03ad : mov esi, 0xaa500000 ; stc ; call qword ptr [rax]
0x000000000049a859 : mov esi, 0xaf0f4907 ; retf 0x14c
0x00000000004ad53d : mov esi, 0xbea1fff9 ; stc ; jmp qword ptr [rcx]
0x0000000000480b0e : mov esi, 0xc08349c8 ; add dword ptr [rcx], edi ; retf
0x00000000004bf53e : mov esi, 0xc2c1c0bf ; ret
0x000000000041bc07 : mov esi, 0xd88948ff ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004640c4 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x00000000004301ce : mov esi, 0xf48002a ; ret 0x8948
0x000000000047d2ac : mov esi, 1 ; jmp rax
0x000000000048b38c : mov esi, 1 ; mov rdi, rbx ; call rax
0x00000000004667b8 : mov esi, 2 ; jmp rax
0x00000000004667cb : mov esi, 3 ; pop rbp ; pop r12 ; jmp rax
0x0000000000475ca4 : mov esi, dword ptr [rax + rsi*8] ; test rsi, rsi ; je 0x475cb6 ; call rsi
0x0000000000419a7d : mov esi, dword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000046bcee : mov esi, dword ptr [rbp - 0x70] ; call rsi
0x000000000041b35b : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [rsp + 0x10] ; call r14
0x000000000041a205 : mov esi, dword ptr [rsi] ; call r12
0x0000000000462fc3 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000046b406 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x000000000043e8d1 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x000000000046e594 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x000000000046e0c4 : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000472aa1 : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000043c2e9 : mov esi, dword ptr [rsp + 0x68] ; call rax
0x00000000004a0c25 : mov esi, eax ; call 0x41ce44
0x0000000000400589 : mov esi, eax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400598 ; ret
0x000000000046659c : mov esi, ebp ; mov edi, ebx ; mov eax, 0x17 ; syscall
0x0000000000467e7c : mov esi, ebp ; mov edi, ebx ; mov eax, 0x2a ; syscall
0x000000000046594c : mov esi, ebp ; mov edi, ebx ; mov eax, 1 ; syscall
0x000000000046587c : mov esi, ebp ; mov edi, ebx ; xor eax, eax ; syscall
0x00000000004939eb : mov esi, ebp ; mov rdi, rax ; call 0x40043f
0x000000000043f551 : mov esi, ebp ; mov rdi, rax ; call rcx
0x000000000043df02 : mov esi, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x000000000042e519 : mov esi, ebx ; mov edi, r13d ; mov eax, r9d ; syscall
0x000000000043da70 : mov esi, ebx ; mov rdi, r13 ; call 0x439cb7
0x000000000049bb50 : mov esi, ebx ; syscall
0x00000000004663b5 : mov esi, edi ; mov eax, 0x12e ; xor edi, edi ; syscall
0x00000000004656c2 : mov esi, edi ; mov edi, 0xffffff9c ; syscall
0x000000000041a0fa : mov esi, edi ; mov edi, 1 ; jmp rax
0x000000000047a0c8 : mov esi, edi ; mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x0000000000412f90 : mov esi, edx ; add rdx, 1 ; jmp 0x412f6a
0x000000000049a7b3 : mov esi, edx ; cmp rcx, rsi ; jne 0x49a798 ; ret
0x00000000004655ec : mov esi, edx ; mov eax, 4 ; syscall
0x000000000046563a : mov esi, edx ; mov eax, 5 ; syscall
0x000000000049166c : mov esi, edx ; mov eax, 6 ; syscall
0x00000000004814d1 : mov esi, esi ; mov rdi, qword ptr [rbp - 0xc0] ; call rax
0x000000000041a151 : mov esi, esi ; mov rdi, r12 ; call r15
0x00000000004a5b4c : mov esi, esp ; mov edi, ebp ; call qword ptr [r14]
0x00000000004a5c20 : mov esi, esp ; mov edi, ebp ; call qword ptr [rax]
0x00000000004a5cfc : mov esi, esp ; mov edi, ebp ; call qword ptr [rcx]
0x00000000004a5b06 : mov esi, esp ; mov edi, ebp ; call rax
0x0000000000467f33 : mov esi, esp ; mov edi, ebx ; mov eax, 0x2c ; syscall
0x000000000048ce8c : mov esi, esp ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000004285eb : mov esp, 0x24448b48 ; sub byte ptr [rax - 0x7d], cl ; ret
0x00000000004c6c48 : mov esp, 0x44000026 ; add esi, esp ; call qword ptr [rdx]
0x00000000004473d1 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x0000000000447401 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000004473f1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000047c0d6 : mov esp, 0x8948006d ; ret 0x8148
0x00000000004339f2 : mov esp, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x00000000004c6b48 : mov esp, 0x94000025 ; add dh, ah ; call qword ptr [rdx]
0x00000000004d1348 : mov esp, 0x940000cd ; cli ; call qword ptr [rcx]
0x000000000046e2dd : mov esp, 0x9824 ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004d0245 : mov esp, 0x9cb80000 ; stc ; jmp qword ptr [rax]
0x000000000046e75f : mov esp, 0xa824 ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004c6e48 : mov esp, 0xb4000028 ; add esi, esp ; call qword ptr [rdx]
0x00000000004c7848 : mov esp, 0xb4000032 ; or dh, ah ; jmp qword ptr [rdx]
0x00000000004ad4fd : mov esp, 0xb936fff9 ; stc ; jmp rdx
0x00000000004ad5f5 : mov esp, 0xbd50fff9 ; stc ; call rax
0x00000000004815e9 : mov esp, 0xc748006d ; ret 0xc3a8
0x000000000045cb13 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x00000000004aac20 : mov esp, 0xd0fff6af ; test al, 0xf6 ; call rax
0x000000000042c084 : mov esp, 0xd824 ; add byte ptr [rax - 0x39], cl ; ret 0xbc40
0x00000000004474bb : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x00000000004473e1 : mov esp, 0xf80148c0 ; ret
0x00000000004478d2 : mov esp, 0xf80148c0 ; vzeroupper ; ret
0x000000000049e7da : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x0000000000419c07 : mov esp, ecx ; ret
0x0000000000466d60 : mov esp, esi ; call r15
0x000000000046f56d : mov fs, word ptr [rbx] ; add eax, 0x29480000 ; ret 0x349
0x0000000000473aed : mov gs, esi ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x000000000040dfae : mov qword ptr [r10 + 0x18], rax ; mov eax, 1 ; ret
0x000000000040d83d : mov qword ptr [r10 + 0x18], rdx ; ret
0x000000000040d95e : mov qword ptr [r10 + 0x48], rdx ; mov rax, rdx ; ret
0x000000000040d7f7 : mov qword ptr [r10 + 8], rax ; mov rax, r10 ; ret
0x00000000004033c3 : mov qword ptr [r10], r8 ; ret
0x000000000040da7a : mov qword ptr [r11 + 0x48], rbp ; pop rbx ; pop rbp ; ret
0x0000000000454580 : mov qword ptr [r9 - 8], rcx ; ret
0x0000000000468ae0 : mov qword ptr [rax + 0x10], rcx ; mov qword ptr [rax + 8], rdx ; ret
0x000000000040d543 : mov qword ptr [rax + 0x10], rcx ; ret
0x000000000048cad8 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000402c34 : mov qword ptr [rax + 0x10], rdx ; nop ; leave ; ret
0x000000000048cb18 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000048db17 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000468b46 : mov qword ptr [rax + 0x20], rcx ; mov byte ptr [rax + 0x28], 1 ; ret
0x0000000000468b60 : mov qword ptr [rax + 0x20], rsi ; ret
0x000000000048cadc : mov qword ptr [rax + 0x40], rcx ; ret
0x000000000048db99 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000433474 : mov qword ptr [rax + 8], 0 ; ret
0x000000000040d53f : mov qword ptr [rax + 8], rdx ; mov qword ptr [rax + 0x10], rcx ; ret
0x0000000000402916 : mov qword ptr [rax + 8], rdx ; nop ; leave ; ret
0x0000000000468ae4 : mov qword ptr [rax + 8], rdx ; ret
0x0000000000404293 : mov qword ptr [rax], r9 ; jmp 0x404267
0x00000000004a0f2c : mov qword ptr [rax], rdi ; pop rbx ; ret
0x00000000004a0e7c : mov qword ptr [rax], rdx ; add rsp, 8 ; ret
0x0000000000402809 : mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040199d : mov qword ptr [rax], rdx ; nop ; leave ; ret
0x0000000000401d21 : mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x00000000004a0f20 : mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000419721 : mov qword ptr [rax], rdx ; ret
0x000000000048de8a : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000004046d8 : mov qword ptr [rax], rsi ; mov rax, qword ptr [rbx - 8] ; nop ; pop rbx ; ret
0x00000000004046a8 : mov qword ptr [rax], rsi ; xor eax, eax ; pop rbx ; ret
0x00000000004987a0 : mov qword ptr [rbp - 0x100], r11 ; call r10
0x0000000000401813 : mov qword ptr [rbp - 0x10], rsi ; mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x0000000000402e78 : mov qword ptr [rbp - 0x10], rsi ; nop ; pop rbp ; ret
0x00000000004a39b8 : mov qword ptr [rbp - 0x40], rdi ; call 0x40048e
0x000000000049d0ee : mov qword ptr [rbp - 0x78], rax ; mov eax, 0x15 ; syscall
0x000000000047b561 : mov qword ptr [rbp - 0x8e0], rdx ; call 0x467fd9
0x0000000000499140 : mov qword ptr [rbp - 0xe0], r11 ; call r10
0x0000000000401de8 : mov qword ptr [rbp - 8], rdi ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000402b90 : mov qword ptr [rbp - 8], rdi ; nop ; pop rbp ; ret
0x0000000000401d73 : mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000475391 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x000000000042ea66 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x000000000049dd9d : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000042ee4e : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x000000000049ba8d : mov qword ptr [rbx + 0x10], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a1c32 : mov qword ptr [rbx + 0x18], 0 ; jmp 0x4a1c08
0x000000000049dcd2 : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000004a44c4 : mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000410795 : mov qword ptr [rbx + 0x18], rdx ; pop rbx ; ret
0x00000000004a4598 : mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x00000000004325f0 : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x000000000043428c : mov qword ptr [rbx + 0x60], rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000403fba : mov qword ptr [rbx - 0x18], rax ; lea rax, [rbx - 0x80] ; pop rbx ; ret
0x00000000004a16f2 : mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004099a8 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000405364 : mov qword ptr [rbx], rax ; pop rbx ; ret
0x000000000042bc00 : mov qword ptr [rcx + 0x130], rdx ; ret
0x000000000040dc88 : mov qword ptr [rcx + rsi*8], rax ; mov dword ptr [rbx + 0x38], edx ; pop rbx ; ret
0x000000000049effe : mov qword ptr [rdi + 0x10], r9 ; ret
0x00000000004609fc : mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x17] ; ret
0x000000000046036c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000046034c : mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000004603af : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000004603cf : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000460390 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000040a530 : mov qword ptr [rdi + 0x10], rsi ; ret
0x00000000004324d2 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000404725 : mov qword ptr [rdi + 0x28], rdx ; add rsp, 8 ; ret
0x0000000000497744 : mov qword ptr [rdi + 0x300], rax ; ret
0x0000000000497716 : mov qword ptr [rdi + 0x308], rax ; ret
0x0000000000432502 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000419760 : mov qword ptr [rdi + 0x98], rsi ; ret
0x00000000004609bc : mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x15] ; ret
0x000000000046030c : mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000004609dc : mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x16] ; ret
0x000000000046032c : mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000451567 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004514f7 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000451487 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000451417 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004608ba : mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xc] ; ret
0x00000000004513a7 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000046025a : mov qword ptr [rdi + 5], rdx ; ret
0x00000000004608da : mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xd] ; ret
0x0000000000451337 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000046026a : mov qword ptr [rdi + 6], rdx ; ret
0x00000000004608fa : mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xe] ; ret
0x00000000004512c7 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000046027a : mov qword ptr [rdi + 7], rdx ; ret
0x00000000004a0423 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x000000000049ef83 : mov qword ptr [rdi + 8], r9 ; ret
0x00000000004a076d : mov qword ptr [rdi + 8], rax ; mov eax, 2 ; ret
0x000000000040c1db : mov qword ptr [rdi + 8], rax ; mov qword ptr [rsi + 8], rdx ; ret
0x00000000004324d6 : mov qword ptr [rdi + 8], rax ; ret
0x000000000040a543 : mov qword ptr [rdi + 8], rsi ; mov byte ptr [rax + rsi], 0 ; ret
0x000000000040a4f0 : mov qword ptr [rdi + 8], rsi ; ret
0x0000000000463d2a : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rcx ; ret
0x0000000000462fb6 : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000041970b : mov qword ptr [rdi + rsi*8], rdx ; ret
0x000000000044b1d4 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000044b212 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000049eeee : mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000044b55b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000450d77 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000044b73b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000450cf7 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000044b92b : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000450c77 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000044bafc : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000450be8 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000044bcfc : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000450b58 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000044befc : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000450ac8 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000049ee79 : mov qword ptr [rdi - 8], r9 ; ret
0x000000000044b1d8 : mov qword ptr [rdi - 8], rcx ; ret
0x000000000044b216 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000044b38b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000044b487 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000044b3d3 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000450df7 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000484b49 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000049ee48 : mov qword ptr [rdi], r9 ; ret
0x0000000000407552 : mov qword ptr [rdi], rax ; mov qword ptr [rsi], rdx ; ret
0x00000000004054bb : mov qword ptr [rdi], rax ; ret
0x0000000000460846 : mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x0000000000460236 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000460246 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000460257 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000460267 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000460277 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x0000000000460227 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x00000000004512cb : mov qword ptr [rdi], rcx ; ret
0x0000000000463eae : mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x0000000000460833 : mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x00000000004073ba : mov qword ptr [rdi], rdx ; ret
0x0000000000407fc7 : mov qword ptr [rdi], rsi ; mov byte ptr [rdi + rsi + 0x18], 0 ; ret
0x000000000045457d : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000407163 : mov qword ptr [rdi], rsi ; ret
0x000000000042eae4 : mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x000000000045fdda : mov qword ptr [rdx + 5], rax ; lea rax, [rdx + 0xc] ; ret
0x000000000045e5ca : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x000000000045fdfa : mov qword ptr [rdx + 6], rax ; lea rax, [rdx + 0xd] ; ret
0x000000000045e5ea : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000045fe1a : mov qword ptr [rdx + 7], rax ; lea rax, [rdx + 0xe] ; ret
0x000000000045e60a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000048779f : mov qword ptr [rdx + 8], rax ; jmp 0x487775
0x000000000045fcaa : mov qword ptr [rdx + 8], rax ; lea rax, [rdx + 0xf] ; ret
0x000000000045e4fa : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x00000000004343ff : mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x000000000045fc53 : mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x000000000045e4a3 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000004a0f0c : mov qword ptr [rdx], rax ; pop rbx ; ret
0x0000000000434367 : mov qword ptr [rdx], rax ; ret
0x00000000004a0a57 : mov qword ptr [rip + 0x23c9ca], rax ; ret
0x000000000049b364 : mov qword ptr [rip + 0x242205], rax ; ret
0x000000000043b815 : mov qword ptr [rip + 0x29f064], rax ; ret
0x000000000043573b : mov qword ptr [rip + 0x2a513e], rax ; ret
0x0000000000435236 : mov qword ptr [rip + 0x2a55d3], rax ; ret
0x000000000043520e : mov qword ptr [rip + 0x2a55f3], rax ; ret
0x00000000004351ee : mov qword ptr [rip + 0x2a560b], rax ; ret
0x00000000004350e4 : mov qword ptr [rip + 0x2a577d], rax ; ret
0x00000000004350d4 : mov qword ptr [rip + 0x2a5785], rax ; ret
0x00000000004350c2 : mov qword ptr [rip + 0x2a5787], rdx ; ret
0x0000000000435084 : mov qword ptr [rip + 0x2a578d], rax ; ret
0x0000000000435074 : mov qword ptr [rip + 0x2a57a5], rax ; ret
0x000000000041cac2 : mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000040c1df : mov qword ptr [rsi + 8], rdx ; ret
0x0000000000494930 : mov qword ptr [rsi], -1 ; xor eax, eax ; ret
0x00000000004055c1 : mov qword ptr [rsi], rax ; ret
0x000000000049a818 : mov qword ptr [rsi], rdi ; mov rax, rcx ; ret
0x0000000000407555 : mov qword ptr [rsi], rdx ; ret
0x000000000046ddab : mov qword ptr [rsp + 0x50], rax ; call 0x46a087
0x00000000004389de : mov qword ptr [rsp + 8], rax ; call rcx
0x000000000042484a : mov qword ptr [rsp + 8], rcx ; call 0x421357
0x000000000042d0ed : mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x00000000004a5ca2 : mov qword ptr [rsp], r8 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x00000000004a1be2 : mov qword ptr [rsp], rcx ; call 0x43e646
0x000000000042f341 : mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x0000000000432654 : mov qword ptr [rsp], rdi ; call 0x42e8e6
0x0000000000477795 : mov qword ptr fs:[rdx], rax ; ret
0x0000000000462fb5 : mov qword ptr ss:[rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x0000000000467de0 : mov r10, rcx ; mov eax, 0x19 ; syscall
0x0000000000450f36 : mov r10d, 0x46f00ff2 ; retf 0xff3
0x000000000044bd31 : mov r10d, 0x4f7f0ff3 ; retf 0x894c
0x0000000000477a23 : mov r10d, 8 ; mov eax, ecx ; syscall
0x0000000000450fb6 : mov r11d, 0x46f00ff2 ; retf
0x000000000044bb31 : mov r11d, 0x4f7f0ff3 ; retf
0x0000000000466d5f : mov r12d, r14d ; call r15
0x0000000000419a7c : mov r14, qword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x0000000000419a80 : mov r15, qword ptr [rbp - 8] ; leave ; ret
0x00000000004033c0 : mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x0000000000419d2e : mov r8b, 0xe8 ; retf
0x000000000040216e : mov r8d, 0xe8c78948 ; ret 0xfff6
0x000000000046b40a : mov r9, r13 ; call rbx
0x0000000000490334 : mov r9, r14 ; call rbx
0x0000000000407abf : mov rax, -1 ; ret
0x0000000000407350 : mov rax, 0x6dc4c0 ; ret
0x0000000000477960 : mov rax, 0xf ; syscall
0x0000000000490950 : mov rax, 1 ; ret
0x0000000000490960 : mov rax, 2 ; ret
0x0000000000490970 : mov rax, 3 ; ret
0x0000000000490980 : mov rax, 4 ; ret
0x0000000000490990 : mov rax, 5 ; ret
0x00000000004909a0 : mov rax, 6 ; ret
0x00000000004909b0 : mov rax, 7 ; ret
0x00000000004a2d6e : mov rax, qword ptr [r12] ; add rax, qword ptr [rdx + 8] ; call rax
0x0000000000498ce5 : mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000042d680 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000048dfa3 : mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000049db90 : mov rax, qword ptr [rax + 8] ; ret
0x0000000000475d9f : mov rax, qword ptr [rax + rbp*8] ; test rax, rax ; je 0x475db3 ; call rax
0x0000000000488149 : mov rax, qword ptr [rax + rcx*8] ; mov ecx, 1 ; jmp rax
0x000000000040daea : mov rax, qword ptr [rax + rcx*8] ; ret
0x00000000004777ae : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000047cd1c : mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000407443 : mov rax, qword ptr [rax - 0x10] ; ret
0x0000000000407413 : mov rax, qword ptr [rax - 0x18] ; ret
0x000000000040d4da : mov rax, qword ptr [rax - 0x70] ; add rsp, 8 ; ret
0x0000000000402f13 : mov rax, qword ptr [rax] ; leave ; ret
0x000000000040284c : mov rax, qword ptr [rax] ; pop rbp ; ret
0x0000000000404927 : mov rax, qword ptr [rax] ; ret
0x0000000000401817 : mov rax, qword ptr [rbp - 0x10] ; pop rbp ; ret
0x00000000004027b0 : mov rax, qword ptr [rbp - 0x20] ; leave ; ret
0x0000000000403099 : mov rax, qword ptr [rbp - 0x28] ; add rax, rdx ; leave ; ret
0x0000000000402b60 : mov rax, qword ptr [rbp - 8] ; leave ; ret
0x0000000000401999 : mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; leave ; ret
0x0000000000401d1d : mov rax, qword ptr [rbp - 8] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x0000000000402848 : mov rax, qword ptr [rbp - 8] ; mov rax, qword ptr [rax] ; pop rbp ; ret
0x0000000000401dec : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000498500 : mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000043263c : mov rax, qword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004a0f28 : mov rax, qword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000432d28 : mov rax, qword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x00000000004046db : mov rax, qword ptr [rbx - 8] ; nop ; pop rbx ; ret
0x0000000000408673 : mov rax, qword ptr [rbx] ; pop rbx ; add rax, qword ptr [rax - 0x18] ; ret
0x00000000004085b3 : mov rax, qword ptr [rbx] ; pop rbx ; ret
0x000000000045e4a0 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000040ae09 : mov rax, qword ptr [rdi + 0x10] ; ret
0x00000000004a815c : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x4a8175 ; call rax
0x000000000048dfa0 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000004346c0 : mov rax, qword ptr [rdi + 0x68] ; ret
0x00000000004196e0 : mov rax, qword ptr [rdi + 0x90] ; ret
0x0000000000419730 : mov rax, qword ptr [rdi + 0x98] ; ret
0x0000000000419770 : mov rax, qword ptr [rdi + 0xa0] ; ret
0x00000000004197d0 : mov rax, qword ptr [rdi + 0xa8] ; ret
0x00000000004197c0 : mov rax, qword ptr [rdi + 0xb0] ; ret
0x0000000000419780 : mov rax, qword ptr [rdi + 0xb8] ; ret
0x000000000040ad30 : mov rax, qword ptr [rdi + 8] ; add rax, qword ptr [rdi] ; ret
0x0000000000406cb0 : mov rax, qword ptr [rdi + 8] ; ret
0x000000000047d25e : mov rax, qword ptr [rdi + rax*8] ; jmp rax
0x0000000000404670 : mov rax, qword ptr [rdi - 8] ; ret
0x0000000000407190 : mov rax, qword ptr [rdi] ; add rax, qword ptr [rax - 0x18] ; ret
0x0000000000407460 : mov rax, qword ptr [rdi] ; add rax, rsi ; ret
0x00000000004a3de0 : mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x4a3df9 ; ret
0x0000000000434364 : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000407440 : mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax - 0x10] ; ret
0x0000000000407410 : mov rax, qword ptr [rdi] ; mov rax, qword ptr [rax - 0x18] ; ret
0x0000000000407150 : mov rax, qword ptr [rdi] ; ret
0x0000000000407170 : mov rax, qword ptr [rdi] ; sub rax, 0x18 ; ret
0x0000000000434350 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x434351 ; ret
0x000000000049b459 : mov rax, qword ptr [rip + 0x242110] ; ret
0x0000000000474610 : mov rax, qword ptr [rip + 0x268c21] ; ret
0x000000000046c110 : mov rax, qword ptr [rip + 0x2719d1] ; ret
0x00000000004346a0 : mov rax, qword ptr [rip + 0x2a5a99] ; ret
0x0000000000406820 : mov rax, qword ptr [rip + 0x2d5c79] ; ret
0x000000000041a621 : mov rax, qword ptr [rsi + 0x10] ; ret
0x00000000004174b0 : mov rax, qword ptr [rsi + 0xa8] ; ret
0x0000000000417483 : mov rax, qword ptr [rsi + 0xb0] ; ret
0x00000000004174a0 : mov rax, qword ptr [rsi + 0xb8] ; ret
0x000000000041a640 : mov rax, qword ptr [rsi + 8] ; ret
0x000000000048810e : mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x000000000047d2a8 : mov rax, qword ptr [rsi + rax*8] ; mov esi, 1 ; jmp rax
0x000000000047d908 : mov rax, qword ptr [rsi + rax*8] ; xor esi, esi ; jmp rax
0x000000000040a0d0 : mov rax, qword ptr [rsi] ; cmp qword ptr [rdi], rax ; sete al ; ret
0x00000000004197a5 : mov rax, qword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x0000000000466925 : mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000041c442 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000046fd1b : mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000042923c : mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004a6aa9 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000040d7fb : mov rax, r10 ; ret
0x0000000000408a1f : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000466ced : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000043690f : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000043e6ee : mov rax, r8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000048fb70 : mov rax, r8 ; vzeroupper ; ret
0x0000000000467303 : mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000408869 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000408cbc : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000408629 : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000040b237 : mov rax, rbx ; mov byte ptr [rdx + rsi], 0 ; pop rbx ; ret
0x000000000040da77 : mov rax, rbx ; mov qword ptr [r11 + 0x48], rbp ; pop rbx ; pop rbp ; ret
0x0000000000407781 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040d0bb : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004043ab : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000405291 : mov rax, rbx ; pop rbx ; ret
0x000000000040d3d1 : mov rax, rbx ; pop rdx ; pop rbx ; ret
0x00000000004080a3 : mov rax, rcx ; pop rbp ; pop r12 ; ret
0x0000000000408ed7 : mov rax, rcx ; pop rbx ; pop rbp ; ret
0x0000000000408070 : mov rax, rcx ; ret
0x000000000042e962 : mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004073c3 : mov rax, rdi ; mov qword ptr [rdi], rdx ; ret
0x0000000000436ba4 : mov rax, rdi ; pop rbp ; pop r12 ; ret
0x00000000004075a0 : mov rax, rdi ; ret
0x0000000000404917 : mov rax, rdi ; xchg qword ptr [rdx], rax ; ret
0x00000000004045ae : mov rax, rdx ; add rsp, 8 ; ret
0x00000000004913fa : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000043615c : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000404514 : mov rax, rdx ; pop rbx ; ret
0x0000000000407ad0 : mov rax, rdx ; ret
0x0000000000401c59 : mov rax, rdx ; sar rax, 2 ; pop rbp ; ret
0x000000000040a6c4 : mov rax, rsi ; cmp rsi, rcx ; ja 0x40a6d7 ; ret
0x00000000004087d3 : mov rax, rsi ; jne 0x4087e6 ; ret
0x00000000004087d2 : mov rax, rsi ; jne 0x4087e7 ; ret
0x0000000000407160 : mov rax, rsi ; mov qword ptr [rdi], rsi ; ret
0x0000000000439c6c : mov rax, rsi ; pop rbx ; ret
0x000000000040d577 : mov rax, rsi ; ret
0x0000000000419c02 : mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049e7dc : mov rbp, r9 ; nop ; jmp rdx
0x00000000004a0b4a : mov rbp, rax ; call 0x41ce45
0x0000000000402b8d : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; nop ; pop rbp ; ret
0x0000000000401d70 : mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x0000000000401ddd : mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000004771a5 : mov rbx, rdi ; test rax, rax ; je 0x4771b7 ; call rax
0x00000000004914af : mov rbx, rsi ; sub rsp, 8 ; syscall
0x000000000049bb4c : mov rbx, rsp ; mov rsi, rbx ; syscall
0x0000000000460210 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000049dc86 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000049dc14 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x58 ; jmp qword ptr [rax]
0x0000000000408997 : mov rcx, r9 ; xor eax, eax ; call 0x404c97
0x000000000048e5b0 : mov rcx, rax ; jmp 0x48e57c
0x0000000000462f91 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000046741b : mov rdi, qword ptr [r13] ; call r12
0x0000000000429238 : mov rdi, qword ptr [r13] ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000429cd3 : mov rdi, qword ptr [rax + 0x20] ; call rdx
0x0000000000466d5b : mov rdi, qword ptr [rbp - 0x58] ; mov r12d, r14d ; call r15
0x000000000047a0ca : mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x00000000004855fc : mov rdi, qword ptr [rbp - 0x8d0] ; call rax
0x00000000004814d3 : mov rdi, qword ptr [rbp - 0xc0] ; call rax
0x0000000000466843 : mov rdi, qword ptr [rbp] ; call r12
0x000000000046681d : mov rdi, qword ptr [rbx] ; call r12
0x00000000004a442e : mov rdi, qword ptr [rsp + 0x10] ; call 0x4a0e67
0x000000000041b35d : mov rdi, qword ptr [rsp + 0x10] ; call r14
0x000000000041f6c3 : mov rdi, qword ptr [rsp + 0x18] ; call 0x43c0f7
0x000000000046dae4 : mov rdi, qword ptr [rsp + 0x20] ; call r15
0x000000000046e3c0 : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x000000000046e598 : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x000000000046e882 : mov rdi, qword ptr [rsp + 0x38] ; call r12
0x000000000046eeba : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000471e7e : mov rdi, qword ptr [rsp + 0x38] ; call r15
0x000000000046e0c8 : mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00000000004702f9 : mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000472aa5 : mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000432665 : mov rdi, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000041a24b : mov rdi, qword ptr [rsp] ; mov rdx, qword ptr [rbp] ; call r12
0x000000000041a153 : mov rdi, r12 ; call r15
0x000000000048e02f : mov rdi, r12 ; call rbx
0x0000000000465d38 : mov rdi, r12 ; mov eax, 0x4f ; syscall
0x000000000043da72 : mov rdi, r13 ; call 0x439cb5
0x0000000000474ddb : mov rdi, r13 ; call r12
0x000000000041b13b : mov rdi, r13 ; call r14
0x00000000004a9470 : mov rdi, r13 ; call rax
0x00000000004292c8 : mov rdi, r13 ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000474f32 : mov rdi, r14 ; call rbx
0x0000000000475210 : mov rdi, r14 ; call rdx
0x000000000048e307 : mov rdi, r15 ; call r12
0x000000000042d0f2 : mov rdi, r15 ; call rax
0x000000000046bcea : mov rdi, r15 ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x00000000004939ed : mov rdi, rax ; call 0x40043d
0x000000000043f553 : mov rdi, rax ; call rcx
0x0000000000428e9f : mov rdi, rax ; mov eax, 0xba ; syscall
0x000000000043e8d5 : mov rdi, rbp ; call rax
0x00000000004901e0 : mov rdi, rbp ; call rbx
0x0000000000466639 : mov rdi, rbp ; mov eax, 9 ; syscall
0x0000000000490331 : mov rdi, rbp ; mov r9, r14 ; call rbx
0x000000000046b70d : mov rdi, rbx ; call r14
0x0000000000403f5a : mov rdi, rbx ; call rax
0x00000000004326fc : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000048ce8e : mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000004a39b5 : mov rdi, rsp ; mov qword ptr [rbp - 0x40], rdi ; call 0x400491
0x0000000000433d53 : mov rdi, rsp ; xor edx, edx ; call 7
0x0000000000419388 : mov rdx, qword ptr [r12] ; mov edi, 1 ; call rax
0x000000000041b138 : mov rdx, qword ptr [r15] ; mov rdi, r13 ; call r14
0x00000000004074b3 : mov rdx, qword ptr [rax - 0x18] ; lea rax, [rax + rdx - 1] ; ret
0x0000000000402610 : mov rdx, qword ptr [rbp - 0x10] ; mov qword ptr [rax], rdx ; nop ; pop rbp ; ret
0x000000000041a24f : mov rdx, qword ptr [rbp] ; call r12
0x00000000004a0f08 : mov rdx, qword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x00000000004a0f1c : mov rdx, qword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000040b034 : mov rdx, qword ptr [rdi] ; lea rax, [rdx + rax - 1] ; ret
0x0000000000410cd0 : mov rdx, qword ptr [rdx + 8] ; mov edi, dword ptr [rdx] ; call 0x40d728
0x000000000044b340 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004515d0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000004073c0 : mov rdx, qword ptr [rsi] ; mov rax, rdi ; mov qword ptr [rdi], rdx ; ret
0x000000000049e6b8 : mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x00000000004a5b48 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x00000000004a5c1c : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x00000000004a5cf8 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x00000000004a5b02 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000041171f : mov rdx, rax ; add rax, 1 ; jmp 0x4116fb
0x0000000000411917 : mov rdx, rax ; add rax, 1 ; jmp 0x4118f3
0x0000000000411c87 : mov rdx, rax ; add rax, 1 ; jmp 0x411c63
0x0000000000411cff : mov rdx, rax ; add rax, 1 ; jmp 0x411cdb
0x0000000000411d77 : mov rdx, rax ; add rax, 1 ; jmp 0x411d53
0x000000000041204f : mov rdx, rax ; add rax, 1 ; jmp 0x41202b
0x00000000004121b7 : mov rdx, rax ; add rax, 1 ; jmp 0x412193
0x00000000004122e7 : mov rdx, rax ; add rax, 1 ; jmp 0x4122c3
0x000000000041235f : mov rdx, rax ; add rax, 1 ; jmp 0x41233b
0x00000000004123d7 : mov rdx, rax ; add rax, 1 ; jmp 0x4123b3
0x000000000041244f : mov rdx, rax ; add rax, 1 ; jmp 0x41242b
0x00000000004124c7 : mov rdx, rax ; add rax, 1 ; jmp 0x4124a3
0x000000000041253f : mov rdx, rax ; add rax, 1 ; jmp 0x41251b
0x00000000004125b7 : mov rdx, rax ; add rax, 1 ; jmp 0x412593
0x000000000041262f : mov rdx, rax ; add rax, 1 ; jmp 0x41260b
0x00000000004126af : mov rdx, rax ; add rax, 1 ; jmp 0x41268b
0x0000000000412727 : mov rdx, rax ; add rax, 1 ; jmp 0x412703
0x000000000041279f : mov rdx, rax ; add rax, 1 ; jmp 0x41277b
0x0000000000412817 : mov rdx, rax ; add rax, 1 ; jmp 0x4127f3
0x000000000041288f : mov rdx, rax ; add rax, 1 ; jmp 0x41286b
0x0000000000412907 : mov rdx, rax ; add rax, 1 ; jmp 0x4128e3
0x000000000041297f : mov rdx, rax ; add rax, 1 ; jmp 0x41295b
0x0000000000412a77 : mov rdx, rax ; add rax, 1 ; jmp 0x412a53
0x0000000000412bc7 : mov rdx, rax ; add rax, 1 ; jmp 0x412ba3
0x0000000000412c3f : mov rdx, rax ; add rax, 1 ; jmp 0x412c1b
0x0000000000412cb7 : mov rdx, rax ; add rax, 1 ; jmp 0x412c93
0x0000000000412d2f : mov rdx, rax ; add rax, 1 ; jmp 0x412d0b
0x0000000000412da7 : mov rdx, rax ; add rax, 1 ; jmp 0x412d83
0x0000000000412e1f : mov rdx, rax ; add rax, 1 ; jmp 0x412dfb
0x0000000000412e97 : mov rdx, rax ; add rax, 1 ; jmp 0x412e73
0x000000000041321f : mov rdx, rax ; add rax, 1 ; jmp 0x4131fb
0x0000000000413297 : mov rdx, rax ; add rax, 1 ; jmp 0x413273
0x00000000004134df : mov rdx, rax ; add rax, 1 ; jmp 0x4134bb
0x0000000000413567 : mov rdx, rax ; add rax, 1 ; jmp 0x413543
0x0000000000413aff : mov rdx, rax ; add rax, 1 ; jmp 0x413adb
0x0000000000414097 : mov rdx, rax ; add rax, 1 ; jmp 0x414073
0x0000000000414107 : mov rdx, rax ; add rax, 1 ; jmp 0x4140e3
0x0000000000414267 : mov rdx, rax ; add rax, 1 ; jmp 0x414243
0x00000000004142d7 : mov rdx, rax ; add rax, 1 ; jmp 0x4142b3
0x0000000000414409 : mov rdx, rax ; add rax, 1 ; jmp 0x4143e5
0x00000000004146ed : mov rdx, rax ; add rax, 1 ; jmp 0x4146c9
0x0000000000415457 : mov rdx, rax ; add rax, 1 ; jmp 0x415433
0x00000000004154ef : mov rdx, rax ; add rax, 1 ; jmp 0x4154cb
0x000000000041556f : mov rdx, rax ; add rax, 1 ; jmp 0x41554b
0x00000000004155ef : mov rdx, rax ; add rax, 1 ; jmp 0x4155cb
0x00000000004158c7 : mov rdx, rax ; add rax, 1 ; jmp 0x4158a3
0x000000000041593f : mov rdx, rax ; add rax, 1 ; jmp 0x41591b
0x00000000004159bf : mov rdx, rax ; add rax, 1 ; jmp 0x41599b
0x0000000000415a3f : mov rdx, rax ; add rax, 1 ; jmp 0x415a1b
0x0000000000415abf : mov rdx, rax ; add rax, 1 ; jmp 0x415a9b
0x0000000000415b3f : mov rdx, rax ; add rax, 1 ; jmp 0x415b1b
0x0000000000415bbf : mov rdx, rax ; add rax, 1 ; jmp 0x415b9b
0x0000000000416217 : mov rdx, rax ; add rax, 1 ; jmp 0x4161eb
0x0000000000416987 : mov rdx, rax ; add rax, 1 ; jmp 0x416963
0x00000000004916bf : mov rdx, rcx ; mov eax, 0x106 ; syscall
0x0000000000463c57 : mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000041a204 : mov rsi, qword ptr [r14] ; call r12
0x000000000041b35a : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [rsp + 0x10] ; call r14
0x0000000000475ca3 : mov rsi, qword ptr [rax + r14*8] ; test rsi, rsi ; je 0x475cb7 ; call rsi
0x000000000046bced : mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x000000000046b405 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x000000000043e8d0 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x000000000043c2e8 : mov rsi, qword ptr [rsp + 0x68] ; call rax
0x00000000004a5b4b : mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x00000000004a5c1f : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x00000000004a5cfb : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x00000000004a5b05 : mov rsi, r12 ; mov edi, ebp ; call rax
0x00000000004939ea : mov rsi, r13 ; mov rdi, rax ; call 0x400440
0x000000000041a150 : mov rsi, r14 ; mov rdi, r12 ; call r15
0x00000000004a0c24 : mov rsi, rax ; call 0x41ce45
0x0000000000400588 : mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400599 ; ret
0x000000000046587b : mov rsi, rbp ; mov edi, ebx ; xor eax, eax ; syscall
0x000000000043f550 : mov rsi, rbp ; mov rdi, rax ; call rcx
0x000000000042e518 : mov rsi, rbx ; mov edi, r13d ; mov eax, r9d ; syscall
0x000000000043da6f : mov rsi, rbx ; mov rdi, r13 ; call 0x439cb8
0x000000000049bb4f : mov rsi, rbx ; syscall
0x00000000004656c1 : mov rsi, rdi ; mov edi, 0xffffff9c ; syscall
0x000000000041a0f9 : mov rsi, rdi ; mov edi, 1 ; jmp rax
0x0000000000412f8f : mov rsi, rdx ; add rdx, 1 ; jmp 0x412f6b
0x000000000049a7b2 : mov rsi, rdx ; cmp rcx, rsi ; jne 0x49a799 ; ret
0x00000000004655eb : mov rsi, rdx ; mov eax, 4 ; syscall
0x0000000000465639 : mov rsi, rdx ; mov eax, 5 ; syscall
0x000000000049166b : mov rsi, rdx ; mov eax, 6 ; syscall
0x000000000049e7d9 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x0000000000419c06 : mov rsp, rcx ; ret
0x0000000000488c36 : mov ss, word ptr [rax + rax + 0x63490000] ; ret 0x8948
0x00000000004545a5 : mov word ptr [r9 - 2], cx ; ret
0x0000000000403895 : mov word ptr [rax + rbp*4], fs ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000004cf2d4 : mov word ptr [rcx - 7], cs ; jmp rbx
0x000000000046093c : mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x11] ; ret
0x00000000004602ac : mov word ptr [rdi + 0x10], cx ; ret
0x0000000000460a44 : mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x19] ; ret
0x0000000000460394 : mov word ptr [rdi + 0x18], cx ; ret
0x0000000000451807 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000460808 : mov word ptr [rdi + 4], dx ; lea rax, [rdi + 5] ; ret
0x00000000004601e8 : mov word ptr [rdi + 4], dx ; ret
0x000000000046085a : mov word ptr [rdi + 8], dx ; lea rax, [rdi + 9] ; ret
0x000000000046022a : mov word ptr [rdi + 8], dx ; ret
0x0000000000463d3a : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], cx ; ret
0x0000000000462fd4 : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x000000000044b8dc : mov word ptr [rdi - 2], cx ; ret
0x000000000044b6f4 : mov word ptr [rdi - 2], dx ; ret
0x000000000044b8d8 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x00000000004601b3 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000462d12 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000045180b : mov word ptr [rdi], cx ; ret
0x0000000000463ec4 : mov word ptr [rdi], cx ; vzeroupper ; ret
0x00000000004607c3 : mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x0000000000451873 : mov word ptr [rdi], dx ; ret
0x00000000004545a2 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x0000000000462fd9 : mov word ptr [rdi], si ; ret
0x000000000045fd28 : mov word ptr [rdx + 4], ax ; lea rax, [rdx + 5] ; ret
0x000000000045e568 : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x000000000045fcd3 : mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x000000000045e523 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000004c6b18 : mov word ptr [rip + 0x2840000], fs ; hlt ; call qword ptr [rdx]
0x0000000000462d15 : mov word ptr [rsi - 2], cx ; ret
0x00000000004c7b34 : mov word ptr [rsi], cs ; hlt ; call qword ptr [rcx]
0x00000000004c6c18 : mov word ptr [rsi], fs ; add byte ptr [rax], al ; xor al, 3 ; hlt ; call qword ptr [rdx]
0x000000000041faeb : mov word ptr [rsp + rcx*4], fs ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x0000000000462fd3 : mov word ptr ss:[rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x0000000000404914 : movabs al, byte ptr [0x28748f88948006d] ; ret
0x00000000004ad758 : movabs al, byte ptr [0x50fff9e8a0fff9e6] ; ret 0xfff9
0x00000000004634a7 : movabs al, byte ptr [0x77f8c5237f7ec1c4] ; ret
0x000000000046968c : movabs al, byte ptr [0x8948c085480002e1] ; ret
0x000000000047b2da : movabs al, byte ptr [0xa8c0c748000000d8] ; ret
0x00000000004c2063 : movabs byte ptr [0xd900432ac06c5d01], al ; retf 0xea91
0x00000000004406ba : movabs byte ptr [0xea05f619750001fd], al ; retf 0x29
0x00000000004c1cc1 : movabs byte ptr [0xeb1b5c347ebb9329], al ; retf
0x0000000000409681 : movabs dword ptr [0x5b20c48348000000], eax ; ret
0x000000000040be71 : movabs dword ptr [0x894cd1894c0009e1], eax ; retf 0xc031
0x00000000004c0107 : movabs eax, dword ptr [0x2130504dd97d9556] ; retf
0x0000000000404964 : movabs eax, dword ptr [0x28748f88948006d] ; ret
0x00000000004c09ba : movabs eax, dword ptr [0x95a55d87a0d1e161] ; retf 0x33e6
0x0000000000416216 : movabs eax, dword ptr [0xeb01c08348c28948] ; ret
0x0000000000449e62 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000449e5e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000449f0c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000428e8c : movaps xmmword ptr [rsp + 0xf0], xmm0 ; syscall
0x0000000000460280 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000460afd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, [rdi + 0x1f] ; ret
0x000000000046044d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000004514df : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000045146f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004513ff : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000045138f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000460a9d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, [rdi + 0x1c] ; ret
0x00000000004603ed : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000045131f : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000460abd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, [rdi + 0x1d] ; ret
0x000000000046040d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000004512af : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000460add : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, [rdi + 0x1e] ; ret
0x000000000046042d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000004518cf : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000045185f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004517ef : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000045177f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000045170f : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000045169f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000045162f : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004515bf : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000045154f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000463cad : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x0000000000450a3b : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x0000000000450aab : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000460914 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, [rdi + 0xf] ; ret
0x0000000000460294 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000004602d7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000004602c7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000460348 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000460308 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000460328 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000004602a8 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000460449 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000004603e9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x0000000000460409 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x0000000000460429 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000045125a : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004512b4 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000460281 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000460afe : movq qword ptr [rdi + 0x10], mm2 ; lea rax, [rdi + 0x1f] ; ret
0x000000000046044e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00000000004514e0 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000451470 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000451400 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000451390 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000460a9e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, [rdi + 0x1c] ; ret
0x00000000004603ee : movq qword ptr [rdi + 0xd], mm2 ; ret
0x0000000000451320 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000460abe : movq qword ptr [rdi + 0xe], mm2 ; lea rax, [rdi + 0x1d] ; ret
0x000000000046040e : movq qword ptr [rdi + 0xe], mm2 ; ret
0x00000000004512b0 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000460ade : movq qword ptr [rdi + 0xf], mm2 ; lea rax, [rdi + 0x1e] ; ret
0x000000000046042e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x00000000004518d0 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000451860 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004517f0 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000451780 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000451710 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004516a0 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000451630 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004515c0 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000451550 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000463c35 : movq qword ptr [rdi + rdx - 0x10], mm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000463cae : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000450a3c : movq qword ptr [rdi - 0x10], mm0 ; ret
0x0000000000450aac : movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004511e7 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000451167 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004510d7 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000451057 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000450fd7 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000450f57 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000450ed7 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000450e57 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000450dd7 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000450d57 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000450cd7 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000450c57 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000450bc7 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000450b37 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000450aa7 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000460915 : movq qword ptr [rdi], mm0 ; lea rax, [rdi + 0xf] ; ret
0x0000000000460295 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000004602e8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000004602d8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000004602c8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000460349 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000460309 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000460329 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000004602a9 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000046044a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000004603ea : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000046040a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000046042a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000045125b : movq qword ptr [rdi], mm0 ; ret
0x00000000004512b5 : movq qword ptr [rdi], mm1 ; ret
0x00000000004c6b7c : movsb byte ptr [rdi], byte ptr [rsi] ; add dh, ah ; call qword ptr [rdx]
0x000000000047445c : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047d172 : movsb byte ptr [rdi], byte ptr [rsi] ; and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000462f35 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000004c0de2 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000462f27 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000420998 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x2b
0x0000000000470248 : movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000004bfcc5 : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x00000000004d176c : movsb byte ptr [rdi], byte ptr [rsi] ; test al, 0xfa ; call qword ptr [rsi]
0x00000000004c7b30 : movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, 0xe8c0000 ; hlt ; call qword ptr [rcx]
0x000000000049ba3c : movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, eax ; ret
0x000000000047cd19 : movsd dword ptr [rdi], dword ptr [rsi] ; and eax, 0x48b4800 ; clc ; jmp rax
0x00000000004c22dd : movsd dword ptr [rdi], dword ptr [rsi] ; fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004c2675 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004c1f31 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x00000000004881f7 : movsd dword ptr [rdi], dword ptr [rsi] ; or al, 0 ; add byte ptr [rcx + 1], al ; ret 0x8b48
0x0000000000435077 : movsd dword ptr [rdi], dword ptr [rsi] ; push rdi ; sub al, byte ptr [rax] ; ret
0x000000000049eea2 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004c09c1 : movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x000000000047cd18 : movsd dword ptr [rdi], dword ptr fs:[rsi] ; and eax, 0x48b4800 ; clc ; jmp rax
0x00000000004a6ea4 : movss dword ptr [rsp - 0x28], xmm0 ; ret
0x000000000049cf6b : movsx eax, cl ; neg eax ; ret
0x000000000049d010 : movsx eax, dl ; sub eax, ecx ; ret
0x00000000004408d1 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, [r10 + r9] ; jmp r10
0x000000000044eebb : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000044993b : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, [r11 + r9] ; jmp r9
0x00000000004185b8 : movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x000000000041d4be : movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x0000000000418eb9 : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x0000000000417567 : movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x0000000000403391 : movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x0000000000418af1 : movsxd rax, dword ptr [r9 + r11*4] ; add rax, r9 ; jmp rax
0x000000000040d4ff : movsxd rax, dword ptr [r9 + r8*4] ; add rax, r9 ; jmp rax
0x0000000000403392 : movsxd rax, dword ptr [rax + rcx*4] ; add rax, r8 ; jmp rax
0x0000000000432b0e : movsxd rax, dword ptr [rax - 0x77] ; add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000467e11 : movsxd rax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000004c0d60 : movsxd rax, dword ptr [rbp + 0x275dcc4c] ; retf 0xd1cb
0x000000000041d4bf : movsxd rax, dword ptr [rbp + rax*4] ; add rax, r13 ; jmp rax
0x000000000040d5fb : movsxd rax, dword ptr [rbp + rax*4] ; add rax, rbp ; jmp rax
0x000000000046a118 : movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x000000000047d6dd : movsxd rax, dword ptr [rbx - 0x52743] ; call qword ptr [rax]
0x00000000004981dd : movsxd rax, dword ptr [rcx + r12*4] ; add rax, rcx ; jmp rax
0x000000000040d500 : movsxd rax, dword ptr [rcx + rax*4] ; add rax, r9 ; jmp rax
0x0000000000410c01 : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x0000000000418af2 : movsxd rax, dword ptr [rcx + rbx*4] ; add rax, r9 ; jmp rax
0x0000000000462f8d : movsxd rax, dword ptr [rcx] ; add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004981de : movsxd rax, dword ptr [rcx] ; add rax, rcx ; jmp rax
0x0000000000498b05 : movsxd rax, dword ptr [rdi + r12*4] ; add rax, rdi ; jmp rax
0x0000000000417568 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, r15 ; jmp rax
0x000000000048b547 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000041146b : movsxd rax, dword ptr [rdi + rdx*4] ; add rax, rdi ; jmp rax
0x0000000000498b06 : movsxd rax, dword ptr [rdi] ; add rax, rdi ; jmp rax
0x0000000000414e0f : movsxd rax, dword ptr [rdx + r13*4] ; add rax, rdx ; jmp rax
0x000000000040f76a : movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000414e10 : movsxd rax, dword ptr [rdx + rbp*4] ; add rax, rdx ; jmp rax
0x0000000000465274 : movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x0000000000418eba : movsxd rax, dword ptr [rsi + rax*4] ; add rax, r14 ; jmp rax
0x00000000004109da : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000004640f8 : movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x00000000004641b2 : movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x0000000000401f48 : movsxd rax, dword ptr [rsi] ; add cl, cl ; ret
0x00000000004185b9 : movsxd rax, dword ptr [rsp + rax*4] ; add rax, r12 ; jmp rax
0x00000000004a135d : movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x0000000000462bc7 : movsxd rax, ecx ; add rax, rdi ; sub rax, rsi ; ret
0x0000000000462b74 : movsxd rax, ecx ; ret
0x0000000000401669 : movsxd rbp, dword ptr [rsi + rax] ; leave ; ret
0x00000000004c1b8a : movsxd rbx, dword ptr [rsi + rax*8 + 0x74] ; retf 0x93a2
0x0000000000462bb9 : movsxd rbx, ecx ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000044826d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000460049 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000043fdc6 : movsxd rcx, dword ptr [rax - 0x7d] ; ret 0xe901
0x000000000044eebc : movsxd rcx, dword ptr [rbx + rcx*4] ; add r9, r11 ; jmp r9
0x000000000044993c : movsxd rcx, dword ptr [rbx + rcx*4] ; lea r9, [r11 + r9] ; jmp r9
0x000000000044826e : movsxd rcx, dword ptr [rbx + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000046004a : movsxd rcx, dword ptr [rbx + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000004408d2 : movsxd rcx, dword ptr [rdx + rcx*4] ; lea r10, [r10 + r9] ; jmp r10
0x0000000000464120 : movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x0000000000462c07 : movsxd rcx, ecx ; lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x0000000000428857 : movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x0000000000476f9f : movsxd rdi, dword ptr [r11 + rsi*4] ; add rdi, r11 ; jmp rdi
0x0000000000476fa0 : movsxd rdi, dword ptr [rbx + rsi*4] ; add rdi, r11 ; jmp rdi
0x0000000000428858 : movsxd rdi, dword ptr [rdx + rdi*4] ; add rdi, r10 ; jmp rdi
0x00000000004cf8f9 : movsxd rdi, ecx ; call qword ptr [rbx]
0x00000000004adf79 : movsxd rdi, edx ; call qword ptr [rdx + 0x22fffa62]
0x00000000004adef5 : movsxd rdi, edx ; call qword ptr [rsi]
0x00000000004ae0b5 : movsxd rdi, edx ; call rax
0x00000000004ae0b1 : movsxd rdi, edx ; inc dword ptr [rax + 0x63] ; cli ; call rax
0x00000000004ae035 : movsxd rdi, edx ; jmp rsp
0x00000000004b0845 : movsxd rdi, esp ; push qword ptr [rax + 0x62] ; cld ; jmp qword ptr [rax]
0x0000000000449a0f : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000449a10 : movsxd rdx, dword ptr [rbx + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000410d3b : movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x000000000042856f : movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x0000000000476aa0 : movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x0000000000476aa1 : movsxd rsi, dword ptr [rax + rcx*4] ; add rsi, r8 ; jmp rsi
0x00000000004aa8a5 : movsxd rsi, esi ; call qword ptr [rax]
0x000000000046202c : movsxd rsi, esi ; ret 0x7520
0x0000000000401d69 : movsxd rsp, dword ptr [rbp + 6] ; add cl, cl ; ret
0x00000000004630ef : movups xmmword ptr [r11], xmm4 ; ret
0x0000000000463176 : movups xmmword ptr [r11], xmm8 ; ret
0x0000000000463177 : movups xmmword ptr [rbx], xmm0 ; ret
0x00000000004630f0 : movups xmmword ptr [rbx], xmm4 ; ret
0x00000000004630eb : movups xmmword ptr [rcx - 0x30], xmm0 ; movups xmmword ptr [r11], xmm4 ; ret
0x00000000004630ea : movups xmmword ptr [rcx - 0x30], xmm8 ; movups xmmword ptr [r11], xmm4 ; ret
0x0000000000463172 : movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000462ed2 : movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000463059 : movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x0000000000463036 : movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x0000000000462ecf : movups xmmword ptr [rdi], xmm0 ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000004a6ea5 : movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000491901 : movzx eax, al ; add rsp, 0x58 ; ret
0x00000000004a449c : movzx eax, al ; neg eax ; ret
0x00000000004a0d69 : movzx eax, al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040dd39 : movzx eax, al ; ret
0x000000000046b480 : movzx eax, al ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x0000000000431550 : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041a56e : movzx eax, byte ptr [rax] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000432751 : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042ec3e : movzx eax, byte ptr [rax] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004347df : movzx eax, byte ptr [rax] ; ret
0x000000000048810a : movzx eax, byte ptr [rdi + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000441c68 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000448000 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000447b40 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000441c83 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000432760 : movzx eax, byte ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042ec50 : movzx eax, byte ptr [rdx] ; ret
0x0000000000407258 : movzx eax, byte ptr [rsi] ; mov byte ptr [rdi], al ; ret
0x0000000000431551 : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000464180 : movzx eax, cl ; pop rbx ; ret
0x000000000046268a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x462689 ; ret
0x000000000046273a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x462739 ; ret
0x0000000000449124 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x0000000000462fa8 : movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000441c80 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000448003 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000428df3 : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x428ddb ; ret
0x0000000000441e41 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000004462b8 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000447f88 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; vzeroupper ; ret
0x0000000000441cd3 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000462054 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x00000000004620b4 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x00000000004620a4 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000462094 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000462084 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000462074 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000462064 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000451200 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000448ed7 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000046203b : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x000000000040c170 : movzx edx, byte ptr [rsi] ; mov byte ptr [rax], dl ; mov rax, rbx ; pop rbx ; ret
0x00000000004518e0 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000447b43 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000447b69 : movzx edx, dl ; sub eax, edx ; ret
0x0000000000451180 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000451870 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000048f407 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000465577 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000043481f : neg eax ; ret
0x000000000040fdac : nop ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret 0xc283
0x0000000000450937 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000467447 : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x467458 ; call r12
0x000000000044858c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000491b3c : nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004ad900 : nop ; add edi, edx ; inc dword ptr [rax + 5] ; cli ; call qword ptr [rax]
0x000000000040156c : nop ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000046b5bf : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040d4dd : nop ; add rsp, 8 ; ret
0x00000000004ad2ec : nop ; and cl, bh ; jmp qword ptr [rax]
0x00000000004a174f : nop ; call rax
0x000000000046bcf0 : nop ; call rsi
0x00000000004d3a6d : nop ; cld ; call rdx
0x00000000004d3a59 : nop ; cld ; jmp qword ptr [rcx]
0x00000000004ae340 : nop ; cli ; call qword ptr [rax]
0x00000000004ae0a8 : nop ; cli ; jmp qword ptr [rax]
0x00000000004ae330 : nop ; cmp al, 0xfa ; call qword ptr [rax]
0x00000000004ae364 : nop ; cmp dl, bh ; call qword ptr [rax]
0x00000000004ae36c : nop ; cmp edi, edx ; call qword ptr [rax]
0x00000000004ae328 : nop ; cmp edx, edi ; call qword ptr [rax]
0x00000000004ad9d8 : nop ; cmp edx, edi ; jmp qword ptr [rax]
0x000000000040af7f : nop ; cmp qword ptr [rdi + 8], 0 ; sete al ; ret
0x0000000000468b4f : nop ; cmp rcx, qword ptr [rax + 0x10] ; jae 0x468b48 ; ret
0x000000000049e7df : nop ; jmp rdx
0x00000000004aab74 : nop ; jne 0x4aab70 ; call rax
0x000000000040a50f : nop ; lea rax, [rdi + 0x10] ; ret
0x00000000004057cf : nop ; lea rax, [rdi + 8] ; ret
0x0000000000406c5f : nop ; lea rax, [rip + 0xa3298] ; ret
0x00000000004067bf : nop ; lea rax, [rip + 0xa361b] ; ret
0x00000000004017f3 : nop ; leave ; ret
0x000000000040bd84 : nop ; loop 0x40bd96 ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004ae458 : nop ; mov al, 0xfa ; push qword ptr [rax] ; mov dl, 0xfa ; call rax
0x000000000044b50f : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000435263 : nop ; mov dword ptr [rip + 0x2a7eea], eax ; ret
0x000000000044b6ef : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000004a13cf : nop ; mov eax, 0x27 ; syscall
0x00000000004915ef : nop ; mov eax, 0x3f ; syscall
0x0000000000467e0f : nop ; mov eax, 0x63 ; syscall
0x0000000000490ebf : nop ; mov eax, 0xc9 ; syscall
0x0000000000468024 : nop ; mov eax, 0xca ; syscall
0x000000000040ae0f : nop ; mov eax, 0xf ; ret
0x0000000000432b7f : nop ; mov eax, 0xffffffff ; ret
0x000000000049bddf : nop ; mov eax, 1 ; pop rbx ; ret
0x00000000004ae478 : nop ; mov ebp, 0xbf30fffa ; cli ; call rax
0x000000000044baaf : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004607df : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x000000000048de89 : nop ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000040a52f : nop ; mov qword ptr [rdi + 0x10], rsi ; ret
0x000000000040a4ef : nop ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000040cc8f : nop ; mov qword ptr [rdi], rsi ; ret
0x00000000004350e3 : nop ; mov qword ptr [rip + 0x2a577d], rax ; ret
0x00000000004350d3 : nop ; mov qword ptr [rip + 0x2a5785], rax ; ret
0x0000000000435083 : nop ; mov qword ptr [rip + 0x2a578d], rax ; ret
0x0000000000435073 : nop ; mov qword ptr [rip + 0x2a57a5], rax ; ret
0x0000000000407f5f : nop ; mov rax, 0x6dc4c0 ; ret
0x000000000041972f : nop ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000040ad2f : nop ; mov rax, qword ptr [rdi + 8] ; add rax, qword ptr [rdi] ; ret
0x0000000000406cbf : nop ; mov rax, qword ptr [rdi + 8] ; ret
0x000000000040718f : nop ; mov rax, qword ptr [rdi] ; add rax, qword ptr [rax - 0x18] ; ret
0x000000000040738f : nop ; mov rax, qword ptr [rdi] ; ret
0x000000000041749f : nop ; mov rax, qword ptr [rsi + 0xb8] ; ret
0x000000000041a63f : nop ; mov rax, qword ptr [rsi + 8] ; ret
0x000000000040759f : nop ; mov rax, rdi ; ret
0x000000000040715f : nop ; mov rax, rsi ; mov qword ptr [rdi], rsi ; ret
0x000000000046027f : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004c4f1c : nop ; or dword ptr [rax], eax ; add byte ptr [rsi - 0x24], al ; jmp qword ptr [rsi]
0x0000000000400e11 : nop ; pop rbp ; ret
0x00000000004046df : nop ; pop rbx ; ret
0x00000000004ae31c : nop ; push rsp ; cli ; push rax ; cli ; call qword ptr [rax]
0x00000000004004cf : nop ; ret
0x00000000004d4300 : nop ; retf
0x00000000004cf2c0 : nop ; stc ; call qword ptr [rax]
0x00000000004cf310 : nop ; stc ; call qword ptr [rbx]
0x00000000004ad4ad : nop ; stc ; jmp rax
0x00000000004ad4a9 : nop ; stc ; push rax ; nop ; stc ; jmp rax
0x00000000004ad984 : nop ; stc ; stc ; jmp rax
0x0000000000420b2c : nop ; stc ; std ; dec dword ptr [rax - 0x77] ; ret 0xf748
0x000000000043439f : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000004048ef : nop ; sub rsp, 8 ; call rdi
0x00000000004adbf0 : nop ; xor al, 0xfa ; call qword ptr [rax]
0x00000000004adc00 : nop ; xor bh, dl ; call qword ptr [rax]
0x000000000040d7af : nop ; xor eax, eax ; ret
0x00000000004adbf8 : nop ; xor edi, edx ; call qword ptr [rax]
0x00000000004adc08 : nop ; xor edx, edi ; call qword ptr [rax]
0x000000000040d7ff : nop ; xor r10d, r10d ; mov rax, r10 ; ret
0x0000000000429d98 : nop dword ptr [rax + rax] ; call qword ptr [rbx]
0x0000000000435d38 : nop dword ptr [rax + rax] ; call rax
0x00000000004a1968 : nop dword ptr [rax + rax] ; call rbx
0x00000000004601bb : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000407f4b : nop dword ptr [rax + rax] ; mov qword ptr [rdi], rsi ; ret
0x000000000040adcb : nop dword ptr [rax + rax] ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000004073cb : nop dword ptr [rax + rax] ; mov rax, qword ptr [rdi] ; ret
0x0000000000400b13 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x0000000000403f68 : nop dword ptr [rax + rax] ; pop rbx ; ret
0x0000000000400adb : nop dword ptr [rax + rax] ; ret
0x000000000040494b : nop dword ptr [rax + rax] ; sub rsp, 8 ; call rdi
0x000000000041079b : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x000000000040de4b : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000049091c : nop dword ptr [rax] ; add rax, 1 ; ret
0x000000000040867c : nop dword ptr [rax] ; add rax, qword ptr [rax - 0x18] ; ret
0x00000000004057bc : nop dword ptr [rax] ; lea rax, [rdi + 8] ; ret
0x000000000040729d : nop dword ptr [rax] ; mov byte ptr [rdi], dl ; ret
0x000000000043f4ed : nop dword ptr [rax] ; mov eax, 0x16 ; ret
0x000000000046555c : nop dword ptr [rax] ; mov eax, 0x18 ; syscall
0x000000000048df85 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x0000000000465c5d : nop dword ptr [rax] ; mov eax, 3 ; syscall
0x00000000004659dc : nop dword ptr [rax] ; mov eax, 8 ; syscall
0x000000000040cc7d : nop dword ptr [rax] ; mov qword ptr [rdi], rsi ; ret
0x000000000040466c : nop dword ptr [rax] ; mov rax, qword ptr [rdi - 8] ; ret
0x000000000040749c : nop dword ptr [rax] ; mov rax, qword ptr [rdi] ; ret
0x00000000004367ac : nop dword ptr [rax] ; mov rax, rdx ; ret
0x0000000000407255 : nop dword ptr [rax] ; movzx eax, byte ptr [rsi] ; mov byte ptr [rdi], al ; ret
0x0000000000400b55 : nop dword ptr [rax] ; pop rbp ; ret
0x00000000004647ac : nop dword ptr [rax] ; pop rbx ; ret
0x0000000000435d2d : nop dword ptr [rax] ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000004044c5 : nop dword ptr [rax] ; ret
0x000000000043072d : nop dword ptr [rax] ; xor eax, eax ; jmp 0x4306fd
0x000000000040d43c : nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000004658d9 : nop dword ptr [rax] ; xor eax, eax ; syscall
0x000000000041c534 : nop dword ptr [rax] ; xor edi, edi ; mov eax, edx ; syscall
0x00000000004a1967 : nop dword ptr cs:[rax + rax] ; call rbx
0x0000000000429d97 : nop word ptr [rax + rax] ; call qword ptr [rbx]
0x0000000000435d37 : nop word ptr [rax + rax] ; call rax
0x0000000000407f4a : nop word ptr [rax + rax] ; mov qword ptr [rdi], rsi ; ret
0x00000000004073ca : nop word ptr [rax + rax] ; mov rax, qword ptr [rdi] ; ret
0x00000000004a0cda : nop word ptr [rax + rax] ; pop rbx ; ret
0x000000000040d42a : nop word ptr [rax + rax] ; ret
0x00000000004113fa : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004c7709 : or ah, dh ; jmp qword ptr [rax]
0x0000000000400c05 : or al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000446437 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045b46f : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000446465 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000491a22 : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000004919d1 : or al, 0 ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x0000000000439c9c : or al, 0 ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x0000000000445458 : or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000048fd48 : or al, 0 ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000004881f8 : or al, 0 ; add byte ptr [rcx + 1], al ; ret 0x8b48
0x0000000000441c66 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000439c6a : or al, 0x1e ; mov rax, rsi ; pop rbx ; ret
0x00000000004a1be4 : or al, 0x24 ; call 0x43e644
0x000000000042f343 : or al, 0x24 ; mov rdi, rbx ; call rax
0x00000000004c6e98 : or al, 0x29 ; add byte ptr [rax], al ; in al, 3 ; hlt ; jmp qword ptr [rbx]
0x000000000041b9f5 : or al, 0x2c ; add byte ptr [rbp - 0xcfb8b40], al ; ret
0x000000000049ba39 : or al, 0x37 ; jae 0x49b9e7 ; xor eax, eax ; ret
0x00000000004405e0 : or al, 0x39 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004c8798 : or al, 0x42 ; add byte ptr [rax], al ; and al, 0x1f ; hlt ; jmp qword ptr [rsi]
0x0000000000467e9e : or al, 0x48 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000465c2d : or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x0000000000432653 : or al, 0x48 ; mov dword ptr [rsp], edi ; call 0x42e8e7
0x000000000041c441 : or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x00000000004a1123 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000048b043 : or al, 0x7e ; ret 0x8944
0x000000000041c0d0 : or al, 0x81 ; retf 0x440
0x0000000000475353 : or al, 0x83 ; inc byte ptr [rbx] ; je 0x475367 ; ret
0x000000000047a52b : or al, 0x83 ; ret
0x0000000000414aeb : or al, 0x83 ; ret 0x4801
0x000000000043efd6 : or al, 0x83 ; retf 0x8902
0x0000000000464121 : or al, 0x86 ; add rcx, rsi ; jmp rcx
0x000000000047f7ba : or al, 0x89 ; ret 0xc689
0x00000000004641ab : or al, 0x89 ; ret 0xe283
0x00000000004408d3 : or al, 0x8a ; lea r10, [r10 + r9] ; jmp r10
0x0000000000456d94 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000044eebd : or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000044993d : or al, 0x8b ; lea r9, [r11 + r9] ; jmp r9
0x00000000004cd398 : or al, 0x8e ; add byte ptr [rax], al ; hlt ; jae 0x4cd39c ; call qword ptr [rdi]
0x0000000000491af8 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000044826f : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000046004b : or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000449941 : or al, 0xb ; jmp r9
0x000000000046004f : or al, 0xb ; jmp rcx
0x00000000004ab374 : or al, 0xc0 ; idiv bh ; rol dl, 0xf6 ; inc dword ptr [rax] ; ret
0x00000000004c7ab4 : or al, 0xe ; hlt ; jmp qword ptr [rax]
0x00000000004cba04 : or al, 0xe7 ; cmc ; call qword ptr [rdx]
0x000000000047328f : or al, 0xe9 ; ret
0x000000000048dc2c : or al, 0xeb ; ret 0x5590
0x000000000041f23f : or al, 0xf ; retf 0xd289
0x0000000000451403 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000004c78b5 : or al, 0xf4 ; call qword ptr [rdx]
0x00000000004c78c9 : or al, 0xf4 ; jmp qword ptr [rdx]
0x0000000000482f1d : or al, 0xf6 ; ret 0xf01
0x000000000048dc26 : or al, 0xfa ; dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x000000000043ed91 : or al, 9 ; ret 0xbae9
0x0000000000411381 : or al, byte ptr [rax + 0x2c7445f9] ; xor eax, eax ; pop rbx ; ret
0x000000000048fcfb : or al, byte ptr [rax] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000446617 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045a001 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000446645 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041945a : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000466711 : or al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000443f68 : or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004016cc : or al, byte ptr [rax] ; add rax, rdx ; jmp rax
0x0000000000404095 : or al, byte ptr [rax] ; ret
0x000000000042291d : or al, byte ptr [rbx - 0x7bf0fd07] ; ret
0x0000000000425dac : or al, byte ptr [rbx - 0x7bf0fd07] ; ret 0x18
0x0000000000469106 : or al, byte ptr [rcx + rcx*8 - 0x7cb7ed8c] ; ret 0x4801
0x00000000004d3973 : or al, byte ptr [rcx] ; ret
0x00000000004067c4 : or al, byte ptr ss:[rax] ; ret
0x000000000042484e : or al, ch ; cld ; retf 0xffff
0x00000000004247ad : or al, ch ; popfq ; retf
0x00000000004248f4 : or al, ch ; push rsi ; retf 0xffff
0x0000000000426f87 : or al, ch ; ret
0x0000000000423228 : or al, ch ; ret 0x18e
0x0000000000426088 : or al, ch ; ret 0xffb2
0x000000000042247f : or al, ch ; retf
0x0000000000438ff7 : or al, ch ; xchg eax, ebx ; ret 0xffff
0x00000000004d4258 : or al, cl ; cld ; jmp qword ptr [rdx]
0x00000000004d150c : or bh, 0 ; add byte ptr [rax], dl ; insd dword ptr [rdi], dx ; std ; call rdx
0x00000000004404c0 : or bh, dh ; ret 0
0x00000000004ad86d : or bh, dl ; jmp qword ptr [rax]
0x00000000004367aa : or bl, al ; nop dword ptr [rax] ; mov rax, rdx ; ret
0x00000000004044c3 : or bl, al ; nop dword ptr [rax] ; ret
0x00000000004877a1 : or bl, bpl ; retf
0x00000000004210cd : or bl, byte ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000041ae4d : or bl, ch ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000404295 : or bl, ch ; retf
0x00000000004515c3 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x00000000004087d7 : or bl, dh ; ret
0x000000000040af44 : or byte ptr [r10 + 8], r14b ; ret
0x000000000040e2c2 : or byte ptr [r11 - 0x7bf0fe08], r8b ; retf 0xfffe
0x000000000046c966 : or byte ptr [r15], 0x8e ; ret 1
0x000000000042d481 : or byte ptr [r8 + 0x29], r9b ; ret
0x000000000042943d : or byte ptr [r8 + 0x39], cl ; ret
0x000000000040c00c : or byte ptr [r8 + 0x39], r9b ; ret 0x577
0x000000000040bb07 : or byte ptr [r8 + 0x39], r9b ; retf
0x000000000040b2a4 : or byte ptr [r8 + 0x39], r9b ; retf 0x1d74
0x000000000040c41f : or byte ptr [r8 + 0x39], r9b ; retf 0x2773
0x000000000046dcb3 : or byte ptr [r8 + 0xf], cl ; ret
0x00000000004a076f : or byte ptr [r8 + 2], r15b ; ret
0x000000000042d54f : or byte ptr [r8 - 0x3f], r9b ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000049b57a : or byte ptr [r8 - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000045e4f8 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000049ba65 : or byte ptr [r8 - 0x7b], cl ; sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x0000000000494df2 : or byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000426ba2 : or byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; retf 0xffe7
0x000000000040af75 : or byte ptr [r8], r8b ; add byte ptr [rax], al ; add dh, al ; add byte ptr [rax], al ; ret
0x00000000004a07b4 : or byte ptr [r9 + 0x2b802], r9b ; add byte ptr [rax], al ; ret
0x0000000000418eb7 : or byte ptr [r9 + 0x63], r9b ; add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000041136b : or byte ptr [r9 - 0x76b7ef87], cl ; ret 0x8948
0x000000000045e5b7 : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x000000000042d482 : or byte ptr [rax + 0x29], cl ; ret
0x000000000042ee35 : or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000042943e : or byte ptr [rax + 0x39], cl ; ret
0x000000000040d394 : or byte ptr [rax + 0x39], cl ; ret 0x3d77
0x000000000040c00d : or byte ptr [rax + 0x39], cl ; ret 0x577
0x000000000046f568 : or byte ptr [rax + 0x39], cl ; ret 0x8e0f
0x000000000040bb08 : or byte ptr [rax + 0x39], cl ; retf
0x000000000040b2a5 : or byte ptr [rax + 0x39], cl ; retf 0x1d74
0x000000000040c420 : or byte ptr [rax + 0x39], cl ; retf 0x2773
0x00000000004347d9 : or byte ptr [rax + 0x39], cl ; sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x000000000040d393 : or byte ptr [rax + 0x39], r9b ; ret 0x3d77
0x00000000004153db : or byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rcx ; jmp rax
0x00000000004cfd94 : or byte ptr [rax + 0x7fc80000], bh ; stc ; call qword ptr [rcx]
0x00000000004cca1e : or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rbx + 0xa] ; ret
0x000000000046dcb4 : or byte ptr [rax + 0xf], cl ; ret
0x0000000000435886 : or byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000004a28fc : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x00000000004087bc : or byte ptr [rax + 1], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000405150 : or byte ptr [rax + 1], cl ; ret
0x00000000004a0770 : or byte ptr [rax + 2], bh ; ret
0x0000000000407793 : or byte ptr [rax - 0x39], cl ; ret
0x000000000042d550 : or byte ptr [rax - 0x3f], cl ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000435123 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x0000000000466924 : or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x000000000040b29b : or byte ptr [rax - 0x75], cl ; cmovs ebp, dword ptr [rcx] ; retf
0x000000000040c41c : or byte ptr [rax - 0x75], cl ; or byte ptr [r8 + 0x39], r9b ; retf 0x2773
0x0000000000467302 : or byte ptr [rax - 0x77], cl ; call 0xffffffffe145d06b
0x000000000045e4fd : or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000049b57b : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004043aa : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000004326fb : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x000000000048779e : or byte ptr [rax - 0x77], cl ; or bl, bpl ; retf
0x000000000045e4f9 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000414bf8 : or byte ptr [rax - 0x77], cl ; or cl, byte ptr [rax - 0x77] ; retf 0x8b48
0x000000000041a2ae : or byte ptr [rax - 0x77], cl ; ret
0x0000000000401c4b : or byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000004071be : or byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000004066fa : or byte ptr [rax - 0x77], cl ; retf
0x000000000042cbcb : or byte ptr [rax - 0x77], cl ; retf 0x294c
0x00000000004a1613 : or byte ptr [rax - 0x77], cl ; retf 0xc148
0x000000000048779d : or byte ptr [rax - 0x77], r9b ; or bl, bpl ; retf
0x00000000004a556a : or byte ptr [rax - 0x77], r9b ; ret
0x00000000004150cb : or byte ptr [rax - 0x7af0c1c6], al ; ret 0xffc3
0x000000000049b4a8 : or byte ptr [rax - 0x7b], cl ; push qword ptr [rbp - 0x2e] ; ret
0x0000000000494df3 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000426ba3 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 0xffe7
0x00000000004a57be : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rax + rax*8 + 0x49], 0x83 ; ret 0xf608
0x000000000049ba66 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x00000000004a5817 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rsi*4 + 0x48], 0x83 ; ret 0xf608
0x000000000043adb0 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000478200 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000041b14a : or byte ptr [rax - 0x7d], cl ; ret
0x00000000004976a7 : or byte ptr [rax - 0x7d], cl ; ret 0x101
0x0000000000499d12 : or byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000468fc0 : or byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000042db66 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000048e69e : or byte ptr [rax], al ; add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000043665d : or byte ptr [rax], al ; add al, ch ; retf
0x000000000043644b : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000404ad6 : or byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0x6cd0
0x0000000000404b36 : or byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0x6d80
0x0000000000401b13 : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000004468e7 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045a1a1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000446825 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000433477 : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040a3fc : or byte ptr [rax], al ; add byte ptr [rax], al ; add dh, al ; adc byte ptr [rax], r8b ; ret
0x000000000040ac17 : or byte ptr [rax], al ; add byte ptr [rax], al ; add dh, al ; add byte ptr [rax], al ; ret
0x000000000046dc5a : or byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x0000000000477b82 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x0000000000477a25 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x00000000004641f5 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000041a5f7 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004659e1 : or byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000004440e8 : or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043b686 : or byte ptr [rax], al ; add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x43b659 ; ret
0x000000000043c65c : or byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3d83
0x000000000041d253 : or byte ptr [rax], al ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000042856c : or byte ptr [rax], al ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x000000000040af83 : or byte ptr [rax], al ; sete al ; ret
0x000000000045b85e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000040ac16 : or byte ptr [rax], r8b ; add byte ptr [rax], al ; add dh, al ; add byte ptr [rax], al ; ret
0x00000000004196af : or byte ptr [rbp + 0x1a], dh ; mov rax, qword ptr [rax] ; ret
0x00000000004a1b1b : or byte ptr [rbp + 0x39481e04], cl ; ret 0x830f
0x000000000049ebf1 : or byte ptr [rbp + 0x39], cl ; ret 0x8b48
0x00000000004a1836 : or byte ptr [rbp + 0x440f4cf6], al ; ret
0x00000000004cfa94 : or byte ptr [rbp + 0x6c480000], dh ; stc ; jmp qword ptr [rcx]
0x000000000041971e : or byte ptr [rbp + 4], dh ; mov qword ptr [rax], rdx ; ret
0x000000000040d7d9 : or byte ptr [rbp + rcx*4 + 0x14], cl ; retf 0xc741
0x000000000049e873 : or byte ptr [rbp + rcx*4 + 0x24], cl ; ret 0x8d4a
0x0000000000438e22 : or byte ptr [rbp - 0x75], cl ; push rax ; or byte ptr [rcx - 0xa], al ; ret 0xf04
0x00000000004a9583 : or byte ptr [rbp - 0x77], cl ; ret
0x000000000046624c : or byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0xc221
0x0000000000465d63 : or byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0xca21
0x00000000004a2bb7 : or byte ptr [rbx + 0x394401c2], al ; retf 0x830f
0x00000000004067a2 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; jmp rax
0x00000000004036f6 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000040427b : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000046718e : or byte ptr [rbx + 0x94801e2], al ; ret 0x8949
0x0000000000439d67 : or byte ptr [rbx + 0x94807e0], al ; ret
0x0000000000439d66 : or byte ptr [rbx + 0x94807e0], r8b ; ret
0x00000000004150bd : or byte ptr [rbx + 0xf01107a], al ; test edi, ecx ; ret
0x000000000040cc59 : or byte ptr [rbx + rdi*4 + 0x48], dh ; add esp, 0x10 ; pop rbx ; ret
0x000000000047f497 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x000000000042b8e9 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x000000000040e2c3 : or byte ptr [rbx - 0x7bf0fe08], al ; retf 0xfffe
0x0000000000468104 : or byte ptr [rbx], al ; add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x0000000000497719 : or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x00000000004a055b : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00000000004a07b5 : or byte ptr [rcx + 0x2b802], cl ; add byte ptr [rax], al ; ret
0x000000000049d64d : or byte ptr [rcx + 0x33], cl ; add byte ptr [r8 + 9], r9b ; ret 0x840f
0x0000000000495242 : or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0x1475
0x0000000000495214 : or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0xe75
0x000000000042c548 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x000000000042c337 : or byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x00000000004a6495 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x000000000042bf63 : or byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; pop r13 ; ret
0x0000000000418eb8 : or byte ptr [rcx + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000048b029 : or byte ptr [rcx + 0xf], al ; mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x00000000004a435b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x000000000040d7f9 : or byte ptr [rcx + r9*4 - 0x30], cl ; ret
0x000000000049f550 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x0000000000407f26 : or byte ptr [rcx + rax*8 + 0x48], dh ; add esp, 0x10 ; pop rbx ; ret
0x00000000004a5c1b : or byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x000000000040d7fa : or byte ptr [rcx + rcx*4 - 0x30], cl ; ret
0x0000000000408996 : or byte ptr [rcx + rcx*4 - 0x37], cl ; xor eax, eax ; call 0x404c98
0x000000000042d0f1 : or byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x00000000004a0562 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x00000000004671fb : or byte ptr [rcx - 0x75], cl ; add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x000000000041136c : or byte ptr [rcx - 0x76b7ef87], cl ; ret 0x8948
0x000000000045e5b8 : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x000000000043c8f8 : or byte ptr [rcx - 0x77], cl ; ret
0x000000000042874a : or byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x00000000004669ca : or byte ptr [rcx - 0x77], cl ; retf
0x000000000040e82b : or byte ptr [rcx - 0x77], cl ; sbb al, r13b ; retf
0x0000000000466996 : or byte ptr [rcx - 0xa], al ; ret
0x0000000000438e26 : or byte ptr [rcx - 0xa], al ; ret 0xf04
0x0000000000414f6c : or byte ptr [rcx], al ; add byte ptr [rax], al ; and cl, ch ; cmc ; retf 0xffff
0x00000000004167fe : or byte ptr [rcx], al ; add byte ptr [rax], al ; sub dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x000000000042b87b : or byte ptr [rcx], al ; add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x00000000004307da : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000040890e : or byte ptr [rcx], dh ; shr al, 0x7a ; ret
0x00000000004c28fe : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000497c90 : or byte ptr [rdi + 0x315], 4 ; ret
0x0000000000497be0 : or byte ptr [rdi + 0x315], 4 ; xor eax, eax ; ret
0x000000000040b3f6 : or byte ptr [rdi + rcx - 0x42], al ; ret 0xd231
0x0000000000407c36 : or byte ptr [rdi], 0x4d ; ret
0x00000000004711fb : or byte ptr [rdi], 0x85 ; retf 0xfffa
0x0000000000471587 : or byte ptr [rdi], 0x85 ; rol dword ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000046c967 : or byte ptr [rdi], 0x8e ; ret 1
0x000000000042a202 : or byte ptr [rdi], cl ; mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000491900 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x00000000004a449b : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000041f234 : or byte ptr [rdi], cl ; retf 0x8941
0x0000000000449f0b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x0000000000436ef6 : or byte ptr [rdi], cl ; test ebx, ebp ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000049f1b3 : or byte ptr [rdi], cl ; xchg eax, edx ; ret 0x8949
0x000000000041c501 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000040af45 : or byte ptr [rdx + 8], dh ; ret
0x000000000048da03 : or byte ptr [rdx + rbx - 0x7d], dh ; retf 0x4808
0x00000000004aa8fc : or byte ptr [rsi - 0xa], ah ; jmp qword ptr [rbx]
0x00000000004c6b94 : or byte ptr [rsi], ah ; add byte ptr [rax], al ; test al, 2 ; hlt ; call qword ptr [rbx]
0x00000000004c7068 : or byte ptr [rsp + rsi*8], al ; jmp qword ptr [rdx]
0x00000000004ae4a4 : or cl, 0xfa ; call rax
0x0000000000474711 : or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x000000000042c9e4 : or cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000414bfb : or cl, byte ptr [rax - 0x77] ; retf 0x8b48
0x000000000040b9bb : or cl, byte ptr [rax - 0x77] ; sal dword ptr [rcx], 1 ; shr cl, cl ; retf 0xfffb
0x000000000042c2d7 : or cl, byte ptr [rax - 0x7d] ; ret
0x000000000043fa62 : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000040e000 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000004a2d6d : or cl, byte ptr [rcx - 0x75] ; add al, 0x24 ; add rax, qword ptr [rdx + 8] ; call rax
0x00000000004976b5 : or cl, ch ; ret
0x000000000042f9d6 : or cl, ch ; retf
0x000000000049b819 : or cl, ch ; retf 0xfffd
0x00000000004c784d : or dh, ah ; jmp qword ptr [rdx]
0x000000000040b421 : or dh, al ; add al, 0x30 ; add bl, dh ; ret
0x00000000004c22e2 : or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004514e3 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000041ba55 : or dh, bl ; ret
0x00000000004c210a : or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x0000000000488b72 : or dh, cl ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004699bc : or dh, dh ; ret 0x8902
0x0000000000436a47 : or dh, dh ; ret 0xf02
0x00000000004ad86c : or dil, dl ; jmp qword ptr [rax]
0x00000000004ad770 : or dl, 0xf9 ; call rax
0x00000000004ad889 : or dl, bh ; call qword ptr [rax]
0x00000000004ad869 : or dl, bh ; inc dword ptr [rax + 0xa] ; cli ; jmp qword ptr [rax]
0x00000000004ad90d : or dl, bh ; jmp rax
0x000000000043c65a : or dword ptr [rax + 0xf000008], 0xffffff93 ; ret 0x3d83
0x000000000046a11a : or dword ptr [rax + 1], 0xffffffd8 ; jmp rax
0x0000000000428d1b : or dword ptr [rax + rax*8 - 0x38b79f8c], eax ; ret 0xfff0
0x0000000000444d27 : or dword ptr [rax + rax], edx ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000047730e : or dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x000000000045cd7e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x0000000000414f6b : or dword ptr [rax], 1 ; add byte ptr [rax], al ; and cl, ch ; cmc ; retf 0xffff
0x000000000048e8eb : or dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000401f79 : or dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000401f67 : or dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000401ea7 : or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000401eb6 : or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x0000000000401b94 : or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000004a4ba0 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004467f7 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045b70f : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000446735 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042db27 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000046663d : or dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000445738 : or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000047ae35 : or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004c4edd : or dword ptr [rax], eax ; add byte ptr [rdi], dh ; fdivr st(3), st(0) ; jmp qword ptr [rsi]
0x00000000004c4f1d : or dword ptr [rax], eax ; add byte ptr [rsi - 0x24], al ; jmp qword ptr [rsi]
0x0000000000414e0d : or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + r13*4] ; add rax, rdx ; jmp rax
0x00000000004ac157 : or dword ptr [rax], ecx ; retf
0x000000000049ed81 : or dword ptr [rbp + 0x39], ecx ; retf
0x00000000004c1a53 : or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004496a6 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000042ee60 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000490373 : or dword ptr [rcx + 0x24], ebp ; add byte ptr [rax + 0x39], cl ; ret
0x000000000049cf48 : or dword ptr [rdi], ecx ; xchg byte ptr [rcx + 0x38000000], dh ; retf 0x850f
0x000000000048b732 : or dword ptr [rdi], ecx ; xchg dword ptr [rdi], esi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x000000000040ff35 : or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x8966
0x0000000000488ee0 : or dword ptr [rdi], ecx ; xchg ecx, esp ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x00000000004c22ae : or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf 0xbb9a
0x0000000000440467 : or dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000049bdd6 : or dword ptr [rip + 0x23f42b], 1 ; pop rbx ; ret
0x00000000004d3970 : or eax, 0x10a0303 ; ret
0x00000000004d39c8 : or eax, 0x1370303 ; ret
0x0000000000460aa1 : or eax, 0x1c478d48 ; ret
0x00000000004d3960 : or eax, 0x34b0303 ; ret
0x00000000004d3994 : or eax, 0x35b0303 ; ret
0x000000000048b552 : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000048adba : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047741a : or eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045c392 : or eax, 0x48c0bc0f ; lea eax, [rdi + rax] ; ret
0x0000000000446347 : or eax, 0x83480000 ; ret 0x4910
0x0000000000459cc1 : or eax, 0x83480000 ; ret 0xe910
0x0000000000446375 : or eax, 0x83480000 ; ret 0xeb10
0x0000000000443c68 : or eax, 0x894d0000 ; retf
0x00000000004a8372 : or eax, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x00000000004017ef : or eax, 0x90000288 ; leave ; ret
0x0000000000490582 : or eax, 0xc2bc0f48 ; shr rax, 2 ; ret
0x000000000049209d : or eax, 0xd8d4c01 ; retf 0x2b4
0x00000000004b8339 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x00000000004b8345 : or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x00000000004c2293 : or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x000000000040d732 : or eax, 0xe8d34800 ; and eax, 1 ; ret
0x0000000000470e45 : or eax, 0xea810000 ; ret 0
0x00000000004c1f33 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x0000000000451393 : or eax, 0xf7f0ff3 ; ret
0x000000000046557d : or eax, 0xffffffff ; ret
0x0000000000447fc9 : or eax, 1 ; ret
0x0000000000400cb9 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000446527 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000459e61 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000446555 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004d0fc8 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000004d07d4 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; cmp byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret 0
0x00000000004666e1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000443de8 : or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004cca20 : or eax, dword ptr [rdx] ; jae 0x4cca32 ; ret
0x00000000004d4ca2 : or eax, dword ptr [rdx] ; ret 0xe0a
0x000000000040dd37 : or eax, edx ; movzx eax, al ; ret
0x000000000041bb13 : or ebp, dword ptr [rax + rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000041bb05 : or ebp, dword ptr [rax + rax] ; test eax, eax ; je 0x41bb18 ; ret
0x0000000000434394 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000042e97d : or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000451553 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000430806 : or ebx, esi ; ret
0x000000000043f2df : or ecx, dword ptr [rax + 0x63] ; ret
0x000000000042f6f7 : or ecx, dword ptr [rax + 1] ; ret 0x8949
0x0000000000408da8 : or ecx, dword ptr [rax + 1] ; retf 0x8948
0x000000000042c4f8 : or ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x000000000044021c : or ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004160c2 : or ecx, dword ptr [rax - 0x7d] ; ret 0x4408
0x00000000004160a2 : or ecx, dword ptr [rax - 0x7d] ; ret 0x4410
0x00000000004a83ef : or ecx, dword ptr [rax - 0x7d] ; ret 0x4810
0x000000000049ea53 : or ecx, dword ptr [rbp + 0x39] ; ret 0x860f
0x00000000004d116b : or edi, dword ptr [rax] ; add byte ptr [rax], al ; add ah, ah ; retf
0x0000000000466699 : or edx, 0x40 ; mov eax, ecx ; syscall
0x00000000004cae61 : or esi, ebp ; call qword ptr [rdx]
0x0000000000451473 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000477b94 : or esi, ebx ; ret
0x000000000041fabf : or esi, edi ; dec dword ptr [rcx - 0x77] ; ret 0x149
0x000000000042ee61 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000047d171 : or esp, dword ptr [rbp + 0x48b4800] ; clc ; jmp rax
0x00000000004cc1ea : or esp, dword ptr [rsi + rcx + 0x18] ; ret
0x0000000000466698 : or r10d, 0x40 ; mov eax, ecx ; syscall
0x00000000004515c2 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000451552 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004514e2 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000451472 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004d116a : or r15d, dword ptr [r8] ; add byte ptr [rax], al ; add ah, ah ; retf
0x00000000004d4ca1 : or r8d, dword ptr [r10] ; ret 0xe0a
0x000000000049b818 : or r9b, bpl ; retf 0xfffd
0x0000000000474710 : or r9b, byte ptr [r8 + 0x39] ; ret 0x1176
0x00000000004d39c7 : or rax, 0x1370303 ; ret
0x00000000004d395f : or rax, 0x34b0303 ; ret
0x00000000004d3993 : or rax, 0x35b0303 ; ret
0x000000000048b551 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000048adb9 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000046557c : or rax, 0xffffffffffffffff ; ret
0x00000000004465c7 : or rax, qword ptr [r8] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004cca1f : or rax, qword ptr [rdx] ; jae 0x4cca33 ; ret
0x00000000004cc1e9 : or rsp, qword ptr [rsi + r9 + 0x18] ; ret
0x0000000000440796 : out 0, al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000440656 : out 0, eax ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000043ea21 : out 0x29, eax ; add dh, dh ; ret 0xf02
0x000000000041a155 : out 0x41, eax ; call rdi
0x00000000004a28a9 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000048ce8d : out 0x48, al ; mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000004a39b7 : out 0x48, eax ; mov dword ptr [rbp - 0x40], edi ; call 0x40048f
0x000000000043ee48 : out 0x48, eax ; sub eax, 0x10 ; ret
0x00000000004c1b20 : out 0x78, al ; jnp 0x4c1b82 ; retf
0x0000000000467f34 : out 0x89, al ; fistp qword ptr [rax + 0x2c] ; syscall
0x00000000004a5b4d : out 0x89, al ; out dx, eax ; call qword ptr [r14]
0x00000000004a5c21 : out 0x89, al ; out dx, eax ; call qword ptr [rax]
0x00000000004a5cfd : out 0x89, al ; out dx, eax ; call qword ptr [rcx]
0x00000000004a5b07 : out 0x89, al ; out dx, eax ; call rax
0x0000000000413e2a : out 0x89, eax ; ret 0xeac1
0x00000000004c00b1 : out 0xb3, al ; retf 0xe80
0x00000000004ad598 : out 0xc1, al ; stc ; inc dword ptr [rsi + 0x7fff9c2] ; ret
0x00000000004c0de0 : out 0xcf, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000048e91c : out 0xe8, al ; xchg eax, esi ; sbb esi, edi ; dec dword ptr [rax + 1] ; ret
0x000000000046a26b : out 0xe8, eax ; call rdi
0x000000000040c68f : out 0xe8, eax ; retf
0x00000000004209ea : out 0xeb, eax ; retf 0x8b49
0x0000000000450d5a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000450dda : out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004cb9f1 : out 0xf5, eax ; call qword ptr [rax]
0x00000000004cba05 : out 0xf5, eax ; call qword ptr [rdx]
0x00000000004c2b08 : out 0xf5, eax ; mov ch, 0xab ; ret
0x00000000004d0abd : out 0xf9, al ; call rcx
0x00000000004ad695 : out 0xf9, al ; jmp qword ptr [rax]
0x000000000047e032 : out 0xff, eax ; dec dword ptr [rbp + 0x63] ; ret 0x20be
0x0000000000473aee : out dx, al ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x000000000040dd86 : out dx, al ; add dword ptr [rax - 0x7b], ecx ; push qword ptr [rbp - 0x15] ; xor eax, eax ; ret
0x0000000000488d99 : out dx, al ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004c5975 : out dx, al ; call qword ptr [rbx]
0x00000000004c5949 : out dx, al ; call qword ptr [rcx]
0x00000000004c59b1 : out dx, al ; call qword ptr [rdi]
0x00000000004c5931 : out dx, al ; call qword ptr [rsi]
0x00000000004cbad9 : out dx, al ; cmc ; jmp qword ptr [rax]
0x00000000004c1f37 : out dx, al ; fcmovb st(0), st(3) ; ret
0x000000000044047e : out dx, al ; jns 0x440488 ; add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x000000000046659d : out dx, al ; mov edi, ebx ; mov eax, 0x17 ; syscall
0x0000000000467e7d : out dx, al ; mov edi, ebx ; mov eax, 0x2a ; syscall
0x000000000046594d : out dx, al ; mov edi, ebx ; mov eax, 1 ; syscall
0x000000000046587d : out dx, al ; mov edi, ebx ; xor eax, eax ; syscall
0x000000000044b55a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004939ec : out dx, al ; mov rdi, rax ; call 0x40043e
0x000000000043f552 : out dx, al ; mov rdi, rax ; call rcx
0x0000000000466638 : out dx, al ; mov rdi, rbp ; mov eax, 9 ; syscall
0x000000000045116a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000045b5be : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004c2292 : out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x00000000004c1b1f : out dx, al ; out 0x78, al ; jnp 0x4c1b83 ; retf
0x000000000043df03 : out dx, al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x000000000043bf16 : out dx, al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000407be1 : out dx, al ; ret
0x00000000004a0b4e : out dx, al ; ret 0xfff7
0x0000000000433959 : out dx, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004339b1 : out dx, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000488819 : out dx, eax ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000043da74 : out dx, eax ; call 0x439cb3
0x00000000004a5b4f : out dx, eax ; call qword ptr [r14]
0x00000000004a5c23 : out dx, eax ; call qword ptr [rax]
0x00000000004a5cff : out dx, eax ; call qword ptr [rcx]
0x0000000000474ddd : out dx, eax ; call r12
0x000000000041b13d : out dx, eax ; call r14
0x000000000043e8d7 : out dx, eax ; call rax
0x00000000004901e2 : out dx, eax ; call rbx
0x00000000004c2b85 : out dx, eax ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x000000000046663b : out dx, eax ; mov eax, 9 ; syscall
0x000000000042e51d : out dx, eax ; mov eax, r9d ; syscall
0x000000000044b38a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000044b486 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000044b3d2 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000490333 : out dx, eax ; mov r9, r14 ; call rbx
0x00000000004292ca : out dx, eax ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004511ea : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000045b6bd : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004486f3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x4486cb
0x0000000000448771 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x448749
0x0000000000448c03 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x448bdb
0x0000000000448c81 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x448c59
0x00000000004482f3 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000448308 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044831d : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004627d3 : out dx, eax ; ret 0xf66
0x000000000040899d : out dx, eax ; ret 0xffff
0x00000000004627b6 : out dx, eax ; retf 0x4466
0x00000000004c225b : out dx, eax ; retf 0xab0d
0x000000000044087a : out dx, eax ; shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000044980c : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x00000000004497f5 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x00000000004497de : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000044829a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004d0b51 : out dx, eax ; stc ; call qword ptr [rdi]
0x00000000004a6c47 : out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x00000000004595ce : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004cb409 : outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; cmc ; call rsp
0x00000000004cb3f5 : outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; pop rax ; cmc ; call qword ptr [rdx]
0x0000000000460bfe : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000004c26e3 : outsb dx, byte ptr [rsi] ; ja 0x4c266c ; ret 0x48f
0x0000000000499860 : outsb dx, byte ptr [rsi] ; or byte ptr [rax + 1], cl ; ret
0x00000000004c1112 : outsb dx, byte ptr [rsi] ; retf
0x00000000004c0424 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x00000000004c1a58 : outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004cb495 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; mov byte ptr [rbp - 0xb], dl ; call rax
0x0000000000402df1 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; add cl, cl ; ret
0x00000000004351d2 : outsd dx, dword ptr [rsi] ; and al, 0x89 ; adc byte ptr [r11 + 0x5d], r11b ; ret
0x0000000000440a28 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000454f4e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000044bb12 : outsd dx, dword ptr [rsi] ; mov ebx, 0x4e6f0ff3 ; retf
0x000000000044bd12 : outsd dx, dword ptr [rsi] ; mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x000000000044960d : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x00000000004496ad : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x00000000004491d2 : outsd dx, dword ptr [rsi] ; push rdi ; retf
0x0000000000449252 : outsd dx, dword ptr [rsi] ; push rdi ; retf 0xcab2
0x000000000048f40a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000449612 : outsd dx, dword ptr [rsi] ; ret
0x00000000004825dd : outsd dx, dword ptr [rsi] ; ret 0x1ce8
0x000000000047f85d : outsd dx, dword ptr [rsi] ; ret 0x290f
0x000000000043639a : outsd dx, dword ptr [rsi] ; ret 0x4466
0x00000000004c0de6 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x000000000047f886 : outsd dx, dword ptr [rsi] ; ret 0x73e8
0x0000000000435dd2 : outsd dx, dword ptr [rsi] ; ret 0x8348
0x000000000044bcc7 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x00000000004496b2 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x00000000004825b9 : outsd dx, dword ptr [rsi] ; ret 0xe583
0x000000000048f45a : outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000044bb92 : outsd dx, dword ptr [rsi] ; retf
0x0000000000458f79 : outsd dx, dword ptr [rsi] ; retf 0x4466
0x000000000044bd92 : outsd dx, dword ptr [rsi] ; retf 0x8b4c
0x0000000000448bfa : outsd dx, dword ptr [rsi] ; retf 0xf66
0x00000000004486ea : outsd dx, dword ptr [rsi] ; retf 0xff3
0x000000000047f824 : outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x000000000048257f : outsd dx, dword ptr [rsi] ; sbb dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf
0x00000000004c0de5 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000446202 : pcmpeqb mm0, mm1 ; lea r10, [r10 + r9] ; jmp r10
0x0000000000490914 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x00000000004908ff : pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000446201 : pcmpeqb xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x00000000004c21e5 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000004c21e6 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x0000000000463e96 : pextrw edi, mm0, 0x77 ; ret
0x00000000004473c2 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x447429 ; xor eax, eax ; ret
0x0000000000468035 : pop r10 ; ret
0x00000000004c266f : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000409936 : pop r11 ; mov rax, rcx ; pop rbp ; pop r12 ; ret
0x00000000004040a3 : pop r11 ; or al, byte ptr [rax] ; ret
0x000000000046adb0 : pop r12 ; jmp 0x477824
0x00000000004667d1 : pop r12 ; jmp rax
0x00000000004667b6 : pop r12 ; mov esi, 2 ; jmp rax
0x00000000004067a5 : pop r12 ; pop r13 ; jmp rax
0x000000000043bf19 : pop r12 ; pop r13 ; pop r14 ; jmp rax
0x000000000043e43c : pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x000000000040697d : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000416daa : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004006ff : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042b419 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000407883 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000401bf2 : pop r12 ; pop r13 ; pop rbp ; ret
0x00000000004035d1 : pop r12 ; pop r13 ; ret
0x00000000004684c5 : pop r12 ; pop r14 ; ret
0x00000000004023a2 : pop r12 ; pop rbp ; ret
0x0000000000403367 : pop r12 ; ret
0x00000000004067a7 : pop r13 ; jmp rax
0x000000000043bf1b : pop r13 ; pop r14 ; jmp rax
0x000000000043e43e : pop r13 ; pop r14 ; jmp rcx
0x000000000040697f : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000416dac : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400701 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042b41b : pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000407885 : pop r13 ; pop r14 ; ret
0x0000000000401bf4 : pop r13 ; pop rbp ; ret
0x00000000004035d3 : pop r13 ; ret
0x000000000043bf1d : pop r14 ; jmp rax
0x000000000043e440 : pop r14 ; jmp rcx
0x0000000000406981 : pop r14 ; pop r15 ; jmp rax
0x0000000000416dae : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400703 : pop r14 ; pop r15 ; ret
0x000000000042b41d : pop r14 ; pop rbp ; ret
0x0000000000407887 : pop r14 ; ret
0x0000000000406983 : pop r15 ; jmp rax
0x0000000000416db0 : pop r15 ; pop rbp ; ret
0x0000000000400705 : pop r15 ; ret
0x0000000000414bb8 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; retf 0x8948
0x000000000043a6d4 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x0000000000410364 : pop rax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004ae2c1 : pop rax ; cli ; call rax
0x00000000004ae241 : pop rax ; cli ; jmp rsp
0x00000000004cb3f8 : pop rax ; cmc ; call qword ptr [rdx]
0x000000000047b1f9 : pop rax ; idiv edi ; dec dword ptr [rax + 0x63] ; retf
0x000000000047a12d : pop rax ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xbc40
0x00000000004d29e4 : pop rax ; in al, 0 ; add byte ptr [rax - 0x26], bl ; sti ; jmp qword ptr [rax]
0x00000000004aaa6c : pop rax ; jle 0x4aaa68 ; call rax
0x000000000049dc1c : pop rax ; jmp qword ptr [rax]
0x000000000046d2c4 : pop rax ; jmp qword ptr [rsi]
0x000000000040d3d0 : pop rax ; mov rax, rbx ; pop rdx ; pop rbx ; ret
0x00000000004a9582 : pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x00000000004c5948 : pop rax ; out dx, al ; call qword ptr [rcx]
0x00000000004d12a8 : pop rax ; pop rdi ; cli ; call qword ptr [rdx]
0x00000000004099ab : pop rax ; pop rdx ; pop rbx ; ret
0x00000000004657fc : pop rax ; ret
0x00000000004c25c3 : pop rax ; retf
0x00000000004d0fe4 : pop rax ; retf 0
0x00000000004ad40d : pop rax ; stc ; call qword ptr [rax]
0x000000000041b561 : pop rax ; sub byte ptr [rbp + 1], cl ; retf
0x00000000004c8f58 : pop rax ; sub esp, esi ; call qword ptr [rcx]
0x0000000000401ddf : pop rbp ; clc ; leave ; ret
0x00000000004cb5b1 : pop rbp ; cmc ; jmp qword ptr [rax]
0x00000000004c2065 : pop rbp ; insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x00000000004067a8 : pop rbp ; jmp rax
0x0000000000491748 : pop rbp ; mov eax, 0x101 ; syscall
0x00000000004a2cc3 : pop rbp ; mov eax, 0x89fd8945 ; ret 0xe283
0x0000000000400b0b : pop rbp ; mov edi, 0x6dbbe8 ; jmp rax
0x00000000004c09c0 : pop rbp ; movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x00000000004a4b9f : pop rbp ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000046adaf : pop rbp ; pop r12 ; jmp 0x477825
0x00000000004667d0 : pop rbp ; pop r12 ; jmp rax
0x00000000004667b5 : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x00000000004067a4 : pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000043bf18 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x000000000043e43b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x000000000040697c : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004006fe : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000407882 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004035d0 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004684c4 : pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000403366 : pop rbp ; pop r12 ; ret
0x000000000043bf1c : pop rbp ; pop r14 ; jmp rax
0x000000000043e43f : pop rbp ; pop r14 ; jmp rcx
0x0000000000406980 : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x0000000000416dad : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400702 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000042b41c : pop rbp ; pop r14 ; pop rbp ; ret
0x0000000000407886 : pop rbp ; pop r14 ; ret
0x0000000000401bf5 : pop rbp ; pop rbp ; ret
0x00000000004a0568 : pop rbp ; pop rbx ; ret
0x0000000000400b18 : pop rbp ; ret
0x0000000000414c1f : pop rbp ; retf 0xffff
0x00000000004a11b1 : pop rbx ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000418aad : pop rbx ; add dword ptr [rax + 1], ecx ; retf
0x0000000000408676 : pop rbx ; add rax, qword ptr [rax - 0x18] ; ret
0x00000000004bf9b8 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004641e6 : pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004a7522 : pop rbx ; and eax, dword ptr [rax] ; jne 0x4a750e ; pop rbx ; ret
0x00000000004ae2a9 : pop rbx ; cli ; call rax
0x00000000004ae229 : pop rbx ; cli ; jmp rsp
0x00000000004ae225 : pop rbx ; cli ; push qword ptr [rbx + rbx*2 - 6] ; jmp rsp
0x00000000004bf9b6 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004aa9ac : pop rbx ; idiv bh ; add byte ptr [rax - 0xa], ch ; jmp rax
0x0000000000432644 : pop rbx ; jmp rax
0x0000000000489bf8 : pop rbx ; loopne 0x489c02 ; dec dword ptr [rcx + 0x63] ; ret
0x000000000049bdf7 : pop rbx ; mov eax, dword ptr fs:[rax] ; ret
0x0000000000464231 : pop rbx ; mov eax, eax ; ret
0x000000000042c49f : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000048237d : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000433189 : pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x00000000004080a2 : pop rbx ; mov rax, rcx ; pop rbp ; pop r12 ; ret
0x0000000000436ba3 : pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x0000000000404094 : pop rbx ; or al, byte ptr [rax] ; ret
0x000000000042b418 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000401bf1 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000004023a1 : pop rbx ; pop r12 ; pop rbp ; ret
0x000000000047476c : pop rbx ; pop r12 ; ret
0x00000000004a6cc9 : pop rbx ; pop r14 ; ret
0x0000000000406893 : pop rbx ; pop rbp ; jmp rax
0x000000000046adae : pop rbx ; pop rbp ; pop r12 ; jmp 0x477826
0x000000000048ce91 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000004667b4 : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x00000000004067a3 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000043bf17 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x000000000043e43a : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x0000000000407881 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004035cf : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004684c3 : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000403365 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000400c6b : pop rbx ; pop rbp ; ret
0x0000000000403f70 : pop rbx ; ret
0x00000000004c2ca0 : pop rbx ; ret 0x6f9
0x00000000004c017d : pop rbx ; retf
0x000000000046acf0 : pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x00000000004ae659 : pop rbx ; sti ; call rax
0x00000000004ae69d : pop rbx ; sti ; call rsi
0x0000000000405166 : pop rbx ; sub rax, r13 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004210ce : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000433152 : pop rbx ; xor edx, edx ; jmp rax
0x00000000004c9ea5 : pop rcx ; add byte ptr [rax], al ; sbb byte ptr [rcx - 0xc], al ; call qword ptr [rax]
0x0000000000445fd7 : pop rcx ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004ae2b9 : pop rcx ; cli ; call rax
0x00000000004ae239 : pop rcx ; cli ; jmp rsp
0x0000000000401453 : pop rcx ; mov dword ptr [rcx], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004466b7 : pop rcx ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000470a93 : pop rcx ; ret
0x0000000000473fe3 : pop rcx ; ret 3
0x0000000000449f08 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004ca4d9 : pop rdi ; add byte ptr [rax], al ; push rsp ; ret
0x00000000004ca4a9 : pop rdi ; add byte ptr [rax], al ; xchg eax, esp ; ret 0xfff4
0x000000000045bd4d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004adf99 : pop rdi ; cli ; call qword ptr [rdx]
0x00000000004adedd : pop rdi ; cli ; call rsi
0x00000000004aded9 : pop rdi ; cli ; inc dword ptr [rax + 0x5f] ; cli ; call rsi
0x00000000004adf19 : pop rdi ; cli ; jmp qword ptr [rsi]
0x00000000004ae0d9 : pop rdi ; cli ; jmp rax
0x000000000044b929 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000044b739 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004c1f5e : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x000000000040dca6 : pop rdi ; je 0x40dcb8 ; mov eax, 1 ; ret
0x0000000000406984 : pop rdi ; jmp rax
0x00000000004c0f21 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x00000000004674a2 : pop rdi ; mov rdi, qword ptr [r13] ; call r12
0x00000000004669c9 : pop rdi ; or byte ptr [rcx - 0x77], cl ; retf
0x0000000000466995 : pop rdi ; or byte ptr [rcx - 0xa], al ; ret
0x000000000044b559 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000044b389 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000044b485 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000044b3d1 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000416db1 : pop rdi ; pop rbp ; ret
0x0000000000400706 : pop rdi ; ret
0x000000000043e725 : pop rdi ; retf 0x29
0x000000000042e7b5 : pop rdi ; retf 0x2a
0x00000000004ca00d : pop rdx ; add byte ptr [rax], al ; push rax ; push rcx ; hlt ; jmp qword ptr [rbx]
0x0000000000446bb6 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x00000000004ae2b1 : pop rdx ; cli ; call rax
0x00000000004ae231 : pop rdx ; cli ; jmp rsp
0x00000000004c1b41 : pop rdx ; je 0x4c1b0b ; ret 0xacfc
0x00000000004c1c53 : pop rdx ; leave ; retf
0x00000000004c2b07 : pop rdx ; out 0xf5, eax ; mov ch, 0xab ; ret
0x0000000000468034 : pop rdx ; pop r10 ; ret
0x00000000004099ac : pop rdx ; pop rbx ; ret
0x0000000000468059 : pop rdx ; pop rsi ; ret
0x0000000000465855 : pop rdx ; ret
0x00000000004c1b23 : pop rdx ; retf
0x00000000004c2670 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004346a4 : pop rdx ; sub al, byte ptr [rax] ; ret
0x00000000004486f4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x4486ca
0x0000000000448772 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x448748
0x0000000000448c04 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x448bda
0x0000000000448c82 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x448c58
0x000000000045bc4e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043c3e6 : pop rsi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004adee1 : pop rsi ; cli ; inc dword ptr [rsi + 0x65] ; cli ; call rsi
0x0000000000474f06 : pop rsi ; cmp byte ptr [rcx - 0x77], cl ; push rsi ; sub byte ptr [rax - 0x3f], cl ; retf
0x000000000043bf1e : pop rsi ; jmp rax
0x000000000043e441 : pop rsi ; jmp rcx
0x0000000000467472 : pop rsi ; mov rdi, qword ptr [r13] ; call r12
0x0000000000406982 : pop rsi ; pop r15 ; jmp rax
0x0000000000416daf : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000400704 : pop rsi ; pop r15 ; ret
0x000000000042b41e : pop rsi ; pop rbp ; ret
0x0000000000407888 : pop rsi ; ret
0x00000000004ad45d : pop rsi ; stc ; call qword ptr [rax]
0x00000000004cf729 : pop rsi ; stc ; jmp qword ptr [rcx]
0x00000000004597e0 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000446eb4 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004c6be8 : pop rsp ; add byte ptr es:[rax], al ; and al, 3 ; hlt ; call qword ptr [rdx]
0x000000000045a4e0 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x00000000004389db : pop rsp ; and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x00000000004c6ae8 : pop rsp ; and eax, 0x2740000 ; hlt ; call qword ptr [rdx]
0x00000000004ceec9 : pop rsp ; clc ; call qword ptr [rax]
0x00000000004ceedd : pop rsp ; clc ; jmp qword ptr [rsi]
0x000000000046adb1 : pop rsp ; jmp 0x477823
0x00000000004667d2 : pop rsp ; jmp rax
0x000000000040bcb8 : pop rsp ; jrcxz 0x40bcca ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004667b7 : pop rsp ; mov esi, 2 ; jmp rax
0x00000000004c5974 : pop rsp ; out dx, al ; call qword ptr [rbx]
0x00000000004067a6 : pop rsp ; pop r13 ; jmp rax
0x000000000043bf1a : pop rsp ; pop r13 ; pop r14 ; jmp rax
0x000000000043e43d : pop rsp ; pop r13 ; pop r14 ; jmp rcx
0x000000000040697e : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000416dab : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400700 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000042b41a : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000407884 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000401bf3 : pop rsp ; pop r13 ; pop rbp ; ret
0x00000000004035d2 : pop rsp ; pop r13 ; ret
0x00000000004684c6 : pop rsp ; pop r14 ; ret
0x00000000004023a3 : pop rsp ; pop rbp ; ret
0x0000000000403368 : pop rsp ; ret
0x000000000041d126 : pop rsp ; retf
0x000000000049ea3a : pop rsp ; retf 0x4df0
0x00000000004c1cc7 : pop rsp ; sbb ebp, ebx ; retf
0x00000000004d1c05 : pop rsp ; sti ; jmp qword ptr [rax]
0x000000000048bf7c : popfq ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x000000000042b3c4 : popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000486eed : popfq ; call 0xffffffffc3cc6ef7
0x0000000000486c2f : popfq ; idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000004c1c4c : popfq ; jrcxz 0x4c1c11 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x0000000000418c7e : popfq ; ret 0xf45
0x00000000004247af : popfq ; retf
0x00000000004a103f : popfq ; retf 0x23
0x00000000004c2a02 : popfq ; retf 0xde4f
0x00000000004d02cd : popfq ; stc ; jmp qword ptr [rdx]
0x00000000004512b2 : psllq mm1, qword ptr [r15] ; jg 0x4512cd ; ret
0x0000000000453dd2 : psllq mm1, qword ptr [r15] ; jg 0x453ded ; ret
0x00000000004512b3 : psllq mm1, qword ptr [rdi] ; jg 0x4512cc ; ret
0x0000000000453dd3 : psllq mm1, qword ptr [rdi] ; jg 0x453dec ; ret
0x00000000004602c6 : psllq mm1, qword ptr [rdi] ; jg 0x4602da ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000004602c5 : psllq mm1, qword ptr [rdi] ; jg 0x4602db ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000460327 : psllq mm1, qword ptr [rdi] ; jg 0x46033c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000004ad8b9 : psubd mm7, mm7 ; adc byte ptr [rcx], 0xfa ; call qword ptr [rax]
0x00000000004ad8d9 : psubd mm7, mm7 ; adc edx, edi ; call rax
0x000000000040565c : psubsb mm1, mm6 ; sub al, byte ptr [rax] ; add bl, ch ; ret 0x1f0f
0x00000000004c0a24 : push -0x30 ; retf 0xe72e
0x00000000004030dd : push -0x37000000 ; ret
0x00000000004c00ae : push -0x51 ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004af964 : push -0x57 ; sti ; jmp qword ptr [rdx]
0x00000000004c2255 : push -0x57d3205 ; call 0xffffffffab59ed55
0x00000000004c0261 : push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x00000000004cf8f4 : push -0x67ffff4d ; movsxd rdi, ecx ; call qword ptr [rbx]
0x0000000000401832 : push -0x6ffffffc ; leave ; ret
0x000000000047a622 : push -0x7c000003 ; ret
0x0000000000460be4 : push -0x9ffffff ; ret 0x7501
0x00000000004d1019 : push -3 ; jmp qword ptr [rdi]
0x00000000004aeae9 : push -5 ; jmp rsi
0x00000000004c1a55 : push 0x1b6e41b5 ; std ; retf
0x000000000047776a : push 0x43 ; add byte ptr es:[rax + rcx - 0xd], dh ; ret
0x000000000042dacd : push 0x48 ; add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000004a4594 : push 0x4800001f ; mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x0000000000495bc5 : push 0x48b4901 ; and al, 0x83 ; ret
0x000000000040b494 : push 0x48fffffe ; mov eax, ebx ; pop rbx ; ret
0x000000000047520c : push 0x4cffffff ; mov edi, esi ; call rdx
0x00000000004cb3f4 : push 0x5800006e ; cmc ; call qword ptr [rdx]
0x00000000004b0891 : push 0x67fcfffc ; cld ; jmp rsp
0x00000000004aebc5 : push 0x6881fffb ; sti ; call rdx
0x00000000004aebe9 : push 0x6894fffb ; sti ; call rdx
0x00000000004aec21 : push 0x6894fffb ; sti ; jmp qword ptr [rax]
0x00000000004aebed : push 0x68d2fffb ; sti ; call rdx
0x00000000004aeccd : push 0x68fafffb ; sti ; jmp rsi
0x00000000004aec40 : push 0x69 ; sti ; jmp qword ptr [rdx]
0x00000000004aebfd : push 0x6922fffb ; sti ; call rdx
0x00000000004c26e2 : push 0x6e ; ja 0x4c266d ; ret 0x48f
0x0000000000433795 : push 0x74c98548 ; and cl, byte ptr [rax + 0x39] ; retf
0x0000000000432077 : push 0x74c98548 ; sub byte ptr [rax + 0x39], cl ; retf
0x00000000004333ba : push 0x75c08548 ; ret
0x00000000004cae5d : push 0xbb00000 ; cmc ; call qword ptr [rdx]
0x00000000004c1fc2 : push 0xfd4cbe ; retf 0xf64
0x000000000040187d : push 6 ; add cl, cl ; ret
0x00000000004ade1b : push qword ptr [rax + 0x2e] ; cli ; call qword ptr [rax]
0x00000000004adc17 : push qword ptr [rax + 0x2f] ; cli ; jmp rax
0x00000000004adb9f : push qword ptr [rax + 0x38] ; cli ; jmp rax
0x00000000004adbb7 : push qword ptr [rax + 0x40fffa3c] ; cmp al, 0xfa ; call rax
0x00000000004aded7 : push qword ptr [rax + 0x40fffa5f] ; pop rdi ; cli ; call rsi
0x00000000004ae0af : push qword ptr [rax + 0x40fffa63] ; movsxd rdi, edx ; call rax
0x00000000004ad617 : push qword ptr [rax + 0x50fff9c1] ; ret 0xfff9
0x00000000004ae04b : push qword ptr [rax + 0x6044fffa] ; cli ; call rsp
0x00000000004b0847 : push qword ptr [rax + 0x62] ; cld ; jmp qword ptr [rax]
0x00000000004aeccb : push qword ptr [rax + rbp*2 + 0x68fafffb] ; sti ; jmp rsi
0x00000000004aa84b : push qword ptr [rax + rbx*2 - 0xa] ; jmp rsp
0x00000000004ab387 : push qword ptr [rax - 0x2700093d] ; ret
0x00000000004ad77b : push qword ptr [rax - 0x32] ; stc ; inc eax ; iretd ; stc ; call qword ptr [rax]
0x00000000004ae483 : push qword ptr [rax - 0x3e] ; cli ; call qword ptr [rax]
0x00000000004ae59b : push qword ptr [rax - 0x3f0004dd] ; and edi, ebx ; call rax
0x00000000004ae4df : push qword ptr [rax - 0x3f0004e4] ; sbb al, 0xfb ; call rax
0x00000000004ae3e7 : push qword ptr [rax - 0x3f00058a] ; js 0x4ae3f1 ; call rax
0x00000000004ae463 : push qword ptr [rax - 0x4b] ; cli ; call qword ptr [rax]
0x00000000004ad487 : push qword ptr [rax - 0x7b] ; stc ; jmp rax
0x00000000004ad947 : push qword ptr [rax - 6] ; stc ; inc eax ; sti ; stc ; call qword ptr [rax]
0x00000000004ad7ff : push qword ptr [rax] ; add eax, 0x6f0fffa ; cli ; call rax
0x000000000041a61d : push qword ptr [rax] ; jne 0x41a650 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000041b47d : push qword ptr [rax] ; jne 0x41b4b0 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x00000000004ad6ab : push qword ptr [rax] ; loop 0x4ad6ac ; call qword ptr [rax]
0x00000000004ad72b : push qword ptr [rax] ; loope 0x4ad72c ; jmp qword ptr [rax]
0x00000000004ae45b : push qword ptr [rax] ; mov dl, 0xfa ; call rax
0x00000000004ad497 : push qword ptr [rax] ; mov edi, ecx ; inc dword ptr [rax + 0x76] ; stc ; jmp qword ptr [rax]
0x00000000004ad4f3 : push qword ptr [rax] ; mov edx, 0xbb20fff9 ; stc ; call qword ptr [rax]
0x00000000004b0843 : push qword ptr [rax] ; movsxd rdi, esp ; push qword ptr [rax + 0x62] ; cld ; jmp qword ptr [rax]
0x00000000004ad887 : push qword ptr [rax] ; or dl, bh ; call qword ptr [rax]
0x00000000004ad45b : push qword ptr [rax] ; pop rsi ; stc ; call qword ptr [rax]
0x00000000004ae2df : push qword ptr [rax] ; push rsp ; cli ; call rax
0x00000000004ae407 : push qword ptr [rax] ; xchg edx, edi ; call rax
0x00000000004addcf : push qword ptr [rax] ; xor dl, bh ; jmp qword ptr [rax + 0x10fffa2f]
0x00000000004adde7 : push qword ptr [rax] ; xor eax, 0x34a0fffa ; cli ; jmp qword ptr [rax]
0x0000000000462568 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x0000000000466868 : push qword ptr [rbp + 0x35] ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000466840 : push qword ptr [rbp + 0x3d] ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000467470 : push qword ptr [rbp + 0x5e] ; mov rdi, qword ptr [r13] ; call r12
0x00000000004674a0 : push qword ptr [rbp + 0x5f] ; mov rdi, qword ptr [r13] ; call r12
0x00000000004aa89f : push qword ptr [rbp + 0x63] ; idiv bh ; pushfq ; movsxd rsi, esi ; call qword ptr [rax]
0x0000000000447f79 : push qword ptr [rbp + 4] ; vzeroupper ; ret
0x000000000048d9d8 : push qword ptr [rbp + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x00000000004331bd : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x000000000048d9fe : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000433626 : push qword ptr [rbp + rcx - 0x18] ; ret 0x8a
0x0000000000407821 : push qword ptr [rbp - 0x14] ; ret
0x000000000040dd8a : push qword ptr [rbp - 0x15] ; xor eax, eax ; ret
0x000000000040c563 : push qword ptr [rbp - 0x16] ; ret
0x000000000049b4ab : push qword ptr [rbp - 0x2e] ; ret
0x00000000004339f0 : push qword ptr [rbp - 0x44] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047d83b : push qword ptr [rbp - 0x4b8] ; push rax ; call 0x479ae9
0x000000000046556c : push qword ptr [rbx + 1] ; ret
0x00000000004ae227 : push qword ptr [rbx + rbx*2 - 6] ; jmp rsp
0x00000000004650bd : push qword ptr [rbx - 0x76b70007] ; ret
0x00000000004adb53 : push qword ptr [rcx + rdi + 0x3944fffa] ; cli ; call rsp
0x000000000040398e : push qword ptr [rcx] ; dec dword ptr [rax - 0x77] ; ret 0xc931
0x000000000047afa4 : push qword ptr [rcx] ; fcmovnb st(0), st(6) ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x00000000004962af : push qword ptr [rcx] ; fucomi st(3) ; ret 0x1f0f
0x000000000043179f : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000471bc3 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000414ae7 : push qword ptr [rcx] ; shr bl, cl ; or al, 0x83 ; ret 0x4801
0x000000000047601d : push qword ptr [rcx] ; shr cl, cl ; retf
0x000000000046503b : push qword ptr [rdi + 0x22] ; hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x0000000000465bf6 : push qword ptr [rdi + 0x3f] ; ret
0x0000000000465926 : push qword ptr [rdi + 0x57] ; ret
0x0000000000465853 : push qword ptr [rdi + 0x5a] ; ret
0x0000000000466569 : push qword ptr [rdi + 0x64] ; ret
0x0000000000467eff : push qword ptr [rdi + 0x66] ; ret
0x0000000000477b92 : push qword ptr [rdi + 0xb] ; ret
0x00000000004655fa : push qword ptr [rdi + 3] ; ret
0x00000000004658e9 : push qword ptr [rdi + 4] ; ret
0x0000000000465648 : push qword ptr [rdi + 5] ; ret
0x0000000000466406 : push qword ptr [rdi + 7] ; ret
0x00000000004663c5 : push qword ptr [rdi + 8] ; ret
0x00000000004659bc : push qword ptr [rdi + 9] ; ret
0x0000000000491584 : push qword ptr [rdi + rax*2 - 0x77] ; ret 0xe283
0x00000000004adc67 : push qword ptr [rdx + 0x35] ; cli ; jmp rdx
0x00000000004ada8b : push qword ptr [rdx + 0x42fffa3a] ; cmp bh, dl ; call rdx
0x00000000004ad9e7 : push qword ptr [rsi + 0x46fffa3e] ; cli ; call rsi
0x00000000004aeae7 : push qword ptr [rsi + 0x6a] ; sti ; jmp rsi
0x00000000004944da : push qword ptr [rsi + rbx - 0x17] ; retf
0x00000000004325f2 : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004c010c : push r8 ; xor byte ptr [rcx], ah ; retf
0x0000000000411e4f : push rax ; adc al, ch ; retf 0x34
0x000000000048cada : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000004343a1 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000043842d : push rax ; adc dh, dh ; ret 0xf0f
0x0000000000471a7f : push rax ; add al, 0xe9 ; cmp eax, 0x89fffff3 ; retf 0xe283
0x00000000004ad8a0 : push rax ; add al, 0xfa ; call qword ptr [rax]
0x00000000004d104c : push rax ; add byte ptr [rax], al ; add ah, al ; retf 0
0x00000000004325f3 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000043f91c : push rax ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000004ae5c7 : push rax ; and al, 0xfb ; call qword ptr [rax]
0x00000000004ae583 : push rax ; and bh, bl ; call qword ptr [rax]
0x000000000041c1e0 : push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x00000000004ae5a7 : push rax ; and edi, ebx ; call qword ptr [rax]
0x000000000046ddaf : push rax ; call 0x46a083
0x000000000047d841 : push rax ; call 0x479ae3
0x0000000000408fe9 : push rax ; call 0xffffffffc4339366
0x000000000046b488 : push rax ; call rbx
0x00000000004ae31f : push rax ; cli ; call qword ptr [rax]
0x000000000048c604 : push rax ; cmp byte ptr [rax + 1], cl ; ret
0x00000000004ad9af : push rax ; cmp eax, 0x3d80fffa ; cli ; call qword ptr [rax]
0x00000000004ad9c8 : push rax ; cmp edi, edx ; jmp rax
0x00000000004cecdc : push rax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; push rax ; test bh, dh ; jmp qword ptr [rbx]
0x00000000004ad7a8 : push rax ; enter -7, -0x60 ; leave ; stc ; push rax ; retf 0xfff9
0x00000000004ad623 : push rax ; fdivp st(1) ; call rax
0x000000000040bbc4 : push rax ; in al, 9 ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000046629c : push rax ; jo 0x4662a2 ; dec dword ptr [rax - 0x77] ; ret
0x000000000048e029 : push rax ; lea r9, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x00000000004c017a : push rax ; lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x00000000004ad6a8 : push rax ; loopne 0x4ad6ab ; push qword ptr [rax] ; loop 0x4ad6af ; call qword ptr [rax]
0x00000000004bcd98 : push rax ; loopne 0x4bcd9a ; jmp qword ptr [rax]
0x00000000004bcda8 : push rax ; loopne 0x4bcdaa ; call qword ptr [rax]
0x000000000046d6c1 : push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000004ad5ec : push rax ; mov ebx, 0xbc50fff9 ; stc ; call rax
0x00000000004ad60b : push rax ; mov edi, 0xc080fff9 ; stc ; call qword ptr [rax]
0x00000000004cffdc : push rax ; mov edx, 0x82f00000 ; stc ; call qword ptr [rdx]
0x00000000004ad4ab : push rax ; nop ; stc ; jmp rax
0x0000000000435122 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x000000000043644a : push rax ; or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000046718d : push rax ; or byte ptr [rbx + 0x94801e2], al ; ret 0x8949
0x00000000004150bc : push rax ; or byte ptr [rbx + 0xf01107a], al ; test edi, ecx ; ret
0x0000000000438e25 : push rax ; or byte ptr [rcx - 0xa], al ; ret 0xf04
0x00000000004699bb : push rax ; or dh, dh ; ret 0x8902
0x0000000000439b62 : push rax ; or dh, dh ; ret 0xf02
0x00000000004ad90b : push rax ; or dl, bh ; jmp rax
0x00000000004c4edc : push rax ; or dword ptr [rax], eax ; add byte ptr [rdi], dh ; fdivr st(3), st(0) ; jmp qword ptr [rsi]
0x00000000004c5930 : push rax ; out dx, al ; call qword ptr [rsi]
0x00000000004ae2c0 : push rax ; pop rax ; cli ; call rax
0x00000000004ad40b : push rax ; pop rax ; stc ; call qword ptr [rax]
0x00000000004023a0 : push rax ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000049e48e : push rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004a4645 : push rax ; pop rbx ; ret
0x00000000004ae2b8 : push rax ; pop rcx ; cli ; call rax
0x00000000004ae0d8 : push rax ; pop rdi ; cli ; jmp rax
0x00000000004ae2b0 : push rax ; pop rdx ; cli ; call rax
0x000000000040187c : push rax ; push 6 ; add cl, cl ; ret
0x00000000004944d9 : push rax ; push qword ptr [rsi + rbx - 0x17] ; retf
0x00000000004ca010 : push rax ; push rcx ; hlt ; jmp qword ptr [rbx]
0x00000000004ae2c8 : push rax ; push rdi ; cli ; call rax
0x000000000046d6c3 : push rax ; push rsp ; ret
0x000000000043e54c : push rax ; ret
0x00000000004d07dc : push rax ; ret 0
0x00000000004ad5df : push rax ; ret 0xfff9
0x00000000004d2650 : push rax ; ret 0xfffb
0x00000000004c2a20 : push rax ; retf
0x00000000004abb77 : push rax ; retf 0xfff7
0x00000000004ad7af : push rax ; retf 0xfff9
0x0000000000437784 : push rax ; sbb byte ptr [rax + 0x39], cl ; retf 0x850f
0x0000000000434396 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000048db19 : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000004ae52b : push rax ; sbb eax, 0x1e00fffb ; sti ; jmp qword ptr [rax]
0x00000000004c62dc : push rax ; sbb eax, 0xf9500000 ; call qword ptr [rdx]
0x00000000004ad3eb : push rax ; stc ; call qword ptr [rax]
0x00000000004c62e0 : push rax ; stc ; call qword ptr [rdx]
0x000000000046739c : push rax ; std ; push rbx ; ret
0x00000000004d03b0 : push rax ; stosb byte ptr [rdi], al ; stc ; call qword ptr [rax]
0x00000000004ae448 : push rax ; test al, 0xfa ; call rax
0x00000000004cece0 : push rax ; test bh, dh ; jmp qword ptr [rbx]
0x00000000004c010d : push rax ; xor byte ptr [rcx], ah ; retf
0x00000000004a60ca : push rbp ; add bl, ch ; add eax, 0x1489066 ; ret 0xb70f
0x0000000000418fe2 : push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x00000000004c9b4d : push rbp ; add byte ptr [rax], al ; and byte ptr [rax], bh ; hlt ; call qword ptr [rdi]
0x000000000049bc18 : push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x00000000004cbdf5 : push rbp ; call qword ptr [rdi]
0x00000000004ae199 : push rbp ; cli ; call rdx
0x00000000004ae315 : push rbp ; cli ; jmp qword ptr [rax]
0x00000000004cb499 : push rbp ; cmc ; call rax
0x000000000042c2ad : push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004015dd : push rbp ; fmul dword ptr [rbx + 0x2dae3305] ; add byte ptr [rcx], bh ; ret 0x707d
0x0000000000401d6f : push rbp ; mov rbp, rsp ; mov qword ptr [rbp - 8], rdi ; pop rbp ; ret
0x000000000049d64c : push rbp ; or byte ptr [rcx + 0x33], cl ; add byte ptr [r8 + 9], r9b ; ret 0x840f
0x00000000004914ad : push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x00000000004cae96 : push rbp ; ret
0x00000000004a1be7 : push rbp ; retf 0xfff9
0x0000000000473641 : push rbp ; retf 3
0x00000000004aba4f : push rbp ; sbb dh, bh ; call rsi
0x0000000000435212 : push rbp ; sub al, byte ptr [rax] ; ret
0x000000000042c856 : push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000041c32f : push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000049ba8f : push rbx ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004a0d67 : push rbx ; add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040a2cf : push rbx ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004c6895 : push rbx ; call qword ptr [rbx]
0x00000000004c68a9 : push rbx ; call qword ptr [rdi]
0x000000000042ee38 : push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000040dc8d : push rbx ; cmp byte ptr [rbx - 0x3d], bl ; xor eax, eax ; pop rbx ; ret
0x00000000004aa775 : push rbx ; idiv bh ; adc byte ptr [rdx - 0xa], dl ; call qword ptr [rax]
0x00000000004ccb6d : push rbx ; idiv bh ; retf
0x0000000000463755 : push rbx ; jb 0x463765 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000048da12 : push rbx ; je 0x48da76 ; pop rbp ; pop r12 ; ret
0x000000000048da9e : push rbx ; je 0x48db02 ; pop rbp ; pop r12 ; ret
0x00000000004c6955 : push rbx ; jmp qword ptr [rbx]
0x00000000004914ae : push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x000000000042ee34 : push rbx ; or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x0000000000417e0e : push rbx ; ret
0x000000000047a919 : push rbx ; sbb al, 1 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000410bfe : push rbx ; sbb byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rcx ; jmp rax
0x0000000000410a17 : push rbx ; sbb byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rsi ; jmp rax
0x0000000000410ef5 : push rbx ; sbb byte ptr [rax - 0x7af0a0c6], al ; retf
0x000000000040ff81 : push rbx ; sbb byte ptr [rcx], dh ; rol byte ptr [rax - 0x6bf08cc8], cl ; ret 0x8b48
0x00000000004c1b3c : push rbx ; xchg eax, edx ; jae 0x4c1b1b ; push rsi ; pop rdx ; je 0x4c1b10 ; ret 0xacfc
0x000000000043aa42 : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x0000000000436d7b : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x00000000004370f7 : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0xb277
0x000000000046783b : push rcx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004c0dc5 : push rcx ; call qword ptr [rsi]
0x000000000047aa96 : push rcx ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004ca011 : push rcx ; hlt ; jmp qword ptr [rbx]
0x000000000045470d : push rcx ; jl 0x45475e ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000454874 : push rcx ; jl 0x4548c5 ; adc dword ptr [rcx + 7], edi ; ret
0x00000000004a9b53 : push rcx ; jnp 0x4a9b54 ; inc esi ; jnp 0x4a9b58 ; jmp rdx
0x0000000000495241 : push rcx ; or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0x1475
0x0000000000495213 : push rcx ; or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0xe75
0x000000000043588d : push rcx ; sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x000000000043573f : push rcx ; sub al, byte ptr [rax] ; ret
0x000000000041f25e : push rdi ; adc al, 0xf ; retf 0xfa83
0x0000000000466c28 : push rdi ; adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000041f24e : push rdi ; adc byte ptr [rdi], cl ; retf 0xd289
0x000000000046080a : push rdi ; add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x0000000000451419 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000494184 : push rdi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004608bc : push rdi ; add eax, 0xc478d48 ; ret
0x000000000040cfe9 : push rdi ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000404277 : push rdi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047a16f : push rdi ; and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000044b218 : push rdi ; clc ; ret
0x000000000044b390 : push rdi ; cld ; ret
0x00000000004ae2c9 : push rdi ; cli ; call rax
0x00000000004ae249 : push rdi ; cli ; jmp rsp
0x000000000044beb7 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000450cf9 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042c0b5 : push rdi ; cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000450c79 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000450aca : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000432504 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000450b5a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000041f23e : push rdi ; or al, 0xf ; retf 0xd289
0x000000000040d7d8 : push rdi ; or byte ptr [rbp + rcx*4 + 0x14], cl ; retf 0xc741
0x00000000004a055a : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00000000004a435a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000004a0561 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000041f233 : push rdi ; or byte ptr [rdi], cl ; retf 0x8941
0x0000000000436a46 : push rdi ; or dh, dh ; ret 0xf02
0x0000000000460aa0 : push rdi ; or eax, 0x1c478d48 ; ret
0x000000000044960e : push rdi ; ret
0x00000000004496ae : push rdi ; ret 0xff3
0x00000000004491d3 : push rdi ; retf
0x0000000000449253 : push rdi ; retf 0xcab2
0x00000000004351b0 : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret
0x000000000047a173 : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000041f272 : push rdi ; sbb byte ptr [rdi], cl ; retf 0xd289
0x000000000044c0b7 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004ad409 : push rdi ; stc ; push rax ; pop rax ; stc ; call qword ptr [rax]
0x000000000044b8da : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x000000000044bcb7 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000435078 : push rdi ; sub al, byte ptr [rax] ; ret
0x000000000048f40b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000004473c8 : push rdi ; xor eax, eax ; ret
0x0000000000402e6a : push rdx ; add dword ptr [rax], eax ; add cl, cl ; ret
0x00000000004019f7 : push rdx ; add eax, 0x89480000 ; ret 0x8d48
0x00000000004073b8 : push rdx ; call 0xffffffffc357fd0b
0x00000000004073f8 : push rdx ; call 0xffffffffc357fd4b
0x00000000004adf6c : push rdx ; cli ; jmp rdx
0x00000000004aa6a1 : push rdx ; idiv bh ; adc byte ptr [rdx - 0xa], dl ; call qword ptr [rax]
0x00000000004aa71d : push rdx ; idiv bh ; call 0x114a9d7f
0x00000000004aa6b9 : push rdx ; idiv bh ; cmp byte ptr [rbp - 0xa], dl ; call qword ptr [rax]
0x000000000044080a : push rdx ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000004d0531 : push rdx ; jmp qword ptr [rbx]
0x000000000040d960 : push rdx ; mov rax, rdx ; ret
0x00000000004150ca : push rdx ; or byte ptr [rax - 0x7af0c1c6], al ; ret 0xffc3
0x000000000044075a : push rdx ; retf 0x29
0x000000000046d6bd : push rdx ; sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x00000000004adc63 : push rdx ; xor eax, 0x3572fffa ; cli ; jmp rdx
0x00000000004482f4 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000408dbe : push rsi ; adc cl, byte ptr [rdx] ; add byte ptr [rax - 0x77], cl ; retf 0x8348
0x0000000000462df9 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x462e50 ; adc dword ptr [rsi + 3], edx ; ret
0x00000000004c9bf9 : push rsi ; add byte ptr [rax], al ; cmp ah, dh ; call qword ptr [rdi]
0x00000000004516b1 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000451721 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000460255 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000451641 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004601f3 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x0000000000448309 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044b342 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000044bab1 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000044b6e5 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000044b8c5 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000044baa5 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000044b505 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004ae251 : push rsi ; cli ; call rsp
0x00000000004ae111 : push rsi ; cli ; jmp qword ptr [rax]
0x00000000004c26e0 : push rsi ; cli ; push 0x6e ; ja 0x4c266f ; ret 0x48f
0x00000000004620a6 : push rsi ; cmc ; sub eax, edx ; ret
0x00000000004ada10 : push rsi ; cmp bh, dl ; jmp rsi
0x00000000004751de : push rsi ; cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000462096 : push rsi ; hlt ; sub eax, edx ; ret
0x00000000004aa821 : push rsi ; idiv bh ; add byte ptr [rsi - 0xa], dl ; jmp rsp
0x0000000000462066 : push rsi ; int1 ; sub eax, edx ; ret
0x000000000040c1e1 : push rsi ; or bl, al ; nop dword ptr [rax] ; ret
0x00000000004c1b40 : push rsi ; pop rdx ; je 0x4c1b0c ; ret 0xacfc
0x00000000004bfa86 : push rsi ; ret
0x000000000040075a : push rsi ; retf 0x2d
0x00000000004248f6 : push rsi ; retf 0xffff
0x00000000004856b1 : push rsi ; sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x00000000004ad405 : push rsi ; stc ; call rax
0x00000000004351f2 : push rsi ; sub al, byte ptr [rax] ; ret
0x0000000000474f0a : push rsi ; sub byte ptr [rax - 0x3f], cl ; retf
0x000000000047a583 : push rsi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000462076 : push rsi ; sub eax, edx ; ret
0x00000000004c0108 : push rsi ; xchg eax, ebp ; jge 0x4c00ed ; push r8 ; xor byte ptr [rcx], ah ; retf
0x000000000044831e : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000491931 : push rsp ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x00000000004c6c7c : push rsp ; add esi, esp ; call qword ptr [rdx]
0x0000000000408f86 : push rsp ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000049e6ba : push rsp ; and al, 0x10 ; call rdx
0x0000000000438a98 : push rsp ; and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000438ff5 : push rsp ; and al, 8 ; call 0x435295
0x00000000004ae161 : push rsp ; cli ; call qword ptr [rdx]
0x00000000004ae2e1 : push rsp ; cli ; call rax
0x00000000004ae2a1 : push rsp ; cli ; jmp rax
0x00000000004ae15d : push rsp ; cli ; ljmp [rsp + rdx*2 - 6] ; call qword ptr [rdx]
0x00000000004ae2dd : push rsp ; cli ; push qword ptr [rax] ; push rsp ; cli ; call rax
0x00000000004ae31d : push rsp ; cli ; push rax ; cli ; call qword ptr [rax]
0x00000000004adb3c : push rsp ; cmp al, 0xfa ; jmp rsp
0x00000000004aa69d : push rsp ; idiv bh ; adc byte ptr [rdx - 0xa], dl ; call qword ptr [rax]
0x00000000004aa699 : push rsp ; idiv bh ; call 0x114a9cfb
0x00000000004af3a4 : push rsp ; lahf ; sti ; call qword ptr [rax]
0x00000000004ae034 : push rsp ; movsxd rdi, edx ; jmp rsp
0x00000000004047f4 : push rsp ; or al, byte ptr [rax] ; ret
0x00000000004ae223 : push rsp ; pop rbx ; cli ; push qword ptr [rbx + rbx*2 - 6] ; jmp rsp
0x000000000046d6c4 : push rsp ; ret
0x00000000004a513c : push rsp ; ret 0x4808
0x000000000049eb35 : push rsp ; retf 0x48f8
0x00000000004c3b83 : push rsp ; sar ebp, cl ; jmp qword ptr [rbx]
0x000000000041f187 : push rsp ; sbb eax, 0xfc80f00 ; retf 0xc089
0x00000000004c662c : push rsp ; std ; call qword ptr [rdx]
0x00000000004c230a : push rsp ; syscall
0x00000000004c78e0 : push rsp ; xor eax, dword ptr [rax] ; add ah, ch ; or al, 0xf4 ; jmp qword ptr [rdx]
0x00000000004c5a28 : pushfq ; adc al, 0 ; add byte ptr [rsi + rbp*8 - 0xd], ah ; call qword ptr [rdi]
0x00000000004594a0 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x000000000040ffa0 : pushfq ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0xc283
0x000000000047e91e : pushfq ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x0000000000467417 : pushfq ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x467428 ; call r12
0x000000000046ed6a : pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x0000000000495dbf : pushfq ; and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x0000000000432c2b : pushfq ; and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xbc40
0x00000000004c6628 : pushfq ; and byte ptr [rax], al ; add byte ptr [rbp + rdi*8 - 0xd], dl ; call qword ptr [rdx]
0x00000000004d4a34 : pushfq ; cld ; cld ; jmp rsp
0x00000000004c5434 : pushfq ; fdivrp st(3) ; call qword ptr [rcx]
0x00000000004cba28 : pushfq ; je 0x4cba32 ; add byte ptr [rdi], dl ; cmc ; call qword ptr [rdx]
0x00000000004aa8a4 : pushfq ; movsxd rsi, esi ; call qword ptr [rax]
0x000000000045a1a0 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000446374 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x00000000004c6954 : pushfq ; push rbx ; jmp qword ptr [rbx]
0x0000000000418cb7 : pushfq ; ret 0xf45
0x00000000004d42d4 : pushfq ; ret 0xfff2
0x000000000047f880 : pushfq ; rol dword ptr [rbx], cl ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x73e8
0x00000000004d0249 : pushfq ; stc ; jmp qword ptr [rax]
0x0000000000405362 : rcl byte ptr [rax], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000004c9b4c : rcl byte ptr [rbp], 0 ; and byte ptr [rax], bh ; hlt ; call qword ptr [rdi]
0x00000000004aa774 : rcl byte ptr [rbx - 0xa], 0xff ; adc byte ptr [rdx - 0xa], dl ; call qword ptr [rax]
0x00000000004ad408 : rcl byte ptr [rdi - 7], 1 ; push rax ; pop rax ; stc ; call qword ptr [rax]
0x00000000004c2451 : rcl byte ptr [rdi], cl ; retf
0x00000000004ad7d4 : rcl dh, 0xf9 ; call qword ptr [rax]
0x00000000004ad7c8 : rcl dl, 1 ; stc ; jmp qword ptr [rax]
0x000000000041c0f7 : rcl dword ptr [rax], 0x2c ; add bh, dh ; ret 0
0x000000000043f91b : rcl dword ptr [rax], 1 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000435239 : rcl dword ptr [rbp + 0x2a], cl ; add bl, dh ; ret
0x00000000004c1f7a : rcl dword ptr [rsi + 0x27], cl ; retf 0xc0fe
0x00000000004c1b3f : rcl dword ptr [rsi + 0x5a], cl ; je 0x4c1b0d ; ret 0xacfc
0x00000000004c1f79 : rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x00000000004c1b3b : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x4c1b11 ; ret 0xacfc
0x00000000004144a9 : rcr byte ptr [rax + rax], 0x84 ; ror byte ptr [rdi], 0x84 ; retf
0x00000000004054b9 : rcr byte ptr [rax], 0x48 ; mov dword ptr [rdi], eax ; ret
0x00000000004055bf : rcr byte ptr [rax], 0x48 ; mov dword ptr [rsi], eax ; ret
0x000000000048f1f3 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000004210d0 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000042c4a1 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; ret
0x000000000048237f : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000004a0567 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000046c6b2 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000004035e5 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000040de21 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004198e8 : rcr byte ptr [rbx + 0x5d], 0xc3 ; nop dword ptr [rax] ; ret
0x000000000042c54a : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x000000000042bb52 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004ae4e4 : rcr byte ptr [rbx + rdi*8], 0xff ; rcr byte ptr [rbx + rdi*8], 1 ; jmp rax
0x00000000004ae4e8 : rcr byte ptr [rbx + rdi*8], 1 ; jmp rax
0x00000000004c1f5d : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000004ae0d4 : rcr byte ptr [rdi - 6], 0xff ; push rax ; pop rdi ; cli ; jmp rax
0x00000000004ad2e8 : rcr byte ptr [rdi], 1 ; stc ; call qword ptr [rax + 0x20fff920]
0x00000000004ae548 : rcr byte ptr [rsi], 0xfb ; jmp rax
0x00000000004c4d70 : rcr dl, 1 ; call qword ptr [rcx]
0x000000000049e819 : rcr dword ptr [rcx], 0xc0 ; and eax, 2 ; sub eax, 1 ; ret
0x00000000004c22b1 : rcr dword ptr [rcx], cl ; retf 0xbb9a
0x000000000046f12b : rcr esp, 0xfa ; inc dword ptr [rcx - 0x77] ; ret
0x0000000000462f34 : rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000462f26 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000463c5a : rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000404511 : rep stosq qword ptr [rdi], rax ; mov rax, rdx ; pop rbx ; ret
0x000000000043ad21 : rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000040058b : repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400596 ; ret
0x0000000000400416 : ret
0x0000000000400737 : ret 0
0x00000000004b8740 : ret 0x10
0x00000000004976aa : ret 0x101
0x0000000000410ffb : ret 0x10be
0x00000000004a053c : ret 0x114d
0x0000000000474714 : ret 0x1176
0x0000000000411102 : ret 0x11be
0x000000000040d069 : ret 0x11e8
0x000000000049bc1c : ret 0x1272
0x000000000041119c : ret 0x12be
0x0000000000410ebc : ret 0x13be
0x00000000004987b3 : ret 0x13e9
0x00000000004a6ce1 : ret 0x145
0x000000000049f9e6 : ret 0x1474
0x0000000000495248 : ret 0x1475
0x00000000004919e1 : ret 0x1477
0x00000000004076f5 : ret 0x148
0x000000000041fac4 : ret 0x149
0x000000000041101c : ret 0x14be
0x0000000000454acc : ret 0x14d
0x000000000040c549 : ret 0x14eb
0x000000000041111c : ret 0x15be
0x0000000000488601 : ret 0x1674
0x000000000046546e : ret 0x16e9
0x00000000004431fa : ret 0x17
0x00000000004478a6 : ret 0x1776
0x0000000000410fc6 : ret 0x17be
0x0000000000404e8a : ret 0x17f
0x0000000000425db2 : ret 0x18
0x0000000000454a09 : ret 0x180f
0x0000000000404b8a : ret 0x182
0x0000000000447435 : ret 0x1876
0x0000000000409ba0 : ret 0x1877
0x000000000042322a : ret 0x18e
0x000000000042282a : ret 0x198
0x000000000042252a : ret 0x19b
0x000000000047470b : ret 0x1a72
0x0000000000416c13 : ret 0x1a73
0x00000000004c24ba : ret 0x1ad4
0x0000000000422f72 : ret 0x1b
0x00000000004c0c4d : ret 0x1b49
0x000000000040892b : ret 0x1b9
0x000000000041b21f : ret 0x1be8
0x00000000004406ca : ret 0x1c6
0x00000000004825de : ret 0x1ce8
0x000000000042a379 : ret 0x1ce9
0x00000000004ba410 : ret 0x1d4
0x00000000004baba8 : ret 0x1d5
0x000000000041bef1 : ret 0x1d89
0x0000000000405663 : ret 0x1f0f
0x000000000043aa46 : ret 0x1f77
0x000000000041ba6a : ret 0x1fd
0x0000000000476afd : ret 0x1fe9
0x0000000000477757 : ret 0x200
0x0000000000493dcb : ret 0x2041
0x0000000000465f2c : ret 0x2044
0x000000000047e037 : ret 0x20be
0x00000000004a6c4b : ret 0x2148
0x000000000042f8ad : ret 0x214c
0x000000000042ee3c : ret 0x2175
0x000000000040fac9 : ret 0x21be
0x00000000004076e6 : ret 0x2273
0x000000000049a9b8 : ret 0x2275
0x000000000040d234 : ret 0x2277
0x000000000045cd78 : ret 0x2288
0x00000000004407da : ret 0x22a
0x000000000040fa1c : ret 0x22be
0x00000000004a7b1a : ret 0x233f
0x0000000000449812 : ret 0x2373
0x000000000040f9ec : ret 0x23be
0x0000000000491742 : ret 0x24
0x00000000004926f2 : ret 0x2473
0x000000000040f904 : ret 0x24be
0x0000000000431fed : ret 0x2501
0x0000000000483704 : ret 0x2504
0x000000000043f6f3 : ret 0x2575
0x00000000004824c2 : ret 0x25b6
0x000000000040f9bc : ret 0x25be
0x0000000000418b51 : ret 0x25e9
0x000000000040f934 : ret 0x26be
0x000000000048f8e6 : ret 0x2774
0x000000000044eea1 : ret 0x28
0x000000000044afe6 : ret 0x280f
0x0000000000447425 : ret 0x2876
0x000000000040f8a4 : ret 0x28be
0x000000000049aa37 : ret 0x28f5
0x000000000043e66e : ret 0x29
0x000000000047f85e : ret 0x290f
0x000000000040761c : ret 0x2948
0x0000000000418b2a : ret 0x2949
0x000000000042ab70 : ret 0x294c
0x000000000042f11d : ret 0x294d
0x000000000043b8da : ret 0x29ef
0x0000000000435bda : ret 0x2a4c
0x000000000043210a : ret 0x2aaf
0x0000000000420981 : ret 0x2b
0x000000000042b705 : ret 0x2b22
0x000000000042c85a : ret 0x2b48
0x000000000043ee1b : ret 0x2b74
0x000000000043ad62 : ret 0x2b75
0x00000000004640d2 : ret 0x2b77
0x0000000000400a25 : ret 0x2b8
0x000000000041e899 : ret 0x2bb6
0x0000000000418b3f : ret 0x2be9
0x000000000041cd9a : ret 0x2bfe
0x000000000041c1a2 : ret 0x2c0f
0x000000000041c5fa : ret 0x2c14
0x000000000043b5ae : ret 0x2c75
0x0000000000408f5e : ret 0x2ce8
0x000000000040a3e0 : ret 0x2d74
0x000000000048b595 : ret 0x2e66
0x00000000004103d4 : ret 0x2ebe
0x0000000000468cbe : ret 0x2f75
0x000000000040f060 : ret 0x2fbe
0x00000000004842c5 : ret 0x30be
0x000000000040d84a : ret 0x3101
0x0000000000415cfc : ret 0x3107
0x0000000000401a88 : ret 0x3174
0x000000000040cf69 : ret 0x31e8
0x00000000004b9908 : ret 0x33
0x000000000046f574 : ret 0x349
0x00000000004a6a80 : ret 0x3575
0x000000000040407e : ret 0x374
0x000000000049737a : ret 0x3774
0x0000000000447886 : ret 0x3776
0x00000000004c1d9a : ret 0x3827
0x000000000048c08e : ret 0x3873
0x0000000000447415 : ret 0x3876
0x0000000000432a9b : ret 0x389
0x00000000004c0426 : ret 0x38ae
0x0000000000401ebb : ret 0x38b
0x000000000040e4c6 : ret 0x38be
0x000000000041a802 : ret 0x38e8
0x00000000004a905a : ret 0x39
0x00000000004a5658 : ret 0x3901
0x000000000049d13d : ret 0x3934
0x0000000000489bd8 : ret 0x3941
0x0000000000409de6 : ret 0x3948
0x000000000042debd : ret 0x3949
0x0000000000407edd : ret 0x394c
0x000000000048526d : ret 0x394d
0x0000000000462682 : ret 0x3a01
0x00000000004497fb : ret 0x3a73
0x0000000000404583 : ret 0x3a74
0x000000000042da0a : ret 0x3a8
0x00000000004a41a3 : ret 0x3a83
0x000000000049d1ca : ret 0x3b34
0x00000000004630a1 : ret 0x3b48
0x0000000000465c0f : ret 0x3b8
0x0000000000430099 : ret 0x3c75
0x000000000047363a : ret 0x3cc
0x000000000040bfde : ret 0x3ce9
0x000000000049d0fd : ret 0x3d
0x000000000049b3a8 : ret 0x3d73
0x000000000040d397 : ret 0x3d77
0x000000000043c661 : ret 0x3d83
0x00000000004389bf : ret 0x3de9
0x00000000004971da : ret 0x3e80
0x0000000000470a9a : ret 0x3fa
0x0000000000476f0b : ret 0x4002
0x000000000042853d : ret 0x4074
0x000000000048fed1 : ret 0x408d
0x0000000000404178 : ret 0x40b0
0x00000000004042f3 : ret 0x40d0
0x0000000000468439 : ret 0x4101
0x000000000047c908 : ret 0x4108
0x000000000047d0b5 : ret 0x4110
0x0000000000411820 : ret 0x4120
0x000000000046ed10 : ret 0x413
0x000000000049d177 : ret 0x4134
0x000000000046fd27 : ret 0x415f
0x000000000046d78e : ret 0x41c3
0x0000000000441e7a : ret 0x4266
0x000000000040f854 : ret 0x42be
0x000000000046cc6a : ret 0x433
0x000000000040c1f2 : ret 0x4374
0x000000000048cb63 : ret 0x4389
0x000000000040f096 : ret 0x4401
0x0000000000484b1b : ret 0x4404
0x00000000004160c5 : ret 0x4408
0x00000000004160a5 : ret 0x4410
0x000000000043639b : ret 0x4466
0x0000000000439d33 : ret 0x4473
0x000000000046a67f : ret 0x450
0x0000000000410c93 : ret 0x453c
0x0000000000401603 : ret 0x458b
0x00000000004054ea : ret 0x47
0x00000000004c0f24 : ret 0x474c
0x0000000000403eaa : ret 0x47d0
0x0000000000403bf5 : ret 0x4801
0x0000000000410854 : ret 0x4802
0x0000000000410bfa : ret 0x4803
0x0000000000400ec6 : ret 0x4804
0x000000000045cd03 : ret 0x4808
0x000000000041e276 : ret 0x480a
0x0000000000403ea3 : ret 0x4810
0x00000000004754bc : ret 0x4811
0x000000000047a007 : ret 0x481e
0x0000000000414937 : ret 0x4820
0x000000000046afae : ret 0x4830
0x000000000040db35 : ret 0x4838
0x0000000000441d86 : ret 0x4840
0x0000000000410ea6 : ret 0x48be
0x000000000045c9b8 : ret 0x48c3
0x00000000004775ea : ret 0x48e8
0x0000000000434db3 : ret 0x48e9
0x00000000004c26e6 : ret 0x48f
0x000000000040d83b : ret 0x4901
0x00000000004721cb : ret 0x4902
0x00000000004353f2 : ret 0x4908
0x000000000044634c : ret 0x4910
0x0000000000411283 : ret 0x49be
0x000000000040e26a : ret 0x4abe
0x000000000040fa51 : ret 0x4b3b
0x000000000040f112 : ret 0x4c01
0x000000000043a6da : ret 0x4c07
0x00000000004798c6 : ret 0x4c40
0x000000000041133b : ret 0x4d01
0x0000000000478b78 : ret 0x4d10
0x000000000041d97f : ret 0x4de8
0x00000000004c2147 : ret 0x4e27
0x000000000041c99e : ret 0x4f76
0x000000000046bb2f : ret 0x5089
0x0000000000468b27 : ret 0x508b
0x00000000004497e4 : ret 0x5173
0x0000000000465e67 : ret 0x5488
0x00000000004c03ac : ret 0x5508
0x000000000048dc2e : ret 0x5590
0x000000000040c010 : ret 0x577
0x0000000000447866 : ret 0x5776
0x00000000004c2678 : ret 0x5803
0x0000000000472231 : ret 0x5841
0x00000000004a3b15 : ret 0x5876
0x00000000004299b3 : ret 0x589
0x00000000004088b2 : ret 0x58e9
0x00000000004c0080 : ret 0x591c
0x00000000004c0de7 : ret 0x5ae4
0x00000000004403be : ret 0x5ae9
0x0000000000472419 : ret 0x5be9
0x000000000042a78e : ret 0x5d5b
0x000000000049ce45 : ret 0x5de8
0x0000000000409dd1 : ret 0x61e8
0x00000000004c2b12 : ret 0x62c1
0x0000000000498620 : ret 0x6349
0x00000000004a1334 : ret 0x637f
0x0000000000475493 : ret 0x6411
0x0000000000404662 : ret 0x6520
0x000000000040c0b5 : ret 0x65e9
0x0000000000478071 : ret 0x6601
0x00000000004473a1 : ret 0x6620
0x0000000000407210 : ret 0x66c3
0x0000000000402dbe : ret 0x673
0x000000000049bc2e : ret 0x674
0x0000000000447856 : ret 0x6776
0x00000000004c009f : ret 0x67b2
0x0000000000404a58 : ret 0x67d0
0x0000000000433045 : ret 0x6874
0x0000000000498dca : ret 0x68e8
0x0000000000409bac : ret 0x6a
0x000000000046551a : ret 0x6ae9
0x0000000000404a98 : ret 0x6c70
0x0000000000404adb : ret 0x6cd0
0x0000000000404b3b : ret 0x6d80
0x0000000000404b9b : ret 0x6dc0
0x0000000000404bfb : ret 0x6e00
0x0000000000404c5b : ret 0x6e40
0x0000000000404ddb : ret 0x6e80
0x0000000000404e3b : ret 0x6f30
0x0000000000404e9b : ret 0x6f70
0x00000000004c2ca1 : ret 0x6f9
0x0000000000404efb : ret 0x6fb0
0x00000000004015e6 : ret 0x707d
0x000000000043a1db : ret 0x722
0x000000000047f887 : ret 0x73e8
0x00000000004331c1 : ret 0x7401
0x000000000043e6ca : ret 0x7402
0x000000000049868a : ret 0x7403
0x0000000000466681 : ret 0x7404
0x000000000048da02 : ret 0x7408
0x000000000042e94d : ret 0x7420
0x00000000004807b4 : ret 0x7450
0x000000000049ce3a : ret 0x7472
0x000000000040db1b : ret 0x74b9
0x0000000000404761 : ret 0x7501
0x0000000000460bf6 : ret 0x7502
0x0000000000460c03 : ret 0x7504
0x000000000043a9ed : ret 0x7508
0x0000000000460bbb : ret 0x7510
0x0000000000460bc8 : ret 0x7520
0x00000000004406ee : ret 0x7540
0x0000000000491940 : ret 0x7577
0x00000000004486d2 : ret 0x7677
0x000000000049ead2 : ret 0x777
0x00000000004a0396 : ret 0x77f
0x000000000041e0d1 : ret 0x7ce9
0x0000000000447341 : ret 0x7e20
0x00000000004477bc : ret 0x7e40
0x0000000000440a2c : ret 0x7f10
0x0000000000489df0 : ret 0x7f3c
0x000000000044efae : ret 0x80
0x0000000000441c09 : ret 0x8000
0x000000000041a4c2 : ret 0x8001
0x0000000000492d87 : ret 0x8116
0x000000000047c0db : ret 0x8148
0x000000000041aa18 : ret 0x8166
0x00000000004390c0 : ret 0x820f
0x000000000040d9b2 : ret 0x8301
0x00000000004993a7 : ret 0x8303
0x0000000000410065 : ret 0x830f
0x0000000000479ed4 : ret 0x8341
0x00000000004075d7 : ret 0x8348
0x0000000000462b00 : ret 0x8349
0x000000000049b21f : ret 0x8364
0x000000000048d346 : ret 0x840
0x0000000000491d39 : ret 0x8401
0x0000000000410f99 : ret 0x840f
0x00000000004707a0 : ret 0x841
0x000000000040f3bf : ret 0x8440
0x0000000000495dc7 : ret 0x848b
0x000000000048b239 : ret 0x8502
0x000000000042f1d2 : ret 0x850f
0x0000000000474df3 : ret 0x8511
0x00000000004669b2 : ret 0x8545
0x000000000041de52 : ret 0x8548
0x000000000043f71a : ret 0x854d
0x0000000000420f11 : ret 0x8575
0x00000000004010b8 : ret 0x858b
0x000000000041c6d2 : ret 0x860f
0x00000000004091db : ret 0x870f
0x00000000004bf9be : ret 0x871e
0x0000000000489df7 : ret 0x875
0x0000000000447445 : ret 0x876
0x000000000041df7c : ret 0x8801
0x000000000046ea9d : ret 0x8804
0x00000000004780c2 : ret 0x8841
0x000000000049a30e : ret 0x8844
0x0000000000408bc2 : ret 0x88e9
0x000000000041d76a : ret 0x8901
0x00000000004699be : ret 0x8902
0x0000000000405128 : ret 0x8908
0x0000000000416ffb : ret 0x8910
0x0000000000479ec6 : ret 0x8941
0x000000000043b64f : ret 0x8944
0x0000000000400c20 : ret 0x8948
0x000000000042f6fa : ret 0x8949
0x0000000000408ab7 : ret 0x894c
0x000000000049f54b : ret 0x894e
0x000000000040ff38 : ret 0x8966
0x000000000043362a : ret 0x8a
0x00000000004a3d40 : ret 0x8b
0x000000000046d3c9 : ret 0x8b01
0x000000000048b88a : ret 0x8b04
0x0000000000491ad3 : ret 0x8b05
0x000000000048b73b : ret 0x8b08
0x00000000004c21ee : ret 0x8b36
0x00000000004395a1 : ret 0x8b41
0x0000000000489e93 : ret 0x8b44
0x000000000040119e : ret 0x8b48
0x000000000040e3f9 : ret 0x8b49
0x000000000049f4ce : ret 0x8b4a
0x000000000040c1ba : ret 0x8b4c
0x000000000042e25d : ret 0x8beb
0x000000000048101d : ret 0x8c0f
0x000000000040e003 : ret 0x8d04
0x000000000041896f : ret 0x8d0f
0x0000000000438c9c : ret 0x8d44
0x00000000004019fd : ret 0x8d48
0x0000000000413e37 : ret 0x8d49
0x0000000000408cf0 : ret 0x8d4a
0x000000000040b7f0 : ret 0x8d4b
0x0000000000439db4 : ret 0x8d4c
0x0000000000479ee2 : ret 0x8d89
0x000000000046f56b : ret 0x8e0f
0x0000000000420014 : ret 0x8ea
0x0000000000404160 : ret 0x8ec8
0x00000000004202f2 : ret 0x8ed
0x00000000004042db : ret 0x8ef0
0x000000000047a18a : ret 0x8f0f
0x0000000000403e96 : ret 0x8f88
0x000000000040464a : ret 0x9018
0x000000000040a72d : ret 0x90c3
0x0000000000404a40 : ret 0x90c8
0x000000000043fe39 : ret 0x90e9
0x0000000000493e8e : ret 0x9174
0x0000000000404a80 : ret 0x9178
0x0000000000411889 : ret 0x91e8
0x000000000040e7b8 : ret 0x91eb
0x00000000004029ef : ret 0x920f
0x00000000004175ab : ret 0x9272
0x0000000000418572 : ret 0x92e
0x000000000040283a : ret 0x940f
0x000000000043709d : ret 0x948
0x000000000048f4a8 : ret 0x94c
0x00000000004a0d62 : ret 0x950f
0x0000000000464ea0 : ret 0x9572
0x00000000004c1013 : ret 0x9576
0x000000000047cadf : ret 0x958b
0x0000000000410c9a : ret 0x975
0x000000000043e65e : ret 0x976
0x000000000048a189 : ret 0x99e8
0x0000000000411142 : ret 0x9be
0x0000000000499153 : ret 0x9be9
0x000000000040cbe1 : ret 0x9d4
0x00000000004a3225 : ret 0x9eb
0x00000000004b7f40 : ret 0xa
0x00000000004ce35e : ret 0xa01
0x00000000004666a8 : ret 0xa076
0x00000000004170a9 : ret 0xa0e9
0x0000000000404912 : ret 0xa0f8
0x0000000000404962 : ret 0xa100
0x0000000000418a2e : ret 0xa4e9
0x00000000004c0d03 : ret 0xa514
0x0000000000418b2d : ret 0xa5e9
0x0000000000409302 : ret 0xa8e9
0x0000000000411162 : ret 0xabe
0x00000000004c1187 : ret 0xac65
0x00000000004c1b44 : ret 0xacfc
0x0000000000480f5d : ret 0xade8
0x000000000047b91f : ret 0xae9
0x000000000043f55a : ret 0xaeeb
0x000000000040b373 : ret 0xafe8
0x00000000004cb7c7 : ret 0xb00e
0x000000000042d78d : ret 0xb074
0x00000000004370fb : ret 0xb277
0x000000000049ce80 : ret 0xb2e8
0x0000000000472ffb : ret 0xb2eb
0x00000000004045cf : ret 0xb475
0x00000000004653d0 : ret 0xb4e9
0x0000000000479f06 : ret 0xb589
0x00000000004a3e3a : ret 0xb5c1
0x00000000004a6035 : ret 0xb5e8
0x000000000040c065 : ret 0xb5e9
0x0000000000405106 : ret 0xb60f
0x000000000041c1e4 : ret 0xb70f
0x0000000000408b76 : ret 0xb77
0x0000000000486165 : ret 0xb8
0x0000000000487f0c : ret 0xb848
0x000000000041a882 : ret 0xb8e8
0x00000000004c104e : ret 0xb9b9
0x000000000040e88d : ret 0xb9e9
0x000000000048b314 : ret 0xba41
0x000000000043ed93 : ret 0xbae9
0x0000000000473132 : ret 0xbaeb
0x0000000000411092 : ret 0xbbe
0x000000000042b816 : ret 0xbc40
0x0000000000418fe6 : ret 0xbc80
0x0000000000479ef2 : ret 0xbd89
0x000000000049cf82 : ret 0xbe0f
0x000000000041ec3a : ret 0xbe13
0x00000000004c0da4 : ret 0xbe57
0x0000000000441ac9 : ret 0xc000
0x000000000040389d : ret 0xc031
0x000000000040ec6e : ret 0xc083
0x0000000000447200 : ret 0xc085
0x00000000004192da : ret 0xc148
0x0000000000437219 : ret 0xc183
0x000000000041fbf8 : ret 0xc189
0x0000000000466252 : ret 0xc221
0x000000000043b68b : ret 0xc275
0x000000000040fd2e : ret 0xc283
0x00000000004496b4 : ret 0xc2b2
0x000000000046413e : ret 0xc35b
0x00000000004748cd : ret 0xc389
0x00000000004815ee : ret 0xc3a8
0x000000000043b68d : ret 0xc3f3
0x0000000000409651 : ret 0xc4c0
0x00000000004bf542 : ret 0xc4c3
0x00000000004c0958 : ret 0xc4ff
0x0000000000447821 : ret 0xc540
0x0000000000474996 : ret 0xc589
0x000000000047f7bc : ret 0xc689
0x0000000000400ee6 : ret 0xc704
0x000000000040a3b9 : ret 0xc74
0x000000000045d0c0 : ret 0xc748
0x00000000004853b8 : ret 0xc789
0x00000000004011d9 : ret 0xc7e
0x000000000040a393 : ret 0xc7e9
0x000000000049d012 : ret 0xc829
0x000000000047e183 : ret 0xc839
0x0000000000432a8c : ret 0xc883
0x0000000000403993 : ret 0xc931
0x000000000047cbb7 : ret 0xc985
0x000000000048b823 : ret 0xc9eb
0x000000000045ccd1 : ret 0xc9ff
0x0000000000400941 : ret 0xca21
0x00000000004c85c1 : ret 0xcb
0x00000000004111bc : ret 0xcbe
0x00000000004943cf : ret 0xcbe9
0x00000000004c03ea : ret 0xcca7
0x0000000000408b7e : ret 0xcce9
0x00000000004c24cd : ret 0xcd11
0x0000000000420402 : ret 0xce80
0x00000000004b8340 : ret 0xd
0x000000000040dd36 : ret 0xd009
0x000000000043cf0e : ret 0xd020
0x00000000004291f6 : ret 0xd021
0x0000000000467acf : ret 0xd029
0x000000000048063b : ret 0xd120
0x000000000040b3fa : ret 0xd231
0x0000000000418a06 : ret 0xd284
0x0000000000416fee : ret 0xd285
0x000000000041af68 : ret 0xd2e8
0x0000000000495e56 : ret 0xd348
0x000000000043fc85 : ret 0xd5e8
0x000000000046c4a7 : ret 0xd5e9
0x000000000049d3bf : ret 0xd75
0x0000000000409b4a : ret 0xd77
0x000000000042a5a6 : ret 0xd774
0x000000000040d0a3 : ret 0xd7e8
0x0000000000401264 : ret 0xd7f
0x00000000004092d2 : ret 0xd8e9
0x00000000004c1f65 : ret 0xd8f
0x000000000041445b : ret 0xda80
0x000000000042bb03 : ret 0xdaf7
0x0000000000470c7a : ret 0xdb76
0x000000000041117c : ret 0xdbe
0x00000000004c2046 : ret 0xdcd9
0x00000000004c0fc2 : ret 0xde5d
0x00000000004bfd51 : ret 0xde9e
0x0000000000407bcc : ret 0xdeb
0x0000000000441989 : ret 0xe000
0x0000000000460b79 : ret 0xe074
0x000000000046a230 : ret 0xe083
0x00000000004d4ca4 : ret 0xe0a
0x0000000000418bf1 : ret 0xe1e9
0x000000000046a062 : ret 0xe1eb
0x000000000040e571 : ret 0xe281
0x0000000000410525 : ret 0xe283
0x000000000048f1b8 : ret 0xe575
0x0000000000481c40 : ret 0xe57f
0x00000000004825ba : ret 0xe583
0x0000000000464132 : ret 0xe680
0x0000000000482c9f : ret 0xe683
0x00000000004c2166 : ret 0xe71f
0x000000000049521a : ret 0xe75
0x000000000043ee46 : ret 0xe775
0x0000000000482273 : ret 0xe7e9
0x0000000000413fe2 : ret 0xe883
0x0000000000494d96 : ret 0xe8c0
0x000000000041e20a : ret 0xe901
0x000000000041a5aa : ret 0xe902
0x000000000045cd66 : ret 0xe908
0x0000000000459306 : ret 0xe910
0x000000000047a74d : ret 0xe920
0x00000000004c04c7 : ret 0xe970
0x00000000004640ca : ret 0xea81
0x0000000000428ead : ret 0xeab8
0x0000000000413e2c : ret 0xeac1
0x0000000000412f94 : ret 0xeb01
0x000000000048b753 : ret 0xeb04
0x0000000000414bc4 : ret 0xeb08
0x000000000044637a : ret 0xeb10
0x000000000049d1e2 : ret 0xeb34
0x000000000041103c : ret 0xebe
0x00000000004c2c78 : ret 0xec2
0x000000000042a530 : ret 0xed75
0x00000000004c291a : ret 0xef32
0x00000000004187b8 : ret 0xef89
0x0000000000491f1f : ret 0xefeb
0x000000000044516e : ret 0xf
0x0000000000441849 : ret 0xf000
0x00000000004039a2 : ret 0xf01
0x0000000000436a49 : ret 0xf02
0x0000000000438e29 : ret 0xf04
0x000000000042da13 : ret 0xf08
0x0000000000436d19 : ret 0xf0f
0x00000000004296fe : ret 0xf10
0x0000000000482abb : ret 0xf20
0x0000000000438f93 : ret 0xf275
0x00000000004c46cc : ret 0xf3c7
0x00000000004c4d30 : ret 0xf3da
0x0000000000409407 : ret 0xf3e9
0x000000000047fb76 : ret 0xf3f
0x0000000000483043 : ret 0xf40
0x000000000042c0bd : ret 0xf41
0x0000000000418c6c : ret 0xf45
0x000000000043fa39 : ret 0xf475
0x000000000046e326 : ret 0xf48
0x00000000004004fd : ret 0xf49
0x0000000000483029 : ret 0xf50
0x00000000004a57c6 : ret 0xf608
0x00000000004088a9 : ret 0xf631
0x0000000000441e06 : ret 0xf66
0x0000000000496ea7 : ret 0xf675
0x0000000000410350 : ret 0xf685
0x0000000000497d8a : ret 0xf686
0x00000000004aba30 : ret 0xf719
0x00000000004aba5c : ret 0xf71a
0x000000000042c17c : ret 0xf741
0x0000000000420b32 : ret 0xf748
0x000000000049eabc : ret 0xf749
0x000000000040a363 : ret 0xf7e9
0x0000000000441709 : ret 0xf800
0x00000000004bfc30 : ret 0xf869
0x00000000004347c3 : ret 0xf8b
0x000000000047fb71 : ret 0xf8c1
0x000000000045c5e6 : ret 0xf8c5
0x0000000000464474 : ret 0xf8e9
0x00000000004ada70 : ret 0xfa3d
0x00000000004adf60 : ret 0xfa5e
0x00000000004adf68 : ret 0xfa64
0x0000000000468540 : ret 0xfa81
0x000000000048e62a : ret 0xfada
0x000000000040e84c : ret 0xfae9
0x000000000040393b : ret 0xfb80
0x00000000004110c3 : ret 0xfbe
0x000000000043b95a : ret 0xfbe9
0x00000000004415c9 : ret 0xfc00
0x000000000040c306 : ret 0xfc3
0x000000000047912a : ret 0xfc41
0x000000000049190a : ret 0xfd69
0x0000000000441489 : ret 0xfe00
0x000000000041c055 : ret 0xfe83
0x000000000040780c : ret 0xfeb
0x0000000000441349 : ret 0xff00
0x0000000000450b21 : ret 0xff2
0x000000000046a1db : ret 0xff25
0x0000000000448049 : ret 0xff2d
0x0000000000441daa : ret 0xff3
0x0000000000487267 : ret 0xff31
0x0000000000441209 : ret 0xff80
0x0000000000482841 : ret 0xff83
0x0000000000470c0c : ret 0xff85
0x00000000004798b2 : ret 0xff90
0x000000000043f6ea : ret 0xffa5
0x000000000042638a : ret 0xffaf
0x000000000042608a : ret 0xffb2
0x000000000042ce27 : ret 0xffb8
0x0000000000433d5a : ret 0xffbc
0x0000000000428efa : ret 0xffc0
0x00000000004150d1 : ret 0xffc3
0x000000000043f3f8 : ret 0xffdf
0x0000000000440f89 : ret 0xffe0
0x000000000041115a : ret 0xffe5
0x000000000040ed2a : ret 0xffe7
0x00000000004844d9 : ret 0xffe8
0x0000000000465485 : ret 0xffe9
0x000000000042a459 : ret 0xffef
0x000000000043ee12 : ret 0xfff
0x0000000000428d22 : ret 0xfff0
0x0000000000486c50 : ret 0xfff1
0x00000000004d42d5 : ret 0xfff2
0x00000000004ca475 : ret 0xfff4
0x0000000000402174 : ret 0xfff6
0x00000000004a0b4f : ret 0xfff7
0x0000000000440d09 : ret 0xfff8
0x00000000004ad559 : ret 0xfff9
0x00000000004388c8 : ret 0xfffa
0x000000000041fb19 : ret 0xfffb
0x000000000040a01a : ret 0xfffc
0x0000000000434245 : ret 0xfffd
0x0000000000419104 : ret 0xfffe
0x000000000040899e : ret 0xffff
0x0000000000402d35 : ret 1
0x0000000000447abb : ret 2
0x0000000000449472 : ret 3
0x00000000004251e8 : ret 4
0x0000000000413556 : ret 5
0x000000000043ec1b : ret 6
0x000000000044690a : ret 7
0x0000000000401332 : ret 8
0x000000000046162a : ret 9
0x00000000004004e6 : retf
0x0000000000402744 : retf 0
0x00000000004b88a0 : retf 0x11
0x00000000004a426d : retf 0x114d
0x00000000004932a0 : retf 0x12b9
0x0000000000472a3f : retf 0x12e9
0x000000000047e5d9 : retf 0x147f
0x0000000000409d29 : retf 0x148
0x000000000044ee8c : retf 0x14c
0x00000000004432d2 : retf 0x16
0x00000000004a046d : retf 0x194d
0x0000000000467de2 : retf 0x19b8
0x0000000000421b22 : retf 0x1a5
0x000000000040d1e4 : retf 0x1a77
0x0000000000422394 : retf 0x1b
0x0000000000429f11 : retf 0x1be
0x000000000043a348 : retf 0x1be9
0x0000000000408c51 : retf 0x1c76
0x00000000004ba448 : retf 0x1d4
0x00000000004babe8 : retf 0x1d5
0x000000000040b2a8 : retf 0x1d74
0x0000000000403520 : retf 0x1f0f
0x00000000004cfef2 : retf 0x2000
0x0000000000489a41 : retf 0x20be
0x00000000004304c1 : retf 0x2148
0x00000000004370a3 : retf 0x2274
0x00000000004a0a39 : retf 0x23
0x000000000041c745 : retf 0x230
0x00000000004a0a5a : retf 0x23c9
0x00000000004b9458 : retf 0x24
0x0000000000497449 : retf 0x2465
0x00000000004994e7 : retf 0x254
0x000000000046d34f : retf 0x26
0x000000000046b64a : retf 0x271b
0x000000000040c423 : retf 0x2773
0x00000000004646d2 : retf 0x278a
0x0000000000449df9 : retf 0x280f
0x000000000043dd7f : retf 0x29
0x000000000048d6ba : retf 0x2941
0x0000000000424d8f : retf 0x2948
0x000000000042cbce : retf 0x294c
0x0000000000493482 : retf 0x29f
0x000000000042e7b6 : retf 0x2a
0x0000000000439ab8 : retf 0x2a74
0x000000000042a723 : retf 0x2a7e
0x00000000004c0e3c : retf 0x2a91
0x0000000000431e02 : retf 0x2ab2
0x0000000000428fb2 : retf 0x2b3c
0x00000000004920a2 : retf 0x2b4
0x000000000041e1aa : retf 0x2be9
0x000000000047471f : retf 0x2c73
0x00000000004746f9 : retf 0x2c76
0x00000000004c02ba : retf 0x2c90
0x000000000040070c : retf 0x2d
0x0000000000493f4f : retf 0x2de9
0x000000000048e80a : retf 0x2e1
0x0000000000439b42 : retf 0x2e4
0x0000000000468fa1 : retf 0x2e75
0x000000000040c7e0 : retf 0x3073
0x000000000041c708 : retf 0x31
0x0000000000450716 : retf 0x3148
0x00000000004c20a5 : retf 0x3159
0x0000000000408e52 : retf 0x31ff
0x00000000004c210d : retf 0x32dd
0x00000000004b9948 : retf 0x33
0x00000000004c09c3 : retf 0x33e6
0x0000000000411e52 : retf 0x34
0x00000000004c0ef1 : retf 0x3617
0x00000000004506f2 : retf 0x377
0x000000000043a650 : retf 0x3948
0x000000000048d420 : retf 0x3949
0x000000000043536a : retf 0x394c
0x0000000000477612 : retf 0x399
0x00000000004740cc : retf 0x3bf
0x000000000043b6dd : retf 0x3d83
0x00000000004c2506 : retf 0x3d8a
0x00000000004bfd9b : retf 0x3ec
0x000000000046a235 : retf 0x4102
0x000000000046a381 : retf 0x4110
0x000000000046ed17 : retf 0x413
0x000000000047073e : retf 0x4180
0x000000000040f6b8 : retf 0x41c7
0x0000000000441e5c : retf 0x4266
0x00000000004704a3 : retf 0x4280
0x000000000040d991 : retf 0x42c7
0x00000000004a61fd : retf 0x42f6
0x000000000040f412 : retf 0x4389
0x000000000041c0d2 : retf 0x440
0x0000000000458f7a : retf 0x4466
0x000000000040fc14 : retf 0x45c7
0x0000000000481a16 : retf 0x45e9
0x0000000000470ea4 : retf 0x4689
0x0000000000435425 : retf 0x4801
0x00000000004330b1 : retf 0x4802
0x0000000000428b2c : retf 0x4805
0x0000000000428b97 : retf 0x4806
0x000000000048da07 : retf 0x4808
0x0000000000428a48 : retf 0x4809
0x0000000000428c88 : retf 0x480a
0x0000000000428c4c : retf 0x480d
0x000000000042cae3 : retf 0x4810
0x000000000042cbe1 : retf 0x4820
0x000000000040dbf4 : retf 0x488d
0x0000000000411252 : retf 0x48e9
0x000000000049eb36 : retf 0x48f8
0x0000000000438e33 : retf 0x4901
0x0000000000476593 : retf 0x4a8d
0x0000000000439a8a : retf 0x4b74
0x0000000000433063 : retf 0x4c01
0x000000000043efd2 : retf 0x4c89
0x00000000004a5759 : retf 0x4d20
0x00000000004a0438 : retf 0x4de8
0x000000000049ea3b : retf 0x4df0
0x00000000004a045c : retf 0x4df8
0x000000000040d1f6 : retf 0x4e8
0x000000000043a312 : retf 0x51e9
0x0000000000482b06 : retf 0x53c
0x00000000004a1342 : retf 0x557f
0x0000000000400d95 : retf 0x5589
0x0000000000403376 : retf 0x5774
0x00000000004a117d : retf 0x5d5b
0x0000000000495ee5 : retf 0x5f6
0x0000000000429bdc : retf 0x6411
0x0000000000400f72 : retf 0x648
0x0000000000449ee3 : retf 0x6601
0x000000000044a033 : retf 0x6602
0x000000000044a183 : retf 0x6603
0x000000000044a2d3 : retf 0x6604
0x000000000044a423 : retf 0x6605
0x000000000044a573 : retf 0x6606
0x000000000044a6c3 : retf 0x6607
0x000000000044a813 : retf 0x6608
0x000000000044a963 : retf 0x6609
0x000000000044aab3 : retf 0x660a
0x000000000044ac03 : retf 0x660b
0x000000000044ad53 : retf 0x660c
0x000000000044aea3 : retf 0x660d
0x000000000044aff3 : retf 0x660e
0x000000000044b143 : retf 0x660f
0x0000000000450711 : retf 0x676
0x00000000004c2425 : retf 0x67ca
0x0000000000409a7d : retf 0x6a
0x00000000004916c1 : retf 0x6b8
0x00000000004c0422 : retf 0x6ee8
0x0000000000474ec2 : retf 0x70e8
0x00000000004c22e6 : retf 0x7272
0x00000000004c1abf : retf 0x76a5
0x000000000042d0e3 : retf 0x775
0x00000000004c0942 : retf 0x79f5
0x0000000000465d6b : retf 0x8041
0x00000000004476a3 : retf 0x8148
0x0000000000439f62 : retf 0x820f
0x000000000042c790 : retf 0x830f
0x000000000042fc71 : retf 0x8310
0x000000000042ec5d : retf 0x8320
0x00000000004712a7 : retf 0x8341
0x0000000000404042 : retf 0x8348
0x000000000044631f : retf 0x8349
0x0000000000435900 : retf 0x840f
0x00000000004c1230 : retf 0x8481
0x0000000000430676 : retf 0x850f
0x0000000000400943 : retf 0x8545
0x000000000045d1ab : retf 0x8548
0x00000000004471c9 : retf 0x860f
0x000000000044eedc : retf 0x870f
0x00000000004a5800 : retf 0x8820
0x000000000047048d : retf 0x8880
0x000000000043efd8 : retf 0x8902
0x000000000041c6c4 : retf 0x8904
0x000000000042db20 : retf 0x8920
0x000000000046669a : retf 0x8940
0x000000000041f236 : retf 0x8941
0x000000000047c7f0 : retf 0x8944
0x0000000000408dab : retf 0x8948
0x0000000000449919 : retf 0x8949
0x000000000042ca8c : retf 0x894c
0x000000000047259a : retf 0x8966
0x00000000004704ee : retf 0x8980
0x00000000004a1832 : retf 0x8b41
0x000000000040f404 : retf 0x8b48
0x0000000000410229 : retf 0x8b49
0x000000000044bd19 : retf 0x8b4c
0x000000000040a15a : retf 0x8d48
0x00000000004470d9 : retf 0x8d4a
0x00000000004042ba : retf 0x8d4c
0x000000000043a35b : retf 0x8e9
0x000000000044625d : retf 0x9066
0x0000000000477000 : retf 0x9273
0x00000000004c1b8e : retf 0x93a2
0x0000000000439e16 : retf 0x948
0x000000000040e308 : retf 0x9848
0x000000000048927c : retf 0x98e9
0x00000000004c1f2b : retf 0x99e0
0x0000000000466690 : retf 0x9b9
0x00000000004c229a : retf 0x9d7d
0x0000000000412c2e : retf 0xa
0x00000000004c2ba5 : retf 0xa020
0x00000000004c0105 : retf 0xa1eb
0x00000000004c218b : retf 0xa2fe
0x0000000000439129 : retf 0xa74
0x00000000004c225c : retf 0xab0d
0x0000000000414b41 : retf 0xabeb
0x0000000000429a0d : retf 0xade9
0x00000000004c27ae : retf 0xae32
0x0000000000442582 : retf 0xb
0x000000000043a0b1 : retf 0xb2e9
0x00000000004c0fa9 : retf 0xb51a
0x0000000000447d02 : retf 0xb60f
0x00000000004a6d92 : retf 0xb801
0x00000000004712b4 : retf 0xb941
0x00000000004a3d30 : retf 0xba
0x0000000000438e61 : retf 0xba41
0x000000000048b442 : retf 0xbb41
0x00000000004c22b3 : retf 0xbb9a
0x00000000004a19e6 : retf 0xbeb
0x00000000004c22fd : retf 0xbf4b
0x0000000000400cac : retf 0xc
0x000000000040be7a : retf 0xc031
0x0000000000466558 : retf 0xc085
0x000000000041d903 : retf 0xc089
0x00000000004c1f7d : retf 0xc0fe
0x00000000004022ac : retf 0xc148
0x000000000048f46e : retf 0xc149
0x000000000047d115 : retf 0xc239
0x0000000000410b70 : retf 0xc283
0x000000000047585d : retf 0xc6
0x0000000000481991 : retf 0xc7
0x000000000040d7dd : retf 0xc741
0x000000000040c39d : retf 0xc748
0x000000000048f723 : retf 0xc985
0x0000000000449254 : retf 0xcab2
0x00000000004bf54a : retf 0xcccb
0x000000000040dc23 : retf 0xcfeb
0x0000000000425cc7 : retf 0xd
0x0000000000474d62 : retf 0xd0e8
0x00000000004c0d66 : retf 0xd1cb
0x000000000040ff15 : retf 0xd231
0x0000000000430d25 : retf 0xd284
0x000000000046dd74 : retf 0xd285
0x000000000041f241 : retf 0xd289
0x00000000004c2477 : retf 0xd39
0x0000000000464036 : retf 0xd975
0x000000000040dbd8 : retf 0xdd77
0x00000000004c2a03 : retf 0xde4f
0x000000000042e0c1 : retf 0xdeb
0x00000000004c1033 : retf 0xdf7f
0x0000000000422316 : retf 0xe
0x00000000004c0ade : retf 0xe152
0x0000000000463e73 : retf 0xe175
0x00000000004a1a0b : retf 0xe275
0x0000000000470fc0 : retf 0xe283
0x0000000000410d40 : retf 0xe2ff
0x0000000000494999 : retf 0xe474
0x0000000000463d0c : retf 0xe475
0x00000000004c10bc : retf 0xe496
0x000000000047a497 : retf 0xe677
0x00000000004c0a26 : retf 0xe72e
0x00000000004c00b3 : retf 0xe80
0x000000000049380b : retf 0xe802
0x0000000000481c05 : retf 0xe87f
0x0000000000428bc9 : retf 0xe903
0x00000000004a012c : retf 0xe972
0x000000000047d615 : retf 0xe9ff
0x000000000049fa7b : retf 0xea72
0x000000000042df83 : retf 0xea77
0x00000000004c206c : retf 0xea91
0x00000000004a40eb : retf 0xeac0
0x00000000004373b2 : retf 0xeac1
0x00000000004409a1 : retf 0xead3
0x0000000000428b82 : retf 0xeb04
0x0000000000428be1 : retf 0xeb07
0x0000000000428aa8 : retf 0xeb08
0x0000000000428caf : retf 0xeb0b
0x0000000000428c82 : retf 0xeb0c
0x00000000004c018d : retf 0xeb83
0x00000000004c2981 : retf 0xebbf
0x0000000000432fab : retf 0xee75
0x000000000049a317 : retf 0xee7c
0x000000000044f11c : retf 0xf01
0x000000000044f29c : retf 0xf02
0x000000000044f41c : retf 0xf03
0x000000000044f59c : retf 0xf04
0x000000000044f71c : retf 0xf05
0x000000000044f89c : retf 0xf06
0x000000000044fa1c : retf 0xf07
0x000000000044fb9c : retf 0xf08
0x000000000044fd1c : retf 0xf09
0x000000000044fe9c : retf 0xf0a
0x000000000045001c : retf 0xf0b
0x000000000045019c : retf 0xf0c
0x000000000045031c : retf 0xf0d
0x000000000045049c : retf 0xf0e
0x000000000045061c : retf 0xf0f
0x00000000004056a4 : retf 0xf0ff
0x000000000040c7fc : retf 0xf175
0x000000000045ab4d : retf 0xf1c5
0x000000000040810b : retf 0xf40
0x0000000000479f1b : retf 0xf41
0x000000000045cb10 : retf 0xf48
0x000000000048f951 : retf 0xf4c
0x000000000048eaf6 : retf 0xf631
0x00000000004c1fc8 : retf 0xf64
0x000000000040d8f9 : retf 0xf641
0x0000000000440883 : retf 0xf66
0x00000000004aab84 : retf 0xf6a2
0x00000000004482ba : retf 0xf748
0x000000000047975a : retf 0xf86c
0x00000000004683f5 : retf 0xf883
0x000000000043968d : retf 0xf989
0x000000000045ac1f : retf 0xf9c5
0x00000000004add64 : retf 0xfa35
0x00000000004adb9c : retf 0xfa38
0x0000000000497a22 : retf 0xfa46
0x00000000004ae294 : retf 0xfa55
0x00000000004ae094 : retf 0xfa5f
0x0000000000468858 : retf 0xfa81
0x000000000041f261 : retf 0xfa83
0x0000000000490f62 : retf 0xfaa8
0x000000000047fb0a : retf 0xfac1
0x000000000042e6f2 : retf 0xfd1d
0x000000000048f5f6 : retf 0xfdc5
0x0000000000482372 : retf 0xfe5c
0x000000000049e62b : retf 0xfe8
0x00000000004480e7 : retf 0xfec5
0x0000000000450f41 : retf 0xff2
0x00000000004486eb : retf 0xff3
0x0000000000428e54 : retf 0xff31
0x000000000040c392 : retf 0xff40
0x000000000040996a : retf 0xff6a
0x00000000004a5932 : retf 0xff8c
0x000000000046ed02 : retf 0xff95
0x0000000000489e42 : retf 0xffde
0x0000000000426ba9 : retf 0xffe7
0x00000000004a3462 : retf 0xfff3
0x0000000000480cba : retf 0xfff5
0x0000000000470587 : retf 0xfff6
0x00000000004abb79 : retf 0xfff7
0x000000000047aab2 : retf 0xfff8
0x000000000041a972 : retf 0xfff9
0x00000000004711fe : retf 0xfffa
0x000000000040b9c2 : retf 0xfffb
0x00000000004182a9 : retf 0xfffc
0x00000000004694fa : retf 0xfffd
0x000000000040e2c9 : retf 0xfffe
0x0000000000410cd8 : retf 0xffff
0x000000000041f6ca : retf 1
0x0000000000442e82 : retf 2
0x000000000042b5a4 : retf 3
0x000000000040fccf : retf 4
0x00000000004bbff4 : retf 5
0x00000000004250da : retf 6
0x00000000004bc3f4 : retf 7
0x00000000004bc5f4 : retf 8
0x000000000044840b : retf 9
0x0000000000407fb3 : rol ah, 0x6d ; add byte ptr [rbp + 7], dh ; ret
0x00000000004ae480 : rol al, 1 ; cli ; push qword ptr [rax - 0x3e] ; cli ; call qword ptr [rax]
0x0000000000462745 : rol bl, 0x48 ; mov eax, edi ; ret
0x0000000000464233 : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x000000000041a63c : rol bl, 0x66 ; nop ; mov rax, qword ptr [rsi + 8] ; ret
0x000000000040d428 : rol bl, 0x66 ; nop dword ptr [rax + rax] ; ret
0x000000000040dd8e : rol bl, 0x75 ; sti ; mov rax, qword ptr [rdi + 8] ; ret
0x000000000044739e : rol bl, 0x83 ; ret 0x6620
0x000000000049070b : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004343a7 : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000447b6d : rol bl, 1 ; nop ; xor eax, eax ; ret
0x000000000040d7fd : rol bl, 1 ; nop ; xor r10d, r10d ; mov rax, r10 ; ret
0x00000000004630ed : rol byte ptr [r9 + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x0000000000407bdb : rol byte ptr [rax + 0x38], 1 ; xor al, 1 ; je 0x407bd8 ; ret
0x000000000040c91b : rol byte ptr [rax + 0x38], 1 ; xor al, 1 ; je 0x40c918 ; ret
0x0000000000441d82 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000044788b : rol byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x000000000048f8e2 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000004bbde0 : rol byte ptr [rax + rax], 0 ; ret 4
0x000000000040ff84 : rol byte ptr [rax - 0x6bf08cc8], cl ; ret 0x8b48
0x0000000000495dc1 : rol byte ptr [rax], 0 ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x00000000004485dd : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004699cb : rol byte ptr [rax], 0 ; add dh, dh ; ret 0x7404
0x00000000004d1635 : rol byte ptr [rax], 1 ; add al, ch ; jg 0x4d163b ; call qword ptr [rbx]
0x000000000041966e : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000040320d : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; leave ; ret
0x000000000042b629 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000468827 : rol byte ptr [rbp + 0x31], cl ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000004475e2 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x00000000004a1a05 : rol byte ptr [rbx + 0x394800d3], 1 ; retf 0xe275
0x000000000049e81b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x0000000000434818 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x000000000046fd21 : rol byte ptr [rbx - 0x76befb08], 1 ; ret 0x415f
0x0000000000490972 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000004640c1 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x0000000000482a8f : rol byte ptr [rcx + 0xf], 0x94 ; ret
0x00000000004630ee : rol byte ptr [rcx + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x000000000040093e : rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x0000000000489742 : rol byte ptr [rcx - 0x77], 1 ; ret 0xb9e9
0x0000000000490952 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x0000000000480b12 : rol byte ptr [rcx], 0x39 ; retf
0x000000000046b486 : rol byte ptr [rcx], 0x50 ; call rbx
0x0000000000475fdb : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x0000000000464457 : rol byte ptr [rcx], 0x83 ; ret 0xf01
0x000000000041621c : rol byte ptr [rcx], 0xeb ; ret
0x0000000000411724 : rol byte ptr [rcx], 0xeb ; retf
0x0000000000464470 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x000000000043f8db : rol byte ptr [rcx], 1 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000046acd1 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004909b2 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x0000000000490962 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000004c48bc : rol byte ptr [rdx], 0 ; add byte ptr [rdx], ah ; sal bl, cl ; call qword ptr [rsi]
0x00000000004182a6 : rol byte ptr [rdx], 0xe9 ; retf 0xfffc
0x00000000004909a2 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00000000004d0b4c : rol ch, 0 ; add al, dl ; out dx, eax ; stc ; call qword ptr [rdi]
0x000000000045ad05 : rol ch, 1 ; jns 0x45ace4 ; retf 0xead3
0x000000000045ae55 : rol ch, 1 ; jns 0x45ae34 ; retf 0xead3
0x000000000045afa5 : rol ch, 1 ; jns 0x45af84 ; retf 0xead3
0x000000000045b0f5 : rol ch, 1 ; jns 0x45b0d4 ; retf 0xead3
0x000000000045b245 : rol ch, 1 ; jns 0x45b224 ; retf 0xead3
0x000000000045b395 : rol ch, 1 ; jns 0x45b374 ; retf 0xead3
0x000000000045b4e5 : rol ch, 1 ; jns 0x45b4c4 ; retf 0xead3
0x000000000045b635 : rol ch, 1 ; jns 0x45b614 ; retf 0xead3
0x000000000045b785 : rol ch, 1 ; jns 0x45b764 ; retf 0xead3
0x000000000045b8d5 : rol ch, 1 ; jns 0x45b8b4 ; retf 0xead3
0x000000000045ba25 : rol ch, 1 ; jns 0x45ba04 ; retf 0xead3
0x000000000045bb75 : rol ch, 1 ; jns 0x45bb54 ; retf 0xead3
0x000000000045bcc5 : rol ch, 1 ; jns 0x45bca4 ; retf 0xead3
0x000000000045be15 : rol ch, 1 ; jns 0x45bdf4 ; retf 0xead3
0x000000000045bf65 : rol ch, 1 ; jns 0x45bf44 ; retf 0xead3
0x000000000044790f : rol ch, 1 ; std ; xlatb ; ret
0x000000000048f656 : rol ch, cl ; std ; xlatb ; ret
0x000000000045cc7f : rol ch, cl ; std ; xlatb ; ret 0xc085
0x00000000004bf540 : rol cl, 0xc2 ; ret
0x00000000004ab42c : rol dl, 0xf6 ; dec eax ; ret 0xfff6
0x00000000004ab378 : rol dl, 0xf6 ; inc dword ptr [rax] ; ret
0x00000000004908fc : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x0000000000463e6c : rol dword ptr [rax + 0x48000000], 0x39 ; retf 0xe175
0x0000000000463d08 : rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x00000000004815e7 : rol dword ptr [rax - 0x44], 0x6d ; add byte ptr [rax - 0x39], cl ; ret 0xc3a8
0x00000000004531e0 : rol dword ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x00000000004473c4 : rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x0000000000447903 : rol dword ptr [rbp - 0x3a378a40], 0xfd ; xlatb ; ret 0xc085
0x000000000045c753 : rol dword ptr [rbp - 0x3a678a40], 0xfd ; xlatb ; ret 0xc085
0x000000000047f858 : rol dword ptr [rbx], cl ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x000000000047f881 : rol dword ptr [rbx], cl ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x73e8
0x0000000000494079 : rol dword ptr [rcx], 0 ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x00000000004009a9 : rol dword ptr [rcx], 0x8d ; call r11
0x00000000004734cf : rol dword ptr [rcx], 0xf ; mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x0000000000408151 : rol dword ptr [rdi + 0x10], 0x85 ; sar byte ptr [rsi + 0x15], 0xf3 ; ret
0x00000000004cfeee : rol dword ptr [rdx + 0xe], 8 ; retf 0x2000
0x000000000047158a : rol dword ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000048f5ee : rol ebp, 1 ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x0000000000448045 : rol ebp, 1 ; stc ; xlatb ; ret 0xff2d
0x000000000043eddc : rol ebx, 0x66 ; nop ; xor eax, eax ; ret
0x000000000043eddb : rol r11d, 0x66 ; nop ; xor eax, eax ; ret
0x0000000000468382 : ror ax, 8 ; ret
0x00000000004ad780 : ror bh, 0xf9 ; call qword ptr [rax]
0x00000000004ad774 : ror bl, 1 ; stc ; jmp qword ptr [rax]
0x0000000000408da2 : ror byte ptr [r9 + r15 - 0x37], 0x77 ; or ecx, dword ptr [rax + 1] ; retf 0x8948
0x000000000048e305 : ror byte ptr [r9 + rcx*4 - 1], 0x41 ; call rsp
0x00000000004a6a68 : ror byte ptr [rax + 0x21], cl ; ret 0xc148
0x0000000000447412 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x447459 ; add rax, rdi ; ret
0x000000000045cb17 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x000000000049061c : ror byte ptr [rax + 0x29], 1 ; clc ; shr rax, 2 ; ret
0x000000000042cfde : ror byte ptr [rax + 0x29], 1 ; ret
0x000000000040c42b : ror byte ptr [rax + 0x29], 1 ; ror dword ptr [rax - 0x77], 1 ; retf 0xf40
0x00000000004919ec : ror byte ptr [rax + 0x39], 0xd7 ; ja 0x491a1f ; ret
0x0000000000468008 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x0000000000439c63 : ror byte ptr [rax + 0x39], 1 ; ret
0x000000000049894a : ror byte ptr [rax + 0x39], cl ; ret
0x000000000048c093 : ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000410d39 : ror byte ptr [rax + 0x63], cl ; adc al, 0x91 ; add rdx, rcx ; jmp rdx
0x000000000046a18d : ror byte ptr [rax + 0x63], cl ; test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x000000000049a876 : ror byte ptr [rax + 0xf], 0x44 ; enter -0x76b8, -0x38 ; ret
0x000000000047b91b : ror byte ptr [rax + 0xf], 0x44 ; ret 0xae9
0x000000000040c545 : ror byte ptr [rax + 0xf], 1 ; ret 0x14eb
0x00000000004776b9 : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000040720c : ror byte ptr [rax + 0xf], 1 ; ret 0x66c3
0x00000000004776aa : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x000000000040a729 : ror byte ptr [rax + 0xf], 1 ; ret 0x90c3
0x0000000000407bc8 : ror byte ptr [rax + 0xf], 1 ; ret 0xdeb
0x0000000000407808 : ror byte ptr [rax + 0xf], 1 ; ret 0xfeb
0x00000000004474bc : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x00000000004473e2 : ror byte ptr [rax + 1], 0xf8 ; ret
0x00000000004478d3 : ror byte ptr [rax + 1], 0xf8 ; vzeroupper ; ret
0x0000000000420c83 : ror byte ptr [rax + 1], 1 ; ret
0x000000000045cb14 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000004b81e8 : ror byte ptr [rax + rax], 0 ; ret
0x0000000000447b65 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x000000000049f2ec : ror byte ptr [rax - 0x3f], 0xe0 ; add ecx, dword ptr [rbp - 0x77] ; ret 0x8d48
0x000000000048283a : ror byte ptr [rax - 0x3f], 0xe2 ; and byte ptr [rax + 9], cl ; ret 0xff83
0x0000000000401cdd : ror byte ptr [rax - 0x3f], 1 ; clc ; add cl, byte ptr [rax - 0x77] ; ret 0x8b48
0x00000000004473d2 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x0000000000447402 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x00000000004473f2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x000000000043ee0e : ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x0000000000495a4a : ror byte ptr [rax - 0x73], cl ; add dword ptr [r15], r9d ; xchg eax, ebp ; ret 0xc283
0x000000000040216b : ror byte ptr [rax - 0x75], 1 ; mov r8d, 0xe8c78948 ; ret 0xfff6
0x000000000046587a : ror byte ptr [rax - 0x77], 0xee ; mov edi, ebx ; xor eax, eax ; syscall
0x000000000042d220 : ror byte ptr [rax - 0x77], 1 ; ret
0x00000000004a6a7d : ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x0000000000476ec4 : ror byte ptr [rax - 0x77], 1 ; ret 0x894c
0x000000000040119b : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x000000000049dfea : ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000428ddd : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000043b45d : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000430801 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x430817 ; ret
0x00000000004a0d5c : ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000041023b : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000491903 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x000000000040193a : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000040781d : ror byte ptr [rax - 0x7d], 1 ; clc ; push qword ptr [rbp - 0x14] ; ret
0x0000000000429e80 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000466ab4 : ror byte ptr [rax - 0x7d], 1 ; retf 0x4901
0x000000000046882a : ror byte ptr [rax - 0x7d], cl ; ret
0x0000000000471bc5 : ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000401400 : ror byte ptr [rax - 9], 1 ; ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x00000000004a5655 : ror byte ptr [rax], 0x83 ; ret 0x3901
0x000000000048af42 : ror byte ptr [rbp + 0x39441604], cl ; retf 0xf41
0x000000000048b462 : ror byte ptr [rbp + 0x39441704], cl ; ret 0xf49
0x000000000040dbd2 : ror byte ptr [rbp + 0x39d0884c], cl ; retf 0xdd77
0x000000000048ffec : ror byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call rbx
0x000000000046870c : ror byte ptr [rbp - 0x77], cl ; ret
0x000000000040f3fc : ror byte ptr [rbx + 0x433b3843], cl ; cmp al, 0x7d ; retf 0x8b48
0x00000000004cf360 : ror byte ptr [rbx - 7], 1 ; call qword ptr [rbx]
0x00000000004a0754 : ror byte ptr [rcx + 0x2b802], 1 ; add byte ptr [rax], al ; ret
0x00000000004185b7 : ror byte ptr [rcx + 0x63], 4 ; test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x000000000040d802 : ror byte ptr [rcx + rcx*4 - 0x30], cl ; ret
0x000000000048e306 : ror byte ptr [rcx + rcx*4 - 1], 0x41 ; call rsp
0x0000000000408da3 : ror byte ptr [rcx + rdi - 0x37], 0x77 ; or ecx, dword ptr [rax + 1] ; retf 0x8948
0x0000000000478bc6 : ror byte ptr [rcx - 0x73], 0x43 ; adc byte ptr [rdi], cl ; sahf ; ret 0x894c
0x000000000040d95d : ror byte ptr [rcx - 0x77], cl ; push rdx ; mov rax, rdx ; ret
0x0000000000484528 : ror byte ptr [rcx - 0x77], cl ; ret
0x000000000046c49f : ror byte ptr [rcx - 0x7d], cl ; cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x00000000004182c3 : ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x0000000000467d6c : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x0000000000494021 : ror byte ptr [rdi], 0x84 ; clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000047af1c : ror byte ptr [rdi], 0x84 ; lahf ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000042bc3d : ror byte ptr [rdi], 0x84 ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000491b39 : ror byte ptr [rdi], 0x84 ; nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000414c1c : ror byte ptr [rdi], 0x84 ; pop rbp ; retf 0xffff
0x000000000042b3c1 : ror byte ptr [rdi], 0x84 ; popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041da56 : ror byte ptr [rdi], 0x84 ; ret
0x000000000048303b : ror byte ptr [rdi], 0x84 ; ret 0x17
0x000000000046d427 : ror byte ptr [rdi], 0x84 ; ret 0xfffc
0x00000000004144ad : ror byte ptr [rdi], 0x84 ; retf
0x0000000000469022 : ror byte ptr [rdi], 0x84 ; retf 0
0x0000000000426ba6 : ror byte ptr [rdi], 0x84 ; retf 0xffe7
0x00000000004700bc : ror byte ptr [rdi], 0x84 ; retf 0xfffc
0x000000000045d04a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x000000000043e7af : ror byte ptr [rdi], 0x85 ; ret
0x00000000004693ff : ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x0000000000499b32 : ror byte ptr [rdi], 0x85 ; ret 2
0x0000000000482d0e : ror byte ptr [rdi], 0x85 ; retf
0x00000000004694f7 : ror byte ptr [rdi], 0x85 ; retf 0xfffd
0x000000000044774d : ror byte ptr [rdi], 0x85 ; retf 1
0x000000000047f83c : ror byte ptr [rdi], 0x85 ; retf 6
0x0000000000404336 : ror byte ptr [rdi], 0x85 ; sgdt [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043efaf : ror byte ptr [rdi], 0x88 ; retf 1
0x0000000000483bd9 : ror byte ptr [rdi], 0x8f ; ret 7
0x0000000000467acc : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x000000000049b609 : ror byte ptr [rdi], 0x94 ; ret
0x000000000049d0fa : ror byte ptr [rdi], 0x94 ; ret 0x3d
0x0000000000410c90 : ror byte ptr [rdi], 0x94 ; ret 0x453c
0x0000000000489ded : ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x00000000004a0d5f : ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000462bbe : ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000042c4fb : ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x00000000004012a2 : ror byte ptr [rdi], 0x95 ; ret
0x000000000042bb00 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x00000000004891fa : ror byte ptr [rdi], 0xb6 ; add al, 7 ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x000000000043ee0b : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x0000000000463035 : ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x0000000000428df2 : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x428ddc ; ret
0x000000000040dd38 : ror byte ptr [rdi], 1 ; mov dh, 0xc0 ; ret
0x000000000047fb6e : ror byte ptr [rdi], cl ; ret 0xf8c1
0x00000000004ad3e8 : ror byte ptr [rsi - 7], 1 ; push rax ; stc ; call qword ptr [rax]
0x000000000040309f : ror cl, 1 ; ret
0x00000000004ae4b4 : ror dh, 0xfa ; call qword ptr [rax]
0x00000000004ae4a8 : ror dl, 1 ; cli ; jmp qword ptr [rax]
0x00000000004506f7 : ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x0000000000408028 : ror dword ptr [rax + 0x39], cl ; ret
0x00000000004a135e : ror dword ptr [rax + 1], 0xf8 ; sub rax, r8 ; ret
0x0000000000462bc8 : ror dword ptr [rax + 1], 0xf8 ; sub rax, rsi ; ret
0x000000000045c9e4 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0x8948
0x000000000045cb09 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf48
0x000000000048f94a : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf4c
0x00000000004a6c44 : ror dword ptr [rax - 0x3f], cl ; out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x00000000004028be : ror dword ptr [rax - 0x75], 0x45 ; fmul dword ptr [rax - 0x77] ; ret 0x8948
0x000000000048ba16 : ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x0000000000402b04 : ror dword ptr [rax - 0x77], 1 ; ret 0x8948
0x000000000043f557 : ror dword ptr [rax - 0x77], 1 ; ret 0xaeeb
0x0000000000409b28 : ror dword ptr [rax - 0x77], 1 ; ret 0xc031
0x0000000000495e53 : ror dword ptr [rax - 0x77], 1 ; ret 0xd348
0x0000000000482270 : ror dword ptr [rax - 0x77], 1 ; ret 0xe7e9
0x0000000000475158 : ror dword ptr [rax - 0x77], 1 ; retf 0x8348
0x00000000004022a9 : ror dword ptr [rax - 0x77], 1 ; retf 0xc148
0x000000000040c42e : ror dword ptr [rax - 0x77], 1 ; retf 0xf40
0x00000000004a1971 : ror dword ptr [rax - 0x77], cl ; ret
0x000000000043249d : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x432497 ; ret
0x000000000048ca9d : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x48ca97 ; ret
0x0000000000481d69 : ror dword ptr [rax - 0x7d], 0xe8 ; add al, 0xe9 ; retf 0xfffb
0x000000000040a1fb : ror dword ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047a024 : ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000049ffbd : ror dword ptr [rbp + rcx*4 + 0x14], cl ; ret
0x0000000000404292 : ror dword ptr [rcx + rcx*4 + 8], 1 ; jmp 0x404268
0x0000000000481c2b : ror dword ptr [rcx - 0x77], 0x14 ; ret 0x8b48
0x0000000000460b77 : ror dword ptr [rcx], cl ; ret 0xe074
0x000000000049813e : ror dword ptr [rdi], 0x84 ; retf 6
0x0000000000448e48 : ror dword ptr [rdi], 0x85 ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000449554 : ror dword ptr [rdi], 0x85 ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000449326 : ror dword ptr [rdi], 0x85 ; add eax, 0xc0310000 ; ret
0x00000000004492a6 : ror dword ptr [rdi], 0x85 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00000000004495e4 : ror dword ptr [rdi], 0x85 ; je 0x4495f4 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004490db : ror dword ptr [rdi], 0x85 ; jno 0x4490f0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004491a3 : ror dword ptr [rdi], 0x85 ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000448e20 : ror dword ptr [rdi], 0x85 ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000468383 : ror eax, 8 ; ret
0x000000000043249c : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x432498 ; ret
0x000000000048ca9c : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x48ca98 ; ret
0x000000000041cabe : sahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jbe 0x41cade ; syscall
0x000000000047d20a : sahf ; and eax, 0x48b4800 ; clc ; jmp rax
0x00000000004add1c : sahf ; cli ; ljmp [rsi] ; cli ; call rsp
0x0000000000488ade : sahf ; int1 ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000045b70e : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041db8d : sahf ; ret
0x00000000004c0425 : sahf ; ret 0x38ae
0x000000000049f8b1 : sahf ; ret 0x3948
0x0000000000478bcc : sahf ; ret 0x894c
0x0000000000418ca4 : sahf ; ret 0xf45
0x00000000004c0f5c : sahf ; retf
0x00000000004735f8 : sahf ; retf 3
0x000000000043481e : sal bh, 0xd8 ; ret
0x0000000000441c07 : sal bh, 1 ; ret 0x8000
0x0000000000441ac7 : sal bh, 1 ; ret 0xc000
0x0000000000441987 : sal bh, 1 ; ret 0xe000
0x0000000000441847 : sal bh, 1 ; ret 0xf000
0x0000000000441707 : sal bh, 1 ; ret 0xf800
0x00000000004415c7 : sal bh, 1 ; ret 0xfc00
0x0000000000441487 : sal bh, 1 ; ret 0xfe00
0x0000000000441347 : sal bh, 1 ; ret 0xff00
0x0000000000441207 : sal bh, 1 ; ret 0xff80
0x00000000004410c7 : sal bh, 1 ; ret 0xffc0
0x0000000000440f87 : sal bh, 1 ; ret 0xffe0
0x0000000000440e47 : sal bh, 1 ; ret 0xfff0
0x0000000000440d07 : sal bh, 1 ; ret 0xfff8
0x0000000000440bc7 : sal bh, 1 ; ret 0xfffc
0x0000000000440a87 : sal bh, 1 ; ret 0xfffe
0x00000000004ad940 : sal bh, 1 ; stc ; jmp qword ptr [rax]
0x0000000000407ad2 : sal bl, 1 ; ret
0x00000000004c45c1 : sal bl, cl ; call qword ptr [rdx]
0x00000000004c48c1 : sal bl, cl ; call qword ptr [rsi]
0x000000000049b4ad : sal bl, cl ; ret
0x0000000000429d7b : sal byte ptr [rax + 0x48006dc3], 0x39 ; ret
0x0000000000428d1d : sal byte ptr [rax + 0x48], 0xc7 ; ret 0xfff0
0x00000000004a57c1 : sal byte ptr [rax + rax*8 + 0x49], 0x83 ; ret 0xf608
0x00000000004926ed : sal byte ptr [rax - 0x75], 0x35 ; ret 0x2473
0x00000000004aab70 : sal byte ptr [rax - 0xa], 1 ; call qword ptr [rax - 0x2f00098b]
0x00000000004aaab0 : sal byte ptr [rax - 0xa], 1 ; call rax
0x0000000000465917 : sal byte ptr [rbp + 0x16], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000465be7 : sal byte ptr [rbp + 0x16], 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000467e47 : sal byte ptr [rbp + 0x16], 0xb8 ; sub al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000048fba2 : sal byte ptr [rbp + 0x2b], 0x4c ; mov eax, eax ; vzeroupper ; ret
0x0000000000408cd0 : sal byte ptr [rbp + 0x4c], 0x89 ; ret 0x8948
0x000000000049e6ae : sal byte ptr [rbp + 0x4f], 0x89 ; ret
0x0000000000404275 : sal byte ptr [rbp + 0x57], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000491746 : sal byte ptr [rbp + 0x5d], 0xb8 ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000004210cb : sal byte ptr [rbp + 0xa], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000041ba53 : sal byte ptr [rbp + 0xa], 0xf3 ; ret
0x00000000004072bb : sal byte ptr [rbp + 2], cl ; ret
0x000000000041ba38 : sal byte ptr [rbp + 5], 0xf3 ; ret
0x0000000000407248 : sal byte ptr [rbp + 5], cl ; ret
0x0000000000468021 : sal byte ptr [rbp + 8], 1 ; nop ; mov eax, 0xca ; syscall
0x0000000000430804 : sal byte ptr [rbp + 9], cl ; ret
0x0000000000468031 : sal byte ptr [rbp - 0x10], 0x5a ; pop r10 ; ret
0x00000000004333bd : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x00000000004628b0 : sal byte ptr [rbp - 0x13], cl ; lea rax, [rcx - 1] ; ret
0x00000000004324a0 : sal byte ptr [rbp - 0x13], cl ; ret
0x0000000000441f2b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x0000000000428df7 : sal byte ptr [rbp - 0x27], cl ; ret
0x000000000044790d : sal byte ptr [rbp - 0x30], 0xc5 ; std ; xlatb ; ret
0x000000000049cf68 : sal byte ptr [rbp - 0x31], cl ; movsx eax, cl ; neg eax ; ret
0x0000000000447905 : sal byte ptr [rbp - 0x38], 0xc5 ; std ; xlatb ; ret 0xc085
0x000000000045c75d : sal byte ptr [rbp - 0x50], 0xc5 ; std ; xlatb ; ret
0x000000000045c755 : sal byte ptr [rbp - 0x68], 0xc5 ; std ; xlatb ; ret 0xc085
0x000000000049045b : sal byte ptr [rbp - 0xe], cl ; ret
0x00000000004347dc : sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x00000000004699b6 : sal byte ptr [rbx + rbp + 0x48], 0x8b ; push rax ; or dh, dh ; ret 0x8902
0x0000000000408ab2 : sal byte ptr [rbx + rbx + 0x4c], 0x89 ; ret 0x894c
0x0000000000409dcc : sal byte ptr [rbx + rcx*4 + 0x4c], 0x89 ; ret 0x61e8
0x00000000004ae460 : sal byte ptr [rbx - 0x4a8f0006], 1 ; cli ; call qword ptr [rax]
0x000000000045ca5c : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000046b482 : sal byte ptr [rcx], 0xd2 ; add eax, 1 ; push rax ; call rbx
0x0000000000468006 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x000000000048f8ab : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000040040d : sal byte ptr [rdx + rax - 1], 0xd0 ; add rsp, 8 ; ret
0x00000000004691db : sal byte ptr [rdx + rcx + 0x48], cl ; lea edi, [rcx + rax + 0x20] ; jmp rdx
0x000000000045cd73 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x000000000042e8e3 : sal byte ptr [rsi + 0x7400002a], 2 ; ret
0x0000000000403621 : sal byte ptr [rsp + rax + 0x3c], 0x10 ; jne 0x403641 ; xor eax, eax ; ret
0x00000000004a1121 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x000000000049ba69 : sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x00000000004a581a : sal byte ptr [rsp + rsi*4 + 0x48], 0x83 ; ret 0xf608
0x00000000004ab375 : sal dh, 0xff ; rol dl, 0xf6 ; inc dword ptr [rax] ; ret
0x00000000004ab455 : sal dh, cl ; call qword ptr [rax]
0x00000000004ab451 : sal dh, cl ; jmp qword ptr [rax]
0x000000000040c1b5 : sal dword ptr [rax + rdi + 0x4c], 0x39 ; ret 0x8b4c
0x000000000040b9be : sal dword ptr [rcx], 1 ; shr cl, cl ; retf 0xfffb
0x0000000000462f93 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004c4931 : sal ebx, cl ; jmp qword ptr [rax]
0x00000000004c4911 : sal ebx, cl ; jmp qword ptr [rsi]
0x000000000049cf6d : sal edi, 0xd8 ; ret
0x0000000000495edc : sal esi, cl ; adc dword ptr [rip + 0x20000003], 0x75 ; retf 0x5f6
0x00000000004c45c0 : sal r11b, cl ; call qword ptr [rdx]
0x000000000041e320 : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret
0x0000000000465523 : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000049347b : sar bh, 0xff ; dec dword ptr [rbp + rcx*4 + 0xd] ; retf 0x29f
0x000000000049bdf3 : sar bh, 0xff ; lcall [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x00000000004a06b0 : sar bh, 0xff ; mov eax, 1 ; ret
0x00000000004ad94c : sar bl, 0xf9 ; call qword ptr [rax]
0x000000000041da52 : sar byte ptr [rax + 0x5b], 0x85 ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000497d31 : sar byte ptr [rax + 0xe], 0x5b ; ret
0x00000000004ae3ec : sar byte ptr [rax - 6], 0xff ; sar byte ptr [rdx - 6], 1 ; jmp rax
0x00000000004ad5fc : sar byte ptr [rbp - 0x41af0007], 1 ; stc ; call rax
0x00000000004ad5f4 : sar byte ptr [rcx + rdi*8 - 0x642af01], 1 ; call rax
0x000000000040dccf : sar byte ptr [rcx - 0x29], cl ; ret
0x0000000000462b6e : sar byte ptr [rcx], 0xc8 ; jle 0x462bb0 ; movsxd rax, ecx ; ret
0x000000000040dbd6 : sar byte ptr [rcx], 1 ; retf 0xdd77
0x000000000046a05d : sar byte ptr [rcx], cl ; ret
0x000000000047e5d7 : sar byte ptr [rcx], cl ; retf 0x147f
0x00000000004093a4 : sar byte ptr [rdi - 0x49], 0xeb ; ret
0x000000000040915c : sar byte ptr [rdi - 0x4f], 0xeb ; ret 0x1f0f
0x00000000004ae3f0 : sar byte ptr [rdx - 6], 1 ; jmp rax
0x00000000004754d6 : sar byte ptr [rdx], 0xf ; ret 0xc083
0x0000000000408155 : sar byte ptr [rsi + 0x15], 0xf3 ; ret
0x00000000004c0dbf : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004ceef0 : sar byte ptr [rsi - 8], 1 ; call qword ptr [rax]
0x00000000004ad7c9 : sar cl, cl ; jmp qword ptr [rax]
0x00000000004ad994 : sar dh, 1 ; stc ; jmp qword ptr [rax]
0x00000000004ae481 : sar dl, 0xff ; jo 0x4ae44e ; cli ; call qword ptr [rax]
0x00000000004544d3 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x4544de ; ret
0x00000000004634a9 : sar dword ptr [rsi + 0x7f], 0x23 ; vzeroupper ; ret
0x0000000000401f86 : sar eax, 2 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000048dcfc : sar eax, 2 ; lea eax, [r8 - 1] ; ret
0x0000000000401c5d : sar eax, 2 ; pop rbp ; ret
0x00000000004a472e : sar eax, 3 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004c3b75 : sar ebp, cl ; jmp qword ptr [rbx]
0x00000000004c3b81 : sar ebp, cl ; push rsp ; sar ebp, cl ; jmp qword ptr [rbx]
0x00000000004d2849 : sar ebx, 1 ; jmp qword ptr [rax]
0x00000000004ad5d9 : sar ecx, 0xff ; imul eax, edx, -7 ; push rax ; ret 0xfff9
0x00000000004ad619 : sar ecx, 0xff ; push rax ; ret 0xfff9
0x00000000004ad5d5 : sar ecx, 0xff ; retf
0x00000000004ad599 : sar ecx, 0xff ; xchg dl, al ; stc ; inc dword ptr [rdi] ; ret
0x00000000004ad7c5 : sar ecx, 1 ; call rax
0x00000000004c0b23 : sar ecx, 1 ; jnp 0x4c0ae4 ; ret
0x00000000004d08f5 : sar ecx, cl ; jmp qword ptr [rdx]
0x000000000048de02 : sar edx, 2 ; sub eax, edx ; ret
0x0000000000447b67 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000463963 : sar esi, 1 ; jg 0x463993 ; vzeroupper ; ret
0x0000000000463afc : sar esi, 1 ; jg 0x463b2c ; vzeroupper ; ret
0x000000000048dcfb : sar r8, 2 ; lea eax, [r8 - 1] ; ret
0x0000000000401c5c : sar rax, 2 ; pop rbp ; ret
0x00000000004a472d : sar rax, 3 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000048de01 : sar rdx, 2 ; sub eax, edx ; ret
0x0000000000447b66 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00000000004ad6c0 : sbb ah, 0xf9 ; inc dword ptr [rax - 0x22] ; stc ; jmp qword ptr [rax]
0x000000000047f825 : sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x0000000000402382 : sbb al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004c46c4 : sbb al, 0 ; add byte ptr [rax], al ; cmp al, 1 ; add byte ptr [rax], al ; ret 0xf3c7
0x0000000000466741 : sbb al, 0 ; add byte ptr [rax], al ; syscall
0x00000000004c6ba8 : sbb al, 0x26 ; add byte ptr [rax], al ; mov ah, 2 ; hlt ; call qword ptr [rdx]
0x0000000000464f94 : sbb al, 0x27 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000482c9d : sbb al, 0x29 ; ret 0xe683
0x0000000000409553 : sbb al, 0x48 ; lea eax, [rdi + 0x18] ; ret
0x00000000004ca4a8 : sbb al, 0x5f ; add byte ptr [rax], al ; xchg eax, esp ; ret 0xfff4
0x0000000000483bd7 : sbb al, 0x85 ; ror byte ptr [rdi], 0x8f ; ret 7
0x00000000004c1e22 : sbb al, 0x8c ; retf
0x00000000004c5064 : sbb al, 0xdd ; jmp qword ptr [rdx]
0x00000000004c8471 : sbb al, 0xf4 ; jmp qword ptr [rdx]
0x00000000004c6384 : sbb al, 0xfa ; call qword ptr [rdx]
0x00000000004ae4e5 : sbb al, 0xfb ; call rax
0x00000000004d4964 : sbb al, 0xfb ; cld ; jmp qword ptr [rdx]
0x00000000004ae4e1 : sbb al, 0xfb ; inc eax ; sbb al, 0xfb ; call rax
0x00000000004ae4e9 : sbb al, 0xfb ; jmp rax
0x00000000004c6704 : sbb al, 0xfe ; call qword ptr [rbx]
0x000000000047a91a : sbb al, 1 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000429362 : sbb al, 7 ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000480306 : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004221f3 : sbb al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x0000000000485dab : sbb al, byte ptr fs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000426388 : sbb al, ch ; ret 0xffaf
0x000000000040e82f : sbb al, ch ; retf
0x000000000040e82e : sbb al, r13b ; retf
0x00000000004cba18 : sbb bh, ah ; cmc ; call qword ptr [rax]
0x00000000004ceb61 : sbb bh, dh ; jmp qword ptr [rbx]
0x00000000004c0bb2 : sbb bl, byte ptr [rip + 0x30565c9] ; in eax, dx ; retf
0x00000000004bf8a5 : sbb bl, byte ptr [rsi] ; ret
0x000000000040f3b7 : sbb byte ptr [r15], cl ; mov dh, 0x6a ; add dword ptr [rax - 0x77], ecx ; ret 0x8440
0x000000000049dcd4 : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000040ee6a : sbb byte ptr [r8 - 0x7bf0b6c8], al ; retf
0x00000000004a1c34 : sbb byte ptr [r8], al ; add byte ptr [rax], al ; add bl, ch ; ret
0x0000000000449913 : sbb byte ptr [r9], bpl ; add byte ptr [rax + 0x39], cl ; retf 0x8949
0x00000000004a0d59 : sbb byte ptr [r9], sil ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x00000000004917d1 : sbb byte ptr [rax + 0x101], bh ; syscall
0x000000000040299a : sbb byte ptr [rax + 0x28c48348], dl ; pop rbx ; pop rbp ; ret
0x000000000049a311 : sbb byte ptr [rax + 0x29], cl ; ret 0x394c
0x00000000004351b1 : sbb byte ptr [rax + 0x39], cl ; ret
0x000000000047a174 : sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000437785 : sbb byte ptr [rax + 0x39], cl ; retf 0x850f
0x000000000049dcd5 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000410bff : sbb byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rcx ; jmp rax
0x0000000000410a18 : sbb byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000040dfb1 : sbb byte ptr [rax + 1], bh ; ret
0x000000000040dfb0 : sbb byte ptr [rax + 1], dil ; ret
0x00000000004cde0c : sbb byte ptr [rax - 0x3aa00000], 0xf6 ; jmp rsi
0x00000000004856b2 : sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x000000000041a2aa : sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x00000000004a160f : sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; retf 0xc148
0x000000000049e6b7 : sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x000000000043b40d : sbb byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x000000000049b815 : sbb byte ptr [rax - 0x77], cl ; or r9b, bpl ; retf 0xfffd
0x0000000000490330 : sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov r9, r14 ; call rbx
0x000000000049ba8c : sbb byte ptr [rax - 0x77], cl ; push rbx ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000432501 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000043615b : sbb byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004a193f : sbb byte ptr [rax - 0x77], cl ; ret
0x000000000042d38e : sbb byte ptr [rax - 0x77], cl ; retf
0x0000000000410ef6 : sbb byte ptr [rax - 0x7af0a0c6], al ; retf
0x0000000000435973 : sbb byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000000000040ee6b : sbb byte ptr [rax - 0x7bf0b6c8], al ; retf
0x00000000004a1c35 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add bl, ch ; ret
0x00000000004d0ff4 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; retf 0
0x0000000000465561 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000042583a : sbb byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x0000000000408f0c : sbb byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000407fcd : sbb byte ptr [rax], al ; ret
0x00000000004a68b5 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000043ba28 : sbb byte ptr [rbx + 0x5d], bl ; jmp rax
0x00000000004035ce : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000040193e : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000434397 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000004ae654 : sbb byte ptr [rbx - 5], 0xff ; cwde ; pop rbx ; sti ; call rax
0x00000000004c68a4 : sbb byte ptr [rbx], ah ; add byte ptr [rax], al ; push rbx ; call qword ptr [rdi]
0x000000000048db1a : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x0000000000474d02 : sbb byte ptr [rcx + 1], cl ; fadd qword ptr [rax - 0x7bf0ffc2] ; retf
0x000000000043588e : sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x000000000048e02e : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000004a745f : sbb byte ptr [rcx + rdi + 0x6d], cl ; js 0x4a74e2 ; ret 0x8b48
0x0000000000470f88 : sbb byte ptr [rcx - 0x77], al ; ret
0x00000000004cfea4 : sbb byte ptr [rcx - 0x7f080000], bh ; stc ; jmp qword ptr [rcx]
0x00000000004c9ea8 : sbb byte ptr [rcx - 0xc], al ; call qword ptr [rax]
0x000000000043b7b8 : sbb byte ptr [rcx], 0x2a ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000428ef0 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000004c9ea4 : sbb byte ptr [rcx], bl ; add byte ptr [rax], bl ; hlt ; call qword ptr [rax]
0x0000000000449914 : sbb byte ptr [rcx], ch ; add byte ptr [rax + 0x39], cl ; retf 0x8949
0x00000000004035e3 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000040ff82 : sbb byte ptr [rcx], dh ; rol byte ptr [rax - 0x6bf08cc8], cl ; ret 0x8b48
0x000000000043b45b : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004a0d5a : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000040f3b8 : sbb byte ptr [rdi], cl ; mov dh, 0x6a ; add dword ptr [rax - 0x77], ecx ; ret 0x8440
0x000000000041f273 : sbb byte ptr [rdi], cl ; retf 0xd289
0x00000000004d1018 : sbb byte ptr [rdx - 3], ch ; jmp qword ptr [rdi]
0x00000000004ca00c : sbb byte ptr [rdx], 0 ; push rax ; push rcx ; hlt ; jmp qword ptr [rbx]
0x00000000004a311b : sbb byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000403e54 : sbb ch, al ; mov byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004d12a4 : sbb ch, cl ; add byte ptr [rax], al ; pop rax ; pop rdi ; cli ; call qword ptr [rdx]
0x0000000000439c5d : sbb cl, byte ptr [rax + 0x29480614] ; ror byte ptr [rax + 0x39], 1 ; ret
0x0000000000402458 : sbb cl, byte ptr [rax - 0x77] ; ret
0x0000000000407285 : sbb cl, byte ptr [rax - 0x7b] ; div byte ptr [rbp + 5] ; ret
0x0000000000407ab5 : sbb cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000047470d : sbb cl, byte ptr [rdi] ; mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x0000000000459e5d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000045baaa : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000045b2ca : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000045b6ba : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045aeda : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045a9bd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000045a19d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000045997d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000045b079 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000045a4dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000459cbd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000045949d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000045a67d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000045b56a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045ad8a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045be9a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004597dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000459913 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045a613 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045a133 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045b46b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000045bd9b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000045a953 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000459c53 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000459773 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045a473 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000045b5bb : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000045addb : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004aba29 : sbb dh, bh ; call qword ptr [rax]
0x00000000004aba51 : sbb dh, bh ; call rsi
0x00000000004aba71 : sbb dh, bh ; jmp qword ptr [rax]
0x000000000041a5d5 : sbb dh, bl ; ret
0x000000000049c977 : sbb dl, dh ; jmp r11
0x0000000000407b36 : sbb dword ptr [rax - 0x77], ecx ; ret
0x00000000004a470b : sbb dword ptr [rax - 0x7d], ecx ; ret
0x000000000041a4c9 : sbb dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x00000000004c85bc : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add al, 0xc2 ; retf
0x0000000000467de4 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000047d661 : sbb dword ptr [rbx - 0x52743], eax ; call qword ptr [rax]
0x00000000004c215d : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000468436 : sbb dword ptr [rcx - 0x7d], eax ; ret 0x4101
0x000000000047ab84 : sbb dword ptr [rcx], eax ; add byte ptr [rax + 0x39], cl ; ret
0x000000000047e756 : sbb dword ptr [rcx], eax ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000043b7b9 : sbb dword ptr [rdx], ebp ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000482580 : sbb dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf
0x0000000000462587 : sbb eax, -1 ; ret
0x0000000000419622 : sbb eax, 0x18c48348 ; ret
0x00000000004c85b9 : sbb eax, 0x19fff4 ; add byte ptr [rax], al ; add al, 0xc2 ; retf
0x00000000004ae4f5 : sbb eax, 0x1d10fffb ; sti ; jmp qword ptr [rax]
0x00000000004ae521 : sbb eax, 0x1dc0fffb ; sti ; jmp rax
0x00000000004ae52d : sbb eax, 0x1e00fffb ; sti ; jmp qword ptr [rax]
0x00000000004a7520 : sbb eax, 0x235b8b ; jne 0x4a7510 ; pop rbx ; ret
0x00000000004c0bb3 : sbb eax, 0x30565c9 ; in eax, dx ; retf
0x000000000047d45f : sbb eax, 0x480025a1 ; mov eax, dword ptr [rax + rdi*8] ; jmp rax
0x000000000041c0cb : sbb eax, 0x74002c11 ; or al, 0x81 ; retf 0x440
0x00000000004851bc : sbb eax, 0xe81ffec1 ; ret
0x00000000004c85d1 : sbb eax, 0xefff4 ; add byte ptr [rax], al ; add al, 0xae ; retf
0x00000000004c62dd : sbb eax, 0xf9500000 ; call qword ptr [rdx]
0x00000000004c6381 : sbb eax, 0xfa1c0000 ; call qword ptr [rdx]
0x000000000041f188 : sbb eax, 0xfc80f00 ; retf 0xc089
0x00000000004c60b5 : sbb eax, dword ptr [rax] ; add al, bl ; div bl ; jmp qword ptr [rdx]
0x000000000047a002 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000422f6a : sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe02], al ; ret 0x1b
0x000000000042238c : sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe07], al ; retf 0x1b
0x0000000000417306 : sbb eax, eax ; add rsp, 8 ; and eax, 0xfffffffe ; ret
0x000000000049e81a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x0000000000447fc7 : sbb eax, eax ; or eax, 1 ; ret
0x000000000041a1af : sbb eax, eax ; ret
0x0000000000462585 : sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000440541 : sbb ebp, dword ptr [rip + 0xf480002] ; ret 0x66c3
0x00000000004c1cc8 : sbb ebp, ebx ; retf
0x000000000048eac9 : sbb ecx, dword ptr [rbp + 0x29] ; ret 0x8948
0x000000000046d6be : sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x000000000041f1cd : sbb ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000004c1a59 : sbb edi, ebp ; retf
0x00000000004aba0d : sbb edi, esi ; jmp qword ptr [rcx]
0x000000000046870a : sbb esi, dword ptr [rcx] ; ror byte ptr [rbp - 0x77], cl ; ret
0x00000000004067c3 : sbb esi, dword ptr [rsi] ; or al, byte ptr [rax] ; ret
0x000000000048e91f : sbb esi, edi ; dec dword ptr [rax + 1] ; ret
0x00000000004cec21 : sbb esi, edi ; jmp qword ptr [rbx]
0x00000000004aba4d : sbb esi, edi ; push rbp ; sbb dh, bh ; call rsi
0x00000000004c8391 : sbb esi, esp ; call qword ptr [rdx]
0x00000000004c82b5 : sbb esp, esi ; jmp qword ptr [rdx]
0x0000000000402270 : scasb al, byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000447062 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045bafe : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x000000000046add9 : scasb al, byte ptr [rdi] ; call 0x477873
0x0000000000497222 : scasb al, byte ptr [rdi] ; imul eax, dword ptr [rdx], 0x450f4800 ; ret 0x8b48
0x00000000004c2109 : scasb al, byte ptr [rdi] ; or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x00000000004c85d9 : scasb al, byte ptr [rdi] ; retf
0x000000000045bbfd : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004307ee : scasd eax, dword ptr [rdi] ; nop ; xor eax, eax ; ret
0x00000000004152cd : scasd eax, dword ptr [rdi] ; ret
0x0000000000477c0e : scasd eax, dword ptr [rdi] ; ret 0x148
0x000000000042d476 : scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000435889 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000000000416fed : scasd eax, dword ptr [rdi] ; ret 0xd285
0x0000000000464473 : scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x000000000041f53d : scasd eax, dword ptr [rdi] ; retf
0x000000000049a85d : scasd eax, dword ptr [rdi] ; retf 0x14c
0x00000000004c0e34 : scasd eax, dword ptr [rdi] ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x00000000004c00af : scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x0000000000407234 : seta al ; ret
0x000000000046800c : setae al ; ret
0x00000000004027e8 : sete al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040d4a4 : sete al ; add rsp, 8 ; ret
0x00000000004065e5 : sete al ; lea eax, [rax + rax*4 + 1] ; ret
0x000000000040283b : sete al ; leave ; ret
0x0000000000407458 : sete al ; ret
0x000000000047793a : sete dh ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x000000000040dd34 : sete dl ; or eax, edx ; movzx eax, al ; ret
0x0000000000407f85 : setg al ; ret
0x0000000000401938 : setne al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040478e : setne al ; add rsp, 8 ; ret
0x000000000043481c : setne al ; neg eax ; ret
0x0000000000404339 : sgdt [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004d264c : shl al, 0 ; add byte ptr [rax - 0x3e], dl ; sti ; jmp qword ptr [rbx]
0x00000000004478ab : shl byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x000000000044786b : shl byte ptr [rax], 0x48 ; add eax, edi ; vzeroupper ; ret
0x00000000004ae5c4 : shl byte ptr [rbx + rdi*8], 1 ; push rax ; and al, 0xfb ; call qword ptr [rax]
0x00000000004ae5a0 : shl byte ptr [rbx], 0xfb ; call rax
0x00000000004ae5a4 : shl byte ptr [rbx], 1 ; sti ; push rax ; and edi, ebx ; call qword ptr [rax]
0x00000000004ae578 : shl byte ptr [rdx], 0xfb ; call rax
0x00000000004ae57c : shl byte ptr [rdx], 1 ; sti ; jmp rax
0x00000000004627cf : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x000000000044087b : shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x0000000000460b73 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x000000000045c325 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x00000000004497db : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x00000000004497f2 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000048f446 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000048f457 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000004496d1 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004d285c : shl dl, 1 ; add byte ptr [rax], al ; adc ah, 0xfb ; jmp qword ptr [rbx]
0x00000000004b9410 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004c09bd : shl dword ptr [rax - 0x6a5aa279], 1 ; retf 0x33e6
0x000000000047d4bb : shl dword ptr [rax - 0x74b7ffdb], 4 ; clc ; jmp rax
0x00000000004a1427 : shl dword ptr [rbx], 0 ; add word ptr [rdx + rax*2], 1 ; ret
0x000000000043968b : shl dword ptr [rcx], 1 ; retf 0xf989
0x00000000004c0ca8 : shl dword ptr [rdi - 5], 1 ; ret
0x00000000004627b2 : shl dword ptr [rsi + 0x44], 0xf ; out dx, eax ; retf 0x4466
0x000000000044087f : shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000048f442 : shl dword ptr [rsi + 0xf], 0xd7 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000046262b : shl dword ptr [rsi + 0xf], 0xda ; ret
0x0000000000449756 : shl dword ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044980d : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x00000000004497f6 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x00000000004497df : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000044829b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000449771 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004471fc : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x0000000000449631 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000046acf1 : shl eax, cl ; pop rbp ; pop r12 ; ret
0x000000000046aced : shl ecx, 3 ; pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x000000000049eeec : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000049ee77 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x000000000049ee46 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000401c7a : shl edx, 2 ; add rax, rdx ; pop rbp ; ret
0x000000000049eeeb : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000049ee76 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x000000000049ee45 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000401c79 : shl rdx, 2 ; add rax, rdx ; pop rbp ; ret
0x0000000000408910 : shr al, 0x7a ; ret
0x00000000004a39bb : shr al, 0xc7 ; retf 0xfff5
0x000000000040899b : shr al, 0xef ; ret 0xffff
0x00000000004c0264 : shr al, cl ; add al, 0x3d ; retf
0x0000000000409696 : shr al, cl ; hlt ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xc4c0
0x00000000004d0b50 : shr bh, 1 ; stc ; call qword ptr [rdi]
0x0000000000414ae9 : shr bl, cl ; or al, 0x83 ; ret 0x4801
0x0000000000450882 : shr byte ptr [rax + 0x39480028], cl ; retf 0x377
0x00000000004af970 : shr byte ptr [rax - 0x55e10005], cl ; sti ; call rdi
0x00000000004aebf0 : shr byte ptr [rax - 5], cl ; call rdx
0x00000000004cf35c : shr byte ptr [rbp + 0x4bd00000], 1 ; stc ; call qword ptr [rbx]
0x0000000000441f2f : shr byte ptr [rcx], 0xc8 ; ret
0x000000000043d7e5 : shr byte ptr [rcx], 1 ; add byte ptr [rax - 0x7d], cl ; retf 0x4901
0x00000000004404da : shr byte ptr [rcx], cl ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004744b8 : shr byte ptr [rcx], cl ; ret
0x0000000000447b6b : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000004c2067 : shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x0000000000419102 : shr cl, 1 ; ret 0xfffe
0x000000000048466c : shr cl, cl ; jrcxz 0x484678 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x0000000000418c0f : shr cl, cl ; ret
0x000000000047601f : shr cl, cl ; retf
0x000000000040b9c0 : shr cl, cl ; retf 0xfffb
0x000000000047532b : shr dword ptr [rbp - 4], 0xff ; nop ; ret
0x00000000004207a1 : shr dword ptr [rbx], cl ; add al, ch ; retf
0x000000000042eef8 : shr dword ptr [rdx], 1 ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000407f73 : shr eax, 0x1f ; ret
0x000000000046414a : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x000000000049050b : shr eax, 2 ; ret
0x0000000000490a13 : shr eax, 2 ; vzeroupper ; ret
0x0000000000464195 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000040d735 : shr eax, cl ; and eax, 1 ; ret
0x000000000043ad1e : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000049effc : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x000000000049ef81 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000049ef50 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000049effb : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x000000000049ef80 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000049ef4f : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000049050a : shr rax, 2 ; ret
0x0000000000490a12 : shr rax, 2 ; vzeroupper ; ret
0x000000000040d734 : shr rax, cl ; and eax, 1 ; ret
0x00000000004b85e9 : sldt word ptr [rax] ; ret
0x0000000000470778 : stc ; add al, 0x74 ; and eax, 0x833fe283 ; retf 0x4180
0x000000000048fd46 : stc ; add byte ptr [rax + rax], cl ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x0000000000447017 : stc ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004ad2ea : stc ; call qword ptr [rax + 0x20fff920]
0x00000000004ad63a : stc ; call qword ptr [rax + 0x20fff9ea]
0x00000000004ad982 : stc ; call qword ptr [rax - 0x1f000607]
0x00000000004ad92e : stc ; call qword ptr [rax - 0x1f00060e]
0x00000000004ad7b6 : stc ; call qword ptr [rax - 0x1f000633]
0x00000000004ad762 : stc ; call qword ptr [rax - 0x1f00063a]
0x00000000004ad3ee : stc ; call qword ptr [rax]
0x00000000004cf312 : stc ; call qword ptr [rbx]
0x00000000004cfd9a : stc ; call qword ptr [rcx]
0x00000000004d0b52 : stc ; call qword ptr [rdi]
0x00000000004c62e1 : stc ; call qword ptr [rdx]
0x00000000004ad586 : stc ; call qword ptr [rsi + 0x26fff9bf]
0x00000000004ad2e6 : stc ; call rax
0x00000000004ad522 : stc ; call rcx
0x00000000004cff7e : stc ; call rdx
0x00000000004cfb46 : stc ; call rsi
0x00000000004cf20e : stc ; call rsp
0x00000000004650bf : stc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004ad6be : stc ; inc dword ptr [rax + 0x40fff9dc] ; fdivp st(1) ; jmp qword ptr [rax]
0x00000000004ad49a : stc ; inc dword ptr [rax + 0x76] ; stc ; jmp qword ptr [rax]
0x00000000004ad68e : stc ; inc dword ptr [rax - 0x1c] ; stc ; jmp qword ptr [rax]
0x00000000004ad6c2 : stc ; inc dword ptr [rax - 0x22] ; stc ; jmp qword ptr [rax]
0x00000000004ad6de : stc ; inc dword ptr [rax - 0x24] ; stc ; inc dword ptr [rax] ; fdivp st(1) ; jmp rax
0x00000000004ad93a : stc ; inc dword ptr [rax - 0x2f00060a] ; idiv ecx ; jmp qword ptr [rax]
0x00000000004ad7c2 : stc ; inc dword ptr [rax - 0x2f00062f] ; sar cl, cl ; jmp qword ptr [rax]
0x00000000004ad76e : stc ; inc dword ptr [rax - 0x2f000636] ; retf
0x00000000004ad7b2 : stc ; inc dword ptr [rax - 0x34] ; stc ; call qword ptr [rax - 0x1f000633]
0x00000000004ad92a : stc ; inc dword ptr [rax - 0xf] ; stc ; call qword ptr [rax - 0x1f00060e]
0x00000000004ad97e : stc ; inc dword ptr [rax - 8] ; stc ; call qword ptr [rax - 0x1f000607]
0x00000000004ad95a : stc ; inc dword ptr [rax] ; add edx, edi ; inc dword ptr [rax - 0x14] ; stc ; call qword ptr [rax]
0x00000000004ad6e2 : stc ; inc dword ptr [rax] ; fdivp st(1) ; jmp rax
0x00000000004ad456 : stc ; inc dword ptr [rax] ; je 0x4ad45d ; push qword ptr [rax] ; pop rsi ; stc ; call qword ptr [rax]
0x00000000004ad6ca : stc ; inc dword ptr [rax] ; loop 0x4ad6cd ; jmp rax
0x00000000004ad512 : stc ; inc dword ptr [rax] ; mov edx, 0xbaf0fff9 ; stc ; jmp rax
0x00000000004ad4a6 : stc ; inc dword ptr [rax] ; nop ; stc ; push rax ; nop ; stc ; jmp rax
0x00000000004ad482 : stc ; inc dword ptr [rax] ; test cl, bh ; push qword ptr [rax - 0x7b] ; stc ; jmp rax
0x00000000004ad54a : stc ; inc dword ptr [rcx - 0x40] ; stc ; call rcx
0x00000000004ad556 : stc ; inc dword ptr [rcx] ; ret 0xfff9
0x00000000004ad59e : stc ; inc dword ptr [rdi] ; ret
0x00000000004ad59a : stc ; inc dword ptr [rsi + 0x7fff9c2] ; ret
0x00000000004ad592 : stc ; inc dword ptr [rsi - 0x3f] ; stc ; jmp rsi
0x00000000004ad582 : stc ; inc dword ptr [rsi] ; mov edi, 0xbf96fff9 ; stc ; jmp qword ptr [rsi]
0x00000000004ad77e : stc ; inc eax ; iretd ; stc ; call qword ptr [rax]
0x00000000004ad94a : stc ; inc eax ; sti ; stc ; call qword ptr [rax]
0x0000000000411383 : stc ; je 0x4113ba ; xor eax, eax ; pop rbx ; ret
0x000000000045abb2 : stc ; je 0x45ab7e ; lea r10, [r10 + r9] ; jmp r10
0x00000000004ad3ca : stc ; jmp qword ptr [rax - 0x1f0006bd]
0x00000000004ad3ba : stc ; jmp qword ptr [rax - 0x1f0006c2]
0x00000000004ad3aa : stc ; jmp qword ptr [rax - 0x1f0006c7]
0x00000000004ad2ee : stc ; jmp qword ptr [rax]
0x00000000004cf05a : stc ; jmp qword ptr [rbx]
0x00000000004ad52e : stc ; jmp qword ptr [rcx + 0x21fff9bc]
0x00000000004ad536 : stc ; jmp qword ptr [rcx + 0x21fff9bd]
0x00000000004ad53e : stc ; jmp qword ptr [rcx + 0x21fff9be]
0x00000000004ad532 : stc ; jmp qword ptr [rcx]
0x00000000004d02ce : stc ; jmp qword ptr [rdx]
0x00000000004ad51e : stc ; jmp qword ptr [rip - 0x2e000647]
0x00000000004ad58a : stc ; jmp qword ptr [rsi]
0x00000000004ad3ae : stc ; jmp rax
0x00000000004cf2d6 : stc ; jmp rbx
0x00000000004ad502 : stc ; jmp rdx
0x00000000004ad596 : stc ; jmp rsi
0x00000000004c0b24 : stc ; jnp 0x4c0ae3 ; ret
0x00000000004ad55e : stc ; lcall [rsi] ; ret
0x00000000004ad5da : stc ; ljmp [rbx - 0x3e] ; stc ; push rax ; ret 0xfff9
0x00000000004ad5d2 : stc ; ljmp [rbx] ; sar ecx, 0xff ; retf
0x000000000044c0b8 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000445737 : stc ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004ad616 : stc ; push qword ptr [rax + 0x50fff9c1] ; ret 0xfff9
0x00000000004ad77a : stc ; push qword ptr [rax - 0x32] ; stc ; inc eax ; iretd ; stc ; call qword ptr [rax]
0x00000000004ad486 : stc ; push qword ptr [rax - 0x7b] ; stc ; jmp rax
0x00000000004ad946 : stc ; push qword ptr [rax - 6] ; stc ; inc eax ; sti ; stc ; call qword ptr [rax]
0x00000000004ad6aa : stc ; push qword ptr [rax] ; loop 0x4ad6ad ; call qword ptr [rax]
0x00000000004ad72a : stc ; push qword ptr [rax] ; loope 0x4ad72d ; jmp qword ptr [rax]
0x00000000004ad496 : stc ; push qword ptr [rax] ; mov edi, ecx ; inc dword ptr [rax + 0x76] ; stc ; jmp qword ptr [rax]
0x00000000004ad4f2 : stc ; push qword ptr [rax] ; mov edx, 0xbb20fff9 ; stc ; call qword ptr [rax]
0x00000000004ad45a : stc ; push qword ptr [rax] ; pop rsi ; stc ; call qword ptr [rax]
0x00000000004ad622 : stc ; push rax ; fdivp st(1) ; call rax
0x00000000004ad60a : stc ; push rax ; mov edi, 0xc080fff9 ; stc ; call qword ptr [rax]
0x00000000004ad4aa : stc ; push rax ; nop ; stc ; jmp rax
0x00000000004ad40a : stc ; push rax ; pop rax ; stc ; call qword ptr [rax]
0x00000000004ad5de : stc ; push rax ; ret 0xfff9
0x00000000004ad7ae : stc ; push rax ; retf 0xfff9
0x00000000004ad3ea : stc ; push rax ; stc ; call qword ptr [rax]
0x00000000004a8358 : stc ; push rbx ; ret
0x00000000004ad985 : stc ; stc ; jmp rax
0x0000000000420b2d : stc ; std ; dec dword ptr [rax - 0x77] ; ret 0xf748
0x00000000004549d4 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000448047 : stc ; xlatb ; ret 0xff2d
0x00000000004d4315 : std ; add byte ptr [rax], al ; mov bl, cl ; cld ; jmp qword ptr [rdx]
0x00000000004d42fd : std ; add byte ptr [rax], al ; nop ; retf
0x00000000004d42d1 : std ; add byte ptr [rax], al ; pushfq ; ret 0xfff2
0x00000000004c662d : std ; call qword ptr [rdx]
0x00000000004d1512 : std ; call rdx
0x000000000049240a : std ; dec dword ptr [rax + 0x39] ; ret
0x000000000048fd68 : std ; dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000046629e : std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000420b2e : std ; dec dword ptr [rax - 0x77] ; ret 0xf748
0x0000000000485df2 : std ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000049e6ab : std ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x000000000049db5e : std ; jbe 0x49db6c ; ret
0x00000000004c3b76 : std ; jmp qword ptr [rbx]
0x00000000004d101a : std ; jmp qword ptr [rdi]
0x00000000004d073a : std ; jmp qword ptr [rdx]
0x00000000004be1ea : std ; jmp rax
0x00000000004c3b6e : std ; ljmp [rbx + rdx*8 - 0x2c430003] ; std ; jmp qword ptr [rbx]
0x000000000044b8db : std ; mov word ptr [rdi - 2], cx ; ret
0x000000000046739e : std ; push rbx ; ret
0x00000000004c3b82 : std ; push rsp ; sar ebp, cl ; jmp qword ptr [rbx]
0x0000000000462f33 : std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000004c1a5a : std ; retf
0x00000000004ad991 : std ; stc ; call rax
0x0000000000447911 : std ; xlatb ; ret
0x0000000000447909 : std ; xlatb ; ret 0xc085
0x0000000000447e83 : std ; xlatb ; ret 0xe883
0x000000000048f721 : std ; xlatb ; retf 0xc985
0x000000000048f5f4 : std ; xlatb ; retf 0xfdc5
0x000000000048f654 : std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000043dc01 : sti ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000042d553 : sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x00000000004ae4f6 : sti ; call qword ptr [rax]
0x00000000004af982 : sti ; call qword ptr [rbx]
0x00000000004c64cd : sti ; call qword ptr [rdx]
0x00000000004ae4e6 : sti ; call rax
0x00000000004af976 : sti ; call rdi
0x00000000004aebca : sti ; call rdx
0x00000000004ae69e : sti ; call rsi
0x00000000004d4965 : sti ; cld ; jmp qword ptr [rdx]
0x00000000004af9e6 : sti ; dec dword ptr [rdi - 0x33000459] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp rax
0x00000000004aebfa : sti ; dec eax ; push 0x6922fffb ; sti ; call rdx
0x00000000004af9aa : sti ; dec esp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; call qword ptr [rbx]
0x00000000004af9ea : sti ; dec esp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; jmp rax
0x00000000004af3d2 : sti ; inc dword ptr [rax - 0x5f] ; sti ; jmp qword ptr [rax]
0x00000000004ae652 : sti ; inc dword ptr [rax - 0x670004a5] ; pop rbx ; sti ; call rax
0x00000000004ae4f2 : sti ; inc dword ptr [rax] ; sbb eax, 0x1d10fffb ; sti ; jmp qword ptr [rax]
0x00000000004af97a : sti ; inc dword ptr [rcx + 0x28fffba8] ; test al, 0xfb ; call qword ptr [rbx]
0x00000000004ae576 : sti ; inc eax ; and bh, bl ; call rax
0x00000000004ae59e : sti ; inc eax ; and edi, ebx ; call rax
0x00000000004ae4e2 : sti ; inc eax ; sbb al, 0xfb ; call rax
0x00000000004ae4fa : sti ; jmp qword ptr [rax]
0x00000000004d2652 : sti ; jmp qword ptr [rbx]
0x00000000004d2c62 : sti ; jmp qword ptr [rcx]
0x00000000004aebfe : sti ; jmp qword ptr [rdx]
0x00000000004ae4ea : sti ; jmp rax
0x00000000004d2802 : sti ; jmp rdx
0x00000000004aeaea : sti ; jmp rsi
0x00000000004af9a6 : sti ; lcall [rdi] ; lodsb al, byte ptr [rsi] ; sti ; dec esp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; call qword ptr [rbx]
0x00000000004af972 : sti ; lcall [rsi] ; stosb byte ptr [rdi], al ; sti ; call rdi
0x00000000004af3ce : sti ; ljmp [rax - 0x5f] ; sti ; inc dword ptr [rax - 0x5f] ; sti ; jmp qword ptr [rax]
0x00000000004af97e : sti ; ljmp [rax] ; test al, 0xfb ; call qword ptr [rbx]
0x00000000004af96a : sti ; ljmp [rax] ; test al, 0xfb ; call rdx
0x00000000004ae696 : sti ; ljmp [rbx + rbx*2 + 0x5b89fffb] ; sti ; call rsi
0x00000000004aec3e : sti ; ljmp [rdx + 0x69] ; sti ; jmp qword ptr [rdx]
0x00000000004af962 : sti ; ljmp [rdx - 0x57] ; sti ; jmp qword ptr [rdx]
0x000000000044bcb8 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000040dd91 : sti ; mov rax, qword ptr [rdi + 8] ; ret
0x00000000004aecca : sti ; push qword ptr [rax + rbp*2 + 0x68fafffb] ; sti ; jmp rsi
0x00000000004ae59a : sti ; push qword ptr [rax - 0x3f0004dd] ; and edi, ebx ; call rax
0x00000000004aeae6 : sti ; push qword ptr [rsi + 0x6a] ; sti ; jmp rsi
0x00000000004ae5c6 : sti ; push rax ; and al, 0xfb ; call qword ptr [rax]
0x00000000004ae582 : sti ; push rax ; and bh, bl ; call qword ptr [rax]
0x00000000004ae5a6 : sti ; push rax ; and edi, ebx ; call qword ptr [rax]
0x00000000004ae52a : sti ; push rax ; sbb eax, 0x1e00fffb ; sti ; jmp qword ptr [rax]
0x00000000004c0caa : sti ; ret
0x00000000004ad94d : sti ; stc ; call qword ptr [rax]
0x00000000004771a7 : sti ; test rax, rax ; je 0x4771b5 ; call rax
0x0000000000414e12 : stosb byte ptr [rdi], al ; add rax, rdx ; jmp rax
0x00000000004c1184 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x000000000046a022 : stosb byte ptr [rdi], al ; cmp ah, byte ptr [rdi] ; add byte ptr [rbp - 0xcf98b40], al ; ret
0x0000000000463c5b : stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000004d03b1 : stosb byte ptr [rdi], al ; stc ; call qword ptr [rax]
0x00000000004af975 : stosb byte ptr [rdi], al ; sti ; call rdi
0x00000000004403f1 : stosd dword ptr [rdi], eax ; and dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000484aae : stosd dword ptr [rdi], eax ; mov eax, 1 ; ret
0x00000000004045ad : stosd dword ptr [rdi], eax ; mov rax, rdx ; add rsp, 8 ; ret
0x0000000000404513 : stosd dword ptr [rdi], eax ; mov rax, rdx ; pop rbx ; ret
0x000000000043ad23 : stosd dword ptr [rdi], eax ; pop rbx ; ret
0x00000000004c228c : stosd dword ptr [rdi], eax ; ret
0x00000000004c218a : stosd dword ptr [rdi], eax ; retf 0xa2fe
0x00000000004be1e9 : stosd dword ptr [rdi], eax ; std ; jmp rax
0x00000000004406a1 : stosd dword ptr [rdi], eax ; sub eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004045ac : stosq qword ptr [rdi], rax ; mov rax, rdx ; add rsp, 8 ; ret
0x0000000000404512 : stosq qword ptr [rdi], rax ; mov rax, rdx ; pop rbx ; ret
0x000000000043ad22 : stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004c2671 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004ca4a4 : sub al, 0 ; add byte ptr [rax], al ; sbb al, 0x5f ; add byte ptr [rax], al ; xchg eax, esp ; ret 0xfff4
0x0000000000467ef4 : sub al, 0 ; add byte ptr [rax], al ; syscall
0x000000000041ba04 : sub al, 0 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000041b9f6 : sub al, 0 ; test eax, eax ; je 0x41ba07 ; ret
0x000000000041bb06 : sub al, 0 ; test eax, eax ; je 0x41bb17 ; ret
0x000000000049de56 : sub al, 0x48 ; add esp, 0x38 ; ret
0x0000000000463e92 : sub al, 0x72 ; add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x0000000000469020 : sub al, 0x85 ; ror byte ptr [rdi], 0x84 ; retf 0
0x0000000000448e23 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004d0ab8 : sub al, 0xc5 ; add byte ptr [rax], al ; test dh, ah ; stc ; call rcx
0x00000000004c4910 : sub al, 0xd3 ; jmp qword ptr [rsi]
0x00000000004d08f4 : sub al, 0xd3 ; stc ; jmp qword ptr [rdx]
0x000000000040feb8 : sub al, 0xf ; lea eax, [rcx + rdi*8 - 1] ; dec dword ptr [rax + 0x63] ; ret 0xc283
0x000000000040e997 : sub al, 0xf ; lea eax, [rdx] ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; retf 0x9848
0x000000000040ff9d : sub al, 0xf ; lea ebx, [rax + rax + 0x63480000] ; ret 0xc283
0x000000000040565f : sub al, byte ptr [rax] ; add bl, ch ; ret 0x1f0f
0x00000000004347a0 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000467e4b : sub al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000004c7065 : sub al, byte ptr [rax] ; add byte ptr [rax], cl ; add al, 0xf4 ; jmp qword ptr [rdx]
0x000000000042e8e5 : sub al, byte ptr [rax] ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000434736 : sub al, byte ptr [rax] ; add dword ptr [rip + 0x2a8995], 1 ; ret
0x00000000004346a5 : sub al, byte ptr [rax] ; ret
0x000000000044049a : sub al, byte ptr [rdx] ; add bh, dh ; ret 0
0x00000000004407e2 : sub al, byte ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000401a1f : sub al, byte ptr [rip - 0x76b80000] ; ret 0x8d48
0x00000000004481e5 : sub al, ch ; std ; xlatb ; ret
0x000000000047fa8b : sub bl, cl ; in eax, 0xdf ; loopne 0x47fa20 ; ret
0x000000000049332c : sub byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000043207c : sub byte ptr [rax + 0x39], cl ; retf
0x000000000049332b : sub byte ptr [rax + 0x39], r9b ; ret 0x870f
0x000000000049f9e3 : sub byte ptr [rax + 1], cl ; ret 0x1474
0x00000000004068dc : sub byte ptr [rax + 6], bh ; pop rbx ; pop rbp ; ret
0x0000000000474f0b : sub byte ptr [rax - 0x3f], cl ; retf
0x0000000000403882 : sub byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x8948
0x000000000043e8d4 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000041870c : sub byte ptr [rax - 0x77], cl ; ret
0x000000000048be74 : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000042e165 : sub byte ptr [rax - 0x78], al ; cmp byte ptr [rcx + rcx*4 - 0x30], al ; ret
0x000000000042e164 : sub byte ptr [rax - 0x78], r8b ; cmp byte ptr [rcx + rcx*4 - 0x30], al ; ret
0x000000000041fd13 : sub byte ptr [rax - 0x7d], cl ; ret
0x0000000000428b29 : sub byte ptr [rax - 0x7d], cl ; retf 0x4805
0x0000000000428b94 : sub byte ptr [rax - 0x7d], cl ; retf 0x4806
0x0000000000428c49 : sub byte ptr [rax - 0x7d], cl ; retf 0x480d
0x0000000000428bc6 : sub byte ptr [rax - 0x7d], cl ; retf 0xe903
0x0000000000428b7f : sub byte ptr [rax - 0x7d], cl ; retf 0xeb04
0x0000000000428bde : sub byte ptr [rax - 0x7d], cl ; retf 0xeb07
0x0000000000428c7f : sub byte ptr [rax - 0x7d], cl ; retf 0xeb0c
0x00000000004a037d : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x4a03c5 ; leave ; ret
0x00000000004cf30c : sub byte ptr [rbp + 0x4a900000], 0xf9 ; call qword ptr [rbx]
0x000000000041b562 : sub byte ptr [rbp + 1], cl ; retf
0x0000000000401bf0 : sub byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000406892 : sub byte ptr [rbx + 0x5d], bl ; jmp rax
0x0000000000464c54 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000401570 : sub byte ptr [rbx + 0x5d], bl ; ret
0x00000000004a41b3 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x00000000004a41b2 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x00000000004c6c08 : sub byte ptr [rbx], al ; hlt ; call qword ptr [rbx]
0x00000000004c60b4 : sub byte ptr [rbx], bl ; add byte ptr [rax], al ; fdiv st(6) ; jmp qword ptr [rdx]
0x000000000041f23b : sub byte ptr [rcx - 0x75], al ; push rdi ; or al, 0xf ; retf 0xd289
0x000000000041f26f : sub byte ptr [rcx - 0x75], al ; push rdi ; sbb byte ptr [rdi], cl ; retf 0xd289
0x0000000000468b4c : sub byte ptr [rcx], al ; ret
0x000000000043d6f6 : sub byte ptr [rdi], cl ; test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000436c0c : sub byte ptr [rdx + rbp], bh ; add byte ptr [rax + 1], cl ; ret
0x00000000004405fa : sub byte ptr [rdx], al ; add bh, dh ; ret 0
0x000000000044063b : sub byte ptr [rdx], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000004aa96c : sub byte ptr [rsi - 0xa], ah ; jmp rax
0x00000000004adddc : sub byte ptr [rsi], 0xfa ; call qword ptr [rax]
0x00000000004ad620 : sub ch, bl ; stc ; push rax ; fdivp st(1) ; call rax
0x00000000004c5730 : sub cl, 0xf3 ; call qword ptr [rbx]
0x00000000004844d6 : sub cl, bpl ; ret 0xffe8
0x0000000000429e7d : sub cl, byte ptr [rax - 0x77] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000407516 : sub cl, byte ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004844d7 : sub cl, ch ; ret 0xffe8
0x000000000047a584 : sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000004c6718 : sub dh, bh ; call qword ptr [rdi]
0x00000000004cc5b5 : sub dh, dh ; jmp rdx
0x00000000004ab3cc : sub dl, cl ; idiv bh ; leave ; idiv bh ; cdq ; retf 0xfff6
0x000000000049c18a : sub dl, dh ; call r11
0x000000000049185e : sub dword ptr [rax + 0x101], edi ; syscall
0x00000000004c102d : sub dword ptr [rax + 0x1e], eax ; cli ; test bh, dl ; retf 0xdf7f
0x00000000004aebc4 : sub dword ptr [rax - 5], 0xfb6881ff ; call rdx
0x00000000004aed98 : sub dword ptr [rax - 5], 0xfb68faff ; jmp rsi
0x00000000004c6e99 : sub dword ptr [rax], eax ; add ah, ah ; add esi, esp ; jmp qword ptr [rbx]
0x0000000000467fa1 : sub dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000004c6efd : sub dword ptr [rax], eax ; add byte ptr [rax], dh ; add al, 0xf4 ; jmp qword ptr [rax]
0x00000000004404bc : sub dword ptr [rax], eax ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x000000000043b81a : sub dword ptr [rax], eax ; ret
0x00000000004c1cc2 : sub dword ptr [rbx + 0x5c347ebb], edx ; sbb ebp, ebx ; retf
0x0000000000416802 : sub dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x0000000000449f07 : sub dword ptr [rdi + 0x10], ebx ; jb 0x449f1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044a057 : sub dword ptr [rdi + 0x10], ebx ; jb 0x44a06d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044a1a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x44a1bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044a2f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x44a30d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044a447 : sub dword ptr [rdi + 0x10], ebx ; jb 0x44a45d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044a597 : sub dword ptr [rdi + 0x10], ebx ; jb 0x44a5ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044a6e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x44a6fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044a837 : sub dword ptr [rdi + 0x10], ebx ; jb 0x44a84d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044a987 : sub dword ptr [rdi + 0x10], ebx ; jb 0x44a99d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044aad7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x44aaed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044ac27 : sub dword ptr [rdi + 0x10], ebx ; jb 0x44ac3d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044ad77 : sub dword ptr [rdi + 0x10], ebx ; jb 0x44ad8d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044aec7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x44aedd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044b017 : sub dword ptr [rdi + 0x10], ebx ; jb 0x44b02d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044b167 : sub dword ptr [rdi + 0x10], ebx ; jb 0x44b17d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044c8d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x44c8ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044ca27 : sub dword ptr [rdi + 0x10], ebx ; jb 0x44ca3d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044cb77 : sub dword ptr [rdi + 0x10], ebx ; jb 0x44cb8d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044ccc7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x44ccdd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044ce17 : sub dword ptr [rdi + 0x10], ebx ; jb 0x44ce2d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044cf67 : sub dword ptr [rdi + 0x10], ebx ; jb 0x44cf7d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044d0b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x44d0cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044d207 : sub dword ptr [rdi + 0x10], ebx ; jb 0x44d21d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044d357 : sub dword ptr [rdi + 0x10], ebx ; jb 0x44d36d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044d4a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x44d4bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044d5f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x44d60d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044d747 : sub dword ptr [rdi + 0x10], ebx ; jb 0x44d75d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044d897 : sub dword ptr [rdi + 0x10], ebx ; jb 0x44d8ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044d9e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x44d9fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044db37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x44db4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000449e63 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000449e5f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000449f0d : sub dword ptr [rdi], esp ; jmp r9
0x00000000004404db : sub dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000004463e7 : sub dword ptr [rip - 0x76b30000], ecx ; retf
0x0000000000449606 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x00000000004462a1 : sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x00000000004c257a : sub dword ptr [rsi], 0x76 ; retf
0x0000000000428e8d : sub dword ptr [rsp + 0xf0], eax ; syscall
0x0000000000447f77 : sub eax, -1 ; jne 0x447f88 ; vzeroupper ; ret
0x000000000043ee4a : sub eax, 0x10 ; ret
0x0000000000407174 : sub eax, 0x18 ; ret
0x0000000000485984 : sub eax, 0x83000000 ; ret
0x0000000000482d55 : sub eax, 0x83000000 ; ret 0x8b01
0x0000000000402c8b : sub eax, 0x90000002 ; leave ; ret
0x0000000000400b8a : sub eax, 0xc35d0100 ; nop ; ret
0x00000000004bfcc6 : sub eax, 0xea4ca798 ; retf
0x0000000000440542 : sub eax, 0xf480002 ; ret 0x66c3
0x00000000004753a4 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000462a04 : sub eax, 1 ; ret
0x000000000049dba6 : sub eax, dword ptr [0] ; ret
0x000000000041eb4d : sub eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041ceaf : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047a526 : sub eax, dword ptr [rcx + 0xf] ; mov dh, 0x47 ; or al, 0x83 ; ret
0x000000000043505e : sub eax, dword ptr [rdi + 0x18] ; ret
0x000000000046472a : sub eax, dword ptr [rdx + rcx*4] ; je 0x464716 ; ret
0x00000000004406a2 : sub eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000434373 : sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000462b6d : sub eax, eax ; cmp eax, ecx ; jle 0x462bb1 ; movsxd rax, ecx ; ret
0x000000000049cff4 : sub eax, eax ; ret
0x0000000000405168 : sub eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000447fc3 : sub eax, ecx ; je 0x447fd9 ; sbb eax, eax ; or eax, 1 ; ret
0x0000000000433a49 : sub eax, ecx ; lea eax, [r8 - 1] ; ret
0x00000000004a0670 : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000441c6c : sub eax, ecx ; ret
0x000000000045cb19 : sub eax, edi ; ret
0x000000000049061e : sub eax, edi ; shr rax, 2 ; ret
0x00000000004a0753 : sub eax, edx ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x000000000043439b : sub eax, edx ; ret
0x0000000000490a10 : sub eax, edx ; shr rax, 2 ; vzeroupper ; ret
0x0000000000447f8c : sub eax, edx ; vzeroupper ; ret
0x0000000000407208 : sub eax, esi ; cmp rax, rdx ; cmova rax, rdx ; ret
0x0000000000462bcd : sub eax, esi ; ret
0x000000000049cff3 : sub eax, r8d ; ret
0x00000000004c0f1e : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x000000000042fd90 : sub ebp, eax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000480bbf : sub ebp, ecx ; retf
0x000000000042e966 : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004bf9b5 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004699b8 : sub ecx, dword ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x8902
0x000000000048fba4 : sub ecx, dword ptr [rcx + rcx*4 - 0x40] ; vzeroupper ; ret
0x00000000004343a0 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000434395 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000447414 : sub edx, eax ; jbe 0x447457 ; add rax, rdi ; ret
0x0000000000447424 : sub edx, eax ; jbe 0x447459 ; lea rax, [rdi + rax + 0x10] ; ret
0x0000000000447434 : sub edx, eax ; jbe 0x447459 ; lea rax, [rdi + rax + 0x20] ; ret
0x0000000000447444 : sub edx, eax ; jbe 0x447459 ; lea rax, [rdi + rax + 0x30] ; ret
0x000000000043f841 : sub edx, esi ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000042f33f : sub edx, esi ; mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x00000000004087d1 : sub edx, esi ; mov rax, rsi ; jne 0x4087e8 ; ret
0x000000000040d783 : sub edx, esi ; test r9d, r9d ; cmovne eax, edx ; ret
0x00000000004071e1 : sub esi, dword ptr [rax - 0x18] ; cmp rsi, rdx ; jb 0x4071f4 ; ret
0x000000000040a6fe : sub esi, dword ptr [rdi + 8] ; cmp rsi, rdx ; jb 0x40a711 ; ret
0x00000000004a68b3 : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042b59c : sub esp, 0x80 ; call 0x468018
0x000000000042b602 : sub esp, 0x80 ; call 0x468048
0x00000000004a98a1 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004048f1 : sub esp, 8 ; call rdi
0x00000000004914b3 : sub esp, 8 ; syscall
0x000000000043f811 : sub esp, dword ptr [rdi] ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000004c8f59 : sub esp, esi ; call qword ptr [rcx]
0x0000000000433a48 : sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x000000000043ee49 : sub rax, 0x10 ; ret
0x0000000000407173 : sub rax, 0x18 ; ret
0x0000000000462a03 : sub rax, 1 ; ret
0x000000000049dba5 : sub rax, qword ptr [0] ; ret
0x000000000043505d : sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000049dba4 : sub rax, qword ptr fs:[0] ; ret
0x0000000000405167 : sub rax, r13 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004a1362 : sub rax, r8 ; ret
0x000000000045cb18 : sub rax, rdi ; ret
0x000000000049061d : sub rax, rdi ; shr rax, 2 ; ret
0x0000000000462ad3 : sub rax, rdx ; ret
0x000000000045cb6f : sub rax, rdx ; vzeroupper ; ret
0x0000000000462bcc : sub rax, rsi ; ret
0x0000000000447413 : sub rdx, rax ; jbe 0x447458 ; add rax, rdi ; ret
0x00000000004087d0 : sub rdx, rsi ; mov rax, rsi ; jne 0x4087e9 ; ret
0x00000000004a68b2 : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042b59b : sub rsp, 0x80 ; call 0x468019
0x000000000042b601 : sub rsp, 0x80 ; call 0x468049
0x00000000004a98a0 : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004048f0 : sub rsp, 8 ; call rdi
0x00000000004914b2 : sub rsp, 8 ; syscall
0x00000000004172e5 : syscall
0x000000000049b0a5 : sysenter
0x00000000004332b4 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004915b5 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004174b3 : test al, 0 ; add byte ptr [rax], al ; ret
0x0000000000402ef4 : test al, 0x1a ; add byte ptr [rax], al ; nop ; leave ; ret
0x00000000004c6b34 : test al, 0x25 ; add byte ptr [rax], al ; mov byte ptr [rdx], al ; hlt ; call qword ptr [rbx]
0x00000000004c6c34 : test al, 0x26 ; add byte ptr [rax], al ; cmp byte ptr [rbx], al ; hlt ; call qword ptr [rbx]
0x0000000000450883 : test al, 0x28 ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x00000000004c6e34 : test al, 0x28 ; add byte ptr [rax], al ; cwde ; add esi, esp ; jmp qword ptr [rdi]
0x0000000000466d5e : test al, 0x45 ; mov esp, esi ; call r15
0x00000000004aa6d4 : test al, 0x52 ; idiv bh ; adc byte ptr [rdx - 0xa], dl ; call qword ptr [rax]
0x00000000004c0277 : test al, 0x97 ; xchg eax, esp ; ret
0x00000000004cec34 : test al, 0xa6 ; add byte ptr [rax], al ; call 0x244ce35f
0x00000000004bfc5e : test al, 0xa7 ; mov bx, 0xf32d ; retf
0x000000000042f791 : test al, 0xc3 ; insd dword ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000042f117 : test al, 0xc3 ; insd dword ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; ret 0x294d
0x00000000004d1634 : test al, 0xd0 ; add byte ptr [rax], al ; call 0x144d10c3
0x00000000004aab95 : test al, 0xf6 ; call rax
0x00000000004aac31 : test al, 0xf6 ; lcall [rsp + rbp*4 - 0xa] ; call rax
0x00000000004d176d : test al, 0xfa ; call qword ptr [rsi]
0x00000000004ae449 : test al, 0xfa ; call rax
0x00000000004af981 : test al, 0xfb ; call qword ptr [rbx]
0x00000000004af96d : test al, 0xfb ; call rdx
0x00000000004af971 : test al, 0xfb ; lcall [rsi] ; stosb byte ptr [rdi], al ; sti ; call rdi
0x00000000004af97d : test al, 0xfb ; ljmp [rax] ; test al, 0xfb ; call qword ptr [rbx]
0x00000000004c6b98 : test al, 2 ; hlt ; call qword ptr [rbx]
0x00000000004c7708 : test al, 8 ; hlt ; jmp qword ptr [rax]
0x0000000000428aa1 : test al, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0xeb08
0x000000000049a875 : test al, al ; cmove rcx, rax ; mov rax, rcx ; ret
0x0000000000441f2a : test al, al ; jne 0x441f18 ; xor eax, eax ; sub eax, ecx ; ret
0x00000000004644e0 : test al, al ; jne 0x464419 ; jmp 0x4644be
0x0000000000494023 : test al, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004c623c : test al, bh ; call qword ptr [rdx]
0x00000000004c2b84 : test bh, ch ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x000000000048ec5c : test bh, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004cece1 : test bh, dh ; jmp qword ptr [rbx]
0x00000000004c1031 : test bh, dl ; retf 0xdf7f
0x0000000000435978 : test bl, al ; add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x000000000042bc3f : test byte ptr [rax + rax - 0x76b80000], ch ; ret
0x0000000000475a91 : test byte ptr [rax - 0x76b80000], ch ; ret 0x2948
0x0000000000486fe9 : test byte ptr [rax - 0x7c000019], ah ; ret
0x0000000000402f43 : test byte ptr [rax], 0 ; add cl, cl ; ret
0x0000000000429d9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x0000000000435d3a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000004a196a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rbx
0x0000000000460d4a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x000000000046018a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000040717a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi] ; ret
0x000000000040a69a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000042ec4a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x00000000004048c9 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x0000000000403f6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000040484a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004335ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000460b8a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000046bc02 : test byte ptr [rbp + rcx*4 + 0x3c], cl ; ret
0x0000000000486eec : test byte ptr [rbp - 0x7c000018], bl ; ret
0x000000000048eaef : test byte ptr [rcx + 0xf], 0x45 ; retf 0x148
0x00000000004185bb : test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x000000000041a152 : test byte ptr [rcx + rcx*4 - 0x19], 0x41 ; call rdi
0x0000000000445cf6 : test byte ptr [rcx], bh ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004464d6 : test byte ptr [rcx], bh ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000445006 : test byte ptr [rcx], ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004463e6 : test byte ptr [rcx], ch ; or eax, 0x894d0000 ; retf
0x0000000000444d26 : test byte ptr [rcx], cl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004677f4 : test byte ptr [rdi - 0x7d000000], bl ; ret
0x000000000048bf79 : test byte ptr [rdi], 0x84 ; popfq ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000440076 : test byte ptr [rdi], 0x84 ; ret
0x000000000046624f : test byte ptr [rdi], 0x94 ; ret 0xc221
0x0000000000465d66 : test byte ptr [rdi], 0x94 ; ret 0xca21
0x0000000000462d26 : test byte ptr [rdi], ah ; add byte ptr [rax + 0x39], cl ; retf 0x870f
0x000000000048efe4 : test byte ptr [rdi], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004c7d10 : test byte ptr [rdi], dh ; add byte ptr [rax], al ; adc rsp, r14 ; jmp qword ptr [rdi]
0x000000000048effc : test byte ptr [rdi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043bdbe : test byte ptr [rdx], ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000004c8810 : test byte ptr [rdx], al ; add byte ptr [rdi + rbx - 0xc], bh ; jmp qword ptr [rbx]
0x000000000048ec44 : test byte ptr [rdx], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043d8be : test byte ptr [rdx], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000004c6b1c : test byte ptr [rdx], al ; hlt ; call qword ptr [rdx]
0x000000000043ddbe : test byte ptr [rdx], dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000485a74 : test byte ptr [rip - 0x7c000003], dl ; ret
0x000000000047b484 : test byte ptr [rip - 0x7c000011], al ; ret
0x000000000048f83d : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x000000000042d9a4 : test byte ptr [rsi + rdi*8 - 0x76b30001], dh ; retf 0x8948
0x000000000046fdf1 : test byte ptr [rsi - 0x8fffffc], cl ; ret 0
0x000000000040dbaa : test byte ptr [rsi - 0xd000000], dh ; ret
0x00000000004c8c10 : test byte ptr [rsi], al ; add ah, cl ; and esi, esp ; jmp qword ptr [rdx]
0x000000000045c9fd : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000447016 : test cl, bh ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000445736 : test cl, bh ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004ad485 : test cl, bh ; push qword ptr [rax - 0x7b] ; stc ; jmp rax
0x0000000000446e36 : test cl, bl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004a5f3a : test cl, bl ; add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x0000000000445456 : test cl, bl ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004434e6 : test cl, ch ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004437e6 : test cl, ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004446e6 : test cl, ch ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000446f26 : test cl, ch ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004443e6 : test cl, ch ; add eax, 0x894d0000 ; retf
0x00000000004440e6 : test cl, ch ; or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000443de6 : test cl, ch ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000469161 : test cl, ch ; retf 0xfffe
0x0000000000445e66 : test cl, cl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000446d46 : test cl, cl ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000046268f : test cl, cl ; jne 0x462684 ; ret
0x000000000046273f : test cl, cl ; jne 0x462734 ; ret
0x00000000004629ff : test cl, cl ; jne 0x4629f8 ; sub rax, 1 ; ret
0x00000000004d0abc : test dh, ah ; stc ; call rcx
0x0000000000460bd4 : test dl, 0x40 ; jne 0x460b99 ; lea rax, [rdi + 7] ; ret
0x0000000000460c02 : test dl, 4 ; jne 0x460b99 ; lea rax, [rdi + 3] ; ret
0x0000000000428df6 : test dl, dl ; jne 0x428dd8 ; ret
0x00000000004628af : test dl, dl ; jne 0x4628a8 ; lea rax, [rcx - 1] ; ret
0x000000000049cf67 : test dl, dl ; jne 0x49cf43 ; movsx eax, cl ; neg eax ; ret
0x00000000004a8f63 : test dword ptr [rax + 0xf000008], ecx ; xchg eax, ebx ; ret 0x3d83
0x000000000048ec5d : test dword ptr [rax], 0x83480000 ; ret 0xe901
0x0000000000405525 : test dword ptr [rax], 0xd8894800 ; pop rbx ; ret
0x00000000004ccb69 : test dword ptr [rax], eax ; add ah, dl ; push rbx ; idiv bh ; retf
0x0000000000484f56 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000041d4c1 : test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0x000000000040d5fd : test dword ptr [rax], eax ; add rax, rbp ; jmp rax
0x000000000047aef9 : test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x0000000000485666 : test dword ptr [rax], esi ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xbc40
0x000000000041d4c0 : test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x000000000040d5fc : test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x0000000000447398 : test dword ptr [rbx + 0x31000000], esp ; rol bl, 0x83 ; ret 0x6620
0x0000000000465a79 : test dword ptr [rbx + 0x48000000], ebp ; add esp, 0x78 ; ret
0x0000000000401f47 : test dword ptr [rbx + 6], esp ; add cl, cl ; ret
0x0000000000449107 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000449556 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004481d8 : test dword ptr [rbx - 0x3a000003], esp ; std ; xlatb ; ret 0xe883
0x000000000043bbf8 : test dword ptr [rbx], edx ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000049176b : test dword ptr [rcx + 0x48000000], edi ; add esp, 0x78 ; ret
0x00000000004490dd : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000448fed : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000448efd : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000438ff2 : test dword ptr [rcx + rcx*4 + 0x54], 0x93e80824 ; ret 0xffff
0x000000000042cf68 : test dword ptr [rcx - 0x16000002], esi ; retf 0xfffe
0x00000000004042d5 : test dword ptr [rcx], 0xc7480000 ; ret 0x8ef0
0x000000000041a534 : test dword ptr [rdi + rdi*8 - 1], esi ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000410082 : test dword ptr [rdi + rsi*8 - 1], edi ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000438f8c : test dword ptr [rdi], eax ; add eax, 0x39480000 ; ret 0xf275
0x0000000000404338 : test dword ptr [rdi], ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000448e22 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000402b85 : test dword ptr [rdx], 0xc9900000 ; ret
0x000000000048f623 : test dword ptr [rip - 0x76ffffff], edi ; ret 0x8948
0x00000000004656e6 : test dword ptr [rsi + 0x48000000], ebp ; add esp, 0x68 ; ret
0x0000000000462412 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000047bdc1 : test dword ptr [rsi - 0x16000007], esi ; ret
0x000000000042b7dd : test dword ptr [rsi - 0x77000000], esp ; ret 0xe281
0x0000000000449328 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x0000000000410b49 : test dword ptr [rsp + rdi*8 - 0x7cb70001], ebp ; ret 0x4801
0x00000000004c110d : test eax, 0x35eea9cd ; outsb dx, byte ptr [rsi] ; retf
0x000000000041171e : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x4116fc
0x0000000000411916 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x4118f4
0x0000000000411c86 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x411c64
0x0000000000411cfe : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x411cdc
0x0000000000411d76 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x411d54
0x000000000041204e : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x41202c
0x00000000004121b6 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x412194
0x00000000004122e6 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x4122c4
0x000000000041235e : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x41233c
0x00000000004123d6 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x4123b4
0x000000000041244e : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x41242c
0x00000000004124c6 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x4124a4
0x000000000041253e : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x41251c
0x00000000004125b6 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x412594
0x000000000041262e : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x41260c
0x00000000004126ae : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x41268c
0x0000000000412726 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x412704
0x000000000041279e : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x41277c
0x0000000000412816 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x4127f4
0x000000000041288e : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x41286c
0x0000000000412906 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x4128e4
0x000000000041297e : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x41295c
0x0000000000412a76 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x412a54
0x0000000000412bc6 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x412ba4
0x0000000000412c3e : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x412c1c
0x0000000000412cb6 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x412c94
0x0000000000412d2e : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x412d0c
0x0000000000412da6 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x412d84
0x0000000000412e1e : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x412dfc
0x0000000000412e96 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x412e74
0x000000000041321e : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x4131fc
0x0000000000413296 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x413274
0x00000000004134de : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x4134bc
0x0000000000413566 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x413544
0x0000000000413afe : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x413adc
0x0000000000414096 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x414074
0x0000000000414106 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x4140e4
0x0000000000414266 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x414244
0x00000000004142d6 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x4142b4
0x0000000000414408 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x4143e6
0x00000000004146ec : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x4146ca
0x0000000000415456 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x415434
0x00000000004154ee : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x4154cc
0x000000000041556e : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x41554c
0x00000000004155ee : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x4155cc
0x00000000004158c6 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x4158a4
0x000000000041593e : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x41591c
0x00000000004159be : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x41599c
0x0000000000415a3e : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x415a1c
0x0000000000415abe : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x415a9c
0x0000000000415b3e : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x415b1c
0x0000000000415bbe : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x415b9c
0x0000000000416986 : test eax, 0x48c28948 ; add eax, 1 ; jmp 0x416964
0x0000000000412f8e : test eax, 0x48d68948 ; add edx, 1 ; jmp 0x412f6c
0x00000000004ceed9 : test eax, 0x5cb40000 ; clc ; jmp qword ptr [rsi]
0x00000000004ceec5 : test eax, 0x5cb80000 ; clc ; call qword ptr [rax]
0x00000000004c1f60 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000004ceeed : test eax, 0x7ed00000 ; clc ; call qword ptr [rax]
0x000000000044efa6 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000472414 : test eax, 0x8941fffa ; ret 0x5be9
0x00000000004cef15 : test eax, 0x9ff80000 ; clc ; call qword ptr [rax]
0x00000000004af969 : test eax, 0xa828fffb ; sti ; call rdx
0x00000000004af961 : test eax, 0xa96afffb ; sti ; jmp qword ptr [rdx]
0x00000000004cef3d : test eax, 0xbb800000 ; clc ; call qword ptr [rax]
0x0000000000402d9c : test eax, 0xc9000001 ; ret
0x0000000000467d6b : test eax, eax ; cmove eax, edx ; ret
0x000000000040040c : test eax, eax ; je 0x400416 ; call rax
0x0000000000403f56 : test eax, eax ; je 0x403f66 ; mov rdi, rbx ; call rax
0x0000000000404629 : test eax, eax ; je 0x404635 ; pop rbx ; ret
0x0000000000404636 : test eax, eax ; je 0x404642 ; call rax
0x000000000041b9f8 : test eax, eax ; je 0x41ba05 ; ret
0x000000000041bb08 : test eax, eax ; je 0x41bb15 ; ret
0x000000000043edc1 : test eax, eax ; je 0x43edd8 ; lea rax, [rdx - 0x10] ; ret
0x00000000004470e8 : test eax, eax ; je 0x4470f4 ; xchg eax, edx ; sub eax, edx ; ret
0x00000000004664c8 : test eax, eax ; je 0x4664d3 ; ret
0x000000000046a026 : test eax, eax ; je 0x46a035 ; ret
0x0000000000475da4 : test eax, eax ; je 0x475dae ; call rax
0x00000000004771a9 : test eax, eax ; je 0x4771b3 ; call rax
0x00000000004a1120 : test eax, eax ; je 0x4a1138 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a8161 : test eax, eax ; je 0x4a8170 ; call rax
0x00000000004093a3 : test eax, eax ; jg 0x409363 ; jmp 0x409371
0x0000000000408154 : test eax, eax ; jle 0x408172 ; ret
0x000000000041ba37 : test eax, eax ; jne 0x41ba45 ; ret
0x000000000041ba52 : test eax, eax ; jne 0x41ba65 ; ret
0x000000000041bc82 : test eax, eax ; jne 0x41bc95 ; ret
0x00000000004333bc : test eax, eax ; jne 0x4333b5 ; ret
0x0000000000434354 : test eax, eax ; jne 0x43434d ; ret
0x00000000004473c5 : test eax, eax ; jne 0x447426 ; xor eax, eax ; ret
0x0000000000447841 : test eax, eax ; jne 0x447869 ; xor eax, eax ; vzeroupper ; ret
0x0000000000465846 : test eax, eax ; jne 0x465866 ; xor eax, eax ; syscall
0x0000000000465916 : test eax, eax ; jne 0x465939 ; mov eax, 1 ; syscall
0x0000000000465a53 : test eax, eax ; jne 0x465ac1 ; mov eax, 0x48 ; syscall
0x0000000000465be6 : test eax, eax ; jne 0x465c09 ; mov eax, 3 ; syscall
0x0000000000466559 : test eax, eax ; jne 0x466579 ; mov eax, 0x17 ; syscall
0x0000000000467e46 : test eax, eax ; jne 0x467e69 ; mov eax, 0x2a ; syscall
0x0000000000468030 : test eax, eax ; jne 0x46802b ; pop rdx ; pop r10 ; ret
0x0000000000491745 : test eax, eax ; jne 0x4917af ; mov eax, 0x101 ; syscall
0x0000000000497d30 : test eax, eax ; js 0x497d47 ; pop rbx ; ret
0x000000000040d4a2 : test eax, eax ; sete al ; add rsp, 8 ; ret
0x0000000000407f83 : test eax, eax ; setg al ; ret
0x000000000040478c : test eax, eax ; setne al ; add rsp, 8 ; ret
0x000000000049a04d : test eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000486055 : test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x000000000048c61a : test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x0000000000466819 : test ebp, ebp ; jne 0x466838 ; mov rdi, qword ptr [rbx] ; call r12
0x0000000000467384 : test ebp, ebp ; jne 0x4673b0 ; mov rdi, qword ptr [rbx] ; call r12
0x00000000004673b7 : test ebp, ebp ; jne 0x467409 ; mov rdi, qword ptr [rbp] ; call r12
0x00000000004673e3 : test ebp, ebp ; jne 0x467469 ; mov rdi, qword ptr [rbp] ; call r12
0x00000000004a7631 : test ebp, ebp ; jne 0x4a7620 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a81eb : test ebp, ebp ; jne 0x4a81d8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000436ef8 : test ebx, ebp ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000447300 : test ebx, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000043dc00 : test ebx, edi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000043d6f8 : test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000471589 : test ecx, eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000494078 : test ecx, eax ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x0000000000460bc2 : test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000040d786 : test ecx, ecx ; cmovne eax, edx ; ret
0x000000000040d556 : test ecx, ecx ; jne 0x40d51b ; xor eax, eax ; ret
0x00000000004906f9 : test ecx, ecx ; jne 0x4906b8 ; mov rax, rdx ; ret
0x00000000004ad489 : test ecx, edi ; jmp rax
0x00000000004150c3 : test edi, ecx ; ret
0x000000000040dd89 : test edi, edi ; jne 0x40dd7e ; xor eax, eax ; ret
0x000000000046683f : test edi, edi ; jne 0x466889 ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000466867 : test edi, edi ; jne 0x4668a9 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000046746f : test edi, edi ; jne 0x4674da ; mov rdi, qword ptr [r13] ; call r12
0x000000000046749f : test edi, edi ; jne 0x46750b ; mov rdi, qword ptr [r13] ; call r12
0x000000000049b4aa : test edi, edi ; jne 0x49b485 ; ret
0x00000000004a081d : test edi, edi ; mov byte ptr [rsi], al ; jne 0x4a0811 ; mov rax, rsi ; ret
0x00000000004150d0 : test edx, eax ; ret
0x00000000004ae405 : test edx, edi ; push qword ptr [rax] ; xchg edx, edi ; call rax
0x000000000045c9b2 : test edx, edx ; je 0x45c9c1 ; bsf eax, edx ; ret
0x000000000045ca5b : test edx, edx ; je 0x45ca78 ; bsf rax, rdx ; ret
0x00000000004691da : test edx, edx ; je 0x4691f1 ; lea rdi, [rcx + rax + 0x20] ; jmp rdx
0x000000000048f8aa : test edx, edx ; je 0x48f8d8 ; bsf rax, rdx ; ret
0x0000000000407247 : test edx, edx ; jne 0x407255 ; ret
0x0000000000407267 : test edx, edx ; jne 0x407275 ; ret
0x00000000004072ba : test edx, edx ; jne 0x4072c5 ; ret
0x00000000004072da : test edx, edx ; jne 0x4072e5 ; ret
0x00000000004072fa : test edx, edx ; jne 0x407305 ; ret
0x000000000040731a : test edx, edx ; jne 0x407325 ; ret
0x000000000040a757 : test edx, edx ; jne 0x40a765 ; ret
0x000000000040a777 : test edx, edx ; jne 0x40a785 ; ret
0x000000000040a7ca : test edx, edx ; jne 0x40a7d5 ; ret
0x000000000040a7ea : test edx, edx ; jne 0x40a7f5 ; ret
0x000000000040a80a : test edx, edx ; jne 0x40a815 ; ret
0x000000000040a82a : test edx, edx ; jne 0x40a835 ; ret
0x0000000000430803 : test edx, edx ; jne 0x430815 ; ret
0x000000000043249f : test edx, edx ; jne 0x432495 ; ret
0x000000000048ca9f : test edx, edx ; jne 0x48ca95 ; ret
0x000000000049045a : test edx, edx ; jne 0x490455 ; ret
0x000000000040dcce : test edx, edx ; jns 0x40dcae ; ret
0x0000000000460bb5 : test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000475ca8 : test esi, esi ; je 0x475cb2 ; call rsi
0x0000000000407287 : test esi, esi ; jne 0x407295 ; ret
0x000000000040a797 : test esi, esi ; jne 0x40a7a5 ; ret
0x000000000048f7a1 : test esi, esi ; jne 0x48f7b0 ; xor rax, rax ; ret
0x0000000000490461 : test esi, esi ; jne 0x490470 ; xor rax, rax ; ret
0x000000000047ac84 : test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x0000000000460bcf : test esp, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x00000000004470e7 : test r8d, r8d ; je 0x4470f5 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000040d785 : test r9d, r9d ; cmovne eax, edx ; ret
0x00000000004906f8 : test r9d, r9d ; jne 0x4906b9 ; mov rax, rdx ; ret
0x00000000004ceed8 : test rax, 0x5cb40000 ; clc ; jmp qword ptr [rsi]
0x000000000040040b : test rax, rax ; je 0x400417 ; call rax
0x0000000000403f55 : test rax, rax ; je 0x403f67 ; mov rdi, rbx ; call rax
0x0000000000404628 : test rax, rax ; je 0x404636 ; pop rbx ; ret
0x0000000000404635 : test rax, rax ; je 0x404643 ; call rax
0x000000000043edc0 : test rax, rax ; je 0x43edd9 ; lea rax, [rdx - 0x10] ; ret
0x00000000004664c7 : test rax, rax ; je 0x4664d4 ; ret
0x0000000000475da3 : test rax, rax ; je 0x475daf ; call rax
0x00000000004771a8 : test rax, rax ; je 0x4771b4 ; call rax
0x00000000004a111f : test rax, rax ; je 0x4a1139 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a8160 : test rax, rax ; je 0x4a8171 ; call rax
0x00000000004333bb : test rax, rax ; jne 0x4333b6 ; ret
0x0000000000434353 : test rax, rax ; jne 0x43434e ; ret
0x0000000000466818 : test rbp, rbp ; jne 0x466839 ; mov rdi, qword ptr [rbx] ; call r12
0x0000000000467383 : test rbp, rbp ; jne 0x4673b1 ; mov rdi, qword ptr [rbx] ; call r12
0x00000000004a7630 : test rbp, rbp ; jne 0x4a7621 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a81ea : test rbp, rbp ; jne 0x4a81d9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040d555 : test rcx, rcx ; jne 0x40d51c ; xor eax, eax ; ret
0x000000000040dd88 : test rdi, rdi ; jne 0x40dd7f ; xor eax, eax ; ret
0x000000000049b4a9 : test rdi, rdi ; jne 0x49b486 ; ret
0x000000000045ca5a : test rdx, rdx ; je 0x45ca79 ; bsf rax, rdx ; ret
0x000000000048f8a9 : test rdx, rdx ; je 0x48f8d9 ; bsf rax, rdx ; ret
0x0000000000407246 : test rdx, rdx ; jne 0x407256 ; ret
0x0000000000407266 : test rdx, rdx ; jne 0x407276 ; ret
0x00000000004072b9 : test rdx, rdx ; jne 0x4072c6 ; ret
0x00000000004072d9 : test rdx, rdx ; jne 0x4072e6 ; ret
0x00000000004072f9 : test rdx, rdx ; jne 0x407306 ; ret
0x0000000000407319 : test rdx, rdx ; jne 0x407326 ; ret
0x000000000040a756 : test rdx, rdx ; jne 0x40a766 ; ret
0x000000000040a776 : test rdx, rdx ; jne 0x40a786 ; ret
0x000000000040a7c9 : test rdx, rdx ; jne 0x40a7d6 ; ret
0x000000000040a7e9 : test rdx, rdx ; jne 0x40a7f6 ; ret
0x000000000040a809 : test rdx, rdx ; jne 0x40a816 ; ret
0x000000000040a829 : test rdx, rdx ; jne 0x40a836 ; ret
0x0000000000430802 : test rdx, rdx ; jne 0x430816 ; ret
0x000000000043249e : test rdx, rdx ; jne 0x432496 ; ret
0x000000000048ca9e : test rdx, rdx ; jne 0x48ca96 ; ret
0x0000000000475ca7 : test rsi, rsi ; je 0x475cb3 ; call rsi
0x0000000000407286 : test rsi, rsi ; jne 0x407296 ; ret
0x000000000040a796 : test rsi, rsi ; jne 0x40a7a6 ; ret
0x000000000048f7a0 : test rsi, rsi ; jne 0x48f7b1 ; xor rax, rax ; ret
0x0000000000490460 : test rsi, rsi ; jne 0x490471 ; xor rax, rax ; ret
0x0000000000407e98 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; pop r13 ; pop r14 ; ret
0x0000000000431553 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x000000000045456a : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000046331c : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000462ce5 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000463ea1 : vmovdqu xmmword ptr [rdi], xmm0 ; vzeroupper ; ret
0x0000000000462ce9 : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000004634a8 : vmovdqu ymmword ptr [r11], ymm4 ; vzeroupper ; ret
0x000000000046354f : vmovdqu ymmword ptr [r11], ymm8 ; vzeroupper ; ret
0x0000000000454556 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000045453d : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x0000000000463285 : vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1 ; vzeroupper ; ret
0x0000000000463e0b : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0 ; vzeroupper ; ret
0x00000000004633f3 : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3 ; vzeroupper ; ret
0x00000000004633c5 : vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7 ; vzeroupper ; ret
0x0000000000463d92 : vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x0000000000462cdb : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000462cdf : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000463962 : vmovdqu64 zmmword ptr [r11], zmm4 ; vzeroupper ; ret
0x0000000000463a28 : vmovdqu64 zmmword ptr [r11], zmm8 ; vzeroupper ; ret
0x0000000000463f1d : vmovdqu64 zmmword ptr [rdi], zmm0 ; vzeroupper ; ret
0x0000000000462cf4 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000462cf8 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000454873 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000045470c : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000045450e : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x00000000004544d2 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00000000004549d5 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000462e98 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x0000000000462dfb : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x0000000000462c9a : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000045abb1 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x00000000004476e8 : vzeroupper ; ret
0x00000000004478c0 : vzeroupper ; xor eax, eax ; ret
0x0000000000402381 : wait ; sbb al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000408150 : xadd dword ptr [rdi + 0x10], eax ; test eax, eax ; jle 0x408176 ; ret
0x0000000000446733 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000459e5f : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000446823 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000446643 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000047c532 : xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000045baac : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000045b2cc : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000045b6bc : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045aedc : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004998ac : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000464122 : xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x000000000044708b : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000045a9bf : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000045a19f : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000045997f : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000046bc68 : xchg byte ptr [rax - 0x75], cl ; ret
0x0000000000446be3 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000045b07b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000045a4df : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000406816 : xchg byte ptr [rbp + rbp], bl ; ret
0x0000000000446373 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x0000000000459cbf : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000045949f : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000045a67f : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x0000000000446dc3 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000446553 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00000000004adef4 : xchg byte ptr [rbx - 6], ah ; call qword ptr [rsi]
0x000000000049cf4a : xchg byte ptr [rcx + 0x38000000], dh ; retf 0x850f
0x0000000000418ebc : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x0000000000446fa3 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004c0e35 : xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x000000000045b56c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045ad8c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045be9c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000470e43 : xchg byte ptr [rdi], dl ; or eax, 0xea810000 ; ret 0
0x0000000000446eb3 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004ad9fc : xchg byte ptr [rdx + rdi*8], bh ; call qword ptr [rsi]
0x00000000004597df : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000047c549 : xchg byte ptr [rdx], ah ; and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x00000000004467f5 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004468e5 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000446705 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000436cf5 : xchg byte ptr [rsi - 0x9fffffd], dh ; ret 0xf08
0x0000000000459915 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045a615 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045a135 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045b46d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000471f35 : xchg byte ptr [rsi], bl ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000045bd9d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000446463 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x00000000004531df : xchg cl, al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000045a955 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000459c55 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000459775 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045a475 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000045b5bd : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000045addd : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004ad59c : xchg dl, al ; stc ; inc dword ptr [rdi] ; ret
0x0000000000446615 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000446435 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000446525 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000446345 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x000000000048b549 : xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x000000000048a89f : xchg dword ptr [rax - 0x77000000], ecx ; ret 0x349
0x000000000041dfe3 : xchg dword ptr [rax - 0x7d], ecx ; ret
0x00000000004aaaac : xchg dword ptr [rax - 0xa], esi ; call rax
0x0000000000497746 : xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x00000000004c0e38 : xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x000000000046bd54 : xchg dword ptr [rbp + rcx*4 + 0x34], ecx ; ret
0x00000000004c09bf : xchg dword ptr [rbp - 0x5b], ebx ; xchg eax, ebp ; retf 0x33e6
0x000000000047e43c : xchg dword ptr [rbx - 0x76fffff4], ebp ; ret 0x349
0x00000000004bfc2c : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x000000000041756a : xchg dword ptr [rcx + rax - 8], ecx ; jmp rax
0x00000000004350c5 : xchg dword ptr [rdi + 0x2a], edx ; add bl, dh ; ret
0x000000000046802e : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x46802d ; pop rdx ; pop r10 ; ret
0x000000000048b734 : xchg dword ptr [rdi], esi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x0000000000485daa : xchg dword ptr [rdx + rbx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000047efb4 : xchg dword ptr [rdx - 0x77000000], edx ; ret 0x349
0x000000000040491b : xchg dword ptr [rdx], eax ; ret
0x0000000000406814 : xchg dword ptr [rip + 0x2d5c86], eax ; ret
0x0000000000404ef5 : xchg dword ptr [rip - 0x38b80000], eax ; ret 0x6fb0
0x0000000000494d90 : xchg dword ptr [rip - 0x76fffffd], edx ; ret 0xe8c0
0x0000000000488a5c : xchg dword ptr [rsi - 0x76ffffe1], ecx ; ret 0x349
0x00000000004bfdcb : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000004c0109 : xchg eax, ebp ; jge 0x4c00ec ; push r8 ; xor byte ptr [rcx], ah ; retf
0x000000000043473a : xchg eax, ebp ; mov dword ptr [rdx], ebp ; add byte ptr [rcx], al ; ret
0x000000000047520b : xchg eax, ebp ; push 0x4cffffff ; mov edi, esi ; call rdx
0x00000000004012a4 : xchg eax, ebp ; ret
0x00000000004a6ce0 : xchg eax, ebp ; ret 0x145
0x0000000000493dca : xchg eax, ebp ; ret 0x2041
0x0000000000493e8a : xchg eax, ebp ; ret 0x2044
0x0000000000465e5c : xchg eax, ebp ; ret 0x3948
0x0000000000439d4b : xchg eax, ebp ; ret 0x8348
0x0000000000495a50 : xchg eax, ebp ; ret 0xc283
0x000000000043cf0d : xchg eax, ebp ; ret 0xd020
0x00000000004291f5 : xchg eax, ebp ; ret 0xd021
0x000000000048063a : xchg eax, ebp ; ret 0xd120
0x000000000042bb02 : xchg eax, ebp ; ret 0xdaf7
0x000000000046a061 : xchg eax, ebp ; ret 0xe1eb
0x0000000000418cca : xchg eax, ebp ; ret 0xf45
0x00000000004c09c2 : xchg eax, ebp ; retf 0x33e6
0x0000000000401939 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000043481d : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x00000000004c1e1c : xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x000000000042d0c2 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000487e17 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x0000000000448270 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x00000000004d3b39 : xchg eax, ebx ; cld ; jmp qword ptr [rsi]
0x00000000004c27ac : xchg eax, ebx ; in al, dx ; retf 0xae32
0x000000000046004c : xchg eax, ebx ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000449a12 : xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004c1cc3 : xchg eax, ebx ; mov ebx, 0x1b5c347e ; jmp 0x4c1c9d
0x0000000000477de8 : xchg eax, ebx ; ret 0x3948
0x000000000042debc : xchg eax, ebx ; ret 0x3949
0x000000000043c660 : xchg eax, ebx ; ret 0x3d83
0x000000000048d345 : xchg eax, ebx ; ret 0x840
0x00000000004788cd : xchg eax, ebx ; ret 0x854d
0x0000000000438ff9 : xchg eax, ebx ; ret 0xffff
0x0000000000410d3d : xchg eax, ecx ; add rdx, rcx ; jmp rdx
0x000000000045aa61 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000404803 : xchg eax, ecx ; push rsp ; or al, byte ptr [rax] ; ret
0x000000000046addb : xchg eax, ecx ; retf 0
0x00000000004ad4b1 : xchg eax, ecx ; stc ; call rax
0x000000000045918f : xchg eax, ecx ; sub eax, edx ; ret
0x000000000042bc02 : xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000004186bc : xchg eax, edi ; add al, 0 ; add byte ptr [rax - 0x7bf0df06], al ; retf 4
0x0000000000430874 : xchg eax, edi ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000041146d : xchg eax, edi ; add rax, rdi ; jmp rax
0x0000000000428571 : xchg eax, edi ; add rdx, rdi ; jmp rdx
0x000000000049b4cd : xchg eax, edi ; and byte ptr [rax + rax], ah ; mov qword ptr [rsi], rax ; ret
0x00000000004c0175 : xchg eax, edi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4c0143 ; mov ecx, 0x5b92ac50 ; retf
0x0000000000486c65 : xchg eax, edi ; idiv edi ; jmp 0x486c31
0x0000000000440795 : xchg eax, edi ; out 0, al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000004144a8 : xchg eax, edi ; rcr byte ptr [rax + rax], 0x84 ; ror byte ptr [rdi], 0x84 ; retf
0x000000000043ae8b : xchg eax, edi ; ret 0x394c
0x000000000041445a : xchg eax, edi ; ret 0xda80
0x000000000043b371 : xchg eax, edi ; ret 0xfae9
0x000000000043b959 : xchg eax, edi ; ret 0xfbe9
0x00000000004c0add : xchg eax, edi ; retf 0xe152
0x0000000000473660 : xchg eax, edi ; retf 3
0x0000000000467acb : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000004c1e1b : xchg eax, edi ; xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000004c0278 : xchg eax, edi ; xchg eax, esp ; ret
0x000000000049703f : xchg eax, edx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0xed75
0x00000000004ada84 : xchg eax, edx ; cmp edi, edx ; jmp qword ptr [rdx]
0x00000000004c1b3d : xchg eax, edx ; jae 0x4c1b1a ; push rsi ; pop rdx ; je 0x4c1b0f ; ret 0xacfc
0x00000000004c017c : xchg eax, edx ; pop rbx ; retf
0x00000000004047f3 : xchg eax, edx ; push rsp ; or al, byte ptr [rax] ; ret
0x000000000049ecd6 : xchg eax, edx ; ret 0x2948
0x000000000049e9ae : xchg eax, edx ; ret 0x294c
0x0000000000420f08 : xchg eax, edx ; ret 0x8548
0x000000000049f1b5 : xchg eax, edx ; ret 0x8949
0x0000000000467ace : xchg eax, edx ; ret 0xd029
0x00000000004bfc2f : xchg eax, edx ; ret 0xf869
0x000000000044061a : xchg eax, edx ; retf
0x0000000000462bbd : xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000049e6aa : xchg eax, edx ; std ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x00000000004470ec : xchg eax, edx ; sub eax, edx ; ret
0x0000000000448570 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004507a3 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000472c51 : xchg eax, esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000004641b4 : xchg eax, esi ; add rax, rsi ; jmp rax
0x00000000004c1f28 : xchg eax, esi ; jnp 0x4c1f77 ; retf 0x99e0
0x000000000044862d : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044858b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004adf18 : xchg eax, esi ; pop rdi ; cli ; jmp qword ptr [rsi]
0x000000000040ff37 : xchg eax, esi ; ret 0x8966
0x0000000000464e11 : xchg eax, esi ; ret 0xc085
0x00000000004c24cc : xchg eax, esi ; ret 0xcd11
0x0000000000464e6f : xchg eax, esi ; ret 0xd284
0x000000000043e3fb : xchg eax, esi ; retf 6
0x00000000004485dc : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000048e91e : xchg eax, esi ; sbb esi, edi ; dec dword ptr [rax + 1] ; ret
0x000000000046ed1c : xchg eax, esp ; add al, byte ptr [rax] ; add al, ch ; retf
0x0000000000488c37 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x00000000004c6b4c : xchg eax, esp ; add dh, ah ; call qword ptr [rdx]
0x00000000004d134c : xchg eax, esp ; cli ; call qword ptr [rcx]
0x00000000004aebe8 : xchg eax, esp ; push 0x6894fffb ; sti ; call rdx
0x00000000004aec20 : xchg eax, esp ; push 0x6894fffb ; sti ; jmp qword ptr [rax]
0x00000000004aebec : xchg eax, esp ; push 0x68d2fffb ; sti ; call rdx
0x00000000004aee8c : xchg eax, esp ; push 0x68fafffb ; sti ; jmp rsi
0x00000000004c26df : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4c2670 ; ret 0x48f
0x0000000000482a92 : xchg eax, esp ; ret
0x000000000046da1b : xchg eax, esp ; ret 0x1f0f
0x0000000000465f2b : xchg eax, esp ; ret 0x2044
0x000000000049d0fc : xchg eax, esp ; ret 0x3d
0x00000000004389be : xchg eax, esp ; ret 0x3de9
0x0000000000410c92 : xchg eax, esp ; ret 0x453c
0x0000000000489def : xchg eax, esp ; ret 0x7f3c
0x0000000000468928 : xchg eax, esp ; ret 0x8440
0x000000000040ff89 : xchg eax, esp ; ret 0x8b48
0x00000000004a0d61 : xchg eax, esp ; ret 0x950f
0x0000000000405105 : xchg eax, esp ; ret 0xb60f
0x0000000000462bc0 : xchg eax, esp ; ret 0xc085
0x0000000000466251 : xchg eax, esp ; ret 0xc221
0x00000000004928e5 : xchg eax, esp ; ret 0xc283
0x0000000000465d68 : xchg eax, esp ; ret 0xca21
0x000000000040dd35 : xchg eax, esp ; ret 0xd009
0x000000000041c503 : xchg eax, esp ; ret 0xd284
0x000000000046c4a6 : xchg eax, esp ; ret 0xd5e9
0x000000000042c4fd : xchg eax, esp ; ret 0xdaf7
0x0000000000418c6b : xchg eax, esp ; ret 0xf45
0x00000000004ca4ac : xchg eax, esp ; ret 0xfff4
0x000000000040093d : xchg eax, esp ; rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x00000000004027e9 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000043ee0a : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x00000000004cf20c : xchg eax, esp ; stc ; call rsp
0x00000000004c0103 : xchg eax, esp ; xlatb ; retf 0xa1eb
0x0000000000488ee2 : xchg ecx, esp ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x0000000000436dc4 : xchg edi, esp ; add al, byte ptr [rax] ; add dh, dh ; ret
0x00000000004ae409 : xchg edx, edi ; call rax
0x000000000040491a : xchg qword ptr [rdx], rax ; ret
0x0000000000406813 : xchg qword ptr [rip + 0x2d5c86], rax ; ret
0x0000000000470243 : xlatb ; add al, byte ptr [rax] ; add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000004bb439 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004498d9 : xlatb ; add r9, r11 ; jmp r9
0x00000000004919ef : xlatb ; ja 0x491a1c ; ret
0x0000000000462f23 : xlatb ; jb 0x462f2e ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000042885d : xlatb ; jmp rdi
0x00000000004c0ca3 : xlatb ; jo 0x4c0d1f ; mov ebp, 0xfb67d10d ; ret
0x00000000004a08a2 : xlatb ; mov byte ptr [rsi], al ; jne 0x4a0888 ; mov rax, rsi ; ret
0x000000000049223d : xlatb ; mov eax, 0x9480002 ; ret 0x850f
0x0000000000465031 : xlatb ; mov eax, esi ; syscall
0x0000000000465040 : xlatb ; mov eax, r8d ; syscall
0x00000000004c00b0 : xlatb ; out 0xb3, al ; retf 0xe80
0x000000000040dcd1 : xlatb ; ret
0x00000000004c2146 : xlatb ; ret 0x4e27
0x000000000048f4a7 : xlatb ; ret 0x94c
0x00000000004471ff : xlatb ; ret 0xc085
0x0000000000441d20 : xlatb ; ret 0xc148
0x0000000000447e84 : xlatb ; ret 0xe883
0x000000000045c9d4 : xlatb ; ret 0xf66
0x0000000000448048 : xlatb ; ret 0xff2d
0x000000000045c30d : xlatb ; retf
0x00000000004c0104 : xlatb ; retf 0xa1eb
0x000000000048f584 : xlatb ; retf 0xc148
0x000000000048f722 : xlatb ; retf 0xc985
0x00000000004c1032 : xlatb ; retf 0xdf7f
0x00000000004409a0 : xlatb ; retf 0xead3
0x000000000048f5f5 : xlatb ; retf 0xfdc5
0x00000000004475e1 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000048f655 : xlatb ; rol ch, cl ; std ; xlatb ; ret
0x00000000004473c3 : xlatb ; rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x0000000000447902 : xlatb ; rol dword ptr [rbp - 0x3a378a40], 0xfd ; xlatb ; ret 0xc085
0x000000000045c752 : xlatb ; rol dword ptr [rbp - 0x3a678a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000460b76 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000441c06 : xlatb ; sal bh, 1 ; ret 0x8000
0x0000000000441ac6 : xlatb ; sal bh, 1 ; ret 0xc000
0x0000000000441986 : xlatb ; sal bh, 1 ; ret 0xe000
0x0000000000441846 : xlatb ; sal bh, 1 ; ret 0xf000
0x0000000000441706 : xlatb ; sal bh, 1 ; ret 0xf800
0x00000000004415c6 : xlatb ; sal bh, 1 ; ret 0xfc00
0x0000000000441486 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000441346 : xlatb ; sal bh, 1 ; ret 0xff00
0x0000000000441206 : xlatb ; sal bh, 1 ; ret 0xff80
0x00000000004410c6 : xlatb ; sal bh, 1 ; ret 0xffc0
0x0000000000440f86 : xlatb ; sal bh, 1 ; ret 0xffe0
0x0000000000440e46 : xlatb ; sal bh, 1 ; ret 0xfff0
0x0000000000440d06 : xlatb ; sal bh, 1 ; ret 0xfff8
0x0000000000440bc6 : xlatb ; sal bh, 1 ; ret 0xfffc
0x0000000000440a86 : xlatb ; sal bh, 1 ; ret 0xfffe
0x0000000000460b72 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x000000000048f445 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000048f456 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000044077a : xor ah, byte ptr [rdi] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004bfc2a : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x0000000000492408 : xor al, 0x34 ; std ; dec dword ptr [rax + 0x39] ; ret
0x00000000004c1cc6 : xor al, 0x5c ; sbb ebp, ebx ; retf
0x0000000000476aa2 : xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x000000000048b38b : xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000041a202 : xor al, 0xcb ; mov rsi, qword ptr [r14] ; call r12
0x00000000004c0e0a : xor al, 0xd8 ; ret
0x00000000004c51a4 : xor al, 0xdd ; jmp qword ptr [rbx]
0x0000000000475ca5 : xor al, 0xf0 ; test rsi, rsi ; je 0x475cb5 ; call rsi
0x000000000046f81e : xor al, 0xf6 ; ret
0x00000000004adbf5 : xor al, 0xfa ; call qword ptr [rax + 0x10fffa33]
0x00000000004adbf1 : xor al, 0xfa ; call qword ptr [rax]
0x00000000004addf1 : xor al, 0xfa ; jmp qword ptr [rax + 0x20fffa33]
0x00000000004added : xor al, 0xfa ; jmp qword ptr [rax]
0x00000000004adc71 : xor al, 0xfa ; jmp rdx
0x0000000000492409 : xor al, 0xfd ; dec dword ptr [rax + 0x39] ; ret
0x0000000000407bde : xor al, 1 ; je 0x407bd5 ; ret
0x000000000040c91e : xor al, 1 ; je 0x40c915 ; ret
0x00000000004c6c1c : xor al, 3 ; hlt ; call qword ptr [rdx]
0x000000000040b23c : xor al, byte ptr [rax] ; pop rbx ; ret
0x0000000000490f60 : xor al, ch ; retf 0xfaa8
0x000000000041f53b : xor al, ch ; scasd eax, dword ptr [rdi] ; retf
0x00000000004ae4a0 : xor al, cl ; cli ; inc dword ptr [rax - 0x2f000537] ; retf 0xfffa
0x00000000004adc05 : xor bh, dl ; call qword ptr [rax + 0x10fffa31]
0x00000000004adc01 : xor bh, dl ; call qword ptr [rax]
0x00000000004ade01 : xor bh, dl ; jmp qword ptr [rax + 0x20fffa31]
0x00000000004addfd : xor bh, dl ; jmp qword ptr [rax]
0x00000000004adc81 : xor bh, dl ; jmp rdx
0x000000000044744c : xor bl, al ; nop ; xor eax, eax ; ret
0x000000000044731d : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x000000000042d322 : xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x0000000000463d04 : xor byte ptr [r8 - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000478548 : xor byte ptr [rax + 0x39], cl ; ret 0x8d48
0x000000000045c181 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x000000000045c5e2 : xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x000000000042d323 : xor byte ptr [rax + 1], cl ; ret 0x8b49
0x00000000004921a4 : xor byte ptr [rax + 1], cl ; retf
0x00000000004046da : xor byte ptr [rax - 0x75], cl ; clc ; nop ; pop rbx ; ret
0x0000000000466d5a : xor byte ptr [rax - 0x75], cl ; jge 0x466d10 ; mov r12d, r14d ; call r15
0x000000000045cd3f : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000000004901df : xor byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x00000000004a6c48 : xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x000000000048da82 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000468913 : xor byte ptr [rax - 0x7d], cl ; ret
0x0000000000469d0f : xor byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041e218 : xor byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000463d05 : xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x000000000042d67b : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000429ca9 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000429be3 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000049042c : xor byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x0000000000429ccf : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x0000000000464203 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004c45bc : xor byte ptr [rax], al ; add byte ptr [rax], al ; sal r11b, cl ; call qword ptr [rdx]
0x000000000048d9ba : xor byte ptr [rax], al ; je 0x48d9c5 ; ret
0x000000000040a549 : xor byte ptr [rax], al ; ret
0x00000000004ad888 : xor byte ptr [rax], cl ; cli ; call qword ptr [rax]
0x00000000004addd0 : xor byte ptr [rax], dh ; cli ; jmp qword ptr [rax + 0x10fffa2f]
0x000000000041a61e : xor byte ptr [rbp + 0x27], dh ; mov rax, qword ptr [rsi + 0x10] ; ret
0x00000000004cf2bc : xor byte ptr [rbp + 0x49900000], ch ; stc ; call qword ptr [rax]
0x0000000000463175 : xor byte ptr [rbp + 0xf], al ; adc dword ptr [rbx], eax ; ret
0x0000000000482c99 : xor byte ptr [rbx + 0x291c2454], cl ; ret 0xe683
0x000000000040dae5 : xor byte ptr [rbx + 0x48014047], al ; mov eax, dword ptr [rax + rcx*8] ; ret
0x00000000004171bb : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000046c1fa : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004ad498 : xor byte ptr [rbx + 0x7640fff9], cl ; stc ; jmp qword ptr [rax]
0x0000000000488bde : xor byte ptr [rbx - 0x79f0f608], al ; ret
0x00000000004b0844 : xor byte ptr [rbx - 4], ah ; push qword ptr [rax + 0x62] ; cld ; jmp qword ptr [rax]
0x00000000004a6a65 : xor byte ptr [rcx + 0x21], cl ; ror byte ptr [rax + 0x21], cl ; ret 0xc148
0x00000000004946a3 : xor byte ptr [rcx + 0x29], cl ; ret
0x000000000041f24b : xor byte ptr [rcx - 0x75], al ; push rdi ; adc byte ptr [rdi], cl ; retf 0xd289
0x00000000004c010e : xor byte ptr [rcx], ah ; retf
0x000000000042d67c : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000042eae7 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000042bc03 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000048cb60 : xor byte ptr [rdi], cl ; ret 0x4389
0x00000000004ad4f4 : xor byte ptr [rdx - 0x44df0007], bh ; stc ; call qword ptr [rax]
0x00000000004af3a0 : xor byte ptr [rdx - 0x60ab0005], ah ; sti ; call qword ptr [rax]
0x00000000004c4fbc : xor byte ptr [rdx], cl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; fdivr st(3), st(0) ; jmp qword ptr [rsi]
0x00000000004adde8 : xor byte ptr [rip + 0x34a0fffa], dh ; cli ; jmp qword ptr [rax]
0x00000000004ad800 : xor byte ptr [rip + 0x6f0fffa], al ; cli ; call rax
0x00000000004d019f : xor byte ptr [rsi + 0x380e4106], al ; add dword ptr [rdi], 3 ; ret 0xa01
0x000000000044831f : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000048f40c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000044731e : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000004c1e1e : xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000004ad45c : xor byte ptr [rsi - 7], bl ; call qword ptr [rax]
0x00000000004c6f00 : xor byte ptr [rsp + rsi*8], al ; jmp qword ptr [rax]
0x00000000004ad72c : xor cl, ah ; stc ; jmp qword ptr [rax]
0x000000000042e0ad : xor cl, byte ptr [rax - 0x77] ; ret 0x2948
0x0000000000403bf2 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000499da3 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x00000000004780b7 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x00000000004196ae : xor cl, byte ptr [rax] ; jne 0x4196d3 ; mov rax, qword ptr [rax] ; ret
0x000000000043479e : xor cl, byte ptr [rcx + 0x2a] ; add byte ptr [rax], al ; ret
0x0000000000420f30 : xor cl, ch ; ret
0x00000000004ad76c : xor cl, cl ; stc ; inc dword ptr [rax - 0x2f000636] ; retf
0x00000000004ad93c : xor dh, 0xf9 ; call rax
0x00000000004cc605 : xor dh, dh ; call qword ptr [rax]
0x0000000000476f09 : xor dh, dh ; ret 0x4002
0x00000000004ad6ac : xor dl, ah ; stc ; call qword ptr [rax]
0x00000000004adc91 : xor dl, bh ; call rdx
0x00000000004addd1 : xor dl, bh ; jmp qword ptr [rax + 0x10fffa2f]
0x00000000004ade0d : xor dl, bh ; jmp qword ptr [rax]
0x00000000004adc15 : xor dl, bh ; push qword ptr [rax + 0x2f] ; cli ; jmp rax
0x00000000004c4930 : xor dl, bl ; jmp qword ptr [rax]
0x000000000043f7da : xor dl, byte ptr [rbx] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000049c15e : xor dl, dh ; jmp r11
0x000000000049c270 : xor dl, dh ; ret
0x000000000048226d : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0xe7e9
0x00000000004c10b6 : xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x0000000000468cdf : xor dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000041971d : xor dword ptr [rax], ecx ; jne 0x41972c ; mov qword ptr [rax], rdx ; ret
0x000000000040a13c : xor dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x0000000000437ed9 : xor dword ptr [rbx - 0x76b7f020], eax ; ret 0x8948
0x000000000043f862 : xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000440521 : xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000487bee : xor eax, 0x24fc8d ; jmp rax
0x00000000004adbed : xor eax, 0x3490fffa ; cli ; call qword ptr [rax]
0x00000000004adde9 : xor eax, 0x34a0fffa ; cli ; jmp qword ptr [rax]
0x00000000004adc65 : xor eax, 0x3572fffa ; cli ; jmp rdx
0x0000000000463733 : xor eax, 0x48000002 ; mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004088d7 : xor eax, 0x48ffffff ; mov eax, ebx ; pop rbx ; ret
0x000000000046686a : xor eax, 0x7d8b48 ; call r12
0x0000000000481b7a : xor eax, 0x89ffffe6 ; ret
0x00000000004c7ab1 : xor eax, 0xe0c0000 ; hlt ; jmp qword ptr [rax]
0x00000000004a8e84 : xor eax, 0xe4e80000 ; ret
0x00000000004c7b31 : xor eax, 0xe8c0000 ; hlt ; call qword ptr [rcx]
0x00000000004a8e74 : xor eax, 0xf4e80000 ; ret
0x0000000000429ca6 : xor eax, dword ptr [0x30] ; call rax
0x00000000004c78e1 : xor eax, dword ptr [rax] ; add ah, ch ; or al, 0xf4 ; jmp qword ptr [rdx]
0x00000000004c78b1 : xor eax, dword ptr [rax] ; add ah, cl ; or al, 0xf4 ; call qword ptr [rdx]
0x00000000004c78c5 : xor eax, dword ptr [rax] ; add al, bl ; or al, 0xf4 ; jmp qword ptr [rdx]
0x000000000041a4ad : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000041023a : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004795f9 : xor eax, eax ; add rsp, 8 ; ret
0x000000000040899a : xor eax, eax ; call 0x404c94
0x00000000004919eb : xor eax, eax ; cmp rdi, rdx ; ja 0x491a20 ; ret
0x0000000000468007 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x0000000000430730 : xor eax, eax ; jmp 0x4306fa
0x0000000000491dd8 : xor eax, eax ; leave ; ret
0x0000000000467ef1 : xor eax, eax ; mov eax, 0x2c ; syscall
0x000000000040d84c : xor eax, eax ; mov qword ptr [r10 + 0x18], rdx ; ret
0x000000000048f1f2 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004210cf : xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000004035e4 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040de20 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041073c : xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004046ab : xor eax, eax ; pop rbx ; ret
0x0000000000403628 : xor eax, eax ; ret
0x0000000000441f2e : xor eax, eax ; sub eax, ecx ; ret
0x000000000046584a : xor eax, eax ; syscall
0x000000000040dccc : xor eax, eax ; test edx, edx ; jns 0x40dcb0 ; ret
0x0000000000430800 : xor eax, eax ; test rdx, rdx ; jne 0x430818 ; ret
0x000000000044780c : xor eax, eax ; vzeroupper ; ret
0x0000000000410975 : xor ebp, ebp ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000475868 : xor ebp, ecx ; ret 0xfffd
0x000000000041bc40 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411394 : xor ecx, dword ptr [rax - 0x7d] ; ret 0x3101
0x0000000000480b0c : xor ecx, dword ptr [rdi] ; mov esi, 0xc08349c8 ; add dword ptr [rcx], edi ; retf
0x0000000000474539 : xor ecx, ecx ; call r15
0x000000000048ffe9 : xor ecx, ecx ; xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000400b88 : xor edi, dword ptr [rax + 0x5d01002d] ; ret
0x0000000000468cbc : xor edi, dword ptr [rax] ; ret 0x2f75
0x000000000041c538 : xor edi, edi ; mov eax, edx ; syscall
0x000000000040ddca : xor edi, edi ; mov rax, rdi ; ret
0x0000000000466696 : xor edi, edi ; or r10d, 0x40 ; mov eax, ecx ; syscall
0x0000000000436ba1 : xor edi, edi ; pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x00000000004663bc : xor edi, edi ; syscall
0x00000000004adbfd : xor edi, edx ; call qword ptr [rax + 0x10fffa32]
0x00000000004adbf9 : xor edi, edx ; call qword ptr [rax]
0x00000000004addf9 : xor edi, edx ; jmp qword ptr [rax + 0x20fffa32]
0x00000000004addf5 : xor edi, edx ; jmp qword ptr [rax]
0x00000000004adc79 : xor edi, edx ; jmp rdx
0x0000000000429be0 : xor edx, dword ptr [0x30] ; call rdx
0x00000000004adc09 : xor edx, edi ; call qword ptr [rax]
0x00000000004ade09 : xor edx, edi ; jmp qword ptr [rax + 0x20fffa30]
0x00000000004ade05 : xor edx, edi ; jmp qword ptr [rax]
0x00000000004adc89 : xor edx, edi ; jmp rdx
0x000000000046b483 : xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x0000000000433d56 : xor edx, edx ; call 4
0x0000000000433153 : xor edx, edx ; jmp rax
0x000000000048ffeb : xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x000000000040d95c : xor edx, edx ; mov qword ptr [r10 + 0x48], rdx ; mov rax, rdx ; ret
0x000000000040d801 : xor edx, edx ; mov rax, r10 ; ret
0x000000000043b45c : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000040d8c0 : xor edx, edx ; mov rax, rdx ; ret
0x000000000047d90c : xor esi, esi ; jmp rax
0x000000000040d800 : xor r10d, r10d ; mov rax, r10 ; ret
0x0000000000467ef0 : xor r8d, r8d ; mov eax, 0x2c ; syscall
0x0000000000474538 : xor r9d, r9d ; call r15
0x0000000000429ca5 : xor rax, qword ptr [0x30] ; call rax
0x0000000000429ca4 : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000460b90 : xor rax, rax ; ret
0x0000000000429bdf : xor rdx, qword ptr [0x30] ; call rdx
0x0000000000429bde : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 13512
